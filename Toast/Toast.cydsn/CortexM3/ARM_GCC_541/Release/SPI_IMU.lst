ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc2leDoT.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"SPI_IMU.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	SPI_IMU_initVar
  20              		.bss
  21              		.type	SPI_IMU_initVar, %object
  22              		.size	SPI_IMU_initVar, 1
  23              	SPI_IMU_initVar:
  24 0000 00       		.space	1
  25              		.comm	SPI_IMU_swStatusTx,1,1
  26              		.comm	SPI_IMU_swStatusRx,1,1
  27              		.section	.text.SPI_IMU_Init,"ax",%progbits
  28              		.align	2
  29              		.global	SPI_IMU_Init
  30              		.thumb
  31              		.thumb_func
  32              		.type	SPI_IMU_Init, %function
  33              	SPI_IMU_Init:
  34              	.LFB0:
  35              		.file 1 "Generated_Source\\PSoC5\\SPI_IMU.c"
   1:Generated_Source\PSoC5/SPI_IMU.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/SPI_IMU.c **** * File Name: SPI_IMU.c
   3:Generated_Source\PSoC5/SPI_IMU.c **** * Version 2.50
   4:Generated_Source\PSoC5/SPI_IMU.c **** *
   5:Generated_Source\PSoC5/SPI_IMU.c **** * Description:
   6:Generated_Source\PSoC5/SPI_IMU.c **** *  This file provides all API functionality of the SPI Master component.
   7:Generated_Source\PSoC5/SPI_IMU.c **** *
   8:Generated_Source\PSoC5/SPI_IMU.c **** * Note:
   9:Generated_Source\PSoC5/SPI_IMU.c **** *  None.
  10:Generated_Source\PSoC5/SPI_IMU.c **** *
  11:Generated_Source\PSoC5/SPI_IMU.c **** ********************************************************************************
  12:Generated_Source\PSoC5/SPI_IMU.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC5/SPI_IMU.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC5/SPI_IMU.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC5/SPI_IMU.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC5/SPI_IMU.c **** *******************************************************************************/
  17:Generated_Source\PSoC5/SPI_IMU.c **** 
  18:Generated_Source\PSoC5/SPI_IMU.c **** #include "SPI_IMU_PVT.h"
  19:Generated_Source\PSoC5/SPI_IMU.c **** 
  20:Generated_Source\PSoC5/SPI_IMU.c **** #if(SPI_IMU_TX_SOFTWARE_BUF_ENABLED)
  21:Generated_Source\PSoC5/SPI_IMU.c ****     volatile uint8 SPI_IMU_txBuffer[SPI_IMU_TX_BUFFER_SIZE];
  22:Generated_Source\PSoC5/SPI_IMU.c ****     volatile uint8 SPI_IMU_txBufferFull;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc2leDoT.s 			page 2


  23:Generated_Source\PSoC5/SPI_IMU.c ****     volatile uint8 SPI_IMU_txBufferRead;
  24:Generated_Source\PSoC5/SPI_IMU.c ****     volatile uint8 SPI_IMU_txBufferWrite;
  25:Generated_Source\PSoC5/SPI_IMU.c **** #endif /* (SPI_IMU_TX_SOFTWARE_BUF_ENABLED) */
  26:Generated_Source\PSoC5/SPI_IMU.c **** 
  27:Generated_Source\PSoC5/SPI_IMU.c **** #if(SPI_IMU_RX_SOFTWARE_BUF_ENABLED)
  28:Generated_Source\PSoC5/SPI_IMU.c ****     volatile uint8 SPI_IMU_rxBuffer[SPI_IMU_RX_BUFFER_SIZE];
  29:Generated_Source\PSoC5/SPI_IMU.c ****     volatile uint8 SPI_IMU_rxBufferFull;
  30:Generated_Source\PSoC5/SPI_IMU.c ****     volatile uint8 SPI_IMU_rxBufferRead;
  31:Generated_Source\PSoC5/SPI_IMU.c ****     volatile uint8 SPI_IMU_rxBufferWrite;
  32:Generated_Source\PSoC5/SPI_IMU.c **** #endif /* (SPI_IMU_RX_SOFTWARE_BUF_ENABLED) */
  33:Generated_Source\PSoC5/SPI_IMU.c **** 
  34:Generated_Source\PSoC5/SPI_IMU.c **** uint8 SPI_IMU_initVar = 0u;
  35:Generated_Source\PSoC5/SPI_IMU.c **** 
  36:Generated_Source\PSoC5/SPI_IMU.c **** volatile uint8 SPI_IMU_swStatusTx;
  37:Generated_Source\PSoC5/SPI_IMU.c **** volatile uint8 SPI_IMU_swStatusRx;
  38:Generated_Source\PSoC5/SPI_IMU.c **** 
  39:Generated_Source\PSoC5/SPI_IMU.c **** 
  40:Generated_Source\PSoC5/SPI_IMU.c **** /*******************************************************************************
  41:Generated_Source\PSoC5/SPI_IMU.c **** * Function Name: SPI_IMU_Init
  42:Generated_Source\PSoC5/SPI_IMU.c **** ********************************************************************************
  43:Generated_Source\PSoC5/SPI_IMU.c **** *
  44:Generated_Source\PSoC5/SPI_IMU.c **** * Summary:
  45:Generated_Source\PSoC5/SPI_IMU.c **** *  Inits/Restores default SPIM configuration provided with customizer.
  46:Generated_Source\PSoC5/SPI_IMU.c **** *
  47:Generated_Source\PSoC5/SPI_IMU.c **** * Parameters:
  48:Generated_Source\PSoC5/SPI_IMU.c **** *  None.
  49:Generated_Source\PSoC5/SPI_IMU.c **** *
  50:Generated_Source\PSoC5/SPI_IMU.c **** * Return:
  51:Generated_Source\PSoC5/SPI_IMU.c **** *  None.
  52:Generated_Source\PSoC5/SPI_IMU.c **** *
  53:Generated_Source\PSoC5/SPI_IMU.c **** * Side Effects:
  54:Generated_Source\PSoC5/SPI_IMU.c **** *  When this function is called it initializes all of the necessary parameters
  55:Generated_Source\PSoC5/SPI_IMU.c **** *  for execution. i.e. setting the initial interrupt mask, configuring the
  56:Generated_Source\PSoC5/SPI_IMU.c **** *  interrupt service routine, configuring the bit-counter parameters and
  57:Generated_Source\PSoC5/SPI_IMU.c **** *  clearing the FIFO and Status Register.
  58:Generated_Source\PSoC5/SPI_IMU.c **** *
  59:Generated_Source\PSoC5/SPI_IMU.c **** * Reentrant:
  60:Generated_Source\PSoC5/SPI_IMU.c **** *  No.
  61:Generated_Source\PSoC5/SPI_IMU.c **** *
  62:Generated_Source\PSoC5/SPI_IMU.c **** *******************************************************************************/
  63:Generated_Source\PSoC5/SPI_IMU.c **** void SPI_IMU_Init(void) 
  64:Generated_Source\PSoC5/SPI_IMU.c **** {
  36              		.loc 1 64 0
  37              		.cfi_startproc
  38              		@ args = 0, pretend = 0, frame = 0
  39              		@ frame_needed = 1, uses_anonymous_args = 0
  40 0000 80B5     		push	{r7, lr}
  41              		.cfi_def_cfa_offset 8
  42              		.cfi_offset 7, -8
  43              		.cfi_offset 14, -4
  44 0002 00AF     		add	r7, sp, #0
  45              		.cfi_def_cfa_register 7
  65:Generated_Source\PSoC5/SPI_IMU.c ****     /* Initialize the Bit counter */
  66:Generated_Source\PSoC5/SPI_IMU.c ****     SPI_IMU_COUNTER_PERIOD_REG = SPI_IMU_BITCTR_INIT;
  46              		.loc 1 66 0
  47 0004 084B     		ldr	r3, .L2
  48 0006 0F22     		movs	r2, #15
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc2leDoT.s 			page 3


  49 0008 1A70     		strb	r2, [r3]
  67:Generated_Source\PSoC5/SPI_IMU.c **** 
  68:Generated_Source\PSoC5/SPI_IMU.c ****     /* Init TX ISR  */
  69:Generated_Source\PSoC5/SPI_IMU.c ****     #if(0u != SPI_IMU_INTERNAL_TX_INT_ENABLED)
  70:Generated_Source\PSoC5/SPI_IMU.c ****         CyIntDisable         (SPI_IMU_TX_ISR_NUMBER);
  71:Generated_Source\PSoC5/SPI_IMU.c ****         CyIntSetPriority     (SPI_IMU_TX_ISR_NUMBER,  SPI_IMU_TX_ISR_PRIORITY);
  72:Generated_Source\PSoC5/SPI_IMU.c ****         (void) CyIntSetVector(SPI_IMU_TX_ISR_NUMBER, &SPI_IMU_TX_ISR);
  73:Generated_Source\PSoC5/SPI_IMU.c ****     #endif /* (0u != SPI_IMU_INTERNAL_TX_INT_ENABLED) */
  74:Generated_Source\PSoC5/SPI_IMU.c **** 
  75:Generated_Source\PSoC5/SPI_IMU.c ****     /* Init RX ISR  */
  76:Generated_Source\PSoC5/SPI_IMU.c ****     #if(0u != SPI_IMU_INTERNAL_RX_INT_ENABLED)
  77:Generated_Source\PSoC5/SPI_IMU.c ****         CyIntDisable         (SPI_IMU_RX_ISR_NUMBER);
  78:Generated_Source\PSoC5/SPI_IMU.c ****         CyIntSetPriority     (SPI_IMU_RX_ISR_NUMBER,  SPI_IMU_RX_ISR_PRIORITY);
  79:Generated_Source\PSoC5/SPI_IMU.c ****         (void) CyIntSetVector(SPI_IMU_RX_ISR_NUMBER, &SPI_IMU_RX_ISR);
  80:Generated_Source\PSoC5/SPI_IMU.c ****     #endif /* (0u != SPI_IMU_INTERNAL_RX_INT_ENABLED) */
  81:Generated_Source\PSoC5/SPI_IMU.c **** 
  82:Generated_Source\PSoC5/SPI_IMU.c ****     /* Clear any stray data from the RX and TX FIFO */
  83:Generated_Source\PSoC5/SPI_IMU.c ****     SPI_IMU_ClearFIFO();
  50              		.loc 1 83 0
  51 000a FFF7FEFF 		bl	SPI_IMU_ClearFIFO
  84:Generated_Source\PSoC5/SPI_IMU.c **** 
  85:Generated_Source\PSoC5/SPI_IMU.c ****     #if(SPI_IMU_RX_SOFTWARE_BUF_ENABLED)
  86:Generated_Source\PSoC5/SPI_IMU.c ****         SPI_IMU_rxBufferFull  = 0u;
  87:Generated_Source\PSoC5/SPI_IMU.c ****         SPI_IMU_rxBufferRead  = 0u;
  88:Generated_Source\PSoC5/SPI_IMU.c ****         SPI_IMU_rxBufferWrite = 0u;
  89:Generated_Source\PSoC5/SPI_IMU.c ****     #endif /* (SPI_IMU_RX_SOFTWARE_BUF_ENABLED) */
  90:Generated_Source\PSoC5/SPI_IMU.c **** 
  91:Generated_Source\PSoC5/SPI_IMU.c ****     #if(SPI_IMU_TX_SOFTWARE_BUF_ENABLED)
  92:Generated_Source\PSoC5/SPI_IMU.c ****         SPI_IMU_txBufferFull  = 0u;
  93:Generated_Source\PSoC5/SPI_IMU.c ****         SPI_IMU_txBufferRead  = 0u;
  94:Generated_Source\PSoC5/SPI_IMU.c ****         SPI_IMU_txBufferWrite = 0u;
  95:Generated_Source\PSoC5/SPI_IMU.c ****     #endif /* (SPI_IMU_TX_SOFTWARE_BUF_ENABLED) */
  96:Generated_Source\PSoC5/SPI_IMU.c **** 
  97:Generated_Source\PSoC5/SPI_IMU.c ****     (void) SPI_IMU_ReadTxStatus(); /* Clear Tx status and swStatusTx */
  52              		.loc 1 97 0
  53 000e FFF7FEFF 		bl	SPI_IMU_ReadTxStatus
  98:Generated_Source\PSoC5/SPI_IMU.c ****     (void) SPI_IMU_ReadRxStatus(); /* Clear Rx status and swStatusRx */
  54              		.loc 1 98 0
  55 0012 FFF7FEFF 		bl	SPI_IMU_ReadRxStatus
  99:Generated_Source\PSoC5/SPI_IMU.c **** 
 100:Generated_Source\PSoC5/SPI_IMU.c ****     /* Configure TX and RX interrupt mask */
 101:Generated_Source\PSoC5/SPI_IMU.c ****     SPI_IMU_TX_STATUS_MASK_REG = SPI_IMU_TX_INIT_INTERRUPTS_MASK;
  56              		.loc 1 101 0
  57 0016 054B     		ldr	r3, .L2+4
  58 0018 0022     		movs	r2, #0
  59 001a 1A70     		strb	r2, [r3]
 102:Generated_Source\PSoC5/SPI_IMU.c ****     SPI_IMU_RX_STATUS_MASK_REG = SPI_IMU_RX_INIT_INTERRUPTS_MASK;
  60              		.loc 1 102 0
  61 001c 044B     		ldr	r3, .L2+8
  62 001e 0022     		movs	r2, #0
  63 0020 1A70     		strb	r2, [r3]
 103:Generated_Source\PSoC5/SPI_IMU.c **** }
  64              		.loc 1 103 0
  65 0022 00BF     		nop
  66 0024 80BD     		pop	{r7, pc}
  67              	.L3:
  68 0026 00BF     		.align	2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc2leDoT.s 			page 4


  69              	.L2:
  70 0028 81640040 		.word	1073767553
  71 002c 85640040 		.word	1073767557
  72 0030 80640040 		.word	1073767552
  73              		.cfi_endproc
  74              	.LFE0:
  75              		.size	SPI_IMU_Init, .-SPI_IMU_Init
  76              		.section	.text.SPI_IMU_Enable,"ax",%progbits
  77              		.align	2
  78              		.global	SPI_IMU_Enable
  79              		.thumb
  80              		.thumb_func
  81              		.type	SPI_IMU_Enable, %function
  82              	SPI_IMU_Enable:
  83              	.LFB1:
 104:Generated_Source\PSoC5/SPI_IMU.c **** 
 105:Generated_Source\PSoC5/SPI_IMU.c **** 
 106:Generated_Source\PSoC5/SPI_IMU.c **** /*******************************************************************************
 107:Generated_Source\PSoC5/SPI_IMU.c **** * Function Name: SPI_IMU_Enable
 108:Generated_Source\PSoC5/SPI_IMU.c **** ********************************************************************************
 109:Generated_Source\PSoC5/SPI_IMU.c **** *
 110:Generated_Source\PSoC5/SPI_IMU.c **** * Summary:
 111:Generated_Source\PSoC5/SPI_IMU.c **** *  Enable SPIM component.
 112:Generated_Source\PSoC5/SPI_IMU.c **** *
 113:Generated_Source\PSoC5/SPI_IMU.c **** * Parameters:
 114:Generated_Source\PSoC5/SPI_IMU.c **** *  None.
 115:Generated_Source\PSoC5/SPI_IMU.c **** *
 116:Generated_Source\PSoC5/SPI_IMU.c **** * Return:
 117:Generated_Source\PSoC5/SPI_IMU.c **** *  None.
 118:Generated_Source\PSoC5/SPI_IMU.c **** *
 119:Generated_Source\PSoC5/SPI_IMU.c **** *******************************************************************************/
 120:Generated_Source\PSoC5/SPI_IMU.c **** void SPI_IMU_Enable(void) 
 121:Generated_Source\PSoC5/SPI_IMU.c **** {
  84              		.loc 1 121 0
  85              		.cfi_startproc
  86              		@ args = 0, pretend = 0, frame = 8
  87              		@ frame_needed = 1, uses_anonymous_args = 0
  88 0000 80B5     		push	{r7, lr}
  89              		.cfi_def_cfa_offset 8
  90              		.cfi_offset 7, -8
  91              		.cfi_offset 14, -4
  92 0002 82B0     		sub	sp, sp, #8
  93              		.cfi_def_cfa_offset 16
  94 0004 00AF     		add	r7, sp, #0
  95              		.cfi_def_cfa_register 7
 122:Generated_Source\PSoC5/SPI_IMU.c ****     uint8 enableInterrupts;
 123:Generated_Source\PSoC5/SPI_IMU.c **** 
 124:Generated_Source\PSoC5/SPI_IMU.c ****     enableInterrupts = CyEnterCriticalSection();
  96              		.loc 1 124 0
  97 0006 FFF7FEFF 		bl	CyEnterCriticalSection
  98 000a 0346     		mov	r3, r0
  99 000c FB71     		strb	r3, [r7, #7]
 125:Generated_Source\PSoC5/SPI_IMU.c ****     SPI_IMU_COUNTER_CONTROL_REG |= SPI_IMU_CNTR_ENABLE;
 100              		.loc 1 125 0
 101 000e 124A     		ldr	r2, .L5
 102 0010 114B     		ldr	r3, .L5
 103 0012 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc2leDoT.s 			page 5


 104 0014 DBB2     		uxtb	r3, r3
 105 0016 43F02003 		orr	r3, r3, #32
 106 001a DBB2     		uxtb	r3, r3
 107 001c 1370     		strb	r3, [r2]
 126:Generated_Source\PSoC5/SPI_IMU.c ****     SPI_IMU_TX_STATUS_ACTL_REG  |= SPI_IMU_INT_ENABLE;
 108              		.loc 1 126 0
 109 001e 0F4A     		ldr	r2, .L5+4
 110 0020 0E4B     		ldr	r3, .L5+4
 111 0022 1B78     		ldrb	r3, [r3]
 112 0024 DBB2     		uxtb	r3, r3
 113 0026 43F01003 		orr	r3, r3, #16
 114 002a DBB2     		uxtb	r3, r3
 115 002c 1370     		strb	r3, [r2]
 127:Generated_Source\PSoC5/SPI_IMU.c ****     SPI_IMU_RX_STATUS_ACTL_REG  |= SPI_IMU_INT_ENABLE;
 116              		.loc 1 127 0
 117 002e 0C4A     		ldr	r2, .L5+8
 118 0030 0B4B     		ldr	r3, .L5+8
 119 0032 1B78     		ldrb	r3, [r3]
 120 0034 DBB2     		uxtb	r3, r3
 121 0036 43F01003 		orr	r3, r3, #16
 122 003a DBB2     		uxtb	r3, r3
 123 003c 1370     		strb	r3, [r2]
 128:Generated_Source\PSoC5/SPI_IMU.c ****     CyExitCriticalSection(enableInterrupts);
 124              		.loc 1 128 0
 125 003e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 126 0040 1846     		mov	r0, r3
 127 0042 FFF7FEFF 		bl	CyExitCriticalSection
 129:Generated_Source\PSoC5/SPI_IMU.c **** 
 130:Generated_Source\PSoC5/SPI_IMU.c ****     #if(0u != SPI_IMU_INTERNAL_CLOCK)
 131:Generated_Source\PSoC5/SPI_IMU.c ****         SPI_IMU_IntClock_Enable();
 132:Generated_Source\PSoC5/SPI_IMU.c ****     #endif /* (0u != SPI_IMU_INTERNAL_CLOCK) */
 133:Generated_Source\PSoC5/SPI_IMU.c **** 
 134:Generated_Source\PSoC5/SPI_IMU.c ****     SPI_IMU_EnableTxInt();
 128              		.loc 1 134 0
 129 0046 FFF7FEFF 		bl	SPI_IMU_EnableTxInt
 135:Generated_Source\PSoC5/SPI_IMU.c ****     SPI_IMU_EnableRxInt();
 130              		.loc 1 135 0
 131 004a FFF7FEFF 		bl	SPI_IMU_EnableRxInt
 136:Generated_Source\PSoC5/SPI_IMU.c **** }
 132              		.loc 1 136 0
 133 004e 00BF     		nop
 134 0050 0837     		adds	r7, r7, #8
 135              		.cfi_def_cfa_offset 8
 136 0052 BD46     		mov	sp, r7
 137              		.cfi_def_cfa_register 13
 138              		@ sp needed
 139 0054 80BD     		pop	{r7, pc}
 140              	.L6:
 141 0056 00BF     		.align	2
 142              	.L5:
 143 0058 91640040 		.word	1073767569
 144 005c 95640040 		.word	1073767573
 145 0060 90640040 		.word	1073767568
 146              		.cfi_endproc
 147              	.LFE1:
 148              		.size	SPI_IMU_Enable, .-SPI_IMU_Enable
 149              		.section	.text.SPI_IMU_Start,"ax",%progbits
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc2leDoT.s 			page 6


 150              		.align	2
 151              		.global	SPI_IMU_Start
 152              		.thumb
 153              		.thumb_func
 154              		.type	SPI_IMU_Start, %function
 155              	SPI_IMU_Start:
 156              	.LFB2:
 137:Generated_Source\PSoC5/SPI_IMU.c **** 
 138:Generated_Source\PSoC5/SPI_IMU.c **** 
 139:Generated_Source\PSoC5/SPI_IMU.c **** /*******************************************************************************
 140:Generated_Source\PSoC5/SPI_IMU.c **** * Function Name: SPI_IMU_Start
 141:Generated_Source\PSoC5/SPI_IMU.c **** ********************************************************************************
 142:Generated_Source\PSoC5/SPI_IMU.c **** *
 143:Generated_Source\PSoC5/SPI_IMU.c **** * Summary:
 144:Generated_Source\PSoC5/SPI_IMU.c **** *  Initialize and Enable the SPI Master component.
 145:Generated_Source\PSoC5/SPI_IMU.c **** *
 146:Generated_Source\PSoC5/SPI_IMU.c **** * Parameters:
 147:Generated_Source\PSoC5/SPI_IMU.c **** *  None.
 148:Generated_Source\PSoC5/SPI_IMU.c **** *
 149:Generated_Source\PSoC5/SPI_IMU.c **** * Return:
 150:Generated_Source\PSoC5/SPI_IMU.c **** *  None.
 151:Generated_Source\PSoC5/SPI_IMU.c **** *
 152:Generated_Source\PSoC5/SPI_IMU.c **** * Global variables:
 153:Generated_Source\PSoC5/SPI_IMU.c **** *  SPI_IMU_initVar - used to check initial configuration, modified on
 154:Generated_Source\PSoC5/SPI_IMU.c **** *  first function call.
 155:Generated_Source\PSoC5/SPI_IMU.c **** *
 156:Generated_Source\PSoC5/SPI_IMU.c **** * Theory:
 157:Generated_Source\PSoC5/SPI_IMU.c **** *  Enable the clock input to enable operation.
 158:Generated_Source\PSoC5/SPI_IMU.c **** *
 159:Generated_Source\PSoC5/SPI_IMU.c **** * Reentrant:
 160:Generated_Source\PSoC5/SPI_IMU.c **** *  No.
 161:Generated_Source\PSoC5/SPI_IMU.c **** *
 162:Generated_Source\PSoC5/SPI_IMU.c **** *******************************************************************************/
 163:Generated_Source\PSoC5/SPI_IMU.c **** void SPI_IMU_Start(void) 
 164:Generated_Source\PSoC5/SPI_IMU.c **** {
 157              		.loc 1 164 0
 158              		.cfi_startproc
 159              		@ args = 0, pretend = 0, frame = 0
 160              		@ frame_needed = 1, uses_anonymous_args = 0
 161 0000 80B5     		push	{r7, lr}
 162              		.cfi_def_cfa_offset 8
 163              		.cfi_offset 7, -8
 164              		.cfi_offset 14, -4
 165 0002 00AF     		add	r7, sp, #0
 166              		.cfi_def_cfa_register 7
 165:Generated_Source\PSoC5/SPI_IMU.c ****     if(0u == SPI_IMU_initVar)
 167              		.loc 1 165 0
 168 0004 064B     		ldr	r3, .L9
 169 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 170 0008 002B     		cmp	r3, #0
 171 000a 04D1     		bne	.L8
 166:Generated_Source\PSoC5/SPI_IMU.c ****     {
 167:Generated_Source\PSoC5/SPI_IMU.c ****         SPI_IMU_Init();
 172              		.loc 1 167 0
 173 000c FFF7FEFF 		bl	SPI_IMU_Init
 168:Generated_Source\PSoC5/SPI_IMU.c ****         SPI_IMU_initVar = 1u;
 174              		.loc 1 168 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc2leDoT.s 			page 7


 175 0010 034B     		ldr	r3, .L9
 176 0012 0122     		movs	r2, #1
 177 0014 1A70     		strb	r2, [r3]
 178              	.L8:
 169:Generated_Source\PSoC5/SPI_IMU.c ****     }
 170:Generated_Source\PSoC5/SPI_IMU.c **** 
 171:Generated_Source\PSoC5/SPI_IMU.c ****     SPI_IMU_Enable();
 179              		.loc 1 171 0
 180 0016 FFF7FEFF 		bl	SPI_IMU_Enable
 172:Generated_Source\PSoC5/SPI_IMU.c **** }
 181              		.loc 1 172 0
 182 001a 00BF     		nop
 183 001c 80BD     		pop	{r7, pc}
 184              	.L10:
 185 001e 00BF     		.align	2
 186              	.L9:
 187 0020 00000000 		.word	SPI_IMU_initVar
 188              		.cfi_endproc
 189              	.LFE2:
 190              		.size	SPI_IMU_Start, .-SPI_IMU_Start
 191              		.section	.text.SPI_IMU_Stop,"ax",%progbits
 192              		.align	2
 193              		.global	SPI_IMU_Stop
 194              		.thumb
 195              		.thumb_func
 196              		.type	SPI_IMU_Stop, %function
 197              	SPI_IMU_Stop:
 198              	.LFB3:
 173:Generated_Source\PSoC5/SPI_IMU.c **** 
 174:Generated_Source\PSoC5/SPI_IMU.c **** 
 175:Generated_Source\PSoC5/SPI_IMU.c **** /*******************************************************************************
 176:Generated_Source\PSoC5/SPI_IMU.c **** * Function Name: SPI_IMU_Stop
 177:Generated_Source\PSoC5/SPI_IMU.c **** ********************************************************************************
 178:Generated_Source\PSoC5/SPI_IMU.c **** *
 179:Generated_Source\PSoC5/SPI_IMU.c **** * Summary:
 180:Generated_Source\PSoC5/SPI_IMU.c **** *  Disable the SPI Master component.
 181:Generated_Source\PSoC5/SPI_IMU.c **** *
 182:Generated_Source\PSoC5/SPI_IMU.c **** * Parameters:
 183:Generated_Source\PSoC5/SPI_IMU.c **** *  None.
 184:Generated_Source\PSoC5/SPI_IMU.c **** *
 185:Generated_Source\PSoC5/SPI_IMU.c **** * Return:
 186:Generated_Source\PSoC5/SPI_IMU.c **** *  None.
 187:Generated_Source\PSoC5/SPI_IMU.c **** *
 188:Generated_Source\PSoC5/SPI_IMU.c **** * Theory:
 189:Generated_Source\PSoC5/SPI_IMU.c **** *  Disable the clock input to enable operation.
 190:Generated_Source\PSoC5/SPI_IMU.c **** *
 191:Generated_Source\PSoC5/SPI_IMU.c **** *******************************************************************************/
 192:Generated_Source\PSoC5/SPI_IMU.c **** void SPI_IMU_Stop(void) 
 193:Generated_Source\PSoC5/SPI_IMU.c **** {
 199              		.loc 1 193 0
 200              		.cfi_startproc
 201              		@ args = 0, pretend = 0, frame = 8
 202              		@ frame_needed = 1, uses_anonymous_args = 0
 203 0000 80B5     		push	{r7, lr}
 204              		.cfi_def_cfa_offset 8
 205              		.cfi_offset 7, -8
 206              		.cfi_offset 14, -4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc2leDoT.s 			page 8


 207 0002 82B0     		sub	sp, sp, #8
 208              		.cfi_def_cfa_offset 16
 209 0004 00AF     		add	r7, sp, #0
 210              		.cfi_def_cfa_register 7
 194:Generated_Source\PSoC5/SPI_IMU.c ****     uint8 enableInterrupts;
 195:Generated_Source\PSoC5/SPI_IMU.c **** 
 196:Generated_Source\PSoC5/SPI_IMU.c ****     enableInterrupts = CyEnterCriticalSection();
 211              		.loc 1 196 0
 212 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 213 000a 0346     		mov	r3, r0
 214 000c FB71     		strb	r3, [r7, #7]
 197:Generated_Source\PSoC5/SPI_IMU.c ****     SPI_IMU_TX_STATUS_ACTL_REG &= ((uint8) ~SPI_IMU_INT_ENABLE);
 215              		.loc 1 197 0
 216 000e 0E4A     		ldr	r2, .L12
 217 0010 0D4B     		ldr	r3, .L12
 218 0012 1B78     		ldrb	r3, [r3]
 219 0014 DBB2     		uxtb	r3, r3
 220 0016 23F01003 		bic	r3, r3, #16
 221 001a DBB2     		uxtb	r3, r3
 222 001c 1370     		strb	r3, [r2]
 198:Generated_Source\PSoC5/SPI_IMU.c ****     SPI_IMU_RX_STATUS_ACTL_REG &= ((uint8) ~SPI_IMU_INT_ENABLE);
 223              		.loc 1 198 0
 224 001e 0B4A     		ldr	r2, .L12+4
 225 0020 0A4B     		ldr	r3, .L12+4
 226 0022 1B78     		ldrb	r3, [r3]
 227 0024 DBB2     		uxtb	r3, r3
 228 0026 23F01003 		bic	r3, r3, #16
 229 002a DBB2     		uxtb	r3, r3
 230 002c 1370     		strb	r3, [r2]
 199:Generated_Source\PSoC5/SPI_IMU.c ****     CyExitCriticalSection(enableInterrupts);
 231              		.loc 1 199 0
 232 002e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 233 0030 1846     		mov	r0, r3
 234 0032 FFF7FEFF 		bl	CyExitCriticalSection
 200:Generated_Source\PSoC5/SPI_IMU.c **** 
 201:Generated_Source\PSoC5/SPI_IMU.c ****     #if(0u != SPI_IMU_INTERNAL_CLOCK)
 202:Generated_Source\PSoC5/SPI_IMU.c ****         SPI_IMU_IntClock_Disable();
 203:Generated_Source\PSoC5/SPI_IMU.c ****     #endif /* (0u != SPI_IMU_INTERNAL_CLOCK) */
 204:Generated_Source\PSoC5/SPI_IMU.c **** 
 205:Generated_Source\PSoC5/SPI_IMU.c ****     SPI_IMU_DisableTxInt();
 235              		.loc 1 205 0
 236 0036 FFF7FEFF 		bl	SPI_IMU_DisableTxInt
 206:Generated_Source\PSoC5/SPI_IMU.c ****     SPI_IMU_DisableRxInt();
 237              		.loc 1 206 0
 238 003a FFF7FEFF 		bl	SPI_IMU_DisableRxInt
 207:Generated_Source\PSoC5/SPI_IMU.c **** }
 239              		.loc 1 207 0
 240 003e 00BF     		nop
 241 0040 0837     		adds	r7, r7, #8
 242              		.cfi_def_cfa_offset 8
 243 0042 BD46     		mov	sp, r7
 244              		.cfi_def_cfa_register 13
 245              		@ sp needed
 246 0044 80BD     		pop	{r7, pc}
 247              	.L13:
 248 0046 00BF     		.align	2
 249              	.L12:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc2leDoT.s 			page 9


 250 0048 95640040 		.word	1073767573
 251 004c 90640040 		.word	1073767568
 252              		.cfi_endproc
 253              	.LFE3:
 254              		.size	SPI_IMU_Stop, .-SPI_IMU_Stop
 255              		.section	.text.SPI_IMU_EnableTxInt,"ax",%progbits
 256              		.align	2
 257              		.global	SPI_IMU_EnableTxInt
 258              		.thumb
 259              		.thumb_func
 260              		.type	SPI_IMU_EnableTxInt, %function
 261              	SPI_IMU_EnableTxInt:
 262              	.LFB4:
 208:Generated_Source\PSoC5/SPI_IMU.c **** 
 209:Generated_Source\PSoC5/SPI_IMU.c **** 
 210:Generated_Source\PSoC5/SPI_IMU.c **** /*******************************************************************************
 211:Generated_Source\PSoC5/SPI_IMU.c **** * Function Name: SPI_IMU_EnableTxInt
 212:Generated_Source\PSoC5/SPI_IMU.c **** ********************************************************************************
 213:Generated_Source\PSoC5/SPI_IMU.c **** *
 214:Generated_Source\PSoC5/SPI_IMU.c **** * Summary:
 215:Generated_Source\PSoC5/SPI_IMU.c **** *  Enable internal Tx interrupt generation.
 216:Generated_Source\PSoC5/SPI_IMU.c **** *
 217:Generated_Source\PSoC5/SPI_IMU.c **** * Parameters:
 218:Generated_Source\PSoC5/SPI_IMU.c **** *  None.
 219:Generated_Source\PSoC5/SPI_IMU.c **** *
 220:Generated_Source\PSoC5/SPI_IMU.c **** * Return:
 221:Generated_Source\PSoC5/SPI_IMU.c **** *  None.
 222:Generated_Source\PSoC5/SPI_IMU.c **** *
 223:Generated_Source\PSoC5/SPI_IMU.c **** * Theory:
 224:Generated_Source\PSoC5/SPI_IMU.c **** *  Enable the internal Tx interrupt output -or- the interrupt component itself.
 225:Generated_Source\PSoC5/SPI_IMU.c **** *
 226:Generated_Source\PSoC5/SPI_IMU.c **** *******************************************************************************/
 227:Generated_Source\PSoC5/SPI_IMU.c **** void SPI_IMU_EnableTxInt(void) 
 228:Generated_Source\PSoC5/SPI_IMU.c **** {
 263              		.loc 1 228 0
 264              		.cfi_startproc
 265              		@ args = 0, pretend = 0, frame = 0
 266              		@ frame_needed = 1, uses_anonymous_args = 0
 267              		@ link register save eliminated.
 268 0000 80B4     		push	{r7}
 269              		.cfi_def_cfa_offset 4
 270              		.cfi_offset 7, -4
 271 0002 00AF     		add	r7, sp, #0
 272              		.cfi_def_cfa_register 7
 229:Generated_Source\PSoC5/SPI_IMU.c ****     #if(0u != SPI_IMU_INTERNAL_TX_INT_ENABLED)
 230:Generated_Source\PSoC5/SPI_IMU.c ****         CyIntEnable(SPI_IMU_TX_ISR_NUMBER);
 231:Generated_Source\PSoC5/SPI_IMU.c ****     #endif /* (0u != SPI_IMU_INTERNAL_TX_INT_ENABLED) */
 232:Generated_Source\PSoC5/SPI_IMU.c **** }
 273              		.loc 1 232 0
 274 0004 00BF     		nop
 275 0006 BD46     		mov	sp, r7
 276              		.cfi_def_cfa_register 13
 277              		@ sp needed
 278 0008 80BC     		pop	{r7}
 279              		.cfi_restore 7
 280              		.cfi_def_cfa_offset 0
 281 000a 7047     		bx	lr
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc2leDoT.s 			page 10


 282              		.cfi_endproc
 283              	.LFE4:
 284              		.size	SPI_IMU_EnableTxInt, .-SPI_IMU_EnableTxInt
 285              		.section	.text.SPI_IMU_EnableRxInt,"ax",%progbits
 286              		.align	2
 287              		.global	SPI_IMU_EnableRxInt
 288              		.thumb
 289              		.thumb_func
 290              		.type	SPI_IMU_EnableRxInt, %function
 291              	SPI_IMU_EnableRxInt:
 292              	.LFB5:
 233:Generated_Source\PSoC5/SPI_IMU.c **** 
 234:Generated_Source\PSoC5/SPI_IMU.c **** 
 235:Generated_Source\PSoC5/SPI_IMU.c **** /*******************************************************************************
 236:Generated_Source\PSoC5/SPI_IMU.c **** * Function Name: SPI_IMU_EnableRxInt
 237:Generated_Source\PSoC5/SPI_IMU.c **** ********************************************************************************
 238:Generated_Source\PSoC5/SPI_IMU.c **** *
 239:Generated_Source\PSoC5/SPI_IMU.c **** * Summary:
 240:Generated_Source\PSoC5/SPI_IMU.c **** *  Enable internal Rx interrupt generation.
 241:Generated_Source\PSoC5/SPI_IMU.c **** *
 242:Generated_Source\PSoC5/SPI_IMU.c **** * Parameters:
 243:Generated_Source\PSoC5/SPI_IMU.c **** *  None.
 244:Generated_Source\PSoC5/SPI_IMU.c **** *
 245:Generated_Source\PSoC5/SPI_IMU.c **** * Return:
 246:Generated_Source\PSoC5/SPI_IMU.c **** *  None.
 247:Generated_Source\PSoC5/SPI_IMU.c **** *
 248:Generated_Source\PSoC5/SPI_IMU.c **** * Theory:
 249:Generated_Source\PSoC5/SPI_IMU.c **** *  Enable the internal Rx interrupt output -or- the interrupt component itself.
 250:Generated_Source\PSoC5/SPI_IMU.c **** *
 251:Generated_Source\PSoC5/SPI_IMU.c **** *******************************************************************************/
 252:Generated_Source\PSoC5/SPI_IMU.c **** void SPI_IMU_EnableRxInt(void) 
 253:Generated_Source\PSoC5/SPI_IMU.c **** {
 293              		.loc 1 253 0
 294              		.cfi_startproc
 295              		@ args = 0, pretend = 0, frame = 0
 296              		@ frame_needed = 1, uses_anonymous_args = 0
 297              		@ link register save eliminated.
 298 0000 80B4     		push	{r7}
 299              		.cfi_def_cfa_offset 4
 300              		.cfi_offset 7, -4
 301 0002 00AF     		add	r7, sp, #0
 302              		.cfi_def_cfa_register 7
 254:Generated_Source\PSoC5/SPI_IMU.c ****     #if(0u != SPI_IMU_INTERNAL_RX_INT_ENABLED)
 255:Generated_Source\PSoC5/SPI_IMU.c ****         CyIntEnable(SPI_IMU_RX_ISR_NUMBER);
 256:Generated_Source\PSoC5/SPI_IMU.c ****     #endif /* (0u != SPI_IMU_INTERNAL_RX_INT_ENABLED) */
 257:Generated_Source\PSoC5/SPI_IMU.c **** }
 303              		.loc 1 257 0
 304 0004 00BF     		nop
 305 0006 BD46     		mov	sp, r7
 306              		.cfi_def_cfa_register 13
 307              		@ sp needed
 308 0008 80BC     		pop	{r7}
 309              		.cfi_restore 7
 310              		.cfi_def_cfa_offset 0
 311 000a 7047     		bx	lr
 312              		.cfi_endproc
 313              	.LFE5:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc2leDoT.s 			page 11


 314              		.size	SPI_IMU_EnableRxInt, .-SPI_IMU_EnableRxInt
 315              		.section	.text.SPI_IMU_DisableTxInt,"ax",%progbits
 316              		.align	2
 317              		.global	SPI_IMU_DisableTxInt
 318              		.thumb
 319              		.thumb_func
 320              		.type	SPI_IMU_DisableTxInt, %function
 321              	SPI_IMU_DisableTxInt:
 322              	.LFB6:
 258:Generated_Source\PSoC5/SPI_IMU.c **** 
 259:Generated_Source\PSoC5/SPI_IMU.c **** 
 260:Generated_Source\PSoC5/SPI_IMU.c **** /*******************************************************************************
 261:Generated_Source\PSoC5/SPI_IMU.c **** * Function Name: SPI_IMU_DisableTxInt
 262:Generated_Source\PSoC5/SPI_IMU.c **** ********************************************************************************
 263:Generated_Source\PSoC5/SPI_IMU.c **** *
 264:Generated_Source\PSoC5/SPI_IMU.c **** * Summary:
 265:Generated_Source\PSoC5/SPI_IMU.c **** *  Disable internal Tx interrupt generation.
 266:Generated_Source\PSoC5/SPI_IMU.c **** *
 267:Generated_Source\PSoC5/SPI_IMU.c **** * Parameters:
 268:Generated_Source\PSoC5/SPI_IMU.c **** *  None.
 269:Generated_Source\PSoC5/SPI_IMU.c **** *
 270:Generated_Source\PSoC5/SPI_IMU.c **** * Return:
 271:Generated_Source\PSoC5/SPI_IMU.c **** *  None.
 272:Generated_Source\PSoC5/SPI_IMU.c **** *
 273:Generated_Source\PSoC5/SPI_IMU.c **** * Theory:
 274:Generated_Source\PSoC5/SPI_IMU.c **** *  Disable the internal Tx interrupt output -or- the interrupt component itself.
 275:Generated_Source\PSoC5/SPI_IMU.c **** *
 276:Generated_Source\PSoC5/SPI_IMU.c **** *******************************************************************************/
 277:Generated_Source\PSoC5/SPI_IMU.c **** void SPI_IMU_DisableTxInt(void) 
 278:Generated_Source\PSoC5/SPI_IMU.c **** {
 323              		.loc 1 278 0
 324              		.cfi_startproc
 325              		@ args = 0, pretend = 0, frame = 0
 326              		@ frame_needed = 1, uses_anonymous_args = 0
 327              		@ link register save eliminated.
 328 0000 80B4     		push	{r7}
 329              		.cfi_def_cfa_offset 4
 330              		.cfi_offset 7, -4
 331 0002 00AF     		add	r7, sp, #0
 332              		.cfi_def_cfa_register 7
 279:Generated_Source\PSoC5/SPI_IMU.c ****     #if(0u != SPI_IMU_INTERNAL_TX_INT_ENABLED)
 280:Generated_Source\PSoC5/SPI_IMU.c ****         CyIntDisable(SPI_IMU_TX_ISR_NUMBER);
 281:Generated_Source\PSoC5/SPI_IMU.c ****     #endif /* (0u != SPI_IMU_INTERNAL_TX_INT_ENABLED) */
 282:Generated_Source\PSoC5/SPI_IMU.c **** }
 333              		.loc 1 282 0
 334 0004 00BF     		nop
 335 0006 BD46     		mov	sp, r7
 336              		.cfi_def_cfa_register 13
 337              		@ sp needed
 338 0008 80BC     		pop	{r7}
 339              		.cfi_restore 7
 340              		.cfi_def_cfa_offset 0
 341 000a 7047     		bx	lr
 342              		.cfi_endproc
 343              	.LFE6:
 344              		.size	SPI_IMU_DisableTxInt, .-SPI_IMU_DisableTxInt
 345              		.section	.text.SPI_IMU_DisableRxInt,"ax",%progbits
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc2leDoT.s 			page 12


 346              		.align	2
 347              		.global	SPI_IMU_DisableRxInt
 348              		.thumb
 349              		.thumb_func
 350              		.type	SPI_IMU_DisableRxInt, %function
 351              	SPI_IMU_DisableRxInt:
 352              	.LFB7:
 283:Generated_Source\PSoC5/SPI_IMU.c **** 
 284:Generated_Source\PSoC5/SPI_IMU.c **** 
 285:Generated_Source\PSoC5/SPI_IMU.c **** /*******************************************************************************
 286:Generated_Source\PSoC5/SPI_IMU.c **** * Function Name: SPI_IMU_DisableRxInt
 287:Generated_Source\PSoC5/SPI_IMU.c **** ********************************************************************************
 288:Generated_Source\PSoC5/SPI_IMU.c **** *
 289:Generated_Source\PSoC5/SPI_IMU.c **** * Summary:
 290:Generated_Source\PSoC5/SPI_IMU.c **** *  Disable internal Rx interrupt generation.
 291:Generated_Source\PSoC5/SPI_IMU.c **** *
 292:Generated_Source\PSoC5/SPI_IMU.c **** * Parameters:
 293:Generated_Source\PSoC5/SPI_IMU.c **** *  None.
 294:Generated_Source\PSoC5/SPI_IMU.c **** *
 295:Generated_Source\PSoC5/SPI_IMU.c **** * Return:
 296:Generated_Source\PSoC5/SPI_IMU.c **** *  None.
 297:Generated_Source\PSoC5/SPI_IMU.c **** *
 298:Generated_Source\PSoC5/SPI_IMU.c **** * Theory:
 299:Generated_Source\PSoC5/SPI_IMU.c **** *  Disable the internal Rx interrupt output -or- the interrupt component itself.
 300:Generated_Source\PSoC5/SPI_IMU.c **** *
 301:Generated_Source\PSoC5/SPI_IMU.c **** *******************************************************************************/
 302:Generated_Source\PSoC5/SPI_IMU.c **** void SPI_IMU_DisableRxInt(void) 
 303:Generated_Source\PSoC5/SPI_IMU.c **** {
 353              		.loc 1 303 0
 354              		.cfi_startproc
 355              		@ args = 0, pretend = 0, frame = 0
 356              		@ frame_needed = 1, uses_anonymous_args = 0
 357              		@ link register save eliminated.
 358 0000 80B4     		push	{r7}
 359              		.cfi_def_cfa_offset 4
 360              		.cfi_offset 7, -4
 361 0002 00AF     		add	r7, sp, #0
 362              		.cfi_def_cfa_register 7
 304:Generated_Source\PSoC5/SPI_IMU.c ****     #if(0u != SPI_IMU_INTERNAL_RX_INT_ENABLED)
 305:Generated_Source\PSoC5/SPI_IMU.c ****         CyIntDisable(SPI_IMU_RX_ISR_NUMBER);
 306:Generated_Source\PSoC5/SPI_IMU.c ****     #endif /* (0u != SPI_IMU_INTERNAL_RX_INT_ENABLED) */
 307:Generated_Source\PSoC5/SPI_IMU.c **** }
 363              		.loc 1 307 0
 364 0004 00BF     		nop
 365 0006 BD46     		mov	sp, r7
 366              		.cfi_def_cfa_register 13
 367              		@ sp needed
 368 0008 80BC     		pop	{r7}
 369              		.cfi_restore 7
 370              		.cfi_def_cfa_offset 0
 371 000a 7047     		bx	lr
 372              		.cfi_endproc
 373              	.LFE7:
 374              		.size	SPI_IMU_DisableRxInt, .-SPI_IMU_DisableRxInt
 375              		.section	.text.SPI_IMU_SetTxInterruptMode,"ax",%progbits
 376              		.align	2
 377              		.global	SPI_IMU_SetTxInterruptMode
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc2leDoT.s 			page 13


 378              		.thumb
 379              		.thumb_func
 380              		.type	SPI_IMU_SetTxInterruptMode, %function
 381              	SPI_IMU_SetTxInterruptMode:
 382              	.LFB8:
 308:Generated_Source\PSoC5/SPI_IMU.c **** 
 309:Generated_Source\PSoC5/SPI_IMU.c **** 
 310:Generated_Source\PSoC5/SPI_IMU.c **** /*******************************************************************************
 311:Generated_Source\PSoC5/SPI_IMU.c **** * Function Name: SPI_IMU_SetTxInterruptMode
 312:Generated_Source\PSoC5/SPI_IMU.c **** ********************************************************************************
 313:Generated_Source\PSoC5/SPI_IMU.c **** *
 314:Generated_Source\PSoC5/SPI_IMU.c **** * Summary:
 315:Generated_Source\PSoC5/SPI_IMU.c **** *  Configure which status bits trigger an interrupt event.
 316:Generated_Source\PSoC5/SPI_IMU.c **** *
 317:Generated_Source\PSoC5/SPI_IMU.c **** * Parameters:
 318:Generated_Source\PSoC5/SPI_IMU.c **** *  intSrc: An or'd combination of the desired status bit masks (defined in the
 319:Generated_Source\PSoC5/SPI_IMU.c **** *  header file).
 320:Generated_Source\PSoC5/SPI_IMU.c **** *
 321:Generated_Source\PSoC5/SPI_IMU.c **** * Return:
 322:Generated_Source\PSoC5/SPI_IMU.c **** *  None.
 323:Generated_Source\PSoC5/SPI_IMU.c **** *
 324:Generated_Source\PSoC5/SPI_IMU.c **** * Theory:
 325:Generated_Source\PSoC5/SPI_IMU.c **** *  Enables the output of specific status bits to the interrupt controller.
 326:Generated_Source\PSoC5/SPI_IMU.c **** *
 327:Generated_Source\PSoC5/SPI_IMU.c **** *******************************************************************************/
 328:Generated_Source\PSoC5/SPI_IMU.c **** void SPI_IMU_SetTxInterruptMode(uint8 intSrc) 
 329:Generated_Source\PSoC5/SPI_IMU.c **** {
 383              		.loc 1 329 0
 384              		.cfi_startproc
 385              		@ args = 0, pretend = 0, frame = 8
 386              		@ frame_needed = 1, uses_anonymous_args = 0
 387              		@ link register save eliminated.
 388 0000 80B4     		push	{r7}
 389              		.cfi_def_cfa_offset 4
 390              		.cfi_offset 7, -4
 391 0002 83B0     		sub	sp, sp, #12
 392              		.cfi_def_cfa_offset 16
 393 0004 00AF     		add	r7, sp, #0
 394              		.cfi_def_cfa_register 7
 395 0006 0346     		mov	r3, r0
 396 0008 FB71     		strb	r3, [r7, #7]
 330:Generated_Source\PSoC5/SPI_IMU.c ****     SPI_IMU_TX_STATUS_MASK_REG = intSrc;
 397              		.loc 1 330 0
 398 000a 044A     		ldr	r2, .L19
 399 000c FB79     		ldrb	r3, [r7, #7]
 400 000e 1370     		strb	r3, [r2]
 331:Generated_Source\PSoC5/SPI_IMU.c **** }
 401              		.loc 1 331 0
 402 0010 00BF     		nop
 403 0012 0C37     		adds	r7, r7, #12
 404              		.cfi_def_cfa_offset 4
 405 0014 BD46     		mov	sp, r7
 406              		.cfi_def_cfa_register 13
 407              		@ sp needed
 408 0016 80BC     		pop	{r7}
 409              		.cfi_restore 7
 410              		.cfi_def_cfa_offset 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc2leDoT.s 			page 14


 411 0018 7047     		bx	lr
 412              	.L20:
 413 001a 00BF     		.align	2
 414              	.L19:
 415 001c 85640040 		.word	1073767557
 416              		.cfi_endproc
 417              	.LFE8:
 418              		.size	SPI_IMU_SetTxInterruptMode, .-SPI_IMU_SetTxInterruptMode
 419              		.section	.text.SPI_IMU_SetRxInterruptMode,"ax",%progbits
 420              		.align	2
 421              		.global	SPI_IMU_SetRxInterruptMode
 422              		.thumb
 423              		.thumb_func
 424              		.type	SPI_IMU_SetRxInterruptMode, %function
 425              	SPI_IMU_SetRxInterruptMode:
 426              	.LFB9:
 332:Generated_Source\PSoC5/SPI_IMU.c **** 
 333:Generated_Source\PSoC5/SPI_IMU.c **** 
 334:Generated_Source\PSoC5/SPI_IMU.c **** /*******************************************************************************
 335:Generated_Source\PSoC5/SPI_IMU.c **** * Function Name: SPI_IMU_SetRxInterruptMode
 336:Generated_Source\PSoC5/SPI_IMU.c **** ********************************************************************************
 337:Generated_Source\PSoC5/SPI_IMU.c **** *
 338:Generated_Source\PSoC5/SPI_IMU.c **** * Summary:
 339:Generated_Source\PSoC5/SPI_IMU.c **** *  Configure which status bits trigger an interrupt event.
 340:Generated_Source\PSoC5/SPI_IMU.c **** *
 341:Generated_Source\PSoC5/SPI_IMU.c **** * Parameters:
 342:Generated_Source\PSoC5/SPI_IMU.c **** *  intSrc: An or'd combination of the desired status bit masks (defined in the
 343:Generated_Source\PSoC5/SPI_IMU.c **** *  header file).
 344:Generated_Source\PSoC5/SPI_IMU.c **** *
 345:Generated_Source\PSoC5/SPI_IMU.c **** * Return:
 346:Generated_Source\PSoC5/SPI_IMU.c **** *  None.
 347:Generated_Source\PSoC5/SPI_IMU.c **** *
 348:Generated_Source\PSoC5/SPI_IMU.c **** * Theory:
 349:Generated_Source\PSoC5/SPI_IMU.c **** *  Enables the output of specific status bits to the interrupt controller.
 350:Generated_Source\PSoC5/SPI_IMU.c **** *
 351:Generated_Source\PSoC5/SPI_IMU.c **** *******************************************************************************/
 352:Generated_Source\PSoC5/SPI_IMU.c **** void SPI_IMU_SetRxInterruptMode(uint8 intSrc) 
 353:Generated_Source\PSoC5/SPI_IMU.c **** {
 427              		.loc 1 353 0
 428              		.cfi_startproc
 429              		@ args = 0, pretend = 0, frame = 8
 430              		@ frame_needed = 1, uses_anonymous_args = 0
 431              		@ link register save eliminated.
 432 0000 80B4     		push	{r7}
 433              		.cfi_def_cfa_offset 4
 434              		.cfi_offset 7, -4
 435 0002 83B0     		sub	sp, sp, #12
 436              		.cfi_def_cfa_offset 16
 437 0004 00AF     		add	r7, sp, #0
 438              		.cfi_def_cfa_register 7
 439 0006 0346     		mov	r3, r0
 440 0008 FB71     		strb	r3, [r7, #7]
 354:Generated_Source\PSoC5/SPI_IMU.c ****     SPI_IMU_RX_STATUS_MASK_REG  = intSrc;
 441              		.loc 1 354 0
 442 000a 044A     		ldr	r2, .L22
 443 000c FB79     		ldrb	r3, [r7, #7]
 444 000e 1370     		strb	r3, [r2]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc2leDoT.s 			page 15


 355:Generated_Source\PSoC5/SPI_IMU.c **** }
 445              		.loc 1 355 0
 446 0010 00BF     		nop
 447 0012 0C37     		adds	r7, r7, #12
 448              		.cfi_def_cfa_offset 4
 449 0014 BD46     		mov	sp, r7
 450              		.cfi_def_cfa_register 13
 451              		@ sp needed
 452 0016 80BC     		pop	{r7}
 453              		.cfi_restore 7
 454              		.cfi_def_cfa_offset 0
 455 0018 7047     		bx	lr
 456              	.L23:
 457 001a 00BF     		.align	2
 458              	.L22:
 459 001c 80640040 		.word	1073767552
 460              		.cfi_endproc
 461              	.LFE9:
 462              		.size	SPI_IMU_SetRxInterruptMode, .-SPI_IMU_SetRxInterruptMode
 463              		.section	.text.SPI_IMU_ReadTxStatus,"ax",%progbits
 464              		.align	2
 465              		.global	SPI_IMU_ReadTxStatus
 466              		.thumb
 467              		.thumb_func
 468              		.type	SPI_IMU_ReadTxStatus, %function
 469              	SPI_IMU_ReadTxStatus:
 470              	.LFB10:
 356:Generated_Source\PSoC5/SPI_IMU.c **** 
 357:Generated_Source\PSoC5/SPI_IMU.c **** 
 358:Generated_Source\PSoC5/SPI_IMU.c **** /*******************************************************************************
 359:Generated_Source\PSoC5/SPI_IMU.c **** * Function Name: SPI_IMU_ReadTxStatus
 360:Generated_Source\PSoC5/SPI_IMU.c **** ********************************************************************************
 361:Generated_Source\PSoC5/SPI_IMU.c **** *
 362:Generated_Source\PSoC5/SPI_IMU.c **** * Summary:
 363:Generated_Source\PSoC5/SPI_IMU.c **** *  Read the Tx status register for the component.
 364:Generated_Source\PSoC5/SPI_IMU.c **** *
 365:Generated_Source\PSoC5/SPI_IMU.c **** * Parameters:
 366:Generated_Source\PSoC5/SPI_IMU.c **** *  None.
 367:Generated_Source\PSoC5/SPI_IMU.c **** *
 368:Generated_Source\PSoC5/SPI_IMU.c **** * Return:
 369:Generated_Source\PSoC5/SPI_IMU.c **** *  Contents of the Tx status register.
 370:Generated_Source\PSoC5/SPI_IMU.c **** *
 371:Generated_Source\PSoC5/SPI_IMU.c **** * Global variables:
 372:Generated_Source\PSoC5/SPI_IMU.c **** *  SPI_IMU_swStatusTx - used to store in software status register,
 373:Generated_Source\PSoC5/SPI_IMU.c **** *  modified every function call - resets to zero.
 374:Generated_Source\PSoC5/SPI_IMU.c **** *
 375:Generated_Source\PSoC5/SPI_IMU.c **** * Theory:
 376:Generated_Source\PSoC5/SPI_IMU.c **** *  Allows the user and the API to read the Tx status register for error
 377:Generated_Source\PSoC5/SPI_IMU.c **** *  detection and flow control.
 378:Generated_Source\PSoC5/SPI_IMU.c **** *
 379:Generated_Source\PSoC5/SPI_IMU.c **** * Side Effects:
 380:Generated_Source\PSoC5/SPI_IMU.c **** *  Clear Tx status register of the component.
 381:Generated_Source\PSoC5/SPI_IMU.c **** *
 382:Generated_Source\PSoC5/SPI_IMU.c **** * Reentrant:
 383:Generated_Source\PSoC5/SPI_IMU.c **** *  No.
 384:Generated_Source\PSoC5/SPI_IMU.c **** *
 385:Generated_Source\PSoC5/SPI_IMU.c **** *******************************************************************************/
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc2leDoT.s 			page 16


 386:Generated_Source\PSoC5/SPI_IMU.c **** uint8 SPI_IMU_ReadTxStatus(void) 
 387:Generated_Source\PSoC5/SPI_IMU.c **** {
 471              		.loc 1 387 0
 472              		.cfi_startproc
 473              		@ args = 0, pretend = 0, frame = 8
 474              		@ frame_needed = 1, uses_anonymous_args = 0
 475              		@ link register save eliminated.
 476 0000 80B4     		push	{r7}
 477              		.cfi_def_cfa_offset 4
 478              		.cfi_offset 7, -4
 479 0002 83B0     		sub	sp, sp, #12
 480              		.cfi_def_cfa_offset 16
 481 0004 00AF     		add	r7, sp, #0
 482              		.cfi_def_cfa_register 7
 388:Generated_Source\PSoC5/SPI_IMU.c ****     uint8 tmpStatus;
 389:Generated_Source\PSoC5/SPI_IMU.c **** 
 390:Generated_Source\PSoC5/SPI_IMU.c ****     #if(SPI_IMU_TX_SOFTWARE_BUF_ENABLED)
 391:Generated_Source\PSoC5/SPI_IMU.c ****         /* Disable TX interrupt to protect global veriables */
 392:Generated_Source\PSoC5/SPI_IMU.c ****         SPI_IMU_DisableTxInt();
 393:Generated_Source\PSoC5/SPI_IMU.c **** 
 394:Generated_Source\PSoC5/SPI_IMU.c ****         tmpStatus = SPI_IMU_GET_STATUS_TX(SPI_IMU_swStatusTx);
 395:Generated_Source\PSoC5/SPI_IMU.c ****         SPI_IMU_swStatusTx = 0u;
 396:Generated_Source\PSoC5/SPI_IMU.c **** 
 397:Generated_Source\PSoC5/SPI_IMU.c ****         SPI_IMU_EnableTxInt();
 398:Generated_Source\PSoC5/SPI_IMU.c **** 
 399:Generated_Source\PSoC5/SPI_IMU.c ****     #else
 400:Generated_Source\PSoC5/SPI_IMU.c **** 
 401:Generated_Source\PSoC5/SPI_IMU.c ****         tmpStatus = SPI_IMU_TX_STATUS_REG;
 483              		.loc 1 401 0
 484 0006 044B     		ldr	r3, .L26
 485 0008 1B78     		ldrb	r3, [r3]
 486 000a FB71     		strb	r3, [r7, #7]
 402:Generated_Source\PSoC5/SPI_IMU.c **** 
 403:Generated_Source\PSoC5/SPI_IMU.c ****     #endif /* (SPI_IMU_TX_SOFTWARE_BUF_ENABLED) */
 404:Generated_Source\PSoC5/SPI_IMU.c **** 
 405:Generated_Source\PSoC5/SPI_IMU.c ****     return(tmpStatus);
 487              		.loc 1 405 0
 488 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 406:Generated_Source\PSoC5/SPI_IMU.c **** }
 489              		.loc 1 406 0
 490 000e 1846     		mov	r0, r3
 491 0010 0C37     		adds	r7, r7, #12
 492              		.cfi_def_cfa_offset 4
 493 0012 BD46     		mov	sp, r7
 494              		.cfi_def_cfa_register 13
 495              		@ sp needed
 496 0014 80BC     		pop	{r7}
 497              		.cfi_restore 7
 498              		.cfi_def_cfa_offset 0
 499 0016 7047     		bx	lr
 500              	.L27:
 501              		.align	2
 502              	.L26:
 503 0018 65640040 		.word	1073767525
 504              		.cfi_endproc
 505              	.LFE10:
 506              		.size	SPI_IMU_ReadTxStatus, .-SPI_IMU_ReadTxStatus
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc2leDoT.s 			page 17


 507              		.section	.text.SPI_IMU_ReadRxStatus,"ax",%progbits
 508              		.align	2
 509              		.global	SPI_IMU_ReadRxStatus
 510              		.thumb
 511              		.thumb_func
 512              		.type	SPI_IMU_ReadRxStatus, %function
 513              	SPI_IMU_ReadRxStatus:
 514              	.LFB11:
 407:Generated_Source\PSoC5/SPI_IMU.c **** 
 408:Generated_Source\PSoC5/SPI_IMU.c **** 
 409:Generated_Source\PSoC5/SPI_IMU.c **** /*******************************************************************************
 410:Generated_Source\PSoC5/SPI_IMU.c **** * Function Name: SPI_IMU_ReadRxStatus
 411:Generated_Source\PSoC5/SPI_IMU.c **** ********************************************************************************
 412:Generated_Source\PSoC5/SPI_IMU.c **** *
 413:Generated_Source\PSoC5/SPI_IMU.c **** * Summary:
 414:Generated_Source\PSoC5/SPI_IMU.c **** *  Read the Rx status register for the component.
 415:Generated_Source\PSoC5/SPI_IMU.c **** *
 416:Generated_Source\PSoC5/SPI_IMU.c **** * Parameters:
 417:Generated_Source\PSoC5/SPI_IMU.c **** *  None.
 418:Generated_Source\PSoC5/SPI_IMU.c **** *
 419:Generated_Source\PSoC5/SPI_IMU.c **** * Return:
 420:Generated_Source\PSoC5/SPI_IMU.c **** *  Contents of the Rx status register.
 421:Generated_Source\PSoC5/SPI_IMU.c **** *
 422:Generated_Source\PSoC5/SPI_IMU.c **** * Global variables:
 423:Generated_Source\PSoC5/SPI_IMU.c **** *  SPI_IMU_swStatusRx - used to store in software Rx status register,
 424:Generated_Source\PSoC5/SPI_IMU.c **** *  modified every function call - resets to zero.
 425:Generated_Source\PSoC5/SPI_IMU.c **** *
 426:Generated_Source\PSoC5/SPI_IMU.c **** * Theory:
 427:Generated_Source\PSoC5/SPI_IMU.c **** *  Allows the user and the API to read the Rx status register for error
 428:Generated_Source\PSoC5/SPI_IMU.c **** *  detection and flow control.
 429:Generated_Source\PSoC5/SPI_IMU.c **** *
 430:Generated_Source\PSoC5/SPI_IMU.c **** * Side Effects:
 431:Generated_Source\PSoC5/SPI_IMU.c **** *  Clear Rx status register of the component.
 432:Generated_Source\PSoC5/SPI_IMU.c **** *
 433:Generated_Source\PSoC5/SPI_IMU.c **** * Reentrant:
 434:Generated_Source\PSoC5/SPI_IMU.c **** *  No.
 435:Generated_Source\PSoC5/SPI_IMU.c **** *
 436:Generated_Source\PSoC5/SPI_IMU.c **** *******************************************************************************/
 437:Generated_Source\PSoC5/SPI_IMU.c **** uint8 SPI_IMU_ReadRxStatus(void) 
 438:Generated_Source\PSoC5/SPI_IMU.c **** {
 515              		.loc 1 438 0
 516              		.cfi_startproc
 517              		@ args = 0, pretend = 0, frame = 8
 518              		@ frame_needed = 1, uses_anonymous_args = 0
 519              		@ link register save eliminated.
 520 0000 80B4     		push	{r7}
 521              		.cfi_def_cfa_offset 4
 522              		.cfi_offset 7, -4
 523 0002 83B0     		sub	sp, sp, #12
 524              		.cfi_def_cfa_offset 16
 525 0004 00AF     		add	r7, sp, #0
 526              		.cfi_def_cfa_register 7
 439:Generated_Source\PSoC5/SPI_IMU.c ****     uint8 tmpStatus;
 440:Generated_Source\PSoC5/SPI_IMU.c **** 
 441:Generated_Source\PSoC5/SPI_IMU.c ****     #if(SPI_IMU_RX_SOFTWARE_BUF_ENABLED)
 442:Generated_Source\PSoC5/SPI_IMU.c ****         /* Disable RX interrupt to protect global veriables */
 443:Generated_Source\PSoC5/SPI_IMU.c ****         SPI_IMU_DisableRxInt();
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc2leDoT.s 			page 18


 444:Generated_Source\PSoC5/SPI_IMU.c **** 
 445:Generated_Source\PSoC5/SPI_IMU.c ****         tmpStatus = SPI_IMU_GET_STATUS_RX(SPI_IMU_swStatusRx);
 446:Generated_Source\PSoC5/SPI_IMU.c ****         SPI_IMU_swStatusRx = 0u;
 447:Generated_Source\PSoC5/SPI_IMU.c **** 
 448:Generated_Source\PSoC5/SPI_IMU.c ****         SPI_IMU_EnableRxInt();
 449:Generated_Source\PSoC5/SPI_IMU.c **** 
 450:Generated_Source\PSoC5/SPI_IMU.c ****     #else
 451:Generated_Source\PSoC5/SPI_IMU.c **** 
 452:Generated_Source\PSoC5/SPI_IMU.c ****         tmpStatus = SPI_IMU_RX_STATUS_REG;
 527              		.loc 1 452 0
 528 0006 044B     		ldr	r3, .L30
 529 0008 1B78     		ldrb	r3, [r3]
 530 000a FB71     		strb	r3, [r7, #7]
 453:Generated_Source\PSoC5/SPI_IMU.c **** 
 454:Generated_Source\PSoC5/SPI_IMU.c ****     #endif /* (SPI_IMU_RX_SOFTWARE_BUF_ENABLED) */
 455:Generated_Source\PSoC5/SPI_IMU.c **** 
 456:Generated_Source\PSoC5/SPI_IMU.c ****     return(tmpStatus);
 531              		.loc 1 456 0
 532 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 457:Generated_Source\PSoC5/SPI_IMU.c **** }
 533              		.loc 1 457 0
 534 000e 1846     		mov	r0, r3
 535 0010 0C37     		adds	r7, r7, #12
 536              		.cfi_def_cfa_offset 4
 537 0012 BD46     		mov	sp, r7
 538              		.cfi_def_cfa_register 13
 539              		@ sp needed
 540 0014 80BC     		pop	{r7}
 541              		.cfi_restore 7
 542              		.cfi_def_cfa_offset 0
 543 0016 7047     		bx	lr
 544              	.L31:
 545              		.align	2
 546              	.L30:
 547 0018 60640040 		.word	1073767520
 548              		.cfi_endproc
 549              	.LFE11:
 550              		.size	SPI_IMU_ReadRxStatus, .-SPI_IMU_ReadRxStatus
 551              		.section	.text.SPI_IMU_WriteTxData,"ax",%progbits
 552              		.align	2
 553              		.global	SPI_IMU_WriteTxData
 554              		.thumb
 555              		.thumb_func
 556              		.type	SPI_IMU_WriteTxData, %function
 557              	SPI_IMU_WriteTxData:
 558              	.LFB12:
 458:Generated_Source\PSoC5/SPI_IMU.c **** 
 459:Generated_Source\PSoC5/SPI_IMU.c **** 
 460:Generated_Source\PSoC5/SPI_IMU.c **** /*******************************************************************************
 461:Generated_Source\PSoC5/SPI_IMU.c **** * Function Name: SPI_IMU_WriteTxData
 462:Generated_Source\PSoC5/SPI_IMU.c **** ********************************************************************************
 463:Generated_Source\PSoC5/SPI_IMU.c **** *
 464:Generated_Source\PSoC5/SPI_IMU.c **** * Summary:
 465:Generated_Source\PSoC5/SPI_IMU.c **** *  Write a byte of data to be sent across the SPI.
 466:Generated_Source\PSoC5/SPI_IMU.c **** *
 467:Generated_Source\PSoC5/SPI_IMU.c **** * Parameters:
 468:Generated_Source\PSoC5/SPI_IMU.c **** *  txDataByte: The data value to send across the SPI.
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc2leDoT.s 			page 19


 469:Generated_Source\PSoC5/SPI_IMU.c **** *
 470:Generated_Source\PSoC5/SPI_IMU.c **** * Return:
 471:Generated_Source\PSoC5/SPI_IMU.c **** *  None.
 472:Generated_Source\PSoC5/SPI_IMU.c **** *
 473:Generated_Source\PSoC5/SPI_IMU.c **** * Global variables:
 474:Generated_Source\PSoC5/SPI_IMU.c **** *  SPI_IMU_txBufferWrite - used for the account of the bytes which
 475:Generated_Source\PSoC5/SPI_IMU.c **** *  have been written down in the TX software buffer, modified every function
 476:Generated_Source\PSoC5/SPI_IMU.c **** *  call if TX Software Buffer is used.
 477:Generated_Source\PSoC5/SPI_IMU.c **** *  SPI_IMU_txBufferRead - used for the account of the bytes which
 478:Generated_Source\PSoC5/SPI_IMU.c **** *  have been read from the TX software buffer.
 479:Generated_Source\PSoC5/SPI_IMU.c **** *  SPI_IMU_txBuffer[SPI_IMU_TX_BUFFER_SIZE] - used to store
 480:Generated_Source\PSoC5/SPI_IMU.c **** *  data to sending, modified every function call if TX Software Buffer is used.
 481:Generated_Source\PSoC5/SPI_IMU.c **** *
 482:Generated_Source\PSoC5/SPI_IMU.c **** * Theory:
 483:Generated_Source\PSoC5/SPI_IMU.c **** *  Allows the user to transmit any byte of data in a single transfer.
 484:Generated_Source\PSoC5/SPI_IMU.c **** *
 485:Generated_Source\PSoC5/SPI_IMU.c **** * Side Effects:
 486:Generated_Source\PSoC5/SPI_IMU.c **** *  If this function is called again before the previous byte is finished then
 487:Generated_Source\PSoC5/SPI_IMU.c **** *  the next byte will be appended to the transfer with no time between
 488:Generated_Source\PSoC5/SPI_IMU.c **** *  the byte transfers. Clear Tx status register of the component.
 489:Generated_Source\PSoC5/SPI_IMU.c **** *
 490:Generated_Source\PSoC5/SPI_IMU.c **** * Reentrant:
 491:Generated_Source\PSoC5/SPI_IMU.c **** *  No.
 492:Generated_Source\PSoC5/SPI_IMU.c **** *
 493:Generated_Source\PSoC5/SPI_IMU.c **** *******************************************************************************/
 494:Generated_Source\PSoC5/SPI_IMU.c **** void SPI_IMU_WriteTxData(uint8 txData) 
 495:Generated_Source\PSoC5/SPI_IMU.c **** {
 559              		.loc 1 495 0
 560              		.cfi_startproc
 561              		@ args = 0, pretend = 0, frame = 8
 562              		@ frame_needed = 1, uses_anonymous_args = 0
 563              		@ link register save eliminated.
 564 0000 80B4     		push	{r7}
 565              		.cfi_def_cfa_offset 4
 566              		.cfi_offset 7, -4
 567 0002 83B0     		sub	sp, sp, #12
 568              		.cfi_def_cfa_offset 16
 569 0004 00AF     		add	r7, sp, #0
 570              		.cfi_def_cfa_register 7
 571 0006 0346     		mov	r3, r0
 572 0008 FB71     		strb	r3, [r7, #7]
 496:Generated_Source\PSoC5/SPI_IMU.c ****     #if(SPI_IMU_TX_SOFTWARE_BUF_ENABLED)
 497:Generated_Source\PSoC5/SPI_IMU.c **** 
 498:Generated_Source\PSoC5/SPI_IMU.c ****         uint8 tempStatus;
 499:Generated_Source\PSoC5/SPI_IMU.c ****         uint8 tmpTxBufferRead;
 500:Generated_Source\PSoC5/SPI_IMU.c **** 
 501:Generated_Source\PSoC5/SPI_IMU.c ****         /* Block if TX buffer is FULL: don't overwrite */
 502:Generated_Source\PSoC5/SPI_IMU.c ****         do
 503:Generated_Source\PSoC5/SPI_IMU.c ****         {
 504:Generated_Source\PSoC5/SPI_IMU.c ****             tmpTxBufferRead = SPI_IMU_txBufferRead;
 505:Generated_Source\PSoC5/SPI_IMU.c ****             if(0u == tmpTxBufferRead)
 506:Generated_Source\PSoC5/SPI_IMU.c ****             {
 507:Generated_Source\PSoC5/SPI_IMU.c ****                 tmpTxBufferRead = (SPI_IMU_TX_BUFFER_SIZE - 1u);
 508:Generated_Source\PSoC5/SPI_IMU.c ****             }
 509:Generated_Source\PSoC5/SPI_IMU.c ****             else
 510:Generated_Source\PSoC5/SPI_IMU.c ****             {
 511:Generated_Source\PSoC5/SPI_IMU.c ****                 tmpTxBufferRead--;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc2leDoT.s 			page 20


 512:Generated_Source\PSoC5/SPI_IMU.c ****             }
 513:Generated_Source\PSoC5/SPI_IMU.c **** 
 514:Generated_Source\PSoC5/SPI_IMU.c ****         }while(tmpTxBufferRead == SPI_IMU_txBufferWrite);
 515:Generated_Source\PSoC5/SPI_IMU.c **** 
 516:Generated_Source\PSoC5/SPI_IMU.c ****         /* Disable TX interrupt to protect global veriables */
 517:Generated_Source\PSoC5/SPI_IMU.c ****         SPI_IMU_DisableTxInt();
 518:Generated_Source\PSoC5/SPI_IMU.c **** 
 519:Generated_Source\PSoC5/SPI_IMU.c ****         tempStatus = SPI_IMU_GET_STATUS_TX(SPI_IMU_swStatusTx);
 520:Generated_Source\PSoC5/SPI_IMU.c ****         SPI_IMU_swStatusTx = tempStatus;
 521:Generated_Source\PSoC5/SPI_IMU.c **** 
 522:Generated_Source\PSoC5/SPI_IMU.c **** 
 523:Generated_Source\PSoC5/SPI_IMU.c ****         if((SPI_IMU_txBufferRead == SPI_IMU_txBufferWrite) &&
 524:Generated_Source\PSoC5/SPI_IMU.c ****            (0u != (SPI_IMU_swStatusTx & SPI_IMU_STS_TX_FIFO_NOT_FULL)))
 525:Generated_Source\PSoC5/SPI_IMU.c ****         {
 526:Generated_Source\PSoC5/SPI_IMU.c ****             /* Put data element into the TX FIFO */
 527:Generated_Source\PSoC5/SPI_IMU.c ****             CY_SET_REG8(SPI_IMU_TXDATA_PTR, txData);
 528:Generated_Source\PSoC5/SPI_IMU.c ****         }
 529:Generated_Source\PSoC5/SPI_IMU.c ****         else
 530:Generated_Source\PSoC5/SPI_IMU.c ****         {
 531:Generated_Source\PSoC5/SPI_IMU.c ****             /* Add to the TX software buffer */
 532:Generated_Source\PSoC5/SPI_IMU.c ****             SPI_IMU_txBufferWrite++;
 533:Generated_Source\PSoC5/SPI_IMU.c ****             if(SPI_IMU_txBufferWrite >= SPI_IMU_TX_BUFFER_SIZE)
 534:Generated_Source\PSoC5/SPI_IMU.c ****             {
 535:Generated_Source\PSoC5/SPI_IMU.c ****                 SPI_IMU_txBufferWrite = 0u;
 536:Generated_Source\PSoC5/SPI_IMU.c ****             }
 537:Generated_Source\PSoC5/SPI_IMU.c **** 
 538:Generated_Source\PSoC5/SPI_IMU.c ****             if(SPI_IMU_txBufferWrite == SPI_IMU_txBufferRead)
 539:Generated_Source\PSoC5/SPI_IMU.c ****             {
 540:Generated_Source\PSoC5/SPI_IMU.c ****                 SPI_IMU_txBufferRead++;
 541:Generated_Source\PSoC5/SPI_IMU.c ****                 if(SPI_IMU_txBufferRead >= SPI_IMU_TX_BUFFER_SIZE)
 542:Generated_Source\PSoC5/SPI_IMU.c ****                 {
 543:Generated_Source\PSoC5/SPI_IMU.c ****                     SPI_IMU_txBufferRead = 0u;
 544:Generated_Source\PSoC5/SPI_IMU.c ****                 }
 545:Generated_Source\PSoC5/SPI_IMU.c ****                 SPI_IMU_txBufferFull = 1u;
 546:Generated_Source\PSoC5/SPI_IMU.c ****             }
 547:Generated_Source\PSoC5/SPI_IMU.c **** 
 548:Generated_Source\PSoC5/SPI_IMU.c ****             SPI_IMU_txBuffer[SPI_IMU_txBufferWrite] = txData;
 549:Generated_Source\PSoC5/SPI_IMU.c **** 
 550:Generated_Source\PSoC5/SPI_IMU.c ****             SPI_IMU_TX_STATUS_MASK_REG |= SPI_IMU_STS_TX_FIFO_NOT_FULL;
 551:Generated_Source\PSoC5/SPI_IMU.c ****         }
 552:Generated_Source\PSoC5/SPI_IMU.c **** 
 553:Generated_Source\PSoC5/SPI_IMU.c ****         SPI_IMU_EnableTxInt();
 554:Generated_Source\PSoC5/SPI_IMU.c **** 
 555:Generated_Source\PSoC5/SPI_IMU.c ****     #else
 556:Generated_Source\PSoC5/SPI_IMU.c ****         /* Wait until TX FIFO has a place */
 557:Generated_Source\PSoC5/SPI_IMU.c ****         while(0u == (SPI_IMU_TX_STATUS_REG & SPI_IMU_STS_TX_FIFO_NOT_FULL))
 573              		.loc 1 557 0
 574 000a 00BF     		nop
 575              	.L33:
 576              		.loc 1 557 0 is_stmt 0 discriminator 1
 577 000c 074B     		ldr	r3, .L34
 578 000e 1B78     		ldrb	r3, [r3]
 579 0010 DBB2     		uxtb	r3, r3
 580 0012 03F00403 		and	r3, r3, #4
 581 0016 002B     		cmp	r3, #0
 582 0018 F8D0     		beq	.L33
 558:Generated_Source\PSoC5/SPI_IMU.c ****         {
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc2leDoT.s 			page 21


 559:Generated_Source\PSoC5/SPI_IMU.c ****         }
 560:Generated_Source\PSoC5/SPI_IMU.c **** 
 561:Generated_Source\PSoC5/SPI_IMU.c ****         /* Put data element into the TX FIFO */
 562:Generated_Source\PSoC5/SPI_IMU.c ****         CY_SET_REG8(SPI_IMU_TXDATA_PTR, txData);
 583              		.loc 1 562 0 is_stmt 1
 584 001a 054A     		ldr	r2, .L34+4
 585 001c FB79     		ldrb	r3, [r7, #7]
 586 001e 1370     		strb	r3, [r2]
 563:Generated_Source\PSoC5/SPI_IMU.c **** 
 564:Generated_Source\PSoC5/SPI_IMU.c ****     #endif /* (SPI_IMU_TX_SOFTWARE_BUF_ENABLED) */
 565:Generated_Source\PSoC5/SPI_IMU.c **** }
 587              		.loc 1 565 0
 588 0020 00BF     		nop
 589 0022 0C37     		adds	r7, r7, #12
 590              		.cfi_def_cfa_offset 4
 591 0024 BD46     		mov	sp, r7
 592              		.cfi_def_cfa_register 13
 593              		@ sp needed
 594 0026 80BC     		pop	{r7}
 595              		.cfi_restore 7
 596              		.cfi_def_cfa_offset 0
 597 0028 7047     		bx	lr
 598              	.L35:
 599 002a 00BF     		.align	2
 600              	.L34:
 601 002c 65640040 		.word	1073767525
 602 0030 41640040 		.word	1073767489
 603              		.cfi_endproc
 604              	.LFE12:
 605              		.size	SPI_IMU_WriteTxData, .-SPI_IMU_WriteTxData
 606              		.section	.text.SPI_IMU_ReadRxData,"ax",%progbits
 607              		.align	2
 608              		.global	SPI_IMU_ReadRxData
 609              		.thumb
 610              		.thumb_func
 611              		.type	SPI_IMU_ReadRxData, %function
 612              	SPI_IMU_ReadRxData:
 613              	.LFB13:
 566:Generated_Source\PSoC5/SPI_IMU.c **** 
 567:Generated_Source\PSoC5/SPI_IMU.c **** 
 568:Generated_Source\PSoC5/SPI_IMU.c **** /*******************************************************************************
 569:Generated_Source\PSoC5/SPI_IMU.c **** * Function Name: SPI_IMU_ReadRxData
 570:Generated_Source\PSoC5/SPI_IMU.c **** ********************************************************************************
 571:Generated_Source\PSoC5/SPI_IMU.c **** *
 572:Generated_Source\PSoC5/SPI_IMU.c **** * Summary:
 573:Generated_Source\PSoC5/SPI_IMU.c **** *  Read the next byte of data received across the SPI.
 574:Generated_Source\PSoC5/SPI_IMU.c **** *
 575:Generated_Source\PSoC5/SPI_IMU.c **** * Parameters:
 576:Generated_Source\PSoC5/SPI_IMU.c **** *  None.
 577:Generated_Source\PSoC5/SPI_IMU.c **** *
 578:Generated_Source\PSoC5/SPI_IMU.c **** * Return:
 579:Generated_Source\PSoC5/SPI_IMU.c **** *  The next byte of data read from the FIFO.
 580:Generated_Source\PSoC5/SPI_IMU.c **** *
 581:Generated_Source\PSoC5/SPI_IMU.c **** * Global variables:
 582:Generated_Source\PSoC5/SPI_IMU.c **** *  SPI_IMU_rxBufferWrite - used for the account of the bytes which
 583:Generated_Source\PSoC5/SPI_IMU.c **** *  have been written down in the RX software buffer.
 584:Generated_Source\PSoC5/SPI_IMU.c **** *  SPI_IMU_rxBufferRead - used for the account of the bytes which
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc2leDoT.s 			page 22


 585:Generated_Source\PSoC5/SPI_IMU.c **** *  have been read from the RX software buffer, modified every function
 586:Generated_Source\PSoC5/SPI_IMU.c **** *  call if RX Software Buffer is used.
 587:Generated_Source\PSoC5/SPI_IMU.c **** *  SPI_IMU_rxBuffer[SPI_IMU_RX_BUFFER_SIZE] - used to store
 588:Generated_Source\PSoC5/SPI_IMU.c **** *  received data.
 589:Generated_Source\PSoC5/SPI_IMU.c **** *
 590:Generated_Source\PSoC5/SPI_IMU.c **** * Theory:
 591:Generated_Source\PSoC5/SPI_IMU.c **** *  Allows the user to read a byte of data received.
 592:Generated_Source\PSoC5/SPI_IMU.c **** *
 593:Generated_Source\PSoC5/SPI_IMU.c **** * Side Effects:
 594:Generated_Source\PSoC5/SPI_IMU.c **** *  Will return invalid data if the FIFO is empty. The user should Call
 595:Generated_Source\PSoC5/SPI_IMU.c **** *  GetRxBufferSize() and if it returns a non-zero value then it is safe to call
 596:Generated_Source\PSoC5/SPI_IMU.c **** *  ReadByte() function.
 597:Generated_Source\PSoC5/SPI_IMU.c **** *
 598:Generated_Source\PSoC5/SPI_IMU.c **** * Reentrant:
 599:Generated_Source\PSoC5/SPI_IMU.c **** *  No.
 600:Generated_Source\PSoC5/SPI_IMU.c **** *
 601:Generated_Source\PSoC5/SPI_IMU.c **** *******************************************************************************/
 602:Generated_Source\PSoC5/SPI_IMU.c **** uint8 SPI_IMU_ReadRxData(void) 
 603:Generated_Source\PSoC5/SPI_IMU.c **** {
 614              		.loc 1 603 0
 615              		.cfi_startproc
 616              		@ args = 0, pretend = 0, frame = 8
 617              		@ frame_needed = 1, uses_anonymous_args = 0
 618              		@ link register save eliminated.
 619 0000 80B4     		push	{r7}
 620              		.cfi_def_cfa_offset 4
 621              		.cfi_offset 7, -4
 622 0002 83B0     		sub	sp, sp, #12
 623              		.cfi_def_cfa_offset 16
 624 0004 00AF     		add	r7, sp, #0
 625              		.cfi_def_cfa_register 7
 604:Generated_Source\PSoC5/SPI_IMU.c ****     uint8 rxData;
 605:Generated_Source\PSoC5/SPI_IMU.c **** 
 606:Generated_Source\PSoC5/SPI_IMU.c ****     #if(SPI_IMU_RX_SOFTWARE_BUF_ENABLED)
 607:Generated_Source\PSoC5/SPI_IMU.c **** 
 608:Generated_Source\PSoC5/SPI_IMU.c ****         /* Disable RX interrupt to protect global veriables */
 609:Generated_Source\PSoC5/SPI_IMU.c ****         SPI_IMU_DisableRxInt();
 610:Generated_Source\PSoC5/SPI_IMU.c **** 
 611:Generated_Source\PSoC5/SPI_IMU.c ****         if(SPI_IMU_rxBufferRead != SPI_IMU_rxBufferWrite)
 612:Generated_Source\PSoC5/SPI_IMU.c ****         {
 613:Generated_Source\PSoC5/SPI_IMU.c ****             if(0u == SPI_IMU_rxBufferFull)
 614:Generated_Source\PSoC5/SPI_IMU.c ****             {
 615:Generated_Source\PSoC5/SPI_IMU.c ****                 SPI_IMU_rxBufferRead++;
 616:Generated_Source\PSoC5/SPI_IMU.c ****                 if(SPI_IMU_rxBufferRead >= SPI_IMU_RX_BUFFER_SIZE)
 617:Generated_Source\PSoC5/SPI_IMU.c ****                 {
 618:Generated_Source\PSoC5/SPI_IMU.c ****                     SPI_IMU_rxBufferRead = 0u;
 619:Generated_Source\PSoC5/SPI_IMU.c ****                 }
 620:Generated_Source\PSoC5/SPI_IMU.c ****             }
 621:Generated_Source\PSoC5/SPI_IMU.c ****             else
 622:Generated_Source\PSoC5/SPI_IMU.c ****             {
 623:Generated_Source\PSoC5/SPI_IMU.c ****                 SPI_IMU_rxBufferFull = 0u;
 624:Generated_Source\PSoC5/SPI_IMU.c ****             }
 625:Generated_Source\PSoC5/SPI_IMU.c ****         }
 626:Generated_Source\PSoC5/SPI_IMU.c **** 
 627:Generated_Source\PSoC5/SPI_IMU.c ****         rxData = SPI_IMU_rxBuffer[SPI_IMU_rxBufferRead];
 628:Generated_Source\PSoC5/SPI_IMU.c **** 
 629:Generated_Source\PSoC5/SPI_IMU.c ****         SPI_IMU_EnableRxInt();
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc2leDoT.s 			page 23


 630:Generated_Source\PSoC5/SPI_IMU.c **** 
 631:Generated_Source\PSoC5/SPI_IMU.c ****     #else
 632:Generated_Source\PSoC5/SPI_IMU.c **** 
 633:Generated_Source\PSoC5/SPI_IMU.c ****         rxData = CY_GET_REG8(SPI_IMU_RXDATA_PTR);
 626              		.loc 1 633 0
 627 0006 044B     		ldr	r3, .L38
 628 0008 1B78     		ldrb	r3, [r3]
 629 000a FB71     		strb	r3, [r7, #7]
 634:Generated_Source\PSoC5/SPI_IMU.c **** 
 635:Generated_Source\PSoC5/SPI_IMU.c ****     #endif /* (SPI_IMU_RX_SOFTWARE_BUF_ENABLED) */
 636:Generated_Source\PSoC5/SPI_IMU.c **** 
 637:Generated_Source\PSoC5/SPI_IMU.c ****     return(rxData);
 630              		.loc 1 637 0
 631 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 638:Generated_Source\PSoC5/SPI_IMU.c **** }
 632              		.loc 1 638 0
 633 000e 1846     		mov	r0, r3
 634 0010 0C37     		adds	r7, r7, #12
 635              		.cfi_def_cfa_offset 4
 636 0012 BD46     		mov	sp, r7
 637              		.cfi_def_cfa_register 13
 638              		@ sp needed
 639 0014 80BC     		pop	{r7}
 640              		.cfi_restore 7
 641              		.cfi_def_cfa_offset 0
 642 0016 7047     		bx	lr
 643              	.L39:
 644              		.align	2
 645              	.L38:
 646 0018 51640040 		.word	1073767505
 647              		.cfi_endproc
 648              	.LFE13:
 649              		.size	SPI_IMU_ReadRxData, .-SPI_IMU_ReadRxData
 650              		.section	.text.SPI_IMU_GetRxBufferSize,"ax",%progbits
 651              		.align	2
 652              		.global	SPI_IMU_GetRxBufferSize
 653              		.thumb
 654              		.thumb_func
 655              		.type	SPI_IMU_GetRxBufferSize, %function
 656              	SPI_IMU_GetRxBufferSize:
 657              	.LFB14:
 639:Generated_Source\PSoC5/SPI_IMU.c **** 
 640:Generated_Source\PSoC5/SPI_IMU.c **** 
 641:Generated_Source\PSoC5/SPI_IMU.c **** /*******************************************************************************
 642:Generated_Source\PSoC5/SPI_IMU.c **** * Function Name: SPI_IMU_GetRxBufferSize
 643:Generated_Source\PSoC5/SPI_IMU.c **** ********************************************************************************
 644:Generated_Source\PSoC5/SPI_IMU.c **** *
 645:Generated_Source\PSoC5/SPI_IMU.c **** * Summary:
 646:Generated_Source\PSoC5/SPI_IMU.c **** *  Returns the number of bytes/words of data currently held in the RX buffer.
 647:Generated_Source\PSoC5/SPI_IMU.c **** *  If RX Software Buffer not used then function return 0 if FIFO empty or 1 if
 648:Generated_Source\PSoC5/SPI_IMU.c **** *  FIFO not empty. In another case function return size of RX Software Buffer.
 649:Generated_Source\PSoC5/SPI_IMU.c **** *
 650:Generated_Source\PSoC5/SPI_IMU.c **** * Parameters:
 651:Generated_Source\PSoC5/SPI_IMU.c **** *  None.
 652:Generated_Source\PSoC5/SPI_IMU.c **** *
 653:Generated_Source\PSoC5/SPI_IMU.c **** * Return:
 654:Generated_Source\PSoC5/SPI_IMU.c **** *  Integer count of the number of bytes/words in the RX buffer.
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc2leDoT.s 			page 24


 655:Generated_Source\PSoC5/SPI_IMU.c **** *
 656:Generated_Source\PSoC5/SPI_IMU.c **** * Global variables:
 657:Generated_Source\PSoC5/SPI_IMU.c **** *  SPI_IMU_rxBufferWrite - used for the account of the bytes which
 658:Generated_Source\PSoC5/SPI_IMU.c **** *  have been written down in the RX software buffer.
 659:Generated_Source\PSoC5/SPI_IMU.c **** *  SPI_IMU_rxBufferRead - used for the account of the bytes which
 660:Generated_Source\PSoC5/SPI_IMU.c **** *  have been read from the RX software buffer.
 661:Generated_Source\PSoC5/SPI_IMU.c **** *
 662:Generated_Source\PSoC5/SPI_IMU.c **** * Side Effects:
 663:Generated_Source\PSoC5/SPI_IMU.c **** *  Clear status register of the component.
 664:Generated_Source\PSoC5/SPI_IMU.c **** *
 665:Generated_Source\PSoC5/SPI_IMU.c **** *******************************************************************************/
 666:Generated_Source\PSoC5/SPI_IMU.c **** uint8 SPI_IMU_GetRxBufferSize(void) 
 667:Generated_Source\PSoC5/SPI_IMU.c **** {
 658              		.loc 1 667 0
 659              		.cfi_startproc
 660              		@ args = 0, pretend = 0, frame = 8
 661              		@ frame_needed = 1, uses_anonymous_args = 0
 662              		@ link register save eliminated.
 663 0000 80B4     		push	{r7}
 664              		.cfi_def_cfa_offset 4
 665              		.cfi_offset 7, -4
 666 0002 83B0     		sub	sp, sp, #12
 667              		.cfi_def_cfa_offset 16
 668 0004 00AF     		add	r7, sp, #0
 669              		.cfi_def_cfa_register 7
 668:Generated_Source\PSoC5/SPI_IMU.c ****     uint8 size;
 669:Generated_Source\PSoC5/SPI_IMU.c **** 
 670:Generated_Source\PSoC5/SPI_IMU.c ****     #if(SPI_IMU_RX_SOFTWARE_BUF_ENABLED)
 671:Generated_Source\PSoC5/SPI_IMU.c **** 
 672:Generated_Source\PSoC5/SPI_IMU.c ****         /* Disable RX interrupt to protect global veriables */
 673:Generated_Source\PSoC5/SPI_IMU.c ****         SPI_IMU_DisableRxInt();
 674:Generated_Source\PSoC5/SPI_IMU.c **** 
 675:Generated_Source\PSoC5/SPI_IMU.c ****         if(SPI_IMU_rxBufferRead == SPI_IMU_rxBufferWrite)
 676:Generated_Source\PSoC5/SPI_IMU.c ****         {
 677:Generated_Source\PSoC5/SPI_IMU.c ****             size = 0u;
 678:Generated_Source\PSoC5/SPI_IMU.c ****         }
 679:Generated_Source\PSoC5/SPI_IMU.c ****         else if(SPI_IMU_rxBufferRead < SPI_IMU_rxBufferWrite)
 680:Generated_Source\PSoC5/SPI_IMU.c ****         {
 681:Generated_Source\PSoC5/SPI_IMU.c ****             size = (SPI_IMU_rxBufferWrite - SPI_IMU_rxBufferRead);
 682:Generated_Source\PSoC5/SPI_IMU.c ****         }
 683:Generated_Source\PSoC5/SPI_IMU.c ****         else
 684:Generated_Source\PSoC5/SPI_IMU.c ****         {
 685:Generated_Source\PSoC5/SPI_IMU.c ****             size = (SPI_IMU_RX_BUFFER_SIZE - SPI_IMU_rxBufferRead) + SPI_IMU_rxBufferWrite;
 686:Generated_Source\PSoC5/SPI_IMU.c ****         }
 687:Generated_Source\PSoC5/SPI_IMU.c **** 
 688:Generated_Source\PSoC5/SPI_IMU.c ****         SPI_IMU_EnableRxInt();
 689:Generated_Source\PSoC5/SPI_IMU.c **** 
 690:Generated_Source\PSoC5/SPI_IMU.c ****     #else
 691:Generated_Source\PSoC5/SPI_IMU.c **** 
 692:Generated_Source\PSoC5/SPI_IMU.c ****         /* We can only know if there is data in the RX FIFO */
 693:Generated_Source\PSoC5/SPI_IMU.c ****         size = (0u != (SPI_IMU_RX_STATUS_REG & SPI_IMU_STS_RX_FIFO_NOT_EMPTY)) ? 1u : 0u;
 670              		.loc 1 693 0
 671 0006 084B     		ldr	r3, .L44
 672 0008 1B78     		ldrb	r3, [r3]
 673 000a DBB2     		uxtb	r3, r3
 674 000c 03F02003 		and	r3, r3, #32
 675 0010 002B     		cmp	r3, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc2leDoT.s 			page 25


 676 0012 01D0     		beq	.L41
 677              		.loc 1 693 0 is_stmt 0 discriminator 1
 678 0014 0123     		movs	r3, #1
 679 0016 00E0     		b	.L42
 680              	.L41:
 681              		.loc 1 693 0 discriminator 2
 682 0018 0023     		movs	r3, #0
 683              	.L42:
 684              		.loc 1 693 0 discriminator 4
 685 001a FB71     		strb	r3, [r7, #7]
 694:Generated_Source\PSoC5/SPI_IMU.c **** 
 695:Generated_Source\PSoC5/SPI_IMU.c ****     #endif /* (SPI_IMU_TX_SOFTWARE_BUF_ENABLED) */
 696:Generated_Source\PSoC5/SPI_IMU.c **** 
 697:Generated_Source\PSoC5/SPI_IMU.c ****     return(size);
 686              		.loc 1 697 0 is_stmt 1 discriminator 4
 687 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 698:Generated_Source\PSoC5/SPI_IMU.c **** }
 688              		.loc 1 698 0 discriminator 4
 689 001e 1846     		mov	r0, r3
 690 0020 0C37     		adds	r7, r7, #12
 691              		.cfi_def_cfa_offset 4
 692 0022 BD46     		mov	sp, r7
 693              		.cfi_def_cfa_register 13
 694              		@ sp needed
 695 0024 80BC     		pop	{r7}
 696              		.cfi_restore 7
 697              		.cfi_def_cfa_offset 0
 698 0026 7047     		bx	lr
 699              	.L45:
 700              		.align	2
 701              	.L44:
 702 0028 60640040 		.word	1073767520
 703              		.cfi_endproc
 704              	.LFE14:
 705              		.size	SPI_IMU_GetRxBufferSize, .-SPI_IMU_GetRxBufferSize
 706              		.section	.text.SPI_IMU_GetTxBufferSize,"ax",%progbits
 707              		.align	2
 708              		.global	SPI_IMU_GetTxBufferSize
 709              		.thumb
 710              		.thumb_func
 711              		.type	SPI_IMU_GetTxBufferSize, %function
 712              	SPI_IMU_GetTxBufferSize:
 713              	.LFB15:
 699:Generated_Source\PSoC5/SPI_IMU.c **** 
 700:Generated_Source\PSoC5/SPI_IMU.c **** 
 701:Generated_Source\PSoC5/SPI_IMU.c **** /*******************************************************************************
 702:Generated_Source\PSoC5/SPI_IMU.c **** * Function Name: SPI_IMU_GetTxBufferSize
 703:Generated_Source\PSoC5/SPI_IMU.c **** ********************************************************************************
 704:Generated_Source\PSoC5/SPI_IMU.c **** *
 705:Generated_Source\PSoC5/SPI_IMU.c **** * Summary:
 706:Generated_Source\PSoC5/SPI_IMU.c **** *  Returns the number of bytes/words of data currently held in the TX buffer.
 707:Generated_Source\PSoC5/SPI_IMU.c **** *  If TX Software Buffer not used then function return 0 - if FIFO empty, 1 - if
 708:Generated_Source\PSoC5/SPI_IMU.c **** *  FIFO not full, 4 - if FIFO full. In another case function return size of TX
 709:Generated_Source\PSoC5/SPI_IMU.c **** *  Software Buffer.
 710:Generated_Source\PSoC5/SPI_IMU.c **** *
 711:Generated_Source\PSoC5/SPI_IMU.c **** * Parameters:
 712:Generated_Source\PSoC5/SPI_IMU.c **** *  None.
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc2leDoT.s 			page 26


 713:Generated_Source\PSoC5/SPI_IMU.c **** *
 714:Generated_Source\PSoC5/SPI_IMU.c **** * Return:
 715:Generated_Source\PSoC5/SPI_IMU.c **** *  Integer count of the number of bytes/words in the TX buffer.
 716:Generated_Source\PSoC5/SPI_IMU.c **** *
 717:Generated_Source\PSoC5/SPI_IMU.c **** * Global variables:
 718:Generated_Source\PSoC5/SPI_IMU.c **** *  SPI_IMU_txBufferWrite - used for the account of the bytes which
 719:Generated_Source\PSoC5/SPI_IMU.c **** *  have been written down in the TX software buffer.
 720:Generated_Source\PSoC5/SPI_IMU.c **** *  SPI_IMU_txBufferRead - used for the account of the bytes which
 721:Generated_Source\PSoC5/SPI_IMU.c **** *  have been read from the TX software buffer.
 722:Generated_Source\PSoC5/SPI_IMU.c **** *
 723:Generated_Source\PSoC5/SPI_IMU.c **** * Side Effects:
 724:Generated_Source\PSoC5/SPI_IMU.c **** *  Clear status register of the component.
 725:Generated_Source\PSoC5/SPI_IMU.c **** *
 726:Generated_Source\PSoC5/SPI_IMU.c **** *******************************************************************************/
 727:Generated_Source\PSoC5/SPI_IMU.c **** uint8  SPI_IMU_GetTxBufferSize(void) 
 728:Generated_Source\PSoC5/SPI_IMU.c **** {
 714              		.loc 1 728 0
 715              		.cfi_startproc
 716              		@ args = 0, pretend = 0, frame = 8
 717              		@ frame_needed = 1, uses_anonymous_args = 0
 718              		@ link register save eliminated.
 719 0000 80B4     		push	{r7}
 720              		.cfi_def_cfa_offset 4
 721              		.cfi_offset 7, -4
 722 0002 83B0     		sub	sp, sp, #12
 723              		.cfi_def_cfa_offset 16
 724 0004 00AF     		add	r7, sp, #0
 725              		.cfi_def_cfa_register 7
 729:Generated_Source\PSoC5/SPI_IMU.c ****     uint8 size;
 730:Generated_Source\PSoC5/SPI_IMU.c **** 
 731:Generated_Source\PSoC5/SPI_IMU.c ****     #if(SPI_IMU_TX_SOFTWARE_BUF_ENABLED)
 732:Generated_Source\PSoC5/SPI_IMU.c ****         /* Disable TX interrupt to protect global veriables */
 733:Generated_Source\PSoC5/SPI_IMU.c ****         SPI_IMU_DisableTxInt();
 734:Generated_Source\PSoC5/SPI_IMU.c **** 
 735:Generated_Source\PSoC5/SPI_IMU.c ****         if(SPI_IMU_txBufferRead == SPI_IMU_txBufferWrite)
 736:Generated_Source\PSoC5/SPI_IMU.c ****         {
 737:Generated_Source\PSoC5/SPI_IMU.c ****             size = 0u;
 738:Generated_Source\PSoC5/SPI_IMU.c ****         }
 739:Generated_Source\PSoC5/SPI_IMU.c ****         else if(SPI_IMU_txBufferRead < SPI_IMU_txBufferWrite)
 740:Generated_Source\PSoC5/SPI_IMU.c ****         {
 741:Generated_Source\PSoC5/SPI_IMU.c ****             size = (SPI_IMU_txBufferWrite - SPI_IMU_txBufferRead);
 742:Generated_Source\PSoC5/SPI_IMU.c ****         }
 743:Generated_Source\PSoC5/SPI_IMU.c ****         else
 744:Generated_Source\PSoC5/SPI_IMU.c ****         {
 745:Generated_Source\PSoC5/SPI_IMU.c ****             size = (SPI_IMU_TX_BUFFER_SIZE - SPI_IMU_txBufferRead) + SPI_IMU_txBufferWrite;
 746:Generated_Source\PSoC5/SPI_IMU.c ****         }
 747:Generated_Source\PSoC5/SPI_IMU.c **** 
 748:Generated_Source\PSoC5/SPI_IMU.c ****         SPI_IMU_EnableTxInt();
 749:Generated_Source\PSoC5/SPI_IMU.c **** 
 750:Generated_Source\PSoC5/SPI_IMU.c ****     #else
 751:Generated_Source\PSoC5/SPI_IMU.c **** 
 752:Generated_Source\PSoC5/SPI_IMU.c ****         size = SPI_IMU_TX_STATUS_REG;
 726              		.loc 1 752 0
 727 0006 0D4B     		ldr	r3, .L51
 728 0008 1B78     		ldrb	r3, [r3]
 729 000a FB71     		strb	r3, [r7, #7]
 753:Generated_Source\PSoC5/SPI_IMU.c **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc2leDoT.s 			page 27


 754:Generated_Source\PSoC5/SPI_IMU.c ****         if(0u != (size & SPI_IMU_STS_TX_FIFO_EMPTY))
 730              		.loc 1 754 0
 731 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 732 000e 03F00203 		and	r3, r3, #2
 733 0012 002B     		cmp	r3, #0
 734 0014 02D0     		beq	.L47
 755:Generated_Source\PSoC5/SPI_IMU.c ****         {
 756:Generated_Source\PSoC5/SPI_IMU.c ****             size = 0u;
 735              		.loc 1 756 0
 736 0016 0023     		movs	r3, #0
 737 0018 FB71     		strb	r3, [r7, #7]
 738 001a 09E0     		b	.L48
 739              	.L47:
 757:Generated_Source\PSoC5/SPI_IMU.c ****         }
 758:Generated_Source\PSoC5/SPI_IMU.c ****         else if(0u != (size & SPI_IMU_STS_TX_FIFO_NOT_FULL))
 740              		.loc 1 758 0
 741 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 742 001e 03F00403 		and	r3, r3, #4
 743 0022 002B     		cmp	r3, #0
 744 0024 02D0     		beq	.L49
 759:Generated_Source\PSoC5/SPI_IMU.c ****         {
 760:Generated_Source\PSoC5/SPI_IMU.c ****             size = 1u;
 745              		.loc 1 760 0
 746 0026 0123     		movs	r3, #1
 747 0028 FB71     		strb	r3, [r7, #7]
 748 002a 01E0     		b	.L48
 749              	.L49:
 761:Generated_Source\PSoC5/SPI_IMU.c ****         }
 762:Generated_Source\PSoC5/SPI_IMU.c ****         else
 763:Generated_Source\PSoC5/SPI_IMU.c ****         {
 764:Generated_Source\PSoC5/SPI_IMU.c ****             size = SPI_IMU_FIFO_SIZE;
 750              		.loc 1 764 0
 751 002c 0423     		movs	r3, #4
 752 002e FB71     		strb	r3, [r7, #7]
 753              	.L48:
 765:Generated_Source\PSoC5/SPI_IMU.c ****         }
 766:Generated_Source\PSoC5/SPI_IMU.c **** 
 767:Generated_Source\PSoC5/SPI_IMU.c ****     #endif /* (SPI_IMU_TX_SOFTWARE_BUF_ENABLED) */
 768:Generated_Source\PSoC5/SPI_IMU.c **** 
 769:Generated_Source\PSoC5/SPI_IMU.c ****     return(size);
 754              		.loc 1 769 0
 755 0030 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 770:Generated_Source\PSoC5/SPI_IMU.c **** }
 756              		.loc 1 770 0
 757 0032 1846     		mov	r0, r3
 758 0034 0C37     		adds	r7, r7, #12
 759              		.cfi_def_cfa_offset 4
 760 0036 BD46     		mov	sp, r7
 761              		.cfi_def_cfa_register 13
 762              		@ sp needed
 763 0038 80BC     		pop	{r7}
 764              		.cfi_restore 7
 765              		.cfi_def_cfa_offset 0
 766 003a 7047     		bx	lr
 767              	.L52:
 768              		.align	2
 769              	.L51:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc2leDoT.s 			page 28


 770 003c 65640040 		.word	1073767525
 771              		.cfi_endproc
 772              	.LFE15:
 773              		.size	SPI_IMU_GetTxBufferSize, .-SPI_IMU_GetTxBufferSize
 774              		.section	.text.SPI_IMU_ClearRxBuffer,"ax",%progbits
 775              		.align	2
 776              		.global	SPI_IMU_ClearRxBuffer
 777              		.thumb
 778              		.thumb_func
 779              		.type	SPI_IMU_ClearRxBuffer, %function
 780              	SPI_IMU_ClearRxBuffer:
 781              	.LFB16:
 771:Generated_Source\PSoC5/SPI_IMU.c **** 
 772:Generated_Source\PSoC5/SPI_IMU.c **** 
 773:Generated_Source\PSoC5/SPI_IMU.c **** /*******************************************************************************
 774:Generated_Source\PSoC5/SPI_IMU.c **** * Function Name: SPI_IMU_ClearRxBuffer
 775:Generated_Source\PSoC5/SPI_IMU.c **** ********************************************************************************
 776:Generated_Source\PSoC5/SPI_IMU.c **** *
 777:Generated_Source\PSoC5/SPI_IMU.c **** * Summary:
 778:Generated_Source\PSoC5/SPI_IMU.c **** *  Clear the RX RAM buffer by setting the read and write pointers both to zero.
 779:Generated_Source\PSoC5/SPI_IMU.c **** *
 780:Generated_Source\PSoC5/SPI_IMU.c **** * Parameters:
 781:Generated_Source\PSoC5/SPI_IMU.c **** *  None.
 782:Generated_Source\PSoC5/SPI_IMU.c **** *
 783:Generated_Source\PSoC5/SPI_IMU.c **** * Return:
 784:Generated_Source\PSoC5/SPI_IMU.c **** *  None.
 785:Generated_Source\PSoC5/SPI_IMU.c **** *
 786:Generated_Source\PSoC5/SPI_IMU.c **** * Global variables:
 787:Generated_Source\PSoC5/SPI_IMU.c **** *  SPI_IMU_rxBufferWrite - used for the account of the bytes which
 788:Generated_Source\PSoC5/SPI_IMU.c **** *  have been written down in the RX software buffer, modified every function
 789:Generated_Source\PSoC5/SPI_IMU.c **** *  call - resets to zero.
 790:Generated_Source\PSoC5/SPI_IMU.c **** *  SPI_IMU_rxBufferRead - used for the account of the bytes which
 791:Generated_Source\PSoC5/SPI_IMU.c **** *  have been read from the RX software buffer, modified every function call -
 792:Generated_Source\PSoC5/SPI_IMU.c **** *  resets to zero.
 793:Generated_Source\PSoC5/SPI_IMU.c **** *
 794:Generated_Source\PSoC5/SPI_IMU.c **** * Theory:
 795:Generated_Source\PSoC5/SPI_IMU.c **** *  Setting the pointers to zero makes the system believe there is no data to
 796:Generated_Source\PSoC5/SPI_IMU.c **** *  read and writing will resume at address 0 overwriting any data that may have
 797:Generated_Source\PSoC5/SPI_IMU.c **** *  remained in the RAM.
 798:Generated_Source\PSoC5/SPI_IMU.c **** *
 799:Generated_Source\PSoC5/SPI_IMU.c **** * Side Effects:
 800:Generated_Source\PSoC5/SPI_IMU.c **** *  Any received data not read from the RAM buffer will be lost when overwritten.
 801:Generated_Source\PSoC5/SPI_IMU.c **** *
 802:Generated_Source\PSoC5/SPI_IMU.c **** * Reentrant:
 803:Generated_Source\PSoC5/SPI_IMU.c **** *  No.
 804:Generated_Source\PSoC5/SPI_IMU.c **** *
 805:Generated_Source\PSoC5/SPI_IMU.c **** *******************************************************************************/
 806:Generated_Source\PSoC5/SPI_IMU.c **** void SPI_IMU_ClearRxBuffer(void) 
 807:Generated_Source\PSoC5/SPI_IMU.c **** {
 782              		.loc 1 807 0
 783              		.cfi_startproc
 784              		@ args = 0, pretend = 0, frame = 0
 785              		@ frame_needed = 1, uses_anonymous_args = 0
 786              		@ link register save eliminated.
 787 0000 80B4     		push	{r7}
 788              		.cfi_def_cfa_offset 4
 789              		.cfi_offset 7, -4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc2leDoT.s 			page 29


 790 0002 00AF     		add	r7, sp, #0
 791              		.cfi_def_cfa_register 7
 808:Generated_Source\PSoC5/SPI_IMU.c ****     /* Clear Hardware RX FIFO */
 809:Generated_Source\PSoC5/SPI_IMU.c ****     while(0u !=(SPI_IMU_RX_STATUS_REG & SPI_IMU_STS_RX_FIFO_NOT_EMPTY))
 792              		.loc 1 809 0
 793 0004 01E0     		b	.L54
 794              	.L55:
 810:Generated_Source\PSoC5/SPI_IMU.c ****     {
 811:Generated_Source\PSoC5/SPI_IMU.c ****         (void) CY_GET_REG8(SPI_IMU_RXDATA_PTR);
 795              		.loc 1 811 0
 796 0006 064B     		ldr	r3, .L56
 797 0008 1B78     		ldrb	r3, [r3]
 798              	.L54:
 809:Generated_Source\PSoC5/SPI_IMU.c ****     {
 799              		.loc 1 809 0
 800 000a 064B     		ldr	r3, .L56+4
 801 000c 1B78     		ldrb	r3, [r3]
 802 000e DBB2     		uxtb	r3, r3
 803 0010 03F02003 		and	r3, r3, #32
 804 0014 002B     		cmp	r3, #0
 805 0016 F6D1     		bne	.L55
 812:Generated_Source\PSoC5/SPI_IMU.c ****     }
 813:Generated_Source\PSoC5/SPI_IMU.c **** 
 814:Generated_Source\PSoC5/SPI_IMU.c ****     #if(SPI_IMU_RX_SOFTWARE_BUF_ENABLED)
 815:Generated_Source\PSoC5/SPI_IMU.c ****         /* Disable RX interrupt to protect global veriables */
 816:Generated_Source\PSoC5/SPI_IMU.c ****         SPI_IMU_DisableRxInt();
 817:Generated_Source\PSoC5/SPI_IMU.c **** 
 818:Generated_Source\PSoC5/SPI_IMU.c ****         SPI_IMU_rxBufferFull  = 0u;
 819:Generated_Source\PSoC5/SPI_IMU.c ****         SPI_IMU_rxBufferRead  = 0u;
 820:Generated_Source\PSoC5/SPI_IMU.c ****         SPI_IMU_rxBufferWrite = 0u;
 821:Generated_Source\PSoC5/SPI_IMU.c **** 
 822:Generated_Source\PSoC5/SPI_IMU.c ****         SPI_IMU_EnableRxInt();
 823:Generated_Source\PSoC5/SPI_IMU.c ****     #endif /* (SPI_IMU_RX_SOFTWARE_BUF_ENABLED) */
 824:Generated_Source\PSoC5/SPI_IMU.c **** }
 806              		.loc 1 824 0
 807 0018 00BF     		nop
 808 001a BD46     		mov	sp, r7
 809              		.cfi_def_cfa_register 13
 810              		@ sp needed
 811 001c 80BC     		pop	{r7}
 812              		.cfi_restore 7
 813              		.cfi_def_cfa_offset 0
 814 001e 7047     		bx	lr
 815              	.L57:
 816              		.align	2
 817              	.L56:
 818 0020 51640040 		.word	1073767505
 819 0024 60640040 		.word	1073767520
 820              		.cfi_endproc
 821              	.LFE16:
 822              		.size	SPI_IMU_ClearRxBuffer, .-SPI_IMU_ClearRxBuffer
 823              		.section	.text.SPI_IMU_ClearTxBuffer,"ax",%progbits
 824              		.align	2
 825              		.global	SPI_IMU_ClearTxBuffer
 826              		.thumb
 827              		.thumb_func
 828              		.type	SPI_IMU_ClearTxBuffer, %function
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc2leDoT.s 			page 30


 829              	SPI_IMU_ClearTxBuffer:
 830              	.LFB17:
 825:Generated_Source\PSoC5/SPI_IMU.c **** 
 826:Generated_Source\PSoC5/SPI_IMU.c **** 
 827:Generated_Source\PSoC5/SPI_IMU.c **** /*******************************************************************************
 828:Generated_Source\PSoC5/SPI_IMU.c **** * Function Name: SPI_IMU_ClearTxBuffer
 829:Generated_Source\PSoC5/SPI_IMU.c **** ********************************************************************************
 830:Generated_Source\PSoC5/SPI_IMU.c **** *
 831:Generated_Source\PSoC5/SPI_IMU.c **** * Summary:
 832:Generated_Source\PSoC5/SPI_IMU.c **** *  Clear the TX RAM buffer by setting the read and write pointers both to zero.
 833:Generated_Source\PSoC5/SPI_IMU.c **** *
 834:Generated_Source\PSoC5/SPI_IMU.c **** * Parameters:
 835:Generated_Source\PSoC5/SPI_IMU.c **** *  None.
 836:Generated_Source\PSoC5/SPI_IMU.c **** *
 837:Generated_Source\PSoC5/SPI_IMU.c **** * Return:
 838:Generated_Source\PSoC5/SPI_IMU.c **** *  None.
 839:Generated_Source\PSoC5/SPI_IMU.c **** *
 840:Generated_Source\PSoC5/SPI_IMU.c **** * Global variables:
 841:Generated_Source\PSoC5/SPI_IMU.c **** *  SPI_IMU_txBufferWrite - used for the account of the bytes which
 842:Generated_Source\PSoC5/SPI_IMU.c **** *  have been written down in the TX software buffer, modified every function
 843:Generated_Source\PSoC5/SPI_IMU.c **** *  call - resets to zero.
 844:Generated_Source\PSoC5/SPI_IMU.c **** *  SPI_IMU_txBufferRead - used for the account of the bytes which
 845:Generated_Source\PSoC5/SPI_IMU.c **** *  have been read from the TX software buffer, modified every function call -
 846:Generated_Source\PSoC5/SPI_IMU.c **** *  resets to zero.
 847:Generated_Source\PSoC5/SPI_IMU.c **** *
 848:Generated_Source\PSoC5/SPI_IMU.c **** * Theory:
 849:Generated_Source\PSoC5/SPI_IMU.c **** *  Setting the pointers to zero makes the system believe there is no data to
 850:Generated_Source\PSoC5/SPI_IMU.c **** *  read and writing will resume at address 0 overwriting any data that may have
 851:Generated_Source\PSoC5/SPI_IMU.c **** *  remained in the RAM.
 852:Generated_Source\PSoC5/SPI_IMU.c **** *
 853:Generated_Source\PSoC5/SPI_IMU.c **** * Side Effects:
 854:Generated_Source\PSoC5/SPI_IMU.c **** *  Any data not yet transmitted from the RAM buffer will be lost when
 855:Generated_Source\PSoC5/SPI_IMU.c **** *  overwritten.
 856:Generated_Source\PSoC5/SPI_IMU.c **** *
 857:Generated_Source\PSoC5/SPI_IMU.c **** * Reentrant:
 858:Generated_Source\PSoC5/SPI_IMU.c **** *  No.
 859:Generated_Source\PSoC5/SPI_IMU.c **** *
 860:Generated_Source\PSoC5/SPI_IMU.c **** *******************************************************************************/
 861:Generated_Source\PSoC5/SPI_IMU.c **** void SPI_IMU_ClearTxBuffer(void) 
 862:Generated_Source\PSoC5/SPI_IMU.c **** {
 831              		.loc 1 862 0
 832              		.cfi_startproc
 833              		@ args = 0, pretend = 0, frame = 8
 834              		@ frame_needed = 1, uses_anonymous_args = 0
 835 0000 80B5     		push	{r7, lr}
 836              		.cfi_def_cfa_offset 8
 837              		.cfi_offset 7, -8
 838              		.cfi_offset 14, -4
 839 0002 82B0     		sub	sp, sp, #8
 840              		.cfi_def_cfa_offset 16
 841 0004 00AF     		add	r7, sp, #0
 842              		.cfi_def_cfa_register 7
 863:Generated_Source\PSoC5/SPI_IMU.c ****     uint8 enableInterrupts;
 864:Generated_Source\PSoC5/SPI_IMU.c **** 
 865:Generated_Source\PSoC5/SPI_IMU.c ****     enableInterrupts = CyEnterCriticalSection();
 843              		.loc 1 865 0
 844 0006 FFF7FEFF 		bl	CyEnterCriticalSection
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc2leDoT.s 			page 31


 845 000a 0346     		mov	r3, r0
 846 000c FB71     		strb	r3, [r7, #7]
 866:Generated_Source\PSoC5/SPI_IMU.c ****     /* Clear TX FIFO */
 867:Generated_Source\PSoC5/SPI_IMU.c ****     SPI_IMU_AUX_CONTROL_DP0_REG |= ((uint8)  SPI_IMU_TX_FIFO_CLR);
 847              		.loc 1 867 0
 848 000e 0C4A     		ldr	r2, .L59
 849 0010 0B4B     		ldr	r3, .L59
 850 0012 1B78     		ldrb	r3, [r3]
 851 0014 DBB2     		uxtb	r3, r3
 852 0016 43F00103 		orr	r3, r3, #1
 853 001a DBB2     		uxtb	r3, r3
 854 001c 1370     		strb	r3, [r2]
 868:Generated_Source\PSoC5/SPI_IMU.c ****     SPI_IMU_AUX_CONTROL_DP0_REG &= ((uint8) ~SPI_IMU_TX_FIFO_CLR);
 855              		.loc 1 868 0
 856 001e 084A     		ldr	r2, .L59
 857 0020 074B     		ldr	r3, .L59
 858 0022 1B78     		ldrb	r3, [r3]
 859 0024 DBB2     		uxtb	r3, r3
 860 0026 23F00103 		bic	r3, r3, #1
 861 002a DBB2     		uxtb	r3, r3
 862 002c 1370     		strb	r3, [r2]
 869:Generated_Source\PSoC5/SPI_IMU.c **** 
 870:Generated_Source\PSoC5/SPI_IMU.c ****     #if(SPI_IMU_USE_SECOND_DATAPATH)
 871:Generated_Source\PSoC5/SPI_IMU.c ****         /* Clear TX FIFO for 2nd Datapath */
 872:Generated_Source\PSoC5/SPI_IMU.c ****         SPI_IMU_AUX_CONTROL_DP1_REG |= ((uint8)  SPI_IMU_TX_FIFO_CLR);
 873:Generated_Source\PSoC5/SPI_IMU.c ****         SPI_IMU_AUX_CONTROL_DP1_REG &= ((uint8) ~SPI_IMU_TX_FIFO_CLR);
 874:Generated_Source\PSoC5/SPI_IMU.c ****     #endif /* (SPI_IMU_USE_SECOND_DATAPATH) */
 875:Generated_Source\PSoC5/SPI_IMU.c ****     CyExitCriticalSection(enableInterrupts);
 863              		.loc 1 875 0
 864 002e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 865 0030 1846     		mov	r0, r3
 866 0032 FFF7FEFF 		bl	CyExitCriticalSection
 876:Generated_Source\PSoC5/SPI_IMU.c **** 
 877:Generated_Source\PSoC5/SPI_IMU.c ****     #if(SPI_IMU_TX_SOFTWARE_BUF_ENABLED)
 878:Generated_Source\PSoC5/SPI_IMU.c ****         /* Disable TX interrupt to protect global veriables */
 879:Generated_Source\PSoC5/SPI_IMU.c ****         SPI_IMU_DisableTxInt();
 880:Generated_Source\PSoC5/SPI_IMU.c **** 
 881:Generated_Source\PSoC5/SPI_IMU.c ****         SPI_IMU_txBufferFull  = 0u;
 882:Generated_Source\PSoC5/SPI_IMU.c ****         SPI_IMU_txBufferRead  = 0u;
 883:Generated_Source\PSoC5/SPI_IMU.c ****         SPI_IMU_txBufferWrite = 0u;
 884:Generated_Source\PSoC5/SPI_IMU.c **** 
 885:Generated_Source\PSoC5/SPI_IMU.c ****         /* Buffer is EMPTY: disable TX FIFO NOT FULL interrupt */
 886:Generated_Source\PSoC5/SPI_IMU.c ****         SPI_IMU_TX_STATUS_MASK_REG &= ((uint8) ~SPI_IMU_STS_TX_FIFO_NOT_FULL);
 887:Generated_Source\PSoC5/SPI_IMU.c **** 
 888:Generated_Source\PSoC5/SPI_IMU.c ****         SPI_IMU_EnableTxInt();
 889:Generated_Source\PSoC5/SPI_IMU.c ****     #endif /* (SPI_IMU_TX_SOFTWARE_BUF_ENABLED) */
 890:Generated_Source\PSoC5/SPI_IMU.c **** }
 867              		.loc 1 890 0
 868 0036 00BF     		nop
 869 0038 0837     		adds	r7, r7, #8
 870              		.cfi_def_cfa_offset 8
 871 003a BD46     		mov	sp, r7
 872              		.cfi_def_cfa_register 13
 873              		@ sp needed
 874 003c 80BD     		pop	{r7, pc}
 875              	.L60:
 876 003e 00BF     		.align	2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc2leDoT.s 			page 32


 877              	.L59:
 878 0040 91640040 		.word	1073767569
 879              		.cfi_endproc
 880              	.LFE17:
 881              		.size	SPI_IMU_ClearTxBuffer, .-SPI_IMU_ClearTxBuffer
 882              		.section	.text.SPI_IMU_PutArray,"ax",%progbits
 883              		.align	2
 884              		.global	SPI_IMU_PutArray
 885              		.thumb
 886              		.thumb_func
 887              		.type	SPI_IMU_PutArray, %function
 888              	SPI_IMU_PutArray:
 889              	.LFB18:
 891:Generated_Source\PSoC5/SPI_IMU.c **** 
 892:Generated_Source\PSoC5/SPI_IMU.c **** 
 893:Generated_Source\PSoC5/SPI_IMU.c **** #if(0u != SPI_IMU_BIDIRECTIONAL_MODE)
 894:Generated_Source\PSoC5/SPI_IMU.c ****     /*******************************************************************************
 895:Generated_Source\PSoC5/SPI_IMU.c ****     * Function Name: SPI_IMU_TxEnable
 896:Generated_Source\PSoC5/SPI_IMU.c ****     ********************************************************************************
 897:Generated_Source\PSoC5/SPI_IMU.c ****     *
 898:Generated_Source\PSoC5/SPI_IMU.c ****     * Summary:
 899:Generated_Source\PSoC5/SPI_IMU.c ****     *  If the SPI master is configured to use a single bi-directional pin then this
 900:Generated_Source\PSoC5/SPI_IMU.c ****     *  will set the bi-directional pin to transmit.
 901:Generated_Source\PSoC5/SPI_IMU.c ****     *
 902:Generated_Source\PSoC5/SPI_IMU.c ****     * Parameters:
 903:Generated_Source\PSoC5/SPI_IMU.c ****     *  None.
 904:Generated_Source\PSoC5/SPI_IMU.c ****     *
 905:Generated_Source\PSoC5/SPI_IMU.c ****     * Return:
 906:Generated_Source\PSoC5/SPI_IMU.c ****     *  None.
 907:Generated_Source\PSoC5/SPI_IMU.c ****     *
 908:Generated_Source\PSoC5/SPI_IMU.c ****     *******************************************************************************/
 909:Generated_Source\PSoC5/SPI_IMU.c ****     void SPI_IMU_TxEnable(void) 
 910:Generated_Source\PSoC5/SPI_IMU.c ****     {
 911:Generated_Source\PSoC5/SPI_IMU.c ****         SPI_IMU_CONTROL_REG |= SPI_IMU_CTRL_TX_SIGNAL_EN;
 912:Generated_Source\PSoC5/SPI_IMU.c ****     }
 913:Generated_Source\PSoC5/SPI_IMU.c **** 
 914:Generated_Source\PSoC5/SPI_IMU.c **** 
 915:Generated_Source\PSoC5/SPI_IMU.c ****     /*******************************************************************************
 916:Generated_Source\PSoC5/SPI_IMU.c ****     * Function Name: SPI_IMU_TxDisable
 917:Generated_Source\PSoC5/SPI_IMU.c ****     ********************************************************************************
 918:Generated_Source\PSoC5/SPI_IMU.c ****     *
 919:Generated_Source\PSoC5/SPI_IMU.c ****     * Summary:
 920:Generated_Source\PSoC5/SPI_IMU.c ****     *  If the SPI master is configured to use a single bi-directional pin then this
 921:Generated_Source\PSoC5/SPI_IMU.c ****     *  will set the bi-directional pin to receive.
 922:Generated_Source\PSoC5/SPI_IMU.c ****     *
 923:Generated_Source\PSoC5/SPI_IMU.c ****     * Parameters:
 924:Generated_Source\PSoC5/SPI_IMU.c ****     *  None.
 925:Generated_Source\PSoC5/SPI_IMU.c ****     *
 926:Generated_Source\PSoC5/SPI_IMU.c ****     * Return:
 927:Generated_Source\PSoC5/SPI_IMU.c ****     *  None.
 928:Generated_Source\PSoC5/SPI_IMU.c ****     *
 929:Generated_Source\PSoC5/SPI_IMU.c ****     *******************************************************************************/
 930:Generated_Source\PSoC5/SPI_IMU.c ****     void SPI_IMU_TxDisable(void) 
 931:Generated_Source\PSoC5/SPI_IMU.c ****     {
 932:Generated_Source\PSoC5/SPI_IMU.c ****         SPI_IMU_CONTROL_REG &= ((uint8) ~SPI_IMU_CTRL_TX_SIGNAL_EN);
 933:Generated_Source\PSoC5/SPI_IMU.c ****     }
 934:Generated_Source\PSoC5/SPI_IMU.c **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc2leDoT.s 			page 33


 935:Generated_Source\PSoC5/SPI_IMU.c **** #endif /* (0u != SPI_IMU_BIDIRECTIONAL_MODE) */
 936:Generated_Source\PSoC5/SPI_IMU.c **** 
 937:Generated_Source\PSoC5/SPI_IMU.c **** 
 938:Generated_Source\PSoC5/SPI_IMU.c **** /*******************************************************************************
 939:Generated_Source\PSoC5/SPI_IMU.c **** * Function Name: SPI_IMU_PutArray
 940:Generated_Source\PSoC5/SPI_IMU.c **** ********************************************************************************
 941:Generated_Source\PSoC5/SPI_IMU.c **** *
 942:Generated_Source\PSoC5/SPI_IMU.c **** * Summary:
 943:Generated_Source\PSoC5/SPI_IMU.c **** *  Write available data from ROM/RAM to the TX buffer while space is available
 944:Generated_Source\PSoC5/SPI_IMU.c **** *  in the TX buffer. Keep trying until all data is passed to the TX buffer.
 945:Generated_Source\PSoC5/SPI_IMU.c **** *
 946:Generated_Source\PSoC5/SPI_IMU.c **** * Parameters:
 947:Generated_Source\PSoC5/SPI_IMU.c **** *  *buffer: Pointer to the location in RAM containing the data to send
 948:Generated_Source\PSoC5/SPI_IMU.c **** *  byteCount: The number of bytes to move to the transmit buffer.
 949:Generated_Source\PSoC5/SPI_IMU.c **** *
 950:Generated_Source\PSoC5/SPI_IMU.c **** * Return:
 951:Generated_Source\PSoC5/SPI_IMU.c **** *  None.
 952:Generated_Source\PSoC5/SPI_IMU.c **** *
 953:Generated_Source\PSoC5/SPI_IMU.c **** * Side Effects:
 954:Generated_Source\PSoC5/SPI_IMU.c **** *  Will stay in this routine until all data has been sent.  May get locked in
 955:Generated_Source\PSoC5/SPI_IMU.c **** *  this loop if data is not being initiated by the master if there is not
 956:Generated_Source\PSoC5/SPI_IMU.c **** *  enough room in the TX FIFO.
 957:Generated_Source\PSoC5/SPI_IMU.c **** *
 958:Generated_Source\PSoC5/SPI_IMU.c **** * Reentrant:
 959:Generated_Source\PSoC5/SPI_IMU.c **** *  No.
 960:Generated_Source\PSoC5/SPI_IMU.c **** *
 961:Generated_Source\PSoC5/SPI_IMU.c **** *******************************************************************************/
 962:Generated_Source\PSoC5/SPI_IMU.c **** void SPI_IMU_PutArray(const uint8 buffer[], uint8 byteCount)
 963:Generated_Source\PSoC5/SPI_IMU.c ****                                                                           
 964:Generated_Source\PSoC5/SPI_IMU.c **** {
 890              		.loc 1 964 0
 891              		.cfi_startproc
 892              		@ args = 0, pretend = 0, frame = 16
 893              		@ frame_needed = 1, uses_anonymous_args = 0
 894 0000 80B5     		push	{r7, lr}
 895              		.cfi_def_cfa_offset 8
 896              		.cfi_offset 7, -8
 897              		.cfi_offset 14, -4
 898 0002 84B0     		sub	sp, sp, #16
 899              		.cfi_def_cfa_offset 24
 900 0004 00AF     		add	r7, sp, #0
 901              		.cfi_def_cfa_register 7
 902 0006 7860     		str	r0, [r7, #4]
 903 0008 0B46     		mov	r3, r1
 904 000a FB70     		strb	r3, [r7, #3]
 965:Generated_Source\PSoC5/SPI_IMU.c ****     uint8 bufIndex;
 966:Generated_Source\PSoC5/SPI_IMU.c **** 
 967:Generated_Source\PSoC5/SPI_IMU.c ****     bufIndex = 0u;
 905              		.loc 1 967 0
 906 000c 0023     		movs	r3, #0
 907 000e FB73     		strb	r3, [r7, #15]
 968:Generated_Source\PSoC5/SPI_IMU.c **** 
 969:Generated_Source\PSoC5/SPI_IMU.c ****     while(byteCount > 0u)
 908              		.loc 1 969 0
 909 0010 0CE0     		b	.L62
 910              	.L63:
 970:Generated_Source\PSoC5/SPI_IMU.c ****     {
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc2leDoT.s 			page 34


 971:Generated_Source\PSoC5/SPI_IMU.c ****         SPI_IMU_WriteTxData(buffer[bufIndex]);
 911              		.loc 1 971 0
 912 0012 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 913 0014 7A68     		ldr	r2, [r7, #4]
 914 0016 1344     		add	r3, r3, r2
 915 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 916 001a 1846     		mov	r0, r3
 917 001c FFF7FEFF 		bl	SPI_IMU_WriteTxData
 972:Generated_Source\PSoC5/SPI_IMU.c ****         bufIndex++;
 918              		.loc 1 972 0
 919 0020 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 920 0022 0133     		adds	r3, r3, #1
 921 0024 FB73     		strb	r3, [r7, #15]
 973:Generated_Source\PSoC5/SPI_IMU.c ****         byteCount--;
 922              		.loc 1 973 0
 923 0026 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 924 0028 013B     		subs	r3, r3, #1
 925 002a FB70     		strb	r3, [r7, #3]
 926              	.L62:
 969:Generated_Source\PSoC5/SPI_IMU.c ****     {
 927              		.loc 1 969 0
 928 002c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 929 002e 002B     		cmp	r3, #0
 930 0030 EFD1     		bne	.L63
 974:Generated_Source\PSoC5/SPI_IMU.c ****     }
 975:Generated_Source\PSoC5/SPI_IMU.c **** }
 931              		.loc 1 975 0
 932 0032 00BF     		nop
 933 0034 1037     		adds	r7, r7, #16
 934              		.cfi_def_cfa_offset 8
 935 0036 BD46     		mov	sp, r7
 936              		.cfi_def_cfa_register 13
 937              		@ sp needed
 938 0038 80BD     		pop	{r7, pc}
 939              		.cfi_endproc
 940              	.LFE18:
 941              		.size	SPI_IMU_PutArray, .-SPI_IMU_PutArray
 942 003a 00BF     		.section	.text.SPI_IMU_ClearFIFO,"ax",%progbits
 943              		.align	2
 944              		.global	SPI_IMU_ClearFIFO
 945              		.thumb
 946              		.thumb_func
 947              		.type	SPI_IMU_ClearFIFO, %function
 948              	SPI_IMU_ClearFIFO:
 949              	.LFB19:
 976:Generated_Source\PSoC5/SPI_IMU.c **** 
 977:Generated_Source\PSoC5/SPI_IMU.c **** 
 978:Generated_Source\PSoC5/SPI_IMU.c **** /*******************************************************************************
 979:Generated_Source\PSoC5/SPI_IMU.c **** * Function Name: SPI_IMU_ClearFIFO
 980:Generated_Source\PSoC5/SPI_IMU.c **** ********************************************************************************
 981:Generated_Source\PSoC5/SPI_IMU.c **** *
 982:Generated_Source\PSoC5/SPI_IMU.c **** * Summary:
 983:Generated_Source\PSoC5/SPI_IMU.c **** *  Clear the RX and TX FIFO's of all data for a fresh start.
 984:Generated_Source\PSoC5/SPI_IMU.c **** *
 985:Generated_Source\PSoC5/SPI_IMU.c **** * Parameters:
 986:Generated_Source\PSoC5/SPI_IMU.c **** *  None.
 987:Generated_Source\PSoC5/SPI_IMU.c **** *
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc2leDoT.s 			page 35


 988:Generated_Source\PSoC5/SPI_IMU.c **** * Return:
 989:Generated_Source\PSoC5/SPI_IMU.c **** *  None.
 990:Generated_Source\PSoC5/SPI_IMU.c **** *
 991:Generated_Source\PSoC5/SPI_IMU.c **** * Side Effects:
 992:Generated_Source\PSoC5/SPI_IMU.c **** *  Clear status register of the component.
 993:Generated_Source\PSoC5/SPI_IMU.c **** *
 994:Generated_Source\PSoC5/SPI_IMU.c **** *******************************************************************************/
 995:Generated_Source\PSoC5/SPI_IMU.c **** void SPI_IMU_ClearFIFO(void) 
 996:Generated_Source\PSoC5/SPI_IMU.c **** {
 950              		.loc 1 996 0
 951              		.cfi_startproc
 952              		@ args = 0, pretend = 0, frame = 8
 953              		@ frame_needed = 1, uses_anonymous_args = 0
 954 0000 80B5     		push	{r7, lr}
 955              		.cfi_def_cfa_offset 8
 956              		.cfi_offset 7, -8
 957              		.cfi_offset 14, -4
 958 0002 82B0     		sub	sp, sp, #8
 959              		.cfi_def_cfa_offset 16
 960 0004 00AF     		add	r7, sp, #0
 961              		.cfi_def_cfa_register 7
 997:Generated_Source\PSoC5/SPI_IMU.c ****     uint8 enableInterrupts;
 998:Generated_Source\PSoC5/SPI_IMU.c **** 
 999:Generated_Source\PSoC5/SPI_IMU.c ****     /* Clear Hardware RX FIFO */
1000:Generated_Source\PSoC5/SPI_IMU.c ****     while(0u !=(SPI_IMU_RX_STATUS_REG & SPI_IMU_STS_RX_FIFO_NOT_EMPTY))
 962              		.loc 1 1000 0
 963 0006 01E0     		b	.L65
 964              	.L66:
1001:Generated_Source\PSoC5/SPI_IMU.c ****     {
1002:Generated_Source\PSoC5/SPI_IMU.c ****         (void) CY_GET_REG8(SPI_IMU_RXDATA_PTR);
 965              		.loc 1 1002 0
 966 0008 124B     		ldr	r3, .L67
 967 000a 1B78     		ldrb	r3, [r3]
 968              	.L65:
1000:Generated_Source\PSoC5/SPI_IMU.c ****     {
 969              		.loc 1 1000 0
 970 000c 124B     		ldr	r3, .L67+4
 971 000e 1B78     		ldrb	r3, [r3]
 972 0010 DBB2     		uxtb	r3, r3
 973 0012 03F02003 		and	r3, r3, #32
 974 0016 002B     		cmp	r3, #0
 975 0018 F6D1     		bne	.L66
1003:Generated_Source\PSoC5/SPI_IMU.c ****     }
1004:Generated_Source\PSoC5/SPI_IMU.c **** 
1005:Generated_Source\PSoC5/SPI_IMU.c ****     enableInterrupts = CyEnterCriticalSection();
 976              		.loc 1 1005 0
 977 001a FFF7FEFF 		bl	CyEnterCriticalSection
 978 001e 0346     		mov	r3, r0
 979 0020 FB71     		strb	r3, [r7, #7]
1006:Generated_Source\PSoC5/SPI_IMU.c ****     /* Clear TX FIFO */
1007:Generated_Source\PSoC5/SPI_IMU.c ****     SPI_IMU_AUX_CONTROL_DP0_REG |= ((uint8)  SPI_IMU_TX_FIFO_CLR);
 980              		.loc 1 1007 0
 981 0022 0E4A     		ldr	r2, .L67+8
 982 0024 0D4B     		ldr	r3, .L67+8
 983 0026 1B78     		ldrb	r3, [r3]
 984 0028 DBB2     		uxtb	r3, r3
 985 002a 43F00103 		orr	r3, r3, #1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc2leDoT.s 			page 36


 986 002e DBB2     		uxtb	r3, r3
 987 0030 1370     		strb	r3, [r2]
1008:Generated_Source\PSoC5/SPI_IMU.c ****     SPI_IMU_AUX_CONTROL_DP0_REG &= ((uint8) ~SPI_IMU_TX_FIFO_CLR);
 988              		.loc 1 1008 0
 989 0032 0A4A     		ldr	r2, .L67+8
 990 0034 094B     		ldr	r3, .L67+8
 991 0036 1B78     		ldrb	r3, [r3]
 992 0038 DBB2     		uxtb	r3, r3
 993 003a 23F00103 		bic	r3, r3, #1
 994 003e DBB2     		uxtb	r3, r3
 995 0040 1370     		strb	r3, [r2]
1009:Generated_Source\PSoC5/SPI_IMU.c **** 
1010:Generated_Source\PSoC5/SPI_IMU.c ****     #if(SPI_IMU_USE_SECOND_DATAPATH)
1011:Generated_Source\PSoC5/SPI_IMU.c ****         /* Clear TX FIFO for 2nd Datapath */
1012:Generated_Source\PSoC5/SPI_IMU.c ****         SPI_IMU_AUX_CONTROL_DP1_REG |= ((uint8)  SPI_IMU_TX_FIFO_CLR);
1013:Generated_Source\PSoC5/SPI_IMU.c ****         SPI_IMU_AUX_CONTROL_DP1_REG &= ((uint8) ~SPI_IMU_TX_FIFO_CLR);
1014:Generated_Source\PSoC5/SPI_IMU.c ****     #endif /* (SPI_IMU_USE_SECOND_DATAPATH) */
1015:Generated_Source\PSoC5/SPI_IMU.c ****     CyExitCriticalSection(enableInterrupts);
 996              		.loc 1 1015 0
 997 0042 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 998 0044 1846     		mov	r0, r3
 999 0046 FFF7FEFF 		bl	CyExitCriticalSection
1016:Generated_Source\PSoC5/SPI_IMU.c **** }
 1000              		.loc 1 1016 0
 1001 004a 00BF     		nop
 1002 004c 0837     		adds	r7, r7, #8
 1003              		.cfi_def_cfa_offset 8
 1004 004e BD46     		mov	sp, r7
 1005              		.cfi_def_cfa_register 13
 1006              		@ sp needed
 1007 0050 80BD     		pop	{r7, pc}
 1008              	.L68:
 1009 0052 00BF     		.align	2
 1010              	.L67:
 1011 0054 51640040 		.word	1073767505
 1012 0058 60640040 		.word	1073767520
 1013 005c 91640040 		.word	1073767569
 1014              		.cfi_endproc
 1015              	.LFE19:
 1016              		.size	SPI_IMU_ClearFIFO, .-SPI_IMU_ClearFIFO
 1017              		.section	.text.SPI_IMU_EnableInt,"ax",%progbits
 1018              		.align	2
 1019              		.global	SPI_IMU_EnableInt
 1020              		.thumb
 1021              		.thumb_func
 1022              		.type	SPI_IMU_EnableInt, %function
 1023              	SPI_IMU_EnableInt:
 1024              	.LFB20:
1017:Generated_Source\PSoC5/SPI_IMU.c **** 
1018:Generated_Source\PSoC5/SPI_IMU.c **** 
1019:Generated_Source\PSoC5/SPI_IMU.c **** /* Following functions are for version Compatibility, they are obsolete.
1020:Generated_Source\PSoC5/SPI_IMU.c **** *  Please do not use it in new projects.
1021:Generated_Source\PSoC5/SPI_IMU.c **** */
1022:Generated_Source\PSoC5/SPI_IMU.c **** 
1023:Generated_Source\PSoC5/SPI_IMU.c **** 
1024:Generated_Source\PSoC5/SPI_IMU.c **** /*******************************************************************************
1025:Generated_Source\PSoC5/SPI_IMU.c **** * Function Name: SPI_IMU_EnableInt
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc2leDoT.s 			page 37


1026:Generated_Source\PSoC5/SPI_IMU.c **** ********************************************************************************
1027:Generated_Source\PSoC5/SPI_IMU.c **** *
1028:Generated_Source\PSoC5/SPI_IMU.c **** * Summary:
1029:Generated_Source\PSoC5/SPI_IMU.c **** *  Enable internal interrupt generation.
1030:Generated_Source\PSoC5/SPI_IMU.c **** *
1031:Generated_Source\PSoC5/SPI_IMU.c **** * Parameters:
1032:Generated_Source\PSoC5/SPI_IMU.c **** *  None.
1033:Generated_Source\PSoC5/SPI_IMU.c **** *
1034:Generated_Source\PSoC5/SPI_IMU.c **** * Return:
1035:Generated_Source\PSoC5/SPI_IMU.c **** *  None.
1036:Generated_Source\PSoC5/SPI_IMU.c **** *
1037:Generated_Source\PSoC5/SPI_IMU.c **** * Theory:
1038:Generated_Source\PSoC5/SPI_IMU.c **** *  Enable the internal interrupt output -or- the interrupt component itself.
1039:Generated_Source\PSoC5/SPI_IMU.c **** *
1040:Generated_Source\PSoC5/SPI_IMU.c **** *******************************************************************************/
1041:Generated_Source\PSoC5/SPI_IMU.c **** void SPI_IMU_EnableInt(void) 
1042:Generated_Source\PSoC5/SPI_IMU.c **** {
 1025              		.loc 1 1042 0
 1026              		.cfi_startproc
 1027              		@ args = 0, pretend = 0, frame = 0
 1028              		@ frame_needed = 1, uses_anonymous_args = 0
 1029 0000 80B5     		push	{r7, lr}
 1030              		.cfi_def_cfa_offset 8
 1031              		.cfi_offset 7, -8
 1032              		.cfi_offset 14, -4
 1033 0002 00AF     		add	r7, sp, #0
 1034              		.cfi_def_cfa_register 7
1043:Generated_Source\PSoC5/SPI_IMU.c ****     SPI_IMU_EnableRxInt();
 1035              		.loc 1 1043 0
 1036 0004 FFF7FEFF 		bl	SPI_IMU_EnableRxInt
1044:Generated_Source\PSoC5/SPI_IMU.c ****     SPI_IMU_EnableTxInt();
 1037              		.loc 1 1044 0
 1038 0008 FFF7FEFF 		bl	SPI_IMU_EnableTxInt
1045:Generated_Source\PSoC5/SPI_IMU.c **** }
 1039              		.loc 1 1045 0
 1040 000c 00BF     		nop
 1041 000e 80BD     		pop	{r7, pc}
 1042              		.cfi_endproc
 1043              	.LFE20:
 1044              		.size	SPI_IMU_EnableInt, .-SPI_IMU_EnableInt
 1045              		.section	.text.SPI_IMU_DisableInt,"ax",%progbits
 1046              		.align	2
 1047              		.global	SPI_IMU_DisableInt
 1048              		.thumb
 1049              		.thumb_func
 1050              		.type	SPI_IMU_DisableInt, %function
 1051              	SPI_IMU_DisableInt:
 1052              	.LFB21:
1046:Generated_Source\PSoC5/SPI_IMU.c **** 
1047:Generated_Source\PSoC5/SPI_IMU.c **** 
1048:Generated_Source\PSoC5/SPI_IMU.c **** /*******************************************************************************
1049:Generated_Source\PSoC5/SPI_IMU.c **** * Function Name: SPI_IMU_DisableInt
1050:Generated_Source\PSoC5/SPI_IMU.c **** ********************************************************************************
1051:Generated_Source\PSoC5/SPI_IMU.c **** *
1052:Generated_Source\PSoC5/SPI_IMU.c **** * Summary:
1053:Generated_Source\PSoC5/SPI_IMU.c **** *  Disable internal interrupt generation.
1054:Generated_Source\PSoC5/SPI_IMU.c **** *
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc2leDoT.s 			page 38


1055:Generated_Source\PSoC5/SPI_IMU.c **** * Parameters:
1056:Generated_Source\PSoC5/SPI_IMU.c **** *  None.
1057:Generated_Source\PSoC5/SPI_IMU.c **** *
1058:Generated_Source\PSoC5/SPI_IMU.c **** * Return:
1059:Generated_Source\PSoC5/SPI_IMU.c **** *  None.
1060:Generated_Source\PSoC5/SPI_IMU.c **** *
1061:Generated_Source\PSoC5/SPI_IMU.c **** * Theory:
1062:Generated_Source\PSoC5/SPI_IMU.c **** *  Disable the internal interrupt output -or- the interrupt component itself.
1063:Generated_Source\PSoC5/SPI_IMU.c **** *
1064:Generated_Source\PSoC5/SPI_IMU.c **** *******************************************************************************/
1065:Generated_Source\PSoC5/SPI_IMU.c **** void SPI_IMU_DisableInt(void) 
1066:Generated_Source\PSoC5/SPI_IMU.c **** {
 1053              		.loc 1 1066 0
 1054              		.cfi_startproc
 1055              		@ args = 0, pretend = 0, frame = 0
 1056              		@ frame_needed = 1, uses_anonymous_args = 0
 1057 0000 80B5     		push	{r7, lr}
 1058              		.cfi_def_cfa_offset 8
 1059              		.cfi_offset 7, -8
 1060              		.cfi_offset 14, -4
 1061 0002 00AF     		add	r7, sp, #0
 1062              		.cfi_def_cfa_register 7
1067:Generated_Source\PSoC5/SPI_IMU.c ****     SPI_IMU_DisableTxInt();
 1063              		.loc 1 1067 0
 1064 0004 FFF7FEFF 		bl	SPI_IMU_DisableTxInt
1068:Generated_Source\PSoC5/SPI_IMU.c ****     SPI_IMU_DisableRxInt();
 1065              		.loc 1 1068 0
 1066 0008 FFF7FEFF 		bl	SPI_IMU_DisableRxInt
1069:Generated_Source\PSoC5/SPI_IMU.c **** }
 1067              		.loc 1 1069 0
 1068 000c 00BF     		nop
 1069 000e 80BD     		pop	{r7, pc}
 1070              		.cfi_endproc
 1071              	.LFE21:
 1072              		.size	SPI_IMU_DisableInt, .-SPI_IMU_DisableInt
 1073              		.section	.text.SPI_IMU_SetInterruptMode,"ax",%progbits
 1074              		.align	2
 1075              		.global	SPI_IMU_SetInterruptMode
 1076              		.thumb
 1077              		.thumb_func
 1078              		.type	SPI_IMU_SetInterruptMode, %function
 1079              	SPI_IMU_SetInterruptMode:
 1080              	.LFB22:
1070:Generated_Source\PSoC5/SPI_IMU.c **** 
1071:Generated_Source\PSoC5/SPI_IMU.c **** 
1072:Generated_Source\PSoC5/SPI_IMU.c **** /*******************************************************************************
1073:Generated_Source\PSoC5/SPI_IMU.c **** * Function Name: SPI_IMU_SetInterruptMode
1074:Generated_Source\PSoC5/SPI_IMU.c **** ********************************************************************************
1075:Generated_Source\PSoC5/SPI_IMU.c **** *
1076:Generated_Source\PSoC5/SPI_IMU.c **** * Summary:
1077:Generated_Source\PSoC5/SPI_IMU.c **** *  Configure which status bits trigger an interrupt event.
1078:Generated_Source\PSoC5/SPI_IMU.c **** *
1079:Generated_Source\PSoC5/SPI_IMU.c **** * Parameters:
1080:Generated_Source\PSoC5/SPI_IMU.c **** *  intSrc: An or'd combination of the desired status bit masks (defined in the
1081:Generated_Source\PSoC5/SPI_IMU.c **** *  header file).
1082:Generated_Source\PSoC5/SPI_IMU.c **** *
1083:Generated_Source\PSoC5/SPI_IMU.c **** * Return:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc2leDoT.s 			page 39


1084:Generated_Source\PSoC5/SPI_IMU.c **** *  None.
1085:Generated_Source\PSoC5/SPI_IMU.c **** *
1086:Generated_Source\PSoC5/SPI_IMU.c **** * Theory:
1087:Generated_Source\PSoC5/SPI_IMU.c **** *  Enables the output of specific status bits to the interrupt controller.
1088:Generated_Source\PSoC5/SPI_IMU.c **** *
1089:Generated_Source\PSoC5/SPI_IMU.c **** *******************************************************************************/
1090:Generated_Source\PSoC5/SPI_IMU.c **** void SPI_IMU_SetInterruptMode(uint8 intSrc) 
1091:Generated_Source\PSoC5/SPI_IMU.c **** {
 1081              		.loc 1 1091 0
 1082              		.cfi_startproc
 1083              		@ args = 0, pretend = 0, frame = 8
 1084              		@ frame_needed = 1, uses_anonymous_args = 0
 1085              		@ link register save eliminated.
 1086 0000 80B4     		push	{r7}
 1087              		.cfi_def_cfa_offset 4
 1088              		.cfi_offset 7, -4
 1089 0002 83B0     		sub	sp, sp, #12
 1090              		.cfi_def_cfa_offset 16
 1091 0004 00AF     		add	r7, sp, #0
 1092              		.cfi_def_cfa_register 7
 1093 0006 0346     		mov	r3, r0
 1094 0008 FB71     		strb	r3, [r7, #7]
1092:Generated_Source\PSoC5/SPI_IMU.c ****     SPI_IMU_TX_STATUS_MASK_REG  = (intSrc & ((uint8) ~SPI_IMU_STS_SPI_IDLE));
 1095              		.loc 1 1092 0
 1096 000a 074A     		ldr	r2, .L72
 1097 000c FB79     		ldrb	r3, [r7, #7]
 1098 000e 23F01003 		bic	r3, r3, #16
 1099 0012 DBB2     		uxtb	r3, r3
 1100 0014 1370     		strb	r3, [r2]
1093:Generated_Source\PSoC5/SPI_IMU.c ****     SPI_IMU_RX_STATUS_MASK_REG  =  intSrc;
 1101              		.loc 1 1093 0
 1102 0016 054A     		ldr	r2, .L72+4
 1103 0018 FB79     		ldrb	r3, [r7, #7]
 1104 001a 1370     		strb	r3, [r2]
1094:Generated_Source\PSoC5/SPI_IMU.c **** }
 1105              		.loc 1 1094 0
 1106 001c 00BF     		nop
 1107 001e 0C37     		adds	r7, r7, #12
 1108              		.cfi_def_cfa_offset 4
 1109 0020 BD46     		mov	sp, r7
 1110              		.cfi_def_cfa_register 13
 1111              		@ sp needed
 1112 0022 80BC     		pop	{r7}
 1113              		.cfi_restore 7
 1114              		.cfi_def_cfa_offset 0
 1115 0024 7047     		bx	lr
 1116              	.L73:
 1117 0026 00BF     		.align	2
 1118              	.L72:
 1119 0028 85640040 		.word	1073767557
 1120 002c 80640040 		.word	1073767552
 1121              		.cfi_endproc
 1122              	.LFE22:
 1123              		.size	SPI_IMU_SetInterruptMode, .-SPI_IMU_SetInterruptMode
 1124              		.section	.text.SPI_IMU_ReadStatus,"ax",%progbits
 1125              		.align	2
 1126              		.global	SPI_IMU_ReadStatus
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc2leDoT.s 			page 40


 1127              		.thumb
 1128              		.thumb_func
 1129              		.type	SPI_IMU_ReadStatus, %function
 1130              	SPI_IMU_ReadStatus:
 1131              	.LFB23:
1095:Generated_Source\PSoC5/SPI_IMU.c **** 
1096:Generated_Source\PSoC5/SPI_IMU.c **** 
1097:Generated_Source\PSoC5/SPI_IMU.c **** /*******************************************************************************
1098:Generated_Source\PSoC5/SPI_IMU.c **** * Function Name: SPI_IMU_ReadStatus
1099:Generated_Source\PSoC5/SPI_IMU.c **** ********************************************************************************
1100:Generated_Source\PSoC5/SPI_IMU.c **** *
1101:Generated_Source\PSoC5/SPI_IMU.c **** * Summary:
1102:Generated_Source\PSoC5/SPI_IMU.c **** *  Read the status register for the component.
1103:Generated_Source\PSoC5/SPI_IMU.c **** *
1104:Generated_Source\PSoC5/SPI_IMU.c **** * Parameters:
1105:Generated_Source\PSoC5/SPI_IMU.c **** *  None.
1106:Generated_Source\PSoC5/SPI_IMU.c **** *
1107:Generated_Source\PSoC5/SPI_IMU.c **** * Return:
1108:Generated_Source\PSoC5/SPI_IMU.c **** *  Contents of the status register.
1109:Generated_Source\PSoC5/SPI_IMU.c **** *
1110:Generated_Source\PSoC5/SPI_IMU.c **** * Global variables:
1111:Generated_Source\PSoC5/SPI_IMU.c **** *  SPI_IMU_swStatus - used to store in software status register,
1112:Generated_Source\PSoC5/SPI_IMU.c **** *  modified every function call - resets to zero.
1113:Generated_Source\PSoC5/SPI_IMU.c **** *
1114:Generated_Source\PSoC5/SPI_IMU.c **** * Theory:
1115:Generated_Source\PSoC5/SPI_IMU.c **** *  Allows the user and the API to read the status register for error detection
1116:Generated_Source\PSoC5/SPI_IMU.c **** *  and flow control.
1117:Generated_Source\PSoC5/SPI_IMU.c **** *
1118:Generated_Source\PSoC5/SPI_IMU.c **** * Side Effects:
1119:Generated_Source\PSoC5/SPI_IMU.c **** *  Clear status register of the component.
1120:Generated_Source\PSoC5/SPI_IMU.c **** *
1121:Generated_Source\PSoC5/SPI_IMU.c **** * Reentrant:
1122:Generated_Source\PSoC5/SPI_IMU.c **** *  No.
1123:Generated_Source\PSoC5/SPI_IMU.c **** *
1124:Generated_Source\PSoC5/SPI_IMU.c **** *******************************************************************************/
1125:Generated_Source\PSoC5/SPI_IMU.c **** uint8 SPI_IMU_ReadStatus(void) 
1126:Generated_Source\PSoC5/SPI_IMU.c **** {
 1132              		.loc 1 1126 0
 1133              		.cfi_startproc
 1134              		@ args = 0, pretend = 0, frame = 8
 1135              		@ frame_needed = 1, uses_anonymous_args = 0
 1136              		@ link register save eliminated.
 1137 0000 80B4     		push	{r7}
 1138              		.cfi_def_cfa_offset 4
 1139              		.cfi_offset 7, -4
 1140 0002 83B0     		sub	sp, sp, #12
 1141              		.cfi_def_cfa_offset 16
 1142 0004 00AF     		add	r7, sp, #0
 1143              		.cfi_def_cfa_register 7
1127:Generated_Source\PSoC5/SPI_IMU.c ****     uint8 tmpStatus;
1128:Generated_Source\PSoC5/SPI_IMU.c **** 
1129:Generated_Source\PSoC5/SPI_IMU.c ****     #if(SPI_IMU_TX_SOFTWARE_BUF_ENABLED || SPI_IMU_RX_SOFTWARE_BUF_ENABLED)
1130:Generated_Source\PSoC5/SPI_IMU.c **** 
1131:Generated_Source\PSoC5/SPI_IMU.c ****         SPI_IMU_DisableInt();
1132:Generated_Source\PSoC5/SPI_IMU.c **** 
1133:Generated_Source\PSoC5/SPI_IMU.c ****         tmpStatus  = SPI_IMU_GET_STATUS_RX(SPI_IMU_swStatusRx);
1134:Generated_Source\PSoC5/SPI_IMU.c ****         tmpStatus |= SPI_IMU_GET_STATUS_TX(SPI_IMU_swStatusTx);
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc2leDoT.s 			page 41


1135:Generated_Source\PSoC5/SPI_IMU.c ****         tmpStatus &= ((uint8) ~SPI_IMU_STS_SPI_IDLE);
1136:Generated_Source\PSoC5/SPI_IMU.c **** 
1137:Generated_Source\PSoC5/SPI_IMU.c ****         SPI_IMU_swStatusTx = 0u;
1138:Generated_Source\PSoC5/SPI_IMU.c ****         SPI_IMU_swStatusRx = 0u;
1139:Generated_Source\PSoC5/SPI_IMU.c **** 
1140:Generated_Source\PSoC5/SPI_IMU.c ****         SPI_IMU_EnableInt();
1141:Generated_Source\PSoC5/SPI_IMU.c **** 
1142:Generated_Source\PSoC5/SPI_IMU.c ****     #else
1143:Generated_Source\PSoC5/SPI_IMU.c **** 
1144:Generated_Source\PSoC5/SPI_IMU.c ****         tmpStatus  = SPI_IMU_RX_STATUS_REG;
 1144              		.loc 1 1144 0
 1145 0006 094B     		ldr	r3, .L76
 1146 0008 1B78     		ldrb	r3, [r3]
 1147 000a FB71     		strb	r3, [r7, #7]
1145:Generated_Source\PSoC5/SPI_IMU.c ****         tmpStatus |= SPI_IMU_TX_STATUS_REG;
 1148              		.loc 1 1145 0
 1149 000c 084B     		ldr	r3, .L76+4
 1150 000e 1B78     		ldrb	r3, [r3]
 1151 0010 DAB2     		uxtb	r2, r3
 1152 0012 FB79     		ldrb	r3, [r7, #7]
 1153 0014 1343     		orrs	r3, r3, r2
 1154 0016 FB71     		strb	r3, [r7, #7]
1146:Generated_Source\PSoC5/SPI_IMU.c ****         tmpStatus &= ((uint8) ~SPI_IMU_STS_SPI_IDLE);
 1155              		.loc 1 1146 0
 1156 0018 FB79     		ldrb	r3, [r7, #7]
 1157 001a 23F01003 		bic	r3, r3, #16
 1158 001e FB71     		strb	r3, [r7, #7]
1147:Generated_Source\PSoC5/SPI_IMU.c **** 
1148:Generated_Source\PSoC5/SPI_IMU.c ****     #endif /* (SPI_IMU_TX_SOFTWARE_BUF_ENABLED || SPI_IMU_RX_SOFTWARE_BUF_ENABLED) */
1149:Generated_Source\PSoC5/SPI_IMU.c **** 
1150:Generated_Source\PSoC5/SPI_IMU.c ****     return(tmpStatus);
 1159              		.loc 1 1150 0
 1160 0020 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
1151:Generated_Source\PSoC5/SPI_IMU.c **** }
 1161              		.loc 1 1151 0
 1162 0022 1846     		mov	r0, r3
 1163 0024 0C37     		adds	r7, r7, #12
 1164              		.cfi_def_cfa_offset 4
 1165 0026 BD46     		mov	sp, r7
 1166              		.cfi_def_cfa_register 13
 1167              		@ sp needed
 1168 0028 80BC     		pop	{r7}
 1169              		.cfi_restore 7
 1170              		.cfi_def_cfa_offset 0
 1171 002a 7047     		bx	lr
 1172              	.L77:
 1173              		.align	2
 1174              	.L76:
 1175 002c 60640040 		.word	1073767520
 1176 0030 65640040 		.word	1073767525
 1177              		.cfi_endproc
 1178              	.LFE23:
 1179              		.size	SPI_IMU_ReadStatus, .-SPI_IMU_ReadStatus
 1180              		.text
 1181              	.Letext0:
 1182              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 1183              		.section	.debug_info,"",%progbits
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc2leDoT.s 			page 42


 1184              	.Ldebug_info0:
 1185 0000 F0030000 		.4byte	0x3f0
 1186 0004 0400     		.2byte	0x4
 1187 0006 00000000 		.4byte	.Ldebug_abbrev0
 1188 000a 04       		.byte	0x4
 1189 000b 01       		.uleb128 0x1
 1190 000c 2A000000 		.4byte	.LASF52
 1191 0010 0C       		.byte	0xc
 1192 0011 4A030000 		.4byte	.LASF53
 1193 0015 09020000 		.4byte	.LASF54
 1194 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1195 001d 00000000 		.4byte	0
 1196 0021 00000000 		.4byte	.Ldebug_line0
 1197 0025 02       		.uleb128 0x2
 1198 0026 01       		.byte	0x1
 1199 0027 06       		.byte	0x6
 1200 0028 D8030000 		.4byte	.LASF0
 1201 002c 02       		.uleb128 0x2
 1202 002d 01       		.byte	0x1
 1203 002e 08       		.byte	0x8
 1204 002f E0010000 		.4byte	.LASF1
 1205 0033 02       		.uleb128 0x2
 1206 0034 02       		.byte	0x2
 1207 0035 05       		.byte	0x5
 1208 0036 93030000 		.4byte	.LASF2
 1209 003a 02       		.uleb128 0x2
 1210 003b 02       		.byte	0x2
 1211 003c 07       		.byte	0x7
 1212 003d FB000000 		.4byte	.LASF3
 1213 0041 02       		.uleb128 0x2
 1214 0042 04       		.byte	0x4
 1215 0043 05       		.byte	0x5
 1216 0044 B9030000 		.4byte	.LASF4
 1217 0048 02       		.uleb128 0x2
 1218 0049 04       		.byte	0x4
 1219 004a 07       		.byte	0x7
 1220 004b 9F020000 		.4byte	.LASF5
 1221 004f 02       		.uleb128 0x2
 1222 0050 08       		.byte	0x8
 1223 0051 05       		.byte	0x5
 1224 0052 2D030000 		.4byte	.LASF6
 1225 0056 02       		.uleb128 0x2
 1226 0057 08       		.byte	0x8
 1227 0058 07       		.byte	0x7
 1228 0059 DD020000 		.4byte	.LASF7
 1229 005d 03       		.uleb128 0x3
 1230 005e 04       		.byte	0x4
 1231 005f 05       		.byte	0x5
 1232 0060 696E7400 		.ascii	"int\000"
 1233 0064 02       		.uleb128 0x2
 1234 0065 04       		.byte	0x4
 1235 0066 07       		.byte	0x7
 1236 0067 B1020000 		.4byte	.LASF8
 1237 006b 04       		.uleb128 0x4
 1238 006c 88010000 		.4byte	.LASF12
 1239 0070 02       		.byte	0x2
 1240 0071 E401     		.2byte	0x1e4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc2leDoT.s 			page 43


 1241 0073 2C000000 		.4byte	0x2c
 1242 0077 02       		.uleb128 0x2
 1243 0078 04       		.byte	0x4
 1244 0079 04       		.byte	0x4
 1245 007a 63010000 		.4byte	.LASF9
 1246 007e 02       		.uleb128 0x2
 1247 007f 08       		.byte	0x8
 1248 0080 04       		.byte	0x4
 1249 0081 EE010000 		.4byte	.LASF10
 1250 0085 02       		.uleb128 0x2
 1251 0086 01       		.byte	0x1
 1252 0087 08       		.byte	0x8
 1253 0088 25000000 		.4byte	.LASF11
 1254 008c 04       		.uleb128 0x4
 1255 008d 6E010000 		.4byte	.LASF13
 1256 0091 02       		.byte	0x2
 1257 0092 8E02     		.2byte	0x28e
 1258 0094 98000000 		.4byte	0x98
 1259 0098 05       		.uleb128 0x5
 1260 0099 6B000000 		.4byte	0x6b
 1261 009d 02       		.uleb128 0x2
 1262 009e 08       		.byte	0x8
 1263 009f 04       		.byte	0x4
 1264 00a0 CC030000 		.4byte	.LASF14
 1265 00a4 02       		.uleb128 0x2
 1266 00a5 04       		.byte	0x4
 1267 00a6 07       		.byte	0x7
 1268 00a7 10030000 		.4byte	.LASF15
 1269 00ab 06       		.uleb128 0x6
 1270 00ac 2C040000 		.4byte	.LASF16
 1271 00b0 01       		.byte	0x1
 1272 00b1 3F       		.byte	0x3f
 1273 00b2 00000000 		.4byte	.LFB0
 1274 00b6 34000000 		.4byte	.LFE0-.LFB0
 1275 00ba 01       		.uleb128 0x1
 1276 00bb 9C       		.byte	0x9c
 1277 00bc 07       		.uleb128 0x7
 1278 00bd 3B030000 		.4byte	.LASF18
 1279 00c1 01       		.byte	0x1
 1280 00c2 78       		.byte	0x78
 1281 00c3 00000000 		.4byte	.LFB1
 1282 00c7 64000000 		.4byte	.LFE1-.LFB1
 1283 00cb 01       		.uleb128 0x1
 1284 00cc 9C       		.byte	0x9c
 1285 00cd E0000000 		.4byte	0xe0
 1286 00d1 08       		.uleb128 0x8
 1287 00d2 BA010000 		.4byte	.LASF20
 1288 00d6 01       		.byte	0x1
 1289 00d7 7A       		.byte	0x7a
 1290 00d8 6B000000 		.4byte	0x6b
 1291 00dc 02       		.uleb128 0x2
 1292 00dd 91       		.byte	0x91
 1293 00de 77       		.sleb128 -9
 1294 00df 00       		.byte	0
 1295 00e0 06       		.uleb128 0x6
 1296 00e1 A2010000 		.4byte	.LASF17
 1297 00e5 01       		.byte	0x1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc2leDoT.s 			page 44


 1298 00e6 A3       		.byte	0xa3
 1299 00e7 00000000 		.4byte	.LFB2
 1300 00eb 24000000 		.4byte	.LFE2-.LFB2
 1301 00ef 01       		.uleb128 0x1
 1302 00f0 9C       		.byte	0x9c
 1303 00f1 07       		.uleb128 0x7
 1304 00f2 FC010000 		.4byte	.LASF19
 1305 00f6 01       		.byte	0x1
 1306 00f7 C0       		.byte	0xc0
 1307 00f8 00000000 		.4byte	.LFB3
 1308 00fc 50000000 		.4byte	.LFE3-.LFB3
 1309 0100 01       		.uleb128 0x1
 1310 0101 9C       		.byte	0x9c
 1311 0102 15010000 		.4byte	0x115
 1312 0106 08       		.uleb128 0x8
 1313 0107 BA010000 		.4byte	.LASF20
 1314 010b 01       		.byte	0x1
 1315 010c C2       		.byte	0xc2
 1316 010d 6B000000 		.4byte	0x6b
 1317 0111 02       		.uleb128 0x2
 1318 0112 91       		.byte	0x91
 1319 0113 77       		.sleb128 -9
 1320 0114 00       		.byte	0
 1321 0115 09       		.uleb128 0x9
 1322 0116 19030000 		.4byte	.LASF21
 1323 011a 01       		.byte	0x1
 1324 011b E3       		.byte	0xe3
 1325 011c 00000000 		.4byte	.LFB4
 1326 0120 0C000000 		.4byte	.LFE4-.LFB4
 1327 0124 01       		.uleb128 0x1
 1328 0125 9C       		.byte	0x9c
 1329 0126 09       		.uleb128 0x9
 1330 0127 0E010000 		.4byte	.LASF22
 1331 012b 01       		.byte	0x1
 1332 012c FC       		.byte	0xfc
 1333 012d 00000000 		.4byte	.LFB5
 1334 0131 0C000000 		.4byte	.LFE5-.LFB5
 1335 0135 01       		.uleb128 0x1
 1336 0136 9C       		.byte	0x9c
 1337 0137 0A       		.uleb128 0xa
 1338 0138 A4030000 		.4byte	.LASF23
 1339 013c 01       		.byte	0x1
 1340 013d 1501     		.2byte	0x115
 1341 013f 00000000 		.4byte	.LFB6
 1342 0143 0C000000 		.4byte	.LFE6-.LFB6
 1343 0147 01       		.uleb128 0x1
 1344 0148 9C       		.byte	0x9c
 1345 0149 0A       		.uleb128 0xa
 1346 014a 73010000 		.4byte	.LASF24
 1347 014e 01       		.byte	0x1
 1348 014f 2E01     		.2byte	0x12e
 1349 0151 00000000 		.4byte	.LFB7
 1350 0155 0C000000 		.4byte	.LFE7-.LFB7
 1351 0159 01       		.uleb128 0x1
 1352 015a 9C       		.byte	0x9c
 1353 015b 0B       		.uleb128 0xb
 1354 015c F6030000 		.4byte	.LASF25
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc2leDoT.s 			page 45


 1355 0160 01       		.byte	0x1
 1356 0161 4801     		.2byte	0x148
 1357 0163 00000000 		.4byte	.LFB8
 1358 0167 20000000 		.4byte	.LFE8-.LFB8
 1359 016b 01       		.uleb128 0x1
 1360 016c 9C       		.byte	0x9c
 1361 016d 81010000 		.4byte	0x181
 1362 0171 0C       		.uleb128 0xc
 1363 0172 F5010000 		.4byte	.LASF27
 1364 0176 01       		.byte	0x1
 1365 0177 4801     		.2byte	0x148
 1366 0179 6B000000 		.4byte	0x6b
 1367 017d 02       		.uleb128 0x2
 1368 017e 91       		.byte	0x91
 1369 017f 77       		.sleb128 -9
 1370 0180 00       		.byte	0
 1371 0181 0B       		.uleb128 0xb
 1372 0182 11040000 		.4byte	.LASF26
 1373 0186 01       		.byte	0x1
 1374 0187 6001     		.2byte	0x160
 1375 0189 00000000 		.4byte	.LFB9
 1376 018d 20000000 		.4byte	.LFE9-.LFB9
 1377 0191 01       		.uleb128 0x1
 1378 0192 9C       		.byte	0x9c
 1379 0193 A7010000 		.4byte	0x1a7
 1380 0197 0C       		.uleb128 0xc
 1381 0198 F5010000 		.4byte	.LASF27
 1382 019c 01       		.byte	0x1
 1383 019d 6001     		.2byte	0x160
 1384 019f 6B000000 		.4byte	0x6b
 1385 01a3 02       		.uleb128 0x2
 1386 01a4 91       		.byte	0x91
 1387 01a5 77       		.sleb128 -9
 1388 01a6 00       		.byte	0
 1389 01a7 0D       		.uleb128 0xd
 1390 01a8 CB010000 		.4byte	.LASF29
 1391 01ac 01       		.byte	0x1
 1392 01ad 8201     		.2byte	0x182
 1393 01af 6B000000 		.4byte	0x6b
 1394 01b3 00000000 		.4byte	.LFB10
 1395 01b7 1C000000 		.4byte	.LFE10-.LFB10
 1396 01bb 01       		.uleb128 0x1
 1397 01bc 9C       		.byte	0x9c
 1398 01bd D1010000 		.4byte	0x1d1
 1399 01c1 0E       		.uleb128 0xe
 1400 01c2 C2030000 		.4byte	.LASF28
 1401 01c6 01       		.byte	0x1
 1402 01c7 8401     		.2byte	0x184
 1403 01c9 6B000000 		.4byte	0x6b
 1404 01cd 02       		.uleb128 0x2
 1405 01ce 91       		.byte	0x91
 1406 01cf 77       		.sleb128 -9
 1407 01d0 00       		.byte	0
 1408 01d1 0D       		.uleb128 0xd
 1409 01d2 7E030000 		.4byte	.LASF30
 1410 01d6 01       		.byte	0x1
 1411 01d7 B501     		.2byte	0x1b5
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc2leDoT.s 			page 46


 1412 01d9 6B000000 		.4byte	0x6b
 1413 01dd 00000000 		.4byte	.LFB11
 1414 01e1 1C000000 		.4byte	.LFE11-.LFB11
 1415 01e5 01       		.uleb128 0x1
 1416 01e6 9C       		.byte	0x9c
 1417 01e7 FB010000 		.4byte	0x1fb
 1418 01eb 0E       		.uleb128 0xe
 1419 01ec C2030000 		.4byte	.LASF28
 1420 01f0 01       		.byte	0x1
 1421 01f1 B701     		.2byte	0x1b7
 1422 01f3 6B000000 		.4byte	0x6b
 1423 01f7 02       		.uleb128 0x2
 1424 01f8 91       		.byte	0x91
 1425 01f9 77       		.sleb128 -9
 1426 01fa 00       		.byte	0
 1427 01fb 0B       		.uleb128 0xb
 1428 01fc 8E010000 		.4byte	.LASF31
 1429 0200 01       		.byte	0x1
 1430 0201 EE01     		.2byte	0x1ee
 1431 0203 00000000 		.4byte	.LFB12
 1432 0207 34000000 		.4byte	.LFE12-.LFB12
 1433 020b 01       		.uleb128 0x1
 1434 020c 9C       		.byte	0x9c
 1435 020d 21020000 		.4byte	0x221
 1436 0211 0C       		.uleb128 0xc
 1437 0212 F4000000 		.4byte	.LASF32
 1438 0216 01       		.byte	0x1
 1439 0217 EE01     		.2byte	0x1ee
 1440 0219 6B000000 		.4byte	0x6b
 1441 021d 02       		.uleb128 0x2
 1442 021e 91       		.byte	0x91
 1443 021f 77       		.sleb128 -9
 1444 0220 00       		.byte	0
 1445 0221 0D       		.uleb128 0xd
 1446 0222 E1000000 		.4byte	.LASF33
 1447 0226 01       		.byte	0x1
 1448 0227 5A02     		.2byte	0x25a
 1449 0229 6B000000 		.4byte	0x6b
 1450 022d 00000000 		.4byte	.LFB13
 1451 0231 1C000000 		.4byte	.LFE13-.LFB13
 1452 0235 01       		.uleb128 0x1
 1453 0236 9C       		.byte	0x9c
 1454 0237 4B020000 		.4byte	0x24b
 1455 023b 0E       		.uleb128 0xe
 1456 023c D6020000 		.4byte	.LASF34
 1457 0240 01       		.byte	0x1
 1458 0241 5C02     		.2byte	0x25c
 1459 0243 6B000000 		.4byte	0x6b
 1460 0247 02       		.uleb128 0x2
 1461 0248 91       		.byte	0x91
 1462 0249 77       		.sleb128 -9
 1463 024a 00       		.byte	0
 1464 024b 0D       		.uleb128 0xd
 1465 024c BE020000 		.4byte	.LASF35
 1466 0250 01       		.byte	0x1
 1467 0251 9A02     		.2byte	0x29a
 1468 0253 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc2leDoT.s 			page 47


 1469 0257 00000000 		.4byte	.LFB14
 1470 025b 2C000000 		.4byte	.LFE14-.LFB14
 1471 025f 01       		.uleb128 0x1
 1472 0260 9C       		.byte	0x9c
 1473 0261 75020000 		.4byte	0x275
 1474 0265 0E       		.uleb128 0xe
 1475 0266 69010000 		.4byte	.LASF36
 1476 026a 01       		.byte	0x1
 1477 026b 9C02     		.2byte	0x29c
 1478 026d 6B000000 		.4byte	0x6b
 1479 0271 02       		.uleb128 0x2
 1480 0272 91       		.byte	0x91
 1481 0273 77       		.sleb128 -9
 1482 0274 00       		.byte	0
 1483 0275 0D       		.uleb128 0xd
 1484 0276 22010000 		.4byte	.LASF37
 1485 027a 01       		.byte	0x1
 1486 027b D702     		.2byte	0x2d7
 1487 027d 6B000000 		.4byte	0x6b
 1488 0281 00000000 		.4byte	.LFB15
 1489 0285 40000000 		.4byte	.LFE15-.LFB15
 1490 0289 01       		.uleb128 0x1
 1491 028a 9C       		.byte	0x9c
 1492 028b 9F020000 		.4byte	0x29f
 1493 028f 0E       		.uleb128 0xe
 1494 0290 69010000 		.4byte	.LASF36
 1495 0294 01       		.byte	0x1
 1496 0295 D902     		.2byte	0x2d9
 1497 0297 6B000000 		.4byte	0x6b
 1498 029b 02       		.uleb128 0x2
 1499 029c 91       		.byte	0x91
 1500 029d 77       		.sleb128 -9
 1501 029e 00       		.byte	0
 1502 029f 0A       		.uleb128 0xa
 1503 02a0 89020000 		.4byte	.LASF38
 1504 02a4 01       		.byte	0x1
 1505 02a5 2603     		.2byte	0x326
 1506 02a7 00000000 		.4byte	.LFB16
 1507 02ab 28000000 		.4byte	.LFE16-.LFB16
 1508 02af 01       		.uleb128 0x1
 1509 02b0 9C       		.byte	0x9c
 1510 02b1 0F       		.uleb128 0xf
 1511 02b2 B8000000 		.4byte	.LASF39
 1512 02b6 01       		.byte	0x1
 1513 02b7 5D03     		.2byte	0x35d
 1514 02b9 00000000 		.4byte	.LFB17
 1515 02bd 44000000 		.4byte	.LFE17-.LFB17
 1516 02c1 01       		.uleb128 0x1
 1517 02c2 9C       		.byte	0x9c
 1518 02c3 D7020000 		.4byte	0x2d7
 1519 02c7 0E       		.uleb128 0xe
 1520 02c8 BA010000 		.4byte	.LASF20
 1521 02cc 01       		.byte	0x1
 1522 02cd 5F03     		.2byte	0x35f
 1523 02cf 6B000000 		.4byte	0x6b
 1524 02d3 02       		.uleb128 0x2
 1525 02d4 91       		.byte	0x91
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc2leDoT.s 			page 48


 1526 02d5 77       		.sleb128 -9
 1527 02d6 00       		.byte	0
 1528 02d7 0F       		.uleb128 0xf
 1529 02d8 78020000 		.4byte	.LASF40
 1530 02dc 01       		.byte	0x1
 1531 02dd C203     		.2byte	0x3c2
 1532 02df 00000000 		.4byte	.LFB18
 1533 02e3 3A000000 		.4byte	.LFE18-.LFB18
 1534 02e7 01       		.uleb128 0x1
 1535 02e8 9C       		.byte	0x9c
 1536 02e9 1B030000 		.4byte	0x31b
 1537 02ed 0C       		.uleb128 0xc
 1538 02ee 9D030000 		.4byte	.LASF41
 1539 02f2 01       		.byte	0x1
 1540 02f3 C203     		.2byte	0x3c2
 1541 02f5 1B030000 		.4byte	0x31b
 1542 02f9 02       		.uleb128 0x2
 1543 02fa 91       		.byte	0x91
 1544 02fb 6C       		.sleb128 -20
 1545 02fc 0C       		.uleb128 0xc
 1546 02fd B0010000 		.4byte	.LASF42
 1547 0301 01       		.byte	0x1
 1548 0302 C203     		.2byte	0x3c2
 1549 0304 6B000000 		.4byte	0x6b
 1550 0308 02       		.uleb128 0x2
 1551 0309 91       		.byte	0x91
 1552 030a 6B       		.sleb128 -21
 1553 030b 0E       		.uleb128 0xe
 1554 030c 07030000 		.4byte	.LASF43
 1555 0310 01       		.byte	0x1
 1556 0311 C503     		.2byte	0x3c5
 1557 0313 6B000000 		.4byte	0x6b
 1558 0317 02       		.uleb128 0x2
 1559 0318 91       		.byte	0x91
 1560 0319 77       		.sleb128 -9
 1561 031a 00       		.byte	0
 1562 031b 10       		.uleb128 0x10
 1563 031c 04       		.byte	0x4
 1564 031d 21030000 		.4byte	0x321
 1565 0321 11       		.uleb128 0x11
 1566 0322 6B000000 		.4byte	0x6b
 1567 0326 0F       		.uleb128 0xf
 1568 0327 00000000 		.4byte	.LASF44
 1569 032b 01       		.byte	0x1
 1570 032c E303     		.2byte	0x3e3
 1571 032e 00000000 		.4byte	.LFB19
 1572 0332 60000000 		.4byte	.LFE19-.LFB19
 1573 0336 01       		.uleb128 0x1
 1574 0337 9C       		.byte	0x9c
 1575 0338 4C030000 		.4byte	0x34c
 1576 033c 0E       		.uleb128 0xe
 1577 033d BA010000 		.4byte	.LASF20
 1578 0341 01       		.byte	0x1
 1579 0342 E503     		.2byte	0x3e5
 1580 0344 6B000000 		.4byte	0x6b
 1581 0348 02       		.uleb128 0x2
 1582 0349 91       		.byte	0x91
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc2leDoT.s 			page 49


 1583 034a 77       		.sleb128 -9
 1584 034b 00       		.byte	0
 1585 034c 12       		.uleb128 0x12
 1586 034d E4030000 		.4byte	.LASF45
 1587 0351 01       		.byte	0x1
 1588 0352 1104     		.2byte	0x411
 1589 0354 00000000 		.4byte	.LFB20
 1590 0358 10000000 		.4byte	.LFE20-.LFB20
 1591 035c 01       		.uleb128 0x1
 1592 035d 9C       		.byte	0x9c
 1593 035e 12       		.uleb128 0x12
 1594 035f F4020000 		.4byte	.LASF46
 1595 0363 01       		.byte	0x1
 1596 0364 2904     		.2byte	0x429
 1597 0366 00000000 		.4byte	.LFB21
 1598 036a 10000000 		.4byte	.LFE21-.LFB21
 1599 036e 01       		.uleb128 0x1
 1600 036f 9C       		.byte	0x9c
 1601 0370 0B       		.uleb128 0xb
 1602 0371 4A010000 		.4byte	.LASF47
 1603 0375 01       		.byte	0x1
 1604 0376 4204     		.2byte	0x442
 1605 0378 00000000 		.4byte	.LFB22
 1606 037c 30000000 		.4byte	.LFE22-.LFB22
 1607 0380 01       		.uleb128 0x1
 1608 0381 9C       		.byte	0x9c
 1609 0382 96030000 		.4byte	0x396
 1610 0386 0C       		.uleb128 0xc
 1611 0387 F5010000 		.4byte	.LASF27
 1612 038b 01       		.byte	0x1
 1613 038c 4204     		.2byte	0x442
 1614 038e 6B000000 		.4byte	0x6b
 1615 0392 02       		.uleb128 0x2
 1616 0393 91       		.byte	0x91
 1617 0394 77       		.sleb128 -9
 1618 0395 00       		.byte	0
 1619 0396 0D       		.uleb128 0xd
 1620 0397 6B030000 		.4byte	.LASF48
 1621 039b 01       		.byte	0x1
 1622 039c 6504     		.2byte	0x465
 1623 039e 6B000000 		.4byte	0x6b
 1624 03a2 00000000 		.4byte	.LFB23
 1625 03a6 34000000 		.4byte	.LFE23-.LFB23
 1626 03aa 01       		.uleb128 0x1
 1627 03ab 9C       		.byte	0x9c
 1628 03ac C0030000 		.4byte	0x3c0
 1629 03b0 0E       		.uleb128 0xe
 1630 03b1 C2030000 		.4byte	.LASF28
 1631 03b5 01       		.byte	0x1
 1632 03b6 6704     		.2byte	0x467
 1633 03b8 6B000000 		.4byte	0x6b
 1634 03bc 02       		.uleb128 0x2
 1635 03bd 91       		.byte	0x91
 1636 03be 77       		.sleb128 -9
 1637 03bf 00       		.byte	0
 1638 03c0 13       		.uleb128 0x13
 1639 03c1 3A010000 		.4byte	.LASF49
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc2leDoT.s 			page 50


 1640 03c5 01       		.byte	0x1
 1641 03c6 22       		.byte	0x22
 1642 03c7 6B000000 		.4byte	0x6b
 1643 03cb 05       		.uleb128 0x5
 1644 03cc 03       		.byte	0x3
 1645 03cd 00000000 		.4byte	SPI_IMU_initVar
 1646 03d1 13       		.uleb128 0x13
 1647 03d2 CE000000 		.4byte	.LASF50
 1648 03d6 01       		.byte	0x1
 1649 03d7 24       		.byte	0x24
 1650 03d8 98000000 		.4byte	0x98
 1651 03dc 05       		.uleb128 0x5
 1652 03dd 03       		.byte	0x3
 1653 03de 00000000 		.4byte	SPI_IMU_swStatusTx
 1654 03e2 13       		.uleb128 0x13
 1655 03e3 12000000 		.4byte	.LASF51
 1656 03e7 01       		.byte	0x1
 1657 03e8 25       		.byte	0x25
 1658 03e9 98000000 		.4byte	0x98
 1659 03ed 05       		.uleb128 0x5
 1660 03ee 03       		.byte	0x3
 1661 03ef 00000000 		.4byte	SPI_IMU_swStatusRx
 1662 03f3 00       		.byte	0
 1663              		.section	.debug_abbrev,"",%progbits
 1664              	.Ldebug_abbrev0:
 1665 0000 01       		.uleb128 0x1
 1666 0001 11       		.uleb128 0x11
 1667 0002 01       		.byte	0x1
 1668 0003 25       		.uleb128 0x25
 1669 0004 0E       		.uleb128 0xe
 1670 0005 13       		.uleb128 0x13
 1671 0006 0B       		.uleb128 0xb
 1672 0007 03       		.uleb128 0x3
 1673 0008 0E       		.uleb128 0xe
 1674 0009 1B       		.uleb128 0x1b
 1675 000a 0E       		.uleb128 0xe
 1676 000b 55       		.uleb128 0x55
 1677 000c 17       		.uleb128 0x17
 1678 000d 11       		.uleb128 0x11
 1679 000e 01       		.uleb128 0x1
 1680 000f 10       		.uleb128 0x10
 1681 0010 17       		.uleb128 0x17
 1682 0011 00       		.byte	0
 1683 0012 00       		.byte	0
 1684 0013 02       		.uleb128 0x2
 1685 0014 24       		.uleb128 0x24
 1686 0015 00       		.byte	0
 1687 0016 0B       		.uleb128 0xb
 1688 0017 0B       		.uleb128 0xb
 1689 0018 3E       		.uleb128 0x3e
 1690 0019 0B       		.uleb128 0xb
 1691 001a 03       		.uleb128 0x3
 1692 001b 0E       		.uleb128 0xe
 1693 001c 00       		.byte	0
 1694 001d 00       		.byte	0
 1695 001e 03       		.uleb128 0x3
 1696 001f 24       		.uleb128 0x24
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc2leDoT.s 			page 51


 1697 0020 00       		.byte	0
 1698 0021 0B       		.uleb128 0xb
 1699 0022 0B       		.uleb128 0xb
 1700 0023 3E       		.uleb128 0x3e
 1701 0024 0B       		.uleb128 0xb
 1702 0025 03       		.uleb128 0x3
 1703 0026 08       		.uleb128 0x8
 1704 0027 00       		.byte	0
 1705 0028 00       		.byte	0
 1706 0029 04       		.uleb128 0x4
 1707 002a 16       		.uleb128 0x16
 1708 002b 00       		.byte	0
 1709 002c 03       		.uleb128 0x3
 1710 002d 0E       		.uleb128 0xe
 1711 002e 3A       		.uleb128 0x3a
 1712 002f 0B       		.uleb128 0xb
 1713 0030 3B       		.uleb128 0x3b
 1714 0031 05       		.uleb128 0x5
 1715 0032 49       		.uleb128 0x49
 1716 0033 13       		.uleb128 0x13
 1717 0034 00       		.byte	0
 1718 0035 00       		.byte	0
 1719 0036 05       		.uleb128 0x5
 1720 0037 35       		.uleb128 0x35
 1721 0038 00       		.byte	0
 1722 0039 49       		.uleb128 0x49
 1723 003a 13       		.uleb128 0x13
 1724 003b 00       		.byte	0
 1725 003c 00       		.byte	0
 1726 003d 06       		.uleb128 0x6
 1727 003e 2E       		.uleb128 0x2e
 1728 003f 00       		.byte	0
 1729 0040 3F       		.uleb128 0x3f
 1730 0041 19       		.uleb128 0x19
 1731 0042 03       		.uleb128 0x3
 1732 0043 0E       		.uleb128 0xe
 1733 0044 3A       		.uleb128 0x3a
 1734 0045 0B       		.uleb128 0xb
 1735 0046 3B       		.uleb128 0x3b
 1736 0047 0B       		.uleb128 0xb
 1737 0048 27       		.uleb128 0x27
 1738 0049 19       		.uleb128 0x19
 1739 004a 11       		.uleb128 0x11
 1740 004b 01       		.uleb128 0x1
 1741 004c 12       		.uleb128 0x12
 1742 004d 06       		.uleb128 0x6
 1743 004e 40       		.uleb128 0x40
 1744 004f 18       		.uleb128 0x18
 1745 0050 9642     		.uleb128 0x2116
 1746 0052 19       		.uleb128 0x19
 1747 0053 00       		.byte	0
 1748 0054 00       		.byte	0
 1749 0055 07       		.uleb128 0x7
 1750 0056 2E       		.uleb128 0x2e
 1751 0057 01       		.byte	0x1
 1752 0058 3F       		.uleb128 0x3f
 1753 0059 19       		.uleb128 0x19
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc2leDoT.s 			page 52


 1754 005a 03       		.uleb128 0x3
 1755 005b 0E       		.uleb128 0xe
 1756 005c 3A       		.uleb128 0x3a
 1757 005d 0B       		.uleb128 0xb
 1758 005e 3B       		.uleb128 0x3b
 1759 005f 0B       		.uleb128 0xb
 1760 0060 27       		.uleb128 0x27
 1761 0061 19       		.uleb128 0x19
 1762 0062 11       		.uleb128 0x11
 1763 0063 01       		.uleb128 0x1
 1764 0064 12       		.uleb128 0x12
 1765 0065 06       		.uleb128 0x6
 1766 0066 40       		.uleb128 0x40
 1767 0067 18       		.uleb128 0x18
 1768 0068 9642     		.uleb128 0x2116
 1769 006a 19       		.uleb128 0x19
 1770 006b 01       		.uleb128 0x1
 1771 006c 13       		.uleb128 0x13
 1772 006d 00       		.byte	0
 1773 006e 00       		.byte	0
 1774 006f 08       		.uleb128 0x8
 1775 0070 34       		.uleb128 0x34
 1776 0071 00       		.byte	0
 1777 0072 03       		.uleb128 0x3
 1778 0073 0E       		.uleb128 0xe
 1779 0074 3A       		.uleb128 0x3a
 1780 0075 0B       		.uleb128 0xb
 1781 0076 3B       		.uleb128 0x3b
 1782 0077 0B       		.uleb128 0xb
 1783 0078 49       		.uleb128 0x49
 1784 0079 13       		.uleb128 0x13
 1785 007a 02       		.uleb128 0x2
 1786 007b 18       		.uleb128 0x18
 1787 007c 00       		.byte	0
 1788 007d 00       		.byte	0
 1789 007e 09       		.uleb128 0x9
 1790 007f 2E       		.uleb128 0x2e
 1791 0080 00       		.byte	0
 1792 0081 3F       		.uleb128 0x3f
 1793 0082 19       		.uleb128 0x19
 1794 0083 03       		.uleb128 0x3
 1795 0084 0E       		.uleb128 0xe
 1796 0085 3A       		.uleb128 0x3a
 1797 0086 0B       		.uleb128 0xb
 1798 0087 3B       		.uleb128 0x3b
 1799 0088 0B       		.uleb128 0xb
 1800 0089 27       		.uleb128 0x27
 1801 008a 19       		.uleb128 0x19
 1802 008b 11       		.uleb128 0x11
 1803 008c 01       		.uleb128 0x1
 1804 008d 12       		.uleb128 0x12
 1805 008e 06       		.uleb128 0x6
 1806 008f 40       		.uleb128 0x40
 1807 0090 18       		.uleb128 0x18
 1808 0091 9742     		.uleb128 0x2117
 1809 0093 19       		.uleb128 0x19
 1810 0094 00       		.byte	0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc2leDoT.s 			page 53


 1811 0095 00       		.byte	0
 1812 0096 0A       		.uleb128 0xa
 1813 0097 2E       		.uleb128 0x2e
 1814 0098 00       		.byte	0
 1815 0099 3F       		.uleb128 0x3f
 1816 009a 19       		.uleb128 0x19
 1817 009b 03       		.uleb128 0x3
 1818 009c 0E       		.uleb128 0xe
 1819 009d 3A       		.uleb128 0x3a
 1820 009e 0B       		.uleb128 0xb
 1821 009f 3B       		.uleb128 0x3b
 1822 00a0 05       		.uleb128 0x5
 1823 00a1 27       		.uleb128 0x27
 1824 00a2 19       		.uleb128 0x19
 1825 00a3 11       		.uleb128 0x11
 1826 00a4 01       		.uleb128 0x1
 1827 00a5 12       		.uleb128 0x12
 1828 00a6 06       		.uleb128 0x6
 1829 00a7 40       		.uleb128 0x40
 1830 00a8 18       		.uleb128 0x18
 1831 00a9 9742     		.uleb128 0x2117
 1832 00ab 19       		.uleb128 0x19
 1833 00ac 00       		.byte	0
 1834 00ad 00       		.byte	0
 1835 00ae 0B       		.uleb128 0xb
 1836 00af 2E       		.uleb128 0x2e
 1837 00b0 01       		.byte	0x1
 1838 00b1 3F       		.uleb128 0x3f
 1839 00b2 19       		.uleb128 0x19
 1840 00b3 03       		.uleb128 0x3
 1841 00b4 0E       		.uleb128 0xe
 1842 00b5 3A       		.uleb128 0x3a
 1843 00b6 0B       		.uleb128 0xb
 1844 00b7 3B       		.uleb128 0x3b
 1845 00b8 05       		.uleb128 0x5
 1846 00b9 27       		.uleb128 0x27
 1847 00ba 19       		.uleb128 0x19
 1848 00bb 11       		.uleb128 0x11
 1849 00bc 01       		.uleb128 0x1
 1850 00bd 12       		.uleb128 0x12
 1851 00be 06       		.uleb128 0x6
 1852 00bf 40       		.uleb128 0x40
 1853 00c0 18       		.uleb128 0x18
 1854 00c1 9742     		.uleb128 0x2117
 1855 00c3 19       		.uleb128 0x19
 1856 00c4 01       		.uleb128 0x1
 1857 00c5 13       		.uleb128 0x13
 1858 00c6 00       		.byte	0
 1859 00c7 00       		.byte	0
 1860 00c8 0C       		.uleb128 0xc
 1861 00c9 05       		.uleb128 0x5
 1862 00ca 00       		.byte	0
 1863 00cb 03       		.uleb128 0x3
 1864 00cc 0E       		.uleb128 0xe
 1865 00cd 3A       		.uleb128 0x3a
 1866 00ce 0B       		.uleb128 0xb
 1867 00cf 3B       		.uleb128 0x3b
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc2leDoT.s 			page 54


 1868 00d0 05       		.uleb128 0x5
 1869 00d1 49       		.uleb128 0x49
 1870 00d2 13       		.uleb128 0x13
 1871 00d3 02       		.uleb128 0x2
 1872 00d4 18       		.uleb128 0x18
 1873 00d5 00       		.byte	0
 1874 00d6 00       		.byte	0
 1875 00d7 0D       		.uleb128 0xd
 1876 00d8 2E       		.uleb128 0x2e
 1877 00d9 01       		.byte	0x1
 1878 00da 3F       		.uleb128 0x3f
 1879 00db 19       		.uleb128 0x19
 1880 00dc 03       		.uleb128 0x3
 1881 00dd 0E       		.uleb128 0xe
 1882 00de 3A       		.uleb128 0x3a
 1883 00df 0B       		.uleb128 0xb
 1884 00e0 3B       		.uleb128 0x3b
 1885 00e1 05       		.uleb128 0x5
 1886 00e2 27       		.uleb128 0x27
 1887 00e3 19       		.uleb128 0x19
 1888 00e4 49       		.uleb128 0x49
 1889 00e5 13       		.uleb128 0x13
 1890 00e6 11       		.uleb128 0x11
 1891 00e7 01       		.uleb128 0x1
 1892 00e8 12       		.uleb128 0x12
 1893 00e9 06       		.uleb128 0x6
 1894 00ea 40       		.uleb128 0x40
 1895 00eb 18       		.uleb128 0x18
 1896 00ec 9742     		.uleb128 0x2117
 1897 00ee 19       		.uleb128 0x19
 1898 00ef 01       		.uleb128 0x1
 1899 00f0 13       		.uleb128 0x13
 1900 00f1 00       		.byte	0
 1901 00f2 00       		.byte	0
 1902 00f3 0E       		.uleb128 0xe
 1903 00f4 34       		.uleb128 0x34
 1904 00f5 00       		.byte	0
 1905 00f6 03       		.uleb128 0x3
 1906 00f7 0E       		.uleb128 0xe
 1907 00f8 3A       		.uleb128 0x3a
 1908 00f9 0B       		.uleb128 0xb
 1909 00fa 3B       		.uleb128 0x3b
 1910 00fb 05       		.uleb128 0x5
 1911 00fc 49       		.uleb128 0x49
 1912 00fd 13       		.uleb128 0x13
 1913 00fe 02       		.uleb128 0x2
 1914 00ff 18       		.uleb128 0x18
 1915 0100 00       		.byte	0
 1916 0101 00       		.byte	0
 1917 0102 0F       		.uleb128 0xf
 1918 0103 2E       		.uleb128 0x2e
 1919 0104 01       		.byte	0x1
 1920 0105 3F       		.uleb128 0x3f
 1921 0106 19       		.uleb128 0x19
 1922 0107 03       		.uleb128 0x3
 1923 0108 0E       		.uleb128 0xe
 1924 0109 3A       		.uleb128 0x3a
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc2leDoT.s 			page 55


 1925 010a 0B       		.uleb128 0xb
 1926 010b 3B       		.uleb128 0x3b
 1927 010c 05       		.uleb128 0x5
 1928 010d 27       		.uleb128 0x27
 1929 010e 19       		.uleb128 0x19
 1930 010f 11       		.uleb128 0x11
 1931 0110 01       		.uleb128 0x1
 1932 0111 12       		.uleb128 0x12
 1933 0112 06       		.uleb128 0x6
 1934 0113 40       		.uleb128 0x40
 1935 0114 18       		.uleb128 0x18
 1936 0115 9642     		.uleb128 0x2116
 1937 0117 19       		.uleb128 0x19
 1938 0118 01       		.uleb128 0x1
 1939 0119 13       		.uleb128 0x13
 1940 011a 00       		.byte	0
 1941 011b 00       		.byte	0
 1942 011c 10       		.uleb128 0x10
 1943 011d 0F       		.uleb128 0xf
 1944 011e 00       		.byte	0
 1945 011f 0B       		.uleb128 0xb
 1946 0120 0B       		.uleb128 0xb
 1947 0121 49       		.uleb128 0x49
 1948 0122 13       		.uleb128 0x13
 1949 0123 00       		.byte	0
 1950 0124 00       		.byte	0
 1951 0125 11       		.uleb128 0x11
 1952 0126 26       		.uleb128 0x26
 1953 0127 00       		.byte	0
 1954 0128 49       		.uleb128 0x49
 1955 0129 13       		.uleb128 0x13
 1956 012a 00       		.byte	0
 1957 012b 00       		.byte	0
 1958 012c 12       		.uleb128 0x12
 1959 012d 2E       		.uleb128 0x2e
 1960 012e 00       		.byte	0
 1961 012f 3F       		.uleb128 0x3f
 1962 0130 19       		.uleb128 0x19
 1963 0131 03       		.uleb128 0x3
 1964 0132 0E       		.uleb128 0xe
 1965 0133 3A       		.uleb128 0x3a
 1966 0134 0B       		.uleb128 0xb
 1967 0135 3B       		.uleb128 0x3b
 1968 0136 05       		.uleb128 0x5
 1969 0137 27       		.uleb128 0x27
 1970 0138 19       		.uleb128 0x19
 1971 0139 11       		.uleb128 0x11
 1972 013a 01       		.uleb128 0x1
 1973 013b 12       		.uleb128 0x12
 1974 013c 06       		.uleb128 0x6
 1975 013d 40       		.uleb128 0x40
 1976 013e 18       		.uleb128 0x18
 1977 013f 9642     		.uleb128 0x2116
 1978 0141 19       		.uleb128 0x19
 1979 0142 00       		.byte	0
 1980 0143 00       		.byte	0
 1981 0144 13       		.uleb128 0x13
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc2leDoT.s 			page 56


 1982 0145 34       		.uleb128 0x34
 1983 0146 00       		.byte	0
 1984 0147 03       		.uleb128 0x3
 1985 0148 0E       		.uleb128 0xe
 1986 0149 3A       		.uleb128 0x3a
 1987 014a 0B       		.uleb128 0xb
 1988 014b 3B       		.uleb128 0x3b
 1989 014c 0B       		.uleb128 0xb
 1990 014d 49       		.uleb128 0x49
 1991 014e 13       		.uleb128 0x13
 1992 014f 3F       		.uleb128 0x3f
 1993 0150 19       		.uleb128 0x19
 1994 0151 02       		.uleb128 0x2
 1995 0152 18       		.uleb128 0x18
 1996 0153 00       		.byte	0
 1997 0154 00       		.byte	0
 1998 0155 00       		.byte	0
 1999              		.section	.debug_aranges,"",%progbits
 2000 0000 D4000000 		.4byte	0xd4
 2001 0004 0200     		.2byte	0x2
 2002 0006 00000000 		.4byte	.Ldebug_info0
 2003 000a 04       		.byte	0x4
 2004 000b 00       		.byte	0
 2005 000c 0000     		.2byte	0
 2006 000e 0000     		.2byte	0
 2007 0010 00000000 		.4byte	.LFB0
 2008 0014 34000000 		.4byte	.LFE0-.LFB0
 2009 0018 00000000 		.4byte	.LFB1
 2010 001c 64000000 		.4byte	.LFE1-.LFB1
 2011 0020 00000000 		.4byte	.LFB2
 2012 0024 24000000 		.4byte	.LFE2-.LFB2
 2013 0028 00000000 		.4byte	.LFB3
 2014 002c 50000000 		.4byte	.LFE3-.LFB3
 2015 0030 00000000 		.4byte	.LFB4
 2016 0034 0C000000 		.4byte	.LFE4-.LFB4
 2017 0038 00000000 		.4byte	.LFB5
 2018 003c 0C000000 		.4byte	.LFE5-.LFB5
 2019 0040 00000000 		.4byte	.LFB6
 2020 0044 0C000000 		.4byte	.LFE6-.LFB6
 2021 0048 00000000 		.4byte	.LFB7
 2022 004c 0C000000 		.4byte	.LFE7-.LFB7
 2023 0050 00000000 		.4byte	.LFB8
 2024 0054 20000000 		.4byte	.LFE8-.LFB8
 2025 0058 00000000 		.4byte	.LFB9
 2026 005c 20000000 		.4byte	.LFE9-.LFB9
 2027 0060 00000000 		.4byte	.LFB10
 2028 0064 1C000000 		.4byte	.LFE10-.LFB10
 2029 0068 00000000 		.4byte	.LFB11
 2030 006c 1C000000 		.4byte	.LFE11-.LFB11
 2031 0070 00000000 		.4byte	.LFB12
 2032 0074 34000000 		.4byte	.LFE12-.LFB12
 2033 0078 00000000 		.4byte	.LFB13
 2034 007c 1C000000 		.4byte	.LFE13-.LFB13
 2035 0080 00000000 		.4byte	.LFB14
 2036 0084 2C000000 		.4byte	.LFE14-.LFB14
 2037 0088 00000000 		.4byte	.LFB15
 2038 008c 40000000 		.4byte	.LFE15-.LFB15
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc2leDoT.s 			page 57


 2039 0090 00000000 		.4byte	.LFB16
 2040 0094 28000000 		.4byte	.LFE16-.LFB16
 2041 0098 00000000 		.4byte	.LFB17
 2042 009c 44000000 		.4byte	.LFE17-.LFB17
 2043 00a0 00000000 		.4byte	.LFB18
 2044 00a4 3A000000 		.4byte	.LFE18-.LFB18
 2045 00a8 00000000 		.4byte	.LFB19
 2046 00ac 60000000 		.4byte	.LFE19-.LFB19
 2047 00b0 00000000 		.4byte	.LFB20
 2048 00b4 10000000 		.4byte	.LFE20-.LFB20
 2049 00b8 00000000 		.4byte	.LFB21
 2050 00bc 10000000 		.4byte	.LFE21-.LFB21
 2051 00c0 00000000 		.4byte	.LFB22
 2052 00c4 30000000 		.4byte	.LFE22-.LFB22
 2053 00c8 00000000 		.4byte	.LFB23
 2054 00cc 34000000 		.4byte	.LFE23-.LFB23
 2055 00d0 00000000 		.4byte	0
 2056 00d4 00000000 		.4byte	0
 2057              		.section	.debug_ranges,"",%progbits
 2058              	.Ldebug_ranges0:
 2059 0000 00000000 		.4byte	.LFB0
 2060 0004 34000000 		.4byte	.LFE0
 2061 0008 00000000 		.4byte	.LFB1
 2062 000c 64000000 		.4byte	.LFE1
 2063 0010 00000000 		.4byte	.LFB2
 2064 0014 24000000 		.4byte	.LFE2
 2065 0018 00000000 		.4byte	.LFB3
 2066 001c 50000000 		.4byte	.LFE3
 2067 0020 00000000 		.4byte	.LFB4
 2068 0024 0C000000 		.4byte	.LFE4
 2069 0028 00000000 		.4byte	.LFB5
 2070 002c 0C000000 		.4byte	.LFE5
 2071 0030 00000000 		.4byte	.LFB6
 2072 0034 0C000000 		.4byte	.LFE6
 2073 0038 00000000 		.4byte	.LFB7
 2074 003c 0C000000 		.4byte	.LFE7
 2075 0040 00000000 		.4byte	.LFB8
 2076 0044 20000000 		.4byte	.LFE8
 2077 0048 00000000 		.4byte	.LFB9
 2078 004c 20000000 		.4byte	.LFE9
 2079 0050 00000000 		.4byte	.LFB10
 2080 0054 1C000000 		.4byte	.LFE10
 2081 0058 00000000 		.4byte	.LFB11
 2082 005c 1C000000 		.4byte	.LFE11
 2083 0060 00000000 		.4byte	.LFB12
 2084 0064 34000000 		.4byte	.LFE12
 2085 0068 00000000 		.4byte	.LFB13
 2086 006c 1C000000 		.4byte	.LFE13
 2087 0070 00000000 		.4byte	.LFB14
 2088 0074 2C000000 		.4byte	.LFE14
 2089 0078 00000000 		.4byte	.LFB15
 2090 007c 40000000 		.4byte	.LFE15
 2091 0080 00000000 		.4byte	.LFB16
 2092 0084 28000000 		.4byte	.LFE16
 2093 0088 00000000 		.4byte	.LFB17
 2094 008c 44000000 		.4byte	.LFE17
 2095 0090 00000000 		.4byte	.LFB18
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc2leDoT.s 			page 58


 2096 0094 3A000000 		.4byte	.LFE18
 2097 0098 00000000 		.4byte	.LFB19
 2098 009c 60000000 		.4byte	.LFE19
 2099 00a0 00000000 		.4byte	.LFB20
 2100 00a4 10000000 		.4byte	.LFE20
 2101 00a8 00000000 		.4byte	.LFB21
 2102 00ac 10000000 		.4byte	.LFE21
 2103 00b0 00000000 		.4byte	.LFB22
 2104 00b4 30000000 		.4byte	.LFE22
 2105 00b8 00000000 		.4byte	.LFB23
 2106 00bc 34000000 		.4byte	.LFE23
 2107 00c0 00000000 		.4byte	0
 2108 00c4 00000000 		.4byte	0
 2109              		.section	.debug_line,"",%progbits
 2110              	.Ldebug_line0:
 2111 0000 5F020000 		.section	.debug_str,"MS",%progbits,1
 2111      02004400 
 2111      00000201 
 2111      FB0E0D00 
 2111      01010101 
 2112              	.LASF44:
 2113 0000 5350495F 		.ascii	"SPI_IMU_ClearFIFO\000"
 2113      494D555F 
 2113      436C6561 
 2113      72464946 
 2113      4F00
 2114              	.LASF51:
 2115 0012 5350495F 		.ascii	"SPI_IMU_swStatusRx\000"
 2115      494D555F 
 2115      73775374 
 2115      61747573 
 2115      527800
 2116              	.LASF11:
 2117 0025 63686172 		.ascii	"char\000"
 2117      00
 2118              	.LASF52:
 2119 002a 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2119      43313120 
 2119      352E342E 
 2119      31203230 
 2119      31363036 
 2120 005d 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2120      20726576 
 2120      6973696F 
 2120      6E203233 
 2120      37373135 
 2121 0090 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2121      66756E63 
 2121      74696F6E 
 2121      2D736563 
 2121      74696F6E 
 2122              	.LASF39:
 2123 00b8 5350495F 		.ascii	"SPI_IMU_ClearTxBuffer\000"
 2123      494D555F 
 2123      436C6561 
 2123      72547842 
 2123      75666665 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc2leDoT.s 			page 59


 2124              	.LASF50:
 2125 00ce 5350495F 		.ascii	"SPI_IMU_swStatusTx\000"
 2125      494D555F 
 2125      73775374 
 2125      61747573 
 2125      547800
 2126              	.LASF33:
 2127 00e1 5350495F 		.ascii	"SPI_IMU_ReadRxData\000"
 2127      494D555F 
 2127      52656164 
 2127      52784461 
 2127      746100
 2128              	.LASF32:
 2129 00f4 74784461 		.ascii	"txData\000"
 2129      746100
 2130              	.LASF3:
 2131 00fb 73686F72 		.ascii	"short unsigned int\000"
 2131      7420756E 
 2131      7369676E 
 2131      65642069 
 2131      6E7400
 2132              	.LASF22:
 2133 010e 5350495F 		.ascii	"SPI_IMU_EnableRxInt\000"
 2133      494D555F 
 2133      456E6162 
 2133      6C655278 
 2133      496E7400 
 2134              	.LASF37:
 2135 0122 5350495F 		.ascii	"SPI_IMU_GetTxBufferSize\000"
 2135      494D555F 
 2135      47657454 
 2135      78427566 
 2135      66657253 
 2136              	.LASF49:
 2137 013a 5350495F 		.ascii	"SPI_IMU_initVar\000"
 2137      494D555F 
 2137      696E6974 
 2137      56617200 
 2138              	.LASF47:
 2139 014a 5350495F 		.ascii	"SPI_IMU_SetInterruptMode\000"
 2139      494D555F 
 2139      53657449 
 2139      6E746572 
 2139      72757074 
 2140              	.LASF9:
 2141 0163 666C6F61 		.ascii	"float\000"
 2141      7400
 2142              	.LASF36:
 2143 0169 73697A65 		.ascii	"size\000"
 2143      00
 2144              	.LASF13:
 2145 016e 72656738 		.ascii	"reg8\000"
 2145      00
 2146              	.LASF24:
 2147 0173 5350495F 		.ascii	"SPI_IMU_DisableRxInt\000"
 2147      494D555F 
 2147      44697361 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc2leDoT.s 			page 60


 2147      626C6552 
 2147      78496E74 
 2148              	.LASF12:
 2149 0188 75696E74 		.ascii	"uint8\000"
 2149      3800
 2150              	.LASF31:
 2151 018e 5350495F 		.ascii	"SPI_IMU_WriteTxData\000"
 2151      494D555F 
 2151      57726974 
 2151      65547844 
 2151      61746100 
 2152              	.LASF17:
 2153 01a2 5350495F 		.ascii	"SPI_IMU_Start\000"
 2153      494D555F 
 2153      53746172 
 2153      7400
 2154              	.LASF42:
 2155 01b0 62797465 		.ascii	"byteCount\000"
 2155      436F756E 
 2155      7400
 2156              	.LASF20:
 2157 01ba 656E6162 		.ascii	"enableInterrupts\000"
 2157      6C65496E 
 2157      74657272 
 2157      75707473 
 2157      00
 2158              	.LASF29:
 2159 01cb 5350495F 		.ascii	"SPI_IMU_ReadTxStatus\000"
 2159      494D555F 
 2159      52656164 
 2159      54785374 
 2159      61747573 
 2160              	.LASF1:
 2161 01e0 756E7369 		.ascii	"unsigned char\000"
 2161      676E6564 
 2161      20636861 
 2161      7200
 2162              	.LASF10:
 2163 01ee 646F7562 		.ascii	"double\000"
 2163      6C6500
 2164              	.LASF27:
 2165 01f5 696E7453 		.ascii	"intSrc\000"
 2165      726300
 2166              	.LASF19:
 2167 01fc 5350495F 		.ascii	"SPI_IMU_Stop\000"
 2167      494D555F 
 2167      53746F70 
 2167      00
 2168              	.LASF54:
 2169 0209 433A5C55 		.ascii	"C:\\Users\\mgnocco\\OneDrive - Fondazione Istituto "
 2169      73657273 
 2169      5C6D676E 
 2169      6F63636F 
 2169      5C4F6E65 
 2170 0239 4974616C 		.ascii	"Italiano Tecnologia\\Firmware\\Psoc5\\tooooast\\Sof"
 2170      69616E6F 
 2170      20546563 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc2leDoT.s 			page 61


 2170      6E6F6C6F 
 2170      6769615C 
 2171 0268 7448616E 		.ascii	"tHand_Pro.cydsn\000"
 2171      645F5072 
 2171      6F2E6379 
 2171      64736E00 
 2172              	.LASF40:
 2173 0278 5350495F 		.ascii	"SPI_IMU_PutArray\000"
 2173      494D555F 
 2173      50757441 
 2173      72726179 
 2173      00
 2174              	.LASF38:
 2175 0289 5350495F 		.ascii	"SPI_IMU_ClearRxBuffer\000"
 2175      494D555F 
 2175      436C6561 
 2175      72527842 
 2175      75666665 
 2176              	.LASF5:
 2177 029f 6C6F6E67 		.ascii	"long unsigned int\000"
 2177      20756E73 
 2177      69676E65 
 2177      6420696E 
 2177      7400
 2178              	.LASF8:
 2179 02b1 756E7369 		.ascii	"unsigned int\000"
 2179      676E6564 
 2179      20696E74 
 2179      00
 2180              	.LASF35:
 2181 02be 5350495F 		.ascii	"SPI_IMU_GetRxBufferSize\000"
 2181      494D555F 
 2181      47657452 
 2181      78427566 
 2181      66657253 
 2182              	.LASF34:
 2183 02d6 72784461 		.ascii	"rxData\000"
 2183      746100
 2184              	.LASF7:
 2185 02dd 6C6F6E67 		.ascii	"long long unsigned int\000"
 2185      206C6F6E 
 2185      6720756E 
 2185      7369676E 
 2185      65642069 
 2186              	.LASF46:
 2187 02f4 5350495F 		.ascii	"SPI_IMU_DisableInt\000"
 2187      494D555F 
 2187      44697361 
 2187      626C6549 
 2187      6E7400
 2188              	.LASF43:
 2189 0307 62756649 		.ascii	"bufIndex\000"
 2189      6E646578 
 2189      00
 2190              	.LASF15:
 2191 0310 73697A65 		.ascii	"sizetype\000"
 2191      74797065 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc2leDoT.s 			page 62


 2191      00
 2192              	.LASF21:
 2193 0319 5350495F 		.ascii	"SPI_IMU_EnableTxInt\000"
 2193      494D555F 
 2193      456E6162 
 2193      6C655478 
 2193      496E7400 
 2194              	.LASF6:
 2195 032d 6C6F6E67 		.ascii	"long long int\000"
 2195      206C6F6E 
 2195      6720696E 
 2195      7400
 2196              	.LASF18:
 2197 033b 5350495F 		.ascii	"SPI_IMU_Enable\000"
 2197      494D555F 
 2197      456E6162 
 2197      6C6500
 2198              	.LASF53:
 2199 034a 47656E65 		.ascii	"Generated_Source\\PSoC5\\SPI_IMU.c\000"
 2199      72617465 
 2199      645F536F 
 2199      75726365 
 2199      5C50536F 
 2200              	.LASF48:
 2201 036b 5350495F 		.ascii	"SPI_IMU_ReadStatus\000"
 2201      494D555F 
 2201      52656164 
 2201      53746174 
 2201      757300
 2202              	.LASF30:
 2203 037e 5350495F 		.ascii	"SPI_IMU_ReadRxStatus\000"
 2203      494D555F 
 2203      52656164 
 2203      52785374 
 2203      61747573 
 2204              	.LASF2:
 2205 0393 73686F72 		.ascii	"short int\000"
 2205      7420696E 
 2205      7400
 2206              	.LASF41:
 2207 039d 62756666 		.ascii	"buffer\000"
 2207      657200
 2208              	.LASF23:
 2209 03a4 5350495F 		.ascii	"SPI_IMU_DisableTxInt\000"
 2209      494D555F 
 2209      44697361 
 2209      626C6554 
 2209      78496E74 
 2210              	.LASF4:
 2211 03b9 6C6F6E67 		.ascii	"long int\000"
 2211      20696E74 
 2211      00
 2212              	.LASF28:
 2213 03c2 746D7053 		.ascii	"tmpStatus\000"
 2213      74617475 
 2213      7300
 2214              	.LASF14:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc2leDoT.s 			page 63


 2215 03cc 6C6F6E67 		.ascii	"long double\000"
 2215      20646F75 
 2215      626C6500 
 2216              	.LASF0:
 2217 03d8 7369676E 		.ascii	"signed char\000"
 2217      65642063 
 2217      68617200 
 2218              	.LASF45:
 2219 03e4 5350495F 		.ascii	"SPI_IMU_EnableInt\000"
 2219      494D555F 
 2219      456E6162 
 2219      6C65496E 
 2219      7400
 2220              	.LASF25:
 2221 03f6 5350495F 		.ascii	"SPI_IMU_SetTxInterruptMode\000"
 2221      494D555F 
 2221      53657454 
 2221      78496E74 
 2221      65727275 
 2222              	.LASF26:
 2223 0411 5350495F 		.ascii	"SPI_IMU_SetRxInterruptMode\000"
 2223      494D555F 
 2223      53657452 
 2223      78496E74 
 2223      65727275 
 2224              	.LASF16:
 2225 042c 5350495F 		.ascii	"SPI_IMU_Init\000"
 2225      494D555F 
 2225      496E6974 
 2225      00
 2226              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
