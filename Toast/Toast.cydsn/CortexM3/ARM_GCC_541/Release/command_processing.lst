ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"command_processing.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	EEPROM_ADDR
  20              		.data
  21              		.align	2
  22              		.type	EEPROM_ADDR, %object
  23              		.size	EEPROM_ADDR, 4
  24              	EEPROM_ADDR:
  25 0000 00800040 		.word	1073774592
  26              		.section	.text.commProcess,"ax",%progbits
  27              		.align	2
  28              		.global	commProcess
  29              		.thumb
  30              		.thumb_func
  31              		.type	commProcess, %function
  32              	commProcess:
  33              	.LFB64:
  34              		.file 1 "..\\src\\command_processing.c"
   1:..\src/command_processing.c **** // ----------------------------------------------------------------------------
   2:..\src/command_processing.c **** // BSD 3-Clause License
   3:..\src/command_processing.c **** 
   4:..\src/command_processing.c **** // Copyright (c) 2016, qbrobotics
   5:..\src/command_processing.c **** // Copyright (c) 2017-2020, Centro "E.Piaggio"
   6:..\src/command_processing.c **** // All rights reserved.
   7:..\src/command_processing.c **** 
   8:..\src/command_processing.c **** // Redistribution and use in source and binary forms, with or without
   9:..\src/command_processing.c **** // modification, are permitted provided that the following conditions are met:
  10:..\src/command_processing.c **** 
  11:..\src/command_processing.c **** // * Redistributions of source code must retain the above copyright notice, this
  12:..\src/command_processing.c **** //   list of conditions and the following disclaimer.
  13:..\src/command_processing.c **** 
  14:..\src/command_processing.c **** // * Redistributions in binary form must reproduce the above copyright notice,
  15:..\src/command_processing.c **** //   this list of conditions and the following disclaimer in the documentation
  16:..\src/command_processing.c **** //   and/or other materials provided with the distribution.
  17:..\src/command_processing.c **** 
  18:..\src/command_processing.c **** // * Neither the name of the copyright holder nor the names of its
  19:..\src/command_processing.c **** //   contributors may be used to endorse or promote products derived from
  20:..\src/command_processing.c **** //   this software without specific prior written permission.
  21:..\src/command_processing.c **** 
  22:..\src/command_processing.c **** // THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  23:..\src/command_processing.c **** // AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 2


  24:..\src/command_processing.c **** // IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  25:..\src/command_processing.c **** // DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  26:..\src/command_processing.c **** // FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  27:..\src/command_processing.c **** // DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  28:..\src/command_processing.c **** // SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:..\src/command_processing.c **** // CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  30:..\src/command_processing.c **** // OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  31:..\src/command_processing.c **** // OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  32:..\src/command_processing.c **** // POSSIBILITY OF SUCH DAMAGE.
  33:..\src/command_processing.c **** // ----------------------------------------------------------------------------
  34:..\src/command_processing.c **** 
  35:..\src/command_processing.c **** 
  36:..\src/command_processing.c **** /**
  37:..\src/command_processing.c **** * \file         command_processing.c
  38:..\src/command_processing.c **** *
  39:..\src/command_processing.c **** 
  40:..\src/command_processing.c **** * \brief        Command processing functions.
  41:..\src/command_processing.c **** * \date         March 20th, 2020
  42:..\src/command_processing.c **** * \author       _Centro "E.Piaggio"_
  43:..\src/command_processing.c **** * \copyright    (C) 2012-2016 qbrobotics. All rights reserved.
  44:..\src/command_processing.c **** * \copyright    (C) 2017-2020 Centro "E.Piaggio". All rights reserved.
  45:..\src/command_processing.c **** */
  46:..\src/command_processing.c **** //=================================================================     includes
  47:..\src/command_processing.c **** #include "command_processing.h"
  48:..\src/command_processing.c **** 
  49:..\src/command_processing.c **** //================================================================     variables
  50:..\src/command_processing.c **** 
  51:..\src/command_processing.c **** reg8 * EEPROM_ADDR = (reg8 *) CYDEV_EE_BASE;
  52:..\src/command_processing.c **** 
  53:..\src/command_processing.c **** //==============================================================================
  54:..\src/command_processing.c **** //                                                            RX DATA PROCESSING
  55:..\src/command_processing.c **** //==============================================================================
  56:..\src/command_processing.c **** //  This function checks for the availability of a data packet and process it:
  57:..\src/command_processing.c **** //      - Verify checksum;
  58:..\src/command_processing.c **** //      - Process commands;
  59:..\src/command_processing.c **** //==============================================================================
  60:..\src/command_processing.c **** 
  61:..\src/command_processing.c **** void commProcess(void){
  35              		.loc 1 61 0
  36              		.cfi_startproc
  37              		@ args = 0, pretend = 0, frame = 48
  38              		@ frame_needed = 1, uses_anonymous_args = 0
  39 0000 80B5     		push	{r7, lr}
  40              		.cfi_def_cfa_offset 8
  41              		.cfi_offset 7, -8
  42              		.cfi_offset 14, -4
  43 0002 8CB0     		sub	sp, sp, #48
  44              		.cfi_def_cfa_offset 56
  45 0004 00AF     		add	r7, sp, #0
  46              		.cfi_def_cfa_register 7
  62:..\src/command_processing.c **** 
  63:..\src/command_processing.c ****     uint8 CYDATA rx_cmd;
  64:..\src/command_processing.c ****     rx_cmd = g_rx.buffer[0];
  47              		.loc 1 64 0
  48 0006 E44B     		ldr	r3, .L53
  49 0008 1B78     		ldrb	r3, [r3]
  50 000a 87F82F30 		strb	r3, [r7, #47]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 3


  65:..\src/command_processing.c **** 
  66:..\src/command_processing.c **** //==========================================================     verify checksum
  67:..\src/command_processing.c **** 
  68:..\src/command_processing.c ****     if (!(LCRChecksum(g_rx.buffer, g_rx.length - 1) == g_rx.buffer[g_rx.length - 1])){
  51              		.loc 1 68 0
  52 000e E24B     		ldr	r3, .L53
  53 0010 B3F98030 		ldrsh	r3, [r3, #128]
  54 0014 DBB2     		uxtb	r3, r3
  55 0016 013B     		subs	r3, r3, #1
  56 0018 DBB2     		uxtb	r3, r3
  57 001a 1946     		mov	r1, r3
  58 001c DE48     		ldr	r0, .L53
  59 001e FFF7FEFF 		bl	LCRChecksum
  60 0022 0346     		mov	r3, r0
  61 0024 1946     		mov	r1, r3
  62 0026 DC4B     		ldr	r3, .L53
  63 0028 B3F98030 		ldrsh	r3, [r3, #128]
  64 002c 013B     		subs	r3, r3, #1
  65 002e DA4A     		ldr	r2, .L53
  66 0030 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
  67 0032 9942     		cmp	r1, r3
  68 0034 04D0     		beq	.L2
  69:..\src/command_processing.c ****         // Wrong checksum
  70:..\src/command_processing.c ****         g_rx.ready = 0;
  69              		.loc 1 70 0
  70 0036 D84B     		ldr	r3, .L53
  71 0038 0022     		movs	r2, #0
  72 003a 83F88420 		strb	r2, [r3, #132]
  71:..\src/command_processing.c ****         return;
  73              		.loc 1 71 0
  74 003e 61E2     		b	.L1
  75              	.L2:
  72:..\src/command_processing.c ****     }
  73:..\src/command_processing.c **** 
  74:..\src/command_processing.c ****     switch(rx_cmd) {
  76              		.loc 1 74 0
  77 0040 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
  78 0044 A82B     		cmp	r3, #168
  79 0046 00F25C82 		bhi	.L52
  80 004a 01A2     		adr	r2, .L6
  81 004c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
  82              		.p2align 2
  83              	.L6:
  84 0050 79030000 		.word	.L5+1
  85 0054 5B030000 		.word	.L7+1
  86 0058 03050000 		.word	.L52+1
  87 005c 7F030000 		.word	.L8+1
  88 0060 85030000 		.word	.L9+1
  89 0064 A9030000 		.word	.L10+1
  90 0068 43030000 		.word	.L11+1
  91 006c 03050000 		.word	.L52+1
  92 0070 03050000 		.word	.L52+1
  93 0074 DD030000 		.word	.L12+1
  94 0078 C3030000 		.word	.L13+1
  95 007c 03050000 		.word	.L52+1
  96 0080 61030000 		.word	.L14+1
  97 0084 FF030000 		.word	.L15+1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 4


  98 0088 03050000 		.word	.L52+1
  99 008c 03050000 		.word	.L52+1
 100 0090 03050000 		.word	.L52+1
 101 0094 03050000 		.word	.L52+1
 102 0098 03050000 		.word	.L52+1
 103 009c 03050000 		.word	.L52+1
 104 00a0 03050000 		.word	.L52+1
 105 00a4 03050000 		.word	.L52+1
 106 00a8 03050000 		.word	.L52+1
 107 00ac 03050000 		.word	.L52+1
 108 00b0 03050000 		.word	.L52+1
 109 00b4 03050000 		.word	.L52+1
 110 00b8 03050000 		.word	.L52+1
 111 00bc 03050000 		.word	.L52+1
 112 00c0 03050000 		.word	.L52+1
 113 00c4 03050000 		.word	.L52+1
 114 00c8 03050000 		.word	.L52+1
 115 00cc 03050000 		.word	.L52+1
 116 00d0 03050000 		.word	.L52+1
 117 00d4 03050000 		.word	.L52+1
 118 00d8 03050000 		.word	.L52+1
 119 00dc 03050000 		.word	.L52+1
 120 00e0 03050000 		.word	.L52+1
 121 00e4 03050000 		.word	.L52+1
 122 00e8 03050000 		.word	.L52+1
 123 00ec 03050000 		.word	.L52+1
 124 00f0 03050000 		.word	.L52+1
 125 00f4 03050000 		.word	.L52+1
 126 00f8 03050000 		.word	.L52+1
 127 00fc 03050000 		.word	.L52+1
 128 0100 03050000 		.word	.L52+1
 129 0104 03050000 		.word	.L52+1
 130 0108 03050000 		.word	.L52+1
 131 010c 03050000 		.word	.L52+1
 132 0110 03050000 		.word	.L52+1
 133 0114 03050000 		.word	.L52+1
 134 0118 03050000 		.word	.L52+1
 135 011c 03050000 		.word	.L52+1
 136 0120 03050000 		.word	.L52+1
 137 0124 03050000 		.word	.L52+1
 138 0128 03050000 		.word	.L52+1
 139 012c 03050000 		.word	.L52+1
 140 0130 03050000 		.word	.L52+1
 141 0134 03050000 		.word	.L52+1
 142 0138 03050000 		.word	.L52+1
 143 013c 03050000 		.word	.L52+1
 144 0140 03050000 		.word	.L52+1
 145 0144 03050000 		.word	.L52+1
 146 0148 03050000 		.word	.L52+1
 147 014c 03050000 		.word	.L52+1
 148 0150 03050000 		.word	.L52+1
 149 0154 03050000 		.word	.L52+1
 150 0158 03050000 		.word	.L52+1
 151 015c 03050000 		.word	.L52+1
 152 0160 03050000 		.word	.L52+1
 153 0164 03050000 		.word	.L52+1
 154 0168 03050000 		.word	.L52+1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 5


 155 016c 03050000 		.word	.L52+1
 156 0170 03050000 		.word	.L52+1
 157 0174 03050000 		.word	.L52+1
 158 0178 03050000 		.word	.L52+1
 159 017c 03050000 		.word	.L52+1
 160 0180 03050000 		.word	.L52+1
 161 0184 03050000 		.word	.L52+1
 162 0188 03050000 		.word	.L52+1
 163 018c 03050000 		.word	.L52+1
 164 0190 03050000 		.word	.L52+1
 165 0194 03050000 		.word	.L52+1
 166 0198 03050000 		.word	.L52+1
 167 019c 03050000 		.word	.L52+1
 168 01a0 03050000 		.word	.L52+1
 169 01a4 03050000 		.word	.L52+1
 170 01a8 03050000 		.word	.L52+1
 171 01ac 03050000 		.word	.L52+1
 172 01b0 03050000 		.word	.L52+1
 173 01b4 03050000 		.word	.L52+1
 174 01b8 03050000 		.word	.L52+1
 175 01bc 03050000 		.word	.L52+1
 176 01c0 03050000 		.word	.L52+1
 177 01c4 03050000 		.word	.L52+1
 178 01c8 03050000 		.word	.L52+1
 179 01cc 03050000 		.word	.L52+1
 180 01d0 03050000 		.word	.L52+1
 181 01d4 03050000 		.word	.L52+1
 182 01d8 03050000 		.word	.L52+1
 183 01dc 03050000 		.word	.L52+1
 184 01e0 03050000 		.word	.L52+1
 185 01e4 03050000 		.word	.L52+1
 186 01e8 03050000 		.word	.L52+1
 187 01ec 03050000 		.word	.L52+1
 188 01f0 03050000 		.word	.L52+1
 189 01f4 03050000 		.word	.L52+1
 190 01f8 03050000 		.word	.L52+1
 191 01fc 03050000 		.word	.L52+1
 192 0200 03050000 		.word	.L52+1
 193 0204 03050000 		.word	.L52+1
 194 0208 03050000 		.word	.L52+1
 195 020c 03050000 		.word	.L52+1
 196 0210 03050000 		.word	.L52+1
 197 0214 03050000 		.word	.L52+1
 198 0218 03050000 		.word	.L52+1
 199 021c 03050000 		.word	.L52+1
 200 0220 03050000 		.word	.L52+1
 201 0224 03050000 		.word	.L52+1
 202 0228 03050000 		.word	.L52+1
 203 022c 03050000 		.word	.L52+1
 204 0230 03050000 		.word	.L52+1
 205 0234 03050000 		.word	.L52+1
 206 0238 03050000 		.word	.L52+1
 207 023c 03050000 		.word	.L52+1
 208 0240 03050000 		.word	.L52+1
 209 0244 03050000 		.word	.L52+1
 210 0248 03050000 		.word	.L52+1
 211 024c 03050000 		.word	.L52+1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 6


 212 0250 F5020000 		.word	.L16+1
 213 0254 31030000 		.word	.L17+1
 214 0258 FB020000 		.word	.L18+1
 215 025c 3D030000 		.word	.L19+1
 216 0260 01030000 		.word	.L20+1
 217 0264 0D030000 		.word	.L21+1
 218 0268 07030000 		.word	.L22+1
 219 026c 03050000 		.word	.L52+1
 220 0270 2B030000 		.word	.L23+1
 221 0274 19030000 		.word	.L24+1
 222 0278 03050000 		.word	.L52+1
 223 027c 1F030000 		.word	.L25+1
 224 0280 13030000 		.word	.L26+1
 225 0284 03050000 		.word	.L52+1
 226 0288 03050000 		.word	.L52+1
 227 028c 03050000 		.word	.L52+1
 228 0290 37030000 		.word	.L27+1
 229 0294 03050000 		.word	.L52+1
 230 0298 25030000 		.word	.L28+1
 231 029c 03050000 		.word	.L52+1
 232 02a0 03050000 		.word	.L52+1
 233 02a4 03050000 		.word	.L52+1
 234 02a8 03050000 		.word	.L52+1
 235 02ac 03050000 		.word	.L52+1
 236 02b0 03050000 		.word	.L52+1
 237 02b4 03050000 		.word	.L52+1
 238 02b8 03050000 		.word	.L52+1
 239 02bc 03050000 		.word	.L52+1
 240 02c0 03050000 		.word	.L52+1
 241 02c4 03050000 		.word	.L52+1
 242 02c8 03050000 		.word	.L52+1
 243 02cc 03050000 		.word	.L52+1
 244 02d0 03050000 		.word	.L52+1
 245 02d4 9D040000 		.word	.L29+1
 246 02d8 A3040000 		.word	.L30+1
 247 02dc BB040000 		.word	.L31+1
 248 02e0 C1040000 		.word	.L32+1
 249 02e4 C7040000 		.word	.L33+1
 250 02e8 CD040000 		.word	.L34+1
 251 02ec D3040000 		.word	.L35+1
 252 02f0 EB040000 		.word	.L36+1
 253              		.p2align 1
 254              	.L16:
  75:..\src/command_processing.c **** 
  76:..\src/command_processing.c **** //=============================================================     CMD_ACTIVATE
  77:..\src/command_processing.c ****         case CMD_ACTIVATE:
  78:..\src/command_processing.c ****             cmd_activate();
 255              		.loc 1 78 0
 256 02f4 FFF7FEFF 		bl	cmd_activate
  79:..\src/command_processing.c ****             break;
 257              		.loc 1 79 0
 258 02f8 04E1     		b	.L1
 259              	.L18:
  80:..\src/command_processing.c **** 
  81:..\src/command_processing.c **** //===========================================================     CMD_SET_INPUTS
  82:..\src/command_processing.c **** 
  83:..\src/command_processing.c ****         case CMD_SET_INPUTS:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 7


  84:..\src/command_processing.c ****             cmd_set_inputs();
 260              		.loc 1 84 0
 261 02fa FFF7FEFF 		bl	cmd_set_inputs
  85:..\src/command_processing.c ****             break;
 262              		.loc 1 85 0
 263 02fe 01E1     		b	.L1
 264              	.L20:
  86:..\src/command_processing.c **** 
  87:..\src/command_processing.c **** //=====================================================     CMD_GET_MEASUREMENTS
  88:..\src/command_processing.c **** 
  89:..\src/command_processing.c ****         case CMD_GET_MEASUREMENTS:
  90:..\src/command_processing.c ****             cmd_get_measurements();
 265              		.loc 1 90 0
 266 0300 FFF7FEFF 		bl	cmd_get_measurements
  91:..\src/command_processing.c ****             break;
 267              		.loc 1 91 0
 268 0304 FEE0     		b	.L1
 269              	.L22:
  92:..\src/command_processing.c **** 
  93:..\src/command_processing.c **** //=====================================================     CMD_GET_CURR_AND_MEAS
  94:..\src/command_processing.c **** 
  95:..\src/command_processing.c ****         case CMD_GET_CURR_AND_MEAS:
  96:..\src/command_processing.c ****             cmd_get_curr_and_meas();
 270              		.loc 1 96 0
 271 0306 FFF7FEFF 		bl	cmd_get_curr_and_meas
  97:..\src/command_processing.c ****             break;
 272              		.loc 1 97 0
 273 030a FBE0     		b	.L1
 274              	.L21:
  98:..\src/command_processing.c ****             
  99:..\src/command_processing.c **** //=========================================================     CMD_GET_CURRENTS
 100:..\src/command_processing.c **** 
 101:..\src/command_processing.c ****         case CMD_GET_CURRENTS:
 102:..\src/command_processing.c ****             cmd_get_currents();
 275              		.loc 1 102 0
 276 030c FFF7FEFF 		bl	cmd_get_currents
 103:..\src/command_processing.c ****             break;
 277              		.loc 1 103 0
 278 0310 F8E0     		b	.L1
 279              	.L26:
 104:..\src/command_processing.c **** 
 105:..\src/command_processing.c **** //=========================================================     CMD_GET_CURR_DIFF
 106:..\src/command_processing.c ****          
 107:..\src/command_processing.c ****         case CMD_GET_CURR_DIFF:
 108:..\src/command_processing.c ****             cmd_get_currents_for_cuff();
 280              		.loc 1 108 0
 281 0312 FFF7FEFF 		bl	cmd_get_currents_for_cuff
 109:..\src/command_processing.c ****             break;
 282              		.loc 1 109 0
 283 0316 F5E0     		b	.L1
 284              	.L24:
 110:..\src/command_processing.c ****             
 111:..\src/command_processing.c **** //=========================================================     CMD_GET_CURR_DIFF
 112:..\src/command_processing.c ****         
 113:..\src/command_processing.c ****         case CMD_GET_VELOCITIES:
 114:..\src/command_processing.c ****             cmd_get_velocities();
 285              		.loc 1 114 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 8


 286 0318 FFF7FEFF 		bl	cmd_get_velocities
 115:..\src/command_processing.c ****             break;
 287              		.loc 1 115 0
 288 031c F2E0     		b	.L1
 289              	.L25:
 116:..\src/command_processing.c ****             
 117:..\src/command_processing.c **** //=========================================================     CMD_GET_CURR_DIFF
 118:..\src/command_processing.c **** 
 119:..\src/command_processing.c ****         case CMD_GET_ACCEL:
 120:..\src/command_processing.c ****             cmd_get_accelerations();
 290              		.loc 1 120 0
 291 031e FFF7FEFF 		bl	cmd_get_accelerations
 121:..\src/command_processing.c ****             break;
 292              		.loc 1 121 0
 293 0322 EFE0     		b	.L1
 294              	.L28:
 122:..\src/command_processing.c **** 
 123:..\src/command_processing.c **** //=========================================================     CMD_GET_JOYSTICK
 124:..\src/command_processing.c **** 
 125:..\src/command_processing.c ****         case CMD_GET_JOYSTICK:
 126:..\src/command_processing.c ****             cmd_get_joystick();
 295              		.loc 1 126 0
 296 0324 FFF7FEFF 		bl	cmd_get_joystick
 127:..\src/command_processing.c ****         break;
 297              		.loc 1 127 0
 298 0328 ECE0     		b	.L1
 299              	.L23:
 128:..\src/command_processing.c ****             
 129:..\src/command_processing.c **** //=========================================================     CMD_GET_EMG
 130:..\src/command_processing.c **** 
 131:..\src/command_processing.c ****         case CMD_GET_EMG:
 132:..\src/command_processing.c ****             cmd_get_emg();
 300              		.loc 1 132 0
 301 032a FFF7FEFF 		bl	cmd_get_emg
 133:..\src/command_processing.c ****             break;
 302              		.loc 1 133 0
 303 032e E9E0     		b	.L1
 304              	.L17:
 134:..\src/command_processing.c ****             
 135:..\src/command_processing.c **** //=========================================================     CMD_GET_ACTIVATE
 136:..\src/command_processing.c ****             
 137:..\src/command_processing.c ****         case CMD_GET_ACTIVATE:
 138:..\src/command_processing.c ****             cmd_get_activate();
 305              		.loc 1 138 0
 306 0330 FFF7FEFF 		bl	cmd_get_activate
 139:..\src/command_processing.c ****             break;
 307              		.loc 1 139 0
 308 0334 E6E0     		b	.L1
 309              	.L27:
 140:..\src/command_processing.c ****             
 141:..\src/command_processing.c **** //=========================================================     CMD_SET_BAUDRATE
 142:..\src/command_processing.c ****             
 143:..\src/command_processing.c ****         case CMD_SET_BAUDRATE:
 144:..\src/command_processing.c ****             cmd_set_baudrate();
 310              		.loc 1 144 0
 311 0336 FFF7FEFF 		bl	cmd_set_baudrate
 145:..\src/command_processing.c ****             break;  
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 9


 312              		.loc 1 145 0
 313 033a E3E0     		b	.L1
 314              	.L19:
 146:..\src/command_processing.c ****             
 147:..\src/command_processing.c **** //============================================================     CMD_GET_INPUT
 148:..\src/command_processing.c **** 
 149:..\src/command_processing.c ****         case CMD_GET_INPUTS:
 150:..\src/command_processing.c ****             cmd_get_inputs();
 315              		.loc 1 150 0
 316 033c FFF7FEFF 		bl	cmd_get_inputs
 151:..\src/command_processing.c ****             break;
 317              		.loc 1 151 0
 318 0340 E0E0     		b	.L1
 319              	.L11:
 152:..\src/command_processing.c **** 
 153:..\src/command_processing.c **** //=============================================================     CMD_GET_INFO
 154:..\src/command_processing.c **** 
 155:..\src/command_processing.c ****         case CMD_GET_INFO:
 156:..\src/command_processing.c ****             infoGet(  __REV16(*((uint16 *) &g_rx.buffer[1])) );
 320              		.loc 1 156 0
 321 0342 164B     		ldr	r3, .L53+4
 322 0344 1B88     		ldrh	r3, [r3]
 323 0346 BB61     		str	r3, [r7, #24]
 324              	.LBB12:
 325              	.LBB13:
 326              		.file 2 "Generated_Source\\PSoC5/cmsis_gcc.h"
   1:Generated_Source\PSoC5/cmsis_gcc.h **** /**************************************************************************//**
   2:Generated_Source\PSoC5/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Generated_Source\PSoC5/cmsis_gcc.h ****  * @brief    CMSIS Cortex-M Core Function/Instruction Header File
   4:Generated_Source\PSoC5/cmsis_gcc.h ****  * @version  V5.00
   5:Generated_Source\PSoC5/cmsis_gcc.h ****  * @date     28. October 2016
   6:Generated_Source\PSoC5/cmsis_gcc.h ****  ******************************************************************************/
   7:Generated_Source\PSoC5/cmsis_gcc.h **** /*
   8:Generated_Source\PSoC5/cmsis_gcc.h ****  * Copyright (c) 2009-2016 ARM Limited. All rights reserved.
   9:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  10:Generated_Source\PSoC5/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  12:Generated_Source\PSoC5/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Generated_Source\PSoC5/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Generated_Source\PSoC5/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  16:Generated_Source\PSoC5/cmsis_gcc.h ****  * http://www.apache.org/licenses/LICENSE-2.0
  17:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  18:Generated_Source\PSoC5/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Generated_Source\PSoC5/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Generated_Source\PSoC5/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Generated_Source\PSoC5/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Generated_Source\PSoC5/cmsis_gcc.h ****  * limitations under the License.
  23:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  24:Generated_Source\PSoC5/cmsis_gcc.h **** 
  25:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Generated_Source\PSoC5/cmsis_gcc.h **** 
  28:Generated_Source\PSoC5/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 10


  32:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Generated_Source\PSoC5/cmsis_gcc.h **** 
  34:Generated_Source\PSoC5/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  35:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __ASM
  36:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __ASM                     __asm
  37:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  38:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __INLINE
  39:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __INLINE                  inline
  40:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  41:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  42:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __STATIC_INLINE           static inline
  43:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  44:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __NO_RETURN
  45:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __NO_RETURN               __attribute__((noreturn))
  46:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  47:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __USED
  48:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __USED                    __attribute__((used))
  49:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  50:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   _WEAK
  51:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __WEAK                    __attribute__((weak))
  52:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  53:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32
  54:Generated_Source\PSoC5/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  55:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)     (((struct T_UINT32 *)(x))->v)
  56:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  57:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __ALIGNED
  58:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __ALIGNED(x)              __attribute__((aligned(x)))
  59:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  60:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __PACKED
  61:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __PACKED                  __attribute__((packed, aligned(1)))
  62:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  63:Generated_Source\PSoC5/cmsis_gcc.h **** 
  64:Generated_Source\PSoC5/cmsis_gcc.h **** 
  65:Generated_Source\PSoC5/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  66:Generated_Source\PSoC5/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  67:Generated_Source\PSoC5/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  68:Generated_Source\PSoC5/cmsis_gcc.h ****   @{
  69:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  70:Generated_Source\PSoC5/cmsis_gcc.h **** 
  71:Generated_Source\PSoC5/cmsis_gcc.h **** /**
  72:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  73:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  74:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  75:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  76:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __enable_irq(void)
  77:Generated_Source\PSoC5/cmsis_gcc.h **** {
  78:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  79:Generated_Source\PSoC5/cmsis_gcc.h **** }
  80:Generated_Source\PSoC5/cmsis_gcc.h **** 
  81:Generated_Source\PSoC5/cmsis_gcc.h **** 
  82:Generated_Source\PSoC5/cmsis_gcc.h **** /**
  83:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  84:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  85:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  86:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  87:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __disable_irq(void)
  88:Generated_Source\PSoC5/cmsis_gcc.h **** {
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 11


  89:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  90:Generated_Source\PSoC5/cmsis_gcc.h **** }
  91:Generated_Source\PSoC5/cmsis_gcc.h **** 
  92:Generated_Source\PSoC5/cmsis_gcc.h **** 
  93:Generated_Source\PSoC5/cmsis_gcc.h **** /**
  94:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Control Register
  95:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the Control Register.
  96:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Control Register value
  97:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  98:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_CONTROL(void)
  99:Generated_Source\PSoC5/cmsis_gcc.h **** {
 100:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 101:Generated_Source\PSoC5/cmsis_gcc.h **** 
 102:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 103:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 104:Generated_Source\PSoC5/cmsis_gcc.h **** }
 105:Generated_Source\PSoC5/cmsis_gcc.h **** 
 106:Generated_Source\PSoC5/cmsis_gcc.h **** 
 107:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 108:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 109:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 110:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 111:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               non-secure Control Register value
 112:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 113:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_CONTROL_NS(void)
 114:Generated_Source\PSoC5/cmsis_gcc.h **** {
 115:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 116:Generated_Source\PSoC5/cmsis_gcc.h **** 
 117:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 118:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 119:Generated_Source\PSoC5/cmsis_gcc.h **** }
 120:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 121:Generated_Source\PSoC5/cmsis_gcc.h **** 
 122:Generated_Source\PSoC5/cmsis_gcc.h **** 
 123:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 124:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Control Register
 125:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 126:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 127:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 128:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_CONTROL(uint32_t control)
 129:Generated_Source\PSoC5/cmsis_gcc.h **** {
 130:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 131:Generated_Source\PSoC5/cmsis_gcc.h **** }
 132:Generated_Source\PSoC5/cmsis_gcc.h **** 
 133:Generated_Source\PSoC5/cmsis_gcc.h **** 
 134:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 135:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 136:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 137:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 138:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 139:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 140:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_CONTROL_NS(uint32_t control)
 141:Generated_Source\PSoC5/cmsis_gcc.h **** {
 142:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 143:Generated_Source\PSoC5/cmsis_gcc.h **** }
 144:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 145:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 12


 146:Generated_Source\PSoC5/cmsis_gcc.h **** 
 147:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 148:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get IPSR Register
 149:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 150:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               IPSR Register value
 151:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 152:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_IPSR(void)
 153:Generated_Source\PSoC5/cmsis_gcc.h **** {
 154:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 155:Generated_Source\PSoC5/cmsis_gcc.h **** 
 156:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 157:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 158:Generated_Source\PSoC5/cmsis_gcc.h **** }
 159:Generated_Source\PSoC5/cmsis_gcc.h **** 
 160:Generated_Source\PSoC5/cmsis_gcc.h **** 
 161:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 162:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get APSR Register
 163:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 164:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               APSR Register value
 165:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 166:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_APSR(void)
 167:Generated_Source\PSoC5/cmsis_gcc.h **** {
 168:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 169:Generated_Source\PSoC5/cmsis_gcc.h **** 
 170:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 171:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 172:Generated_Source\PSoC5/cmsis_gcc.h **** }
 173:Generated_Source\PSoC5/cmsis_gcc.h **** 
 174:Generated_Source\PSoC5/cmsis_gcc.h **** 
 175:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 176:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get xPSR Register
 177:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 178:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               xPSR Register value
 179:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 180:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_xPSR(void)
 181:Generated_Source\PSoC5/cmsis_gcc.h **** {
 182:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 183:Generated_Source\PSoC5/cmsis_gcc.h **** 
 184:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 185:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 186:Generated_Source\PSoC5/cmsis_gcc.h **** }
 187:Generated_Source\PSoC5/cmsis_gcc.h **** 
 188:Generated_Source\PSoC5/cmsis_gcc.h **** 
 189:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 190:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 191:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 192:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSP Register value
 193:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 194:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PSP(void)
 195:Generated_Source\PSoC5/cmsis_gcc.h **** {
 196:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 197:Generated_Source\PSoC5/cmsis_gcc.h **** 
 198:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 199:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 200:Generated_Source\PSoC5/cmsis_gcc.h **** }
 201:Generated_Source\PSoC5/cmsis_gcc.h **** 
 202:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 13


 203:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 204:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 205:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 206:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 207:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSP Register value
 208:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 209:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PSP_NS(void)
 210:Generated_Source\PSoC5/cmsis_gcc.h **** {
 211:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 212:Generated_Source\PSoC5/cmsis_gcc.h **** 
 213:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 214:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 215:Generated_Source\PSoC5/cmsis_gcc.h **** }
 216:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 217:Generated_Source\PSoC5/cmsis_gcc.h **** 
 218:Generated_Source\PSoC5/cmsis_gcc.h **** 
 219:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 220:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 221:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 222:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 223:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 224:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 225:Generated_Source\PSoC5/cmsis_gcc.h **** {
 226:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : "sp");
 227:Generated_Source\PSoC5/cmsis_gcc.h **** }
 228:Generated_Source\PSoC5/cmsis_gcc.h **** 
 229:Generated_Source\PSoC5/cmsis_gcc.h **** 
 230:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 231:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 232:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 233:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 234:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 235:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 236:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 237:Generated_Source\PSoC5/cmsis_gcc.h **** {
 238:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : "sp");
 239:Generated_Source\PSoC5/cmsis_gcc.h **** }
 240:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 241:Generated_Source\PSoC5/cmsis_gcc.h **** 
 242:Generated_Source\PSoC5/cmsis_gcc.h **** 
 243:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 244:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 245:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 246:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSP Register value
 247:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 248:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_MSP(void)
 249:Generated_Source\PSoC5/cmsis_gcc.h **** {
 250:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 251:Generated_Source\PSoC5/cmsis_gcc.h **** 
 252:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 253:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 254:Generated_Source\PSoC5/cmsis_gcc.h **** }
 255:Generated_Source\PSoC5/cmsis_gcc.h **** 
 256:Generated_Source\PSoC5/cmsis_gcc.h **** 
 257:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 258:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 259:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 14


 260:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 261:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSP Register value
 262:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 263:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_MSP_NS(void)
 264:Generated_Source\PSoC5/cmsis_gcc.h **** {
 265:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 266:Generated_Source\PSoC5/cmsis_gcc.h **** 
 267:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 268:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 269:Generated_Source\PSoC5/cmsis_gcc.h **** }
 270:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 271:Generated_Source\PSoC5/cmsis_gcc.h **** 
 272:Generated_Source\PSoC5/cmsis_gcc.h **** 
 273:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 274:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 275:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 276:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 277:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 278:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 279:Generated_Source\PSoC5/cmsis_gcc.h **** {
 280:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : "sp");
 281:Generated_Source\PSoC5/cmsis_gcc.h **** }
 282:Generated_Source\PSoC5/cmsis_gcc.h **** 
 283:Generated_Source\PSoC5/cmsis_gcc.h **** 
 284:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 285:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 286:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 287:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 288:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 289:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 290:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 291:Generated_Source\PSoC5/cmsis_gcc.h **** {
 292:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : "sp");
 293:Generated_Source\PSoC5/cmsis_gcc.h **** }
 294:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 295:Generated_Source\PSoC5/cmsis_gcc.h **** 
 296:Generated_Source\PSoC5/cmsis_gcc.h **** 
 297:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 298:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Priority Mask
 299:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 300:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Priority Mask value
 301:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 302:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 303:Generated_Source\PSoC5/cmsis_gcc.h **** {
 304:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 305:Generated_Source\PSoC5/cmsis_gcc.h **** 
 306:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 307:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 308:Generated_Source\PSoC5/cmsis_gcc.h **** }
 309:Generated_Source\PSoC5/cmsis_gcc.h **** 
 310:Generated_Source\PSoC5/cmsis_gcc.h **** 
 311:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 312:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 313:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 314:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 315:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Priority Mask value
 316:Generated_Source\PSoC5/cmsis_gcc.h ****  */
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 15


 317:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PRIMASK_NS(void)
 318:Generated_Source\PSoC5/cmsis_gcc.h **** {
 319:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 320:Generated_Source\PSoC5/cmsis_gcc.h **** 
 321:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) );
 322:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 323:Generated_Source\PSoC5/cmsis_gcc.h **** }
 324:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 325:Generated_Source\PSoC5/cmsis_gcc.h **** 
 326:Generated_Source\PSoC5/cmsis_gcc.h **** 
 327:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 328:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Priority Mask
 329:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 330:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 331:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 332:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 333:Generated_Source\PSoC5/cmsis_gcc.h **** {
 334:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 335:Generated_Source\PSoC5/cmsis_gcc.h **** }
 336:Generated_Source\PSoC5/cmsis_gcc.h **** 
 337:Generated_Source\PSoC5/cmsis_gcc.h **** 
 338:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 339:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 340:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 341:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 342:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 343:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 344:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 345:Generated_Source\PSoC5/cmsis_gcc.h **** {
 346:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 347:Generated_Source\PSoC5/cmsis_gcc.h **** }
 348:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 349:Generated_Source\PSoC5/cmsis_gcc.h **** 
 350:Generated_Source\PSoC5/cmsis_gcc.h **** 
 351:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 352:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 353:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 354:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 355:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Enable FIQ
 356:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 357:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 358:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 359:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __enable_fault_irq(void)
 360:Generated_Source\PSoC5/cmsis_gcc.h **** {
 361:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 362:Generated_Source\PSoC5/cmsis_gcc.h **** }
 363:Generated_Source\PSoC5/cmsis_gcc.h **** 
 364:Generated_Source\PSoC5/cmsis_gcc.h **** 
 365:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 366:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Disable FIQ
 367:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 368:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 369:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 370:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __disable_fault_irq(void)
 371:Generated_Source\PSoC5/cmsis_gcc.h **** {
 372:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 373:Generated_Source\PSoC5/cmsis_gcc.h **** }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 16


 374:Generated_Source\PSoC5/cmsis_gcc.h **** 
 375:Generated_Source\PSoC5/cmsis_gcc.h **** 
 376:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 377:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Base Priority
 378:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 379:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Base Priority register value
 380:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 381:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_BASEPRI(void)
 382:Generated_Source\PSoC5/cmsis_gcc.h **** {
 383:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 384:Generated_Source\PSoC5/cmsis_gcc.h **** 
 385:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 386:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 387:Generated_Source\PSoC5/cmsis_gcc.h **** }
 388:Generated_Source\PSoC5/cmsis_gcc.h **** 
 389:Generated_Source\PSoC5/cmsis_gcc.h **** 
 390:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 391:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 392:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 393:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 394:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Base Priority register value
 395:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 396:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_BASEPRI_NS(void)
 397:Generated_Source\PSoC5/cmsis_gcc.h **** {
 398:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 399:Generated_Source\PSoC5/cmsis_gcc.h **** 
 400:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 401:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 402:Generated_Source\PSoC5/cmsis_gcc.h **** }
 403:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 404:Generated_Source\PSoC5/cmsis_gcc.h **** 
 405:Generated_Source\PSoC5/cmsis_gcc.h **** 
 406:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 407:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Base Priority
 408:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 409:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 410:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 411:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_BASEPRI(uint32_t basePri)
 412:Generated_Source\PSoC5/cmsis_gcc.h **** {
 413:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 414:Generated_Source\PSoC5/cmsis_gcc.h **** }
 415:Generated_Source\PSoC5/cmsis_gcc.h **** 
 416:Generated_Source\PSoC5/cmsis_gcc.h **** 
 417:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 418:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 419:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 420:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 421:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 422:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 423:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 424:Generated_Source\PSoC5/cmsis_gcc.h **** {
 425:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 426:Generated_Source\PSoC5/cmsis_gcc.h **** }
 427:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 428:Generated_Source\PSoC5/cmsis_gcc.h **** 
 429:Generated_Source\PSoC5/cmsis_gcc.h **** 
 430:Generated_Source\PSoC5/cmsis_gcc.h **** /**
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 17


 431:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 432:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 433:Generated_Source\PSoC5/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 434:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 435:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 436:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_BASEPRI_MAX(uint32_t basePri)
 437:Generated_Source\PSoC5/cmsis_gcc.h **** {
 438:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 439:Generated_Source\PSoC5/cmsis_gcc.h **** }
 440:Generated_Source\PSoC5/cmsis_gcc.h **** 
 441:Generated_Source\PSoC5/cmsis_gcc.h **** 
 442:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 443:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Fault Mask
 444:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 445:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Fault Mask register value
 446:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 447:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_FAULTMASK(void)
 448:Generated_Source\PSoC5/cmsis_gcc.h **** {
 449:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 450:Generated_Source\PSoC5/cmsis_gcc.h **** 
 451:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 452:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 453:Generated_Source\PSoC5/cmsis_gcc.h **** }
 454:Generated_Source\PSoC5/cmsis_gcc.h **** 
 455:Generated_Source\PSoC5/cmsis_gcc.h **** 
 456:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 457:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 458:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 459:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 460:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Fault Mask register value
 461:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 462:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 463:Generated_Source\PSoC5/cmsis_gcc.h **** {
 464:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 465:Generated_Source\PSoC5/cmsis_gcc.h **** 
 466:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 467:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 468:Generated_Source\PSoC5/cmsis_gcc.h **** }
 469:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 470:Generated_Source\PSoC5/cmsis_gcc.h **** 
 471:Generated_Source\PSoC5/cmsis_gcc.h **** 
 472:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 473:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Fault Mask
 474:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 475:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 476:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 477:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 478:Generated_Source\PSoC5/cmsis_gcc.h **** {
 479:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 480:Generated_Source\PSoC5/cmsis_gcc.h **** }
 481:Generated_Source\PSoC5/cmsis_gcc.h **** 
 482:Generated_Source\PSoC5/cmsis_gcc.h **** 
 483:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 484:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 485:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 486:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 487:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 18


 488:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 489:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 490:Generated_Source\PSoC5/cmsis_gcc.h **** {
 491:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 492:Generated_Source\PSoC5/cmsis_gcc.h **** }
 493:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 494:Generated_Source\PSoC5/cmsis_gcc.h **** 
 495:Generated_Source\PSoC5/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 496:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 497:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 498:Generated_Source\PSoC5/cmsis_gcc.h **** 
 499:Generated_Source\PSoC5/cmsis_gcc.h **** 
 500:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1U)) || \
 501:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1U))    )
 502:Generated_Source\PSoC5/cmsis_gcc.h **** 
 503:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 504:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 505:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 506:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSPLIM Register value
 507:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 508:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PSPLIM(void)
 509:Generated_Source\PSoC5/cmsis_gcc.h **** {
 510:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 511:Generated_Source\PSoC5/cmsis_gcc.h **** 
 512:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 513:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 514:Generated_Source\PSoC5/cmsis_gcc.h **** }
 515:Generated_Source\PSoC5/cmsis_gcc.h **** 
 516:Generated_Source\PSoC5/cmsis_gcc.h **** 
 517:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 518:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 519:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 520:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 521:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 522:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSPLIM Register value
 523:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 524:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PSPLIM_NS(void)
 525:Generated_Source\PSoC5/cmsis_gcc.h **** {
 526:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 527:Generated_Source\PSoC5/cmsis_gcc.h **** 
 528:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 529:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 530:Generated_Source\PSoC5/cmsis_gcc.h **** }
 531:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 532:Generated_Source\PSoC5/cmsis_gcc.h **** 
 533:Generated_Source\PSoC5/cmsis_gcc.h **** 
 534:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 535:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 536:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 537:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 538:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 539:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 540:Generated_Source\PSoC5/cmsis_gcc.h **** {
 541:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 542:Generated_Source\PSoC5/cmsis_gcc.h **** }
 543:Generated_Source\PSoC5/cmsis_gcc.h **** 
 544:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 19


 545:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 546:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 547:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 548:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 549:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 550:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 551:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 552:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 553:Generated_Source\PSoC5/cmsis_gcc.h **** {
 554:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 555:Generated_Source\PSoC5/cmsis_gcc.h **** }
 556:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 557:Generated_Source\PSoC5/cmsis_gcc.h **** 
 558:Generated_Source\PSoC5/cmsis_gcc.h **** 
 559:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 560:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 561:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 562:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSPLIM Register value
 563:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 564:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_MSPLIM(void)
 565:Generated_Source\PSoC5/cmsis_gcc.h **** {
 566:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 567:Generated_Source\PSoC5/cmsis_gcc.h **** 
 568:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 569:Generated_Source\PSoC5/cmsis_gcc.h **** 
 570:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 571:Generated_Source\PSoC5/cmsis_gcc.h **** }
 572:Generated_Source\PSoC5/cmsis_gcc.h **** 
 573:Generated_Source\PSoC5/cmsis_gcc.h **** 
 574:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 575:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 576:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 577:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 578:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 579:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSPLIM Register value
 580:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 581:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_MSPLIM_NS(void)
 582:Generated_Source\PSoC5/cmsis_gcc.h **** {
 583:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 584:Generated_Source\PSoC5/cmsis_gcc.h **** 
 585:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 586:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 587:Generated_Source\PSoC5/cmsis_gcc.h **** }
 588:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 589:Generated_Source\PSoC5/cmsis_gcc.h **** 
 590:Generated_Source\PSoC5/cmsis_gcc.h **** 
 591:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 592:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 593:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 594:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 595:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 596:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 597:Generated_Source\PSoC5/cmsis_gcc.h **** {
 598:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 599:Generated_Source\PSoC5/cmsis_gcc.h **** }
 600:Generated_Source\PSoC5/cmsis_gcc.h **** 
 601:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 20


 602:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 603:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 604:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 605:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 606:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 607:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 608:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 609:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 610:Generated_Source\PSoC5/cmsis_gcc.h **** {
 611:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 612:Generated_Source\PSoC5/cmsis_gcc.h **** }
 613:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 614:Generated_Source\PSoC5/cmsis_gcc.h **** 
 615:Generated_Source\PSoC5/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1U)) || \
 616:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1U))    ) */
 617:Generated_Source\PSoC5/cmsis_gcc.h **** 
 618:Generated_Source\PSoC5/cmsis_gcc.h **** 
 619:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 620:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 621:Generated_Source\PSoC5/cmsis_gcc.h **** 
 622:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 623:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get FPSCR
 624:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 625:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 626:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 627:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_FPSCR(void)
 628:Generated_Source\PSoC5/cmsis_gcc.h **** {
 629:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 630:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 631:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 632:Generated_Source\PSoC5/cmsis_gcc.h **** 
 633:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");                                 /* Empty asm statement works as a scheduling
 634:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 635:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");
 636:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 637:Generated_Source\PSoC5/cmsis_gcc.h **** #else
 638:Generated_Source\PSoC5/cmsis_gcc.h ****    return(0U);
 639:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 640:Generated_Source\PSoC5/cmsis_gcc.h **** }
 641:Generated_Source\PSoC5/cmsis_gcc.h **** 
 642:Generated_Source\PSoC5/cmsis_gcc.h **** 
 643:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 644:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set FPSCR
 645:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 646:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 647:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 648:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 649:Generated_Source\PSoC5/cmsis_gcc.h **** {
 650:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 651:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 652:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");                                           /* Empty asm statement works as a 
 653:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc");
 654:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");
 655:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 656:Generated_Source\PSoC5/cmsis_gcc.h **** }
 657:Generated_Source\PSoC5/cmsis_gcc.h **** 
 658:Generated_Source\PSoC5/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 21


 659:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 660:Generated_Source\PSoC5/cmsis_gcc.h **** 
 661:Generated_Source\PSoC5/cmsis_gcc.h **** 
 662:Generated_Source\PSoC5/cmsis_gcc.h **** 
 663:Generated_Source\PSoC5/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 664:Generated_Source\PSoC5/cmsis_gcc.h **** 
 665:Generated_Source\PSoC5/cmsis_gcc.h **** 
 666:Generated_Source\PSoC5/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 667:Generated_Source\PSoC5/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 668:Generated_Source\PSoC5/cmsis_gcc.h ****   Access to dedicated instructions
 669:Generated_Source\PSoC5/cmsis_gcc.h ****   @{
 670:Generated_Source\PSoC5/cmsis_gcc.h **** */
 671:Generated_Source\PSoC5/cmsis_gcc.h **** 
 672:Generated_Source\PSoC5/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 673:Generated_Source\PSoC5/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 674:Generated_Source\PSoC5/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 675:Generated_Source\PSoC5/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 676:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 677:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 678:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 679:Generated_Source\PSoC5/cmsis_gcc.h **** #else
 680:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 681:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 682:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 683:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 684:Generated_Source\PSoC5/cmsis_gcc.h **** 
 685:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 686:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   No Operation
 687:Generated_Source\PSoC5/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 688:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 689:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 690:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 691:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("nop");
 692:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 693:Generated_Source\PSoC5/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")       /* This implementation gen
 694:Generated_Source\PSoC5/cmsis_gcc.h **** 
 695:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 696:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Wait For Interrupt
 697:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 698:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 699:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __WFI(void)
 700:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 701:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("wfi");
 702:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 703:Generated_Source\PSoC5/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")       /* This implementation gen
 704:Generated_Source\PSoC5/cmsis_gcc.h **** 
 705:Generated_Source\PSoC5/cmsis_gcc.h **** 
 706:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 707:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Wait For Event
 708:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 709:Generated_Source\PSoC5/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 710:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 711:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __WFE(void)
 712:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 713:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("wfe");
 714:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 715:Generated_Source\PSoC5/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")       /* This implementation gen
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 22


 716:Generated_Source\PSoC5/cmsis_gcc.h **** 
 717:Generated_Source\PSoC5/cmsis_gcc.h **** 
 718:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 719:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Send Event
 720:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 721:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 722:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __SEV(void)
 723:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 724:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("sev");
 725:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 726:Generated_Source\PSoC5/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")       /* This implementation gen
 727:Generated_Source\PSoC5/cmsis_gcc.h **** 
 728:Generated_Source\PSoC5/cmsis_gcc.h **** 
 729:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 730:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 731:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 732:Generated_Source\PSoC5/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 733:Generated_Source\PSoC5/cmsis_gcc.h ****            after the instruction has been completed.
 734:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 735:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __ISB(void)
 736:Generated_Source\PSoC5/cmsis_gcc.h **** {
 737:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 738:Generated_Source\PSoC5/cmsis_gcc.h **** }
 739:Generated_Source\PSoC5/cmsis_gcc.h **** 
 740:Generated_Source\PSoC5/cmsis_gcc.h **** 
 741:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 742:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 743:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 744:Generated_Source\PSoC5/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 745:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 746:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DSB(void)
 747:Generated_Source\PSoC5/cmsis_gcc.h **** {
 748:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 749:Generated_Source\PSoC5/cmsis_gcc.h **** }
 750:Generated_Source\PSoC5/cmsis_gcc.h **** 
 751:Generated_Source\PSoC5/cmsis_gcc.h **** 
 752:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 753:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Data Memory Barrier
 754:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 755:Generated_Source\PSoC5/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 756:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 757:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DMB(void)
 758:Generated_Source\PSoC5/cmsis_gcc.h **** {
 759:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 760:Generated_Source\PSoC5/cmsis_gcc.h **** }
 761:Generated_Source\PSoC5/cmsis_gcc.h **** 
 762:Generated_Source\PSoC5/cmsis_gcc.h **** 
 763:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 764:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 765:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Reverses the byte order in integer value.
 766:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 767:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Reversed value
 768:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 769:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV(uint32_t value)
 770:Generated_Source\PSoC5/cmsis_gcc.h **** {
 771:Generated_Source\PSoC5/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 772:Generated_Source\PSoC5/cmsis_gcc.h ****   return __builtin_bswap32(value);
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 23


 773:Generated_Source\PSoC5/cmsis_gcc.h **** #else
 774:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 775:Generated_Source\PSoC5/cmsis_gcc.h **** 
 776:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 777:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 778:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 779:Generated_Source\PSoC5/cmsis_gcc.h **** }
 780:Generated_Source\PSoC5/cmsis_gcc.h **** 
 781:Generated_Source\PSoC5/cmsis_gcc.h **** 
 782:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 783:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 784:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Reverses the byte order in two unsigned short values.
 785:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 786:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Reversed value
 787:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 788:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV16(uint32_t value)
 789:Generated_Source\PSoC5/cmsis_gcc.h **** {
 790:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 791:Generated_Source\PSoC5/cmsis_gcc.h **** 
 792:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 327              		.loc 2 792 0
 328 0348 BB69     		ldr	r3, [r7, #24]
 329              		.syntax unified
 330              	@ 792 "Generated_Source\PSoC5/cmsis_gcc.h" 1
 331 034a 5BBA     		rev16 r3, r3
 332              	@ 0 "" 2
 333              		.thumb
 334              		.syntax unified
 335 034c 7B61     		str	r3, [r7, #20]
 793:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 336              		.loc 2 793 0
 337 034e 7B69     		ldr	r3, [r7, #20]
 338              	.LBE13:
 339              	.LBE12:
 340              		.loc 1 156 0
 341 0350 9BB2     		uxth	r3, r3
 342 0352 1846     		mov	r0, r3
 343 0354 FFF7FEFF 		bl	infoGet
 157:..\src/command_processing.c ****             break;
 344              		.loc 1 157 0
 345 0358 D4E0     		b	.L1
 346              	.L7:
 158:..\src/command_processing.c **** 
 159:..\src/command_processing.c **** //============================================================     CMD_SET_PARAM
 160:..\src/command_processing.c **** 
 161:..\src/command_processing.c ****         case CMD_SET_ZEROS:
 162:..\src/command_processing.c ****             setZeros();
 347              		.loc 1 162 0
 348 035a FFF7FEFF 		bl	setZeros
 163:..\src/command_processing.c ****             break;
 349              		.loc 1 163 0
 350 035e D1E0     		b	.L1
 351              	.L14:
 164:..\src/command_processing.c **** 
 165:..\src/command_processing.c **** //============================================================     CMD_GET_PARAM
 166:..\src/command_processing.c **** 
 167:..\src/command_processing.c ****         case CMD_GET_PARAM_LIST:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 24


 168:..\src/command_processing.c ****             manage_param_list( __REV16(*((uint16 *) &g_rx.buffer[1])) );
 352              		.loc 1 168 0
 353 0360 0E4B     		ldr	r3, .L53+4
 354 0362 1B88     		ldrh	r3, [r3]
 355 0364 BB62     		str	r3, [r7, #40]
 356              	.LBB14:
 357              	.LBB15:
 792:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 358              		.loc 2 792 0
 359 0366 BB6A     		ldr	r3, [r7, #40]
 360              		.syntax unified
 361              	@ 792 "Generated_Source\PSoC5/cmsis_gcc.h" 1
 362 0368 5BBA     		rev16 r3, r3
 363              	@ 0 "" 2
 364              		.thumb
 365              		.syntax unified
 366 036a 3B61     		str	r3, [r7, #16]
 367              		.loc 2 793 0
 368 036c 3B69     		ldr	r3, [r7, #16]
 369              	.LBE15:
 370              	.LBE14:
 371              		.loc 1 168 0
 372 036e 9BB2     		uxth	r3, r3
 373 0370 1846     		mov	r0, r3
 374 0372 FFF7FEFF 		bl	manage_param_list
 169:..\src/command_processing.c ****             break;
 375              		.loc 1 169 0
 376 0376 C5E0     		b	.L1
 377              	.L5:
 170:..\src/command_processing.c **** 
 171:..\src/command_processing.c **** //=================================================================     CMD_PING
 172:..\src/command_processing.c ****             
 173:..\src/command_processing.c ****         case CMD_PING:
 174:..\src/command_processing.c ****             cmd_ping();
 378              		.loc 1 174 0
 379 0378 FFF7FEFF 		bl	cmd_ping
 175:..\src/command_processing.c ****             break;
 380              		.loc 1 175 0
 381 037c C2E0     		b	.L1
 382              	.L8:
 176:..\src/command_processing.c **** 
 177:..\src/command_processing.c **** //=========================================================     CMD_STORE_PARAMS
 178:..\src/command_processing.c ****             
 179:..\src/command_processing.c ****         case CMD_STORE_PARAMS:
 180:..\src/command_processing.c ****             cmd_store_params();
 383              		.loc 1 180 0
 384 037e FFF7FEFF 		bl	cmd_store_params
 181:..\src/command_processing.c ****             break;
 385              		.loc 1 181 0
 386 0382 BFE0     		b	.L1
 387              	.L9:
 182:..\src/command_processing.c **** 
 183:..\src/command_processing.c **** //=================================================     CMD_STORE_DEFAULT_PARAMS
 184:..\src/command_processing.c **** 
 185:..\src/command_processing.c ****         case CMD_STORE_DEFAULT_PARAMS:
 186:..\src/command_processing.c ****             if(memStore(DEFAULT_EEPROM_DISPLACEMENT))
 388              		.loc 1 186 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 25


 389 0384 3220     		movs	r0, #50
 390 0386 FFF7FEFF 		bl	memStore
 391 038a 0346     		mov	r3, r0
 392 038c 002B     		cmp	r3, #0
 393 038e 07D0     		beq	.L39
 187:..\src/command_processing.c ****                 sendAcknowledgment(ACK_OK);
 394              		.loc 1 187 0
 395 0390 0120     		movs	r0, #1
 396 0392 FFF7FEFF 		bl	sendAcknowledgment
 188:..\src/command_processing.c ****             else
 189:..\src/command_processing.c ****                 sendAcknowledgment(ACK_ERROR);
 190:..\src/command_processing.c ****             break;
 397              		.loc 1 190 0
 398 0396 B5E0     		b	.L1
 399              	.L54:
 400              		.align	2
 401              	.L53:
 402 0398 00000000 		.word	g_rx
 403 039c 01000000 		.word	g_rx+1
 404              	.L39:
 189:..\src/command_processing.c ****             break;
 405              		.loc 1 189 0
 406 03a0 0020     		movs	r0, #0
 407 03a2 FFF7FEFF 		bl	sendAcknowledgment
 408              		.loc 1 190 0
 409 03a6 ADE0     		b	.L1
 410              	.L10:
 191:..\src/command_processing.c **** 
 192:..\src/command_processing.c **** //=======================================================     CMD_RESTORE_PARAMS
 193:..\src/command_processing.c **** 
 194:..\src/command_processing.c ****         case CMD_RESTORE_PARAMS:
 195:..\src/command_processing.c ****             if(memRestore())
 411              		.loc 1 195 0
 412 03a8 FFF7FEFF 		bl	memRestore
 413 03ac 0346     		mov	r3, r0
 414 03ae 002B     		cmp	r3, #0
 415 03b0 03D0     		beq	.L41
 196:..\src/command_processing.c ****                 sendAcknowledgment(ACK_OK);
 416              		.loc 1 196 0
 417 03b2 0120     		movs	r0, #1
 418 03b4 FFF7FEFF 		bl	sendAcknowledgment
 197:..\src/command_processing.c ****             else
 198:..\src/command_processing.c ****                 sendAcknowledgment(ACK_ERROR);
 199:..\src/command_processing.c ****             break;
 419              		.loc 1 199 0
 420 03b8 A4E0     		b	.L1
 421              	.L41:
 198:..\src/command_processing.c ****             break;
 422              		.loc 1 198 0
 423 03ba 0020     		movs	r0, #0
 424 03bc FFF7FEFF 		bl	sendAcknowledgment
 425              		.loc 1 199 0
 426 03c0 A0E0     		b	.L1
 427              	.L13:
 200:..\src/command_processing.c **** 
 201:..\src/command_processing.c **** //=============================================================     CMD_INIT_MEM
 202:..\src/command_processing.c **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 26


 203:..\src/command_processing.c ****         case CMD_INIT_MEM:            
 204:..\src/command_processing.c ****             if(memInit())
 428              		.loc 1 204 0
 429 03c2 FFF7FEFF 		bl	memInit
 430 03c6 0346     		mov	r3, r0
 431 03c8 002B     		cmp	r3, #0
 432 03ca 03D0     		beq	.L43
 205:..\src/command_processing.c ****                 sendAcknowledgment(ACK_OK);
 433              		.loc 1 205 0
 434 03cc 0120     		movs	r0, #1
 435 03ce FFF7FEFF 		bl	sendAcknowledgment
 206:..\src/command_processing.c ****             else
 207:..\src/command_processing.c ****                 sendAcknowledgment(ACK_ERROR);
 208:..\src/command_processing.c ****             break;
 436              		.loc 1 208 0
 437 03d2 97E0     		b	.L1
 438              	.L43:
 207:..\src/command_processing.c ****             break;
 439              		.loc 1 207 0
 440 03d4 0020     		movs	r0, #0
 441 03d6 FFF7FEFF 		bl	sendAcknowledgment
 442              		.loc 1 208 0
 443 03da 93E0     		b	.L1
 444              	.L12:
 209:..\src/command_processing.c **** 
 210:..\src/command_processing.c **** //===========================================================     CMD_BOOTLOADER
 211:..\src/command_processing.c **** 
 212:..\src/command_processing.c ****         case CMD_BOOTLOADER:
 213:..\src/command_processing.c ****             //Not sure if ACK_OK is correct, should check
 214:..\src/command_processing.c ****             sendAcknowledgment(ACK_OK);
 445              		.loc 1 214 0
 446 03dc 0120     		movs	r0, #1
 447 03de FFF7FEFF 		bl	sendAcknowledgment
 215:..\src/command_processing.c ****             CyDelay(1000);
 448              		.loc 1 215 0
 449 03e2 4FF47A70 		mov	r0, #1000
 450 03e6 FFF7FEFF 		bl	CyDelay
 216:..\src/command_processing.c ****             FTDI_ENABLE_Write(0x00);
 451              		.loc 1 216 0
 452 03ea 0020     		movs	r0, #0
 453 03ec FFF7FEFF 		bl	FTDI_ENABLE_Write
 217:..\src/command_processing.c ****             CyDelay(1000);
 454              		.loc 1 217 0
 455 03f0 4FF47A70 		mov	r0, #1000
 456 03f4 FFF7FEFF 		bl	CyDelay
 218:..\src/command_processing.c ****             Bootloadable_Load();
 457              		.loc 1 218 0
 458 03f8 FFF7FEFF 		bl	Bootloadable_Load
 219:..\src/command_processing.c ****             break;
 459              		.loc 1 219 0
 460 03fc 82E0     		b	.L1
 461              	.L15:
 220:..\src/command_processing.c **** 
 221:..\src/command_processing.c **** //============================================================     CMD_HAND_CALIBRATE
 222:..\src/command_processing.c **** 
 223:..\src/command_processing.c ****         case CMD_HAND_CALIBRATE:
 224:..\src/command_processing.c ****             calib.speed = (int16)(g_rx.buffer[1]<<8 | g_rx.buffer[2]);
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 27


 462              		.loc 1 224 0
 463 03fe 434B     		ldr	r3, .L55
 464 0400 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 465 0402 1B02     		lsls	r3, r3, #8
 466 0404 1AB2     		sxth	r2, r3
 467 0406 414B     		ldr	r3, .L55
 468 0408 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 469 040a 1BB2     		sxth	r3, r3
 470 040c 1343     		orrs	r3, r3, r2
 471 040e 1AB2     		sxth	r2, r3
 472 0410 3F4B     		ldr	r3, .L55+4
 473 0412 5A80     		strh	r2, [r3, #2]	@ movhi
 225:..\src/command_processing.c ****             calib.repetitions = (int16)(g_rx.buffer[3]<<8 | g_rx.buffer[4]);
 474              		.loc 1 225 0
 475 0414 3D4B     		ldr	r3, .L55
 476 0416 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 477 0418 1B02     		lsls	r3, r3, #8
 478 041a 1AB2     		sxth	r2, r3
 479 041c 3B4B     		ldr	r3, .L55
 480 041e 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 481 0420 1BB2     		sxth	r3, r3
 482 0422 1343     		orrs	r3, r3, r2
 483 0424 1AB2     		sxth	r2, r3
 484 0426 3A4B     		ldr	r3, .L55+4
 485 0428 9A80     		strh	r2, [r3, #4]	@ movhi
 226:..\src/command_processing.c ****             
 227:..\src/command_processing.c ****             if(calib.speed == -1 && calib.repetitions == -1) {
 486              		.loc 1 227 0
 487 042a 394B     		ldr	r3, .L55+4
 488 042c B3F90230 		ldrsh	r3, [r3, #2]
 489 0430 B3F1FF3F 		cmp	r3, #-1
 490 0434 0FD1     		bne	.L45
 491              		.loc 1 227 0 is_stmt 0 discriminator 1
 492 0436 364B     		ldr	r3, .L55+4
 493 0438 B3F90430 		ldrsh	r3, [r3, #4]
 494 043c B3F1FF3F 		cmp	r3, #-1
 495 0440 09D1     		bne	.L45
 228:..\src/command_processing.c ****                 calib.enabled = FALSE;
 496              		.loc 1 228 0 is_stmt 1
 497 0442 334B     		ldr	r3, .L55+4
 498 0444 0022     		movs	r2, #0
 499 0446 1A70     		strb	r2, [r3]
 229:..\src/command_processing.c ****                 calib.speed = 0;
 500              		.loc 1 229 0
 501 0448 314B     		ldr	r3, .L55+4
 502 044a 0022     		movs	r2, #0
 503 044c 5A80     		strh	r2, [r3, #2]	@ movhi
 230:..\src/command_processing.c ****                 calib.repetitions = 0;
 504              		.loc 1 230 0
 505 044e 304B     		ldr	r3, .L55+4
 506 0450 0022     		movs	r2, #0
 507 0452 9A80     		strh	r2, [r3, #4]	@ movhi
 231:..\src/command_processing.c ****                 break;
 508              		.loc 1 231 0
 509 0454 56E0     		b	.L1
 510              	.L45:
 232:..\src/command_processing.c ****             }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 28


 233:..\src/command_processing.c ****             // Speed & repetitions saturations
 234:..\src/command_processing.c ****             if (calib.speed < 0) {
 511              		.loc 1 234 0
 512 0456 2E4B     		ldr	r3, .L55+4
 513 0458 B3F90230 		ldrsh	r3, [r3, #2]
 514 045c 002B     		cmp	r3, #0
 515 045e 03DA     		bge	.L46
 235:..\src/command_processing.c ****                 calib.speed = 0;
 516              		.loc 1 235 0
 517 0460 2B4B     		ldr	r3, .L55+4
 518 0462 0022     		movs	r2, #0
 519 0464 5A80     		strh	r2, [r3, #2]	@ movhi
 520 0466 07E0     		b	.L47
 521              	.L46:
 236:..\src/command_processing.c ****             } else if (calib.speed > 200) {
 522              		.loc 1 236 0
 523 0468 294B     		ldr	r3, .L55+4
 524 046a B3F90230 		ldrsh	r3, [r3, #2]
 525 046e C82B     		cmp	r3, #200
 526 0470 02DD     		ble	.L47
 237:..\src/command_processing.c ****                 calib.speed = 200;
 527              		.loc 1 237 0
 528 0472 274B     		ldr	r3, .L55+4
 529 0474 C822     		movs	r2, #200
 530 0476 5A80     		strh	r2, [r3, #2]	@ movhi
 531              	.L47:
 238:..\src/command_processing.c ****             }
 239:..\src/command_processing.c ****             if (calib.repetitions < 0) {
 532              		.loc 1 239 0
 533 0478 254B     		ldr	r3, .L55+4
 534 047a B3F90430 		ldrsh	r3, [r3, #4]
 535 047e 002B     		cmp	r3, #0
 536 0480 02DA     		bge	.L48
 240:..\src/command_processing.c ****                 calib.repetitions = 0;
 537              		.loc 1 240 0
 538 0482 234B     		ldr	r3, .L55+4
 539 0484 0022     		movs	r2, #0
 540 0486 9A80     		strh	r2, [r3, #4]	@ movhi
 541              	.L48:
 241:..\src/command_processing.c ****             } else if (calib.repetitions > 32767) {
 242:..\src/command_processing.c ****                 calib.repetitions = 32767;
 243:..\src/command_processing.c ****             }
 244:..\src/command_processing.c ****             
 245:..\src/command_processing.c ****             g_refNew[0].pos = 0;                    // SoftHand is on motor 1
 542              		.loc 1 245 0
 543 0488 224B     		ldr	r3, .L55+8
 544 048a 0022     		movs	r2, #0
 545 048c 1A60     		str	r2, [r3]
 246:..\src/command_processing.c ****             calib.enabled = TRUE;
 546              		.loc 1 246 0
 547 048e 204B     		ldr	r3, .L55+4
 548 0490 0122     		movs	r2, #1
 549 0492 1A70     		strb	r2, [r3]
 247:..\src/command_processing.c ****          
 248:..\src/command_processing.c ****             sendAcknowledgment(ACK_OK);
 550              		.loc 1 248 0
 551 0494 0120     		movs	r0, #1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 29


 552 0496 FFF7FEFF 		bl	sendAcknowledgment
 249:..\src/command_processing.c ****             break;
 553              		.loc 1 249 0
 554 049a 33E0     		b	.L1
 555              	.L29:
 250:..\src/command_processing.c ****             
 251:..\src/command_processing.c **** //=====================================================     CMD_GET_IMU_READINGS
 252:..\src/command_processing.c **** 
 253:..\src/command_processing.c ****         case CMD_GET_IMU_READINGS:
 254:..\src/command_processing.c ****             cmd_get_imu_readings();
 556              		.loc 1 254 0
 557 049c FFF7FEFF 		bl	cmd_get_imu_readings
 255:..\src/command_processing.c ****             break; 
 558              		.loc 1 255 0
 559 04a0 30E0     		b	.L1
 560              	.L30:
 256:..\src/command_processing.c ****             
 257:..\src/command_processing.c **** //=====================================================     CMD_GET_IMU_PARAM
 258:..\src/command_processing.c **** 
 259:..\src/command_processing.c ****         case CMD_GET_IMU_PARAM:
 260:..\src/command_processing.c ****             get_IMU_param_list( __REV16(*((uint16 *) &g_rx.buffer[1])) );
 561              		.loc 1 260 0
 562 04a2 1D4B     		ldr	r3, .L55+12
 563 04a4 1B88     		ldrh	r3, [r3]
 564 04a6 7B62     		str	r3, [r7, #36]
 565              	.LBB16:
 566              	.LBB17:
 792:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 567              		.loc 2 792 0
 568 04a8 7B6A     		ldr	r3, [r7, #36]
 569              		.syntax unified
 570              	@ 792 "Generated_Source\PSoC5/cmsis_gcc.h" 1
 571 04aa 5BBA     		rev16 r3, r3
 572              	@ 0 "" 2
 573              		.thumb
 574              		.syntax unified
 575 04ac FB60     		str	r3, [r7, #12]
 576              		.loc 2 793 0
 577 04ae FB68     		ldr	r3, [r7, #12]
 578              	.LBE17:
 579              	.LBE16:
 580              		.loc 1 260 0
 581 04b0 9BB2     		uxth	r3, r3
 582 04b2 1846     		mov	r0, r3
 583 04b4 FFF7FEFF 		bl	get_IMU_param_list
 261:..\src/command_processing.c ****             break;             
 584              		.loc 1 261 0
 585 04b8 24E0     		b	.L1
 586              	.L31:
 262:..\src/command_processing.c ****             
 263:..\src/command_processing.c **** //=====================================================     CMD_GET_ENCODER_CONF
 264:..\src/command_processing.c **** 
 265:..\src/command_processing.c ****         case CMD_GET_ENCODER_CONF:
 266:..\src/command_processing.c ****             cmd_get_encoder_map();
 587              		.loc 1 266 0
 588 04ba FFF7FEFF 		bl	cmd_get_encoder_map
 267:..\src/command_processing.c ****             break; 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 30


 589              		.loc 1 267 0
 590 04be 21E0     		b	.L1
 591              	.L32:
 268:..\src/command_processing.c **** 
 269:..\src/command_processing.c **** //=====================================================     CMD_GET_ENCODER_RAW
 270:..\src/command_processing.c **** 
 271:..\src/command_processing.c ****         case CMD_GET_ENCODER_RAW:
 272:..\src/command_processing.c ****             cmd_get_encoder_raw();
 592              		.loc 1 272 0
 593 04c0 FFF7FEFF 		bl	cmd_get_encoder_raw
 273:..\src/command_processing.c ****             break; 
 594              		.loc 1 273 0
 595 04c4 1EE0     		b	.L1
 596              	.L33:
 274:..\src/command_processing.c **** 
 275:..\src/command_processing.c **** //=====================================================     CMD_GET_ADC_CONF
 276:..\src/command_processing.c **** 
 277:..\src/command_processing.c ****         case CMD_GET_ADC_CONF:
 278:..\src/command_processing.c ****             cmd_get_ADC_map();
 597              		.loc 1 278 0
 598 04c6 FFF7FEFF 		bl	cmd_get_ADC_map
 279:..\src/command_processing.c ****             break; 
 599              		.loc 1 279 0
 600 04ca 1BE0     		b	.L1
 601              	.L34:
 280:..\src/command_processing.c ****             
 281:..\src/command_processing.c **** //=====================================================     CMD_GET_ADC_RAW
 282:..\src/command_processing.c **** 
 283:..\src/command_processing.c ****         case CMD_GET_ADC_RAW:
 284:..\src/command_processing.c ****             cmd_get_ADC_raw();
 602              		.loc 1 284 0
 603 04cc FFF7FEFF 		bl	cmd_get_ADC_raw
 285:..\src/command_processing.c ****             break; 
 604              		.loc 1 285 0
 605 04d0 18E0     		b	.L1
 606              	.L35:
 286:..\src/command_processing.c ****             
 287:..\src/command_processing.c **** //=====================================================     CMD_GET_SD_SINGLE_FILE
 288:..\src/command_processing.c **** 
 289:..\src/command_processing.c ****         case CMD_GET_SD_SINGLE_FILE:
 290:..\src/command_processing.c ****             cmd_get_SD_file( __REV16(*((uint16 *) &g_rx.buffer[1])) );
 607              		.loc 1 290 0
 608 04d2 114B     		ldr	r3, .L55+12
 609 04d4 1B88     		ldrh	r3, [r3]
 610 04d6 3B62     		str	r3, [r7, #32]
 611              	.LBB18:
 612              	.LBB19:
 792:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 613              		.loc 2 792 0
 614 04d8 3B6A     		ldr	r3, [r7, #32]
 615              		.syntax unified
 616              	@ 792 "Generated_Source\PSoC5/cmsis_gcc.h" 1
 617 04da 5BBA     		rev16 r3, r3
 618              	@ 0 "" 2
 619              		.thumb
 620              		.syntax unified
 621 04dc BB60     		str	r3, [r7, #8]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 31


 622              		.loc 2 793 0
 623 04de BB68     		ldr	r3, [r7, #8]
 624              	.LBE19:
 625              	.LBE18:
 626              		.loc 1 290 0
 627 04e0 9BB2     		uxth	r3, r3
 628 04e2 1846     		mov	r0, r3
 629 04e4 FFF7FEFF 		bl	cmd_get_SD_file
 291:..\src/command_processing.c ****             break;   
 630              		.loc 1 291 0
 631 04e8 0CE0     		b	.L1
 632              	.L36:
 292:..\src/command_processing.c ****             
 293:..\src/command_processing.c **** //=====================================================     CMD_REMOVE_SD_SINGLE_FILE
 294:..\src/command_processing.c **** 
 295:..\src/command_processing.c ****         case CMD_REMOVE_SD_SINGLE_FILE:
 296:..\src/command_processing.c ****             cmd_remove_SD_file( __REV16(*((uint16 *) &g_rx.buffer[1])) );
 633              		.loc 1 296 0
 634 04ea 0B4B     		ldr	r3, .L55+12
 635 04ec 1B88     		ldrh	r3, [r3]
 636 04ee FB61     		str	r3, [r7, #28]
 637              	.LBB20:
 638              	.LBB21:
 792:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 639              		.loc 2 792 0
 640 04f0 FB69     		ldr	r3, [r7, #28]
 641              		.syntax unified
 642              	@ 792 "Generated_Source\PSoC5/cmsis_gcc.h" 1
 643 04f2 5BBA     		rev16 r3, r3
 644              	@ 0 "" 2
 645              		.thumb
 646              		.syntax unified
 647 04f4 7B60     		str	r3, [r7, #4]
 648              		.loc 2 793 0
 649 04f6 7B68     		ldr	r3, [r7, #4]
 650              	.LBE21:
 651              	.LBE20:
 652              		.loc 1 296 0
 653 04f8 9BB2     		uxth	r3, r3
 654 04fa 1846     		mov	r0, r3
 655 04fc FFF7FEFF 		bl	cmd_remove_SD_file
 297:..\src/command_processing.c ****             break;               
 656              		.loc 1 297 0
 657 0500 00E0     		b	.L1
 658              	.L52:
 298:..\src/command_processing.c ****             
 299:..\src/command_processing.c **** //=========================================================== ALL OTHER COMMANDS
 300:..\src/command_processing.c ****         default:
 301:..\src/command_processing.c ****             break;
 659              		.loc 1 301 0
 660 0502 00BF     		nop
 661              	.L1:
 302:..\src/command_processing.c **** 
 303:..\src/command_processing.c ****     }
 304:..\src/command_processing.c **** }  
 662              		.loc 1 304 0
 663 0504 3037     		adds	r7, r7, #48
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 32


 664              		.cfi_def_cfa_offset 8
 665 0506 BD46     		mov	sp, r7
 666              		.cfi_def_cfa_register 13
 667              		@ sp needed
 668 0508 80BD     		pop	{r7, pc}
 669              	.L56:
 670 050a 00BF     		.align	2
 671              	.L55:
 672 050c 00000000 		.word	g_rx
 673 0510 00000000 		.word	calib
 674 0514 00000000 		.word	g_refNew
 675 0518 01000000 		.word	g_rx+1
 676              		.cfi_endproc
 677              	.LFE64:
 678              		.size	commProcess, .-commProcess
 679              		.section	.text.infoSend,"ax",%progbits
 680              		.align	2
 681              		.global	infoSend
 682              		.thumb
 683              		.thumb_func
 684              		.type	infoSend, %function
 685              	infoSend:
 686              	.LFB65:
 305:..\src/command_processing.c **** 
 306:..\src/command_processing.c **** //==============================================================================
 307:..\src/command_processing.c **** //                                                                     INFO SEND
 308:..\src/command_processing.c **** //==============================================================================
 309:..\src/command_processing.c **** 
 310:..\src/command_processing.c **** void infoSend(void){
 687              		.loc 1 310 0
 688              		.cfi_startproc
 689              		@ args = 0, pretend = 0, frame = 1504
 690              		@ frame_needed = 1, uses_anonymous_args = 0
 691 0000 80B5     		push	{r7, lr}
 692              		.cfi_def_cfa_offset 8
 693              		.cfi_offset 7, -8
 694              		.cfi_offset 14, -4
 695 0002 ADF5BC6D 		sub	sp, sp, #1504
 696              		.cfi_def_cfa_offset 1512
 697 0006 00AF     		add	r7, sp, #0
 698              		.cfi_def_cfa_register 7
 311:..\src/command_processing.c ****     char packet_string[1500];
 312:..\src/command_processing.c ****     
 313:..\src/command_processing.c ****     prepare_generic_info(packet_string);
 699              		.loc 1 313 0
 700 0008 3B1D     		adds	r3, r7, #4
 701 000a 1846     		mov	r0, r3
 702 000c FFF7FEFF 		bl	prepare_generic_info
 314:..\src/command_processing.c ****     UART_RS485_PutString(packet_string);
 703              		.loc 1 314 0
 704 0010 3B1D     		adds	r3, r7, #4
 705 0012 1846     		mov	r0, r3
 706 0014 FFF7FEFF 		bl	UART_RS485_PutString
 315:..\src/command_processing.c **** }
 707              		.loc 1 315 0
 708 0018 00BF     		nop
 709 001a 07F5BC67 		add	r7, r7, #1504
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 33


 710              		.cfi_def_cfa_offset 8
 711 001e BD46     		mov	sp, r7
 712              		.cfi_def_cfa_register 13
 713              		@ sp needed
 714 0020 80BD     		pop	{r7, pc}
 715              		.cfi_endproc
 716              	.LFE65:
 717              		.size	infoSend, .-infoSend
 718 0022 00BF     		.section	.text.infoGet,"ax",%progbits
 719              		.align	2
 720              		.global	infoGet
 721              		.thumb
 722              		.thumb_func
 723              		.type	infoGet, %function
 724              	infoGet:
 725              	.LFB66:
 316:..\src/command_processing.c **** 
 317:..\src/command_processing.c **** 
 318:..\src/command_processing.c **** //==============================================================================
 319:..\src/command_processing.c **** //                                                              COMMAND GET INFO
 320:..\src/command_processing.c **** //==============================================================================
 321:..\src/command_processing.c **** 
 322:..\src/command_processing.c **** void infoGet(uint16 info_type) {
 726              		.loc 1 322 0
 727              		.cfi_startproc
 728              		@ args = 0, pretend = 0, frame = 24008
 729              		@ frame_needed = 1, uses_anonymous_args = 0
 730 0000 80B5     		push	{r7, lr}
 731              		.cfi_def_cfa_offset 8
 732              		.cfi_offset 7, -8
 733              		.cfi_offset 14, -4
 734 0002 ADF5BB4D 		sub	sp, sp, #23936
 735              		.cfi_def_cfa_offset 23944
 736 0006 92B0     		sub	sp, sp, #72
 737              		.cfi_def_cfa_offset 24016
 738 0008 00AF     		add	r7, sp, #0
 739              		.cfi_def_cfa_register 7
 740 000a 0246     		mov	r2, r0
 741 000c 07F14803 		add	r3, r7, #72
 742 0010 423B     		subs	r3, r3, #66
 743 0012 1A80     		strh	r2, [r3]	@ movhi
 323:..\src/command_processing.c ****     char CYDATA packet_string[4000] = "";
 744              		.loc 1 323 0
 745 0014 07F59C43 		add	r3, r7, #19968
 746 0018 03F12803 		add	r3, r3, #40
 747 001c 0022     		movs	r2, #0
 748 001e 1A60     		str	r2, [r3]
 749 0020 0433     		adds	r3, r3, #4
 750 0022 40F69C72 		movw	r2, #3996
 751 0026 0021     		movs	r1, #0
 752 0028 1846     		mov	r0, r3
 753 002a FFF7FEFF 		bl	memset
 324:..\src/command_processing.c ****     char CYDATA str_sd_data[20000] = "";
 754              		.loc 1 324 0
 755 002e 07F14803 		add	r3, r7, #72
 756 0032 403B     		subs	r3, r3, #64
 757 0034 0022     		movs	r2, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 34


 758 0036 1A60     		str	r2, [r3]
 759 0038 0433     		adds	r3, r3, #4
 760 003a 44F61C62 		movw	r2, #19996
 761 003e 0021     		movs	r1, #0
 762 0040 1846     		mov	r0, r3
 763 0042 FFF7FEFF 		bl	memset
 325:..\src/command_processing.c ****     //==================================     choose info type and prepare string
 326:..\src/command_processing.c **** 
 327:..\src/command_processing.c ****     switch (info_type) {
 764              		.loc 1 327 0
 765 0046 07F14803 		add	r3, r7, #72
 766 004a 423B     		subs	r3, r3, #66
 767 004c 1B88     		ldrh	r3, [r3]
 768 004e 062B     		cmp	r3, #6
 769 0050 7DD8     		bhi	.L69
 770 0052 01A2     		adr	r2, .L61
 771 0054 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 772              		.p2align 2
 773              	.L61:
 774 0058 75000000 		.word	.L60+1
 775 005c 97000000 		.word	.L62+1
 776 0060 B9000000 		.word	.L63+1
 777 0064 E1000000 		.word	.L64+1
 778 0068 03010000 		.word	.L65+1
 779 006c 21010000 		.word	.L66+1
 780 0070 27010000 		.word	.L67+1
 781              		.p2align 1
 782              	.L60:
 328:..\src/command_processing.c ****         case INFO_ALL:
 329:..\src/command_processing.c ****             prepare_generic_info(packet_string);
 783              		.loc 1 329 0
 784 0074 07F59C43 		add	r3, r7, #19968
 785 0078 03F12803 		add	r3, r3, #40
 786 007c 1846     		mov	r0, r3
 787 007e FFF7FEFF 		bl	prepare_generic_info
 330:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer(); 
 788              		.loc 1 330 0
 789 0082 FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 331:..\src/command_processing.c ****             UART_RS485_PutString(packet_string);
 790              		.loc 1 331 0
 791 0086 07F59C43 		add	r3, r7, #19968
 792 008a 03F12803 		add	r3, r3, #40
 793 008e 1846     		mov	r0, r3
 794 0090 FFF7FEFF 		bl	UART_RS485_PutString
 332:..\src/command_processing.c ****             break;
 795              		.loc 1 332 0
 796 0094 5CE0     		b	.L68
 797              	.L62:
 333:..\src/command_processing.c ****         case CYCLES_INFO:
 334:..\src/command_processing.c ****             prepare_counter_info(packet_string);
 798              		.loc 1 334 0
 799 0096 07F59C43 		add	r3, r7, #19968
 800 009a 03F12803 		add	r3, r3, #40
 801 009e 1846     		mov	r0, r3
 802 00a0 FFF7FEFF 		bl	prepare_counter_info
 335:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 803              		.loc 1 335 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 35


 804 00a4 FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 336:..\src/command_processing.c ****             UART_RS485_PutString(packet_string);
 805              		.loc 1 336 0
 806 00a8 07F59C43 		add	r3, r7, #19968
 807 00ac 03F12803 		add	r3, r3, #40
 808 00b0 1846     		mov	r0, r3
 809 00b2 FFF7FEFF 		bl	UART_RS485_PutString
 337:..\src/command_processing.c ****             break;
 810              		.loc 1 337 0
 811 00b6 4BE0     		b	.L68
 812              	.L63:
 338:..\src/command_processing.c ****         case GET_SD_PARAM:
 339:..\src/command_processing.c ****             Read_SD_Closed_File(sdParam, packet_string, sizeof(packet_string));
 813              		.loc 1 339 0
 814 00b8 07F59C43 		add	r3, r7, #19968
 815 00bc 03F12803 		add	r3, r3, #40
 816 00c0 4FF47A62 		mov	r2, #4000
 817 00c4 1946     		mov	r1, r3
 818 00c6 2548     		ldr	r0, .L70
 819 00c8 FFF7FEFF 		bl	Read_SD_Closed_File
 340:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 820              		.loc 1 340 0
 821 00cc FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 341:..\src/command_processing.c ****             UART_RS485_PutString(packet_string);
 822              		.loc 1 341 0
 823 00d0 07F59C43 		add	r3, r7, #19968
 824 00d4 03F12803 		add	r3, r3, #40
 825 00d8 1846     		mov	r0, r3
 826 00da FFF7FEFF 		bl	UART_RS485_PutString
 342:..\src/command_processing.c ****             break;
 827              		.loc 1 342 0
 828 00de 37E0     		b	.L68
 829              	.L64:
 343:..\src/command_processing.c ****         case GET_SD_DATA:
 344:..\src/command_processing.c ****             Read_SD_Current_Data(str_sd_data, sizeof(str_sd_data));
 830              		.loc 1 344 0
 831 00e0 07F14803 		add	r3, r7, #72
 832 00e4 403B     		subs	r3, r3, #64
 833 00e6 44F62061 		movw	r1, #20000
 834 00ea 1846     		mov	r0, r3
 835 00ec FFF7FEFF 		bl	Read_SD_Current_Data
 345:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 836              		.loc 1 345 0
 837 00f0 FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 346:..\src/command_processing.c ****             UART_RS485_PutString(str_sd_data);
 838              		.loc 1 346 0
 839 00f4 07F14803 		add	r3, r7, #72
 840 00f8 403B     		subs	r3, r3, #64
 841 00fa 1846     		mov	r0, r3
 842 00fc FFF7FEFF 		bl	UART_RS485_PutString
 347:..\src/command_processing.c ****             break;
 843              		.loc 1 347 0
 844 0100 26E0     		b	.L68
 845              	.L65:
 348:..\src/command_processing.c ****         case GET_SD_FS_TREE:
 349:..\src/command_processing.c ****             Get_SD_FS(str_sd_data);
 846              		.loc 1 349 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 36


 847 0102 07F14803 		add	r3, r7, #72
 848 0106 403B     		subs	r3, r3, #64
 849 0108 1846     		mov	r0, r3
 850 010a FFF7FEFF 		bl	Get_SD_FS
 350:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 851              		.loc 1 350 0
 852 010e FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 351:..\src/command_processing.c ****             UART_RS485_PutString(str_sd_data);
 853              		.loc 1 351 0
 854 0112 07F14803 		add	r3, r7, #72
 855 0116 403B     		subs	r3, r3, #64
 856 0118 1846     		mov	r0, r3
 857 011a FFF7FEFF 		bl	UART_RS485_PutString
 352:..\src/command_processing.c ****             break;
 858              		.loc 1 352 0
 859 011e 17E0     		b	.L68
 860              	.L66:
 353:..\src/command_processing.c ****         case GET_SD_EMG_HIST:
 354:..\src/command_processing.c ****             // Send every single byte inside the function, since it could be a large file to send
 355:..\src/command_processing.c ****             Read_SD_EMG_History_Data();
 861              		.loc 1 355 0
 862 0120 FFF7FEFF 		bl	Read_SD_EMG_History_Data
 356:..\src/command_processing.c ****             break;
 863              		.loc 1 356 0
 864 0124 14E0     		b	.L68
 865              	.L67:
 357:..\src/command_processing.c ****         case GET_SD_R01_SUMM:
 358:..\src/command_processing.c ****             Read_SD_Closed_File(sdR01File, packet_string, sizeof(packet_string));
 866              		.loc 1 358 0
 867 0126 07F59C43 		add	r3, r7, #19968
 868 012a 03F12803 		add	r3, r3, #40
 869 012e 4FF47A62 		mov	r2, #4000
 870 0132 1946     		mov	r1, r3
 871 0134 0A48     		ldr	r0, .L70+4
 872 0136 FFF7FEFF 		bl	Read_SD_Closed_File
 359:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 873              		.loc 1 359 0
 874 013a FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 360:..\src/command_processing.c ****             UART_RS485_PutString(packet_string);
 875              		.loc 1 360 0
 876 013e 07F59C43 		add	r3, r7, #19968
 877 0142 03F12803 		add	r3, r3, #40
 878 0146 1846     		mov	r0, r3
 879 0148 FFF7FEFF 		bl	UART_RS485_PutString
 361:..\src/command_processing.c ****             break;            
 880              		.loc 1 361 0
 881 014c 00E0     		b	.L68
 882              	.L69:
 362:..\src/command_processing.c ****         default:
 363:..\src/command_processing.c ****             break;
 883              		.loc 1 363 0
 884 014e 00BF     		nop
 885              	.L68:
 364:..\src/command_processing.c ****     }
 365:..\src/command_processing.c **** }
 886              		.loc 1 365 0 discriminator 1
 887 0150 00BF     		nop
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 37


 888 0152 07F5BB47 		add	r7, r7, #23936
 889 0156 4837     		adds	r7, r7, #72
 890              		.cfi_def_cfa_offset 8
 891 0158 BD46     		mov	sp, r7
 892              		.cfi_def_cfa_register 13
 893              		@ sp needed
 894 015a 80BD     		pop	{r7, pc}
 895              	.L71:
 896              		.align	2
 897              	.L70:
 898 015c 00000000 		.word	sdParam
 899 0160 00000000 		.word	sdR01File
 900              		.cfi_endproc
 901              	.LFE66:
 902              		.size	infoGet, .-infoGet
 903              		.global	__aeabi_i2f
 904              		.global	__aeabi_fdiv
 905              		.section	.rodata
 906              		.align	2
 907              	.LC88:
 908 0000 20557362 		.ascii	" Usb\000"
 908      00
 909 0005 000000   		.align	2
 910              	.LC89:
 911 0008 2048616E 		.ascii	" Handle\000"
 911      646C6500 
 912              		.align	2
 913              	.LC90:
 914 0010 20454D47 		.ascii	" EMG proportional\000"
 914      2070726F 
 914      706F7274 
 914      696F6E61 
 914      6C00
 915 0022 0000     		.align	2
 916              	.LC91:
 917 0024 20454D47 		.ascii	" EMG integral\000"
 917      20696E74 
 917      65677261 
 917      6C00
 918 0032 0000     		.align	2
 919              	.LC92:
 920 0034 20454D47 		.ascii	" EMG FCFS\000"
 920      20464346 
 920      5300
 921 003e 0000     		.align	2
 922              	.LC93:
 923 0040 20454D47 		.ascii	" EMG FCFS Advanced\000"
 923      20464346 
 923      53204164 
 923      76616E63 
 923      656400
 924 0053 00       		.align	2
 925              	.LC94:
 926 0054 204A6F79 		.ascii	" Joystick\000"
 926      73746963 
 926      6B00
 927 005e 0000     		.align	2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 38


 928              	.LC95:
 929 0060 20454D47 		.ascii	" EMG proportional Normally Closed\000"
 929      2070726F 
 929      706F7274 
 929      696F6E61 
 929      6C204E6F 
 930 0082 0000     		.align	2
 931              	.LC96:
 932 0084 20506F73 		.ascii	" Position\000"
 932      6974696F 
 932      6E00
 933 008e 0000     		.align	2
 934              	.LC97:
 935 0090 2050574D 		.ascii	" PWM\000"
 935      00
 936 0095 000000   		.align	2
 937              	.LC98:
 938 0098 20437572 		.ascii	" Current\000"
 938      72656E74 
 938      00
 939 00a1 000000   		.align	2
 940              	.LC99:
 941 00a4 20506F73 		.ascii	" Position and Current\000"
 941      6974696F 
 941      6E20616E 
 941      64204375 
 941      7272656E 
 942 00ba 0000     		.align	2
 943              	.LC100:
 944 00bc 20594553 		.ascii	" YES\000\000"
 944      0000
 945 00c2 0000     		.align	2
 946              	.LC101:
 947 00c4 204E4F00 		.ascii	" NO\000\000"
 947      00
 948 00c9 000000   		.align	2
 949              	.LC102:
 950 00cc 20526967 		.ascii	" Right\000\000"
 950      68740000 
 951              		.align	2
 952              	.LC103:
 953 00d4 204C6566 		.ascii	" Left\000\000"
 953      740000
 954 00db 00       		.align	2
 955              	.LC104:
 956 00dc 204F4646 		.ascii	" OFF\000\000"
 956      0000
 957 00e2 0000     		.align	2
 958              	.LC105:
 959 00e4 204F4E00 		.ascii	" ON\000\000"
 959      00
 960 00e9 000000   		.align	2
 961              	.LC106:
 962 00ec 204E6F6E 		.ascii	" None\000\000"
 962      650000
 963 00f3 00       		.align	2
 964              	.LC107:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 39


 965 00f4 2053442F 		.ascii	" SD/RTC board\000\000"
 965      52544320 
 965      626F6172 
 965      640000
 966 0103 00       		.align	2
 967              	.LC108:
 968 0104 20576946 		.ascii	" WiFi board [N/A]\000\000"
 968      6920626F 
 968      61726420 
 968      5B4E2F41 
 968      5D0000
 969 0117 00       		.align	2
 970              	.LC109:
 971 0118 204F7468 		.ascii	" Other [N/A]\000\000"
 971      6572205B 
 971      4E2F415D 
 971      0000
 972 0126 0000     		.align	2
 973              	.LC110:
 974 0128 204C6F77 		.ascii	" Low\000\000"
 974      0000
 975 012e 0000     		.align	2
 976              	.LC111:
 977 0130 20486967 		.ascii	" High\000\000"
 977      680000
 978 0137 00       		.align	2
 979              	.LC112:
 980 0138 2047454E 		.ascii	" GENERIC USER\000\000"
 980      45524943 
 980      20555345 
 980      520000
 981 0147 00       		.align	2
 982              	.LC113:
 983 0148 204D4152 		.ascii	" MARIA\000\000"
 983      49410000 
 984              		.align	2
 985              	.LC114:
 986 0150 20523031 		.ascii	" R01\000\000"
 986      0000
 987 0156 0000     		.align	2
 988              	.LC115:
 989 0158 204D4333 		.ascii	" MC33887 (Standard)\000\000"
 989      33383837 
 989      20285374 
 989      616E6461 
 989      72642900 
 990 016d 000000   		.align	2
 991              	.LC116:
 992 0170 20564E48 		.ascii	" VNH5019 (High power)\000\000"
 992      35303139 
 992      20284869 
 992      67682070 
 992      6F776572 
 993 0187 00       		.align	2
 994              	.LC117:
 995 0188 20455343 		.ascii	" ESC (Brushless)\000\000"
 995      20284272 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 40


 995      7573686C 
 995      65737329 
 995      0000
 996 019a 0000     		.align	2
 997              	.LC118:
 998 019c 20534F46 		.ascii	" SOFTHAND PRO\000\000"
 998      5448414E 
 998      44205052 
 998      4F0000
 999 01ab 00       		.align	2
 1000              	.LC119:
 1001 01ac 2047454E 		.ascii	" GENERIC 2 MOTORS\000\000"
 1001      45524943 
 1001      2032204D 
 1001      4F544F52 
 1001      530000
 1002 01bf 00       		.align	2
 1003              	.LC120:
 1004 01c0 20414952 		.ascii	" AIR CHAMBERS\000\000"
 1004      20434841 
 1004      4D424552 
 1004      530000
 1005 01cf 00       		.align	2
 1006              	.LC121:
 1007 01d0 204F5454 		.ascii	" OTTOBOCK WRIST\000\000"
 1007      4F424F43 
 1007      4B205752 
 1007      49535400 
 1007      00
 1008 01e1 000000   		.align	2
 1009              	.LC122:
 1010 01e4 20534F46 		.ascii	" SOFTHAND 2 MOTORS\000\000"
 1010      5448414E 
 1010      44203220 
 1010      4D4F544F 
 1010      52530000 
 1011              		.align	2
 1012              	.LC123:
 1013 01f8 20466173 		.ascii	" Fast:syn2, Slow:syn1\000\000"
 1013      743A7379 
 1013      6E322C20 
 1013      536C6F77 
 1013      3A73796E 
 1014 020f 00       		.align	2
 1015              	.LC124:
 1016 0210 20466173 		.ascii	" Fast:wrist,Slow:hand\000\000"
 1016      743A7772 
 1016      6973742C 
 1016      536C6F77 
 1016      3A68616E 
 1017 0227 00       		.align	2
 1018              	.LC125:
 1019 0228 20536C6F 		.ascii	" Slow:syn2, Fast:syn1\000\000"
 1019      773A7379 
 1019      6E322C20 
 1019      46617374 
 1019      3A73796E 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 41


 1020 023f 00       		.align	2
 1021              	.LC126:
 1022 0240 20536C6F 		.ascii	" Slow:wrist,Fast:hand\000\000"
 1022      773A7772 
 1022      6973742C 
 1022      46617374 
 1022      3A68616E 
 1023 0257 00       		.align	2
 1024              	.LC127:
 1025 0258 20436C6F 		.ascii	" Close:CW, Open:CCW\000\000"
 1025      73653A43 
 1025      572C204F 
 1025      70656E3A 
 1025      43435700 
 1026 026d 000000   		.align	2
 1027              	.LC128:
 1028 0270 20436C6F 		.ascii	" Close:CCW, Open:CW\000\000"
 1028      73653A43 
 1028      43572C20 
 1028      4F70656E 
 1028      3A435700 
 1029              		.section	.text.get_param_list,"ax",%progbits
 1030              		.align	2
 1031              		.global	get_param_list
 1032              		.thumb
 1033              		.thumb_func
 1034              		.type	get_param_list, %function
 1035              	get_param_list:
 1036              	.LFB67:
 366:..\src/command_processing.c **** 
 367:..\src/command_processing.c **** 
 368:..\src/command_processing.c **** //==============================================================================
 369:..\src/command_processing.c **** //                                                                GET PARAM LIST
 370:..\src/command_processing.c **** //==============================================================================
 371:..\src/command_processing.c **** 
 372:..\src/command_processing.c **** void get_param_list (uint8* VAR_P[NUM_OF_PARAMS], uint8 TYPES[NUM_OF_PARAMS], 
 373:..\src/command_processing.c ****                      uint8 NUM_ITEMS[NUM_OF_PARAMS], uint8 NUM_STRUCT[NUM_OF_PARAMS],
 374:..\src/command_processing.c ****                      uint8* NUM_MENU, const char* PARAMS_STR[NUM_OF_PARAMS], 
 375:..\src/command_processing.c ****                      uint8 CUSTOM_PARAM_GET[NUM_OF_PARAMS], const char* MENU_STR[NUM_OF_PARAMS_MENU
 1037              		.loc 1 375 0
 1038              		.cfi_startproc
 1039              		@ args = 16, pretend = 0, frame = 3160
 1040              		@ frame_needed = 1, uses_anonymous_args = 0
 1041 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1042              		.cfi_def_cfa_offset 20
 1043              		.cfi_offset 4, -20
 1044              		.cfi_offset 5, -16
 1045              		.cfi_offset 6, -12
 1046              		.cfi_offset 7, -8
 1047              		.cfi_offset 14, -4
 1048 0002 ADF65C4D 		subw	sp, sp, #3164
 1049              		.cfi_def_cfa_offset 3184
 1050 0006 00AF     		add	r7, sp, #0
 1051              		.cfi_def_cfa_register 7
 1052 0008 07F10C04 		add	r4, r7, #12
 1053 000c 2060     		str	r0, [r4]
 1054 000e 07F10800 		add	r0, r7, #8
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 42


 1055 0012 0160     		str	r1, [r0]
 1056 0014 391D     		adds	r1, r7, #4
 1057 0016 0A60     		str	r2, [r1]
 1058 0018 3A46     		mov	r2, r7
 1059 001a 1360     		str	r3, [r2]
 376:..\src/command_processing.c ****     
 377:..\src/command_processing.c ****     //Package to be sent variables
 378:..\src/command_processing.c ****     uint8 packet_data[PARAM_BYTE_SLOT*NUM_OF_DEV_PARAMS + PARAM_MENU_SLOT*NUM_OF_DEV_PARAM_MENUS + 
 1060              		.loc 1 378 0
 1061 001c 07F15803 		add	r3, r7, #88
 1062 0020 0022     		movs	r2, #0
 1063 0022 1A60     		str	r2, [r3]
 1064 0024 0433     		adds	r3, r3, #4
 1065 0026 40F6E632 		movw	r2, #3046
 1066 002a 0021     		movs	r1, #0
 1067 002c 1846     		mov	r0, r3
 1068 002e FFF7FEFF 		bl	memset
 379:..\src/command_processing.c ****     uint16 packet_lenght = PARAM_BYTE_SLOT*NUM_OF_DEV_PARAMS + PARAM_MENU_SLOT*NUM_OF_DEV_PARAM_MEN
 1069              		.loc 1 379 0
 1070 0032 40F6EA33 		movw	r3, #3050
 1071 0036 A7F8503C 		strh	r3, [r7, #3152]	@ movhi
 380:..\src/command_processing.c **** 
 381:..\src/command_processing.c ****     //Auxiliary variables
 382:..\src/command_processing.c ****     uint8 CYDATA i, j;
 383:..\src/command_processing.c ****     uint8 CYDATA idx = 0;       //Parameter number
 1072              		.loc 1 383 0
 1073 003a 0023     		movs	r3, #0
 1074 003c 87F8553C 		strb	r3, [r7, #3157]
 384:..\src/command_processing.c ****     uint8 CYDATA idx_menu = 0;
 1075              		.loc 1 384 0
 1076 0040 0023     		movs	r3, #0
 1077 0042 87F8543C 		strb	r3, [r7, #3156]
 385:..\src/command_processing.c ****     uint8 CYDATA sod = 0;       //sizeof data
 1078              		.loc 1 385 0
 1079 0046 0023     		movs	r3, #0
 1080 0048 87F8533C 		strb	r3, [r7, #3155]
 386:..\src/command_processing.c ****     uint8 CYDATA string_lenght;
 387:..\src/command_processing.c ****     char CYDATA aux_str[50] = "";
 1081              		.loc 1 387 0
 1082 004c 07F12403 		add	r3, r7, #36
 1083 0050 0022     		movs	r2, #0
 1084 0052 1A60     		str	r2, [r3]
 1085 0054 0433     		adds	r3, r3, #4
 1086 0056 2E22     		movs	r2, #46
 1087 0058 0021     		movs	r1, #0
 1088 005a 1846     		mov	r0, r3
 1089 005c FFF7FEFF 		bl	memset
 388:..\src/command_processing.c ****     float aux_float;
 389:..\src/command_processing.c ****     int16 aux_int16;
 390:..\src/command_processing.c ****     uint16 aux_uint16;
 391:..\src/command_processing.c ****     int32 aux_int32;
 392:..\src/command_processing.c ****     uint32 aux_uint32;
 393:..\src/command_processing.c **** 
 394:..\src/command_processing.c ****     uint8 MOTOR_IDX = 0;
 1090              		.loc 1 394 0
 1091 0060 0023     		movs	r3, #0
 1092 0062 87F84F3C 		strb	r3, [r7, #3151]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 43


 395:..\src/command_processing.c ****     uint8 SECOND_MOTOR_IDX = 1;
 1093              		.loc 1 395 0
 1094 0066 0123     		movs	r3, #1
 1095 0068 87F84E3C 		strb	r3, [r7, #3150]
 396:..\src/command_processing.c ****   
 397:..\src/command_processing.c ****     uint8* m_addr = (uint8*)VAR_P[0];
 1096              		.loc 1 397 0
 1097 006c 07F10C03 		add	r3, r7, #12
 1098 0070 1B68     		ldr	r3, [r3]
 1099 0072 1B68     		ldr	r3, [r3]
 1100 0074 C7F8483C 		str	r3, [r7, #3144]
 398:..\src/command_processing.c ****     uint8* m_tmp = m_addr;
 1101              		.loc 1 398 0
 1102 0078 D7F8483C 		ldr	r3, [r7, #3144]
 1103 007c C7F8443C 		str	r3, [r7, #3140]
 399:..\src/command_processing.c ****         
 400:..\src/command_processing.c ****     packet_data[0] = CMD_GET_PARAM_LIST;
 1104              		.loc 1 400 0
 1105 0080 07F15803 		add	r3, r7, #88
 1106 0084 0C22     		movs	r2, #12
 1107 0086 1A70     		strb	r2, [r3]
 401:..\src/command_processing.c ****     packet_data[1] = NUM_OF_DEV_PARAMS;
 1108              		.loc 1 401 0
 1109 0088 07F15803 		add	r3, r7, #88
 1110 008c 2422     		movs	r2, #36
 1111 008e 5A70     		strb	r2, [r3, #1]
 402:..\src/command_processing.c ****     
 403:..\src/command_processing.c ****     for (idx = 0; idx < NUM_OF_DEV_PARAMS; idx++) {
 1112              		.loc 1 403 0
 1113 0090 0023     		movs	r3, #0
 1114 0092 87F8553C 		strb	r3, [r7, #3157]
 1115 0096 02F0AFB8 		b	.L73
 1116              	.L278:
 404:..\src/command_processing.c ****         
 405:..\src/command_processing.c ****         // Assign m_addr memory address
 406:..\src/command_processing.c ****         m_addr = (uint8*)VAR_P[idx];
 1117              		.loc 1 406 0
 1118 009a 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1119 009e 9B00     		lsls	r3, r3, #2
 1120 00a0 07F10C02 		add	r2, r7, #12
 1121 00a4 1268     		ldr	r2, [r2]
 1122 00a6 1344     		add	r3, r3, r2
 1123 00a8 1B68     		ldr	r3, [r3]
 1124 00aa C7F8483C 		str	r3, [r7, #3144]
 407:..\src/command_processing.c ****         
 408:..\src/command_processing.c ****         // Add parameter type and size to packet
 409:..\src/command_processing.c ****         packet_data[2 + PARAM_BYTE_SLOT*idx] = TYPES[idx];
 1125              		.loc 1 409 0
 1126 00ae 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1127 00b2 3222     		movs	r2, #50
 1128 00b4 02FB03F3 		mul	r3, r2, r3
 1129 00b8 0233     		adds	r3, r3, #2
 1130 00ba 97F8552C 		ldrb	r2, [r7, #3157]	@ zero_extendqisi2
 1131 00be 07F10801 		add	r1, r7, #8
 1132 00c2 0968     		ldr	r1, [r1]
 1133 00c4 0A44     		add	r2, r2, r1
 1134 00c6 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 44


 1135 00c8 07F15802 		add	r2, r7, #88
 1136 00cc D154     		strb	r1, [r2, r3]
 410:..\src/command_processing.c ****         packet_data[3 + PARAM_BYTE_SLOT*idx] = NUM_ITEMS[idx];
 1137              		.loc 1 410 0
 1138 00ce 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1139 00d2 3222     		movs	r2, #50
 1140 00d4 02FB03F3 		mul	r3, r2, r3
 1141 00d8 0333     		adds	r3, r3, #3
 1142 00da 97F8552C 		ldrb	r2, [r7, #3157]	@ zero_extendqisi2
 1143 00de 391D     		adds	r1, r7, #4
 1144 00e0 0968     		ldr	r1, [r1]
 1145 00e2 0A44     		add	r2, r2, r1
 1146 00e4 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1147 00e6 07F15802 		add	r2, r7, #88
 1148 00ea D154     		strb	r1, [r2, r3]
 411:..\src/command_processing.c ****         
 412:..\src/command_processing.c ****         // Find size of data
 413:..\src/command_processing.c ****         switch (TYPES[idx]) {
 1149              		.loc 1 413 0
 1150 00ec 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1151 00f0 07F10802 		add	r2, r7, #8
 1152 00f4 1268     		ldr	r2, [r2]
 1153 00f6 1344     		add	r3, r3, r2
 1154 00f8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1155 00fa 092B     		cmp	r3, #9
 1156 00fc 22D8     		bhi	.L74
 1157 00fe 01A2     		adr	r2, .L76
 1158 0100 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1159              		.p2align 2
 1160              	.L76:
 1161 0104 2D010000 		.word	.L75+1
 1162 0108 2D010000 		.word	.L75+1
 1163 010c 2D010000 		.word	.L75+1
 1164 0110 35010000 		.word	.L77+1
 1165 0114 35010000 		.word	.L77+1
 1166 0118 3D010000 		.word	.L78+1
 1167 011c 3D010000 		.word	.L78+1
 1168 0120 3D010000 		.word	.L78+1
 1169 0124 45010000 		.word	.L74+1
 1170 0128 2D010000 		.word	.L75+1
 1171              		.p2align 1
 1172              	.L75:
 414:..\src/command_processing.c ****             case TYPE_FLAG: case TYPE_INT8: case TYPE_UINT8: case TYPE_STRING:
 415:..\src/command_processing.c ****                 sod = 1; break;
 1173              		.loc 1 415 0
 1174 012c 0123     		movs	r3, #1
 1175 012e 87F8533C 		strb	r3, [r7, #3155]
 1176 0132 07E0     		b	.L74
 1177              	.L77:
 416:..\src/command_processing.c ****             case TYPE_INT16: case TYPE_UINT16:
 417:..\src/command_processing.c ****                 sod = 2; break;
 1178              		.loc 1 417 0
 1179 0134 0223     		movs	r3, #2
 1180 0136 87F8533C 		strb	r3, [r7, #3155]
 1181 013a 03E0     		b	.L74
 1182              	.L78:
 418:..\src/command_processing.c ****             case TYPE_INT32: case TYPE_UINT32: case TYPE_FLOAT:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 45


 419:..\src/command_processing.c ****                 sod = 4; break;
 1183              		.loc 1 419 0
 1184 013c 0423     		movs	r3, #4
 1185 013e 87F8533C 		strb	r3, [r7, #3155]
 1186 0142 00BF     		nop
 1187              	.L74:
 420:..\src/command_processing.c ****         }
 421:..\src/command_processing.c ****             
 422:..\src/command_processing.c ****         if (!CUSTOM_PARAM_GET[idx]) {       // Default param get
 1188              		.loc 1 422 0
 1189 0144 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1190 0148 D7F8782C 		ldr	r2, [r7, #3192]
 1191 014c 1344     		add	r3, r3, r2
 1192 014e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1193 0150 002B     		cmp	r3, #0
 1194 0152 40F02A82 		bne	.L79
 423:..\src/command_processing.c ****             
 424:..\src/command_processing.c ****             // Add parameter data to packet
 425:..\src/command_processing.c ****             switch (TYPES[idx]) {
 1195              		.loc 1 425 0
 1196 0156 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1197 015a 07F10802 		add	r2, r7, #8
 1198 015e 1268     		ldr	r2, [r2]
 1199 0160 1344     		add	r3, r3, r2
 1200 0162 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1201 0164 092B     		cmp	r3, #9
 1202 0166 01F22083 		bhi	.L113
 1203 016a 01A2     		adr	r2, .L82
 1204 016c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1205              		.p2align 2
 1206              	.L82:
 1207 0170 99010000 		.word	.L81+1
 1208 0174 01020000 		.word	.L83+1
 1209 0178 99010000 		.word	.L81+1
 1210 017c 69020000 		.word	.L84+1
 1211 0180 11030000 		.word	.L85+1
 1212 0184 B7030000 		.word	.L86+1
 1213 0188 5D040000 		.word	.L87+1
 1214 018c 03050000 		.word	.L88+1
 1215 0190 AB170000 		.word	.L113+1
 1216 0194 99010000 		.word	.L81+1
 1217              		.p2align 1
 1218              	.L81:
 426:..\src/command_processing.c ****                 case TYPE_FLAG: case TYPE_UINT8: case TYPE_STRING:
 427:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1219              		.loc 1 427 0
 1220 0198 0023     		movs	r3, #0
 1221 019a 87F8573C 		strb	r3, [r7, #3159]
 1222 019e 23E0     		b	.L89
 1223              	.L90:
 428:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1224              		.loc 1 428 0 discriminator 3
 1225 01a0 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1226 01a4 97F8532C 		ldrb	r2, [r7, #3155]	@ zero_extendqisi2
 1227 01a8 02FB03F3 		mul	r3, r2, r3
 1228 01ac 1A46     		mov	r2, r3
 1229 01ae D7F8483C 		ldr	r3, [r7, #3144]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 46


 1230 01b2 1344     		add	r3, r3, r2
 1231 01b4 C7F8443C 		str	r3, [r7, #3140]
 429:..\src/command_processing.c ****                         packet_data[4 + PARAM_BYTE_SLOT*idx + i*sod] = *m_tmp;
 1232              		.loc 1 429 0 discriminator 3
 1233 01b8 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1234 01bc 3222     		movs	r2, #50
 1235 01be 02FB03F3 		mul	r3, r2, r3
 1236 01c2 1A1D     		adds	r2, r3, #4
 1237 01c4 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1238 01c8 97F8531C 		ldrb	r1, [r7, #3155]	@ zero_extendqisi2
 1239 01cc 01FB03F3 		mul	r3, r1, r3
 1240 01d0 1344     		add	r3, r3, r2
 1241 01d2 D7F8442C 		ldr	r2, [r7, #3140]
 1242 01d6 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1243 01d8 07F15802 		add	r2, r7, #88
 1244 01dc D154     		strb	r1, [r2, r3]
 427:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1245              		.loc 1 427 0 discriminator 3
 1246 01de 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1247 01e2 0133     		adds	r3, r3, #1
 1248 01e4 87F8573C 		strb	r3, [r7, #3159]
 1249              	.L89:
 427:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1250              		.loc 1 427 0 is_stmt 0 discriminator 1
 1251 01e8 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1252 01ec 3A1D     		adds	r2, r7, #4
 1253 01ee 1268     		ldr	r2, [r2]
 1254 01f0 1344     		add	r3, r3, r2
 1255 01f2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1256 01f4 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 1257 01f8 9A42     		cmp	r2, r3
 1258 01fa D1D3     		bcc	.L90
 430:..\src/command_processing.c ****                     }
 431:..\src/command_processing.c ****                     break;                
 1259              		.loc 1 431 0 is_stmt 1
 1260 01fc 01F0D5BA 		b	.L113
 1261              	.L83:
 432:..\src/command_processing.c ****                 case TYPE_INT8:
 433:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1262              		.loc 1 433 0
 1263 0200 0023     		movs	r3, #0
 1264 0202 87F8573C 		strb	r3, [r7, #3159]
 1265 0206 23E0     		b	.L91
 1266              	.L92:
 434:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1267              		.loc 1 434 0 discriminator 3
 1268 0208 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1269 020c 97F8532C 		ldrb	r2, [r7, #3155]	@ zero_extendqisi2
 1270 0210 02FB03F3 		mul	r3, r2, r3
 1271 0214 1A46     		mov	r2, r3
 1272 0216 D7F8483C 		ldr	r3, [r7, #3144]
 1273 021a 1344     		add	r3, r3, r2
 1274 021c C7F8443C 		str	r3, [r7, #3140]
 435:..\src/command_processing.c ****                         packet_data[4 + PARAM_BYTE_SLOT*idx + i*sod] = *m_tmp;
 1275              		.loc 1 435 0 discriminator 3
 1276 0220 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1277 0224 3222     		movs	r2, #50
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 47


 1278 0226 02FB03F3 		mul	r3, r2, r3
 1279 022a 1A1D     		adds	r2, r3, #4
 1280 022c 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1281 0230 97F8531C 		ldrb	r1, [r7, #3155]	@ zero_extendqisi2
 1282 0234 01FB03F3 		mul	r3, r1, r3
 1283 0238 1344     		add	r3, r3, r2
 1284 023a D7F8442C 		ldr	r2, [r7, #3140]
 1285 023e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1286 0240 07F15802 		add	r2, r7, #88
 1287 0244 D154     		strb	r1, [r2, r3]
 433:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1288              		.loc 1 433 0 discriminator 3
 1289 0246 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1290 024a 0133     		adds	r3, r3, #1
 1291 024c 87F8573C 		strb	r3, [r7, #3159]
 1292              	.L91:
 433:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1293              		.loc 1 433 0 is_stmt 0 discriminator 1
 1294 0250 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1295 0254 3A1D     		adds	r2, r7, #4
 1296 0256 1268     		ldr	r2, [r2]
 1297 0258 1344     		add	r3, r3, r2
 1298 025a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1299 025c 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 1300 0260 9A42     		cmp	r2, r3
 1301 0262 D1D3     		bcc	.L92
 436:..\src/command_processing.c ****                     }
 437:..\src/command_processing.c ****                     break;
 1302              		.loc 1 437 0 is_stmt 1
 1303 0264 01F0A1BA 		b	.L113
 1304              	.L84:
 438:..\src/command_processing.c ****                 case TYPE_INT16:
 439:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1305              		.loc 1 439 0
 1306 0268 0023     		movs	r3, #0
 1307 026a 87F8573C 		strb	r3, [r7, #3159]
 1308 026e 43E0     		b	.L93
 1309              	.L96:
 440:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1310              		.loc 1 440 0
 1311 0270 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1312 0274 97F8532C 		ldrb	r2, [r7, #3155]	@ zero_extendqisi2
 1313 0278 02FB03F3 		mul	r3, r2, r3
 1314 027c 1A46     		mov	r2, r3
 1315 027e D7F8483C 		ldr	r3, [r7, #3144]
 1316 0282 1344     		add	r3, r3, r2
 1317 0284 C7F8443C 		str	r3, [r7, #3140]
 441:..\src/command_processing.c ****                         aux_int16 = *((int16*)m_tmp);
 1318              		.loc 1 441 0
 1319 0288 D7F8443C 		ldr	r3, [r7, #3140]
 1320 028c B3F90020 		ldrsh	r2, [r3]
 1321 0290 07F11E03 		add	r3, r7, #30
 1322 0294 1A80     		strh	r2, [r3]	@ movhi
 442:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1323              		.loc 1 442 0
 1324 0296 0023     		movs	r3, #0
 1325 0298 87F8563C 		strb	r3, [r7, #3158]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 48


 1326 029c 21E0     		b	.L94
 1327              	.L95:
 443:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1328              		.loc 1 443 0 discriminator 3
 1329 029e 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1330 02a2 3222     		movs	r2, #50
 1331 02a4 02FB03F3 		mul	r3, r2, r3
 1332 02a8 1A1D     		adds	r2, r3, #4
 1333 02aa 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1334 02ae 97F8531C 		ldrb	r1, [r7, #3155]	@ zero_extendqisi2
 1335 02b2 01FB03F3 		mul	r3, r1, r3
 1336 02b6 1A44     		add	r2, r2, r3
 1337 02b8 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1338 02bc 1A44     		add	r2, r2, r3
 1339 02be 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 1340 02c2 D31A     		subs	r3, r2, r3
 1341 02c4 013B     		subs	r3, r3, #1
 1342 02c6 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 1343 02ca 07F11E01 		add	r1, r7, #30
 1344 02ce 0A44     		add	r2, r2, r1
 1345 02d0 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1346 02d2 07F15802 		add	r2, r7, #88
 1347 02d6 D154     		strb	r1, [r2, r3]
 442:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1348              		.loc 1 442 0 discriminator 3
 1349 02d8 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 1350 02dc 0133     		adds	r3, r3, #1
 1351 02de 87F8563C 		strb	r3, [r7, #3158]
 1352              	.L94:
 442:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1353              		.loc 1 442 0 is_stmt 0 discriminator 1
 1354 02e2 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 1355 02e6 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1356 02ea 9A42     		cmp	r2, r3
 1357 02ec D7D3     		bcc	.L95
 439:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1358              		.loc 1 439 0 is_stmt 1 discriminator 2
 1359 02ee 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1360 02f2 0133     		adds	r3, r3, #1
 1361 02f4 87F8573C 		strb	r3, [r7, #3159]
 1362              	.L93:
 439:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1363              		.loc 1 439 0 is_stmt 0 discriminator 1
 1364 02f8 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1365 02fc 3A1D     		adds	r2, r7, #4
 1366 02fe 1268     		ldr	r2, [r2]
 1367 0300 1344     		add	r3, r3, r2
 1368 0302 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1369 0304 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 1370 0308 9A42     		cmp	r2, r3
 1371 030a B1D3     		bcc	.L96
 444:..\src/command_processing.c ****                         }
 445:..\src/command_processing.c ****                     }
 446:..\src/command_processing.c ****                     break;
 1372              		.loc 1 446 0 is_stmt 1
 1373 030c 01F04DBA 		b	.L113
 1374              	.L85:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 49


 447:..\src/command_processing.c ****                 case TYPE_UINT16:
 448:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1375              		.loc 1 448 0
 1376 0310 0023     		movs	r3, #0
 1377 0312 87F8573C 		strb	r3, [r7, #3159]
 1378 0316 42E0     		b	.L97
 1379              	.L100:
 449:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1380              		.loc 1 449 0
 1381 0318 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1382 031c 97F8532C 		ldrb	r2, [r7, #3155]	@ zero_extendqisi2
 1383 0320 02FB03F3 		mul	r3, r2, r3
 1384 0324 1A46     		mov	r2, r3
 1385 0326 D7F8483C 		ldr	r3, [r7, #3144]
 1386 032a 1344     		add	r3, r3, r2
 1387 032c C7F8443C 		str	r3, [r7, #3140]
 450:..\src/command_processing.c ****                         aux_uint16 = *((uint16*)m_tmp);
 1388              		.loc 1 450 0
 1389 0330 D7F8443C 		ldr	r3, [r7, #3140]
 1390 0334 1A88     		ldrh	r2, [r3]
 1391 0336 07F11C03 		add	r3, r7, #28
 1392 033a 1A80     		strh	r2, [r3]	@ movhi
 451:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1393              		.loc 1 451 0
 1394 033c 0023     		movs	r3, #0
 1395 033e 87F8563C 		strb	r3, [r7, #3158]
 1396 0342 21E0     		b	.L98
 1397              	.L99:
 452:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1398              		.loc 1 452 0 discriminator 3
 1399 0344 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1400 0348 3222     		movs	r2, #50
 1401 034a 02FB03F3 		mul	r3, r2, r3
 1402 034e 1A1D     		adds	r2, r3, #4
 1403 0350 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1404 0354 97F8531C 		ldrb	r1, [r7, #3155]	@ zero_extendqisi2
 1405 0358 01FB03F3 		mul	r3, r1, r3
 1406 035c 1A44     		add	r2, r2, r3
 1407 035e 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1408 0362 1A44     		add	r2, r2, r3
 1409 0364 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 1410 0368 D31A     		subs	r3, r2, r3
 1411 036a 013B     		subs	r3, r3, #1
 1412 036c 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 1413 0370 07F11C01 		add	r1, r7, #28
 1414 0374 0A44     		add	r2, r2, r1
 1415 0376 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1416 0378 07F15802 		add	r2, r7, #88
 1417 037c D154     		strb	r1, [r2, r3]
 451:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1418              		.loc 1 451 0 discriminator 3
 1419 037e 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 1420 0382 0133     		adds	r3, r3, #1
 1421 0384 87F8563C 		strb	r3, [r7, #3158]
 1422              	.L98:
 451:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1423              		.loc 1 451 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 50


 1424 0388 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 1425 038c 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1426 0390 9A42     		cmp	r2, r3
 1427 0392 D7D3     		bcc	.L99
 448:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1428              		.loc 1 448 0 is_stmt 1 discriminator 2
 1429 0394 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1430 0398 0133     		adds	r3, r3, #1
 1431 039a 87F8573C 		strb	r3, [r7, #3159]
 1432              	.L97:
 448:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1433              		.loc 1 448 0 is_stmt 0 discriminator 1
 1434 039e 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1435 03a2 3A1D     		adds	r2, r7, #4
 1436 03a4 1268     		ldr	r2, [r2]
 1437 03a6 1344     		add	r3, r3, r2
 1438 03a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1439 03aa 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 1440 03ae 9A42     		cmp	r2, r3
 1441 03b0 B2D3     		bcc	.L100
 453:..\src/command_processing.c ****                         }
 454:..\src/command_processing.c ****                     }
 455:..\src/command_processing.c ****                     break;
 1442              		.loc 1 455 0 is_stmt 1
 1443 03b2 01F0FAB9 		b	.L113
 1444              	.L86:
 456:..\src/command_processing.c ****                 case TYPE_INT32: 
 457:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1445              		.loc 1 457 0
 1446 03b6 0023     		movs	r3, #0
 1447 03b8 87F8573C 		strb	r3, [r7, #3159]
 1448 03bc 42E0     		b	.L101
 1449              	.L104:
 458:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1450              		.loc 1 458 0
 1451 03be 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1452 03c2 97F8532C 		ldrb	r2, [r7, #3155]	@ zero_extendqisi2
 1453 03c6 02FB03F3 		mul	r3, r2, r3
 1454 03ca 1A46     		mov	r2, r3
 1455 03cc D7F8483C 		ldr	r3, [r7, #3144]
 1456 03d0 1344     		add	r3, r3, r2
 1457 03d2 C7F8443C 		str	r3, [r7, #3140]
 459:..\src/command_processing.c ****                         aux_int32 = *((int32*)m_tmp);
 1458              		.loc 1 459 0
 1459 03d6 D7F8443C 		ldr	r3, [r7, #3140]
 1460 03da 1A68     		ldr	r2, [r3]
 1461 03dc 07F11803 		add	r3, r7, #24
 1462 03e0 1A60     		str	r2, [r3]
 460:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1463              		.loc 1 460 0
 1464 03e2 0023     		movs	r3, #0
 1465 03e4 87F8563C 		strb	r3, [r7, #3158]
 1466 03e8 21E0     		b	.L102
 1467              	.L103:
 461:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1468              		.loc 1 461 0 discriminator 3
 1469 03ea 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 51


 1470 03ee 3222     		movs	r2, #50
 1471 03f0 02FB03F3 		mul	r3, r2, r3
 1472 03f4 1A1D     		adds	r2, r3, #4
 1473 03f6 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1474 03fa 97F8531C 		ldrb	r1, [r7, #3155]	@ zero_extendqisi2
 1475 03fe 01FB03F3 		mul	r3, r1, r3
 1476 0402 1A44     		add	r2, r2, r3
 1477 0404 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1478 0408 1A44     		add	r2, r2, r3
 1479 040a 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 1480 040e D31A     		subs	r3, r2, r3
 1481 0410 013B     		subs	r3, r3, #1
 1482 0412 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 1483 0416 07F11801 		add	r1, r7, #24
 1484 041a 0A44     		add	r2, r2, r1
 1485 041c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1486 041e 07F15802 		add	r2, r7, #88
 1487 0422 D154     		strb	r1, [r2, r3]
 460:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1488              		.loc 1 460 0 discriminator 3
 1489 0424 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 1490 0428 0133     		adds	r3, r3, #1
 1491 042a 87F8563C 		strb	r3, [r7, #3158]
 1492              	.L102:
 460:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1493              		.loc 1 460 0 is_stmt 0 discriminator 1
 1494 042e 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 1495 0432 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1496 0436 9A42     		cmp	r2, r3
 1497 0438 D7D3     		bcc	.L103
 457:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1498              		.loc 1 457 0 is_stmt 1 discriminator 2
 1499 043a 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1500 043e 0133     		adds	r3, r3, #1
 1501 0440 87F8573C 		strb	r3, [r7, #3159]
 1502              	.L101:
 457:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1503              		.loc 1 457 0 is_stmt 0 discriminator 1
 1504 0444 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1505 0448 3A1D     		adds	r2, r7, #4
 1506 044a 1268     		ldr	r2, [r2]
 1507 044c 1344     		add	r3, r3, r2
 1508 044e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1509 0450 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 1510 0454 9A42     		cmp	r2, r3
 1511 0456 B2D3     		bcc	.L104
 462:..\src/command_processing.c ****                         }
 463:..\src/command_processing.c ****                     }
 464:..\src/command_processing.c ****                     break;
 1512              		.loc 1 464 0 is_stmt 1
 1513 0458 01F0A7B9 		b	.L113
 1514              	.L87:
 465:..\src/command_processing.c ****                 case TYPE_UINT32: 
 466:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1515              		.loc 1 466 0
 1516 045c 0023     		movs	r3, #0
 1517 045e 87F8573C 		strb	r3, [r7, #3159]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 52


 1518 0462 42E0     		b	.L105
 1519              	.L108:
 467:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1520              		.loc 1 467 0
 1521 0464 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1522 0468 97F8532C 		ldrb	r2, [r7, #3155]	@ zero_extendqisi2
 1523 046c 02FB03F3 		mul	r3, r2, r3
 1524 0470 1A46     		mov	r2, r3
 1525 0472 D7F8483C 		ldr	r3, [r7, #3144]
 1526 0476 1344     		add	r3, r3, r2
 1527 0478 C7F8443C 		str	r3, [r7, #3140]
 468:..\src/command_processing.c ****                         aux_uint32 = *((uint32*)m_tmp);
 1528              		.loc 1 468 0
 1529 047c D7F8443C 		ldr	r3, [r7, #3140]
 1530 0480 1A68     		ldr	r2, [r3]
 1531 0482 07F11403 		add	r3, r7, #20
 1532 0486 1A60     		str	r2, [r3]
 469:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1533              		.loc 1 469 0
 1534 0488 0023     		movs	r3, #0
 1535 048a 87F8563C 		strb	r3, [r7, #3158]
 1536 048e 21E0     		b	.L106
 1537              	.L107:
 470:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1538              		.loc 1 470 0 discriminator 3
 1539 0490 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1540 0494 3222     		movs	r2, #50
 1541 0496 02FB03F3 		mul	r3, r2, r3
 1542 049a 1A1D     		adds	r2, r3, #4
 1543 049c 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1544 04a0 97F8531C 		ldrb	r1, [r7, #3155]	@ zero_extendqisi2
 1545 04a4 01FB03F3 		mul	r3, r1, r3
 1546 04a8 1A44     		add	r2, r2, r3
 1547 04aa 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1548 04ae 1A44     		add	r2, r2, r3
 1549 04b0 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 1550 04b4 D31A     		subs	r3, r2, r3
 1551 04b6 013B     		subs	r3, r3, #1
 1552 04b8 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 1553 04bc 07F11401 		add	r1, r7, #20
 1554 04c0 0A44     		add	r2, r2, r1
 1555 04c2 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1556 04c4 07F15802 		add	r2, r7, #88
 1557 04c8 D154     		strb	r1, [r2, r3]
 469:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1558              		.loc 1 469 0 discriminator 3
 1559 04ca 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 1560 04ce 0133     		adds	r3, r3, #1
 1561 04d0 87F8563C 		strb	r3, [r7, #3158]
 1562              	.L106:
 469:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1563              		.loc 1 469 0 is_stmt 0 discriminator 1
 1564 04d4 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 1565 04d8 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1566 04dc 9A42     		cmp	r2, r3
 1567 04de D7D3     		bcc	.L107
 466:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 53


 1568              		.loc 1 466 0 is_stmt 1 discriminator 2
 1569 04e0 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1570 04e4 0133     		adds	r3, r3, #1
 1571 04e6 87F8573C 		strb	r3, [r7, #3159]
 1572              	.L105:
 466:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1573              		.loc 1 466 0 is_stmt 0 discriminator 1
 1574 04ea 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1575 04ee 3A1D     		adds	r2, r7, #4
 1576 04f0 1268     		ldr	r2, [r2]
 1577 04f2 1344     		add	r3, r3, r2
 1578 04f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1579 04f6 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 1580 04fa 9A42     		cmp	r2, r3
 1581 04fc B2D3     		bcc	.L108
 471:..\src/command_processing.c ****                         }
 472:..\src/command_processing.c ****                     }
 473:..\src/command_processing.c ****                     break;
 1582              		.loc 1 473 0 is_stmt 1
 1583 04fe 01F054B9 		b	.L113
 1584              	.L88:
 474:..\src/command_processing.c ****                     
 475:..\src/command_processing.c ****                 case TYPE_FLOAT:
 476:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1585              		.loc 1 476 0
 1586 0502 0023     		movs	r3, #0
 1587 0504 87F8573C 		strb	r3, [r7, #3159]
 1588 0508 42E0     		b	.L109
 1589              	.L112:
 477:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1590              		.loc 1 477 0
 1591 050a 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1592 050e 97F8532C 		ldrb	r2, [r7, #3155]	@ zero_extendqisi2
 1593 0512 02FB03F3 		mul	r3, r2, r3
 1594 0516 1A46     		mov	r2, r3
 1595 0518 D7F8483C 		ldr	r3, [r7, #3144]
 1596 051c 1344     		add	r3, r3, r2
 1597 051e C7F8443C 		str	r3, [r7, #3140]
 478:..\src/command_processing.c ****                         aux_float = *((float*)m_tmp);
 1598              		.loc 1 478 0
 1599 0522 D7F8443C 		ldr	r3, [r7, #3140]
 1600 0526 1A68     		ldr	r2, [r3]	@ float
 1601 0528 07F12003 		add	r3, r7, #32
 1602 052c 1A60     		str	r2, [r3]	@ float
 479:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1603              		.loc 1 479 0
 1604 052e 0023     		movs	r3, #0
 1605 0530 87F8563C 		strb	r3, [r7, #3158]
 1606 0534 21E0     		b	.L110
 1607              	.L111:
 480:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1608              		.loc 1 480 0 discriminator 3
 1609 0536 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1610 053a 3222     		movs	r2, #50
 1611 053c 02FB03F3 		mul	r3, r2, r3
 1612 0540 1A1D     		adds	r2, r3, #4
 1613 0542 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 54


 1614 0546 97F8531C 		ldrb	r1, [r7, #3155]	@ zero_extendqisi2
 1615 054a 01FB03F3 		mul	r3, r1, r3
 1616 054e 1A44     		add	r2, r2, r3
 1617 0550 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1618 0554 1A44     		add	r2, r2, r3
 1619 0556 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 1620 055a D31A     		subs	r3, r2, r3
 1621 055c 013B     		subs	r3, r3, #1
 1622 055e 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 1623 0562 07F12001 		add	r1, r7, #32
 1624 0566 0A44     		add	r2, r2, r1
 1625 0568 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1626 056a 07F15802 		add	r2, r7, #88
 1627 056e D154     		strb	r1, [r2, r3]
 479:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1628              		.loc 1 479 0 discriminator 3
 1629 0570 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 1630 0574 0133     		adds	r3, r3, #1
 1631 0576 87F8563C 		strb	r3, [r7, #3158]
 1632              	.L110:
 479:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1633              		.loc 1 479 0 is_stmt 0 discriminator 1
 1634 057a 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 1635 057e 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1636 0582 9A42     		cmp	r2, r3
 1637 0584 D7D3     		bcc	.L111
 476:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1638              		.loc 1 476 0 is_stmt 1 discriminator 2
 1639 0586 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1640 058a 0133     		adds	r3, r3, #1
 1641 058c 87F8573C 		strb	r3, [r7, #3159]
 1642              	.L109:
 476:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1643              		.loc 1 476 0 is_stmt 0 discriminator 1
 1644 0590 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1645 0594 3A1D     		adds	r2, r7, #4
 1646 0596 1268     		ldr	r2, [r2]
 1647 0598 1344     		add	r3, r3, r2
 1648 059a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1649 059c 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 1650 05a0 9A42     		cmp	r2, r3
 1651 05a2 B2D3     		bcc	.L112
 481:..\src/command_processing.c ****                         }
 482:..\src/command_processing.c ****                     }
 483:..\src/command_processing.c ****                     break;   
 1652              		.loc 1 483 0 is_stmt 1 discriminator 7
 1653 05a4 00BF     		nop
 1654 05a6 01F000B9 		b	.L113
 1655              	.L79:
 484:..\src/command_processing.c ****             }
 485:..\src/command_processing.c ****         }
 486:..\src/command_processing.c ****         else {
 487:..\src/command_processing.c ****             
 488:..\src/command_processing.c **** // DO NOT MODIFY THE FUNCTION BEFORE THIS LINE
 489:..\src/command_processing.c ****             
 490:..\src/command_processing.c **** // MODIFY CUSTOM PARAM            
 491:..\src/command_processing.c ****                 switch(idx+1){
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 55


 1656              		.loc 1 491 0
 1657 05aa 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1658 05ae 0133     		adds	r3, r3, #1
 1659 05b0 023B     		subs	r3, r3, #2
 1660 05b2 332B     		cmp	r3, #51
 1661 05b4 01F2F880 		bhi	.L283
 1662 05b8 01A2     		adr	r2, .L116
 1663 05ba 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1664 05be 00BF     		.p2align 2
 1665              	.L116:
 1666 05c0 91060000 		.word	.L115+1
 1667 05c4 B1090000 		.word	.L117+1
 1668 05c8 A9170000 		.word	.L283+1
 1669 05cc A9170000 		.word	.L283+1
 1670 05d0 A9170000 		.word	.L283+1
 1671 05d4 A9170000 		.word	.L283+1
 1672 05d8 CD0C0000 		.word	.L118+1
 1673 05dc A9170000 		.word	.L283+1
 1674 05e0 A9170000 		.word	.L283+1
 1675 05e4 BD0D0000 		.word	.L119+1
 1676 05e8 A9170000 		.word	.L283+1
 1677 05ec A9170000 		.word	.L283+1
 1678 05f0 A9170000 		.word	.L283+1
 1679 05f4 A9170000 		.word	.L283+1
 1680 05f8 A9170000 		.word	.L283+1
 1681 05fc A9170000 		.word	.L283+1
 1682 0600 A9170000 		.word	.L283+1
 1683 0604 A9170000 		.word	.L283+1
 1684 0608 A9170000 		.word	.L283+1
 1685 060c A9170000 		.word	.L283+1
 1686 0610 A9170000 		.word	.L283+1
 1687 0614 EB0E0000 		.word	.L120+1
 1688 0618 A9170000 		.word	.L283+1
 1689 061c A9170000 		.word	.L283+1
 1690 0620 A9170000 		.word	.L283+1
 1691 0624 A9170000 		.word	.L283+1
 1692 0628 A9170000 		.word	.L283+1
 1693 062c A9170000 		.word	.L283+1
 1694 0630 A9170000 		.word	.L283+1
 1695 0634 A9170000 		.word	.L283+1
 1696 0638 A9170000 		.word	.L283+1
 1697 063c A9170000 		.word	.L283+1
 1698 0640 A9170000 		.word	.L283+1
 1699 0644 A9170000 		.word	.L283+1
 1700 0648 A9170000 		.word	.L283+1
 1701 064c A9170000 		.word	.L283+1
 1702 0650 A9170000 		.word	.L283+1
 1703 0654 A9170000 		.word	.L283+1
 1704 0658 A9170000 		.word	.L283+1
 1705 065c A9170000 		.word	.L283+1
 1706 0660 A9170000 		.word	.L283+1
 1707 0664 A9170000 		.word	.L283+1
 1708 0668 730F0000 		.word	.L121+1
 1709 066c 93120000 		.word	.L122+1
 1710 0670 A9170000 		.word	.L283+1
 1711 0674 A9170000 		.word	.L283+1
 1712 0678 A9170000 		.word	.L283+1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 56


 1713 067c A9170000 		.word	.L283+1
 1714 0680 AF150000 		.word	.L123+1
 1715 0684 A9170000 		.word	.L283+1
 1716 0688 A9170000 		.word	.L283+1
 1717 068c 73160000 		.word	.L124+1
 1718              		.p2align 1
 1719              	.L115:
 492:..\src/command_processing.c ****                     case 2:         // Position PID
 493:..\src/command_processing.c ****                         if(c_mem.motor[MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 1720              		.loc 1 493 0
 1721 0690 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 1722 0694 C549     		ldr	r1, .L289
 1723 0696 1346     		mov	r3, r2
 1724 0698 DB00     		lsls	r3, r3, #3
 1725 069a 9B1A     		subs	r3, r3, r2
 1726 069c 1B01     		lsls	r3, r3, #4
 1727 069e 0B44     		add	r3, r3, r1
 1728 06a0 03F20F13 		addw	r3, r3, #271
 1729 06a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1730 06a6 032B     		cmp	r3, #3
 1731 06a8 00F0C080 		beq	.L125
 494:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_p / 65536;
 1732              		.loc 1 494 0
 1733 06ac 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 1734 06b0 BE49     		ldr	r1, .L289
 1735 06b2 1346     		mov	r3, r2
 1736 06b4 DB00     		lsls	r3, r3, #3
 1737 06b6 9B1A     		subs	r3, r3, r2
 1738 06b8 1B01     		lsls	r3, r3, #4
 1739 06ba 0B44     		add	r3, r3, r1
 1740 06bc B033     		adds	r3, r3, #176
 1741 06be 1B68     		ldr	r3, [r3]
 1742 06c0 1846     		mov	r0, r3
 1743 06c2 FFF7FEFF 		bl	__aeabi_i2f
 1744 06c6 0346     		mov	r3, r0
 1745 06c8 4FF08F41 		mov	r1, #1199570944
 1746 06cc 1846     		mov	r0, r3
 1747 06ce FFF7FEFF 		bl	__aeabi_fdiv
 1748 06d2 0346     		mov	r3, r0
 1749 06d4 1A46     		mov	r2, r3
 1750 06d6 07F12003 		add	r3, r7, #32
 1751 06da 1A60     		str	r2, [r3]	@ float
 495:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 1752              		.loc 1 495 0
 1753 06dc 0023     		movs	r3, #0
 1754 06de 87F8573C 		strb	r3, [r7, #3159]
 1755 06e2 1AE0     		b	.L126
 1756              	.L127:
 496:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 1757              		.loc 1 496 0 discriminator 3
 1758 06e4 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1759 06e8 3222     		movs	r2, #50
 1760 06ea 02FB03F3 		mul	r3, r2, r3
 1761 06ee 1A1D     		adds	r2, r3, #4
 1762 06f0 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1763 06f4 1A44     		add	r2, r2, r3
 1764 06f6 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 57


 1765 06fa D31A     		subs	r3, r2, r3
 1766 06fc 013B     		subs	r3, r3, #1
 1767 06fe 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 1768 0702 07F12001 		add	r1, r7, #32
 1769 0706 0A44     		add	r2, r2, r1
 1770 0708 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1771 070a 07F15802 		add	r2, r7, #88
 1772 070e D154     		strb	r1, [r2, r3]
 495:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 1773              		.loc 1 495 0 discriminator 3
 1774 0710 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1775 0714 0133     		adds	r3, r3, #1
 1776 0716 87F8573C 		strb	r3, [r7, #3159]
 1777              	.L126:
 495:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 1778              		.loc 1 495 0 is_stmt 0 discriminator 1
 1779 071a 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 1780 071e 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1781 0722 9A42     		cmp	r2, r3
 1782 0724 DED3     		bcc	.L127
 497:..\src/command_processing.c ****                             }
 498:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_i / 65536;
 1783              		.loc 1 498 0 is_stmt 1
 1784 0726 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 1785 072a A049     		ldr	r1, .L289
 1786 072c 1346     		mov	r3, r2
 1787 072e DB00     		lsls	r3, r3, #3
 1788 0730 9B1A     		subs	r3, r3, r2
 1789 0732 1B01     		lsls	r3, r3, #4
 1790 0734 0B44     		add	r3, r3, r1
 1791 0736 B433     		adds	r3, r3, #180
 1792 0738 1B68     		ldr	r3, [r3]
 1793 073a 1846     		mov	r0, r3
 1794 073c FFF7FEFF 		bl	__aeabi_i2f
 1795 0740 0346     		mov	r3, r0
 1796 0742 4FF08F41 		mov	r1, #1199570944
 1797 0746 1846     		mov	r0, r3
 1798 0748 FFF7FEFF 		bl	__aeabi_fdiv
 1799 074c 0346     		mov	r3, r0
 1800 074e 1A46     		mov	r2, r3
 1801 0750 07F12003 		add	r3, r7, #32
 1802 0754 1A60     		str	r2, [r3]	@ float
 499:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 1803              		.loc 1 499 0
 1804 0756 0023     		movs	r3, #0
 1805 0758 87F8573C 		strb	r3, [r7, #3159]
 1806 075c 1DE0     		b	.L128
 1807              	.L129:
 500:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 1808              		.loc 1 500 0 discriminator 3
 1809 075e 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1810 0762 3222     		movs	r2, #50
 1811 0764 02FB03F3 		mul	r3, r2, r3
 1812 0768 1A1D     		adds	r2, r3, #4
 1813 076a 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1814 076e 1A44     		add	r2, r2, r3
 1815 0770 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 58


 1816 0774 1A44     		add	r2, r2, r3
 1817 0776 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1818 077a D31A     		subs	r3, r2, r3
 1819 077c 013B     		subs	r3, r3, #1
 1820 077e 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 1821 0782 07F12001 		add	r1, r7, #32
 1822 0786 0A44     		add	r2, r2, r1
 1823 0788 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1824 078a 07F15802 		add	r2, r7, #88
 1825 078e D154     		strb	r1, [r2, r3]
 499:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 1826              		.loc 1 499 0 discriminator 3
 1827 0790 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1828 0794 0133     		adds	r3, r3, #1
 1829 0796 87F8573C 		strb	r3, [r7, #3159]
 1830              	.L128:
 499:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 1831              		.loc 1 499 0 is_stmt 0 discriminator 1
 1832 079a 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 1833 079e 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1834 07a2 9A42     		cmp	r2, r3
 1835 07a4 DBD3     		bcc	.L129
 501:..\src/command_processing.c ****                             }
 502:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_d / 65536;
 1836              		.loc 1 502 0 is_stmt 1
 1837 07a6 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 1838 07aa 8049     		ldr	r1, .L289
 1839 07ac 1346     		mov	r3, r2
 1840 07ae DB00     		lsls	r3, r3, #3
 1841 07b0 9B1A     		subs	r3, r3, r2
 1842 07b2 1B01     		lsls	r3, r3, #4
 1843 07b4 0B44     		add	r3, r3, r1
 1844 07b6 B833     		adds	r3, r3, #184
 1845 07b8 1B68     		ldr	r3, [r3]
 1846 07ba 1846     		mov	r0, r3
 1847 07bc FFF7FEFF 		bl	__aeabi_i2f
 1848 07c0 0346     		mov	r3, r0
 1849 07c2 4FF08F41 		mov	r1, #1199570944
 1850 07c6 1846     		mov	r0, r3
 1851 07c8 FFF7FEFF 		bl	__aeabi_fdiv
 1852 07cc 0346     		mov	r3, r0
 1853 07ce 1A46     		mov	r2, r3
 1854 07d0 07F12003 		add	r3, r7, #32
 1855 07d4 1A60     		str	r2, [r3]	@ float
 503:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 1856              		.loc 1 503 0
 1857 07d6 0023     		movs	r3, #0
 1858 07d8 87F8573C 		strb	r3, [r7, #3159]
 1859 07dc 1EE0     		b	.L130
 1860              	.L131:
 504:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 1861              		.loc 1 504 0 discriminator 3
 1862 07de 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1863 07e2 3222     		movs	r2, #50
 1864 07e4 02FB03F3 		mul	r3, r2, r3
 1865 07e8 1A1D     		adds	r2, r3, #4
 1866 07ea 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 59


 1867 07ee 5B00     		lsls	r3, r3, #1
 1868 07f0 1A44     		add	r2, r2, r3
 1869 07f2 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1870 07f6 1A44     		add	r2, r2, r3
 1871 07f8 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1872 07fc D31A     		subs	r3, r2, r3
 1873 07fe 013B     		subs	r3, r3, #1
 1874 0800 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 1875 0804 07F12001 		add	r1, r7, #32
 1876 0808 0A44     		add	r2, r2, r1
 1877 080a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1878 080c 07F15802 		add	r2, r7, #88
 1879 0810 D154     		strb	r1, [r2, r3]
 503:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 1880              		.loc 1 503 0 discriminator 3
 1881 0812 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1882 0816 0133     		adds	r3, r3, #1
 1883 0818 87F8573C 		strb	r3, [r7, #3159]
 1884              	.L130:
 503:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 1885              		.loc 1 503 0 is_stmt 0 discriminator 1
 1886 081c 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 1887 0820 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1888 0824 9A42     		cmp	r2, r3
 1889 0826 DAD3     		bcc	.L131
 505:..\src/command_processing.c ****                             } 
 506:..\src/command_processing.c ****                         }
 507:..\src/command_processing.c ****                         else {
 508:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_p_dl / 65536;
 509:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 510:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 511:..\src/command_processing.c ****                             }
 512:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_i_dl / 65536;
 513:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 514:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 515:..\src/command_processing.c ****                             }
 516:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_d_dl / 65536;
 517:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 518:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 519:..\src/command_processing.c ****                             }
 520:..\src/command_processing.c ****                         }
 521:..\src/command_processing.c ****                         break;
 1890              		.loc 1 521 0 is_stmt 1
 1891 0828 00F0BFBF 		b	.L113
 1892              	.L125:
 508:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 1893              		.loc 1 508 0
 1894 082c 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 1895 0830 5E49     		ldr	r1, .L289
 1896 0832 1346     		mov	r3, r2
 1897 0834 DB00     		lsls	r3, r3, #3
 1898 0836 9B1A     		subs	r3, r3, r2
 1899 0838 1B01     		lsls	r3, r3, #4
 1900 083a 0B44     		add	r3, r3, r1
 1901 083c C833     		adds	r3, r3, #200
 1902 083e 1B68     		ldr	r3, [r3]
 1903 0840 1846     		mov	r0, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 60


 1904 0842 FFF7FEFF 		bl	__aeabi_i2f
 1905 0846 0346     		mov	r3, r0
 1906 0848 4FF08F41 		mov	r1, #1199570944
 1907 084c 1846     		mov	r0, r3
 1908 084e FFF7FEFF 		bl	__aeabi_fdiv
 1909 0852 0346     		mov	r3, r0
 1910 0854 1A46     		mov	r2, r3
 1911 0856 07F12003 		add	r3, r7, #32
 1912 085a 1A60     		str	r2, [r3]	@ float
 509:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 1913              		.loc 1 509 0
 1914 085c 0023     		movs	r3, #0
 1915 085e 87F8573C 		strb	r3, [r7, #3159]
 1916 0862 1AE0     		b	.L133
 1917              	.L134:
 510:..\src/command_processing.c ****                             }
 1918              		.loc 1 510 0 discriminator 3
 1919 0864 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1920 0868 3222     		movs	r2, #50
 1921 086a 02FB03F3 		mul	r3, r2, r3
 1922 086e 1A1D     		adds	r2, r3, #4
 1923 0870 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1924 0874 1A44     		add	r2, r2, r3
 1925 0876 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1926 087a D31A     		subs	r3, r2, r3
 1927 087c 013B     		subs	r3, r3, #1
 1928 087e 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 1929 0882 07F12001 		add	r1, r7, #32
 1930 0886 0A44     		add	r2, r2, r1
 1931 0888 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1932 088a 07F15802 		add	r2, r7, #88
 1933 088e D154     		strb	r1, [r2, r3]
 509:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 1934              		.loc 1 509 0 discriminator 3
 1935 0890 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1936 0894 0133     		adds	r3, r3, #1
 1937 0896 87F8573C 		strb	r3, [r7, #3159]
 1938              	.L133:
 509:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 1939              		.loc 1 509 0 is_stmt 0 discriminator 1
 1940 089a 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 1941 089e 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1942 08a2 9A42     		cmp	r2, r3
 1943 08a4 DED3     		bcc	.L134
 512:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 1944              		.loc 1 512 0 is_stmt 1
 1945 08a6 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 1946 08aa 4049     		ldr	r1, .L289
 1947 08ac 1346     		mov	r3, r2
 1948 08ae DB00     		lsls	r3, r3, #3
 1949 08b0 9B1A     		subs	r3, r3, r2
 1950 08b2 1B01     		lsls	r3, r3, #4
 1951 08b4 0B44     		add	r3, r3, r1
 1952 08b6 CC33     		adds	r3, r3, #204
 1953 08b8 1B68     		ldr	r3, [r3]
 1954 08ba 1846     		mov	r0, r3
 1955 08bc FFF7FEFF 		bl	__aeabi_i2f
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 61


 1956 08c0 0346     		mov	r3, r0
 1957 08c2 4FF08F41 		mov	r1, #1199570944
 1958 08c6 1846     		mov	r0, r3
 1959 08c8 FFF7FEFF 		bl	__aeabi_fdiv
 1960 08cc 0346     		mov	r3, r0
 1961 08ce 1A46     		mov	r2, r3
 1962 08d0 07F12003 		add	r3, r7, #32
 1963 08d4 1A60     		str	r2, [r3]	@ float
 513:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 1964              		.loc 1 513 0
 1965 08d6 0023     		movs	r3, #0
 1966 08d8 87F8573C 		strb	r3, [r7, #3159]
 1967 08dc 1DE0     		b	.L135
 1968              	.L136:
 514:..\src/command_processing.c ****                             }
 1969              		.loc 1 514 0 discriminator 3
 1970 08de 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1971 08e2 3222     		movs	r2, #50
 1972 08e4 02FB03F3 		mul	r3, r2, r3
 1973 08e8 1A1D     		adds	r2, r3, #4
 1974 08ea 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1975 08ee 1A44     		add	r2, r2, r3
 1976 08f0 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1977 08f4 1A44     		add	r2, r2, r3
 1978 08f6 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1979 08fa D31A     		subs	r3, r2, r3
 1980 08fc 013B     		subs	r3, r3, #1
 1981 08fe 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 1982 0902 07F12001 		add	r1, r7, #32
 1983 0906 0A44     		add	r2, r2, r1
 1984 0908 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1985 090a 07F15802 		add	r2, r7, #88
 1986 090e D154     		strb	r1, [r2, r3]
 513:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 1987              		.loc 1 513 0 discriminator 3
 1988 0910 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1989 0914 0133     		adds	r3, r3, #1
 1990 0916 87F8573C 		strb	r3, [r7, #3159]
 1991              	.L135:
 513:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 1992              		.loc 1 513 0 is_stmt 0 discriminator 1
 1993 091a 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 1994 091e 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1995 0922 9A42     		cmp	r2, r3
 1996 0924 DBD3     		bcc	.L136
 516:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 1997              		.loc 1 516 0 is_stmt 1
 1998 0926 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 1999 092a 2049     		ldr	r1, .L289
 2000 092c 1346     		mov	r3, r2
 2001 092e DB00     		lsls	r3, r3, #3
 2002 0930 9B1A     		subs	r3, r3, r2
 2003 0932 1B01     		lsls	r3, r3, #4
 2004 0934 0B44     		add	r3, r3, r1
 2005 0936 D033     		adds	r3, r3, #208
 2006 0938 1B68     		ldr	r3, [r3]
 2007 093a 1846     		mov	r0, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 62


 2008 093c FFF7FEFF 		bl	__aeabi_i2f
 2009 0940 0346     		mov	r3, r0
 2010 0942 4FF08F41 		mov	r1, #1199570944
 2011 0946 1846     		mov	r0, r3
 2012 0948 FFF7FEFF 		bl	__aeabi_fdiv
 2013 094c 0346     		mov	r3, r0
 2014 094e 1A46     		mov	r2, r3
 2015 0950 07F12003 		add	r3, r7, #32
 2016 0954 1A60     		str	r2, [r3]	@ float
 517:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2017              		.loc 1 517 0
 2018 0956 0023     		movs	r3, #0
 2019 0958 87F8573C 		strb	r3, [r7, #3159]
 2020 095c 1EE0     		b	.L137
 2021              	.L138:
 518:..\src/command_processing.c ****                             }
 2022              		.loc 1 518 0 discriminator 3
 2023 095e 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 2024 0962 3222     		movs	r2, #50
 2025 0964 02FB03F3 		mul	r3, r2, r3
 2026 0968 1A1D     		adds	r2, r3, #4
 2027 096a 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2028 096e 5B00     		lsls	r3, r3, #1
 2029 0970 1A44     		add	r2, r2, r3
 2030 0972 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2031 0976 1A44     		add	r2, r2, r3
 2032 0978 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2033 097c D31A     		subs	r3, r2, r3
 2034 097e 013B     		subs	r3, r3, #1
 2035 0980 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2036 0984 07F12001 		add	r1, r7, #32
 2037 0988 0A44     		add	r2, r2, r1
 2038 098a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2039 098c 07F15802 		add	r2, r7, #88
 2040 0990 D154     		strb	r1, [r2, r3]
 517:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2041              		.loc 1 517 0 discriminator 3
 2042 0992 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2043 0996 0133     		adds	r3, r3, #1
 2044 0998 87F8573C 		strb	r3, [r7, #3159]
 2045              	.L137:
 517:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2046              		.loc 1 517 0 is_stmt 0 discriminator 1
 2047 099c 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2048 09a0 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2049 09a4 9A42     		cmp	r2, r3
 2050 09a6 DAD3     		bcc	.L138
 2051              		.loc 1 521 0 is_stmt 1
 2052 09a8 00F0FFBE 		b	.L113
 2053              	.L290:
 2054              		.align	2
 2055              	.L289:
 2056 09ac 00000000 		.word	c_mem
 2057              	.L117:
 522:..\src/command_processing.c ****                         
 523:..\src/command_processing.c ****                     case 3:         //Current PID
 524:..\src/command_processing.c ****                         if(c_mem.motor[MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 63


 2058              		.loc 1 524 0
 2059 09b0 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 2060 09b4 C749     		ldr	r1, .L291
 2061 09b6 1346     		mov	r3, r2
 2062 09b8 DB00     		lsls	r3, r3, #3
 2063 09ba 9B1A     		subs	r3, r3, r2
 2064 09bc 1B01     		lsls	r3, r3, #4
 2065 09be 0B44     		add	r3, r3, r1
 2066 09c0 03F20F13 		addw	r3, r3, #271
 2067 09c4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2068 09c6 032B     		cmp	r3, #3
 2069 09c8 00F0C080 		beq	.L139
 525:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_p_c / 65536;
 2070              		.loc 1 525 0
 2071 09cc 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 2072 09d0 C049     		ldr	r1, .L291
 2073 09d2 1346     		mov	r3, r2
 2074 09d4 DB00     		lsls	r3, r3, #3
 2075 09d6 9B1A     		subs	r3, r3, r2
 2076 09d8 1B01     		lsls	r3, r3, #4
 2077 09da 0B44     		add	r3, r3, r1
 2078 09dc BC33     		adds	r3, r3, #188
 2079 09de 1B68     		ldr	r3, [r3]
 2080 09e0 1846     		mov	r0, r3
 2081 09e2 FFF7FEFF 		bl	__aeabi_i2f
 2082 09e6 0346     		mov	r3, r0
 2083 09e8 4FF08F41 		mov	r1, #1199570944
 2084 09ec 1846     		mov	r0, r3
 2085 09ee FFF7FEFF 		bl	__aeabi_fdiv
 2086 09f2 0346     		mov	r3, r0
 2087 09f4 1A46     		mov	r2, r3
 2088 09f6 07F12003 		add	r3, r7, #32
 2089 09fa 1A60     		str	r2, [r3]	@ float
 526:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2090              		.loc 1 526 0
 2091 09fc 0023     		movs	r3, #0
 2092 09fe 87F8573C 		strb	r3, [r7, #3159]
 2093 0a02 1AE0     		b	.L140
 2094              	.L141:
 527:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2095              		.loc 1 527 0 discriminator 3
 2096 0a04 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 2097 0a08 3222     		movs	r2, #50
 2098 0a0a 02FB03F3 		mul	r3, r2, r3
 2099 0a0e 1A1D     		adds	r2, r3, #4
 2100 0a10 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2101 0a14 1A44     		add	r2, r2, r3
 2102 0a16 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2103 0a1a D31A     		subs	r3, r2, r3
 2104 0a1c 013B     		subs	r3, r3, #1
 2105 0a1e 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2106 0a22 07F12001 		add	r1, r7, #32
 2107 0a26 0A44     		add	r2, r2, r1
 2108 0a28 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2109 0a2a 07F15802 		add	r2, r7, #88
 2110 0a2e D154     		strb	r1, [r2, r3]
 526:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 64


 2111              		.loc 1 526 0 discriminator 3
 2112 0a30 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2113 0a34 0133     		adds	r3, r3, #1
 2114 0a36 87F8573C 		strb	r3, [r7, #3159]
 2115              	.L140:
 526:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2116              		.loc 1 526 0 is_stmt 0 discriminator 1
 2117 0a3a 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2118 0a3e 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2119 0a42 9A42     		cmp	r2, r3
 2120 0a44 DED3     		bcc	.L141
 528:..\src/command_processing.c ****                             }
 529:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_i_c / 65536;
 2121              		.loc 1 529 0 is_stmt 1
 2122 0a46 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 2123 0a4a A249     		ldr	r1, .L291
 2124 0a4c 1346     		mov	r3, r2
 2125 0a4e DB00     		lsls	r3, r3, #3
 2126 0a50 9B1A     		subs	r3, r3, r2
 2127 0a52 1B01     		lsls	r3, r3, #4
 2128 0a54 0B44     		add	r3, r3, r1
 2129 0a56 C033     		adds	r3, r3, #192
 2130 0a58 1B68     		ldr	r3, [r3]
 2131 0a5a 1846     		mov	r0, r3
 2132 0a5c FFF7FEFF 		bl	__aeabi_i2f
 2133 0a60 0346     		mov	r3, r0
 2134 0a62 4FF08F41 		mov	r1, #1199570944
 2135 0a66 1846     		mov	r0, r3
 2136 0a68 FFF7FEFF 		bl	__aeabi_fdiv
 2137 0a6c 0346     		mov	r3, r0
 2138 0a6e 1A46     		mov	r2, r3
 2139 0a70 07F12003 		add	r3, r7, #32
 2140 0a74 1A60     		str	r2, [r3]	@ float
 530:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2141              		.loc 1 530 0
 2142 0a76 0023     		movs	r3, #0
 2143 0a78 87F8573C 		strb	r3, [r7, #3159]
 2144 0a7c 1DE0     		b	.L142
 2145              	.L143:
 531:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2146              		.loc 1 531 0 discriminator 3
 2147 0a7e 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 2148 0a82 3222     		movs	r2, #50
 2149 0a84 02FB03F3 		mul	r3, r2, r3
 2150 0a88 1A1D     		adds	r2, r3, #4
 2151 0a8a 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2152 0a8e 1A44     		add	r2, r2, r3
 2153 0a90 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2154 0a94 1A44     		add	r2, r2, r3
 2155 0a96 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2156 0a9a D31A     		subs	r3, r2, r3
 2157 0a9c 013B     		subs	r3, r3, #1
 2158 0a9e 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2159 0aa2 07F12001 		add	r1, r7, #32
 2160 0aa6 0A44     		add	r2, r2, r1
 2161 0aa8 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2162 0aaa 07F15802 		add	r2, r7, #88
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 65


 2163 0aae D154     		strb	r1, [r2, r3]
 530:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2164              		.loc 1 530 0 discriminator 3
 2165 0ab0 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2166 0ab4 0133     		adds	r3, r3, #1
 2167 0ab6 87F8573C 		strb	r3, [r7, #3159]
 2168              	.L142:
 530:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2169              		.loc 1 530 0 is_stmt 0 discriminator 1
 2170 0aba 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2171 0abe 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2172 0ac2 9A42     		cmp	r2, r3
 2173 0ac4 DBD3     		bcc	.L143
 532:..\src/command_processing.c ****                             }
 533:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_d_c / 65536;
 2174              		.loc 1 533 0 is_stmt 1
 2175 0ac6 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 2176 0aca 8249     		ldr	r1, .L291
 2177 0acc 1346     		mov	r3, r2
 2178 0ace DB00     		lsls	r3, r3, #3
 2179 0ad0 9B1A     		subs	r3, r3, r2
 2180 0ad2 1B01     		lsls	r3, r3, #4
 2181 0ad4 0B44     		add	r3, r3, r1
 2182 0ad6 C433     		adds	r3, r3, #196
 2183 0ad8 1B68     		ldr	r3, [r3]
 2184 0ada 1846     		mov	r0, r3
 2185 0adc FFF7FEFF 		bl	__aeabi_i2f
 2186 0ae0 0346     		mov	r3, r0
 2187 0ae2 4FF08F41 		mov	r1, #1199570944
 2188 0ae6 1846     		mov	r0, r3
 2189 0ae8 FFF7FEFF 		bl	__aeabi_fdiv
 2190 0aec 0346     		mov	r3, r0
 2191 0aee 1A46     		mov	r2, r3
 2192 0af0 07F12003 		add	r3, r7, #32
 2193 0af4 1A60     		str	r2, [r3]	@ float
 534:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2194              		.loc 1 534 0
 2195 0af6 0023     		movs	r3, #0
 2196 0af8 87F8573C 		strb	r3, [r7, #3159]
 2197 0afc 1EE0     		b	.L144
 2198              	.L145:
 535:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2199              		.loc 1 535 0 discriminator 3
 2200 0afe 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 2201 0b02 3222     		movs	r2, #50
 2202 0b04 02FB03F3 		mul	r3, r2, r3
 2203 0b08 1A1D     		adds	r2, r3, #4
 2204 0b0a 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2205 0b0e 5B00     		lsls	r3, r3, #1
 2206 0b10 1A44     		add	r2, r2, r3
 2207 0b12 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2208 0b16 1A44     		add	r2, r2, r3
 2209 0b18 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2210 0b1c D31A     		subs	r3, r2, r3
 2211 0b1e 013B     		subs	r3, r3, #1
 2212 0b20 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2213 0b24 07F12001 		add	r1, r7, #32
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 66


 2214 0b28 0A44     		add	r2, r2, r1
 2215 0b2a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2216 0b2c 07F15802 		add	r2, r7, #88
 2217 0b30 D154     		strb	r1, [r2, r3]
 534:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2218              		.loc 1 534 0 discriminator 3
 2219 0b32 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2220 0b36 0133     		adds	r3, r3, #1
 2221 0b38 87F8573C 		strb	r3, [r7, #3159]
 2222              	.L144:
 534:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2223              		.loc 1 534 0 is_stmt 0 discriminator 1
 2224 0b3c 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2225 0b40 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2226 0b44 9A42     		cmp	r2, r3
 2227 0b46 DAD3     		bcc	.L145
 536:..\src/command_processing.c ****                             }
 537:..\src/command_processing.c ****                         }
 538:..\src/command_processing.c ****                         else {
 539:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_p_c_dl / 65536;
 540:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 541:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 542:..\src/command_processing.c ****                             }
 543:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_i_c_dl / 65536;
 544:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 545:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 546:..\src/command_processing.c ****                             }
 547:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_d_c_dl / 65536;
 548:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 549:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 550:..\src/command_processing.c ****                             }
 551:..\src/command_processing.c ****                         }            
 552:..\src/command_processing.c ****                         break;  
 2228              		.loc 1 552 0 is_stmt 1
 2229 0b48 00F02FBE 		b	.L113
 2230              	.L139:
 539:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2231              		.loc 1 539 0
 2232 0b4c 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 2233 0b50 6049     		ldr	r1, .L291
 2234 0b52 1346     		mov	r3, r2
 2235 0b54 DB00     		lsls	r3, r3, #3
 2236 0b56 9B1A     		subs	r3, r3, r2
 2237 0b58 1B01     		lsls	r3, r3, #4
 2238 0b5a 0B44     		add	r3, r3, r1
 2239 0b5c D433     		adds	r3, r3, #212
 2240 0b5e 1B68     		ldr	r3, [r3]
 2241 0b60 1846     		mov	r0, r3
 2242 0b62 FFF7FEFF 		bl	__aeabi_i2f
 2243 0b66 0346     		mov	r3, r0
 2244 0b68 4FF08F41 		mov	r1, #1199570944
 2245 0b6c 1846     		mov	r0, r3
 2246 0b6e FFF7FEFF 		bl	__aeabi_fdiv
 2247 0b72 0346     		mov	r3, r0
 2248 0b74 1A46     		mov	r2, r3
 2249 0b76 07F12003 		add	r3, r7, #32
 2250 0b7a 1A60     		str	r2, [r3]	@ float
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 67


 540:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2251              		.loc 1 540 0
 2252 0b7c 0023     		movs	r3, #0
 2253 0b7e 87F8573C 		strb	r3, [r7, #3159]
 2254 0b82 1AE0     		b	.L147
 2255              	.L148:
 541:..\src/command_processing.c ****                             }
 2256              		.loc 1 541 0 discriminator 3
 2257 0b84 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 2258 0b88 3222     		movs	r2, #50
 2259 0b8a 02FB03F3 		mul	r3, r2, r3
 2260 0b8e 1A1D     		adds	r2, r3, #4
 2261 0b90 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2262 0b94 1A44     		add	r2, r2, r3
 2263 0b96 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2264 0b9a D31A     		subs	r3, r2, r3
 2265 0b9c 013B     		subs	r3, r3, #1
 2266 0b9e 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2267 0ba2 07F12001 		add	r1, r7, #32
 2268 0ba6 0A44     		add	r2, r2, r1
 2269 0ba8 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2270 0baa 07F15802 		add	r2, r7, #88
 2271 0bae D154     		strb	r1, [r2, r3]
 540:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2272              		.loc 1 540 0 discriminator 3
 2273 0bb0 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2274 0bb4 0133     		adds	r3, r3, #1
 2275 0bb6 87F8573C 		strb	r3, [r7, #3159]
 2276              	.L147:
 540:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2277              		.loc 1 540 0 is_stmt 0 discriminator 1
 2278 0bba 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2279 0bbe 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2280 0bc2 9A42     		cmp	r2, r3
 2281 0bc4 DED3     		bcc	.L148
 543:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2282              		.loc 1 543 0 is_stmt 1
 2283 0bc6 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 2284 0bca 4249     		ldr	r1, .L291
 2285 0bcc 1346     		mov	r3, r2
 2286 0bce DB00     		lsls	r3, r3, #3
 2287 0bd0 9B1A     		subs	r3, r3, r2
 2288 0bd2 1B01     		lsls	r3, r3, #4
 2289 0bd4 0B44     		add	r3, r3, r1
 2290 0bd6 D833     		adds	r3, r3, #216
 2291 0bd8 1B68     		ldr	r3, [r3]
 2292 0bda 1846     		mov	r0, r3
 2293 0bdc FFF7FEFF 		bl	__aeabi_i2f
 2294 0be0 0346     		mov	r3, r0
 2295 0be2 4FF08F41 		mov	r1, #1199570944
 2296 0be6 1846     		mov	r0, r3
 2297 0be8 FFF7FEFF 		bl	__aeabi_fdiv
 2298 0bec 0346     		mov	r3, r0
 2299 0bee 1A46     		mov	r2, r3
 2300 0bf0 07F12003 		add	r3, r7, #32
 2301 0bf4 1A60     		str	r2, [r3]	@ float
 544:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 68


 2302              		.loc 1 544 0
 2303 0bf6 0023     		movs	r3, #0
 2304 0bf8 87F8573C 		strb	r3, [r7, #3159]
 2305 0bfc 1DE0     		b	.L149
 2306              	.L150:
 545:..\src/command_processing.c ****                             }
 2307              		.loc 1 545 0 discriminator 3
 2308 0bfe 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 2309 0c02 3222     		movs	r2, #50
 2310 0c04 02FB03F3 		mul	r3, r2, r3
 2311 0c08 1A1D     		adds	r2, r3, #4
 2312 0c0a 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2313 0c0e 1A44     		add	r2, r2, r3
 2314 0c10 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2315 0c14 1A44     		add	r2, r2, r3
 2316 0c16 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2317 0c1a D31A     		subs	r3, r2, r3
 2318 0c1c 013B     		subs	r3, r3, #1
 2319 0c1e 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2320 0c22 07F12001 		add	r1, r7, #32
 2321 0c26 0A44     		add	r2, r2, r1
 2322 0c28 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2323 0c2a 07F15802 		add	r2, r7, #88
 2324 0c2e D154     		strb	r1, [r2, r3]
 544:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2325              		.loc 1 544 0 discriminator 3
 2326 0c30 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2327 0c34 0133     		adds	r3, r3, #1
 2328 0c36 87F8573C 		strb	r3, [r7, #3159]
 2329              	.L149:
 544:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2330              		.loc 1 544 0 is_stmt 0 discriminator 1
 2331 0c3a 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2332 0c3e 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2333 0c42 9A42     		cmp	r2, r3
 2334 0c44 DBD3     		bcc	.L150
 547:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2335              		.loc 1 547 0 is_stmt 1
 2336 0c46 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 2337 0c4a 2249     		ldr	r1, .L291
 2338 0c4c 1346     		mov	r3, r2
 2339 0c4e DB00     		lsls	r3, r3, #3
 2340 0c50 9B1A     		subs	r3, r3, r2
 2341 0c52 1B01     		lsls	r3, r3, #4
 2342 0c54 0B44     		add	r3, r3, r1
 2343 0c56 DC33     		adds	r3, r3, #220
 2344 0c58 1B68     		ldr	r3, [r3]
 2345 0c5a 1846     		mov	r0, r3
 2346 0c5c FFF7FEFF 		bl	__aeabi_i2f
 2347 0c60 0346     		mov	r3, r0
 2348 0c62 4FF08F41 		mov	r1, #1199570944
 2349 0c66 1846     		mov	r0, r3
 2350 0c68 FFF7FEFF 		bl	__aeabi_fdiv
 2351 0c6c 0346     		mov	r3, r0
 2352 0c6e 1A46     		mov	r2, r3
 2353 0c70 07F12003 		add	r3, r7, #32
 2354 0c74 1A60     		str	r2, [r3]	@ float
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 69


 548:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2355              		.loc 1 548 0
 2356 0c76 0023     		movs	r3, #0
 2357 0c78 87F8573C 		strb	r3, [r7, #3159]
 2358 0c7c 1EE0     		b	.L151
 2359              	.L152:
 549:..\src/command_processing.c ****                             }
 2360              		.loc 1 549 0 discriminator 3
 2361 0c7e 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 2362 0c82 3222     		movs	r2, #50
 2363 0c84 02FB03F3 		mul	r3, r2, r3
 2364 0c88 1A1D     		adds	r2, r3, #4
 2365 0c8a 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2366 0c8e 5B00     		lsls	r3, r3, #1
 2367 0c90 1A44     		add	r2, r2, r3
 2368 0c92 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2369 0c96 1A44     		add	r2, r2, r3
 2370 0c98 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2371 0c9c D31A     		subs	r3, r2, r3
 2372 0c9e 013B     		subs	r3, r3, #1
 2373 0ca0 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2374 0ca4 07F12001 		add	r1, r7, #32
 2375 0ca8 0A44     		add	r2, r2, r1
 2376 0caa 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2377 0cac 07F15802 		add	r2, r7, #88
 2378 0cb0 D154     		strb	r1, [r2, r3]
 548:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2379              		.loc 1 548 0 discriminator 3
 2380 0cb2 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2381 0cb6 0133     		adds	r3, r3, #1
 2382 0cb8 87F8573C 		strb	r3, [r7, #3159]
 2383              	.L151:
 548:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2384              		.loc 1 548 0 is_stmt 0 discriminator 1
 2385 0cbc 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2386 0cc0 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2387 0cc4 9A42     		cmp	r2, r3
 2388 0cc6 DAD3     		bcc	.L152
 2389              		.loc 1 552 0 is_stmt 1
 2390 0cc8 00F06FBD 		b	.L113
 2391              	.L118:
 553:..\src/command_processing.c **** 
 554:..\src/command_processing.c ****                     case 8:         //Measurement Offset
 555:..\src/command_processing.c ****                         for (i=0; i<NUM_ITEMS[idx]; i++){
 2392              		.loc 1 555 0
 2393 0ccc 0023     		movs	r3, #0
 2394 0cce 87F8573C 		strb	r3, [r7, #3159]
 2395 0cd2 67E0     		b	.L153
 2396              	.L292:
 2397              		.align	2
 2398              	.L291:
 2399 0cd4 00000000 		.word	c_mem
 2400              	.L156:
 556:..\src/command_processing.c ****                             aux_int16 = (c_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] >>
 2401              		.loc 1 556 0
 2402 0cd8 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 2403 0cdc D849     		ldr	r1, .L293
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 70


 2404 0cde 1346     		mov	r3, r2
 2405 0ce0 DB00     		lsls	r3, r3, #3
 2406 0ce2 9B1A     		subs	r3, r3, r2
 2407 0ce4 1B01     		lsls	r3, r3, #4
 2408 0ce6 0B44     		add	r3, r3, r1
 2409 0ce8 03F58873 		add	r3, r3, #272
 2410 0cec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2411 0cee 1846     		mov	r0, r3
 2412 0cf0 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2413 0cf4 D349     		ldr	r1, .L293+4
 2414 0cf6 0346     		mov	r3, r0
 2415 0cf8 5B00     		lsls	r3, r3, #1
 2416 0cfa 0344     		add	r3, r3, r0
 2417 0cfc 9B00     		lsls	r3, r3, #2
 2418 0cfe 1344     		add	r3, r3, r2
 2419 0d00 6633     		adds	r3, r3, #102
 2420 0d02 51F82310 		ldr	r1, [r1, r3, lsl #2]
 2421 0d06 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 2422 0d0a CD48     		ldr	r0, .L293
 2423 0d0c 1346     		mov	r3, r2
 2424 0d0e DB00     		lsls	r3, r3, #3
 2425 0d10 9B1A     		subs	r3, r3, r2
 2426 0d12 1B01     		lsls	r3, r3, #4
 2427 0d14 0344     		add	r3, r3, r0
 2428 0d16 03F58873 		add	r3, r3, #272
 2429 0d1a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2430 0d1c 1C46     		mov	r4, r3
 2431 0d1e 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2432 0d22 C848     		ldr	r0, .L293+4
 2433 0d24 2346     		mov	r3, r4
 2434 0d26 5B00     		lsls	r3, r3, #1
 2435 0d28 2344     		add	r3, r3, r4
 2436 0d2a 1B01     		lsls	r3, r3, #4
 2437 0d2c 0344     		add	r3, r3, r0
 2438 0d2e 1344     		add	r3, r3, r2
 2439 0d30 03F29513 		addw	r3, r3, #405
 2440 0d34 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2441 0d36 41FA03F3 		asr	r3, r1, r3
 2442 0d3a 1AB2     		sxth	r2, r3
 2443 0d3c 07F11E03 		add	r3, r7, #30
 2444 0d40 1A80     		strh	r2, [r3]	@ movhi
 557:..\src/command_processing.c ****                             for(j = 0; j < sod; j++) {
 2445              		.loc 1 557 0
 2446 0d42 0023     		movs	r3, #0
 2447 0d44 87F8563C 		strb	r3, [r7, #3158]
 2448 0d48 21E0     		b	.L154
 2449              	.L155:
 558:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((cha
 2450              		.loc 1 558 0 discriminator 3
 2451 0d4a 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 2452 0d4e 3222     		movs	r2, #50
 2453 0d50 02FB03F3 		mul	r3, r2, r3
 2454 0d54 1A1D     		adds	r2, r3, #4
 2455 0d56 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2456 0d5a 97F8531C 		ldrb	r1, [r7, #3155]	@ zero_extendqisi2
 2457 0d5e 01FB03F3 		mul	r3, r1, r3
 2458 0d62 1A44     		add	r2, r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 71


 2459 0d64 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2460 0d68 1A44     		add	r2, r2, r3
 2461 0d6a 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 2462 0d6e D31A     		subs	r3, r2, r3
 2463 0d70 013B     		subs	r3, r3, #1
 2464 0d72 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 2465 0d76 07F11E01 		add	r1, r7, #30
 2466 0d7a 0A44     		add	r2, r2, r1
 2467 0d7c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2468 0d7e 07F15802 		add	r2, r7, #88
 2469 0d82 D154     		strb	r1, [r2, r3]
 557:..\src/command_processing.c ****                             for(j = 0; j < sod; j++) {
 2470              		.loc 1 557 0 discriminator 3
 2471 0d84 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 2472 0d88 0133     		adds	r3, r3, #1
 2473 0d8a 87F8563C 		strb	r3, [r7, #3158]
 2474              	.L154:
 557:..\src/command_processing.c ****                             for(j = 0; j < sod; j++) {
 2475              		.loc 1 557 0 is_stmt 0 discriminator 1
 2476 0d8e 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 2477 0d92 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2478 0d96 9A42     		cmp	r2, r3
 2479 0d98 D7D3     		bcc	.L155
 555:..\src/command_processing.c ****                             aux_int16 = (c_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] >>
 2480              		.loc 1 555 0 is_stmt 1 discriminator 2
 2481 0d9a 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2482 0d9e 0133     		adds	r3, r3, #1
 2483 0da0 87F8573C 		strb	r3, [r7, #3159]
 2484              	.L153:
 555:..\src/command_processing.c ****                             aux_int16 = (c_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] >>
 2485              		.loc 1 555 0 is_stmt 0 discriminator 1
 2486 0da4 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 2487 0da8 3A1D     		adds	r2, r7, #4
 2488 0daa 1268     		ldr	r2, [r2]
 2489 0dac 1344     		add	r3, r3, r2
 2490 0dae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2491 0db0 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2492 0db4 9A42     		cmp	r2, r3
 2493 0db6 8FD3     		bcc	.L156
 559:..\src/command_processing.c ****                             }
 560:..\src/command_processing.c ****                         }
 561:..\src/command_processing.c ****                         break;
 2494              		.loc 1 561 0 is_stmt 1
 2495 0db8 00F0F7BC 		b	.L113
 2496              	.L119:
 562:..\src/command_processing.c ****                 
 563:..\src/command_processing.c ****                     case 11:        //Position limits
 564:..\src/command_processing.c ****                         aux_int32 = (c_mem.motor[MOTOR_IDX].pos_lim_inf >> c_mem.enc[g_mem.motor[MO
 2497              		.loc 1 564 0
 2498 0dbc 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 2499 0dc0 A049     		ldr	r1, .L293+4
 2500 0dc2 1346     		mov	r3, r2
 2501 0dc4 DB00     		lsls	r3, r3, #3
 2502 0dc6 9B1A     		subs	r3, r3, r2
 2503 0dc8 1B01     		lsls	r3, r3, #4
 2504 0dca 0B44     		add	r3, r3, r1
 2505 0dcc E433     		adds	r3, r3, #228
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 72


 2506 0dce 1968     		ldr	r1, [r3]
 2507 0dd0 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 2508 0dd4 9A48     		ldr	r0, .L293
 2509 0dd6 1346     		mov	r3, r2
 2510 0dd8 DB00     		lsls	r3, r3, #3
 2511 0dda 9B1A     		subs	r3, r3, r2
 2512 0ddc 1B01     		lsls	r3, r3, #4
 2513 0dde 0344     		add	r3, r3, r0
 2514 0de0 03F58873 		add	r3, r3, #272
 2515 0de4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2516 0de6 1846     		mov	r0, r3
 2517 0de8 964A     		ldr	r2, .L293+4
 2518 0dea 0346     		mov	r3, r0
 2519 0dec 5B00     		lsls	r3, r3, #1
 2520 0dee 0344     		add	r3, r3, r0
 2521 0df0 1B01     		lsls	r3, r3, #4
 2522 0df2 1344     		add	r3, r3, r2
 2523 0df4 03F29513 		addw	r3, r3, #405
 2524 0df8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2525 0dfa 41FA03F2 		asr	r2, r1, r3
 2526 0dfe 07F11803 		add	r3, r7, #24
 2527 0e02 1A60     		str	r2, [r3]
 565:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 2528              		.loc 1 565 0
 2529 0e04 0023     		movs	r3, #0
 2530 0e06 87F8563C 		strb	r3, [r7, #3158]
 2531 0e0a 1AE0     		b	.L157
 2532              	.L158:
 566:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - j -1] = ((char*)(&aux_int
 2533              		.loc 1 566 0 discriminator 3
 2534 0e0c 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 2535 0e10 3222     		movs	r2, #50
 2536 0e12 02FB03F3 		mul	r3, r2, r3
 2537 0e16 1A1D     		adds	r2, r3, #4
 2538 0e18 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2539 0e1c 1A44     		add	r2, r2, r3
 2540 0e1e 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 2541 0e22 D31A     		subs	r3, r2, r3
 2542 0e24 013B     		subs	r3, r3, #1
 2543 0e26 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 2544 0e2a 07F11801 		add	r1, r7, #24
 2545 0e2e 0A44     		add	r2, r2, r1
 2546 0e30 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2547 0e32 07F15802 		add	r2, r7, #88
 2548 0e36 D154     		strb	r1, [r2, r3]
 565:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 2549              		.loc 1 565 0 discriminator 3
 2550 0e38 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 2551 0e3c 0133     		adds	r3, r3, #1
 2552 0e3e 87F8563C 		strb	r3, [r7, #3158]
 2553              	.L157:
 565:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 2554              		.loc 1 565 0 is_stmt 0 discriminator 1
 2555 0e42 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 2556 0e46 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2557 0e4a 9A42     		cmp	r2, r3
 2558 0e4c DED3     		bcc	.L158
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 73


 567:..\src/command_processing.c ****                         }
 568:..\src/command_processing.c ****                         aux_int32 = (c_mem.motor[MOTOR_IDX].pos_lim_sup >> c_mem.enc[g_mem.motor[MO
 2559              		.loc 1 568 0 is_stmt 1
 2560 0e4e 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 2561 0e52 7C49     		ldr	r1, .L293+4
 2562 0e54 1346     		mov	r3, r2
 2563 0e56 DB00     		lsls	r3, r3, #3
 2564 0e58 9B1A     		subs	r3, r3, r2
 2565 0e5a 1B01     		lsls	r3, r3, #4
 2566 0e5c 0B44     		add	r3, r3, r1
 2567 0e5e E833     		adds	r3, r3, #232
 2568 0e60 1968     		ldr	r1, [r3]
 2569 0e62 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 2570 0e66 7648     		ldr	r0, .L293
 2571 0e68 1346     		mov	r3, r2
 2572 0e6a DB00     		lsls	r3, r3, #3
 2573 0e6c 9B1A     		subs	r3, r3, r2
 2574 0e6e 1B01     		lsls	r3, r3, #4
 2575 0e70 0344     		add	r3, r3, r0
 2576 0e72 03F58873 		add	r3, r3, #272
 2577 0e76 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2578 0e78 1846     		mov	r0, r3
 2579 0e7a 724A     		ldr	r2, .L293+4
 2580 0e7c 0346     		mov	r3, r0
 2581 0e7e 5B00     		lsls	r3, r3, #1
 2582 0e80 0344     		add	r3, r3, r0
 2583 0e82 1B01     		lsls	r3, r3, #4
 2584 0e84 1344     		add	r3, r3, r2
 2585 0e86 03F29513 		addw	r3, r3, #405
 2586 0e8a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2587 0e8c 41FA03F2 		asr	r2, r1, r3
 2588 0e90 07F11803 		add	r3, r7, #24
 2589 0e94 1A60     		str	r2, [r3]
 569:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 2590              		.loc 1 569 0
 2591 0e96 0023     		movs	r3, #0
 2592 0e98 87F8563C 		strb	r3, [r7, #3158]
 2593 0e9c 1DE0     		b	.L159
 2594              	.L160:
 570:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - j -1] = ((char*)(&a
 2595              		.loc 1 570 0 discriminator 3
 2596 0e9e 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 2597 0ea2 3222     		movs	r2, #50
 2598 0ea4 02FB03F3 		mul	r3, r2, r3
 2599 0ea8 1A1D     		adds	r2, r3, #4
 2600 0eaa 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2601 0eae 1A44     		add	r2, r2, r3
 2602 0eb0 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2603 0eb4 1A44     		add	r2, r2, r3
 2604 0eb6 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 2605 0eba D31A     		subs	r3, r2, r3
 2606 0ebc 013B     		subs	r3, r3, #1
 2607 0ebe 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 2608 0ec2 07F11801 		add	r1, r7, #24
 2609 0ec6 0A44     		add	r2, r2, r1
 2610 0ec8 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2611 0eca 07F15802 		add	r2, r7, #88
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 74


 2612 0ece D154     		strb	r1, [r2, r3]
 569:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 2613              		.loc 1 569 0 discriminator 3
 2614 0ed0 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 2615 0ed4 0133     		adds	r3, r3, #1
 2616 0ed6 87F8563C 		strb	r3, [r7, #3158]
 2617              	.L159:
 569:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 2618              		.loc 1 569 0 is_stmt 0 discriminator 1
 2619 0eda 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 2620 0ede 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2621 0ee2 9A42     		cmp	r2, r3
 2622 0ee4 DBD3     		bcc	.L160
 571:..\src/command_processing.c ****                         }
 572:..\src/command_processing.c ****                         break;            
 2623              		.loc 1 572 0 is_stmt 1
 2624 0ee6 00F060BC 		b	.L113
 2625              	.L120:
 573:..\src/command_processing.c **** 
 574:..\src/command_processing.c ****                     case 23:        //Rest Position
 575:..\src/command_processing.c ****                         aux_int32 = (c_mem.SH.rest_pos >> c_mem.enc[g_mem.motor[MOTOR_IDX].encoder_
 2626              		.loc 1 575 0
 2627 0eea 564B     		ldr	r3, .L293+4
 2628 0eec D3F8A012 		ldr	r1, [r3, #672]
 2629 0ef0 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 2630 0ef4 5248     		ldr	r0, .L293
 2631 0ef6 1346     		mov	r3, r2
 2632 0ef8 DB00     		lsls	r3, r3, #3
 2633 0efa 9B1A     		subs	r3, r3, r2
 2634 0efc 1B01     		lsls	r3, r3, #4
 2635 0efe 0344     		add	r3, r3, r0
 2636 0f00 03F58873 		add	r3, r3, #272
 2637 0f04 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2638 0f06 1846     		mov	r0, r3
 2639 0f08 4E4A     		ldr	r2, .L293+4
 2640 0f0a 0346     		mov	r3, r0
 2641 0f0c 5B00     		lsls	r3, r3, #1
 2642 0f0e 0344     		add	r3, r3, r0
 2643 0f10 1B01     		lsls	r3, r3, #4
 2644 0f12 1344     		add	r3, r3, r2
 2645 0f14 03F29513 		addw	r3, r3, #405
 2646 0f18 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2647 0f1a 41FA03F2 		asr	r2, r1, r3
 2648 0f1e 07F11803 		add	r3, r7, #24
 2649 0f22 1A60     		str	r2, [r3]
 576:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 2650              		.loc 1 576 0
 2651 0f24 0023     		movs	r3, #0
 2652 0f26 87F8563C 		strb	r3, [r7, #3158]
 2653 0f2a 1AE0     		b	.L161
 2654              	.L162:
 577:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - j -1] = ((char*)(&aux_int
 2655              		.loc 1 577 0 discriminator 3
 2656 0f2c 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 2657 0f30 3222     		movs	r2, #50
 2658 0f32 02FB03F3 		mul	r3, r2, r3
 2659 0f36 1A1D     		adds	r2, r3, #4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 75


 2660 0f38 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2661 0f3c 1A44     		add	r2, r2, r3
 2662 0f3e 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 2663 0f42 D31A     		subs	r3, r2, r3
 2664 0f44 013B     		subs	r3, r3, #1
 2665 0f46 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 2666 0f4a 07F11801 		add	r1, r7, #24
 2667 0f4e 0A44     		add	r2, r2, r1
 2668 0f50 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2669 0f52 07F15802 		add	r2, r7, #88
 2670 0f56 D154     		strb	r1, [r2, r3]
 576:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 2671              		.loc 1 576 0 discriminator 3
 2672 0f58 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 2673 0f5c 0133     		adds	r3, r3, #1
 2674 0f5e 87F8563C 		strb	r3, [r7, #3158]
 2675              	.L161:
 576:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 2676              		.loc 1 576 0 is_stmt 0 discriminator 1
 2677 0f62 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 2678 0f66 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2679 0f6a 9A42     		cmp	r2, r3
 2680 0f6c DED3     		bcc	.L162
 578:..\src/command_processing.c ****                         }
 579:..\src/command_processing.c ****                         break; 
 2681              		.loc 1 579 0 is_stmt 1
 2682 0f6e 00F01CBC 		b	.L113
 2683              	.L121:
 580:..\src/command_processing.c ****                         
 581:..\src/command_processing.c ****                     case 44:         // Second Motor Position PID
 582:..\src/command_processing.c ****                         if(c_mem.motor[SECOND_MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 2684              		.loc 1 582 0
 2685 0f72 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 2686 0f76 3349     		ldr	r1, .L293+4
 2687 0f78 1346     		mov	r3, r2
 2688 0f7a DB00     		lsls	r3, r3, #3
 2689 0f7c 9B1A     		subs	r3, r3, r2
 2690 0f7e 1B01     		lsls	r3, r3, #4
 2691 0f80 0B44     		add	r3, r3, r1
 2692 0f82 03F20F13 		addw	r3, r3, #271
 2693 0f86 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2694 0f88 032B     		cmp	r3, #3
 2695 0f8a 00F0C380 		beq	.L163
 583:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_p / 65536;
 2696              		.loc 1 583 0
 2697 0f8e 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 2698 0f92 2C49     		ldr	r1, .L293+4
 2699 0f94 1346     		mov	r3, r2
 2700 0f96 DB00     		lsls	r3, r3, #3
 2701 0f98 9B1A     		subs	r3, r3, r2
 2702 0f9a 1B01     		lsls	r3, r3, #4
 2703 0f9c 0B44     		add	r3, r3, r1
 2704 0f9e B033     		adds	r3, r3, #176
 2705 0fa0 1B68     		ldr	r3, [r3]
 2706 0fa2 1846     		mov	r0, r3
 2707 0fa4 FFF7FEFF 		bl	__aeabi_i2f
 2708 0fa8 0346     		mov	r3, r0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 76


 2709 0faa 4FF08F41 		mov	r1, #1199570944
 2710 0fae 1846     		mov	r0, r3
 2711 0fb0 FFF7FEFF 		bl	__aeabi_fdiv
 2712 0fb4 0346     		mov	r3, r0
 2713 0fb6 1A46     		mov	r2, r3
 2714 0fb8 07F12003 		add	r3, r7, #32
 2715 0fbc 1A60     		str	r2, [r3]	@ float
 584:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2716              		.loc 1 584 0
 2717 0fbe 0023     		movs	r3, #0
 2718 0fc0 87F8573C 		strb	r3, [r7, #3159]
 2719 0fc4 1AE0     		b	.L164
 2720              	.L165:
 585:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2721              		.loc 1 585 0 discriminator 3
 2722 0fc6 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 2723 0fca 3222     		movs	r2, #50
 2724 0fcc 02FB03F3 		mul	r3, r2, r3
 2725 0fd0 1A1D     		adds	r2, r3, #4
 2726 0fd2 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2727 0fd6 1A44     		add	r2, r2, r3
 2728 0fd8 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2729 0fdc D31A     		subs	r3, r2, r3
 2730 0fde 013B     		subs	r3, r3, #1
 2731 0fe0 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2732 0fe4 07F12001 		add	r1, r7, #32
 2733 0fe8 0A44     		add	r2, r2, r1
 2734 0fea 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2735 0fec 07F15802 		add	r2, r7, #88
 2736 0ff0 D154     		strb	r1, [r2, r3]
 584:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2737              		.loc 1 584 0 discriminator 3
 2738 0ff2 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2739 0ff6 0133     		adds	r3, r3, #1
 2740 0ff8 87F8573C 		strb	r3, [r7, #3159]
 2741              	.L164:
 584:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2742              		.loc 1 584 0 is_stmt 0 discriminator 1
 2743 0ffc 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2744 1000 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2745 1004 9A42     		cmp	r2, r3
 2746 1006 DED3     		bcc	.L165
 586:..\src/command_processing.c ****                             }
 587:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_i / 65536;
 2747              		.loc 1 587 0 is_stmt 1
 2748 1008 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 2749 100c 0D49     		ldr	r1, .L293+4
 2750 100e 1346     		mov	r3, r2
 2751 1010 DB00     		lsls	r3, r3, #3
 2752 1012 9B1A     		subs	r3, r3, r2
 2753 1014 1B01     		lsls	r3, r3, #4
 2754 1016 0B44     		add	r3, r3, r1
 2755 1018 B433     		adds	r3, r3, #180
 2756 101a 1B68     		ldr	r3, [r3]
 2757 101c 1846     		mov	r0, r3
 2758 101e FFF7FEFF 		bl	__aeabi_i2f
 2759 1022 0346     		mov	r3, r0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 77


 2760 1024 4FF08F41 		mov	r1, #1199570944
 2761 1028 1846     		mov	r0, r3
 2762 102a FFF7FEFF 		bl	__aeabi_fdiv
 2763 102e 0346     		mov	r3, r0
 2764 1030 1A46     		mov	r2, r3
 2765 1032 07F12003 		add	r3, r7, #32
 2766 1036 1A60     		str	r2, [r3]	@ float
 588:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2767              		.loc 1 588 0
 2768 1038 0023     		movs	r3, #0
 2769 103a 87F8573C 		strb	r3, [r7, #3159]
 2770 103e 21E0     		b	.L166
 2771              	.L294:
 2772              		.align	2
 2773              	.L293:
 2774 1040 00000000 		.word	g_mem
 2775 1044 00000000 		.word	c_mem
 2776              	.L167:
 589:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2777              		.loc 1 589 0 discriminator 3
 2778 1048 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 2779 104c 3222     		movs	r2, #50
 2780 104e 02FB03F3 		mul	r3, r2, r3
 2781 1052 1A1D     		adds	r2, r3, #4
 2782 1054 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2783 1058 1A44     		add	r2, r2, r3
 2784 105a 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2785 105e 1A44     		add	r2, r2, r3
 2786 1060 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2787 1064 D31A     		subs	r3, r2, r3
 2788 1066 013B     		subs	r3, r3, #1
 2789 1068 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2790 106c 07F12001 		add	r1, r7, #32
 2791 1070 0A44     		add	r2, r2, r1
 2792 1072 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2793 1074 07F15802 		add	r2, r7, #88
 2794 1078 D154     		strb	r1, [r2, r3]
 588:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2795              		.loc 1 588 0 discriminator 3
 2796 107a 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2797 107e 0133     		adds	r3, r3, #1
 2798 1080 87F8573C 		strb	r3, [r7, #3159]
 2799              	.L166:
 588:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2800              		.loc 1 588 0 is_stmt 0 discriminator 1
 2801 1084 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2802 1088 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2803 108c 9A42     		cmp	r2, r3
 2804 108e DBD3     		bcc	.L167
 590:..\src/command_processing.c ****                             }
 591:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_d / 65536;
 2805              		.loc 1 591 0 is_stmt 1
 2806 1090 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 2807 1094 D249     		ldr	r1, .L295
 2808 1096 1346     		mov	r3, r2
 2809 1098 DB00     		lsls	r3, r3, #3
 2810 109a 9B1A     		subs	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 78


 2811 109c 1B01     		lsls	r3, r3, #4
 2812 109e 0B44     		add	r3, r3, r1
 2813 10a0 B833     		adds	r3, r3, #184
 2814 10a2 1B68     		ldr	r3, [r3]
 2815 10a4 1846     		mov	r0, r3
 2816 10a6 FFF7FEFF 		bl	__aeabi_i2f
 2817 10aa 0346     		mov	r3, r0
 2818 10ac 4FF08F41 		mov	r1, #1199570944
 2819 10b0 1846     		mov	r0, r3
 2820 10b2 FFF7FEFF 		bl	__aeabi_fdiv
 2821 10b6 0346     		mov	r3, r0
 2822 10b8 1A46     		mov	r2, r3
 2823 10ba 07F12003 		add	r3, r7, #32
 2824 10be 1A60     		str	r2, [r3]	@ float
 592:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2825              		.loc 1 592 0
 2826 10c0 0023     		movs	r3, #0
 2827 10c2 87F8573C 		strb	r3, [r7, #3159]
 2828 10c6 1EE0     		b	.L168
 2829              	.L169:
 593:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2830              		.loc 1 593 0 discriminator 3
 2831 10c8 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 2832 10cc 3222     		movs	r2, #50
 2833 10ce 02FB03F3 		mul	r3, r2, r3
 2834 10d2 1A1D     		adds	r2, r3, #4
 2835 10d4 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2836 10d8 5B00     		lsls	r3, r3, #1
 2837 10da 1A44     		add	r2, r2, r3
 2838 10dc 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2839 10e0 1A44     		add	r2, r2, r3
 2840 10e2 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2841 10e6 D31A     		subs	r3, r2, r3
 2842 10e8 013B     		subs	r3, r3, #1
 2843 10ea 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2844 10ee 07F12001 		add	r1, r7, #32
 2845 10f2 0A44     		add	r2, r2, r1
 2846 10f4 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2847 10f6 07F15802 		add	r2, r7, #88
 2848 10fa D154     		strb	r1, [r2, r3]
 592:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2849              		.loc 1 592 0 discriminator 3
 2850 10fc 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2851 1100 0133     		adds	r3, r3, #1
 2852 1102 87F8573C 		strb	r3, [r7, #3159]
 2853              	.L168:
 592:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2854              		.loc 1 592 0 is_stmt 0 discriminator 1
 2855 1106 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2856 110a 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2857 110e 9A42     		cmp	r2, r3
 2858 1110 DAD3     		bcc	.L169
 594:..\src/command_processing.c ****                             } 
 595:..\src/command_processing.c ****                         }
 596:..\src/command_processing.c ****                         else {
 597:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_p_dl / 65536;
 598:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 79


 599:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 600:..\src/command_processing.c ****                             }
 601:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_i_dl / 65536;
 602:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 603:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 604:..\src/command_processing.c ****                             }
 605:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_d_dl / 65536;
 606:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 607:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 608:..\src/command_processing.c ****                             }
 609:..\src/command_processing.c ****                         }
 610:..\src/command_processing.c ****                         break;
 2859              		.loc 1 610 0 is_stmt 1
 2860 1112 4AE3     		b	.L113
 2861              	.L163:
 597:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2862              		.loc 1 597 0
 2863 1114 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 2864 1118 B149     		ldr	r1, .L295
 2865 111a 1346     		mov	r3, r2
 2866 111c DB00     		lsls	r3, r3, #3
 2867 111e 9B1A     		subs	r3, r3, r2
 2868 1120 1B01     		lsls	r3, r3, #4
 2869 1122 0B44     		add	r3, r3, r1
 2870 1124 C833     		adds	r3, r3, #200
 2871 1126 1B68     		ldr	r3, [r3]
 2872 1128 1846     		mov	r0, r3
 2873 112a FFF7FEFF 		bl	__aeabi_i2f
 2874 112e 0346     		mov	r3, r0
 2875 1130 4FF08F41 		mov	r1, #1199570944
 2876 1134 1846     		mov	r0, r3
 2877 1136 FFF7FEFF 		bl	__aeabi_fdiv
 2878 113a 0346     		mov	r3, r0
 2879 113c 1A46     		mov	r2, r3
 2880 113e 07F12003 		add	r3, r7, #32
 2881 1142 1A60     		str	r2, [r3]	@ float
 598:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2882              		.loc 1 598 0
 2883 1144 0023     		movs	r3, #0
 2884 1146 87F8573C 		strb	r3, [r7, #3159]
 2885 114a 1AE0     		b	.L171
 2886              	.L172:
 599:..\src/command_processing.c ****                             }
 2887              		.loc 1 599 0 discriminator 3
 2888 114c 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 2889 1150 3222     		movs	r2, #50
 2890 1152 02FB03F3 		mul	r3, r2, r3
 2891 1156 1A1D     		adds	r2, r3, #4
 2892 1158 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2893 115c 1A44     		add	r2, r2, r3
 2894 115e 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2895 1162 D31A     		subs	r3, r2, r3
 2896 1164 013B     		subs	r3, r3, #1
 2897 1166 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2898 116a 07F12001 		add	r1, r7, #32
 2899 116e 0A44     		add	r2, r2, r1
 2900 1170 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 80


 2901 1172 07F15802 		add	r2, r7, #88
 2902 1176 D154     		strb	r1, [r2, r3]
 598:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2903              		.loc 1 598 0 discriminator 3
 2904 1178 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2905 117c 0133     		adds	r3, r3, #1
 2906 117e 87F8573C 		strb	r3, [r7, #3159]
 2907              	.L171:
 598:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2908              		.loc 1 598 0 is_stmt 0 discriminator 1
 2909 1182 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2910 1186 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2911 118a 9A42     		cmp	r2, r3
 2912 118c DED3     		bcc	.L172
 601:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2913              		.loc 1 601 0 is_stmt 1
 2914 118e 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 2915 1192 9349     		ldr	r1, .L295
 2916 1194 1346     		mov	r3, r2
 2917 1196 DB00     		lsls	r3, r3, #3
 2918 1198 9B1A     		subs	r3, r3, r2
 2919 119a 1B01     		lsls	r3, r3, #4
 2920 119c 0B44     		add	r3, r3, r1
 2921 119e CC33     		adds	r3, r3, #204
 2922 11a0 1B68     		ldr	r3, [r3]
 2923 11a2 1846     		mov	r0, r3
 2924 11a4 FFF7FEFF 		bl	__aeabi_i2f
 2925 11a8 0346     		mov	r3, r0
 2926 11aa 4FF08F41 		mov	r1, #1199570944
 2927 11ae 1846     		mov	r0, r3
 2928 11b0 FFF7FEFF 		bl	__aeabi_fdiv
 2929 11b4 0346     		mov	r3, r0
 2930 11b6 1A46     		mov	r2, r3
 2931 11b8 07F12003 		add	r3, r7, #32
 2932 11bc 1A60     		str	r2, [r3]	@ float
 602:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2933              		.loc 1 602 0
 2934 11be 0023     		movs	r3, #0
 2935 11c0 87F8573C 		strb	r3, [r7, #3159]
 2936 11c4 1DE0     		b	.L173
 2937              	.L174:
 603:..\src/command_processing.c ****                             }
 2938              		.loc 1 603 0 discriminator 3
 2939 11c6 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 2940 11ca 3222     		movs	r2, #50
 2941 11cc 02FB03F3 		mul	r3, r2, r3
 2942 11d0 1A1D     		adds	r2, r3, #4
 2943 11d2 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2944 11d6 1A44     		add	r2, r2, r3
 2945 11d8 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2946 11dc 1A44     		add	r2, r2, r3
 2947 11de 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2948 11e2 D31A     		subs	r3, r2, r3
 2949 11e4 013B     		subs	r3, r3, #1
 2950 11e6 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2951 11ea 07F12001 		add	r1, r7, #32
 2952 11ee 0A44     		add	r2, r2, r1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 81


 2953 11f0 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2954 11f2 07F15802 		add	r2, r7, #88
 2955 11f6 D154     		strb	r1, [r2, r3]
 602:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2956              		.loc 1 602 0 discriminator 3
 2957 11f8 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2958 11fc 0133     		adds	r3, r3, #1
 2959 11fe 87F8573C 		strb	r3, [r7, #3159]
 2960              	.L173:
 602:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2961              		.loc 1 602 0 is_stmt 0 discriminator 1
 2962 1202 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2963 1206 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2964 120a 9A42     		cmp	r2, r3
 2965 120c DBD3     		bcc	.L174
 605:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2966              		.loc 1 605 0 is_stmt 1
 2967 120e 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 2968 1212 7349     		ldr	r1, .L295
 2969 1214 1346     		mov	r3, r2
 2970 1216 DB00     		lsls	r3, r3, #3
 2971 1218 9B1A     		subs	r3, r3, r2
 2972 121a 1B01     		lsls	r3, r3, #4
 2973 121c 0B44     		add	r3, r3, r1
 2974 121e D033     		adds	r3, r3, #208
 2975 1220 1B68     		ldr	r3, [r3]
 2976 1222 1846     		mov	r0, r3
 2977 1224 FFF7FEFF 		bl	__aeabi_i2f
 2978 1228 0346     		mov	r3, r0
 2979 122a 4FF08F41 		mov	r1, #1199570944
 2980 122e 1846     		mov	r0, r3
 2981 1230 FFF7FEFF 		bl	__aeabi_fdiv
 2982 1234 0346     		mov	r3, r0
 2983 1236 1A46     		mov	r2, r3
 2984 1238 07F12003 		add	r3, r7, #32
 2985 123c 1A60     		str	r2, [r3]	@ float
 606:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2986              		.loc 1 606 0
 2987 123e 0023     		movs	r3, #0
 2988 1240 87F8573C 		strb	r3, [r7, #3159]
 2989 1244 1EE0     		b	.L175
 2990              	.L176:
 607:..\src/command_processing.c ****                             }
 2991              		.loc 1 607 0 discriminator 3
 2992 1246 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 2993 124a 3222     		movs	r2, #50
 2994 124c 02FB03F3 		mul	r3, r2, r3
 2995 1250 1A1D     		adds	r2, r3, #4
 2996 1252 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2997 1256 5B00     		lsls	r3, r3, #1
 2998 1258 1A44     		add	r2, r2, r3
 2999 125a 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3000 125e 1A44     		add	r2, r2, r3
 3001 1260 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 3002 1264 D31A     		subs	r3, r2, r3
 3003 1266 013B     		subs	r3, r3, #1
 3004 1268 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 82


 3005 126c 07F12001 		add	r1, r7, #32
 3006 1270 0A44     		add	r2, r2, r1
 3007 1272 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3008 1274 07F15802 		add	r2, r7, #88
 3009 1278 D154     		strb	r1, [r2, r3]
 606:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 3010              		.loc 1 606 0 discriminator 3
 3011 127a 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 3012 127e 0133     		adds	r3, r3, #1
 3013 1280 87F8573C 		strb	r3, [r7, #3159]
 3014              	.L175:
 606:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 3015              		.loc 1 606 0 is_stmt 0 discriminator 1
 3016 1284 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 3017 1288 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3018 128c 9A42     		cmp	r2, r3
 3019 128e DAD3     		bcc	.L176
 3020              		.loc 1 610 0 is_stmt 1
 3021 1290 8BE2     		b	.L113
 3022              	.L122:
 611:..\src/command_processing.c ****                         
 612:..\src/command_processing.c ****                     case 45:         // Second Motor Current PID
 613:..\src/command_processing.c ****                         if(c_mem.motor[SECOND_MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 3023              		.loc 1 613 0
 3024 1292 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 3025 1296 5249     		ldr	r1, .L295
 3026 1298 1346     		mov	r3, r2
 3027 129a DB00     		lsls	r3, r3, #3
 3028 129c 9B1A     		subs	r3, r3, r2
 3029 129e 1B01     		lsls	r3, r3, #4
 3030 12a0 0B44     		add	r3, r3, r1
 3031 12a2 03F20F13 		addw	r3, r3, #271
 3032 12a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3033 12a8 032B     		cmp	r3, #3
 3034 12aa 00F0C180 		beq	.L177
 614:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_p_c / 65536;
 3035              		.loc 1 614 0
 3036 12ae 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 3037 12b2 4B49     		ldr	r1, .L295
 3038 12b4 1346     		mov	r3, r2
 3039 12b6 DB00     		lsls	r3, r3, #3
 3040 12b8 9B1A     		subs	r3, r3, r2
 3041 12ba 1B01     		lsls	r3, r3, #4
 3042 12bc 0B44     		add	r3, r3, r1
 3043 12be BC33     		adds	r3, r3, #188
 3044 12c0 1B68     		ldr	r3, [r3]
 3045 12c2 1846     		mov	r0, r3
 3046 12c4 FFF7FEFF 		bl	__aeabi_i2f
 3047 12c8 0346     		mov	r3, r0
 3048 12ca 4FF08F41 		mov	r1, #1199570944
 3049 12ce 1846     		mov	r0, r3
 3050 12d0 FFF7FEFF 		bl	__aeabi_fdiv
 3051 12d4 0346     		mov	r3, r0
 3052 12d6 1A46     		mov	r2, r3
 3053 12d8 07F12003 		add	r3, r7, #32
 3054 12dc 1A60     		str	r2, [r3]	@ float
 615:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 83


 3055              		.loc 1 615 0
 3056 12de 0023     		movs	r3, #0
 3057 12e0 87F8573C 		strb	r3, [r7, #3159]
 3058 12e4 1AE0     		b	.L178
 3059              	.L179:
 616:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 3060              		.loc 1 616 0 discriminator 3
 3061 12e6 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 3062 12ea 3222     		movs	r2, #50
 3063 12ec 02FB03F3 		mul	r3, r2, r3
 3064 12f0 1A1D     		adds	r2, r3, #4
 3065 12f2 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3066 12f6 1A44     		add	r2, r2, r3
 3067 12f8 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 3068 12fc D31A     		subs	r3, r2, r3
 3069 12fe 013B     		subs	r3, r3, #1
 3070 1300 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 3071 1304 07F12001 		add	r1, r7, #32
 3072 1308 0A44     		add	r2, r2, r1
 3073 130a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3074 130c 07F15802 		add	r2, r7, #88
 3075 1310 D154     		strb	r1, [r2, r3]
 615:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3076              		.loc 1 615 0 discriminator 3
 3077 1312 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 3078 1316 0133     		adds	r3, r3, #1
 3079 1318 87F8573C 		strb	r3, [r7, #3159]
 3080              	.L178:
 615:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3081              		.loc 1 615 0 is_stmt 0 discriminator 1
 3082 131c 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 3083 1320 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3084 1324 9A42     		cmp	r2, r3
 3085 1326 DED3     		bcc	.L179
 617:..\src/command_processing.c ****                             }
 618:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_i_c / 65536;
 3086              		.loc 1 618 0 is_stmt 1
 3087 1328 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 3088 132c 2C49     		ldr	r1, .L295
 3089 132e 1346     		mov	r3, r2
 3090 1330 DB00     		lsls	r3, r3, #3
 3091 1332 9B1A     		subs	r3, r3, r2
 3092 1334 1B01     		lsls	r3, r3, #4
 3093 1336 0B44     		add	r3, r3, r1
 3094 1338 C033     		adds	r3, r3, #192
 3095 133a 1B68     		ldr	r3, [r3]
 3096 133c 1846     		mov	r0, r3
 3097 133e FFF7FEFF 		bl	__aeabi_i2f
 3098 1342 0346     		mov	r3, r0
 3099 1344 4FF08F41 		mov	r1, #1199570944
 3100 1348 1846     		mov	r0, r3
 3101 134a FFF7FEFF 		bl	__aeabi_fdiv
 3102 134e 0346     		mov	r3, r0
 3103 1350 1A46     		mov	r2, r3
 3104 1352 07F12003 		add	r3, r7, #32
 3105 1356 1A60     		str	r2, [r3]	@ float
 619:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 84


 3106              		.loc 1 619 0
 3107 1358 0023     		movs	r3, #0
 3108 135a 87F8573C 		strb	r3, [r7, #3159]
 3109 135e 1DE0     		b	.L180
 3110              	.L181:
 620:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 3111              		.loc 1 620 0 discriminator 3
 3112 1360 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 3113 1364 3222     		movs	r2, #50
 3114 1366 02FB03F3 		mul	r3, r2, r3
 3115 136a 1A1D     		adds	r2, r3, #4
 3116 136c 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3117 1370 1A44     		add	r2, r2, r3
 3118 1372 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3119 1376 1A44     		add	r2, r2, r3
 3120 1378 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 3121 137c D31A     		subs	r3, r2, r3
 3122 137e 013B     		subs	r3, r3, #1
 3123 1380 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 3124 1384 07F12001 		add	r1, r7, #32
 3125 1388 0A44     		add	r2, r2, r1
 3126 138a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3127 138c 07F15802 		add	r2, r7, #88
 3128 1390 D154     		strb	r1, [r2, r3]
 619:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3129              		.loc 1 619 0 discriminator 3
 3130 1392 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 3131 1396 0133     		adds	r3, r3, #1
 3132 1398 87F8573C 		strb	r3, [r7, #3159]
 3133              	.L180:
 619:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3134              		.loc 1 619 0 is_stmt 0 discriminator 1
 3135 139c 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 3136 13a0 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3137 13a4 9A42     		cmp	r2, r3
 3138 13a6 DBD3     		bcc	.L181
 621:..\src/command_processing.c ****                             }
 622:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_d_c / 65536;
 3139              		.loc 1 622 0 is_stmt 1
 3140 13a8 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 3141 13ac 0C49     		ldr	r1, .L295
 3142 13ae 1346     		mov	r3, r2
 3143 13b0 DB00     		lsls	r3, r3, #3
 3144 13b2 9B1A     		subs	r3, r3, r2
 3145 13b4 1B01     		lsls	r3, r3, #4
 3146 13b6 0B44     		add	r3, r3, r1
 3147 13b8 C433     		adds	r3, r3, #196
 3148 13ba 1B68     		ldr	r3, [r3]
 3149 13bc 1846     		mov	r0, r3
 3150 13be FFF7FEFF 		bl	__aeabi_i2f
 3151 13c2 0346     		mov	r3, r0
 3152 13c4 4FF08F41 		mov	r1, #1199570944
 3153 13c8 1846     		mov	r0, r3
 3154 13ca FFF7FEFF 		bl	__aeabi_fdiv
 3155 13ce 0346     		mov	r3, r0
 3156 13d0 1A46     		mov	r2, r3
 3157 13d2 07F12003 		add	r3, r7, #32
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 85


 3158 13d6 1A60     		str	r2, [r3]	@ float
 623:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3159              		.loc 1 623 0
 3160 13d8 0023     		movs	r3, #0
 3161 13da 87F8573C 		strb	r3, [r7, #3159]
 3162 13de 20E0     		b	.L182
 3163              	.L296:
 3164              		.align	2
 3165              	.L295:
 3166 13e0 00000000 		.word	c_mem
 3167              	.L183:
 624:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 3168              		.loc 1 624 0 discriminator 3
 3169 13e4 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 3170 13e8 3222     		movs	r2, #50
 3171 13ea 02FB03F3 		mul	r3, r2, r3
 3172 13ee 1A1D     		adds	r2, r3, #4
 3173 13f0 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3174 13f4 5B00     		lsls	r3, r3, #1
 3175 13f6 1A44     		add	r2, r2, r3
 3176 13f8 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3177 13fc 1A44     		add	r2, r2, r3
 3178 13fe 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 3179 1402 D31A     		subs	r3, r2, r3
 3180 1404 013B     		subs	r3, r3, #1
 3181 1406 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 3182 140a 07F12001 		add	r1, r7, #32
 3183 140e 0A44     		add	r2, r2, r1
 3184 1410 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3185 1412 07F15802 		add	r2, r7, #88
 3186 1416 D154     		strb	r1, [r2, r3]
 623:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3187              		.loc 1 623 0 discriminator 3
 3188 1418 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 3189 141c 0133     		adds	r3, r3, #1
 3190 141e 87F8573C 		strb	r3, [r7, #3159]
 3191              	.L182:
 623:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3192              		.loc 1 623 0 is_stmt 0 discriminator 1
 3193 1422 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 3194 1426 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3195 142a 9A42     		cmp	r2, r3
 3196 142c DAD3     		bcc	.L183
 625:..\src/command_processing.c ****                             }
 626:..\src/command_processing.c ****                         }
 627:..\src/command_processing.c ****                         else {
 628:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_p_c_dl / 65536;
 629:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 630:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 631:..\src/command_processing.c ****                             }
 632:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_i_c_dl / 65536;
 633:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 634:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 635:..\src/command_processing.c ****                             }
 636:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_d_c_dl / 65536;
 637:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 638:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 86


 639:..\src/command_processing.c ****                             }
 640:..\src/command_processing.c ****                         }            
 641:..\src/command_processing.c ****                         break;  
 3197              		.loc 1 641 0 is_stmt 1
 3198 142e BCE1     		b	.L113
 3199              	.L177:
 628:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3200              		.loc 1 628 0
 3201 1430 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 3202 1434 DA49     		ldr	r1, .L297
 3203 1436 1346     		mov	r3, r2
 3204 1438 DB00     		lsls	r3, r3, #3
 3205 143a 9B1A     		subs	r3, r3, r2
 3206 143c 1B01     		lsls	r3, r3, #4
 3207 143e 0B44     		add	r3, r3, r1
 3208 1440 D433     		adds	r3, r3, #212
 3209 1442 1B68     		ldr	r3, [r3]
 3210 1444 1846     		mov	r0, r3
 3211 1446 FFF7FEFF 		bl	__aeabi_i2f
 3212 144a 0346     		mov	r3, r0
 3213 144c 4FF08F41 		mov	r1, #1199570944
 3214 1450 1846     		mov	r0, r3
 3215 1452 FFF7FEFF 		bl	__aeabi_fdiv
 3216 1456 0346     		mov	r3, r0
 3217 1458 1A46     		mov	r2, r3
 3218 145a 07F12003 		add	r3, r7, #32
 3219 145e 1A60     		str	r2, [r3]	@ float
 629:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 3220              		.loc 1 629 0
 3221 1460 0023     		movs	r3, #0
 3222 1462 87F8573C 		strb	r3, [r7, #3159]
 3223 1466 1AE0     		b	.L185
 3224              	.L186:
 630:..\src/command_processing.c ****                             }
 3225              		.loc 1 630 0 discriminator 3
 3226 1468 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 3227 146c 3222     		movs	r2, #50
 3228 146e 02FB03F3 		mul	r3, r2, r3
 3229 1472 1A1D     		adds	r2, r3, #4
 3230 1474 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3231 1478 1A44     		add	r2, r2, r3
 3232 147a 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 3233 147e D31A     		subs	r3, r2, r3
 3234 1480 013B     		subs	r3, r3, #1
 3235 1482 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 3236 1486 07F12001 		add	r1, r7, #32
 3237 148a 0A44     		add	r2, r2, r1
 3238 148c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3239 148e 07F15802 		add	r2, r7, #88
 3240 1492 D154     		strb	r1, [r2, r3]
 629:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 3241              		.loc 1 629 0 discriminator 3
 3242 1494 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 3243 1498 0133     		adds	r3, r3, #1
 3244 149a 87F8573C 		strb	r3, [r7, #3159]
 3245              	.L185:
 629:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 87


 3246              		.loc 1 629 0 is_stmt 0 discriminator 1
 3247 149e 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 3248 14a2 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3249 14a6 9A42     		cmp	r2, r3
 3250 14a8 DED3     		bcc	.L186
 632:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3251              		.loc 1 632 0 is_stmt 1
 3252 14aa 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 3253 14ae BC49     		ldr	r1, .L297
 3254 14b0 1346     		mov	r3, r2
 3255 14b2 DB00     		lsls	r3, r3, #3
 3256 14b4 9B1A     		subs	r3, r3, r2
 3257 14b6 1B01     		lsls	r3, r3, #4
 3258 14b8 0B44     		add	r3, r3, r1
 3259 14ba D833     		adds	r3, r3, #216
 3260 14bc 1B68     		ldr	r3, [r3]
 3261 14be 1846     		mov	r0, r3
 3262 14c0 FFF7FEFF 		bl	__aeabi_i2f
 3263 14c4 0346     		mov	r3, r0
 3264 14c6 4FF08F41 		mov	r1, #1199570944
 3265 14ca 1846     		mov	r0, r3
 3266 14cc FFF7FEFF 		bl	__aeabi_fdiv
 3267 14d0 0346     		mov	r3, r0
 3268 14d2 1A46     		mov	r2, r3
 3269 14d4 07F12003 		add	r3, r7, #32
 3270 14d8 1A60     		str	r2, [r3]	@ float
 633:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 3271              		.loc 1 633 0
 3272 14da 0023     		movs	r3, #0
 3273 14dc 87F8573C 		strb	r3, [r7, #3159]
 3274 14e0 1DE0     		b	.L187
 3275              	.L188:
 634:..\src/command_processing.c ****                             }
 3276              		.loc 1 634 0 discriminator 3
 3277 14e2 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 3278 14e6 3222     		movs	r2, #50
 3279 14e8 02FB03F3 		mul	r3, r2, r3
 3280 14ec 1A1D     		adds	r2, r3, #4
 3281 14ee 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3282 14f2 1A44     		add	r2, r2, r3
 3283 14f4 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3284 14f8 1A44     		add	r2, r2, r3
 3285 14fa 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 3286 14fe D31A     		subs	r3, r2, r3
 3287 1500 013B     		subs	r3, r3, #1
 3288 1502 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 3289 1506 07F12001 		add	r1, r7, #32
 3290 150a 0A44     		add	r2, r2, r1
 3291 150c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3292 150e 07F15802 		add	r2, r7, #88
 3293 1512 D154     		strb	r1, [r2, r3]
 633:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 3294              		.loc 1 633 0 discriminator 3
 3295 1514 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 3296 1518 0133     		adds	r3, r3, #1
 3297 151a 87F8573C 		strb	r3, [r7, #3159]
 3298              	.L187:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 88


 633:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 3299              		.loc 1 633 0 is_stmt 0 discriminator 1
 3300 151e 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 3301 1522 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3302 1526 9A42     		cmp	r2, r3
 3303 1528 DBD3     		bcc	.L188
 636:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3304              		.loc 1 636 0 is_stmt 1
 3305 152a 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 3306 152e 9C49     		ldr	r1, .L297
 3307 1530 1346     		mov	r3, r2
 3308 1532 DB00     		lsls	r3, r3, #3
 3309 1534 9B1A     		subs	r3, r3, r2
 3310 1536 1B01     		lsls	r3, r3, #4
 3311 1538 0B44     		add	r3, r3, r1
 3312 153a DC33     		adds	r3, r3, #220
 3313 153c 1B68     		ldr	r3, [r3]
 3314 153e 1846     		mov	r0, r3
 3315 1540 FFF7FEFF 		bl	__aeabi_i2f
 3316 1544 0346     		mov	r3, r0
 3317 1546 4FF08F41 		mov	r1, #1199570944
 3318 154a 1846     		mov	r0, r3
 3319 154c FFF7FEFF 		bl	__aeabi_fdiv
 3320 1550 0346     		mov	r3, r0
 3321 1552 1A46     		mov	r2, r3
 3322 1554 07F12003 		add	r3, r7, #32
 3323 1558 1A60     		str	r2, [r3]	@ float
 637:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 3324              		.loc 1 637 0
 3325 155a 0023     		movs	r3, #0
 3326 155c 87F8573C 		strb	r3, [r7, #3159]
 3327 1560 1EE0     		b	.L189
 3328              	.L190:
 638:..\src/command_processing.c ****                             }
 3329              		.loc 1 638 0 discriminator 3
 3330 1562 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 3331 1566 3222     		movs	r2, #50
 3332 1568 02FB03F3 		mul	r3, r2, r3
 3333 156c 1A1D     		adds	r2, r3, #4
 3334 156e 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3335 1572 5B00     		lsls	r3, r3, #1
 3336 1574 1A44     		add	r2, r2, r3
 3337 1576 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3338 157a 1A44     		add	r2, r2, r3
 3339 157c 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 3340 1580 D31A     		subs	r3, r2, r3
 3341 1582 013B     		subs	r3, r3, #1
 3342 1584 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 3343 1588 07F12001 		add	r1, r7, #32
 3344 158c 0A44     		add	r2, r2, r1
 3345 158e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3346 1590 07F15802 		add	r2, r7, #88
 3347 1594 D154     		strb	r1, [r2, r3]
 637:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 3348              		.loc 1 637 0 discriminator 3
 3349 1596 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 3350 159a 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 89


 3351 159c 87F8573C 		strb	r3, [r7, #3159]
 3352              	.L189:
 637:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 3353              		.loc 1 637 0 is_stmt 0 discriminator 1
 3354 15a0 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 3355 15a4 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3356 15a8 9A42     		cmp	r2, r3
 3357 15aa DAD3     		bcc	.L190
 3358              		.loc 1 641 0 is_stmt 1
 3359 15ac FDE0     		b	.L113
 3360              	.L123:
 642:..\src/command_processing.c **** 
 643:..\src/command_processing.c ****                     case 50:         // Second Motor Measurement Offset
 644:..\src/command_processing.c ****                         aux_int16 = (c_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i]
 3361              		.loc 1 644 0
 3362 15ae 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 3363 15b2 7C49     		ldr	r1, .L297+4
 3364 15b4 1346     		mov	r3, r2
 3365 15b6 DB00     		lsls	r3, r3, #3
 3366 15b8 9B1A     		subs	r3, r3, r2
 3367 15ba 1B01     		lsls	r3, r3, #4
 3368 15bc 0B44     		add	r3, r3, r1
 3369 15be 03F58873 		add	r3, r3, #272
 3370 15c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3371 15c4 1846     		mov	r0, r3
 3372 15c6 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 3373 15ca 7549     		ldr	r1, .L297
 3374 15cc 0346     		mov	r3, r0
 3375 15ce 5B00     		lsls	r3, r3, #1
 3376 15d0 0344     		add	r3, r3, r0
 3377 15d2 9B00     		lsls	r3, r3, #2
 3378 15d4 1344     		add	r3, r3, r2
 3379 15d6 6633     		adds	r3, r3, #102
 3380 15d8 51F82310 		ldr	r1, [r1, r3, lsl #2]
 3381 15dc 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 3382 15e0 7048     		ldr	r0, .L297+4
 3383 15e2 1346     		mov	r3, r2
 3384 15e4 DB00     		lsls	r3, r3, #3
 3385 15e6 9B1A     		subs	r3, r3, r2
 3386 15e8 1B01     		lsls	r3, r3, #4
 3387 15ea 0344     		add	r3, r3, r0
 3388 15ec 03F58873 		add	r3, r3, #272
 3389 15f0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3390 15f2 1C46     		mov	r4, r3
 3391 15f4 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 3392 15f8 6948     		ldr	r0, .L297
 3393 15fa 2346     		mov	r3, r4
 3394 15fc 5B00     		lsls	r3, r3, #1
 3395 15fe 2344     		add	r3, r3, r4
 3396 1600 1B01     		lsls	r3, r3, #4
 3397 1602 0344     		add	r3, r3, r0
 3398 1604 1344     		add	r3, r3, r2
 3399 1606 03F29513 		addw	r3, r3, #405
 3400 160a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3401 160c 41FA03F3 		asr	r3, r1, r3
 3402 1610 1AB2     		sxth	r2, r3
 3403 1612 07F11E03 		add	r3, r7, #30
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 90


 3404 1616 1A80     		strh	r2, [r3]	@ movhi
 645:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3405              		.loc 1 645 0
 3406 1618 0023     		movs	r3, #0
 3407 161a 87F8563C 		strb	r3, [r7, #3158]
 3408 161e 21E0     		b	.L191
 3409              	.L192:
 646:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 3410              		.loc 1 646 0 discriminator 3
 3411 1620 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 3412 1624 3222     		movs	r2, #50
 3413 1626 02FB03F3 		mul	r3, r2, r3
 3414 162a 1A1D     		adds	r2, r3, #4
 3415 162c 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 3416 1630 97F8531C 		ldrb	r1, [r7, #3155]	@ zero_extendqisi2
 3417 1634 01FB03F3 		mul	r3, r1, r3
 3418 1638 1A44     		add	r2, r2, r3
 3419 163a 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3420 163e 1A44     		add	r2, r2, r3
 3421 1640 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 3422 1644 D31A     		subs	r3, r2, r3
 3423 1646 013B     		subs	r3, r3, #1
 3424 1648 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 3425 164c 07F11E01 		add	r1, r7, #30
 3426 1650 0A44     		add	r2, r2, r1
 3427 1652 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3428 1654 07F15802 		add	r2, r7, #88
 3429 1658 D154     		strb	r1, [r2, r3]
 645:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3430              		.loc 1 645 0 discriminator 3
 3431 165a 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 3432 165e 0133     		adds	r3, r3, #1
 3433 1660 87F8563C 		strb	r3, [r7, #3158]
 3434              	.L191:
 645:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3435              		.loc 1 645 0 is_stmt 0 discriminator 1
 3436 1664 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 3437 1668 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3438 166c 9A42     		cmp	r2, r3
 3439 166e D7D3     		bcc	.L192
 647:..\src/command_processing.c ****                         }
 648:..\src/command_processing.c ****                         break;
 3440              		.loc 1 648 0 is_stmt 1
 3441 1670 9BE0     		b	.L113
 3442              	.L124:
 649:..\src/command_processing.c ****                 
 650:..\src/command_processing.c ****                     case 53:        // Second Motor Position limits
 651:..\src/command_processing.c ****                         aux_int32 = (c_mem.motor[SECOND_MOTOR_IDX].pos_lim_inf >> c_mem.enc[g_mem.m
 3443              		.loc 1 651 0
 3444 1672 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 3445 1676 4A49     		ldr	r1, .L297
 3446 1678 1346     		mov	r3, r2
 3447 167a DB00     		lsls	r3, r3, #3
 3448 167c 9B1A     		subs	r3, r3, r2
 3449 167e 1B01     		lsls	r3, r3, #4
 3450 1680 0B44     		add	r3, r3, r1
 3451 1682 E433     		adds	r3, r3, #228
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 91


 3452 1684 1968     		ldr	r1, [r3]
 3453 1686 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 3454 168a 4648     		ldr	r0, .L297+4
 3455 168c 1346     		mov	r3, r2
 3456 168e DB00     		lsls	r3, r3, #3
 3457 1690 9B1A     		subs	r3, r3, r2
 3458 1692 1B01     		lsls	r3, r3, #4
 3459 1694 0344     		add	r3, r3, r0
 3460 1696 03F58873 		add	r3, r3, #272
 3461 169a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3462 169c 1846     		mov	r0, r3
 3463 169e 404A     		ldr	r2, .L297
 3464 16a0 0346     		mov	r3, r0
 3465 16a2 5B00     		lsls	r3, r3, #1
 3466 16a4 0344     		add	r3, r3, r0
 3467 16a6 1B01     		lsls	r3, r3, #4
 3468 16a8 1344     		add	r3, r3, r2
 3469 16aa 03F29513 		addw	r3, r3, #405
 3470 16ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3471 16b0 41FA03F2 		asr	r2, r1, r3
 3472 16b4 07F11803 		add	r3, r7, #24
 3473 16b8 1A60     		str	r2, [r3]
 652:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3474              		.loc 1 652 0
 3475 16ba 0023     		movs	r3, #0
 3476 16bc 87F8563C 		strb	r3, [r7, #3158]
 3477 16c0 1AE0     		b	.L193
 3478              	.L194:
 653:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - j -1] = ((char*)(&aux_int
 3479              		.loc 1 653 0 discriminator 3
 3480 16c2 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 3481 16c6 3222     		movs	r2, #50
 3482 16c8 02FB03F3 		mul	r3, r2, r3
 3483 16cc 1A1D     		adds	r2, r3, #4
 3484 16ce 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3485 16d2 1A44     		add	r2, r2, r3
 3486 16d4 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 3487 16d8 D31A     		subs	r3, r2, r3
 3488 16da 013B     		subs	r3, r3, #1
 3489 16dc 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 3490 16e0 07F11801 		add	r1, r7, #24
 3491 16e4 0A44     		add	r2, r2, r1
 3492 16e6 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3493 16e8 07F15802 		add	r2, r7, #88
 3494 16ec D154     		strb	r1, [r2, r3]
 652:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3495              		.loc 1 652 0 discriminator 3
 3496 16ee 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 3497 16f2 0133     		adds	r3, r3, #1
 3498 16f4 87F8563C 		strb	r3, [r7, #3158]
 3499              	.L193:
 652:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3500              		.loc 1 652 0 is_stmt 0 discriminator 1
 3501 16f8 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 3502 16fc 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3503 1700 9A42     		cmp	r2, r3
 3504 1702 DED3     		bcc	.L194
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 92


 654:..\src/command_processing.c ****                         }
 655:..\src/command_processing.c ****                         aux_int32 = (c_mem.motor[SECOND_MOTOR_IDX].pos_lim_sup >> c_mem.enc[g_mem.m
 3505              		.loc 1 655 0 is_stmt 1
 3506 1704 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 3507 1708 2549     		ldr	r1, .L297
 3508 170a 1346     		mov	r3, r2
 3509 170c DB00     		lsls	r3, r3, #3
 3510 170e 9B1A     		subs	r3, r3, r2
 3511 1710 1B01     		lsls	r3, r3, #4
 3512 1712 0B44     		add	r3, r3, r1
 3513 1714 E833     		adds	r3, r3, #232
 3514 1716 1968     		ldr	r1, [r3]
 3515 1718 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 3516 171c 2148     		ldr	r0, .L297+4
 3517 171e 1346     		mov	r3, r2
 3518 1720 DB00     		lsls	r3, r3, #3
 3519 1722 9B1A     		subs	r3, r3, r2
 3520 1724 1B01     		lsls	r3, r3, #4
 3521 1726 0344     		add	r3, r3, r0
 3522 1728 03F58873 		add	r3, r3, #272
 3523 172c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3524 172e 1846     		mov	r0, r3
 3525 1730 1B4A     		ldr	r2, .L297
 3526 1732 0346     		mov	r3, r0
 3527 1734 5B00     		lsls	r3, r3, #1
 3528 1736 0344     		add	r3, r3, r0
 3529 1738 1B01     		lsls	r3, r3, #4
 3530 173a 1344     		add	r3, r3, r2
 3531 173c 03F29513 		addw	r3, r3, #405
 3532 1740 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3533 1742 41FA03F2 		asr	r2, r1, r3
 3534 1746 07F11803 		add	r3, r7, #24
 3535 174a 1A60     		str	r2, [r3]
 656:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3536              		.loc 1 656 0
 3537 174c 0023     		movs	r3, #0
 3538 174e 87F8563C 		strb	r3, [r7, #3158]
 3539 1752 1DE0     		b	.L195
 3540              	.L196:
 657:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - j -1] = ((char*)(&a
 3541              		.loc 1 657 0 discriminator 3
 3542 1754 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 3543 1758 3222     		movs	r2, #50
 3544 175a 02FB03F3 		mul	r3, r2, r3
 3545 175e 1A1D     		adds	r2, r3, #4
 3546 1760 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3547 1764 1A44     		add	r2, r2, r3
 3548 1766 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3549 176a 1A44     		add	r2, r2, r3
 3550 176c 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 3551 1770 D31A     		subs	r3, r2, r3
 3552 1772 013B     		subs	r3, r3, #1
 3553 1774 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 3554 1778 07F11801 		add	r1, r7, #24
 3555 177c 0A44     		add	r2, r2, r1
 3556 177e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3557 1780 07F15802 		add	r2, r7, #88
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 93


 3558 1784 D154     		strb	r1, [r2, r3]
 656:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3559              		.loc 1 656 0 discriminator 3
 3560 1786 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 3561 178a 0133     		adds	r3, r3, #1
 3562 178c 87F8563C 		strb	r3, [r7, #3158]
 3563              	.L195:
 656:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3564              		.loc 1 656 0 is_stmt 0 discriminator 1
 3565 1790 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 3566 1794 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3567 1798 9A42     		cmp	r2, r3
 3568 179a DBD3     		bcc	.L196
 658:..\src/command_processing.c ****                         }
 659:..\src/command_processing.c ****                         break;
 3569              		.loc 1 659 0 is_stmt 1
 3570 179c 05E0     		b	.L113
 3571              	.L298:
 3572 179e 00BF     		.align	2
 3573              	.L297:
 3574 17a0 00000000 		.word	c_mem
 3575 17a4 00000000 		.word	g_mem
 3576              	.L283:
 660:..\src/command_processing.c ****                         
 661:..\src/command_processing.c ****                     default:
 662:..\src/command_processing.c ****                         break;
 3577              		.loc 1 662 0
 3578 17a8 00BF     		nop
 3579              	.L113:
 663:..\src/command_processing.c ****                 }
 664:..\src/command_processing.c **** // END OF MODIFY CUSTOM PARAM  
 665:..\src/command_processing.c ****                         
 666:..\src/command_processing.c **** // DO NOT MODIFY THE FUNCTION UNDER THIS LINE
 667:..\src/command_processing.c ****         }
 668:..\src/command_processing.c ****         
 669:..\src/command_processing.c ****         sprintf(aux_str, (char*)PARAMS_STR[idx]);
 3580              		.loc 1 669 0
 3581 17aa 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 3582 17ae 9B00     		lsls	r3, r3, #2
 3583 17b0 D7F8742C 		ldr	r2, [r7, #3188]
 3584 17b4 1344     		add	r3, r3, r2
 3585 17b6 1A68     		ldr	r2, [r3]
 3586 17b8 07F12403 		add	r3, r7, #36
 3587 17bc 1146     		mov	r1, r2
 3588 17be 1846     		mov	r0, r3
 3589 17c0 FFF7FEFF 		bl	sprintf
 670:..\src/command_processing.c ****         string_lenght = strlen(aux_str);
 3590              		.loc 1 670 0
 3591 17c4 07F12403 		add	r3, r7, #36
 3592 17c8 1846     		mov	r0, r3
 3593 17ca FFF7FEFF 		bl	strlen
 3594 17ce 0346     		mov	r3, r0
 3595 17d0 87F8523C 		strb	r3, [r7, #3154]
 671:..\src/command_processing.c ****         
 672:..\src/command_processing.c ****         // Parameters with a menu
 673:..\src/command_processing.c ****         if (TYPES[idx] == TYPE_FLAG){
 3596              		.loc 1 673 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 94


 3597 17d4 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 3598 17d8 07F10802 		add	r2, r7, #8
 3599 17dc 1268     		ldr	r2, [r2]
 3600 17de 1344     		add	r3, r3, r2
 3601 17e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3602 17e2 002B     		cmp	r3, #0
 3603 17e4 40F06284 		bne	.L197
 674:..\src/command_processing.c ****             switch(NUM_MENU[idx_menu]){
 3604              		.loc 1 674 0
 3605 17e8 97F8543C 		ldrb	r3, [r7, #3156]	@ zero_extendqisi2
 3606 17ec D7F8702C 		ldr	r2, [r7, #3184]
 3607 17f0 1344     		add	r3, r3, r2
 3608 17f2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3609 17f4 013B     		subs	r3, r3, #1
 3610 17f6 0B2B     		cmp	r3, #11
 3611 17f8 00F24E84 		bhi	.L198
 3612 17fc 01A2     		adr	r2, .L200
 3613 17fe 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 3614 1802 00BF     		.p2align 2
 3615              	.L200:
 3616 1804 35180000 		.word	.L199+1
 3617 1808 BB190000 		.word	.L201+1
 3618 180c 791A0000 		.word	.L202+1
 3619 1810 BF1A0000 		.word	.L203+1
 3620 1814 151B0000 		.word	.L204+1
 3621 1818 631B0000 		.word	.L205+1
 3622 181c 711C0000 		.word	.L206+1
 3623 1820 E71C0000 		.word	.L207+1
 3624 1824 691D0000 		.word	.L208+1
 3625 1828 011E0000 		.word	.L209+1
 3626 182c FB1E0000 		.word	.L210+1
 3627 1830 25200000 		.word	.L211+1
 3628              		.p2align 1
 3629              	.L199:
 675:..\src/command_processing.c ****                 case 1:     // input mode menu
 676:..\src/command_processing.c ****                     switch(*m_addr) {
 3630              		.loc 1 676 0
 3631 1834 D7F8483C 		ldr	r3, [r7, #3144]
 3632 1838 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3633 183a 072B     		cmp	r3, #7
 3634 183c 00F22584 		bhi	.L284
 3635 1840 01A2     		adr	r2, .L214
 3636 1842 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 3637 1846 00BF     		.p2align 2
 3638              	.L214:
 3639 1848 69180000 		.word	.L213+1
 3640 184c 89180000 		.word	.L215+1
 3641 1850 AB180000 		.word	.L216+1
 3642 1854 D5180000 		.word	.L217+1
 3643 1858 FD180000 		.word	.L218+1
 3644 185c 23190000 		.word	.L219+1
 3645 1860 53190000 		.word	.L220+1
 3646 1864 79190000 		.word	.L221+1
 3647              		.p2align 1
 3648              	.L213:
 677:..\src/command_processing.c ****                         case INPUT_MODE_EXTERNAL:
 678:..\src/command_processing.c ****                             strcat(aux_str, " Usb");
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 95


 3649              		.loc 1 678 0
 3650 1868 07F12403 		add	r3, r7, #36
 3651 186c 1846     		mov	r0, r3
 3652 186e FFF7FEFF 		bl	strlen
 3653 1872 0346     		mov	r3, r0
 3654 1874 1A46     		mov	r2, r3
 3655 1876 07F12403 		add	r3, r7, #36
 3656 187a 1344     		add	r3, r3, r2
 3657 187c D34A     		ldr	r2, .L299
 3658 187e 1068     		ldr	r0, [r2]	@ unaligned
 3659 1880 1860     		str	r0, [r3]	@ unaligned
 3660 1882 1279     		ldrb	r2, [r2, #4]
 3661 1884 1A71     		strb	r2, [r3, #4]
 679:..\src/command_processing.c ****                         break;
 3662              		.loc 1 679 0
 3663 1886 97E0     		b	.L212
 3664              	.L215:
 680:..\src/command_processing.c ****                         case INPUT_MODE_ENCODER3:
 681:..\src/command_processing.c ****                             strcat(aux_str, " Handle");
 3665              		.loc 1 681 0
 3666 1888 07F12403 		add	r3, r7, #36
 3667 188c 1846     		mov	r0, r3
 3668 188e FFF7FEFF 		bl	strlen
 3669 1892 0346     		mov	r3, r0
 3670 1894 1A46     		mov	r2, r3
 3671 1896 07F12403 		add	r3, r7, #36
 3672 189a 1344     		add	r3, r3, r2
 3673 189c CC49     		ldr	r1, .L299+4
 3674 189e 1A46     		mov	r2, r3
 3675 18a0 0B46     		mov	r3, r1
 3676 18a2 03CB     		ldmia	r3!, {r0, r1}
 3677 18a4 1060     		str	r0, [r2]	@ unaligned
 3678 18a6 5160     		str	r1, [r2, #4]	@ unaligned
 682:..\src/command_processing.c ****                         break;
 3679              		.loc 1 682 0
 3680 18a8 86E0     		b	.L212
 3681              	.L216:
 683:..\src/command_processing.c ****                         case INPUT_MODE_EMG_PROPORTIONAL:
 684:..\src/command_processing.c ****                             strcat(aux_str, " EMG proportional");
 3682              		.loc 1 684 0
 3683 18aa 07F12403 		add	r3, r7, #36
 3684 18ae 1846     		mov	r0, r3
 3685 18b0 FFF7FEFF 		bl	strlen
 3686 18b4 0346     		mov	r3, r0
 3687 18b6 1A46     		mov	r2, r3
 3688 18b8 07F12403 		add	r3, r7, #36
 3689 18bc 1344     		add	r3, r3, r2
 3690 18be C54A     		ldr	r2, .L299+8
 3691 18c0 1D46     		mov	r5, r3
 3692 18c2 1446     		mov	r4, r2
 3693 18c4 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 3694 18c6 2860     		str	r0, [r5]	@ unaligned
 3695 18c8 6960     		str	r1, [r5, #4]	@ unaligned
 3696 18ca AA60     		str	r2, [r5, #8]	@ unaligned
 3697 18cc EB60     		str	r3, [r5, #12]	@ unaligned
 3698 18ce 2388     		ldrh	r3, [r4]	@ unaligned
 3699 18d0 2B82     		strh	r3, [r5, #16]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 96


 685:..\src/command_processing.c ****                         break;
 3700              		.loc 1 685 0
 3701 18d2 71E0     		b	.L212
 3702              	.L217:
 686:..\src/command_processing.c ****                         case INPUT_MODE_EMG_INTEGRAL:
 687:..\src/command_processing.c ****                             strcat(aux_str, " EMG integral");
 3703              		.loc 1 687 0
 3704 18d4 07F12403 		add	r3, r7, #36
 3705 18d8 1846     		mov	r0, r3
 3706 18da FFF7FEFF 		bl	strlen
 3707 18de 0346     		mov	r3, r0
 3708 18e0 1A46     		mov	r2, r3
 3709 18e2 07F12403 		add	r3, r7, #36
 3710 18e6 1344     		add	r3, r3, r2
 3711 18e8 BB4A     		ldr	r2, .L299+12
 3712 18ea 1C46     		mov	r4, r3
 3713 18ec 1346     		mov	r3, r2
 3714 18ee 07CB     		ldmia	r3!, {r0, r1, r2}
 3715 18f0 2060     		str	r0, [r4]	@ unaligned
 3716 18f2 6160     		str	r1, [r4, #4]	@ unaligned
 3717 18f4 A260     		str	r2, [r4, #8]	@ unaligned
 3718 18f6 1B88     		ldrh	r3, [r3]	@ unaligned
 3719 18f8 A381     		strh	r3, [r4, #12]	@ unaligned
 688:..\src/command_processing.c ****                         break;
 3720              		.loc 1 688 0
 3721 18fa 5DE0     		b	.L212
 3722              	.L218:
 689:..\src/command_processing.c ****                         case INPUT_MODE_EMG_FCFS:
 690:..\src/command_processing.c ****                             strcat(aux_str, " EMG FCFS");
 3723              		.loc 1 690 0
 3724 18fc 07F12403 		add	r3, r7, #36
 3725 1900 1846     		mov	r0, r3
 3726 1902 FFF7FEFF 		bl	strlen
 3727 1906 0346     		mov	r3, r0
 3728 1908 1A46     		mov	r2, r3
 3729 190a 07F12403 		add	r3, r7, #36
 3730 190e 1344     		add	r3, r3, r2
 3731 1910 B249     		ldr	r1, .L299+16
 3732 1912 1A46     		mov	r2, r3
 3733 1914 0B46     		mov	r3, r1
 3734 1916 03CB     		ldmia	r3!, {r0, r1}
 3735 1918 1060     		str	r0, [r2]	@ unaligned
 3736 191a 5160     		str	r1, [r2, #4]	@ unaligned
 3737 191c 1B88     		ldrh	r3, [r3]	@ unaligned
 3738 191e 1381     		strh	r3, [r2, #8]	@ unaligned
 691:..\src/command_processing.c ****                         break;
 3739              		.loc 1 691 0
 3740 1920 4AE0     		b	.L212
 3741              	.L219:
 692:..\src/command_processing.c ****                         case INPUT_MODE_EMG_FCFS_ADV:
 693:..\src/command_processing.c ****                             strcat(aux_str, " EMG FCFS Advanced");
 3742              		.loc 1 693 0
 3743 1922 07F12403 		add	r3, r7, #36
 3744 1926 1846     		mov	r0, r3
 3745 1928 FFF7FEFF 		bl	strlen
 3746 192c 0346     		mov	r3, r0
 3747 192e 1A46     		mov	r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 97


 3748 1930 07F12403 		add	r3, r7, #36
 3749 1934 1344     		add	r3, r3, r2
 3750 1936 AA4A     		ldr	r2, .L299+20
 3751 1938 1D46     		mov	r5, r3
 3752 193a 1446     		mov	r4, r2
 3753 193c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 3754 193e 2860     		str	r0, [r5]	@ unaligned
 3755 1940 6960     		str	r1, [r5, #4]	@ unaligned
 3756 1942 AA60     		str	r2, [r5, #8]	@ unaligned
 3757 1944 EB60     		str	r3, [r5, #12]	@ unaligned
 3758 1946 2388     		ldrh	r3, [r4]	@ unaligned
 3759 1948 A278     		ldrb	r2, [r4, #2]
 3760 194a 2B82     		strh	r3, [r5, #16]	@ unaligned
 3761 194c 1346     		mov	r3, r2
 3762 194e AB74     		strb	r3, [r5, #18]
 694:..\src/command_processing.c ****                         break;
 3763              		.loc 1 694 0
 3764 1950 32E0     		b	.L212
 3765              	.L220:
 695:..\src/command_processing.c ****                         case INPUT_MODE_JOYSTICK:
 696:..\src/command_processing.c ****                             strcat(aux_str, " Joystick");
 3766              		.loc 1 696 0
 3767 1952 07F12403 		add	r3, r7, #36
 3768 1956 1846     		mov	r0, r3
 3769 1958 FFF7FEFF 		bl	strlen
 3770 195c 0346     		mov	r3, r0
 3771 195e 1A46     		mov	r2, r3
 3772 1960 07F12403 		add	r3, r7, #36
 3773 1964 1344     		add	r3, r3, r2
 3774 1966 9F49     		ldr	r1, .L299+24
 3775 1968 1A46     		mov	r2, r3
 3776 196a 0B46     		mov	r3, r1
 3777 196c 03CB     		ldmia	r3!, {r0, r1}
 3778 196e 1060     		str	r0, [r2]	@ unaligned
 3779 1970 5160     		str	r1, [r2, #4]	@ unaligned
 3780 1972 1B88     		ldrh	r3, [r3]	@ unaligned
 3781 1974 1381     		strh	r3, [r2, #8]	@ unaligned
 697:..\src/command_processing.c ****                         break;
 3782              		.loc 1 697 0
 3783 1976 1FE0     		b	.L212
 3784              	.L221:
 698:..\src/command_processing.c ****                         case INPUT_MODE_EMG_PROPORTIONAL_NC:
 699:..\src/command_processing.c ****                             strcat(aux_str, " EMG proportional Normally Closed");
 3785              		.loc 1 699 0
 3786 1978 07F12403 		add	r3, r7, #36
 3787 197c 1846     		mov	r0, r3
 3788 197e FFF7FEFF 		bl	strlen
 3789 1982 0346     		mov	r3, r0
 3790 1984 1A46     		mov	r2, r3
 3791 1986 07F12403 		add	r3, r7, #36
 3792 198a 1344     		add	r3, r3, r2
 3793 198c 964A     		ldr	r2, .L299+28
 3794 198e 1446     		mov	r4, r2
 3795 1990 9E46     		mov	lr, r3
 3796 1992 04F1200C 		add	ip, r4, #32
 3797              	.L222:
 3798 1996 7546     		mov	r5, lr
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 98


 3799 1998 2646     		mov	r6, r4
 3800 199a 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 3801 199c 2860     		str	r0, [r5]	@ unaligned
 3802 199e 6960     		str	r1, [r5, #4]	@ unaligned
 3803 19a0 AA60     		str	r2, [r5, #8]	@ unaligned
 3804 19a2 EB60     		str	r3, [r5, #12]	@ unaligned
 3805 19a4 1034     		adds	r4, r4, #16
 3806 19a6 0EF1100E 		add	lr, lr, #16
 3807 19aa 6445     		cmp	r4, ip
 3808 19ac F3D1     		bne	.L222
 3809 19ae 7246     		mov	r2, lr
 3810 19b0 2346     		mov	r3, r4
 3811 19b2 1B88     		ldrh	r3, [r3]	@ unaligned
 3812 19b4 1380     		strh	r3, [r2]	@ unaligned
 700:..\src/command_processing.c ****                         break;
 3813              		.loc 1 700 0
 3814 19b6 00BF     		nop
 3815              	.L212:
 701:..\src/command_processing.c ****                     }
 702:..\src/command_processing.c ****                     break;
 3816              		.loc 1 702 0
 3817 19b8 67E3     		b	.L284
 3818              	.L201:
 703:..\src/command_processing.c ****                 case 2:     // control mode menu
 704:..\src/command_processing.c ****                     switch(*m_addr){
 3819              		.loc 1 704 0
 3820 19ba D7F8483C 		ldr	r3, [r7, #3144]
 3821 19be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3822 19c0 032B     		cmp	r3, #3
 3823 19c2 00F26483 		bhi	.L285
 3824 19c6 01A2     		adr	r2, .L225
 3825 19c8 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 3826              		.p2align 2
 3827              	.L225:
 3828 19cc DD190000 		.word	.L224+1
 3829 19d0 031A0000 		.word	.L226+1
 3830 19d4 231A0000 		.word	.L227+1
 3831 19d8 491A0000 		.word	.L228+1
 3832              		.p2align 1
 3833              	.L224:
 705:..\src/command_processing.c ****                         case CONTROL_ANGLE:
 706:..\src/command_processing.c ****                             strcat(aux_str, " Position");
 3834              		.loc 1 706 0
 3835 19dc 07F12403 		add	r3, r7, #36
 3836 19e0 1846     		mov	r0, r3
 3837 19e2 FFF7FEFF 		bl	strlen
 3838 19e6 0346     		mov	r3, r0
 3839 19e8 1A46     		mov	r2, r3
 3840 19ea 07F12403 		add	r3, r7, #36
 3841 19ee 1344     		add	r3, r3, r2
 3842 19f0 7E49     		ldr	r1, .L299+32
 3843 19f2 1A46     		mov	r2, r3
 3844 19f4 0B46     		mov	r3, r1
 3845 19f6 03CB     		ldmia	r3!, {r0, r1}
 3846 19f8 1060     		str	r0, [r2]	@ unaligned
 3847 19fa 5160     		str	r1, [r2, #4]	@ unaligned
 3848 19fc 1B88     		ldrh	r3, [r3]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 99


 3849 19fe 1381     		strh	r3, [r2, #8]	@ unaligned
 707:..\src/command_processing.c ****                         break;
 3850              		.loc 1 707 0
 3851 1a00 39E0     		b	.L223
 3852              	.L226:
 708:..\src/command_processing.c ****                         case CONTROL_PWM:
 709:..\src/command_processing.c ****                             strcat(aux_str, " PWM");
 3853              		.loc 1 709 0
 3854 1a02 07F12403 		add	r3, r7, #36
 3855 1a06 1846     		mov	r0, r3
 3856 1a08 FFF7FEFF 		bl	strlen
 3857 1a0c 0346     		mov	r3, r0
 3858 1a0e 1A46     		mov	r2, r3
 3859 1a10 07F12403 		add	r3, r7, #36
 3860 1a14 1344     		add	r3, r3, r2
 3861 1a16 764A     		ldr	r2, .L299+36
 3862 1a18 1068     		ldr	r0, [r2]	@ unaligned
 3863 1a1a 1860     		str	r0, [r3]	@ unaligned
 3864 1a1c 1279     		ldrb	r2, [r2, #4]
 3865 1a1e 1A71     		strb	r2, [r3, #4]
 710:..\src/command_processing.c ****                         break;
 3866              		.loc 1 710 0
 3867 1a20 29E0     		b	.L223
 3868              	.L227:
 711:..\src/command_processing.c ****                         case CONTROL_CURRENT:
 712:..\src/command_processing.c ****                             strcat(aux_str, " Current");
 3869              		.loc 1 712 0
 3870 1a22 07F12403 		add	r3, r7, #36
 3871 1a26 1846     		mov	r0, r3
 3872 1a28 FFF7FEFF 		bl	strlen
 3873 1a2c 0346     		mov	r3, r0
 3874 1a2e 1A46     		mov	r2, r3
 3875 1a30 07F12403 		add	r3, r7, #36
 3876 1a34 1344     		add	r3, r3, r2
 3877 1a36 6F49     		ldr	r1, .L299+40
 3878 1a38 1A46     		mov	r2, r3
 3879 1a3a 0B46     		mov	r3, r1
 3880 1a3c 03CB     		ldmia	r3!, {r0, r1}
 3881 1a3e 1060     		str	r0, [r2]	@ unaligned
 3882 1a40 5160     		str	r1, [r2, #4]	@ unaligned
 3883 1a42 1B78     		ldrb	r3, [r3]
 3884 1a44 1372     		strb	r3, [r2, #8]
 713:..\src/command_processing.c ****                         break;
 3885              		.loc 1 713 0
 3886 1a46 16E0     		b	.L223
 3887              	.L228:
 714:..\src/command_processing.c ****                         case CURR_AND_POS_CONTROL:
 715:..\src/command_processing.c ****                             strcat(aux_str, " Position and Current");
 3888              		.loc 1 715 0
 3889 1a48 07F12403 		add	r3, r7, #36
 3890 1a4c 1846     		mov	r0, r3
 3891 1a4e FFF7FEFF 		bl	strlen
 3892 1a52 0346     		mov	r3, r0
 3893 1a54 1A46     		mov	r2, r3
 3894 1a56 07F12403 		add	r3, r7, #36
 3895 1a5a 1344     		add	r3, r3, r2
 3896 1a5c 664A     		ldr	r2, .L299+44
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 100


 3897 1a5e 1D46     		mov	r5, r3
 3898 1a60 1446     		mov	r4, r2
 3899 1a62 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 3900 1a64 2860     		str	r0, [r5]	@ unaligned
 3901 1a66 6960     		str	r1, [r5, #4]	@ unaligned
 3902 1a68 AA60     		str	r2, [r5, #8]	@ unaligned
 3903 1a6a EB60     		str	r3, [r5, #12]	@ unaligned
 3904 1a6c 2068     		ldr	r0, [r4]	@ unaligned
 3905 1a6e 2861     		str	r0, [r5, #16]	@ unaligned
 3906 1a70 A388     		ldrh	r3, [r4, #4]	@ unaligned
 3907 1a72 AB82     		strh	r3, [r5, #20]	@ unaligned
 716:..\src/command_processing.c ****                         break;
 3908              		.loc 1 716 0
 3909 1a74 00BF     		nop
 3910              	.L223:
 717:..\src/command_processing.c ****                     }
 718:..\src/command_processing.c ****                     break;
 3911              		.loc 1 718 0
 3912 1a76 0AE3     		b	.L285
 3913              	.L202:
 719:..\src/command_processing.c ****                 case 3:     // yes/no menu
 720:..\src/command_processing.c ****                     if(*m_addr){
 3914              		.loc 1 720 0
 3915 1a78 D7F8483C 		ldr	r3, [r7, #3144]
 3916 1a7c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3917 1a7e 002B     		cmp	r3, #0
 3918 1a80 0FD0     		beq	.L229
 721:..\src/command_processing.c ****                         strcat(aux_str, " YES\0");
 3919              		.loc 1 721 0
 3920 1a82 07F12403 		add	r3, r7, #36
 3921 1a86 1846     		mov	r0, r3
 3922 1a88 FFF7FEFF 		bl	strlen
 3923 1a8c 0346     		mov	r3, r0
 3924 1a8e 1A46     		mov	r2, r3
 3925 1a90 07F12403 		add	r3, r7, #36
 3926 1a94 1344     		add	r3, r3, r2
 3927 1a96 594A     		ldr	r2, .L299+48
 3928 1a98 1068     		ldr	r0, [r2]	@ unaligned
 3929 1a9a 1860     		str	r0, [r3]	@ unaligned
 3930 1a9c 1279     		ldrb	r2, [r2, #4]
 3931 1a9e 1A71     		strb	r2, [r3, #4]
 722:..\src/command_processing.c ****                     }
 723:..\src/command_processing.c ****                     else {
 724:..\src/command_processing.c ****                         strcat(aux_str, " NO\0");
 725:..\src/command_processing.c ****                     }
 726:..\src/command_processing.c ****                     break;    
 3932              		.loc 1 726 0
 3933 1aa0 FAE2     		b	.L198
 3934              	.L229:
 724:..\src/command_processing.c ****                     }
 3935              		.loc 1 724 0
 3936 1aa2 07F12403 		add	r3, r7, #36
 3937 1aa6 1846     		mov	r0, r3
 3938 1aa8 FFF7FEFF 		bl	strlen
 3939 1aac 0346     		mov	r3, r0
 3940 1aae 1A46     		mov	r2, r3
 3941 1ab0 07F12403 		add	r3, r7, #36
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 101


 3942 1ab4 1344     		add	r3, r3, r2
 3943 1ab6 524A     		ldr	r2, .L299+52
 3944 1ab8 1068     		ldr	r0, [r2]	@ unaligned
 3945 1aba 1860     		str	r0, [r3]	@ unaligned
 3946              		.loc 1 726 0
 3947 1abc ECE2     		b	.L198
 3948              	.L203:
 727:..\src/command_processing.c ****                 case 4:     // right/lef menu
 728:..\src/command_processing.c ****                     switch(*m_addr){
 3949              		.loc 1 728 0
 3950 1abe D7F8483C 		ldr	r3, [r7, #3144]
 3951 1ac2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3952 1ac4 002B     		cmp	r3, #0
 3953 1ac6 02D0     		beq	.L232
 3954 1ac8 012B     		cmp	r3, #1
 3955 1aca 12D0     		beq	.L233
 729:..\src/command_processing.c ****                         case RIGHT_HAND:
 730:..\src/command_processing.c ****                             strcat(aux_str, " Right\0");
 731:..\src/command_processing.c ****                         break;
 732:..\src/command_processing.c ****                         case LEFT_HAND:
 733:..\src/command_processing.c ****                             strcat(aux_str, " Left\0");
 734:..\src/command_processing.c ****                         break;
 735:..\src/command_processing.c ****                     }
 736:..\src/command_processing.c ****                     break;
 3956              		.loc 1 736 0
 3957 1acc E4E2     		b	.L198
 3958              	.L232:
 730:..\src/command_processing.c ****                         break;
 3959              		.loc 1 730 0
 3960 1ace 07F12403 		add	r3, r7, #36
 3961 1ad2 1846     		mov	r0, r3
 3962 1ad4 FFF7FEFF 		bl	strlen
 3963 1ad8 0346     		mov	r3, r0
 3964 1ada 1A46     		mov	r2, r3
 3965 1adc 07F12403 		add	r3, r7, #36
 3966 1ae0 1344     		add	r3, r3, r2
 3967 1ae2 484A     		ldr	r2, .L299+56
 3968 1ae4 1068     		ldr	r0, [r2]	@ unaligned
 3969 1ae6 1860     		str	r0, [r3]	@ unaligned
 3970 1ae8 9188     		ldrh	r1, [r2, #4]	@ unaligned
 3971 1aea 9279     		ldrb	r2, [r2, #6]
 3972 1aec 9980     		strh	r1, [r3, #4]	@ unaligned
 3973 1aee 9A71     		strb	r2, [r3, #6]
 731:..\src/command_processing.c ****                         case LEFT_HAND:
 3974              		.loc 1 731 0
 3975 1af0 0FE0     		b	.L231
 3976              	.L233:
 733:..\src/command_processing.c ****                         break;
 3977              		.loc 1 733 0
 3978 1af2 07F12403 		add	r3, r7, #36
 3979 1af6 1846     		mov	r0, r3
 3980 1af8 FFF7FEFF 		bl	strlen
 3981 1afc 0346     		mov	r3, r0
 3982 1afe 1A46     		mov	r2, r3
 3983 1b00 07F12403 		add	r3, r7, #36
 3984 1b04 1344     		add	r3, r3, r2
 3985 1b06 404A     		ldr	r2, .L299+60
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 102


 3986 1b08 1068     		ldr	r0, [r2]	@ unaligned
 3987 1b0a 1860     		str	r0, [r3]	@ unaligned
 3988 1b0c 9288     		ldrh	r2, [r2, #4]	@ unaligned
 3989 1b0e 9A80     		strh	r2, [r3, #4]	@ unaligned
 734:..\src/command_processing.c ****                     }
 3990              		.loc 1 734 0
 3991 1b10 00BF     		nop
 3992              	.L231:
 3993              		.loc 1 736 0
 3994 1b12 C1E2     		b	.L198
 3995              	.L204:
 737:..\src/command_processing.c ****                 case 5:     // on/off menu
 738:..\src/command_processing.c ****                     switch(*m_addr){
 3996              		.loc 1 738 0
 3997 1b14 D7F8483C 		ldr	r3, [r7, #3144]
 3998 1b18 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3999 1b1a 002B     		cmp	r3, #0
 4000 1b1c 02D0     		beq	.L235
 4001 1b1e 012B     		cmp	r3, #1
 4002 1b20 10D0     		beq	.L236
 739:..\src/command_processing.c ****                         case 0:
 740:..\src/command_processing.c ****                             strcat(aux_str, " OFF\0");
 741:..\src/command_processing.c ****                         break;
 742:..\src/command_processing.c ****                         case 1:
 743:..\src/command_processing.c ****                             strcat(aux_str, " ON\0");
 744:..\src/command_processing.c ****                         break;
 745:..\src/command_processing.c ****                     }
 746:..\src/command_processing.c ****                     break;
 4003              		.loc 1 746 0
 4004 1b22 B9E2     		b	.L198
 4005              	.L235:
 740:..\src/command_processing.c ****                         break;
 4006              		.loc 1 740 0
 4007 1b24 07F12403 		add	r3, r7, #36
 4008 1b28 1846     		mov	r0, r3
 4009 1b2a FFF7FEFF 		bl	strlen
 4010 1b2e 0346     		mov	r3, r0
 4011 1b30 1A46     		mov	r2, r3
 4012 1b32 07F12403 		add	r3, r7, #36
 4013 1b36 1344     		add	r3, r3, r2
 4014 1b38 344A     		ldr	r2, .L299+64
 4015 1b3a 1068     		ldr	r0, [r2]	@ unaligned
 4016 1b3c 1860     		str	r0, [r3]	@ unaligned
 4017 1b3e 1279     		ldrb	r2, [r2, #4]
 4018 1b40 1A71     		strb	r2, [r3, #4]
 741:..\src/command_processing.c ****                         case 1:
 4019              		.loc 1 741 0
 4020 1b42 0DE0     		b	.L234
 4021              	.L236:
 743:..\src/command_processing.c ****                         break;
 4022              		.loc 1 743 0
 4023 1b44 07F12403 		add	r3, r7, #36
 4024 1b48 1846     		mov	r0, r3
 4025 1b4a FFF7FEFF 		bl	strlen
 4026 1b4e 0346     		mov	r3, r0
 4027 1b50 1A46     		mov	r2, r3
 4028 1b52 07F12403 		add	r3, r7, #36
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 103


 4029 1b56 1344     		add	r3, r3, r2
 4030 1b58 2D4A     		ldr	r2, .L299+68
 4031 1b5a 1068     		ldr	r0, [r2]	@ unaligned
 4032 1b5c 1860     		str	r0, [r3]	@ unaligned
 744:..\src/command_processing.c ****                     }
 4033              		.loc 1 744 0
 4034 1b5e 00BF     		nop
 4035              	.L234:
 4036              		.loc 1 746 0
 4037 1b60 9AE2     		b	.L198
 4038              	.L205:
 747:..\src/command_processing.c ****                 case 6:     // expansion port menu
 748:..\src/command_processing.c ****                     switch(*m_addr){
 4039              		.loc 1 748 0
 4040 1b62 D7F8483C 		ldr	r3, [r7, #3144]
 4041 1b66 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4042 1b68 032B     		cmp	r3, #3
 4043 1b6a 00F29282 		bhi	.L286
 4044 1b6e 01A2     		adr	r2, .L239
 4045 1b70 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4046              		.p2align 2
 4047              	.L239:
 4048 1b74 851B0000 		.word	.L238+1
 4049 1b78 A51B0000 		.word	.L240+1
 4050 1b7c 1D1C0000 		.word	.L241+1
 4051 1b80 471C0000 		.word	.L242+1
 4052              		.p2align 1
 4053              	.L238:
 749:..\src/command_processing.c ****                         case EXP_NONE:
 750:..\src/command_processing.c ****                             strcat(aux_str, " None\0");
 4054              		.loc 1 750 0
 4055 1b84 07F12403 		add	r3, r7, #36
 4056 1b88 1846     		mov	r0, r3
 4057 1b8a FFF7FEFF 		bl	strlen
 4058 1b8e 0346     		mov	r3, r0
 4059 1b90 1A46     		mov	r2, r3
 4060 1b92 07F12403 		add	r3, r7, #36
 4061 1b96 1344     		add	r3, r3, r2
 4062 1b98 1E4A     		ldr	r2, .L299+72
 4063 1b9a 1068     		ldr	r0, [r2]	@ unaligned
 4064 1b9c 1860     		str	r0, [r3]	@ unaligned
 4065 1b9e 9288     		ldrh	r2, [r2, #4]	@ unaligned
 4066 1ba0 9A80     		strh	r2, [r3, #4]	@ unaligned
 751:..\src/command_processing.c ****                             break;
 4067              		.loc 1 751 0
 4068 1ba2 64E0     		b	.L237
 4069              	.L240:
 752:..\src/command_processing.c ****                         case EXP_SD_RTC:
 753:..\src/command_processing.c ****                             strcat(aux_str, " SD/RTC board\0");
 4070              		.loc 1 753 0
 4071 1ba4 07F12403 		add	r3, r7, #36
 4072 1ba8 1846     		mov	r0, r3
 4073 1baa FFF7FEFF 		bl	strlen
 4074 1bae 0346     		mov	r3, r0
 4075 1bb0 1A46     		mov	r2, r3
 4076 1bb2 07F12403 		add	r3, r7, #36
 4077 1bb6 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 104


 4078 1bb8 174A     		ldr	r2, .L299+76
 4079 1bba 1C46     		mov	r4, r3
 4080 1bbc 1346     		mov	r3, r2
 4081 1bbe 07CB     		ldmia	r3!, {r0, r1, r2}
 4082 1bc0 2060     		str	r0, [r4]	@ unaligned
 4083 1bc2 6160     		str	r1, [r4, #4]	@ unaligned
 4084 1bc4 A260     		str	r2, [r4, #8]	@ unaligned
 4085 1bc6 1B88     		ldrh	r3, [r3]	@ unaligned
 4086 1bc8 A381     		strh	r3, [r4, #12]	@ unaligned
 754:..\src/command_processing.c ****                             break;
 4087              		.loc 1 754 0
 4088 1bca 50E0     		b	.L237
 4089              	.L300:
 4090              		.align	2
 4091              	.L299:
 4092 1bcc 00000000 		.word	.LC88
 4093 1bd0 08000000 		.word	.LC89
 4094 1bd4 10000000 		.word	.LC90
 4095 1bd8 24000000 		.word	.LC91
 4096 1bdc 34000000 		.word	.LC92
 4097 1be0 40000000 		.word	.LC93
 4098 1be4 54000000 		.word	.LC94
 4099 1be8 60000000 		.word	.LC95
 4100 1bec 84000000 		.word	.LC96
 4101 1bf0 90000000 		.word	.LC97
 4102 1bf4 98000000 		.word	.LC98
 4103 1bf8 A4000000 		.word	.LC99
 4104 1bfc BC000000 		.word	.LC100
 4105 1c00 C4000000 		.word	.LC101
 4106 1c04 CC000000 		.word	.LC102
 4107 1c08 D4000000 		.word	.LC103
 4108 1c0c DC000000 		.word	.LC104
 4109 1c10 E4000000 		.word	.LC105
 4110 1c14 EC000000 		.word	.LC106
 4111 1c18 F4000000 		.word	.LC107
 4112              	.L241:
 755:..\src/command_processing.c ****                         case EXP_WIFI:
 756:..\src/command_processing.c ****         					strcat(aux_str, " WiFi board [N/A]\0");
 4113              		.loc 1 756 0
 4114 1c1c 07F12403 		add	r3, r7, #36
 4115 1c20 1846     		mov	r0, r3
 4116 1c22 FFF7FEFF 		bl	strlen
 4117 1c26 0346     		mov	r3, r0
 4118 1c28 1A46     		mov	r2, r3
 4119 1c2a 07F12403 		add	r3, r7, #36
 4120 1c2e 1344     		add	r3, r3, r2
 4121 1c30 CF4A     		ldr	r2, .L301
 4122 1c32 1D46     		mov	r5, r3
 4123 1c34 1446     		mov	r4, r2
 4124 1c36 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 4125 1c38 2860     		str	r0, [r5]	@ unaligned
 4126 1c3a 6960     		str	r1, [r5, #4]	@ unaligned
 4127 1c3c AA60     		str	r2, [r5, #8]	@ unaligned
 4128 1c3e EB60     		str	r3, [r5, #12]	@ unaligned
 4129 1c40 2388     		ldrh	r3, [r4]	@ unaligned
 4130 1c42 2B82     		strh	r3, [r5, #16]	@ unaligned
 757:..\src/command_processing.c ****         					break;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 105


 4131              		.loc 1 757 0
 4132 1c44 13E0     		b	.L237
 4133              	.L242:
 758:..\src/command_processing.c ****                         case EXP_OTHER:
 759:..\src/command_processing.c ****         					strcat(aux_str, " Other [N/A]\0");
 4134              		.loc 1 759 0
 4135 1c46 07F12403 		add	r3, r7, #36
 4136 1c4a 1846     		mov	r0, r3
 4137 1c4c FFF7FEFF 		bl	strlen
 4138 1c50 0346     		mov	r3, r0
 4139 1c52 1A46     		mov	r2, r3
 4140 1c54 07F12403 		add	r3, r7, #36
 4141 1c58 1344     		add	r3, r3, r2
 4142 1c5a C64A     		ldr	r2, .L301+4
 4143 1c5c 1C46     		mov	r4, r3
 4144 1c5e 1346     		mov	r3, r2
 4145 1c60 07CB     		ldmia	r3!, {r0, r1, r2}
 4146 1c62 2060     		str	r0, [r4]	@ unaligned
 4147 1c64 6160     		str	r1, [r4, #4]	@ unaligned
 4148 1c66 A260     		str	r2, [r4, #8]	@ unaligned
 4149 1c68 1B78     		ldrb	r3, [r3]
 4150 1c6a 2373     		strb	r3, [r4, #12]
 760:..\src/command_processing.c ****         					break;
 4151              		.loc 1 760 0
 4152 1c6c 00BF     		nop
 4153              	.L237:
 761:..\src/command_processing.c ****                     }
 762:..\src/command_processing.c ****                     break;
 4154              		.loc 1 762 0
 4155 1c6e 10E2     		b	.L286
 4156              	.L206:
 763:..\src/command_processing.c ****                 case 7:     // spi read delay menu
 764:..\src/command_processing.c ****                     switch(*m_addr){
 4157              		.loc 1 764 0
 4158 1c70 D7F8483C 		ldr	r3, [r7, #3144]
 4159 1c74 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4160 1c76 012B     		cmp	r3, #1
 4161 1c78 14D0     		beq	.L244
 4162 1c7a 022B     		cmp	r3, #2
 4163 1c7c 22D0     		beq	.L245
 4164 1c7e 002B     		cmp	r3, #0
 4165 1c80 00D0     		beq	.L246
 765:..\src/command_processing.c ****                         case 0: 
 766:..\src/command_processing.c ****                             strcat(aux_str, " None\0"); 
 767:..\src/command_processing.c ****                             break;
 768:..\src/command_processing.c ****                         case 1: 
 769:..\src/command_processing.c ****                             strcat(aux_str, " Low\0"); 
 770:..\src/command_processing.c ****                             break;
 771:..\src/command_processing.c ****                         case 2: 
 772:..\src/command_processing.c ****                             strcat(aux_str, " High\0");
 773:..\src/command_processing.c ****                             break;
 774:..\src/command_processing.c ****                         default:
 775:..\src/command_processing.c ****                             break;
 4166              		.loc 1 775 0
 4167 1c82 2FE0     		b	.L247
 4168              	.L246:
 766:..\src/command_processing.c ****                             break;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 106


 4169              		.loc 1 766 0
 4170 1c84 07F12403 		add	r3, r7, #36
 4171 1c88 1846     		mov	r0, r3
 4172 1c8a FFF7FEFF 		bl	strlen
 4173 1c8e 0346     		mov	r3, r0
 4174 1c90 1A46     		mov	r2, r3
 4175 1c92 07F12403 		add	r3, r7, #36
 4176 1c96 1344     		add	r3, r3, r2
 4177 1c98 B74A     		ldr	r2, .L301+8
 4178 1c9a 1068     		ldr	r0, [r2]	@ unaligned
 4179 1c9c 1860     		str	r0, [r3]	@ unaligned
 4180 1c9e 9288     		ldrh	r2, [r2, #4]	@ unaligned
 4181 1ca0 9A80     		strh	r2, [r3, #4]	@ unaligned
 767:..\src/command_processing.c ****                         case 1: 
 4182              		.loc 1 767 0
 4183 1ca2 1FE0     		b	.L247
 4184              	.L244:
 769:..\src/command_processing.c ****                             break;
 4185              		.loc 1 769 0
 4186 1ca4 07F12403 		add	r3, r7, #36
 4187 1ca8 1846     		mov	r0, r3
 4188 1caa FFF7FEFF 		bl	strlen
 4189 1cae 0346     		mov	r3, r0
 4190 1cb0 1A46     		mov	r2, r3
 4191 1cb2 07F12403 		add	r3, r7, #36
 4192 1cb6 1344     		add	r3, r3, r2
 4193 1cb8 B04A     		ldr	r2, .L301+12
 4194 1cba 1068     		ldr	r0, [r2]	@ unaligned
 4195 1cbc 1860     		str	r0, [r3]	@ unaligned
 4196 1cbe 1279     		ldrb	r2, [r2, #4]
 4197 1cc0 1A71     		strb	r2, [r3, #4]
 770:..\src/command_processing.c ****                         case 2: 
 4198              		.loc 1 770 0
 4199 1cc2 0FE0     		b	.L247
 4200              	.L245:
 772:..\src/command_processing.c ****                             break;
 4201              		.loc 1 772 0
 4202 1cc4 07F12403 		add	r3, r7, #36
 4203 1cc8 1846     		mov	r0, r3
 4204 1cca FFF7FEFF 		bl	strlen
 4205 1cce 0346     		mov	r3, r0
 4206 1cd0 1A46     		mov	r2, r3
 4207 1cd2 07F12403 		add	r3, r7, #36
 4208 1cd6 1344     		add	r3, r3, r2
 4209 1cd8 A94A     		ldr	r2, .L301+16
 4210 1cda 1068     		ldr	r0, [r2]	@ unaligned
 4211 1cdc 1860     		str	r0, [r3]	@ unaligned
 4212 1cde 9288     		ldrh	r2, [r2, #4]	@ unaligned
 4213 1ce0 9A80     		strh	r2, [r3, #4]	@ unaligned
 773:..\src/command_processing.c ****                         default:
 4214              		.loc 1 773 0
 4215 1ce2 00BF     		nop
 4216              	.L247:
 776:..\src/command_processing.c ****                     } 
 777:..\src/command_processing.c ****                     break;
 4217              		.loc 1 777 0 discriminator 12
 4218 1ce4 D8E1     		b	.L198
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 107


 4219              	.L207:
 778:..\src/command_processing.c ****                 case 8:     // user menu          
 779:..\src/command_processing.c ****                     switch(*m_addr){
 4220              		.loc 1 779 0
 4221 1ce6 D7F8483C 		ldr	r3, [r7, #3144]
 4222 1cea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4223 1cec 012B     		cmp	r3, #1
 4224 1cee 18D0     		beq	.L249
 4225 1cf0 022B     		cmp	r3, #2
 4226 1cf2 28D0     		beq	.L250
 4227 1cf4 002B     		cmp	r3, #0
 4228 1cf6 00D0     		beq	.L251
 780:..\src/command_processing.c ****                         case GENERIC_USER:
 781:..\src/command_processing.c ****                             strcat(aux_str, " GENERIC USER\0");
 782:..\src/command_processing.c ****                         break;
 783:..\src/command_processing.c ****                         case MARIA:
 784:..\src/command_processing.c ****                             strcat(aux_str, " MARIA\0");
 785:..\src/command_processing.c ****                         break;
 786:..\src/command_processing.c ****                         case R01:
 787:..\src/command_processing.c ****                             strcat(aux_str, " R01\0");
 788:..\src/command_processing.c ****                         break;
 789:..\src/command_processing.c ****                     }   
 790:..\src/command_processing.c ****                     break;                    
 4229              		.loc 1 790 0
 4230 1cf8 CEE1     		b	.L198
 4231              	.L251:
 781:..\src/command_processing.c ****                         break;
 4232              		.loc 1 781 0
 4233 1cfa 07F12403 		add	r3, r7, #36
 4234 1cfe 1846     		mov	r0, r3
 4235 1d00 FFF7FEFF 		bl	strlen
 4236 1d04 0346     		mov	r3, r0
 4237 1d06 1A46     		mov	r2, r3
 4238 1d08 07F12403 		add	r3, r7, #36
 4239 1d0c 1344     		add	r3, r3, r2
 4240 1d0e 9D4A     		ldr	r2, .L301+20
 4241 1d10 1C46     		mov	r4, r3
 4242 1d12 1346     		mov	r3, r2
 4243 1d14 07CB     		ldmia	r3!, {r0, r1, r2}
 4244 1d16 2060     		str	r0, [r4]	@ unaligned
 4245 1d18 6160     		str	r1, [r4, #4]	@ unaligned
 4246 1d1a A260     		str	r2, [r4, #8]	@ unaligned
 4247 1d1c 1B88     		ldrh	r3, [r3]	@ unaligned
 4248 1d1e A381     		strh	r3, [r4, #12]	@ unaligned
 782:..\src/command_processing.c ****                         case MARIA:
 4249              		.loc 1 782 0
 4250 1d20 21E0     		b	.L248
 4251              	.L249:
 784:..\src/command_processing.c ****                         break;
 4252              		.loc 1 784 0
 4253 1d22 07F12403 		add	r3, r7, #36
 4254 1d26 1846     		mov	r0, r3
 4255 1d28 FFF7FEFF 		bl	strlen
 4256 1d2c 0346     		mov	r3, r0
 4257 1d2e 1A46     		mov	r2, r3
 4258 1d30 07F12403 		add	r3, r7, #36
 4259 1d34 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 108


 4260 1d36 944A     		ldr	r2, .L301+24
 4261 1d38 1068     		ldr	r0, [r2]	@ unaligned
 4262 1d3a 1860     		str	r0, [r3]	@ unaligned
 4263 1d3c 9188     		ldrh	r1, [r2, #4]	@ unaligned
 4264 1d3e 9279     		ldrb	r2, [r2, #6]
 4265 1d40 9980     		strh	r1, [r3, #4]	@ unaligned
 4266 1d42 9A71     		strb	r2, [r3, #6]
 785:..\src/command_processing.c ****                         case R01:
 4267              		.loc 1 785 0
 4268 1d44 0FE0     		b	.L248
 4269              	.L250:
 787:..\src/command_processing.c ****                         break;
 4270              		.loc 1 787 0
 4271 1d46 07F12403 		add	r3, r7, #36
 4272 1d4a 1846     		mov	r0, r3
 4273 1d4c FFF7FEFF 		bl	strlen
 4274 1d50 0346     		mov	r3, r0
 4275 1d52 1A46     		mov	r2, r3
 4276 1d54 07F12403 		add	r3, r7, #36
 4277 1d58 1344     		add	r3, r3, r2
 4278 1d5a 8C4A     		ldr	r2, .L301+28
 4279 1d5c 1068     		ldr	r0, [r2]	@ unaligned
 4280 1d5e 1860     		str	r0, [r3]	@ unaligned
 4281 1d60 1279     		ldrb	r2, [r2, #4]
 4282 1d62 1A71     		strb	r2, [r3, #4]
 788:..\src/command_processing.c ****                     }   
 4283              		.loc 1 788 0
 4284 1d64 00BF     		nop
 4285              	.L248:
 4286              		.loc 1 790 0
 4287 1d66 97E1     		b	.L198
 4288              	.L208:
 791:..\src/command_processing.c ****                 case 9:     // driver type menu
 792:..\src/command_processing.c ****                     switch(*m_addr){
 4289              		.loc 1 792 0
 4290 1d68 D7F8483C 		ldr	r3, [r7, #3144]
 4291 1d6c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4292 1d6e 012B     		cmp	r3, #1
 4293 1d70 19D0     		beq	.L253
 4294 1d72 022B     		cmp	r3, #2
 4295 1d74 2ED0     		beq	.L254
 4296 1d76 002B     		cmp	r3, #0
 4297 1d78 00D0     		beq	.L255
 793:..\src/command_processing.c ****                         case 0:
 794:..\src/command_processing.c ****                             strcat(aux_str, " MC33887 (Standard)\0");
 795:..\src/command_processing.c ****                         break;
 796:..\src/command_processing.c ****                         case 1:
 797:..\src/command_processing.c ****                             strcat(aux_str, " VNH5019 (High power)\0");
 798:..\src/command_processing.c ****                         break;
 799:..\src/command_processing.c ****                         case 2:
 800:..\src/command_processing.c ****                             strcat(aux_str, " ESC (Brushless)\0");
 801:..\src/command_processing.c ****                         break;
 802:..\src/command_processing.c ****                     }
 803:..\src/command_processing.c ****                     break;
 4298              		.loc 1 803 0
 4299 1d7a 8DE1     		b	.L198
 4300              	.L255:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 109


 794:..\src/command_processing.c ****                         break;
 4301              		.loc 1 794 0
 4302 1d7c 07F12403 		add	r3, r7, #36
 4303 1d80 1846     		mov	r0, r3
 4304 1d82 FFF7FEFF 		bl	strlen
 4305 1d86 0346     		mov	r3, r0
 4306 1d88 1A46     		mov	r2, r3
 4307 1d8a 07F12403 		add	r3, r7, #36
 4308 1d8e 1344     		add	r3, r3, r2
 4309 1d90 7F4A     		ldr	r2, .L301+32
 4310 1d92 1D46     		mov	r5, r3
 4311 1d94 1446     		mov	r4, r2
 4312 1d96 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 4313 1d98 2860     		str	r0, [r5]	@ unaligned
 4314 1d9a 6960     		str	r1, [r5, #4]	@ unaligned
 4315 1d9c AA60     		str	r2, [r5, #8]	@ unaligned
 4316 1d9e EB60     		str	r3, [r5, #12]	@ unaligned
 4317 1da0 2068     		ldr	r0, [r4]	@ unaligned
 4318 1da2 2861     		str	r0, [r5, #16]	@ unaligned
 795:..\src/command_processing.c ****                         case 1:
 4319              		.loc 1 795 0
 4320 1da4 2BE0     		b	.L252
 4321              	.L253:
 797:..\src/command_processing.c ****                         break;
 4322              		.loc 1 797 0
 4323 1da6 07F12403 		add	r3, r7, #36
 4324 1daa 1846     		mov	r0, r3
 4325 1dac FFF7FEFF 		bl	strlen
 4326 1db0 0346     		mov	r3, r0
 4327 1db2 1A46     		mov	r2, r3
 4328 1db4 07F12403 		add	r3, r7, #36
 4329 1db8 1344     		add	r3, r3, r2
 4330 1dba 764A     		ldr	r2, .L301+36
 4331 1dbc 1D46     		mov	r5, r3
 4332 1dbe 1446     		mov	r4, r2
 4333 1dc0 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 4334 1dc2 2860     		str	r0, [r5]	@ unaligned
 4335 1dc4 6960     		str	r1, [r5, #4]	@ unaligned
 4336 1dc6 AA60     		str	r2, [r5, #8]	@ unaligned
 4337 1dc8 EB60     		str	r3, [r5, #12]	@ unaligned
 4338 1dca 2068     		ldr	r0, [r4]	@ unaligned
 4339 1dcc 2861     		str	r0, [r5, #16]	@ unaligned
 4340 1dce A388     		ldrh	r3, [r4, #4]	@ unaligned
 4341 1dd0 AB82     		strh	r3, [r5, #20]	@ unaligned
 798:..\src/command_processing.c ****                         case 2:
 4342              		.loc 1 798 0
 4343 1dd2 14E0     		b	.L252
 4344              	.L254:
 800:..\src/command_processing.c ****                         break;
 4345              		.loc 1 800 0
 4346 1dd4 07F12403 		add	r3, r7, #36
 4347 1dd8 1846     		mov	r0, r3
 4348 1dda FFF7FEFF 		bl	strlen
 4349 1dde 0346     		mov	r3, r0
 4350 1de0 1A46     		mov	r2, r3
 4351 1de2 07F12403 		add	r3, r7, #36
 4352 1de6 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 110


 4353 1de8 6B4A     		ldr	r2, .L301+40
 4354 1dea 1D46     		mov	r5, r3
 4355 1dec 1446     		mov	r4, r2
 4356 1dee 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 4357 1df0 2860     		str	r0, [r5]	@ unaligned
 4358 1df2 6960     		str	r1, [r5, #4]	@ unaligned
 4359 1df4 AA60     		str	r2, [r5, #8]	@ unaligned
 4360 1df6 EB60     		str	r3, [r5, #12]	@ unaligned
 4361 1df8 2378     		ldrb	r3, [r4]
 4362 1dfa 2B74     		strb	r3, [r5, #16]
 801:..\src/command_processing.c ****                     }
 4363              		.loc 1 801 0
 4364 1dfc 00BF     		nop
 4365              	.L252:
 4366              		.loc 1 803 0
 4367 1dfe 4BE1     		b	.L198
 4368              	.L209:
 804:..\src/command_processing.c ****                 case 10:    // device type menu
 805:..\src/command_processing.c ****                     switch(*m_addr){
 4369              		.loc 1 805 0
 4370 1e00 D7F8483C 		ldr	r3, [r7, #3144]
 4371 1e04 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4372 1e06 042B     		cmp	r3, #4
 4373 1e08 00F24581 		bhi	.L287
 4374 1e0c 01A2     		adr	r2, .L258
 4375 1e0e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4376 1e12 00BF     		.p2align 2
 4377              	.L258:
 4378 1e14 291E0000 		.word	.L257+1
 4379 1e18 511E0000 		.word	.L259+1
 4380 1e1c 7B1E0000 		.word	.L260+1
 4381 1e20 A31E0000 		.word	.L261+1
 4382 1e24 C91E0000 		.word	.L262+1
 4383              		.p2align 1
 4384              	.L257:
 806:..\src/command_processing.c ****                         case 0:
 807:..\src/command_processing.c ****                             strcat(aux_str, " SOFTHAND PRO\0");
 4385              		.loc 1 807 0
 4386 1e28 07F12403 		add	r3, r7, #36
 4387 1e2c 1846     		mov	r0, r3
 4388 1e2e FFF7FEFF 		bl	strlen
 4389 1e32 0346     		mov	r3, r0
 4390 1e34 1A46     		mov	r2, r3
 4391 1e36 07F12403 		add	r3, r7, #36
 4392 1e3a 1344     		add	r3, r3, r2
 4393 1e3c 574A     		ldr	r2, .L301+44
 4394 1e3e 1C46     		mov	r4, r3
 4395 1e40 1346     		mov	r3, r2
 4396 1e42 07CB     		ldmia	r3!, {r0, r1, r2}
 4397 1e44 2060     		str	r0, [r4]	@ unaligned
 4398 1e46 6160     		str	r1, [r4, #4]	@ unaligned
 4399 1e48 A260     		str	r2, [r4, #8]	@ unaligned
 4400 1e4a 1B88     		ldrh	r3, [r3]	@ unaligned
 4401 1e4c A381     		strh	r3, [r4, #12]	@ unaligned
 808:..\src/command_processing.c ****                         break;
 4402              		.loc 1 808 0
 4403 1e4e 53E0     		b	.L256
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 111


 4404              	.L259:
 809:..\src/command_processing.c ****                         case 1:
 810:..\src/command_processing.c ****                             strcat(aux_str, " GENERIC 2 MOTORS\0");
 4405              		.loc 1 810 0
 4406 1e50 07F12403 		add	r3, r7, #36
 4407 1e54 1846     		mov	r0, r3
 4408 1e56 FFF7FEFF 		bl	strlen
 4409 1e5a 0346     		mov	r3, r0
 4410 1e5c 1A46     		mov	r2, r3
 4411 1e5e 07F12403 		add	r3, r7, #36
 4412 1e62 1344     		add	r3, r3, r2
 4413 1e64 4E4A     		ldr	r2, .L301+48
 4414 1e66 1D46     		mov	r5, r3
 4415 1e68 1446     		mov	r4, r2
 4416 1e6a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 4417 1e6c 2860     		str	r0, [r5]	@ unaligned
 4418 1e6e 6960     		str	r1, [r5, #4]	@ unaligned
 4419 1e70 AA60     		str	r2, [r5, #8]	@ unaligned
 4420 1e72 EB60     		str	r3, [r5, #12]	@ unaligned
 4421 1e74 2388     		ldrh	r3, [r4]	@ unaligned
 4422 1e76 2B82     		strh	r3, [r5, #16]	@ unaligned
 811:..\src/command_processing.c ****                         break;
 4423              		.loc 1 811 0
 4424 1e78 3EE0     		b	.L256
 4425              	.L260:
 812:..\src/command_processing.c ****                         case 2:
 813:..\src/command_processing.c ****                             strcat(aux_str, " AIR CHAMBERS\0");
 4426              		.loc 1 813 0
 4427 1e7a 07F12403 		add	r3, r7, #36
 4428 1e7e 1846     		mov	r0, r3
 4429 1e80 FFF7FEFF 		bl	strlen
 4430 1e84 0346     		mov	r3, r0
 4431 1e86 1A46     		mov	r2, r3
 4432 1e88 07F12403 		add	r3, r7, #36
 4433 1e8c 1344     		add	r3, r3, r2
 4434 1e8e 454A     		ldr	r2, .L301+52
 4435 1e90 1C46     		mov	r4, r3
 4436 1e92 1346     		mov	r3, r2
 4437 1e94 07CB     		ldmia	r3!, {r0, r1, r2}
 4438 1e96 2060     		str	r0, [r4]	@ unaligned
 4439 1e98 6160     		str	r1, [r4, #4]	@ unaligned
 4440 1e9a A260     		str	r2, [r4, #8]	@ unaligned
 4441 1e9c 1B88     		ldrh	r3, [r3]	@ unaligned
 4442 1e9e A381     		strh	r3, [r4, #12]	@ unaligned
 814:..\src/command_processing.c ****                         break;
 4443              		.loc 1 814 0
 4444 1ea0 2AE0     		b	.L256
 4445              	.L261:
 815:..\src/command_processing.c ****                         case 3:
 816:..\src/command_processing.c ****                             strcat(aux_str, " OTTOBOCK WRIST\0");
 4446              		.loc 1 816 0
 4447 1ea2 07F12403 		add	r3, r7, #36
 4448 1ea6 1846     		mov	r0, r3
 4449 1ea8 FFF7FEFF 		bl	strlen
 4450 1eac 0346     		mov	r3, r0
 4451 1eae 1A46     		mov	r2, r3
 4452 1eb0 07F12403 		add	r3, r7, #36
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 112


 4453 1eb4 1344     		add	r3, r3, r2
 4454 1eb6 3C4A     		ldr	r2, .L301+56
 4455 1eb8 1C46     		mov	r4, r3
 4456 1eba 1546     		mov	r5, r2
 4457 1ebc 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 4458 1ebe 2060     		str	r0, [r4]	@ unaligned
 4459 1ec0 6160     		str	r1, [r4, #4]	@ unaligned
 4460 1ec2 A260     		str	r2, [r4, #8]	@ unaligned
 4461 1ec4 E360     		str	r3, [r4, #12]	@ unaligned
 817:..\src/command_processing.c ****                         break;
 4462              		.loc 1 817 0
 4463 1ec6 17E0     		b	.L256
 4464              	.L262:
 818:..\src/command_processing.c ****                         case 4:
 819:..\src/command_processing.c ****                             strcat(aux_str, " SOFTHAND 2 MOTORS\0");
 4465              		.loc 1 819 0
 4466 1ec8 07F12403 		add	r3, r7, #36
 4467 1ecc 1846     		mov	r0, r3
 4468 1ece FFF7FEFF 		bl	strlen
 4469 1ed2 0346     		mov	r3, r0
 4470 1ed4 1A46     		mov	r2, r3
 4471 1ed6 07F12403 		add	r3, r7, #36
 4472 1eda 1344     		add	r3, r3, r2
 4473 1edc 334A     		ldr	r2, .L301+60
 4474 1ede 1D46     		mov	r5, r3
 4475 1ee0 1446     		mov	r4, r2
 4476 1ee2 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 4477 1ee4 2860     		str	r0, [r5]	@ unaligned
 4478 1ee6 6960     		str	r1, [r5, #4]	@ unaligned
 4479 1ee8 AA60     		str	r2, [r5, #8]	@ unaligned
 4480 1eea EB60     		str	r3, [r5, #12]	@ unaligned
 4481 1eec 2388     		ldrh	r3, [r4]	@ unaligned
 4482 1eee A278     		ldrb	r2, [r4, #2]
 4483 1ef0 2B82     		strh	r3, [r5, #16]	@ unaligned
 4484 1ef2 1346     		mov	r3, r2
 4485 1ef4 AB74     		strb	r3, [r5, #18]
 820:..\src/command_processing.c ****                         break;
 4486              		.loc 1 820 0
 4487 1ef6 00BF     		nop
 4488              	.L256:
 821:..\src/command_processing.c ****                     }
 822:..\src/command_processing.c ****                     break;
 4489              		.loc 1 822 0
 4490 1ef8 CDE0     		b	.L287
 4491              	.L210:
 823:..\src/command_processing.c ****                 case 11:    // fsm activation mode menu
 824:..\src/command_processing.c ****                     switch(*m_addr){
 4492              		.loc 1 824 0
 4493 1efa D7F8483C 		ldr	r3, [r7, #3144]
 4494 1efe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4495 1f00 002B     		cmp	r3, #0
 4496 1f02 02D0     		beq	.L264
 4497 1f04 012B     		cmp	r3, #1
 4498 1f06 59D0     		beq	.L265
 825:..\src/command_processing.c ****                         case 0:
 826:..\src/command_processing.c ****                             if (c_mem.dev.dev_type == SOFTHAND_2_MOTORS){
 827:..\src/command_processing.c ****                                 strcat(aux_str, " Fast:syn2, Slow:syn1\0");
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 113


 828:..\src/command_processing.c ****                             }
 829:..\src/command_processing.c ****                             else {
 830:..\src/command_processing.c ****                                 strcat(aux_str, " Fast:wrist,Slow:hand\0");
 831:..\src/command_processing.c ****                             }                            
 832:..\src/command_processing.c ****                         break;
 833:..\src/command_processing.c ****                         case 1:
 834:..\src/command_processing.c ****                             if (c_mem.dev.dev_type == SOFTHAND_2_MOTORS){
 835:..\src/command_processing.c ****                                 strcat(aux_str, " Slow:syn2, Fast:syn1\0");
 836:..\src/command_processing.c ****                             }
 837:..\src/command_processing.c ****                             else {
 838:..\src/command_processing.c ****                                 strcat(aux_str, " Slow:wrist,Fast:hand\0");
 839:..\src/command_processing.c ****                             }
 840:..\src/command_processing.c ****                         break;
 841:..\src/command_processing.c ****                     }
 842:..\src/command_processing.c ****                     break;
 4499              		.loc 1 842 0
 4500 1f08 C6E0     		b	.L198
 4501              	.L264:
 826:..\src/command_processing.c ****                                 strcat(aux_str, " Fast:syn2, Slow:syn1\0");
 4502              		.loc 1 826 0
 4503 1f0a 294B     		ldr	r3, .L301+64
 4504 1f0c 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 4505 1f10 042B     		cmp	r3, #4
 4506 1f12 16D1     		bne	.L266
 827:..\src/command_processing.c ****                             }
 4507              		.loc 1 827 0
 4508 1f14 07F12403 		add	r3, r7, #36
 4509 1f18 1846     		mov	r0, r3
 4510 1f1a FFF7FEFF 		bl	strlen
 4511 1f1e 0346     		mov	r3, r0
 4512 1f20 1A46     		mov	r2, r3
 4513 1f22 07F12403 		add	r3, r7, #36
 4514 1f26 1344     		add	r3, r3, r2
 4515 1f28 224A     		ldr	r2, .L301+68
 4516 1f2a 1D46     		mov	r5, r3
 4517 1f2c 1446     		mov	r4, r2
 4518 1f2e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 4519 1f30 2860     		str	r0, [r5]	@ unaligned
 4520 1f32 6960     		str	r1, [r5, #4]	@ unaligned
 4521 1f34 AA60     		str	r2, [r5, #8]	@ unaligned
 4522 1f36 EB60     		str	r3, [r5, #12]	@ unaligned
 4523 1f38 2068     		ldr	r0, [r4]	@ unaligned
 4524 1f3a 2861     		str	r0, [r5, #16]	@ unaligned
 4525 1f3c A388     		ldrh	r3, [r4, #4]	@ unaligned
 4526 1f3e AB82     		strh	r3, [r5, #20]	@ unaligned
 832:..\src/command_processing.c ****                         case 1:
 4527              		.loc 1 832 0
 4528 1f40 6FE0     		b	.L263
 4529              	.L266:
 830:..\src/command_processing.c ****                             }                            
 4530              		.loc 1 830 0
 4531 1f42 07F12403 		add	r3, r7, #36
 4532 1f46 1846     		mov	r0, r3
 4533 1f48 FFF7FEFF 		bl	strlen
 4534 1f4c 0346     		mov	r3, r0
 4535 1f4e 1A46     		mov	r2, r3
 4536 1f50 07F12403 		add	r3, r7, #36
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 114


 4537 1f54 1344     		add	r3, r3, r2
 4538 1f56 184A     		ldr	r2, .L301+72
 4539 1f58 1D46     		mov	r5, r3
 4540 1f5a 1446     		mov	r4, r2
 4541 1f5c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 4542 1f5e 2860     		str	r0, [r5]	@ unaligned
 4543 1f60 6960     		str	r1, [r5, #4]	@ unaligned
 4544 1f62 AA60     		str	r2, [r5, #8]	@ unaligned
 4545 1f64 EB60     		str	r3, [r5, #12]	@ unaligned
 4546 1f66 2068     		ldr	r0, [r4]	@ unaligned
 4547 1f68 2861     		str	r0, [r5, #16]	@ unaligned
 4548 1f6a A388     		ldrh	r3, [r4, #4]	@ unaligned
 4549 1f6c AB82     		strh	r3, [r5, #20]	@ unaligned
 832:..\src/command_processing.c ****                         case 1:
 4550              		.loc 1 832 0
 4551 1f6e 58E0     		b	.L263
 4552              	.L302:
 4553              		.align	2
 4554              	.L301:
 4555 1f70 04010000 		.word	.LC108
 4556 1f74 18010000 		.word	.LC109
 4557 1f78 EC000000 		.word	.LC106
 4558 1f7c 28010000 		.word	.LC110
 4559 1f80 30010000 		.word	.LC111
 4560 1f84 38010000 		.word	.LC112
 4561 1f88 48010000 		.word	.LC113
 4562 1f8c 50010000 		.word	.LC114
 4563 1f90 58010000 		.word	.LC115
 4564 1f94 70010000 		.word	.LC116
 4565 1f98 88010000 		.word	.LC117
 4566 1f9c 9C010000 		.word	.LC118
 4567 1fa0 AC010000 		.word	.LC119
 4568 1fa4 C0010000 		.word	.LC120
 4569 1fa8 D0010000 		.word	.LC121
 4570 1fac E4010000 		.word	.LC122
 4571 1fb0 00000000 		.word	c_mem
 4572 1fb4 F8010000 		.word	.LC123
 4573 1fb8 10020000 		.word	.LC124
 4574              	.L265:
 834:..\src/command_processing.c ****                                 strcat(aux_str, " Slow:syn2, Fast:syn1\0");
 4575              		.loc 1 834 0
 4576 1fbc C44B     		ldr	r3, .L303
 4577 1fbe 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 4578 1fc2 042B     		cmp	r3, #4
 4579 1fc4 16D1     		bne	.L268
 835:..\src/command_processing.c ****                             }
 4580              		.loc 1 835 0
 4581 1fc6 07F12403 		add	r3, r7, #36
 4582 1fca 1846     		mov	r0, r3
 4583 1fcc FFF7FEFF 		bl	strlen
 4584 1fd0 0346     		mov	r3, r0
 4585 1fd2 1A46     		mov	r2, r3
 4586 1fd4 07F12403 		add	r3, r7, #36
 4587 1fd8 1344     		add	r3, r3, r2
 4588 1fda BE4A     		ldr	r2, .L303+4
 4589 1fdc 1D46     		mov	r5, r3
 4590 1fde 1446     		mov	r4, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 115


 4591 1fe0 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 4592 1fe2 2860     		str	r0, [r5]	@ unaligned
 4593 1fe4 6960     		str	r1, [r5, #4]	@ unaligned
 4594 1fe6 AA60     		str	r2, [r5, #8]	@ unaligned
 4595 1fe8 EB60     		str	r3, [r5, #12]	@ unaligned
 4596 1fea 2068     		ldr	r0, [r4]	@ unaligned
 4597 1fec 2861     		str	r0, [r5, #16]	@ unaligned
 4598 1fee A388     		ldrh	r3, [r4, #4]	@ unaligned
 4599 1ff0 AB82     		strh	r3, [r5, #20]	@ unaligned
 840:..\src/command_processing.c ****                     }
 4600              		.loc 1 840 0
 4601 1ff2 15E0     		b	.L288
 4602              	.L268:
 838:..\src/command_processing.c ****                             }
 4603              		.loc 1 838 0
 4604 1ff4 07F12403 		add	r3, r7, #36
 4605 1ff8 1846     		mov	r0, r3
 4606 1ffa FFF7FEFF 		bl	strlen
 4607 1ffe 0346     		mov	r3, r0
 4608 2000 1A46     		mov	r2, r3
 4609 2002 07F12403 		add	r3, r7, #36
 4610 2006 1344     		add	r3, r3, r2
 4611 2008 B34A     		ldr	r2, .L303+8
 4612 200a 1D46     		mov	r5, r3
 4613 200c 1446     		mov	r4, r2
 4614 200e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 4615 2010 2860     		str	r0, [r5]	@ unaligned
 4616 2012 6960     		str	r1, [r5, #4]	@ unaligned
 4617 2014 AA60     		str	r2, [r5, #8]	@ unaligned
 4618 2016 EB60     		str	r3, [r5, #12]	@ unaligned
 4619 2018 2068     		ldr	r0, [r4]	@ unaligned
 4620 201a 2861     		str	r0, [r5, #16]	@ unaligned
 4621 201c A388     		ldrh	r3, [r4, #4]	@ unaligned
 4622 201e AB82     		strh	r3, [r5, #20]	@ unaligned
 4623              	.L288:
 840:..\src/command_processing.c ****                     }
 4624              		.loc 1 840 0
 4625 2020 00BF     		nop
 4626              	.L263:
 4627              		.loc 1 842 0 discriminator 13
 4628 2022 39E0     		b	.L198
 4629              	.L211:
 843:..\src/command_processing.c ****                 case 12:    // wrist direction association menu
 844:..\src/command_processing.c ****                     switch(*m_addr){
 4630              		.loc 1 844 0
 4631 2024 D7F8483C 		ldr	r3, [r7, #3144]
 4632 2028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4633 202a 002B     		cmp	r3, #0
 4634 202c 02D0     		beq	.L271
 4635 202e 012B     		cmp	r3, #1
 4636 2030 15D0     		beq	.L272
 845:..\src/command_processing.c ****                         case 0:
 846:..\src/command_processing.c ****                             strcat(aux_str, " Close:CW, Open:CCW\0");
 847:..\src/command_processing.c ****                         break;
 848:..\src/command_processing.c ****                         case 1:
 849:..\src/command_processing.c ****                             strcat(aux_str, " Close:CCW, Open:CW\0");
 850:..\src/command_processing.c ****                         break;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 116


 851:..\src/command_processing.c ****                     }
 852:..\src/command_processing.c ****                     break;
 4637              		.loc 1 852 0
 4638 2032 31E0     		b	.L198
 4639              	.L271:
 846:..\src/command_processing.c ****                         break;
 4640              		.loc 1 846 0
 4641 2034 07F12403 		add	r3, r7, #36
 4642 2038 1846     		mov	r0, r3
 4643 203a FFF7FEFF 		bl	strlen
 4644 203e 0346     		mov	r3, r0
 4645 2040 1A46     		mov	r2, r3
 4646 2042 07F12403 		add	r3, r7, #36
 4647 2046 1344     		add	r3, r3, r2
 4648 2048 A44A     		ldr	r2, .L303+12
 4649 204a 1D46     		mov	r5, r3
 4650 204c 1446     		mov	r4, r2
 4651 204e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 4652 2050 2860     		str	r0, [r5]	@ unaligned
 4653 2052 6960     		str	r1, [r5, #4]	@ unaligned
 4654 2054 AA60     		str	r2, [r5, #8]	@ unaligned
 4655 2056 EB60     		str	r3, [r5, #12]	@ unaligned
 4656 2058 2068     		ldr	r0, [r4]	@ unaligned
 4657 205a 2861     		str	r0, [r5, #16]	@ unaligned
 847:..\src/command_processing.c ****                         case 1:
 4658              		.loc 1 847 0
 4659 205c 14E0     		b	.L270
 4660              	.L272:
 849:..\src/command_processing.c ****                         break;
 4661              		.loc 1 849 0
 4662 205e 07F12403 		add	r3, r7, #36
 4663 2062 1846     		mov	r0, r3
 4664 2064 FFF7FEFF 		bl	strlen
 4665 2068 0346     		mov	r3, r0
 4666 206a 1A46     		mov	r2, r3
 4667 206c 07F12403 		add	r3, r7, #36
 4668 2070 1344     		add	r3, r3, r2
 4669 2072 9B4A     		ldr	r2, .L303+16
 4670 2074 1D46     		mov	r5, r3
 4671 2076 1446     		mov	r4, r2
 4672 2078 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 4673 207a 2860     		str	r0, [r5]	@ unaligned
 4674 207c 6960     		str	r1, [r5, #4]	@ unaligned
 4675 207e AA60     		str	r2, [r5, #8]	@ unaligned
 4676 2080 EB60     		str	r3, [r5, #12]	@ unaligned
 4677 2082 2068     		ldr	r0, [r4]	@ unaligned
 4678 2084 2861     		str	r0, [r5, #16]	@ unaligned
 850:..\src/command_processing.c ****                     }
 4679              		.loc 1 850 0
 4680 2086 00BF     		nop
 4681              	.L270:
 4682              		.loc 1 852 0
 4683 2088 06E0     		b	.L198
 4684              	.L284:
 702:..\src/command_processing.c ****                 case 2:     // control mode menu
 4685              		.loc 1 702 0
 4686 208a 00BF     		nop
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 117


 4687 208c 04E0     		b	.L198
 4688              	.L285:
 718:..\src/command_processing.c ****                 case 3:     // yes/no menu
 4689              		.loc 1 718 0
 4690 208e 00BF     		nop
 4691 2090 02E0     		b	.L198
 4692              	.L286:
 762:..\src/command_processing.c ****                 case 7:     // spi read delay menu
 4693              		.loc 1 762 0
 4694 2092 00BF     		nop
 4695 2094 00E0     		b	.L198
 4696              	.L287:
 822:..\src/command_processing.c ****                 case 11:    // fsm activation mode menu
 4697              		.loc 1 822 0
 4698 2096 00BF     		nop
 4699              	.L198:
 853:..\src/command_processing.c ****             }
 854:..\src/command_processing.c ****             //Recomputes string lenght
 855:..\src/command_processing.c ****             string_lenght = strlen(aux_str)+1;
 4700              		.loc 1 855 0
 4701 2098 07F12403 		add	r3, r7, #36
 4702 209c 1846     		mov	r0, r3
 4703 209e FFF7FEFF 		bl	strlen
 4704 20a2 0346     		mov	r3, r0
 4705 20a4 DBB2     		uxtb	r3, r3
 4706 20a6 0133     		adds	r3, r3, #1
 4707 20a8 87F8523C 		strb	r3, [r7, #3154]
 4708              	.L197:
 856:..\src/command_processing.c ****         }
 857:..\src/command_processing.c **** 
 858:..\src/command_processing.c ****         // Add parameter string to packet
 859:..\src/command_processing.c ****         for(i = string_lenght; i != 0; i--)
 4709              		.loc 1 859 0
 4710 20ac 97F8523C 		ldrb	r3, [r7, #3154]
 4711 20b0 87F8573C 		strb	r3, [r7, #3159]
 4712 20b4 26E0     		b	.L273
 4713              	.L274:
 860:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght - i] = aux
 4714              		.loc 1 860 0 discriminator 3
 4715 20b6 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 4716 20ba 3222     		movs	r2, #50
 4717 20bc 02FB03F3 		mul	r3, r2, r3
 4718 20c0 1A1D     		adds	r2, r3, #4
 4719 20c2 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 4720 20c6 97F8551C 		ldrb	r1, [r7, #3157]	@ zero_extendqisi2
 4721 20ca 381D     		adds	r0, r7, #4
 4722 20cc 0068     		ldr	r0, [r0]
 4723 20ce 0144     		add	r1, r1, r0
 4724 20d0 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 4725 20d2 01FB03F3 		mul	r3, r1, r3
 4726 20d6 1A44     		add	r2, r2, r3
 4727 20d8 97F8523C 		ldrb	r3, [r7, #3154]	@ zero_extendqisi2
 4728 20dc 1A44     		add	r2, r2, r3
 4729 20de 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 4730 20e2 D31A     		subs	r3, r2, r3
 4731 20e4 97F8521C 		ldrb	r1, [r7, #3154]	@ zero_extendqisi2
 4732 20e8 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 118


 4733 20ec 8A1A     		subs	r2, r1, r2
 4734 20ee 07F12401 		add	r1, r7, #36
 4735 20f2 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 4736 20f4 07F15802 		add	r2, r7, #88
 4737 20f8 D154     		strb	r1, [r2, r3]
 859:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght - i] = aux
 4738              		.loc 1 859 0 discriminator 3
 4739 20fa 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 4740 20fe 013B     		subs	r3, r3, #1
 4741 2100 87F8573C 		strb	r3, [r7, #3159]
 4742              	.L273:
 859:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght - i] = aux
 4743              		.loc 1 859 0 is_stmt 0 discriminator 1
 4744 2104 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 4745 2108 002B     		cmp	r3, #0
 4746 210a D4D1     		bne	.L274
 861:..\src/command_processing.c ****         //The following byte indicates the number of menus at the end of the packet to send
 862:..\src/command_processing.c ****         if (TYPES[idx] == TYPE_FLAG){
 4747              		.loc 1 862 0 is_stmt 1
 4748 210c 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 4749 2110 07F10802 		add	r2, r7, #8
 4750 2114 1268     		ldr	r2, [r2]
 4751 2116 1344     		add	r3, r3, r2
 4752 2118 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4753 211a 002B     		cmp	r3, #0
 4754 211c 21D1     		bne	.L275
 863:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght] = NUM_MEN
 4755              		.loc 1 863 0
 4756 211e 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 4757 2122 3222     		movs	r2, #50
 4758 2124 02FB03F3 		mul	r3, r2, r3
 4759 2128 1A1D     		adds	r2, r3, #4
 4760 212a 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 4761 212e 97F8551C 		ldrb	r1, [r7, #3157]	@ zero_extendqisi2
 4762 2132 381D     		adds	r0, r7, #4
 4763 2134 0068     		ldr	r0, [r0]
 4764 2136 0144     		add	r1, r1, r0
 4765 2138 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 4766 213a 01FB03F3 		mul	r3, r1, r3
 4767 213e 1A44     		add	r2, r2, r3
 4768 2140 97F8523C 		ldrb	r3, [r7, #3154]	@ zero_extendqisi2
 4769 2144 1344     		add	r3, r3, r2
 4770 2146 97F8542C 		ldrb	r2, [r7, #3156]	@ zero_extendqisi2
 4771 214a D7F8701C 		ldr	r1, [r7, #3184]
 4772 214e 0A44     		add	r2, r2, r1
 4773 2150 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 4774 2152 07F15802 		add	r2, r7, #88
 4775 2156 D154     		strb	r1, [r2, r3]
 864:..\src/command_processing.c ****             idx_menu = idx_menu + 1;
 4776              		.loc 1 864 0
 4777 2158 97F8543C 		ldrb	r3, [r7, #3156]
 4778 215c 0133     		adds	r3, r3, #1
 4779 215e 87F8543C 		strb	r3, [r7, #3156]
 4780              	.L275:
 865:..\src/command_processing.c ****         }      
 866:..\src/command_processing.c ****         
 867:..\src/command_processing.c ****         // Add struct index after an empty bit
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 119


 868:..\src/command_processing.c ****         // Note: added here at the end of packets is transparent to old parameters retrieving versi
 869:..\src/command_processing.c ****         if (TYPES[idx] == TYPE_FLAG){
 4781              		.loc 1 869 0
 4782 2162 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 4783 2166 07F10802 		add	r2, r7, #8
 4784 216a 1268     		ldr	r2, [r2]
 4785 216c 1344     		add	r3, r3, r2
 4786 216e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4787 2170 002B     		cmp	r3, #0
 4788 2172 1ED1     		bne	.L276
 870:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght + 2] = NUM
 4789              		.loc 1 870 0
 4790 2174 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 4791 2178 3222     		movs	r2, #50
 4792 217a 02FB03F3 		mul	r3, r2, r3
 4793 217e 1A1D     		adds	r2, r3, #4
 4794 2180 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 4795 2184 97F8551C 		ldrb	r1, [r7, #3157]	@ zero_extendqisi2
 4796 2188 381D     		adds	r0, r7, #4
 4797 218a 0068     		ldr	r0, [r0]
 4798 218c 0144     		add	r1, r1, r0
 4799 218e 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 4800 2190 01FB03F3 		mul	r3, r1, r3
 4801 2194 1A44     		add	r2, r2, r3
 4802 2196 97F8523C 		ldrb	r3, [r7, #3154]	@ zero_extendqisi2
 4803 219a 1344     		add	r3, r3, r2
 4804 219c 0233     		adds	r3, r3, #2
 4805 219e 97F8552C 		ldrb	r2, [r7, #3157]	@ zero_extendqisi2
 4806 21a2 3946     		mov	r1, r7
 4807 21a4 0968     		ldr	r1, [r1]
 4808 21a6 0A44     		add	r2, r2, r1
 4809 21a8 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 4810 21aa 07F15802 		add	r2, r7, #88
 4811 21ae D154     		strb	r1, [r2, r3]
 4812 21b0 1DE0     		b	.L277
 4813              	.L276:
 871:..\src/command_processing.c ****         }
 872:..\src/command_processing.c ****         else {
 873:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght + 1] = NUM
 4814              		.loc 1 873 0
 4815 21b2 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 4816 21b6 3222     		movs	r2, #50
 4817 21b8 02FB03F3 		mul	r3, r2, r3
 4818 21bc 1A1D     		adds	r2, r3, #4
 4819 21be 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 4820 21c2 97F8551C 		ldrb	r1, [r7, #3157]	@ zero_extendqisi2
 4821 21c6 381D     		adds	r0, r7, #4
 4822 21c8 0068     		ldr	r0, [r0]
 4823 21ca 0144     		add	r1, r1, r0
 4824 21cc 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 4825 21ce 01FB03F3 		mul	r3, r1, r3
 4826 21d2 1A44     		add	r2, r2, r3
 4827 21d4 97F8523C 		ldrb	r3, [r7, #3154]	@ zero_extendqisi2
 4828 21d8 1344     		add	r3, r3, r2
 4829 21da 0133     		adds	r3, r3, #1
 4830 21dc 97F8552C 		ldrb	r2, [r7, #3157]	@ zero_extendqisi2
 4831 21e0 3946     		mov	r1, r7
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 120


 4832 21e2 0968     		ldr	r1, [r1]
 4833 21e4 0A44     		add	r2, r2, r1
 4834 21e6 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 4835 21e8 07F15802 		add	r2, r7, #88
 4836 21ec D154     		strb	r1, [r2, r3]
 4837              	.L277:
 403:..\src/command_processing.c ****         
 4838              		.loc 1 403 0 discriminator 2
 4839 21ee 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 4840 21f2 0133     		adds	r3, r3, #1
 4841 21f4 87F8553C 		strb	r3, [r7, #3157]
 4842              	.L73:
 403:..\src/command_processing.c ****         
 4843              		.loc 1 403 0 is_stmt 0 discriminator 1
 4844 21f8 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 4845 21fc 232B     		cmp	r3, #35
 4846 21fe 7DF64CAF 		bls	.L278
 874:..\src/command_processing.c ****         }
 875:..\src/command_processing.c ****     }
 876:..\src/command_processing.c **** 
 877:..\src/command_processing.c ****     // Add menu
 878:..\src/command_processing.c ****     for (j = 0; j < NUM_OF_DEV_PARAM_MENUS; j++) {
 4847              		.loc 1 878 0 is_stmt 1
 4848 2202 0023     		movs	r3, #0
 4849 2204 87F8563C 		strb	r3, [r7, #3158]
 4850 2208 3DE0     		b	.L279
 4851              	.L282:
 879:..\src/command_processing.c ****         string_lenght = strlen((char*)MENU_STR[j]);
 4852              		.loc 1 879 0
 4853 220a 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 4854 220e 9B00     		lsls	r3, r3, #2
 4855 2210 D7F87C2C 		ldr	r2, [r7, #3196]
 4856 2214 1344     		add	r3, r3, r2
 4857 2216 1B68     		ldr	r3, [r3]
 4858 2218 1846     		mov	r0, r3
 4859 221a FFF7FEFF 		bl	strlen
 4860 221e 0346     		mov	r3, r0
 4861 2220 87F8523C 		strb	r3, [r7, #3154]
 880:..\src/command_processing.c ****         for(i = string_lenght; i != 0; i--)
 4862              		.loc 1 880 0
 4863 2224 97F8523C 		ldrb	r3, [r7, #3154]
 4864 2228 87F8573C 		strb	r3, [r7, #3159]
 4865 222c 22E0     		b	.L280
 4866              	.L281:
 881:..\src/command_processing.c ****             packet_data[PARAM_BYTE_SLOT*NUM_OF_DEV_PARAMS + 2 + j*PARAM_MENU_SLOT + string_lenght -
 4867              		.loc 1 881 0 discriminator 3
 4868 222e 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 4869 2232 9622     		movs	r2, #150
 4870 2234 02FB03F3 		mul	r3, r2, r3
 4871 2238 03F20A72 		addw	r2, r3, #1802
 4872 223c 97F8523C 		ldrb	r3, [r7, #3154]	@ zero_extendqisi2
 4873 2240 1A44     		add	r2, r2, r3
 4874 2242 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 4875 2246 D31A     		subs	r3, r2, r3
 4876 2248 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 4877 224c 9200     		lsls	r2, r2, #2
 4878 224e D7F87C1C 		ldr	r1, [r7, #3196]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 121


 4879 2252 0A44     		add	r2, r2, r1
 4880 2254 1268     		ldr	r2, [r2]
 4881 2256 97F8520C 		ldrb	r0, [r7, #3154]	@ zero_extendqisi2
 4882 225a 97F8571C 		ldrb	r1, [r7, #3159]	@ zero_extendqisi2
 4883 225e 411A     		subs	r1, r0, r1
 4884 2260 0A44     		add	r2, r2, r1
 4885 2262 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 4886 2264 07F15802 		add	r2, r7, #88
 4887 2268 D154     		strb	r1, [r2, r3]
 880:..\src/command_processing.c ****         for(i = string_lenght; i != 0; i--)
 4888              		.loc 1 880 0 discriminator 3
 4889 226a 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 4890 226e 013B     		subs	r3, r3, #1
 4891 2270 87F8573C 		strb	r3, [r7, #3159]
 4892              	.L280:
 880:..\src/command_processing.c ****         for(i = string_lenght; i != 0; i--)
 4893              		.loc 1 880 0 is_stmt 0 discriminator 1
 4894 2274 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 4895 2278 002B     		cmp	r3, #0
 4896 227a D8D1     		bne	.L281
 878:..\src/command_processing.c ****         string_lenght = strlen((char*)MENU_STR[j]);
 4897              		.loc 1 878 0 is_stmt 1 discriminator 2
 4898 227c 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 4899 2280 0133     		adds	r3, r3, #1
 4900 2282 87F8563C 		strb	r3, [r7, #3158]
 4901              	.L279:
 878:..\src/command_processing.c ****         string_lenght = strlen((char*)MENU_STR[j]);
 4902              		.loc 1 878 0 is_stmt 0 discriminator 1
 4903 2286 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 4904 228a 072B     		cmp	r3, #7
 4905 228c BDD9     		bls	.L282
 882:..\src/command_processing.c ****     }
 883:..\src/command_processing.c ****     
 884:..\src/command_processing.c ****     packet_data[packet_lenght - 1] = LCRChecksum(packet_data,packet_lenght - 1);
 4906              		.loc 1 884 0 is_stmt 1
 4907 228e B7F8503C 		ldrh	r3, [r7, #3152]
 4908 2292 5C1E     		subs	r4, r3, #1
 4909 2294 B7F8503C 		ldrh	r3, [r7, #3152]	@ movhi
 4910 2298 DBB2     		uxtb	r3, r3
 4911 229a 013B     		subs	r3, r3, #1
 4912 229c DAB2     		uxtb	r2, r3
 4913 229e 07F15803 		add	r3, r7, #88
 4914 22a2 1146     		mov	r1, r2
 4915 22a4 1846     		mov	r0, r3
 4916 22a6 FFF7FEFF 		bl	LCRChecksum
 4917 22aa 0346     		mov	r3, r0
 4918 22ac 1A46     		mov	r2, r3
 4919 22ae 07F15803 		add	r3, r7, #88
 4920 22b2 1A55     		strb	r2, [r3, r4]
 885:..\src/command_processing.c ****     commWrite(packet_data, packet_lenght);
 4921              		.loc 1 885 0
 4922 22b4 B7F8502C 		ldrh	r2, [r7, #3152]
 4923 22b8 07F15803 		add	r3, r7, #88
 4924 22bc 1146     		mov	r1, r2
 4925 22be 1846     		mov	r0, r3
 4926 22c0 FFF7FEFF 		bl	commWrite
 886:..\src/command_processing.c **** }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 122


 4927              		.loc 1 886 0
 4928 22c4 00BF     		nop
 4929 22c6 07F65C47 		addw	r7, r7, #3164
 4930              		.cfi_def_cfa_offset 20
 4931 22ca BD46     		mov	sp, r7
 4932              		.cfi_def_cfa_register 13
 4933              		@ sp needed
 4934 22cc F0BD     		pop	{r4, r5, r6, r7, pc}
 4935              	.L304:
 4936 22ce 00BF     		.align	2
 4937              	.L303:
 4938 22d0 00000000 		.word	c_mem
 4939 22d4 28020000 		.word	.LC125
 4940 22d8 40020000 		.word	.LC126
 4941 22dc 58020000 		.word	.LC127
 4942 22e0 70020000 		.word	.LC128
 4943              		.cfi_endproc
 4944              	.LFE67:
 4945              		.size	get_param_list, .-get_param_list
 4946              		.section	.rodata
 4947 0285 000000   		.align	2
 4948              	.LC130:
 4949 0288 30202D3E 		.ascii	"0 -> None\0121 -> Low (%u us delay for each 8-bit r"
 4949      204E6F6E 
 4949      650A3120 
 4949      2D3E204C 
 4949      6F772028 
 4950 02b8 65676973 		.ascii	"egister read)\0122 -> High (%u us delay for each 8-"
 4950      74657220 
 4950      72656164 
 4950      290A3220 
 4950      2D3E2048 
 4951 02e8 62697420 		.ascii	"bit register read)\012\000"
 4951      72656769 
 4951      73746572 
 4951      20726561 
 4951      64290A00 
 4952              		.align	2
 4953              	.LC131:
 4954 02fc 30202D3E 		.ascii	"0 -> Fast:syn2, Slow:syn1\0121 -> Slow:syn2, Fast:s"
 4954      20466173 
 4954      743A7379 
 4954      6E322C20 
 4954      536C6F77 
 4955 032c 796E310A 		.ascii	"yn1\012\000"
 4955      00
 4956 0331 000000   		.align	2
 4957              	.LC132:
 4958 0334 30202D3E 		.ascii	"0 -> Fast:wrist,Slow:hand\0121 -> Slow:wrist,Fast:h"
 4958      20466173 
 4958      743A7772 
 4958      6973742C 
 4958      536C6F77 
 4959 0364 616E640A 		.ascii	"and\012\000"
 4959      00
 4960 0369 000000   		.align	2
 4961              	.LC133:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 123


 4962 036c 30202D3E 		.ascii	"0 -> Usb\0121 -> Handle\0122 -> EMG proportional\012"
 4962      20557362 
 4962      0A31202D 
 4962      3E204861 
 4962      6E646C65 
 4963 0397 33202D3E 		.ascii	"3 -> EMG Integral\0124 -> EMG FCFS\0125 -> EMG FCFS"
 4963      20454D47 
 4963      20496E74 
 4963      65677261 
 4963      6C0A3420 
 4964 03c4 20416476 		.ascii	" Advanced\0126 -> Joystick\0127 -> EMG proportional"
 4964      616E6365 
 4964      640A3620 
 4964      2D3E204A 
 4964      6F797374 
 4965 03f1 204E430A 		.ascii	" NC\012\000"
 4965      00
 4966 03f6 0000     		.align	2
 4967              	.LC134:
 4968 03f8 30202D3E 		.ascii	"0 -> Position\0121 -> PWM\0122 -> Current\0123 -> P"
 4968      20506F73 
 4968      6974696F 
 4968      6E0A3120 
 4968      2D3E2050 
 4969 0422 6F736974 		.ascii	"osition and Current\012\000"
 4969      696F6E20 
 4969      616E6420 
 4969      43757272 
 4969      656E740A 
 4970 0437 00       		.align	2
 4971              	.LC135:
 4972 0438 30202D3E 		.ascii	"0 -> Deactivate [NO]\0121 -> Activate [YES]\012\000"
 4972      20446561 
 4972      63746976 
 4972      61746520 
 4972      5B4E4F5D 
 4973 0462 0000     		.align	2
 4974              	.LC136:
 4975 0464 30202D3E 		.ascii	"0 -> Right\0121 -> Left\012\000"
 4975      20526967 
 4975      68740A31 
 4975      202D3E20 
 4975      4C656674 
 4976 047a 0000     		.align	2
 4977              	.LC137:
 4978 047c 30202D3E 		.ascii	"0 -> OFF\0121 -> ON\012The board will reset\012\000"
 4978      204F4646 
 4978      0A31202D 
 4978      3E204F4E 
 4978      0A546865 
 4979 04a3 00       		.align	2
 4980              	.LC138:
 4981 04a4 30202D3E 		.ascii	"0 -> None\0121 -> SD/RTC board\0122 -> WiFi board ["
 4981      204E6F6E 
 4981      650A3120 
 4981      2D3E2053 
 4981      442F5254 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 124


 4982 04d1 4E2F415D 		.ascii	"N/A]\0123 -> Other [N/A]\012The board will reset\012"
 4982      0A33202D 
 4982      3E204F74 
 4982      68657220 
 4982      5B4E2F41 
 4983 04fc 00       		.ascii	"\000"
 4984 04fd 000000   		.align	2
 4985              	.LC139:
 4986 0500 30202D3E 		.ascii	"0 -> Generic user\0121 -> Maria\0122 -> R01\012The "
 4986      2047656E 
 4986      65726963 
 4986      20757365 
 4986      720A3120 
 4987 052a 626F6172 		.ascii	"board will reset\012\000"
 4987      64207769 
 4987      6C6C2072 
 4987      65736574 
 4987      0A00
 4988              		.align	2
 4989              	.LC140:
 4990 053c 30202D3E 		.ascii	"0 -> MC33887 (Standard)\0121 -> VNH5019 (High power"
 4990      204D4333 
 4990      33383837 
 4990      20285374 
 4990      616E6461 
 4991 056c 290A3220 		.ascii	")\0122 -> ESC (Brushless)\012The board will reset\012"
 4991      2D3E2045 
 4991      53432028 
 4991      42727573 
 4991      686C6573 
 4992 0598 00       		.ascii	"\000"
 4993 0599 000000   		.align	2
 4994              	.LC141:
 4995 059c 30202D3E 		.ascii	"0 -> SOFTHAND PRO\0121 -> GENERIC 2 MOTORS\0122 -> "
 4995      20534F46 
 4995      5448414E 
 4995      44205052 
 4995      4F0A3120 
 4996 05c9 41495220 		.ascii	"AIR CHAMBERS\0123 -> OTTOBOCK WRIST\0124 -> SOFTHAN"
 4996      4348414D 
 4996      42455253 
 4996      0A33202D 
 4996      3E204F54 
 4997 05f6 44203220 		.ascii	"D 2 MOTORS\012The board will reset\012\000"
 4997      4D4F544F 
 4997      52530A54 
 4997      68652062 
 4997      6F617264 
 4998 0617 00       		.align	2
 4999              	.LC142:
 5000 0618 30202D3E 		.ascii	"0 -> Close:CW, Open:CCW\0121 -> Close:CCW, Open:CW\012"
 5000      20436C6F 
 5000      73653A43 
 5000      572C204F 
 5000      70656E3A 
 5001 0648 00       		.ascii	"\000"
 5002 0649 000000   		.align	2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 125


 5003              	.LC0:
 5004 064c 02       		.byte	2
 5005 064d 07       		.byte	7
 5006 064e 07       		.byte	7
 5007 064f 00       		.byte	0
 5008 0650 00       		.byte	0
 5009 0651 00       		.byte	0
 5010 0652 02       		.byte	2
 5011 0653 03       		.byte	3
 5012 0654 07       		.byte	7
 5013 0655 00       		.byte	0
 5014 0656 05       		.byte	5
 5015 0657 05       		.byte	5
 5016 0658 03       		.byte	3
 5017 0659 04       		.byte	4
 5018 065a 00       		.byte	0
 5019 065b 06       		.byte	6
 5020 065c 02       		.byte	2
 5021 065d 00       		.byte	0
 5022 065e 01       		.byte	1
 5023 065f 00       		.byte	0
 5024 0660 07       		.byte	7
 5025 0661 02       		.byte	2
 5026 0662 05       		.byte	5
 5027 0663 05       		.byte	5
 5028 0664 05       		.byte	5
 5029 0665 00       		.byte	0
 5030 0666 00       		.byte	0
 5031 0667 00       		.byte	0
 5032 0668 00       		.byte	0
 5033 0669 00       		.byte	0
 5034 066a 00       		.byte	0
 5035 066b 02       		.byte	2
 5036 066c 00       		.byte	0
 5037 066d 02       		.byte	2
 5038 066e 00       		.byte	0
 5039 066f 09       		.byte	9
 5040 0670 02       		.byte	2
 5041 0671 00       		.byte	0
 5042 0672 02       		.byte	2
 5043 0673 00       		.byte	0
 5044 0674 02       		.byte	2
 5045 0675 01       		.byte	1
 5046 0676 00       		.byte	0
 5047 0677 07       		.byte	7
 5048 0678 07       		.byte	7
 5049 0679 00       		.byte	0
 5050 067a 00       		.byte	0
 5051 067b 00       		.byte	0
 5052 067c 02       		.byte	2
 5053 067d 03       		.byte	3
 5054 067e 07       		.byte	7
 5055 067f 00       		.byte	0
 5056 0680 05       		.byte	5
 5057 0681 05       		.byte	5
 5058 0682 03       		.byte	3
 5059 0683 00       		.byte	0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 126


 5060 0684 01       		.byte	1
 5061 0685 00       		.byte	0
 5062 0686 07       		.byte	7
 5063 0687 02       		.byte	2
 5064 0688 00       		.byte	0
 5065 0689 02       		.byte	2
 5066 068a 00       		.byte	0
 5067 068b 02       		.byte	2
 5068 068c 01       		.byte	1
 5069 068d 02       		.byte	2
 5070 068e 02       		.byte	2
 5071 068f 00       		.byte	0
 5072 0690 02       		.byte	2
 5073 0691 02       		.byte	2
 5074 0692 00       		.byte	0
 5075 0693 04       		.byte	4
 5076 0694 03       		.byte	3
 5077 0695 04       		.byte	4
 5078 0696 00       		.byte	0
 5079 0697 00       		.byte	0
 5080 0698 04       		.byte	4
 5081 0699 00       		.byte	0
 5082 069a 00       		.byte	0
 5083 069b 02       		.byte	2
 5084 069c 05       		.byte	5
 5085 069d 07       		.byte	7
 5086 069e 07       		.byte	7
 5087 069f 00       		.align	2
 5088              	.LC1:
 5089 06a0 31202D20 		.ascii	"1 - Device ID:\000"
 5089      44657669 
 5089      63652049 
 5089      443A00
 5090 06af 00       		.align	2
 5091              	.LC2:
 5092 06b0 32202D20 		.ascii	"2 - Position PID [P, I, D]:\000"
 5092      506F7369 
 5092      74696F6E 
 5092      20504944 
 5092      205B502C 
 5093              		.align	2
 5094              	.LC3:
 5095 06cc 33202D20 		.ascii	"3 - Current PID [P, I, D]:\000"
 5095      43757272 
 5095      656E7420 
 5095      50494420 
 5095      5B502C20 
 5096 06e7 00       		.align	2
 5097              	.LC4:
 5098 06e8 34202D20 		.ascii	"4 - Startup Activation:\000"
 5098      53746172 
 5098      74757020 
 5098      41637469 
 5098      76617469 
 5099              		.align	2
 5100              	.LC5:
 5101 0700 35202D20 		.ascii	"5 - Input mode:\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 127


 5101      496E7075 
 5101      74206D6F 
 5101      64653A00 
 5102              		.align	2
 5103              	.LC6:
 5104 0710 36202D20 		.ascii	"6 - Control mode:\000"
 5104      436F6E74 
 5104      726F6C20 
 5104      6D6F6465 
 5104      3A00
 5105 0722 0000     		.align	2
 5106              	.LC7:
 5107 0724 37202D20 		.ascii	"7 - Resolutions:\000"
 5107      5265736F 
 5107      6C757469 
 5107      6F6E733A 
 5107      00
 5108 0735 000000   		.align	2
 5109              	.LC8:
 5110 0738 38202D20 		.ascii	"8 - Measurement Offsets:\000"
 5110      4D656173 
 5110      7572656D 
 5110      656E7420 
 5110      4F666673 
 5111 0751 000000   		.align	2
 5112              	.LC9:
 5113 0754 39202D20 		.ascii	"9 - Multipliers:\000"
 5113      4D756C74 
 5113      69706C69 
 5113      6572733A 
 5113      00
 5114 0765 000000   		.align	2
 5115              	.LC10:
 5116 0768 3130202D 		.ascii	"10 - Pos. limit active:\000"
 5116      20506F73 
 5116      2E206C69 
 5116      6D697420 
 5116      61637469 
 5117              		.align	2
 5118              	.LC11:
 5119 0780 3131202D 		.ascii	"11 - Pos. limits [inf, sup]:\000"
 5119      20506F73 
 5119      2E206C69 
 5119      6D697473 
 5119      205B696E 
 5120 079d 000000   		.align	2
 5121              	.LC12:
 5122 07a0 3132202D 		.ascii	"12 - Max steps [neg, pos]:\000"
 5122      204D6178 
 5122      20737465 
 5122      7073205B 
 5122      6E65672C 
 5123 07bb 00       		.align	2
 5124              	.LC13:
 5125 07bc 3133202D 		.ascii	"13 - Current limit:\000"
 5125      20437572 
 5125      72656E74 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 128


 5125      206C696D 
 5125      69743A00 
 5126              		.align	2
 5127              	.LC14:
 5128 07d0 3134202D 		.ascii	"14 - EMG thresholds:\000"
 5128      20454D47 
 5128      20746872 
 5128      6573686F 
 5128      6C64733A 
 5129 07e5 000000   		.align	2
 5130              	.LC15:
 5131 07e8 3135202D 		.ascii	"15 - EMG calibration on startup:\000"
 5131      20454D47 
 5131      2063616C 
 5131      69627261 
 5131      74696F6E 
 5132 0809 000000   		.align	2
 5133              	.LC16:
 5134 080c 3136202D 		.ascii	"16 - EMG max values:\000"
 5134      20454D47 
 5134      206D6178 
 5134      2076616C 
 5134      7565733A 
 5135 0821 000000   		.align	2
 5136              	.LC17:
 5137 0824 3137202D 		.ascii	"17 - EMG max speeds:\000"
 5137      20454D47 
 5137      206D6178 
 5137      20737065 
 5137      6564733A 
 5138 0839 000000   		.align	2
 5139              	.LC18:
 5140 083c 3138202D 		.ascii	"18 - Absolute encoder position:\000"
 5140      20416273 
 5140      6F6C7574 
 5140      6520656E 
 5140      636F6465 
 5141              		.align	2
 5142              	.LC19:
 5143 085c 3139202D 		.ascii	"19 - Motor handle ratio:\000"
 5143      204D6F74 
 5143      6F722068 
 5143      616E646C 
 5143      65207261 
 5144 0875 000000   		.align	2
 5145              	.LC20:
 5146 0878 3230202D 		.ascii	"20 - PWM rescaling:\000"
 5146      2050574D 
 5146      20726573 
 5146      63616C69 
 5146      6E673A00 
 5147              		.align	2
 5148              	.LC21:
 5149 088c 3231202D 		.ascii	"21 - Current lookup:\000"
 5149      20437572 
 5149      72656E74 
 5149      206C6F6F 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 129


 5149      6B75703A 
 5150 08a1 000000   		.align	2
 5151              	.LC22:
 5152 08a4 3232202D 		.ascii	"22 - Date of maintenance [D/M/Y]:\000"
 5152      20446174 
 5152      65206F66 
 5152      206D6169 
 5152      6E74656E 
 5153 08c6 0000     		.align	2
 5154              	.LC23:
 5155 08c8 3233202D 		.ascii	"23 - Rest position:\000"
 5155      20526573 
 5155      7420706F 
 5155      73697469 
 5155      6F6E3A00 
 5156              		.align	2
 5157              	.LC24:
 5158 08dc 3234202D 		.ascii	"24 - Rest position time delay (ms):\000"
 5158      20526573 
 5158      7420706F 
 5158      73697469 
 5158      6F6E2074 
 5159              		.align	2
 5160              	.LC25:
 5161 0900 3235202D 		.ascii	"25 - Rest vel closure (ticks/sec):\000"
 5161      20526573 
 5161      74207665 
 5161      6C20636C 
 5161      6F737572 
 5162 0923 00       		.align	2
 5163              	.LC26:
 5164 0924 3236202D 		.ascii	"26 - Rest position enabled:\000"
 5164      20526573 
 5164      7420706F 
 5164      73697469 
 5164      6F6E2065 
 5165              		.align	2
 5166              	.LC27:
 5167 0940 3237202D 		.ascii	"27 - EMG inversion:\000"
 5167      20454D47 
 5167      20696E76 
 5167      65727369 
 5167      6F6E3A00 
 5168              		.align	2
 5169              	.LC28:
 5170 0954 3238202D 		.ascii	"28 - Hand side:\000"
 5170      2048616E 
 5170      64207369 
 5170      64653A00 
 5171              		.align	2
 5172              	.LC29:
 5173 0964 3239202D 		.ascii	"29 - Enable IMUs:\000"
 5173      20456E61 
 5173      626C6520 
 5173      494D5573 
 5173      3A00
 5174 0976 0000     		.align	2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 130


 5175              	.LC30:
 5176 0978 3330202D 		.ascii	"30 - Read Expansion port:\000"
 5176      20526561 
 5176      64204578 
 5176      70616E73 
 5176      696F6E20 
 5177 0992 0000     		.align	2
 5178              	.LC31:
 5179 0994 3331202D 		.ascii	"31 - Reset counters:\000"
 5179      20526573 
 5179      65742063 
 5179      6F756E74 
 5179      6572733A 
 5180 09a9 000000   		.align	2
 5181              	.LC32:
 5182 09ac 3332202D 		.ascii	"32 - Last checked Time [D/M/Y H:M:S]:\000"
 5182      204C6173 
 5182      74206368 
 5182      65636B65 
 5182      64205469 
 5183 09d2 0000     		.align	2
 5184              	.LC33:
 5185 09d4 3333202D 		.ascii	"33 - SPI read delay (IMU):\000"
 5185      20535049 
 5185      20726561 
 5185      64206465 
 5185      6C617920 
 5186 09ef 00       		.align	2
 5187              	.LC34:
 5188 09f0 3334202D 		.ascii	"34 - On board IMU conf. [a,g,m,q,t]:\000"
 5188      204F6E20 
 5188      626F6172 
 5188      6420494D 
 5188      5520636F 
 5189 0a15 000000   		.align	2
 5190              	.LC35:
 5191 0a18 3335202D 		.ascii	"35 - User ID:\000"
 5191      20557365 
 5191      72204944 
 5191      3A00
 5192 0a26 0000     		.align	2
 5193              	.LC36:
 5194 0a28 3336202D 		.ascii	"36 - User code:\000"
 5194      20557365 
 5194      7220636F 
 5194      64653A00 
 5195              		.align	2
 5196              	.LC37:
 5197 0a38 3337202D 		.ascii	"37 - Associated encoder line:\000"
 5197      20417373 
 5197      6F636961 
 5197      74656420 
 5197      656E636F 
 5198 0a56 0000     		.align	2
 5199              	.LC38:
 5200 0a58 3338202D 		.ascii	"38 - Driver type:\000"
 5200      20447269 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 131


 5200      76657220 
 5200      74797065 
 5200      3A00
 5201 0a6a 0000     		.align	2
 5202              	.LC39:
 5203 0a6c 3339202D 		.ascii	"39 - PWM rate limiter:\000"
 5203      2050574D 
 5203      20726174 
 5203      65206C69 
 5203      6D697465 
 5204 0a83 00       		.align	2
 5205              	.LC40:
 5206 0a84 3430202D 		.ascii	"40 - Not reversible:\000"
 5206      204E6F74 
 5206      20726576 
 5206      65727369 
 5206      626C653A 
 5207 0a99 000000   		.align	2
 5208              	.LC41:
 5209 0a9c 3431202D 		.ascii	"41 - Enc idx used for control:\000"
 5209      20456E63 
 5209      20696478 
 5209      20757365 
 5209      6420666F 
 5210 0abb 00       		.align	2
 5211              	.LC42:
 5212 0abc 3432202D 		.ascii	"42 - Gear params[N1, N2, I1]:\000"
 5212      20476561 
 5212      72207061 
 5212      72616D73 
 5212      5B4E312C 
 5213 0ada 0000     		.align	2
 5214              	.LC43:
 5215 0adc 3433202D 		.ascii	"43 - Use second motor:\000"
 5215      20557365 
 5215      20736563 
 5215      6F6E6420 
 5215      6D6F746F 
 5216 0af3 00       		.align	2
 5217              	.LC44:
 5218 0af4 3434202D 		.ascii	"44 - Position PID [P, I, D]:\000"
 5218      20506F73 
 5218      6974696F 
 5218      6E205049 
 5218      44205B50 
 5219 0b11 000000   		.align	2
 5220              	.LC45:
 5221 0b14 3435202D 		.ascii	"45 - Current PID [P, I, D]:\000"
 5221      20437572 
 5221      72656E74 
 5221      20504944 
 5221      205B502C 
 5222              		.align	2
 5223              	.LC46:
 5224 0b30 3436202D 		.ascii	"46 - Startup Activation:\000"
 5224      20537461 
 5224      72747570 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 132


 5224      20416374 
 5224      69766174 
 5225 0b49 000000   		.align	2
 5226              	.LC47:
 5227 0b4c 3437202D 		.ascii	"47 - Input mode:\000"
 5227      20496E70 
 5227      7574206D 
 5227      6F64653A 
 5227      00
 5228 0b5d 000000   		.align	2
 5229              	.LC48:
 5230 0b60 3438202D 		.ascii	"48 - Control mode:\000"
 5230      20436F6E 
 5230      74726F6C 
 5230      206D6F64 
 5230      653A00
 5231 0b73 00       		.align	2
 5232              	.LC49:
 5233 0b74 3439202D 		.ascii	"49 - Resolutions:\000"
 5233      20526573 
 5233      6F6C7574 
 5233      696F6E73 
 5233      3A00
 5234 0b86 0000     		.align	2
 5235              	.LC50:
 5236 0b88 3530202D 		.ascii	"50 - Measurement Offsets:\000"
 5236      204D6561 
 5236      73757265 
 5236      6D656E74 
 5236      204F6666 
 5237 0ba2 0000     		.align	2
 5238              	.LC51:
 5239 0ba4 3531202D 		.ascii	"51 - Multipliers:\000"
 5239      204D756C 
 5239      7469706C 
 5239      69657273 
 5239      3A00
 5240 0bb6 0000     		.align	2
 5241              	.LC52:
 5242 0bb8 3532202D 		.ascii	"52 - Pos. limit active:\000"
 5242      20506F73 
 5242      2E206C69 
 5242      6D697420 
 5242      61637469 
 5243              		.align	2
 5244              	.LC53:
 5245 0bd0 3533202D 		.ascii	"53 - Pos. limits [inf, sup]:\000"
 5245      20506F73 
 5245      2E206C69 
 5245      6D697473 
 5245      205B696E 
 5246 0bed 000000   		.align	2
 5247              	.LC54:
 5248 0bf0 3534202D 		.ascii	"54 - Max steps [neg, pos]:\000"
 5248      204D6178 
 5248      20737465 
 5248      7073205B 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 133


 5248      6E65672C 
 5249 0c0b 00       		.align	2
 5250              	.LC55:
 5251 0c0c 3535202D 		.ascii	"55 - Current limit:\000"
 5251      20437572 
 5251      72656E74 
 5251      206C696D 
 5251      69743A00 
 5252              		.align	2
 5253              	.LC56:
 5254 0c20 3536202D 		.ascii	"56 - Absolute encoder position:\000"
 5254      20416273 
 5254      6F6C7574 
 5254      6520656E 
 5254      636F6465 
 5255              		.align	2
 5256              	.LC57:
 5257 0c40 3537202D 		.ascii	"57 - Motor handle ratio:\000"
 5257      204D6F74 
 5257      6F722068 
 5257      616E646C 
 5257      65207261 
 5258 0c59 000000   		.align	2
 5259              	.LC58:
 5260 0c5c 3538202D 		.ascii	"58 - PWM rescaling:\000"
 5260      2050574D 
 5260      20726573 
 5260      63616C69 
 5260      6E673A00 
 5261              		.align	2
 5262              	.LC59:
 5263 0c70 3539202D 		.ascii	"59 - Current lookup:\000"
 5263      20437572 
 5263      72656E74 
 5263      206C6F6F 
 5263      6B75703A 
 5264 0c85 000000   		.align	2
 5265              	.LC60:
 5266 0c88 3630202D 		.ascii	"60 - Associated encoder line:\000"
 5266      20417373 
 5266      6F636961 
 5266      74656420 
 5266      656E636F 
 5267 0ca6 0000     		.align	2
 5268              	.LC61:
 5269 0ca8 3631202D 		.ascii	"61 - Driver type:\000"
 5269      20447269 
 5269      76657220 
 5269      74797065 
 5269      3A00
 5270 0cba 0000     		.align	2
 5271              	.LC62:
 5272 0cbc 3632202D 		.ascii	"62 - PWM rate limiter:\000"
 5272      2050574D 
 5272      20726174 
 5272      65206C69 
 5272      6D697465 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 134


 5273 0cd3 00       		.align	2
 5274              	.LC63:
 5275 0cd4 3633202D 		.ascii	"63 - Not reversible:\000"
 5275      204E6F74 
 5275      20726576 
 5275      65727369 
 5275      626C653A 
 5276 0ce9 000000   		.align	2
 5277              	.LC64:
 5278 0cec 3634202D 		.ascii	"64 - Enc idx used for control:\000"
 5278      20456E63 
 5278      20696478 
 5278      20757365 
 5278      6420666F 
 5279 0d0b 00       		.align	2
 5280              	.LC65:
 5281 0d0c 3635202D 		.ascii	"65 - Gear params[N1, N2, I1]:\000"
 5281      20476561 
 5281      72207061 
 5281      72616D73 
 5281      5B4E312C 
 5282 0d2a 0000     		.align	2
 5283              	.LC66:
 5284 0d2c 3636202D 		.ascii	"66 - Read enc raw line 0:\000"
 5284      20526561 
 5284      6420656E 
 5284      63207261 
 5284      77206C69 
 5285 0d46 0000     		.align	2
 5286              	.LC67:
 5287 0d48 3637202D 		.ascii	"67 - Read enc raw line 1:\000"
 5287      20526561 
 5287      6420656E 
 5287      63207261 
 5287      77206C69 
 5288 0d62 0000     		.align	2
 5289              	.LC68:
 5290 0d64 3638202D 		.ascii	"68 - Read additional ADC port:\000"
 5290      20526561 
 5290      64206164 
 5290      64697469 
 5290      6F6E616C 
 5291 0d83 00       		.align	2
 5292              	.LC69:
 5293 0d84 3639202D 		.ascii	"69 - ADC channel [1-6]:\000"
 5293      20414443 
 5293      20636861 
 5293      6E6E656C 
 5293      205B312D 
 5294              		.align	2
 5295              	.LC70:
 5296 0d9c 3730202D 		.ascii	"70 - ADC channel [7-12]:\000"
 5296      20414443 
 5296      20636861 
 5296      6E6E656C 
 5296      205B372D 
 5297 0db5 000000   		.align	2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 135


 5298              	.LC71:
 5299 0db8 3731202D 		.ascii	"71 - Record EMG on SD card:\000"
 5299      20526563 
 5299      6F726420 
 5299      454D4720 
 5299      6F6E2053 
 5300              		.align	2
 5301              	.LC72:
 5302 0dd4 3732202D 		.ascii	"72 - Joystick closure speed:\000"
 5302      204A6F79 
 5302      73746963 
 5302      6B20636C 
 5302      6F737572 
 5303 0df1 000000   		.align	2
 5304              	.LC73:
 5305 0df4 3733202D 		.ascii	"73 - Joystick threshold:\000"
 5305      204A6F79 
 5305      73746963 
 5305      6B207468 
 5305      72657368 
 5306 0e0d 000000   		.align	2
 5307              	.LC74:
 5308 0e10 3734202D 		.ascii	"74 - Joystick gains:\000"
 5308      204A6F79 
 5308      73746963 
 5308      6B206761 
 5308      696E733A 
 5309 0e25 000000   		.align	2
 5310              	.LC75:
 5311 0e28 3735202D 		.ascii	"75 - Device type:\000"
 5311      20446576 
 5311      69636520 
 5311      74797065 
 5311      3A00
 5312 0e3a 0000     		.align	2
 5313              	.LC76:
 5314 0e3c 3736202D 		.ascii	"76 - EMG FSM act.mode:\000"
 5314      20454D47 
 5314      2046534D 
 5314      20616374 
 5314      2E6D6F64 
 5315 0e53 00       		.align	2
 5316              	.LC77:
 5317 0e54 3737202D 		.ascii	"77 - Fast act.thresholds:\000"
 5317      20466173 
 5317      74206163 
 5317      742E7468 
 5317      72657368 
 5318 0e6e 0000     		.align	2
 5319              	.LC78:
 5320 0e70 3738202D 		.ascii	"78 - Wrist direction:\000"
 5320      20577269 
 5320      73742064 
 5320      69726563 
 5320      74696F6E 
 5321 0e86 0000     		.align	2
 5322              	.LC79:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 136


 5323 0e88 3739202D 		.ascii	"79 - Slave communication active:\000"
 5323      20536C61 
 5323      76652063 
 5323      6F6D6D75 
 5323      6E696361 
 5324 0ea9 000000   		.align	2
 5325              	.LC80:
 5326 0eac 3830202D 		.ascii	"80 - Slave ID:\000"
 5326      20536C61 
 5326      76652049 
 5326      443A00
 5327 0ebb 00       		.align	2
 5328              	.LC81:
 5329 0ebc 3831202D 		.ascii	"81 - Maximum slave residual current:\000"
 5329      204D6178 
 5329      696D756D 
 5329      20736C61 
 5329      76652072 
 5330 0ee1 000000   		.align	2
 5331              	.LC82:
 5332 0ee4 3832202D 		.ascii	"82 - Maximum pressure feedback (kPa):\000"
 5332      204D6178 
 5332      696D756D 
 5332      20707265 
 5332      73737572 
 5333 0f0a 0000     		.align	2
 5334              	.LC83:
 5335 0f0c 3833202D 		.ascii	"83 - Proportional pressure error gain:\000"
 5335      2050726F 
 5335      706F7274 
 5335      696F6E61 
 5335      6C207072 
 5336 0f33 00       		.align	2
 5337              	.LC129:
 5338 0f34 A0060000 		.word	.LC1
 5339 0f38 B0060000 		.word	.LC2
 5340 0f3c CC060000 		.word	.LC3
 5341 0f40 E8060000 		.word	.LC4
 5342 0f44 00070000 		.word	.LC5
 5343 0f48 10070000 		.word	.LC6
 5344 0f4c 24070000 		.word	.LC7
 5345 0f50 38070000 		.word	.LC8
 5346 0f54 54070000 		.word	.LC9
 5347 0f58 68070000 		.word	.LC10
 5348 0f5c 80070000 		.word	.LC11
 5349 0f60 A0070000 		.word	.LC12
 5350 0f64 BC070000 		.word	.LC13
 5351 0f68 D0070000 		.word	.LC14
 5352 0f6c E8070000 		.word	.LC15
 5353 0f70 0C080000 		.word	.LC16
 5354 0f74 24080000 		.word	.LC17
 5355 0f78 3C080000 		.word	.LC18
 5356 0f7c 5C080000 		.word	.LC19
 5357 0f80 78080000 		.word	.LC20
 5358 0f84 8C080000 		.word	.LC21
 5359 0f88 A4080000 		.word	.LC22
 5360 0f8c C8080000 		.word	.LC23
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 137


 5361 0f90 DC080000 		.word	.LC24
 5362 0f94 00090000 		.word	.LC25
 5363 0f98 24090000 		.word	.LC26
 5364 0f9c 40090000 		.word	.LC27
 5365 0fa0 54090000 		.word	.LC28
 5366 0fa4 64090000 		.word	.LC29
 5367 0fa8 78090000 		.word	.LC30
 5368 0fac 94090000 		.word	.LC31
 5369 0fb0 AC090000 		.word	.LC32
 5370 0fb4 D4090000 		.word	.LC33
 5371 0fb8 F0090000 		.word	.LC34
 5372 0fbc 180A0000 		.word	.LC35
 5373 0fc0 280A0000 		.word	.LC36
 5374 0fc4 380A0000 		.word	.LC37
 5375 0fc8 580A0000 		.word	.LC38
 5376 0fcc 6C0A0000 		.word	.LC39
 5377 0fd0 840A0000 		.word	.LC40
 5378 0fd4 9C0A0000 		.word	.LC41
 5379 0fd8 BC0A0000 		.word	.LC42
 5380 0fdc DC0A0000 		.word	.LC43
 5381 0fe0 F40A0000 		.word	.LC44
 5382 0fe4 140B0000 		.word	.LC45
 5383 0fe8 300B0000 		.word	.LC46
 5384 0fec 4C0B0000 		.word	.LC47
 5385 0ff0 600B0000 		.word	.LC48
 5386 0ff4 740B0000 		.word	.LC49
 5387 0ff8 880B0000 		.word	.LC50
 5388 0ffc A40B0000 		.word	.LC51
 5389 1000 B80B0000 		.word	.LC52
 5390 1004 D00B0000 		.word	.LC53
 5391 1008 F00B0000 		.word	.LC54
 5392 100c 0C0C0000 		.word	.LC55
 5393 1010 200C0000 		.word	.LC56
 5394 1014 400C0000 		.word	.LC57
 5395 1018 5C0C0000 		.word	.LC58
 5396 101c 700C0000 		.word	.LC59
 5397 1020 880C0000 		.word	.LC60
 5398 1024 A80C0000 		.word	.LC61
 5399 1028 BC0C0000 		.word	.LC62
 5400 102c D40C0000 		.word	.LC63
 5401 1030 EC0C0000 		.word	.LC64
 5402 1034 0C0D0000 		.word	.LC65
 5403 1038 2C0D0000 		.word	.LC66
 5404 103c 480D0000 		.word	.LC67
 5405 1040 640D0000 		.word	.LC68
 5406 1044 840D0000 		.word	.LC69
 5407 1048 9C0D0000 		.word	.LC70
 5408 104c B80D0000 		.word	.LC71
 5409 1050 D40D0000 		.word	.LC72
 5410 1054 F40D0000 		.word	.LC73
 5411 1058 100E0000 		.word	.LC74
 5412 105c 280E0000 		.word	.LC75
 5413 1060 3C0E0000 		.word	.LC76
 5414 1064 540E0000 		.word	.LC77
 5415 1068 700E0000 		.word	.LC78
 5416 106c 880E0000 		.word	.LC79
 5417 1070 AC0E0000 		.word	.LC80
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 138


 5418 1074 BC0E0000 		.word	.LC81
 5419 1078 E40E0000 		.word	.LC82
 5420 107c 0C0F0000 		.word	.LC83
 5421              		.align	2
 5422              	.LC85:
 5423 1080 03       		.byte	3
 5424 1081 01       		.byte	1
 5425 1082 02       		.byte	2
 5426 1083 03       		.byte	3
 5427 1084 03       		.byte	3
 5428 1085 03       		.byte	3
 5429 1086 03       		.byte	3
 5430 1087 03       		.byte	3
 5431 1088 03       		.byte	3
 5432 1089 04       		.byte	4
 5433 108a 05       		.byte	5
 5434 108b 06       		.byte	6
 5435 108c 03       		.byte	3
 5436 108d 07       		.byte	7
 5437 108e 08       		.byte	8
 5438 108f 09       		.byte	9
 5439 1090 03       		.byte	3
 5440 1091 05       		.byte	5
 5441 1092 03       		.byte	3
 5442 1093 01       		.byte	1
 5443 1094 02       		.byte	2
 5444 1095 03       		.byte	3
 5445 1096 03       		.byte	3
 5446 1097 03       		.byte	3
 5447 1098 09       		.byte	9
 5448 1099 03       		.byte	3
 5449 109a 05       		.byte	5
 5450 109b 03       		.byte	3
 5451 109c 0A       		.byte	10
 5452 109d 0B       		.byte	11
 5453 109e 0C       		.byte	12
 5454 109f 03       		.byte	3
 5455              		.align	2
 5456              	.LC86:
 5457 10a0 02       		.byte	2
 5458 10a1 03       		.byte	3
 5459 10a2 08       		.byte	8
 5460 10a3 0B       		.byte	11
 5461 10a4 17       		.byte	23
 5462 10a5 2C       		.byte	44
 5463 10a6 2D       		.byte	45
 5464 10a7 32       		.byte	50
 5465 10a8 35       		.byte	53
 5466 10a9 000000   		.align	2
 5467              	.LC87:
 5468 10ac 02       		.byte	2
 5469 10ad 03       		.byte	3
 5470 10ae 05       		.byte	5
 5471 10af 08       		.byte	8
 5472 10b0 0B       		.byte	11
 5473 10b1 17       		.byte	23
 5474 10b2 18       		.byte	24
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 139


 5475 10b3 1C       		.byte	28
 5476 10b4 1F       		.byte	31
 5477 10b5 20       		.byte	32
 5478 10b6 26       		.byte	38
 5479 10b7 2C       		.byte	44
 5480 10b8 2D       		.byte	45
 5481 10b9 2F       		.byte	47
 5482 10ba 32       		.byte	50
 5483 10bb 35       		.byte	53
 5484 10bc 3D       		.byte	61
 5485 10bd 4B       		.byte	75
 5486              		.section	.text.manage_param_list,"ax",%progbits
 5487              		.align	2
 5488              		.global	manage_param_list
 5489              		.thumb
 5490              		.thumb_func
 5491              		.type	manage_param_list, %function
 5492              	manage_param_list:
 5493              	.LFB68:
 887:..\src/command_processing.c **** 
 888:..\src/command_processing.c **** //==============================================================================
 889:..\src/command_processing.c **** //                                                             MANAGE PARAM LIST
 890:..\src/command_processing.c **** //==============================================================================
 891:..\src/command_processing.c **** 
 892:..\src/command_processing.c **** void manage_param_list(uint16 index) {
 5494              		.loc 1 892 0
 5495              		.cfi_startproc
 5496              		@ args = 0, pretend = 0, frame = 1416
 5497              		@ frame_needed = 1, uses_anonymous_args = 0
 5498 0000 B0B5     		push	{r4, r5, r7, lr}
 5499              		.cfi_def_cfa_offset 16
 5500              		.cfi_offset 4, -16
 5501              		.cfi_offset 5, -12
 5502              		.cfi_offset 7, -8
 5503              		.cfi_offset 14, -4
 5504 0002 ADF5B36D 		sub	sp, sp, #1432
 5505              		.cfi_def_cfa_offset 1448
 5506 0006 04AF     		add	r7, sp, #16
 5507              		.cfi_def_cfa 7, 1432
 5508 0008 0246     		mov	r2, r0
 5509 000a BB1D     		adds	r3, r7, #6
 5510 000c 1A80     		strh	r2, [r3]	@ movhi
 893:..\src/command_processing.c ****     uint8 CYDATA i, j;
 894:..\src/command_processing.c ****     uint8 CYDATA sod;
 895:..\src/command_processing.c ****     uint8 PARAM_IDX;
 896:..\src/command_processing.c ****     int16 aux_int16;
 897:..\src/command_processing.c ****     uint16 aux_uint16;
 898:..\src/command_processing.c ****     int32 aux_int32;
 899:..\src/command_processing.c ****     uint32 aux_uint32;
 900:..\src/command_processing.c ****     float aux_float;
 901:..\src/command_processing.c ****  
 902:..\src/command_processing.c ****     uint8 MOTOR_IDX = 0;
 5511              		.loc 1 902 0
 5512 000e 0023     		movs	r3, #0
 5513 0010 87F87D35 		strb	r3, [r7, #1405]
 903:..\src/command_processing.c ****     uint8 SECOND_MOTOR_IDX = 1;
 5514              		.loc 1 903 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 140


 5515 0014 0123     		movs	r3, #1
 5516 0016 87F87C35 		strb	r3, [r7, #1404]
 904:..\src/command_processing.c ****     
 905:..\src/command_processing.c ****     // Arrays
 906:..\src/command_processing.c ****     struct st_eeprom* MEM_P = &c_mem;   // c_mem is used for param reading
 5517              		.loc 1 906 0
 5518 001a 054B     		ldr	r3, .L368
 5519 001c C7F88035 		str	r3, [r7, #1408]
 907:..\src/command_processing.c ****     
 908:..\src/command_processing.c ****     if (index){                         // Switch from c_mem to g_mem
 5520              		.loc 1 908 0
 5521 0020 BB1D     		adds	r3, r7, #6
 5522 0022 1B88     		ldrh	r3, [r3]
 5523 0024 002B     		cmp	r3, #0
 5524 0026 07D0     		beq	.L306
 909:..\src/command_processing.c ****         MEM_P = &g_mem;                 // g_mem is used for param setting
 5525              		.loc 1 909 0
 5526 0028 024B     		ldr	r3, .L368+4
 5527 002a C7F88035 		str	r3, [r7, #1408]
 5528 002e 03E0     		b	.L369
 5529              	.L370:
 5530              		.align	2
 5531              	.L368:
 5532 0030 00000000 		.word	c_mem
 5533 0034 00000000 		.word	g_mem
 5534              	.L369:
 5535              	.L306:
 910:..\src/command_processing.c ****     }
 911:..\src/command_processing.c ****  
 912:..\src/command_processing.c ****     
 913:..\src/command_processing.c **** //------------------ BEGIN OF PARAMETERS VARIABLES --------------------//    
 914:..\src/command_processing.c ****     uint8* VAR_P[NUM_OF_PARAMS] = { 
 915:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5536              		.loc 1 915 0
 5537 0038 D7F88035 		ldr	r3, [r7, #1408]
 5538 003c 03F1A002 		add	r2, r3, #160
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5539              		.loc 1 914 0
 5540 0040 07F21C43 		addw	r3, r7, #1052
 5541 0044 1A60     		str	r2, [r3]
 916:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].k_p),
 5542              		.loc 1 916 0
 5543 0046 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 5544 004a 1346     		mov	r3, r2
 5545 004c DB00     		lsls	r3, r3, #3
 5546 004e 9B1A     		subs	r3, r3, r2
 5547 0050 1B01     		lsls	r3, r3, #4
 5548 0052 B033     		adds	r3, r3, #176
 5549 0054 D7F88025 		ldr	r2, [r7, #1408]
 5550 0058 1A44     		add	r2, r2, r3
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5551              		.loc 1 914 0
 5552 005a 07F21C43 		addw	r3, r7, #1052
 5553 005e 5A60     		str	r2, [r3, #4]
 917:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].k_p_c), 
 5554              		.loc 1 917 0
 5555 0060 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 141


 5556 0064 1346     		mov	r3, r2
 5557 0066 DB00     		lsls	r3, r3, #3
 5558 0068 9B1A     		subs	r3, r3, r2
 5559 006a 1B01     		lsls	r3, r3, #4
 5560 006c B833     		adds	r3, r3, #184
 5561 006e D7F88025 		ldr	r2, [r7, #1408]
 5562 0072 1344     		add	r3, r3, r2
 5563 0074 1A1D     		adds	r2, r3, #4
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5564              		.loc 1 914 0
 5565 0076 07F21C43 		addw	r3, r7, #1052
 5566 007a 9A60     		str	r2, [r3, #8]
 918:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].activ),
 5567              		.loc 1 918 0
 5568 007c 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 5569 0080 1346     		mov	r3, r2
 5570 0082 DB00     		lsls	r3, r3, #3
 5571 0084 9B1A     		subs	r3, r3, r2
 5572 0086 1B01     		lsls	r3, r3, #4
 5573 0088 E033     		adds	r3, r3, #224
 5574 008a D7F88025 		ldr	r2, [r7, #1408]
 5575 008e 1A44     		add	r2, r2, r3
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5576              		.loc 1 914 0
 5577 0090 07F21C43 		addw	r3, r7, #1052
 5578 0094 DA60     		str	r2, [r3, #12]
 919:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].input_mode),
 5579              		.loc 1 919 0
 5580 0096 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 5581 009a 1346     		mov	r3, r2
 5582 009c DB00     		lsls	r3, r3, #3
 5583 009e 9B1A     		subs	r3, r3, r2
 5584 00a0 1B01     		lsls	r3, r3, #4
 5585 00a2 03F58473 		add	r3, r3, #264
 5586 00a6 D7F88025 		ldr	r2, [r7, #1408]
 5587 00aa 1344     		add	r3, r3, r2
 5588 00ac 9A1D     		adds	r2, r3, #6
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5589              		.loc 1 914 0
 5590 00ae 07F21C43 		addw	r3, r7, #1052
 5591 00b2 1A61     		str	r2, [r3, #16]
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].control_mode), 
 5592              		.loc 1 920 0
 5593 00b4 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 5594 00b8 1346     		mov	r3, r2
 5595 00ba DB00     		lsls	r3, r3, #3
 5596 00bc 9B1A     		subs	r3, r3, r2
 5597 00be 1B01     		lsls	r3, r3, #4
 5598 00c0 03F58473 		add	r3, r3, #264
 5599 00c4 D7F88025 		ldr	r2, [r7, #1408]
 5600 00c8 1344     		add	r3, r3, r2
 5601 00ca DA1D     		adds	r2, r3, #7
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5602              		.loc 1 914 0
 5603 00cc 07F21C43 		addw	r3, r7, #1052
 5604 00d0 5A61     		str	r2, [r3, #20]
 921:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].res),
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 142


 5605              		.loc 1 921 0
 5606 00d2 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 5607 00d6 D7F88015 		ldr	r1, [r7, #1408]
 5608 00da 1346     		mov	r3, r2
 5609 00dc DB00     		lsls	r3, r3, #3
 5610 00de 9B1A     		subs	r3, r3, r2
 5611 00e0 1B01     		lsls	r3, r3, #4
 5612 00e2 0B44     		add	r3, r3, r1
 5613 00e4 03F58873 		add	r3, r3, #272
 5614 00e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5615 00ea 1A46     		mov	r2, r3
 5616 00ec 1346     		mov	r3, r2
 5617 00ee 5B00     		lsls	r3, r3, #1
 5618 00f0 1344     		add	r3, r3, r2
 5619 00f2 1B01     		lsls	r3, r3, #4
 5620 00f4 03F5C873 		add	r3, r3, #400
 5621 00f8 D7F88025 		ldr	r2, [r7, #1408]
 5622 00fc 1344     		add	r3, r3, r2
 5623 00fe 5A1D     		adds	r2, r3, #5
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5624              		.loc 1 914 0
 5625 0100 07F21C43 		addw	r3, r7, #1052
 5626 0104 9A61     		str	r2, [r3, #24]
 922:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].m_off[0]),
 5627              		.loc 1 922 0
 5628 0106 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 5629 010a D7F88015 		ldr	r1, [r7, #1408]
 5630 010e 1346     		mov	r3, r2
 5631 0110 DB00     		lsls	r3, r3, #3
 5632 0112 9B1A     		subs	r3, r3, r2
 5633 0114 1B01     		lsls	r3, r3, #4
 5634 0116 0B44     		add	r3, r3, r1
 5635 0118 03F58873 		add	r3, r3, #272
 5636 011c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5637 011e 1A46     		mov	r2, r3
 5638 0120 1346     		mov	r3, r2
 5639 0122 5B00     		lsls	r3, r3, #1
 5640 0124 1344     		add	r3, r3, r2
 5641 0126 1B01     		lsls	r3, r3, #4
 5642 0128 03F5CC73 		add	r3, r3, #408
 5643 012c D7F88025 		ldr	r2, [r7, #1408]
 5644 0130 1A44     		add	r2, r2, r3
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5645              		.loc 1 914 0
 5646 0132 07F21C43 		addw	r3, r7, #1052
 5647 0136 DA61     		str	r2, [r3, #28]
 923:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].m_mult[0]),
 5648              		.loc 1 923 0
 5649 0138 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 5650 013c D7F88015 		ldr	r1, [r7, #1408]
 5651 0140 1346     		mov	r3, r2
 5652 0142 DB00     		lsls	r3, r3, #3
 5653 0144 9B1A     		subs	r3, r3, r2
 5654 0146 1B01     		lsls	r3, r3, #4
 5655 0148 0B44     		add	r3, r3, r1
 5656 014a 03F58873 		add	r3, r3, #272
 5657 014e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 143


 5658 0150 1A46     		mov	r2, r3
 5659 0152 1346     		mov	r3, r2
 5660 0154 5B00     		lsls	r3, r3, #1
 5661 0156 1344     		add	r3, r3, r2
 5662 0158 1B01     		lsls	r3, r3, #4
 5663 015a 03F5D073 		add	r3, r3, #416
 5664 015e D7F88025 		ldr	r2, [r7, #1408]
 5665 0162 1344     		add	r3, r3, r2
 5666 0164 1A1D     		adds	r2, r3, #4
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5667              		.loc 1 914 0
 5668 0166 07F21C43 		addw	r3, r7, #1052
 5669 016a 1A62     		str	r2, [r3, #32]
 924:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].pos_lim_flag),                                    //10
 5670              		.loc 1 924 0
 5671 016c 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 5672 0170 1346     		mov	r3, r2
 5673 0172 DB00     		lsls	r3, r3, #3
 5674 0174 9B1A     		subs	r3, r3, r2
 5675 0176 1B01     		lsls	r3, r3, #4
 5676 0178 E033     		adds	r3, r3, #224
 5677 017a D7F88025 		ldr	r2, [r7, #1408]
 5678 017e 1344     		add	r3, r3, r2
 5679 0180 DA1C     		adds	r2, r3, #3
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5680              		.loc 1 914 0
 5681 0182 07F21C43 		addw	r3, r7, #1052
 5682 0186 5A62     		str	r2, [r3, #36]
 925:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].pos_lim_inf), 
 5683              		.loc 1 925 0
 5684 0188 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 5685 018c 1346     		mov	r3, r2
 5686 018e DB00     		lsls	r3, r3, #3
 5687 0190 9B1A     		subs	r3, r3, r2
 5688 0192 1B01     		lsls	r3, r3, #4
 5689 0194 E033     		adds	r3, r3, #224
 5690 0196 D7F88025 		ldr	r2, [r7, #1408]
 5691 019a 1344     		add	r3, r3, r2
 5692 019c 1A1D     		adds	r2, r3, #4
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5693              		.loc 1 914 0
 5694 019e 07F21C43 		addw	r3, r7, #1052
 5695 01a2 9A62     		str	r2, [r3, #40]
 926:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].max_step_neg),
 5696              		.loc 1 926 0
 5697 01a4 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 5698 01a8 1346     		mov	r3, r2
 5699 01aa DB00     		lsls	r3, r3, #3
 5700 01ac 9B1A     		subs	r3, r3, r2
 5701 01ae 1B01     		lsls	r3, r3, #4
 5702 01b0 E833     		adds	r3, r3, #232
 5703 01b2 D7F88025 		ldr	r2, [r7, #1408]
 5704 01b6 1344     		add	r3, r3, r2
 5705 01b8 1A1D     		adds	r2, r3, #4
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5706              		.loc 1 914 0
 5707 01ba 07F21C43 		addw	r3, r7, #1052
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 144


 5708 01be DA62     		str	r2, [r3, #44]
 927:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].current_limit),
 5709              		.loc 1 927 0
 5710 01c0 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 5711 01c4 1346     		mov	r3, r2
 5712 01c6 DB00     		lsls	r3, r3, #3
 5713 01c8 9B1A     		subs	r3, r3, r2
 5714 01ca 1B01     		lsls	r3, r3, #4
 5715 01cc 03F58473 		add	r3, r3, #264
 5716 01d0 D7F88025 		ldr	r2, [r7, #1408]
 5717 01d4 1344     		add	r3, r3, r2
 5718 01d6 1A1D     		adds	r2, r3, #4
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5719              		.loc 1 914 0
 5720 01d8 07F21C43 		addw	r3, r7, #1052
 5721 01dc 1A63     		str	r2, [r3, #48]
 928:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.emg_threshold[0]),
 5722              		.loc 1 928 0
 5723 01de D7F88035 		ldr	r3, [r7, #1408]
 5724 01e2 03F5F872 		add	r2, r3, #496
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5725              		.loc 1 914 0
 5726 01e6 07F21C43 		addw	r3, r7, #1052
 5727 01ea 5A63     		str	r2, [r3, #52]
 929:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.emg_calibration_flag),
 5728              		.loc 1 929 0
 5729 01ec D7F88035 		ldr	r3, [r7, #1408]
 5730 01f0 03F5FF72 		add	r2, r3, #510
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5731              		.loc 1 914 0
 5732 01f4 07F21C43 		addw	r3, r7, #1052
 5733 01f8 9A63     		str	r2, [r3, #56]
 930:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.emg_max_value[0]),
 5734              		.loc 1 930 0
 5735 01fa D7F88035 		ldr	r3, [r7, #1408]
 5736 01fe 03F5FA72 		add	r2, r3, #500
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5737              		.loc 1 914 0
 5738 0202 07F21C43 		addw	r3, r7, #1052
 5739 0206 DA63     		str	r2, [r3, #60]
 931:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.emg_speed[0]), 
 5740              		.loc 1 931 0
 5741 0208 D7F88035 		ldr	r3, [r7, #1408]
 5742 020c 03F5FE72 		add	r2, r3, #508
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5743              		.loc 1 914 0
 5744 0210 07F21C43 		addw	r3, r7, #1052
 5745 0214 1A64     		str	r2, [r3, #64]
 932:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].double_encoder_on_off),
 5746              		.loc 1 932 0
 5747 0216 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 5748 021a D7F88015 		ldr	r1, [r7, #1408]
 5749 021e 1346     		mov	r3, r2
 5750 0220 DB00     		lsls	r3, r3, #3
 5751 0222 9B1A     		subs	r3, r3, r2
 5752 0224 1B01     		lsls	r3, r3, #4
 5753 0226 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 145


 5754 0228 03F58873 		add	r3, r3, #272
 5755 022c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5756 022e 1A46     		mov	r2, r3
 5757 0230 1346     		mov	r3, r2
 5758 0232 5B00     		lsls	r3, r3, #1
 5759 0234 1344     		add	r3, r3, r2
 5760 0236 1B01     		lsls	r3, r3, #4
 5761 0238 03F5D873 		add	r3, r3, #432
 5762 023c D7F88025 		ldr	r2, [r7, #1408]
 5763 0240 1A44     		add	r2, r2, r3
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5764              		.loc 1 914 0
 5765 0242 07F21C43 		addw	r3, r7, #1052
 5766 0246 5A64     		str	r2, [r3, #68]
 933:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].motor_handle_ratio),
 5767              		.loc 1 933 0
 5768 0248 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 5769 024c D7F88015 		ldr	r1, [r7, #1408]
 5770 0250 1346     		mov	r3, r2
 5771 0252 DB00     		lsls	r3, r3, #3
 5772 0254 9B1A     		subs	r3, r3, r2
 5773 0256 1B01     		lsls	r3, r3, #4
 5774 0258 0B44     		add	r3, r3, r1
 5775 025a 03F58873 		add	r3, r3, #272
 5776 025e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5777 0260 1A46     		mov	r2, r3
 5778 0262 1346     		mov	r3, r2
 5779 0264 5B00     		lsls	r3, r3, #1
 5780 0266 1344     		add	r3, r3, r2
 5781 0268 1B01     		lsls	r3, r3, #4
 5782 026a 03F5D873 		add	r3, r3, #432
 5783 026e D7F88025 		ldr	r2, [r7, #1408]
 5784 0272 1344     		add	r3, r3, r2
 5785 0274 1A1D     		adds	r2, r3, #4
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5786              		.loc 1 914 0
 5787 0276 07F21C43 		addw	r3, r7, #1052
 5788 027a 9A64     		str	r2, [r3, #72]
 934:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].activate_pwm_rescaling),                          //20
 5789              		.loc 1 934 0
 5790 027c 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 5791 0280 1346     		mov	r3, r2
 5792 0282 DB00     		lsls	r3, r3, #3
 5793 0284 9B1A     		subs	r3, r3, r2
 5794 0286 1B01     		lsls	r3, r3, #4
 5795 0288 E033     		adds	r3, r3, #224
 5796 028a D7F88025 		ldr	r2, [r7, #1408]
 5797 028e 1344     		add	r3, r3, r2
 5798 0290 5A1C     		adds	r2, r3, #1
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5799              		.loc 1 914 0
 5800 0292 07F21C43 		addw	r3, r7, #1052
 5801 0296 DA64     		str	r2, [r3, #76]
 935:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].curr_lookup[0]),
 5802              		.loc 1 935 0
 5803 0298 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 5804 029c 1346     		mov	r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 146


 5805 029e DB00     		lsls	r3, r3, #3
 5806 02a0 9B1A     		subs	r3, r3, r2
 5807 02a2 1B01     		lsls	r3, r3, #4
 5808 02a4 F033     		adds	r3, r3, #240
 5809 02a6 D7F88025 		ldr	r2, [r7, #1408]
 5810 02aa 1344     		add	r3, r3, r2
 5811 02ac 1A1D     		adds	r2, r3, #4
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5812              		.loc 1 914 0
 5813 02ae 07F21C43 		addw	r3, r7, #1052
 5814 02b2 1A65     		str	r2, [r3, #80]
 936:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.hw_maint_date),
 5815              		.loc 1 936 0
 5816 02b4 D7F88035 		ldr	r3, [r7, #1408]
 5817 02b8 03F1A102 		add	r2, r3, #161
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5818              		.loc 1 914 0
 5819 02bc 07F21C43 		addw	r3, r7, #1052
 5820 02c0 5A65     		str	r2, [r3, #84]
 937:..\src/command_processing.c ****     	(uint8*)&(MEM_P->SH.rest_pos), 
 5821              		.loc 1 937 0
 5822 02c2 D7F88035 		ldr	r3, [r7, #1408]
 5823 02c6 03F52872 		add	r2, r3, #672
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5824              		.loc 1 914 0
 5825 02ca 07F21C43 		addw	r3, r7, #1052
 5826 02ce 9A65     		str	r2, [r3, #88]
 938:..\src/command_processing.c ****     	(uint8*)&(MEM_P->SH.rest_delay),
 5827              		.loc 1 938 0
 5828 02d0 D7F88035 		ldr	r3, [r7, #1408]
 5829 02d4 03F52972 		add	r2, r3, #676
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5830              		.loc 1 914 0
 5831 02d8 07F21C43 		addw	r3, r7, #1052
 5832 02dc DA65     		str	r2, [r3, #92]
 939:..\src/command_processing.c ****     	(uint8*)&(MEM_P->SH.rest_vel),
 5833              		.loc 1 939 0
 5834 02de D7F88035 		ldr	r3, [r7, #1408]
 5835 02e2 03F52A72 		add	r2, r3, #680
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5836              		.loc 1 914 0
 5837 02e6 07F21C43 		addw	r3, r7, #1052
 5838 02ea 1A66     		str	r2, [r3, #96]
 940:..\src/command_processing.c ****     	(uint8*)&(MEM_P->SH.rest_position_flag),
 5839              		.loc 1 940 0
 5840 02ec D7F88035 		ldr	r3, [r7, #1408]
 5841 02f0 03F52B72 		add	r2, r3, #684
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5842              		.loc 1 914 0
 5843 02f4 07F21C43 		addw	r3, r7, #1052
 5844 02f8 5A66     		str	r2, [r3, #100]
 941:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.switch_emg), 
 5845              		.loc 1 941 0
 5846 02fa D7F88035 		ldr	r3, [r7, #1408]
 5847 02fe 03F2FF12 		addw	r2, r3, #511
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5848              		.loc 1 914 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 147


 5849 0302 07F21C43 		addw	r3, r7, #1052
 5850 0306 9A66     		str	r2, [r3, #104]
 942:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.right_left),
 5851              		.loc 1 942 0
 5852 0308 D7F88035 		ldr	r3, [r7, #1408]
 5853 030c 03F1A702 		add	r2, r3, #167
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5854              		.loc 1 914 0
 5855 0310 07F21C43 		addw	r3, r7, #1052
 5856 0314 DA66     		str	r2, [r3, #108]
 943:..\src/command_processing.c ****     	(uint8*)&(MEM_P->imu.read_imu_flag),
 5857              		.loc 1 943 0
 5858 0316 D7F88035 		ldr	r3, [r7, #1408]
 5859 031a 03F50072 		add	r2, r3, #512
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5860              		.loc 1 914 0
 5861 031e 07F21C43 		addw	r3, r7, #1052
 5862 0322 1A67     		str	r2, [r3, #112]
 944:..\src/command_processing.c ****     	(uint8*)&(MEM_P->exp.read_exp_port_flag),                                   //30
 5863              		.loc 1 944 0
 5864 0324 D7F88035 		ldr	r3, [r7, #1408]
 5865 0328 03F22622 		addw	r2, r3, #550
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5866              		.loc 1 914 0
 5867 032c 07F21C43 		addw	r3, r7, #1052
 5868 0330 5A67     		str	r2, [r3, #116]
 945:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.reset_counters),
 5869              		.loc 1 945 0
 5870 0332 D7F88035 		ldr	r3, [r7, #1408]
 5871 0336 03F1A802 		add	r2, r3, #168
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5872              		.loc 1 914 0
 5873 033a 07F21C43 		addw	r3, r7, #1052
 5874 033e 9A67     		str	r2, [r3, #120]
 946:..\src/command_processing.c ****     	(uint8*)&(MEM_P->exp.curr_time[0]),
 5875              		.loc 1 946 0
 5876 0340 D7F88035 		ldr	r3, [r7, #1408]
 5877 0344 03F50872 		add	r2, r3, #544
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5878              		.loc 1 914 0
 5879 0348 07F21C43 		addw	r3, r7, #1052
 5880 034c DA67     		str	r2, [r3, #124]
 947:..\src/command_processing.c ****     	(uint8*)&(MEM_P->imu.SPI_read_delay),
 5881              		.loc 1 947 0
 5882 034e D7F88035 		ldr	r3, [r7, #1408]
 5883 0352 03F20122 		addw	r2, r3, #513
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5884              		.loc 1 914 0
 5885 0356 07F21C43 		addw	r3, r7, #1052
 5886 035a C3F88020 		str	r2, [r3, #128]
 948:..\src/command_processing.c ****     	(uint8*)&(MEM_P->imu.IMU_conf[0][0]),
 5887              		.loc 1 948 0
 5888 035e D7F88035 		ldr	r3, [r7, #1408]
 5889 0362 03F20222 		addw	r2, r3, #514
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5890              		.loc 1 914 0
 5891 0366 07F21C43 		addw	r3, r7, #1052
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 148


 5892 036a C3F88420 		str	r2, [r3, #132]
 949:..\src/command_processing.c ****         (uint8*)&(MEM_P->dev.user_id),
 5893              		.loc 1 949 0
 5894 036e D7F88035 		ldr	r3, [r7, #1408]
 5895 0372 03F1AB02 		add	r2, r3, #171
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5896              		.loc 1 914 0
 5897 0376 07F21C43 		addw	r3, r7, #1052
 5898 037a C3F88820 		str	r2, [r3, #136]
 950:..\src/command_processing.c ****         (uint8*)&(MEM_P->user[MEM_P->dev.user_id].user_code_string),
 5899              		.loc 1 950 0
 5900 037e D7F88035 		ldr	r3, [r7, #1408]
 5901 0382 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 5902 0386 1233     		adds	r3, r3, #18
 5903 0388 5B01     		lsls	r3, r3, #5
 5904 038a D7F88025 		ldr	r2, [r7, #1408]
 5905 038e 1A44     		add	r2, r2, r3
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5906              		.loc 1 914 0
 5907 0390 07F21C43 		addw	r3, r7, #1052
 5908 0394 C3F88C20 		str	r2, [r3, #140]
 951:..\src/command_processing.c ****         
 952:..\src/command_processing.c ****         // GENERIC PARAMS
 953:..\src/command_processing.c **** 		(uint8*)&(MEM_P->motor[MOTOR_IDX].encoder_line),			// other params of 1st motor
 5909              		.loc 1 953 0
 5910 0398 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 5911 039c 1346     		mov	r3, r2
 5912 039e DB00     		lsls	r3, r3, #3
 5913 03a0 9B1A     		subs	r3, r3, r2
 5914 03a2 1B01     		lsls	r3, r3, #4
 5915 03a4 03F58873 		add	r3, r3, #272
 5916 03a8 D7F88025 		ldr	r2, [r7, #1408]
 5917 03ac 1A44     		add	r2, r2, r3
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5918              		.loc 1 914 0
 5919 03ae 07F21C43 		addw	r3, r7, #1052
 5920 03b2 C3F89020 		str	r2, [r3, #144]
 954:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].motor_driver_type),
 5921              		.loc 1 954 0
 5922 03b6 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 5923 03ba 1346     		mov	r3, r2
 5924 03bc DB00     		lsls	r3, r3, #3
 5925 03be 9B1A     		subs	r3, r3, r2
 5926 03c0 1B01     		lsls	r3, r3, #4
 5927 03c2 E033     		adds	r3, r3, #224
 5928 03c4 D7F88025 		ldr	r2, [r7, #1408]
 5929 03c8 1344     		add	r3, r3, r2
 5930 03ca 9A1C     		adds	r2, r3, #2
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5931              		.loc 1 914 0
 5932 03cc 07F21C43 		addw	r3, r7, #1052
 5933 03d0 C3F89420 		str	r2, [r3, #148]
 955:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[MOTOR_IDX].pwm_rate_limiter),
 5934              		.loc 1 955 0
 5935 03d4 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 5936 03d8 1346     		mov	r3, r2
 5937 03da DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 149


 5938 03dc 9B1A     		subs	r3, r3, r2
 5939 03de 1B01     		lsls	r3, r3, #4
 5940 03e0 03F58873 		add	r3, r3, #272
 5941 03e4 D7F88025 		ldr	r2, [r7, #1408]
 5942 03e8 1344     		add	r3, r3, r2
 5943 03ea 5A1C     		adds	r2, r3, #1
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5944              		.loc 1 914 0
 5945 03ec 07F21C43 		addw	r3, r7, #1052
 5946 03f0 C3F89820 		str	r2, [r3, #152]
 956:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[MOTOR_IDX].not_revers_motor_flag), 	//40 
 5947              		.loc 1 956 0
 5948 03f4 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 5949 03f8 1346     		mov	r3, r2
 5950 03fa DB00     		lsls	r3, r3, #3
 5951 03fc 9B1A     		subs	r3, r3, r2
 5952 03fe 1B01     		lsls	r3, r3, #4
 5953 0400 03F58873 		add	r3, r3, #272
 5954 0404 D7F88025 		ldr	r2, [r7, #1408]
 5955 0408 1344     		add	r3, r3, r2
 5956 040a 9A1C     		adds	r2, r3, #2
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5957              		.loc 1 914 0
 5958 040c 07F21C43 		addw	r3, r7, #1052
 5959 0410 C3F89C20 		str	r2, [r3, #156]
 957:..\src/command_processing.c ****         (uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].Enc_idx_use_for_control),
 5960              		.loc 1 957 0
 5961 0414 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 5962 0418 D7F88015 		ldr	r1, [r7, #1408]
 5963 041c 1346     		mov	r3, r2
 5964 041e DB00     		lsls	r3, r3, #3
 5965 0420 9B1A     		subs	r3, r3, r2
 5966 0422 1B01     		lsls	r3, r3, #4
 5967 0424 0B44     		add	r3, r3, r1
 5968 0426 03F58873 		add	r3, r3, #272
 5969 042a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5970 042c 1A46     		mov	r2, r3
 5971 042e 1346     		mov	r3, r2
 5972 0430 5B00     		lsls	r3, r3, #1
 5973 0432 1344     		add	r3, r3, r2
 5974 0434 1B01     		lsls	r3, r3, #4
 5975 0436 03F5D873 		add	r3, r3, #432
 5976 043a D7F88025 		ldr	r2, [r7, #1408]
 5977 043e 1344     		add	r3, r3, r2
 5978 0440 5A1C     		adds	r2, r3, #1
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5979              		.loc 1 914 0
 5980 0442 07F21C43 		addw	r3, r7, #1052
 5981 0446 C3F8A020 		str	r2, [r3, #160]
 958:..\src/command_processing.c ****         (uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].gears_params),        
 5982              		.loc 1 958 0
 5983 044a 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 5984 044e D7F88015 		ldr	r1, [r7, #1408]
 5985 0452 1346     		mov	r3, r2
 5986 0454 DB00     		lsls	r3, r3, #3
 5987 0456 9B1A     		subs	r3, r3, r2
 5988 0458 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 150


 5989 045a 0B44     		add	r3, r3, r1
 5990 045c 03F58873 		add	r3, r3, #272
 5991 0460 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5992 0462 1A46     		mov	r2, r3
 5993 0464 1346     		mov	r3, r2
 5994 0466 5B00     		lsls	r3, r3, #1
 5995 0468 1344     		add	r3, r3, r2
 5996 046a 1B01     		lsls	r3, r3, #4
 5997 046c 03F5D873 		add	r3, r3, #432
 5998 0470 D7F88025 		ldr	r2, [r7, #1408]
 5999 0474 1344     		add	r3, r3, r2
 6000 0476 5A1D     		adds	r2, r3, #5
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6001              		.loc 1 914 0
 6002 0478 07F21C43 		addw	r3, r7, #1052
 6003 047c C3F8A420 		str	r2, [r3, #164]
 959:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.use_2nd_motor_flag),					// second motor config and params
 6004              		.loc 1 959 0
 6005 0480 D7F88035 		ldr	r3, [r7, #1408]
 6006 0484 03F1A902 		add	r2, r3, #169
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6007              		.loc 1 914 0
 6008 0488 07F21C43 		addw	r3, r7, #1052
 6009 048c C3F8A820 		str	r2, [r3, #168]
 960:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].k_p),
 6010              		.loc 1 960 0
 6011 0490 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 6012 0494 1346     		mov	r3, r2
 6013 0496 DB00     		lsls	r3, r3, #3
 6014 0498 9B1A     		subs	r3, r3, r2
 6015 049a 1B01     		lsls	r3, r3, #4
 6016 049c B033     		adds	r3, r3, #176
 6017 049e D7F88025 		ldr	r2, [r7, #1408]
 6018 04a2 1A44     		add	r2, r2, r3
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6019              		.loc 1 914 0
 6020 04a4 07F21C43 		addw	r3, r7, #1052
 6021 04a8 C3F8AC20 		str	r2, [r3, #172]
 961:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].k_p_c), 
 6022              		.loc 1 961 0
 6023 04ac 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 6024 04b0 1346     		mov	r3, r2
 6025 04b2 DB00     		lsls	r3, r3, #3
 6026 04b4 9B1A     		subs	r3, r3, r2
 6027 04b6 1B01     		lsls	r3, r3, #4
 6028 04b8 B833     		adds	r3, r3, #184
 6029 04ba D7F88025 		ldr	r2, [r7, #1408]
 6030 04be 1344     		add	r3, r3, r2
 6031 04c0 1A1D     		adds	r2, r3, #4
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6032              		.loc 1 914 0
 6033 04c2 07F21C43 		addw	r3, r7, #1052
 6034 04c6 C3F8B020 		str	r2, [r3, #176]
 962:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].activ),
 6035              		.loc 1 962 0
 6036 04ca 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 6037 04ce 1346     		mov	r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 151


 6038 04d0 DB00     		lsls	r3, r3, #3
 6039 04d2 9B1A     		subs	r3, r3, r2
 6040 04d4 1B01     		lsls	r3, r3, #4
 6041 04d6 E033     		adds	r3, r3, #224
 6042 04d8 D7F88025 		ldr	r2, [r7, #1408]
 6043 04dc 1A44     		add	r2, r2, r3
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6044              		.loc 1 914 0
 6045 04de 07F21C43 		addw	r3, r7, #1052
 6046 04e2 C3F8B420 		str	r2, [r3, #180]
 963:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].input_mode),
 6047              		.loc 1 963 0
 6048 04e6 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 6049 04ea 1346     		mov	r3, r2
 6050 04ec DB00     		lsls	r3, r3, #3
 6051 04ee 9B1A     		subs	r3, r3, r2
 6052 04f0 1B01     		lsls	r3, r3, #4
 6053 04f2 03F58473 		add	r3, r3, #264
 6054 04f6 D7F88025 		ldr	r2, [r7, #1408]
 6055 04fa 1344     		add	r3, r3, r2
 6056 04fc 9A1D     		adds	r2, r3, #6
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6057              		.loc 1 914 0
 6058 04fe 07F21C43 		addw	r3, r7, #1052
 6059 0502 C3F8B820 		str	r2, [r3, #184]
 964:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].control_mode), 
 6060              		.loc 1 964 0
 6061 0506 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 6062 050a 1346     		mov	r3, r2
 6063 050c DB00     		lsls	r3, r3, #3
 6064 050e 9B1A     		subs	r3, r3, r2
 6065 0510 1B01     		lsls	r3, r3, #4
 6066 0512 03F58473 		add	r3, r3, #264
 6067 0516 D7F88025 		ldr	r2, [r7, #1408]
 6068 051a 1344     		add	r3, r3, r2
 6069 051c DA1D     		adds	r2, r3, #7
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6070              		.loc 1 914 0
 6071 051e 07F21C43 		addw	r3, r7, #1052
 6072 0522 C3F8BC20 		str	r2, [r3, #188]
 965:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].res),
 6073              		.loc 1 965 0
 6074 0526 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 6075 052a D7F88015 		ldr	r1, [r7, #1408]
 6076 052e 1346     		mov	r3, r2
 6077 0530 DB00     		lsls	r3, r3, #3
 6078 0532 9B1A     		subs	r3, r3, r2
 6079 0534 1B01     		lsls	r3, r3, #4
 6080 0536 0B44     		add	r3, r3, r1
 6081 0538 03F58873 		add	r3, r3, #272
 6082 053c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6083 053e 1A46     		mov	r2, r3
 6084 0540 1346     		mov	r3, r2
 6085 0542 5B00     		lsls	r3, r3, #1
 6086 0544 1344     		add	r3, r3, r2
 6087 0546 1B01     		lsls	r3, r3, #4
 6088 0548 03F5C873 		add	r3, r3, #400
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 152


 6089 054c D7F88025 		ldr	r2, [r7, #1408]
 6090 0550 1344     		add	r3, r3, r2
 6091 0552 5A1D     		adds	r2, r3, #5
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6092              		.loc 1 914 0
 6093 0554 07F21C43 		addw	r3, r7, #1052
 6094 0558 C3F8C020 		str	r2, [r3, #192]
 966:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].m_off[0]),    //50
 6095              		.loc 1 966 0
 6096 055c 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 6097 0560 D7F88015 		ldr	r1, [r7, #1408]
 6098 0564 1346     		mov	r3, r2
 6099 0566 DB00     		lsls	r3, r3, #3
 6100 0568 9B1A     		subs	r3, r3, r2
 6101 056a 1B01     		lsls	r3, r3, #4
 6102 056c 0B44     		add	r3, r3, r1
 6103 056e 03F58873 		add	r3, r3, #272
 6104 0572 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6105 0574 1A46     		mov	r2, r3
 6106 0576 1346     		mov	r3, r2
 6107 0578 5B00     		lsls	r3, r3, #1
 6108 057a 1344     		add	r3, r3, r2
 6109 057c 1B01     		lsls	r3, r3, #4
 6110 057e 03F5CC73 		add	r3, r3, #408
 6111 0582 D7F88025 		ldr	r2, [r7, #1408]
 6112 0586 1A44     		add	r2, r2, r3
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6113              		.loc 1 914 0
 6114 0588 07F21C43 		addw	r3, r7, #1052
 6115 058c C3F8C420 		str	r2, [r3, #196]
 967:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].m_mult[0]),
 6116              		.loc 1 967 0
 6117 0590 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 6118 0594 D7F88015 		ldr	r1, [r7, #1408]
 6119 0598 1346     		mov	r3, r2
 6120 059a DB00     		lsls	r3, r3, #3
 6121 059c 9B1A     		subs	r3, r3, r2
 6122 059e 1B01     		lsls	r3, r3, #4
 6123 05a0 0B44     		add	r3, r3, r1
 6124 05a2 03F58873 		add	r3, r3, #272
 6125 05a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6126 05a8 1A46     		mov	r2, r3
 6127 05aa 1346     		mov	r3, r2
 6128 05ac 5B00     		lsls	r3, r3, #1
 6129 05ae 1344     		add	r3, r3, r2
 6130 05b0 1B01     		lsls	r3, r3, #4
 6131 05b2 03F5D073 		add	r3, r3, #416
 6132 05b6 D7F88025 		ldr	r2, [r7, #1408]
 6133 05ba 1344     		add	r3, r3, r2
 6134 05bc 1A1D     		adds	r2, r3, #4
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6135              		.loc 1 914 0
 6136 05be 07F21C43 		addw	r3, r7, #1052
 6137 05c2 C3F8C820 		str	r2, [r3, #200]
 968:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].pos_lim_flag),
 6138              		.loc 1 968 0
 6139 05c6 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 153


 6140 05ca 1346     		mov	r3, r2
 6141 05cc DB00     		lsls	r3, r3, #3
 6142 05ce 9B1A     		subs	r3, r3, r2
 6143 05d0 1B01     		lsls	r3, r3, #4
 6144 05d2 E033     		adds	r3, r3, #224
 6145 05d4 D7F88025 		ldr	r2, [r7, #1408]
 6146 05d8 1344     		add	r3, r3, r2
 6147 05da DA1C     		adds	r2, r3, #3
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6148              		.loc 1 914 0
 6149 05dc 07F21C43 		addw	r3, r7, #1052
 6150 05e0 C3F8CC20 		str	r2, [r3, #204]
 969:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].pos_lim_inf), 
 6151              		.loc 1 969 0
 6152 05e4 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 6153 05e8 1346     		mov	r3, r2
 6154 05ea DB00     		lsls	r3, r3, #3
 6155 05ec 9B1A     		subs	r3, r3, r2
 6156 05ee 1B01     		lsls	r3, r3, #4
 6157 05f0 E033     		adds	r3, r3, #224
 6158 05f2 D7F88025 		ldr	r2, [r7, #1408]
 6159 05f6 1344     		add	r3, r3, r2
 6160 05f8 1A1D     		adds	r2, r3, #4
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6161              		.loc 1 914 0
 6162 05fa 07F21C43 		addw	r3, r7, #1052
 6163 05fe C3F8D020 		str	r2, [r3, #208]
 970:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].max_step_neg),
 6164              		.loc 1 970 0
 6165 0602 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 6166 0606 1346     		mov	r3, r2
 6167 0608 DB00     		lsls	r3, r3, #3
 6168 060a 9B1A     		subs	r3, r3, r2
 6169 060c 1B01     		lsls	r3, r3, #4
 6170 060e E833     		adds	r3, r3, #232
 6171 0610 D7F88025 		ldr	r2, [r7, #1408]
 6172 0614 1344     		add	r3, r3, r2
 6173 0616 1A1D     		adds	r2, r3, #4
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6174              		.loc 1 914 0
 6175 0618 07F21C43 		addw	r3, r7, #1052
 6176 061c C3F8D420 		str	r2, [r3, #212]
 971:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].current_limit),
 6177              		.loc 1 971 0
 6178 0620 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 6179 0624 1346     		mov	r3, r2
 6180 0626 DB00     		lsls	r3, r3, #3
 6181 0628 9B1A     		subs	r3, r3, r2
 6182 062a 1B01     		lsls	r3, r3, #4
 6183 062c 03F58473 		add	r3, r3, #264
 6184 0630 D7F88025 		ldr	r2, [r7, #1408]
 6185 0634 1344     		add	r3, r3, r2
 6186 0636 1A1D     		adds	r2, r3, #4
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6187              		.loc 1 914 0
 6188 0638 07F21C43 		addw	r3, r7, #1052
 6189 063c C3F8D820 		str	r2, [r3, #216]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 154


 972:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].double_encoder_on_off),
 6190              		.loc 1 972 0
 6191 0640 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 6192 0644 D7F88015 		ldr	r1, [r7, #1408]
 6193 0648 1346     		mov	r3, r2
 6194 064a DB00     		lsls	r3, r3, #3
 6195 064c 9B1A     		subs	r3, r3, r2
 6196 064e 1B01     		lsls	r3, r3, #4
 6197 0650 0B44     		add	r3, r3, r1
 6198 0652 03F58873 		add	r3, r3, #272
 6199 0656 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6200 0658 1A46     		mov	r2, r3
 6201 065a 1346     		mov	r3, r2
 6202 065c 5B00     		lsls	r3, r3, #1
 6203 065e 1344     		add	r3, r3, r2
 6204 0660 1B01     		lsls	r3, r3, #4
 6205 0662 03F5D873 		add	r3, r3, #432
 6206 0666 D7F88025 		ldr	r2, [r7, #1408]
 6207 066a 1A44     		add	r2, r2, r3
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6208              		.loc 1 914 0
 6209 066c 07F21C43 		addw	r3, r7, #1052
 6210 0670 C3F8DC20 		str	r2, [r3, #220]
 973:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].motor_handle_ratio),
 6211              		.loc 1 973 0
 6212 0674 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 6213 0678 D7F88015 		ldr	r1, [r7, #1408]
 6214 067c 1346     		mov	r3, r2
 6215 067e DB00     		lsls	r3, r3, #3
 6216 0680 9B1A     		subs	r3, r3, r2
 6217 0682 1B01     		lsls	r3, r3, #4
 6218 0684 0B44     		add	r3, r3, r1
 6219 0686 03F58873 		add	r3, r3, #272
 6220 068a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6221 068c 1A46     		mov	r2, r3
 6222 068e 1346     		mov	r3, r2
 6223 0690 5B00     		lsls	r3, r3, #1
 6224 0692 1344     		add	r3, r3, r2
 6225 0694 1B01     		lsls	r3, r3, #4
 6226 0696 03F5D873 		add	r3, r3, #432
 6227 069a D7F88025 		ldr	r2, [r7, #1408]
 6228 069e 1344     		add	r3, r3, r2
 6229 06a0 1A1D     		adds	r2, r3, #4
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6230              		.loc 1 914 0
 6231 06a2 07F21C43 		addw	r3, r7, #1052
 6232 06a6 C3F8E020 		str	r2, [r3, #224]
 974:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].activate_pwm_rescaling),
 6233              		.loc 1 974 0
 6234 06aa 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 6235 06ae 1346     		mov	r3, r2
 6236 06b0 DB00     		lsls	r3, r3, #3
 6237 06b2 9B1A     		subs	r3, r3, r2
 6238 06b4 1B01     		lsls	r3, r3, #4
 6239 06b6 E033     		adds	r3, r3, #224
 6240 06b8 D7F88025 		ldr	r2, [r7, #1408]
 6241 06bc 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 155


 6242 06be 5A1C     		adds	r2, r3, #1
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6243              		.loc 1 914 0
 6244 06c0 07F21C43 		addw	r3, r7, #1052
 6245 06c4 C3F8E420 		str	r2, [r3, #228]
 975:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].curr_lookup[0]),
 6246              		.loc 1 975 0
 6247 06c8 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 6248 06cc 1346     		mov	r3, r2
 6249 06ce DB00     		lsls	r3, r3, #3
 6250 06d0 9B1A     		subs	r3, r3, r2
 6251 06d2 1B01     		lsls	r3, r3, #4
 6252 06d4 F033     		adds	r3, r3, #240
 6253 06d6 D7F88025 		ldr	r2, [r7, #1408]
 6254 06da 1344     		add	r3, r3, r2
 6255 06dc 1A1D     		adds	r2, r3, #4
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6256              		.loc 1 914 0
 6257 06de 07F21C43 		addw	r3, r7, #1052
 6258 06e2 C3F8E820 		str	r2, [r3, #232]
 976:..\src/command_processing.c **** 		(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].encoder_line),         //60
 6259              		.loc 1 976 0
 6260 06e6 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 6261 06ea 1346     		mov	r3, r2
 6262 06ec DB00     		lsls	r3, r3, #3
 6263 06ee 9B1A     		subs	r3, r3, r2
 6264 06f0 1B01     		lsls	r3, r3, #4
 6265 06f2 03F58873 		add	r3, r3, #272
 6266 06f6 D7F88025 		ldr	r2, [r7, #1408]
 6267 06fa 1A44     		add	r2, r2, r3
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6268              		.loc 1 914 0
 6269 06fc 07F21C43 		addw	r3, r7, #1052
 6270 0700 C3F8EC20 		str	r2, [r3, #236]
 977:..\src/command_processing.c **** 		(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].motor_driver_type),
 6271              		.loc 1 977 0
 6272 0704 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 6273 0708 1346     		mov	r3, r2
 6274 070a DB00     		lsls	r3, r3, #3
 6275 070c 9B1A     		subs	r3, r3, r2
 6276 070e 1B01     		lsls	r3, r3, #4
 6277 0710 E033     		adds	r3, r3, #224
 6278 0712 D7F88025 		ldr	r2, [r7, #1408]
 6279 0716 1344     		add	r3, r3, r2
 6280 0718 9A1C     		adds	r2, r3, #2
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6281              		.loc 1 914 0
 6282 071a 07F21C43 		addw	r3, r7, #1052
 6283 071e C3F8F020 		str	r2, [r3, #240]
 978:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].pwm_rate_limiter),
 6284              		.loc 1 978 0
 6285 0722 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 6286 0726 1346     		mov	r3, r2
 6287 0728 DB00     		lsls	r3, r3, #3
 6288 072a 9B1A     		subs	r3, r3, r2
 6289 072c 1B01     		lsls	r3, r3, #4
 6290 072e 03F58873 		add	r3, r3, #272
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 156


 6291 0732 D7F88025 		ldr	r2, [r7, #1408]
 6292 0736 1344     		add	r3, r3, r2
 6293 0738 5A1C     		adds	r2, r3, #1
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6294              		.loc 1 914 0
 6295 073a 07F21C43 		addw	r3, r7, #1052
 6296 073e C3F8F420 		str	r2, [r3, #244]
 979:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].not_revers_motor_flag),
 6297              		.loc 1 979 0
 6298 0742 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 6299 0746 1346     		mov	r3, r2
 6300 0748 DB00     		lsls	r3, r3, #3
 6301 074a 9B1A     		subs	r3, r3, r2
 6302 074c 1B01     		lsls	r3, r3, #4
 6303 074e 03F58873 		add	r3, r3, #272
 6304 0752 D7F88025 		ldr	r2, [r7, #1408]
 6305 0756 1344     		add	r3, r3, r2
 6306 0758 9A1C     		adds	r2, r3, #2
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6307              		.loc 1 914 0
 6308 075a 07F21C43 		addw	r3, r7, #1052
 6309 075e C3F8F820 		str	r2, [r3, #248]
 980:..\src/command_processing.c ****         (uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].Enc_idx_use_for_control),
 6310              		.loc 1 980 0
 6311 0762 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 6312 0766 D7F88015 		ldr	r1, [r7, #1408]
 6313 076a 1346     		mov	r3, r2
 6314 076c DB00     		lsls	r3, r3, #3
 6315 076e 9B1A     		subs	r3, r3, r2
 6316 0770 1B01     		lsls	r3, r3, #4
 6317 0772 0B44     		add	r3, r3, r1
 6318 0774 03F58873 		add	r3, r3, #272
 6319 0778 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6320 077a 1A46     		mov	r2, r3
 6321 077c 1346     		mov	r3, r2
 6322 077e 5B00     		lsls	r3, r3, #1
 6323 0780 1344     		add	r3, r3, r2
 6324 0782 1B01     		lsls	r3, r3, #4
 6325 0784 03F5D873 		add	r3, r3, #432
 6326 0788 D7F88025 		ldr	r2, [r7, #1408]
 6327 078c 1344     		add	r3, r3, r2
 6328 078e 5A1C     		adds	r2, r3, #1
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6329              		.loc 1 914 0
 6330 0790 07F21C43 		addw	r3, r7, #1052
 6331 0794 C3F8FC20 		str	r2, [r3, #252]
 981:..\src/command_processing.c ****         (uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].gears_params),
 6332              		.loc 1 981 0
 6333 0798 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 6334 079c D7F88015 		ldr	r1, [r7, #1408]
 6335 07a0 1346     		mov	r3, r2
 6336 07a2 DB00     		lsls	r3, r3, #3
 6337 07a4 9B1A     		subs	r3, r3, r2
 6338 07a6 1B01     		lsls	r3, r3, #4
 6339 07a8 0B44     		add	r3, r3, r1
 6340 07aa 03F58873 		add	r3, r3, #272
 6341 07ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 157


 6342 07b0 1A46     		mov	r2, r3
 6343 07b2 1346     		mov	r3, r2
 6344 07b4 5B00     		lsls	r3, r3, #1
 6345 07b6 1344     		add	r3, r3, r2
 6346 07b8 1B01     		lsls	r3, r3, #4
 6347 07ba 03F5D873 		add	r3, r3, #432
 6348 07be D7F88025 		ldr	r2, [r7, #1408]
 6349 07c2 1344     		add	r3, r3, r2
 6350 07c4 5A1D     		adds	r2, r3, #5
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6351              		.loc 1 914 0
 6352 07c6 07F21C43 		addw	r3, r7, #1052
 6353 07ca C3F80021 		str	r2, [r3, #256]
 982:..\src/command_processing.c ****         
 983:..\src/command_processing.c **** 		(uint8*)&(MEM_P->enc[0].Enc_raw_read_conf[0]),					// additional generic params
 6354              		.loc 1 983 0
 6355 07ce D7F88035 		ldr	r3, [r7, #1408]
 6356 07d2 03F5C872 		add	r2, r3, #400
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6357              		.loc 1 914 0
 6358 07d6 07F21C43 		addw	r3, r7, #1052
 6359 07da C3F80421 		str	r2, [r3, #260]
 984:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[1].Enc_raw_read_conf[0]),
 6360              		.loc 1 984 0
 6361 07de D7F88035 		ldr	r3, [r7, #1408]
 6362 07e2 03F5E072 		add	r2, r3, #448
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6363              		.loc 1 914 0
 6364 07e6 07F21C43 		addw	r3, r7, #1052
 6365 07ea C3F80821 		str	r2, [r3, #264]
 985:..\src/command_processing.c ****         (uint8*)&(MEM_P->exp.read_ADC_sensors_port_flag),		
 6366              		.loc 1 985 0
 6367 07ee D7F88035 		ldr	r3, [r7, #1408]
 6368 07f2 03F22722 		addw	r2, r3, #551
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6369              		.loc 1 914 0
 6370 07f6 07F21C43 		addw	r3, r7, #1052
 6371 07fa C3F80C21 		str	r2, [r3, #268]
 986:..\src/command_processing.c ****     	(uint8*)&(MEM_P->exp.ADC_conf[0]),
 6372              		.loc 1 986 0
 6373 07fe D7F88035 		ldr	r3, [r7, #1408]
 6374 0802 03F50A72 		add	r2, r3, #552
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6375              		.loc 1 914 0
 6376 0806 07F21C43 		addw	r3, r7, #1052
 6377 080a C3F81021 		str	r2, [r3, #272]
 987:..\src/command_processing.c ****     	(uint8*)&(MEM_P->exp.ADC_conf[6]),                          //70  
 6378              		.loc 1 987 0
 6379 080e D7F88035 		ldr	r3, [r7, #1408]
 6380 0812 03F22E22 		addw	r2, r3, #558
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6381              		.loc 1 914 0
 6382 0816 07F21C43 		addw	r3, r7, #1052
 6383 081a C3F81421 		str	r2, [r3, #276]
 988:..\src/command_processing.c ****         (uint8*)&(MEM_P->exp.record_EMG_history_on_SD),
 6384              		.loc 1 988 0
 6385 081e D7F88035 		ldr	r3, [r7, #1408]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 158


 6386 0822 03F50D72 		add	r2, r3, #564
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6387              		.loc 1 914 0
 6388 0826 07F21C43 		addw	r3, r7, #1052
 6389 082a C3F81821 		str	r2, [r3, #280]
 989:..\src/command_processing.c ****         (uint8*)&(MEM_P->JOY_spec.joystick_closure_speed),
 6390              		.loc 1 989 0
 6391 082e D7F88035 		ldr	r3, [r7, #1408]
 6392 0832 03F52C72 		add	r2, r3, #688
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6393              		.loc 1 914 0
 6394 0836 07F21C43 		addw	r3, r7, #1052
 6395 083a C3F81C21 		str	r2, [r3, #284]
 990:..\src/command_processing.c ****         (uint8*)&(MEM_P->JOY_spec.joystick_threshold),
 6396              		.loc 1 990 0
 6397 083e D7F88035 		ldr	r3, [r7, #1408]
 6398 0842 03F2B222 		addw	r2, r3, #690
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6399              		.loc 1 914 0
 6400 0846 07F21C43 		addw	r3, r7, #1052
 6401 084a C3F82021 		str	r2, [r3, #288]
 991:..\src/command_processing.c ****         (uint8*)&(MEM_P->JOY_spec.joystick_gains[0]),
 6402              		.loc 1 991 0
 6403 084e D7F88035 		ldr	r3, [r7, #1408]
 6404 0852 03F52D72 		add	r2, r3, #692
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6405              		.loc 1 914 0
 6406 0856 07F21C43 		addw	r3, r7, #1052
 6407 085a C3F82421 		str	r2, [r3, #292]
 992:..\src/command_processing.c ****         (uint8*)&(MEM_P->dev.dev_type),
 6408              		.loc 1 992 0
 6409 085e D7F88035 		ldr	r3, [r7, #1408]
 6410 0862 03F1AC02 		add	r2, r3, #172
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6411              		.loc 1 914 0
 6412 0866 07F21C43 		addw	r3, r7, #1052
 6413 086a C3F82821 		str	r2, [r3, #296]
 993:..\src/command_processing.c ****         (uint8*)&(MEM_P->WR.activation_mode),                           
 6414              		.loc 1 993 0
 6415 086e D7F88035 		ldr	r3, [r7, #1408]
 6416 0872 03F53872 		add	r2, r3, #736
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6417              		.loc 1 914 0
 6418 0876 07F21C43 		addw	r3, r7, #1052
 6419 087a C3F82C21 		str	r2, [r3, #300]
 994:..\src/command_processing.c ****         (uint8*)&(MEM_P->WR.fast_act_threshold[0]),
 6420              		.loc 1 994 0
 6421 087e D7F88035 		ldr	r3, [r7, #1408]
 6422 0882 03F2E222 		addw	r2, r3, #738
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6423              		.loc 1 914 0
 6424 0886 07F21C43 		addw	r3, r7, #1052
 6425 088a C3F83021 		str	r2, [r3, #304]
 995:..\src/command_processing.c ****         
 996:..\src/command_processing.c ****         (uint8*)&(MEM_P->WR.wrist_direction_association),              // additional wrist params
 6426              		.loc 1 996 0
 6427 088e D7F88035 		ldr	r3, [r7, #1408]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 159


 6428 0892 03F2E622 		addw	r2, r3, #742
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6429              		.loc 1 914 0
 6430 0896 07F21C43 		addw	r3, r7, #1052
 6431 089a C3F83421 		str	r2, [r3, #308]
 997:..\src/command_processing.c ****         
 998:..\src/command_processing.c ****         (uint8*)&(MEM_P->MS.slave_comm_active),                        // additional master params
 6432              		.loc 1 998 0
 6433 089e D7F88035 		ldr	r3, [r7, #1408]
 6434 08a2 03F53072 		add	r2, r3, #704
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6435              		.loc 1 914 0
 6436 08a6 07F21C43 		addw	r3, r7, #1052
 6437 08aa C3F83821 		str	r2, [r3, #312]
 999:..\src/command_processing.c ****         (uint8*)&(MEM_P->MS.slave_ID),
 6438              		.loc 1 999 0
 6439 08ae D7F88035 		ldr	r3, [r7, #1408]
 6440 08b2 03F2C122 		addw	r2, r3, #705
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6441              		.loc 1 914 0
 6442 08b6 07F21C43 		addw	r3, r7, #1052
 6443 08ba C3F83C21 		str	r2, [r3, #316]
1000:..\src/command_processing.c ****         
1001:..\src/command_processing.c ****         (uint8*)&(MEM_P->FB.max_residual_current),                     // additional feedback param
 6444              		.loc 1 1001 0
 6445 08be D7F88035 		ldr	r3, [r7, #1408]
 6446 08c2 03F53472 		add	r2, r3, #720
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6447              		.loc 1 914 0
 6448 08c6 07F21C43 		addw	r3, r7, #1052
 6449 08ca C3F84021 		str	r2, [r3, #320]
1002:..\src/command_processing.c ****         (uint8*)&(MEM_P->FB.maximum_pressure_kPa),
 6450              		.loc 1 1002 0
 6451 08ce D7F88035 		ldr	r3, [r7, #1408]
 6452 08d2 03F53572 		add	r2, r3, #724
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6453              		.loc 1 914 0
 6454 08d6 07F21C43 		addw	r3, r7, #1052
 6455 08da C3F84421 		str	r2, [r3, #324]
1003:..\src/command_processing.c ****         (uint8*)&(MEM_P->FB.prop_err_fb_gain)
 6456              		.loc 1 1003 0
 6457 08de D7F88035 		ldr	r3, [r7, #1408]
 6458 08e2 03F53672 		add	r2, r3, #728
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6459              		.loc 1 914 0
 6460 08e6 07F21C43 		addw	r3, r7, #1052
 6461 08ea C3F84821 		str	r2, [r3, #328]
1004:..\src/command_processing.c ****         
1005:..\src/command_processing.c **** 
1006:..\src/command_processing.c ****     };
1007:..\src/command_processing.c ****     
1008:..\src/command_processing.c ****     uint8 TYPES[NUM_OF_PARAMS] = {
 6462              		.loc 1 1008 0
 6463 08ee 07F57273 		add	r3, r7, #968
 6464 08f2 F64A     		ldr	r2, .L371
 6465 08f4 1846     		mov	r0, r3
 6466 08f6 1146     		mov	r1, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 160


 6467 08f8 5323     		movs	r3, #83
 6468 08fa 1A46     		mov	r2, r3
 6469 08fc FFF7FEFF 		bl	memcpy
1009:..\src/command_processing.c ****         TYPE_UINT8, TYPE_FLOAT, TYPE_FLOAT, TYPE_FLAG, 
1010:..\src/command_processing.c ****         TYPE_FLAG, TYPE_FLAG, TYPE_UINT8, TYPE_INT16, 
1011:..\src/command_processing.c ****         TYPE_FLOAT, TYPE_FLAG, TYPE_INT32, TYPE_INT32, 
1012:..\src/command_processing.c ****         TYPE_INT16, TYPE_UINT16, TYPE_FLAG, TYPE_UINT32, 
1013:..\src/command_processing.c ****         TYPE_UINT8, TYPE_FLAG, TYPE_INT8, TYPE_FLAG, 
1014:..\src/command_processing.c ****         TYPE_FLOAT, TYPE_UINT8, TYPE_INT32, TYPE_INT32,
1015:..\src/command_processing.c ****         TYPE_INT32, TYPE_FLAG, TYPE_FLAG, TYPE_FLAG, 
1016:..\src/command_processing.c ****         TYPE_FLAG, TYPE_FLAG, TYPE_FLAG, TYPE_UINT8, 
1017:..\src/command_processing.c ****         TYPE_FLAG, TYPE_UINT8, TYPE_FLAG, TYPE_STRING,
1018:..\src/command_processing.c ****         
1019:..\src/command_processing.c ****         // GENERIC PARAMS
1020:..\src/command_processing.c ****         TYPE_UINT8, TYPE_FLAG, TYPE_UINT8, TYPE_FLAG,
1021:..\src/command_processing.c ****         TYPE_UINT8, TYPE_INT8, TYPE_FLAG, TYPE_FLOAT, 
1022:..\src/command_processing.c ****         TYPE_FLOAT, TYPE_FLAG, TYPE_FLAG, TYPE_FLAG,
1023:..\src/command_processing.c ****         TYPE_UINT8, TYPE_INT16, TYPE_FLOAT, TYPE_FLAG, 
1024:..\src/command_processing.c ****         TYPE_INT32, TYPE_INT32, TYPE_INT16, TYPE_FLAG,
1025:..\src/command_processing.c ****         TYPE_INT8,  TYPE_FLAG, TYPE_FLOAT, TYPE_UINT8,
1026:..\src/command_processing.c ****         TYPE_FLAG,  TYPE_UINT8, TYPE_FLAG, TYPE_UINT8,
1027:..\src/command_processing.c ****         TYPE_INT8, TYPE_UINT8, TYPE_UINT8, TYPE_FLAG,
1028:..\src/command_processing.c ****         TYPE_UINT8, TYPE_UINT8, TYPE_FLAG, TYPE_UINT16, 
1029:..\src/command_processing.c ****         TYPE_INT16, TYPE_UINT16, TYPE_FLAG, TYPE_FLAG,
1030:..\src/command_processing.c ****         TYPE_UINT16,
1031:..\src/command_processing.c ****         
1032:..\src/command_processing.c ****                     TYPE_FLAG, TYPE_FLAG, TYPE_UINT8,
1033:..\src/command_processing.c ****         TYPE_INT32, TYPE_FLOAT, TYPE_FLOAT
1034:..\src/command_processing.c ****     };
1035:..\src/command_processing.c **** 
1036:..\src/command_processing.c ****     uint8 NUM_ITEMS[NUM_OF_PARAMS] = {
 6470              		.loc 1 1036 0
 6471 0900 07F55D73 		add	r3, r7, #884
 6472 0904 0122     		movs	r2, #1
 6473 0906 1A70     		strb	r2, [r3]
 6474 0908 07F55D73 		add	r3, r7, #884
 6475 090c 0322     		movs	r2, #3
 6476 090e 5A70     		strb	r2, [r3, #1]
 6477 0910 07F55D73 		add	r3, r7, #884
 6478 0914 0322     		movs	r2, #3
 6479 0916 9A70     		strb	r2, [r3, #2]
 6480 0918 07F55D73 		add	r3, r7, #884
 6481 091c 0122     		movs	r2, #1
 6482 091e DA70     		strb	r2, [r3, #3]
 6483 0920 07F55D73 		add	r3, r7, #884
 6484 0924 0122     		movs	r2, #1
 6485 0926 1A71     		strb	r2, [r3, #4]
 6486 0928 07F55D73 		add	r3, r7, #884
 6487 092c 0122     		movs	r2, #1
 6488 092e 5A71     		strb	r2, [r3, #5]
 6489 0930 07F55D73 		add	r3, r7, #884
 6490 0934 0322     		movs	r2, #3
 6491 0936 9A71     		strb	r2, [r3, #6]
 6492 0938 07F55D73 		add	r3, r7, #884
 6493 093c 0322     		movs	r2, #3
 6494 093e DA71     		strb	r2, [r3, #7]
 6495 0940 07F55D73 		add	r3, r7, #884
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 161


 6496 0944 0322     		movs	r2, #3
 6497 0946 1A72     		strb	r2, [r3, #8]
 6498 0948 07F55D73 		add	r3, r7, #884
 6499 094c 0122     		movs	r2, #1
 6500 094e 5A72     		strb	r2, [r3, #9]
 6501 0950 07F55D73 		add	r3, r7, #884
 6502 0954 0222     		movs	r2, #2
 6503 0956 9A72     		strb	r2, [r3, #10]
 6504 0958 07F55D73 		add	r3, r7, #884
 6505 095c 0222     		movs	r2, #2
 6506 095e DA72     		strb	r2, [r3, #11]
 6507 0960 07F55D73 		add	r3, r7, #884
 6508 0964 0122     		movs	r2, #1
 6509 0966 1A73     		strb	r2, [r3, #12]
 6510 0968 07F55D73 		add	r3, r7, #884
 6511 096c 0222     		movs	r2, #2
 6512 096e 5A73     		strb	r2, [r3, #13]
 6513 0970 07F55D73 		add	r3, r7, #884
 6514 0974 0122     		movs	r2, #1
 6515 0976 9A73     		strb	r2, [r3, #14]
 6516 0978 07F55D73 		add	r3, r7, #884
 6517 097c 0222     		movs	r2, #2
 6518 097e DA73     		strb	r2, [r3, #15]
 6519 0980 07F55D73 		add	r3, r7, #884
 6520 0984 0222     		movs	r2, #2
 6521 0986 1A74     		strb	r2, [r3, #16]
 6522 0988 07F55D73 		add	r3, r7, #884
 6523 098c 0122     		movs	r2, #1
 6524 098e 5A74     		strb	r2, [r3, #17]
 6525 0990 07F55D73 		add	r3, r7, #884
 6526 0994 0122     		movs	r2, #1
 6527 0996 9A74     		strb	r2, [r3, #18]
 6528 0998 07F55D73 		add	r3, r7, #884
 6529 099c 0122     		movs	r2, #1
 6530 099e DA74     		strb	r2, [r3, #19]
 6531 09a0 07F55D73 		add	r3, r7, #884
 6532 09a4 0622     		movs	r2, #6
 6533 09a6 1A75     		strb	r2, [r3, #20]
 6534 09a8 07F55D73 		add	r3, r7, #884
 6535 09ac 0322     		movs	r2, #3
 6536 09ae 5A75     		strb	r2, [r3, #21]
 6537 09b0 07F55D73 		add	r3, r7, #884
 6538 09b4 0122     		movs	r2, #1
 6539 09b6 9A75     		strb	r2, [r3, #22]
 6540 09b8 07F55D73 		add	r3, r7, #884
 6541 09bc 0122     		movs	r2, #1
 6542 09be DA75     		strb	r2, [r3, #23]
 6543 09c0 07F55D73 		add	r3, r7, #884
 6544 09c4 0122     		movs	r2, #1
 6545 09c6 1A76     		strb	r2, [r3, #24]
 6546 09c8 07F55D73 		add	r3, r7, #884
 6547 09cc 0122     		movs	r2, #1
 6548 09ce 5A76     		strb	r2, [r3, #25]
 6549 09d0 07F55D73 		add	r3, r7, #884
 6550 09d4 0122     		movs	r2, #1
 6551 09d6 9A76     		strb	r2, [r3, #26]
 6552 09d8 07F55D73 		add	r3, r7, #884
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 162


 6553 09dc 0122     		movs	r2, #1
 6554 09de DA76     		strb	r2, [r3, #27]
 6555 09e0 07F55D73 		add	r3, r7, #884
 6556 09e4 0122     		movs	r2, #1
 6557 09e6 1A77     		strb	r2, [r3, #28]
 6558 09e8 07F55D73 		add	r3, r7, #884
 6559 09ec 0122     		movs	r2, #1
 6560 09ee 5A77     		strb	r2, [r3, #29]
 6561 09f0 07F55D73 		add	r3, r7, #884
 6562 09f4 0122     		movs	r2, #1
 6563 09f6 9A77     		strb	r2, [r3, #30]
 6564 09f8 07F55D73 		add	r3, r7, #884
 6565 09fc 0622     		movs	r2, #6
 6566 09fe DA77     		strb	r2, [r3, #31]
 6567 0a00 07F55D73 		add	r3, r7, #884
 6568 0a04 0122     		movs	r2, #1
 6569 0a06 83F82020 		strb	r2, [r3, #32]
 6570 0a0a 07F55D73 		add	r3, r7, #884
 6571 0a0e 0522     		movs	r2, #5
 6572 0a10 83F82120 		strb	r2, [r3, #33]
 6573 0a14 07F55D73 		add	r3, r7, #884
 6574 0a18 0122     		movs	r2, #1
 6575 0a1a 83F82220 		strb	r2, [r3, #34]
 6576 0a1e 07F55D73 		add	r3, r7, #884
 6577 0a22 0622     		movs	r2, #6
 6578 0a24 83F82320 		strb	r2, [r3, #35]
 6579 0a28 07F55D73 		add	r3, r7, #884
 6580 0a2c 0122     		movs	r2, #1
 6581 0a2e 83F82420 		strb	r2, [r3, #36]
 6582 0a32 07F55D73 		add	r3, r7, #884
 6583 0a36 0122     		movs	r2, #1
 6584 0a38 83F82520 		strb	r2, [r3, #37]
 6585 0a3c 07F55D73 		add	r3, r7, #884
 6586 0a40 0122     		movs	r2, #1
 6587 0a42 83F82620 		strb	r2, [r3, #38]
 6588 0a46 07F55D73 		add	r3, r7, #884
 6589 0a4a 0122     		movs	r2, #1
 6590 0a4c 83F82720 		strb	r2, [r3, #39]
 6591 0a50 07F55D73 		add	r3, r7, #884
 6592 0a54 0322     		movs	r2, #3
 6593 0a56 83F82820 		strb	r2, [r3, #40]
 6594 0a5a 07F55D73 		add	r3, r7, #884
 6595 0a5e 0322     		movs	r2, #3
 6596 0a60 83F82920 		strb	r2, [r3, #41]
 6597 0a64 07F55D73 		add	r3, r7, #884
 6598 0a68 0122     		movs	r2, #1
 6599 0a6a 83F82A20 		strb	r2, [r3, #42]
 6600 0a6e 07F55D73 		add	r3, r7, #884
 6601 0a72 0322     		movs	r2, #3
 6602 0a74 83F82B20 		strb	r2, [r3, #43]
 6603 0a78 07F55D73 		add	r3, r7, #884
 6604 0a7c 0322     		movs	r2, #3
 6605 0a7e 83F82C20 		strb	r2, [r3, #44]
 6606 0a82 07F55D73 		add	r3, r7, #884
 6607 0a86 0122     		movs	r2, #1
 6608 0a88 83F82D20 		strb	r2, [r3, #45]
 6609 0a8c 07F55D73 		add	r3, r7, #884
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 163


 6610 0a90 0122     		movs	r2, #1
 6611 0a92 83F82E20 		strb	r2, [r3, #46]
 6612 0a96 07F55D73 		add	r3, r7, #884
 6613 0a9a 0122     		movs	r2, #1
 6614 0a9c 83F82F20 		strb	r2, [r3, #47]
 6615 0aa0 07F55D73 		add	r3, r7, #884
 6616 0aa4 0322     		movs	r2, #3
 6617 0aa6 83F83020 		strb	r2, [r3, #48]
 6618 0aaa 07F55D73 		add	r3, r7, #884
 6619 0aae 0322     		movs	r2, #3
 6620 0ab0 83F83120 		strb	r2, [r3, #49]
 6621 0ab4 07F55D73 		add	r3, r7, #884
 6622 0ab8 0322     		movs	r2, #3
 6623 0aba 83F83220 		strb	r2, [r3, #50]
 6624 0abe 07F55D73 		add	r3, r7, #884
 6625 0ac2 0122     		movs	r2, #1
 6626 0ac4 83F83320 		strb	r2, [r3, #51]
 6627 0ac8 07F55D73 		add	r3, r7, #884
 6628 0acc 0222     		movs	r2, #2
 6629 0ace 83F83420 		strb	r2, [r3, #52]
 6630 0ad2 07F55D73 		add	r3, r7, #884
 6631 0ad6 0222     		movs	r2, #2
 6632 0ad8 83F83520 		strb	r2, [r3, #53]
 6633 0adc 07F55D73 		add	r3, r7, #884
 6634 0ae0 0122     		movs	r2, #1
 6635 0ae2 83F83620 		strb	r2, [r3, #54]
 6636 0ae6 07F55D73 		add	r3, r7, #884
 6637 0aea 0122     		movs	r2, #1
 6638 0aec 83F83720 		strb	r2, [r3, #55]
 6639 0af0 07F55D73 		add	r3, r7, #884
 6640 0af4 0122     		movs	r2, #1
 6641 0af6 83F83820 		strb	r2, [r3, #56]
 6642 0afa 07F55D73 		add	r3, r7, #884
 6643 0afe 0122     		movs	r2, #1
 6644 0b00 83F83920 		strb	r2, [r3, #57]
 6645 0b04 07F55D73 		add	r3, r7, #884
 6646 0b08 0622     		movs	r2, #6
 6647 0b0a 83F83A20 		strb	r2, [r3, #58]
 6648 0b0e 07F55D73 		add	r3, r7, #884
 6649 0b12 0122     		movs	r2, #1
 6650 0b14 83F83B20 		strb	r2, [r3, #59]
 6651 0b18 07F55D73 		add	r3, r7, #884
 6652 0b1c 0122     		movs	r2, #1
 6653 0b1e 83F83C20 		strb	r2, [r3, #60]
 6654 0b22 07F55D73 		add	r3, r7, #884
 6655 0b26 0122     		movs	r2, #1
 6656 0b28 83F83D20 		strb	r2, [r3, #61]
 6657 0b2c 07F55D73 		add	r3, r7, #884
 6658 0b30 0122     		movs	r2, #1
 6659 0b32 83F83E20 		strb	r2, [r3, #62]
 6660 0b36 07F55D73 		add	r3, r7, #884
 6661 0b3a 0322     		movs	r2, #3
 6662 0b3c 83F83F20 		strb	r2, [r3, #63]
 6663 0b40 07F55D73 		add	r3, r7, #884
 6664 0b44 0322     		movs	r2, #3
 6665 0b46 83F84020 		strb	r2, [r3, #64]
1037:..\src/command_processing.c ****         1, 3, 3, 1, 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 164


1038:..\src/command_processing.c ****         1, 1, 3, 3,
1039:..\src/command_processing.c ****         3, 1, 2, 2, 
1040:..\src/command_processing.c ****         1, 2, 1, 2,
1041:..\src/command_processing.c ****         2, 1, 1, 1, 
1042:..\src/command_processing.c ****         6, 3, 1, 1,
1043:..\src/command_processing.c ****         1, 1, 1, 1, 
1044:..\src/command_processing.c ****         1, 1, 1, 6,
1045:..\src/command_processing.c ****         1, 5, 1, 6,
1046:..\src/command_processing.c ****         
1047:..\src/command_processing.c ****         // GENERIC PARAMS
1048:..\src/command_processing.c ****         1, 1, 1, 1,
1049:..\src/command_processing.c ****         3, 3, 1, 3,
1050:..\src/command_processing.c ****         3, 1, 1, 1,
1051:..\src/command_processing.c ****         3, 3, 3, 1,
1052:..\src/command_processing.c ****         2, 2, 1, 1,
1053:..\src/command_processing.c ****         1, 1, 6, 1,
1054:..\src/command_processing.c ****         1, 1, 1, 3, 
1055:..\src/command_processing.c ****         3, N_Encoder_Line_Connected[0], N_Encoder_Line_Connected[1], 1,
 6666              		.loc 1 1055 0
 6667 0b4a 614B     		ldr	r3, .L371+4
 6668 0b4c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
1036:..\src/command_processing.c ****         1, 3, 3, 1, 
 6669              		.loc 1 1036 0
 6670 0b4e 07F55D73 		add	r3, r7, #884
 6671 0b52 83F84120 		strb	r2, [r3, #65]
 6672              		.loc 1 1055 0
 6673 0b56 5E4B     		ldr	r3, .L371+4
 6674 0b58 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
1036:..\src/command_processing.c ****         1, 3, 3, 1, 
 6675              		.loc 1 1036 0
 6676 0b5a 07F55D73 		add	r3, r7, #884
 6677 0b5e 83F84220 		strb	r2, [r3, #66]
 6678 0b62 07F55D73 		add	r3, r7, #884
 6679 0b66 0122     		movs	r2, #1
 6680 0b68 83F84320 		strb	r2, [r3, #67]
 6681 0b6c 07F55D73 		add	r3, r7, #884
 6682 0b70 0622     		movs	r2, #6
 6683 0b72 83F84420 		strb	r2, [r3, #68]
 6684 0b76 07F55D73 		add	r3, r7, #884
 6685 0b7a 0622     		movs	r2, #6
 6686 0b7c 83F84520 		strb	r2, [r3, #69]
 6687 0b80 07F55D73 		add	r3, r7, #884
 6688 0b84 0122     		movs	r2, #1
 6689 0b86 83F84620 		strb	r2, [r3, #70]
 6690 0b8a 07F55D73 		add	r3, r7, #884
 6691 0b8e 0122     		movs	r2, #1
 6692 0b90 83F84720 		strb	r2, [r3, #71]
 6693 0b94 07F55D73 		add	r3, r7, #884
 6694 0b98 0122     		movs	r2, #1
 6695 0b9a 83F84820 		strb	r2, [r3, #72]
 6696 0b9e 07F55D73 		add	r3, r7, #884
 6697 0ba2 0222     		movs	r2, #2
 6698 0ba4 83F84920 		strb	r2, [r3, #73]
 6699 0ba8 07F55D73 		add	r3, r7, #884
 6700 0bac 0122     		movs	r2, #1
 6701 0bae 83F84A20 		strb	r2, [r3, #74]
 6702 0bb2 07F55D73 		add	r3, r7, #884
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 165


 6703 0bb6 0122     		movs	r2, #1
 6704 0bb8 83F84B20 		strb	r2, [r3, #75]
 6705 0bbc 07F55D73 		add	r3, r7, #884
 6706 0bc0 0222     		movs	r2, #2
 6707 0bc2 83F84C20 		strb	r2, [r3, #76]
 6708 0bc6 07F55D73 		add	r3, r7, #884
 6709 0bca 0122     		movs	r2, #1
 6710 0bcc 83F84D20 		strb	r2, [r3, #77]
 6711 0bd0 07F55D73 		add	r3, r7, #884
 6712 0bd4 0122     		movs	r2, #1
 6713 0bd6 83F84E20 		strb	r2, [r3, #78]
 6714 0bda 07F55D73 		add	r3, r7, #884
 6715 0bde 0122     		movs	r2, #1
 6716 0be0 83F84F20 		strb	r2, [r3, #79]
 6717 0be4 07F55D73 		add	r3, r7, #884
 6718 0be8 0122     		movs	r2, #1
 6719 0bea 83F85020 		strb	r2, [r3, #80]
 6720 0bee 07F55D73 		add	r3, r7, #884
 6721 0bf2 0122     		movs	r2, #1
 6722 0bf4 83F85120 		strb	r2, [r3, #81]
 6723 0bf8 07F55D73 		add	r3, r7, #884
 6724 0bfc 0122     		movs	r2, #1
 6725 0bfe 83F85220 		strb	r2, [r3, #82]
1056:..\src/command_processing.c ****         6, 6, 1, 1,
1057:..\src/command_processing.c ****         1, 2, 1, 1,
1058:..\src/command_processing.c ****         2,
1059:..\src/command_processing.c ****         
1060:..\src/command_processing.c ****            1, 1, 1, 
1061:..\src/command_processing.c ****         1, 1, 1
1062:..\src/command_processing.c ****     };
1063:..\src/command_processing.c ****     
1064:..\src/command_processing.c ****     uint8 NUM_STRUCT[NUM_OF_PARAMS] = {     // see STRUCTURES INDEX in globals.h
 6726              		.loc 1 1064 0
 6727 0c02 07F54873 		add	r3, r7, #800
 6728 0c06 0022     		movs	r2, #0
 6729 0c08 1A70     		strb	r2, [r3]
 6730 0c0a 97F87D35 		ldrb	r3, [r7, #1405]
 6731 0c0e 0A33     		adds	r3, r3, #10
 6732 0c10 DAB2     		uxtb	r2, r3
 6733 0c12 07F54873 		add	r3, r7, #800
 6734 0c16 5A70     		strb	r2, [r3, #1]
 6735 0c18 97F87D35 		ldrb	r3, [r7, #1405]
 6736 0c1c 0A33     		adds	r3, r3, #10
 6737 0c1e DAB2     		uxtb	r2, r3
 6738 0c20 07F54873 		add	r3, r7, #800
 6739 0c24 9A70     		strb	r2, [r3, #2]
 6740 0c26 97F87D35 		ldrb	r3, [r7, #1405]
 6741 0c2a 0A33     		adds	r3, r3, #10
 6742 0c2c DAB2     		uxtb	r2, r3
 6743 0c2e 07F54873 		add	r3, r7, #800
 6744 0c32 DA70     		strb	r2, [r3, #3]
 6745 0c34 97F87D35 		ldrb	r3, [r7, #1405]
 6746 0c38 0A33     		adds	r3, r3, #10
 6747 0c3a DAB2     		uxtb	r2, r3
 6748 0c3c 07F54873 		add	r3, r7, #800
 6749 0c40 1A71     		strb	r2, [r3, #4]
 6750 0c42 97F87D35 		ldrb	r3, [r7, #1405]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 166


 6751 0c46 0A33     		adds	r3, r3, #10
 6752 0c48 DAB2     		uxtb	r2, r3
 6753 0c4a 07F54873 		add	r3, r7, #800
 6754 0c4e 5A71     		strb	r2, [r3, #5]
1065:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
1066:..\src/command_processing.c ****         ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_ENCODER+(MEM_P->motor[MOTOR_IDX].encoder_line), 
 6755              		.loc 1 1066 0
 6756 0c50 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 6757 0c54 D7F88015 		ldr	r1, [r7, #1408]
 6758 0c58 1346     		mov	r3, r2
 6759 0c5a DB00     		lsls	r3, r3, #3
 6760 0c5c 9B1A     		subs	r3, r3, r2
 6761 0c5e 1B01     		lsls	r3, r3, #4
 6762 0c60 0B44     		add	r3, r3, r1
 6763 0c62 03F58873 		add	r3, r3, #272
 6764 0c66 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1064:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 6765              		.loc 1 1064 0
 6766 0c68 1433     		adds	r3, r3, #20
 6767 0c6a DAB2     		uxtb	r2, r3
 6768 0c6c 07F54873 		add	r3, r7, #800
 6769 0c70 9A71     		strb	r2, [r3, #6]
 6770              		.loc 1 1066 0
 6771 0c72 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 6772 0c76 D7F88015 		ldr	r1, [r7, #1408]
 6773 0c7a 1346     		mov	r3, r2
 6774 0c7c DB00     		lsls	r3, r3, #3
 6775 0c7e 9B1A     		subs	r3, r3, r2
 6776 0c80 1B01     		lsls	r3, r3, #4
 6777 0c82 0B44     		add	r3, r3, r1
 6778 0c84 03F58873 		add	r3, r3, #272
 6779 0c88 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1064:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 6780              		.loc 1 1064 0
 6781 0c8a 1433     		adds	r3, r3, #20
 6782 0c8c DAB2     		uxtb	r2, r3
 6783 0c8e 07F54873 		add	r3, r7, #800
 6784 0c92 DA71     		strb	r2, [r3, #7]
1067:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[MOTOR_IDX].encoder_line), ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 6785              		.loc 1 1067 0
 6786 0c94 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 6787 0c98 D7F88015 		ldr	r1, [r7, #1408]
 6788 0c9c 1346     		mov	r3, r2
 6789 0c9e DB00     		lsls	r3, r3, #3
 6790 0ca0 9B1A     		subs	r3, r3, r2
 6791 0ca2 1B01     		lsls	r3, r3, #4
 6792 0ca4 0B44     		add	r3, r3, r1
 6793 0ca6 03F58873 		add	r3, r3, #272
 6794 0caa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1064:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 6795              		.loc 1 1064 0
 6796 0cac 1433     		adds	r3, r3, #20
 6797 0cae DAB2     		uxtb	r2, r3
 6798 0cb0 07F54873 		add	r3, r7, #800
 6799 0cb4 1A72     		strb	r2, [r3, #8]
 6800 0cb6 97F87D35 		ldrb	r3, [r7, #1405]
 6801 0cba 0A33     		adds	r3, r3, #10
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 167


 6802 0cbc DAB2     		uxtb	r2, r3
 6803 0cbe 07F54873 		add	r3, r7, #800
 6804 0cc2 5A72     		strb	r2, [r3, #9]
 6805 0cc4 97F87D35 		ldrb	r3, [r7, #1405]
 6806 0cc8 04E0     		b	.L372
 6807              	.L373:
 6808 0cca 00BF     		.align	2
 6809              	.L371:
 6810 0ccc 4C060000 		.word	.LC0
 6811 0cd0 00000000 		.word	N_Encoder_Line_Connected
 6812              	.L372:
 6813 0cd4 0A33     		adds	r3, r3, #10
 6814 0cd6 DAB2     		uxtb	r2, r3
 6815 0cd8 07F54873 		add	r3, r7, #800
 6816 0cdc 9A72     		strb	r2, [r3, #10]
 6817 0cde 97F87D35 		ldrb	r3, [r7, #1405]
 6818 0ce2 0A33     		adds	r3, r3, #10
 6819 0ce4 DAB2     		uxtb	r2, r3
 6820 0ce6 07F54873 		add	r3, r7, #800
 6821 0cea DA72     		strb	r2, [r3, #11]
 6822 0cec 97F87D35 		ldrb	r3, [r7, #1405]
 6823 0cf0 0A33     		adds	r3, r3, #10
 6824 0cf2 DAB2     		uxtb	r2, r3
 6825 0cf4 07F54873 		add	r3, r7, #800
 6826 0cf8 1A73     		strb	r2, [r3, #12]
 6827 0cfa 07F54873 		add	r3, r7, #800
 6828 0cfe 1E22     		movs	r2, #30
 6829 0d00 5A73     		strb	r2, [r3, #13]
 6830 0d02 07F54873 		add	r3, r7, #800
 6831 0d06 1E22     		movs	r2, #30
 6832 0d08 9A73     		strb	r2, [r3, #14]
 6833 0d0a 07F54873 		add	r3, r7, #800
 6834 0d0e 1E22     		movs	r2, #30
 6835 0d10 DA73     		strb	r2, [r3, #15]
 6836 0d12 07F54873 		add	r3, r7, #800
 6837 0d16 1E22     		movs	r2, #30
 6838 0d18 1A74     		strb	r2, [r3, #16]
1068:..\src/command_processing.c ****         ST_MOTOR+MOTOR_IDX, ST_EMG, ST_EMG, ST_EMG, 
1069:..\src/command_processing.c ****         ST_EMG, ST_ENCODER+(MEM_P->motor[MOTOR_IDX].encoder_line), ST_ENCODER+(MEM_P->motor[MOTOR_I
 6839              		.loc 1 1069 0
 6840 0d1a 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 6841 0d1e D7F88015 		ldr	r1, [r7, #1408]
 6842 0d22 1346     		mov	r3, r2
 6843 0d24 DB00     		lsls	r3, r3, #3
 6844 0d26 9B1A     		subs	r3, r3, r2
 6845 0d28 1B01     		lsls	r3, r3, #4
 6846 0d2a 0B44     		add	r3, r3, r1
 6847 0d2c 03F58873 		add	r3, r3, #272
 6848 0d30 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1064:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 6849              		.loc 1 1064 0
 6850 0d32 1433     		adds	r3, r3, #20
 6851 0d34 DAB2     		uxtb	r2, r3
 6852 0d36 07F54873 		add	r3, r7, #800
 6853 0d3a 5A74     		strb	r2, [r3, #17]
 6854              		.loc 1 1069 0
 6855 0d3c 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 168


 6856 0d40 D7F88015 		ldr	r1, [r7, #1408]
 6857 0d44 1346     		mov	r3, r2
 6858 0d46 DB00     		lsls	r3, r3, #3
 6859 0d48 9B1A     		subs	r3, r3, r2
 6860 0d4a 1B01     		lsls	r3, r3, #4
 6861 0d4c 0B44     		add	r3, r3, r1
 6862 0d4e 03F58873 		add	r3, r3, #272
 6863 0d52 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1064:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 6864              		.loc 1 1064 0
 6865 0d54 1433     		adds	r3, r3, #20
 6866 0d56 DAB2     		uxtb	r2, r3
 6867 0d58 07F54873 		add	r3, r7, #800
 6868 0d5c 9A74     		strb	r2, [r3, #18]
 6869 0d5e 97F87D35 		ldrb	r3, [r7, #1405]
 6870 0d62 0A33     		adds	r3, r3, #10
 6871 0d64 DAB2     		uxtb	r2, r3
 6872 0d66 07F54873 		add	r3, r7, #800
 6873 0d6a DA74     		strb	r2, [r3, #19]
 6874 0d6c 97F87D35 		ldrb	r3, [r7, #1405]
 6875 0d70 0A33     		adds	r3, r3, #10
 6876 0d72 DAB2     		uxtb	r2, r3
 6877 0d74 07F54873 		add	r3, r7, #800
 6878 0d78 1A75     		strb	r2, [r3, #20]
 6879 0d7a 07F54873 		add	r3, r7, #800
 6880 0d7e 0022     		movs	r2, #0
 6881 0d80 5A75     		strb	r2, [r3, #21]
 6882 0d82 07F54873 		add	r3, r7, #800
 6883 0d86 4622     		movs	r2, #70
 6884 0d88 9A75     		strb	r2, [r3, #22]
 6885 0d8a 07F54873 		add	r3, r7, #800
 6886 0d8e 4622     		movs	r2, #70
 6887 0d90 DA75     		strb	r2, [r3, #23]
 6888 0d92 07F54873 		add	r3, r7, #800
 6889 0d96 4622     		movs	r2, #70
 6890 0d98 1A76     		strb	r2, [r3, #24]
 6891 0d9a 07F54873 		add	r3, r7, #800
 6892 0d9e 4622     		movs	r2, #70
 6893 0da0 5A76     		strb	r2, [r3, #25]
 6894 0da2 07F54873 		add	r3, r7, #800
 6895 0da6 1E22     		movs	r2, #30
 6896 0da8 9A76     		strb	r2, [r3, #26]
 6897 0daa 07F54873 		add	r3, r7, #800
 6898 0dae 0022     		movs	r2, #0
 6899 0db0 DA76     		strb	r2, [r3, #27]
 6900 0db2 07F54873 		add	r3, r7, #800
 6901 0db6 2822     		movs	r2, #40
 6902 0db8 1A77     		strb	r2, [r3, #28]
 6903 0dba 07F54873 		add	r3, r7, #800
 6904 0dbe 3222     		movs	r2, #50
 6905 0dc0 5A77     		strb	r2, [r3, #29]
 6906 0dc2 07F54873 		add	r3, r7, #800
 6907 0dc6 0022     		movs	r2, #0
 6908 0dc8 9A77     		strb	r2, [r3, #30]
 6909 0dca 07F54873 		add	r3, r7, #800
 6910 0dce 3222     		movs	r2, #50
 6911 0dd0 DA77     		strb	r2, [r3, #31]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 169


 6912 0dd2 07F54873 		add	r3, r7, #800
 6913 0dd6 2822     		movs	r2, #40
 6914 0dd8 83F82020 		strb	r2, [r3, #32]
 6915 0ddc 07F54873 		add	r3, r7, #800
 6916 0de0 2822     		movs	r2, #40
 6917 0de2 83F82120 		strb	r2, [r3, #33]
 6918 0de6 07F54873 		add	r3, r7, #800
 6919 0dea 0022     		movs	r2, #0
 6920 0dec 83F82220 		strb	r2, [r3, #34]
1070:..\src/command_processing.c ****         ST_MOTOR+MOTOR_IDX, ST_DEVICE, ST_SH_SPEC, ST_SH_SPEC,
1071:..\src/command_processing.c ****         ST_SH_SPEC, ST_SH_SPEC, ST_EMG, ST_DEVICE,
1072:..\src/command_processing.c ****         ST_IMU, ST_EXPANSION, ST_DEVICE, ST_EXPANSION,
1073:..\src/command_processing.c ****         ST_IMU, ST_IMU, ST_DEVICE, ST_USER+(MEM_P->dev.user_id),
 6921              		.loc 1 1073 0
 6922 0df0 D7F88035 		ldr	r3, [r7, #1408]
 6923 0df4 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
1064:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 6924              		.loc 1 1064 0
 6925 0df8 3C33     		adds	r3, r3, #60
 6926 0dfa DAB2     		uxtb	r2, r3
 6927 0dfc 07F54873 		add	r3, r7, #800
 6928 0e00 83F82320 		strb	r2, [r3, #35]
 6929 0e04 97F87D35 		ldrb	r3, [r7, #1405]
 6930 0e08 0A33     		adds	r3, r3, #10
 6931 0e0a DAB2     		uxtb	r2, r3
 6932 0e0c 07F54873 		add	r3, r7, #800
 6933 0e10 83F82420 		strb	r2, [r3, #36]
 6934 0e14 97F87D35 		ldrb	r3, [r7, #1405]
 6935 0e18 0A33     		adds	r3, r3, #10
 6936 0e1a DAB2     		uxtb	r2, r3
 6937 0e1c 07F54873 		add	r3, r7, #800
 6938 0e20 83F82520 		strb	r2, [r3, #37]
 6939 0e24 97F87D35 		ldrb	r3, [r7, #1405]
 6940 0e28 0A33     		adds	r3, r3, #10
 6941 0e2a DAB2     		uxtb	r2, r3
 6942 0e2c 07F54873 		add	r3, r7, #800
 6943 0e30 83F82620 		strb	r2, [r3, #38]
 6944 0e34 97F87D35 		ldrb	r3, [r7, #1405]
 6945 0e38 0A33     		adds	r3, r3, #10
 6946 0e3a DAB2     		uxtb	r2, r3
 6947 0e3c 07F54873 		add	r3, r7, #800
 6948 0e40 83F82720 		strb	r2, [r3, #39]
1074:..\src/command_processing.c ****         
1075:..\src/command_processing.c ****         // GENERIC PARAMS
1076:..\src/command_processing.c ****         ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX,
1077:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[MOTOR_IDX].encoder_line), ST_ENCODER+(MEM_P->motor[MOTOR_IDX].enco
 6949              		.loc 1 1077 0
 6950 0e44 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 6951 0e48 D7F88015 		ldr	r1, [r7, #1408]
 6952 0e4c 1346     		mov	r3, r2
 6953 0e4e DB00     		lsls	r3, r3, #3
 6954 0e50 9B1A     		subs	r3, r3, r2
 6955 0e52 1B01     		lsls	r3, r3, #4
 6956 0e54 0B44     		add	r3, r3, r1
 6957 0e56 03F58873 		add	r3, r3, #272
 6958 0e5a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1064:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 170


 6959              		.loc 1 1064 0
 6960 0e5c 1433     		adds	r3, r3, #20
 6961 0e5e DAB2     		uxtb	r2, r3
 6962 0e60 07F54873 		add	r3, r7, #800
 6963 0e64 83F82820 		strb	r2, [r3, #40]
 6964              		.loc 1 1077 0
 6965 0e68 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 6966 0e6c D7F88015 		ldr	r1, [r7, #1408]
 6967 0e70 1346     		mov	r3, r2
 6968 0e72 DB00     		lsls	r3, r3, #3
 6969 0e74 9B1A     		subs	r3, r3, r2
 6970 0e76 1B01     		lsls	r3, r3, #4
 6971 0e78 0B44     		add	r3, r3, r1
 6972 0e7a 03F58873 		add	r3, r3, #272
 6973 0e7e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1064:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 6974              		.loc 1 1064 0
 6975 0e80 1433     		adds	r3, r3, #20
 6976 0e82 DAB2     		uxtb	r2, r3
 6977 0e84 07F54873 		add	r3, r7, #800
 6978 0e88 83F82920 		strb	r2, [r3, #41]
 6979 0e8c 07F54873 		add	r3, r7, #800
 6980 0e90 0022     		movs	r2, #0
 6981 0e92 83F82A20 		strb	r2, [r3, #42]
 6982 0e96 97F87C35 		ldrb	r3, [r7, #1404]
 6983 0e9a 0A33     		adds	r3, r3, #10
 6984 0e9c DAB2     		uxtb	r2, r3
 6985 0e9e 07F54873 		add	r3, r7, #800
 6986 0ea2 83F82B20 		strb	r2, [r3, #43]
 6987 0ea6 97F87C35 		ldrb	r3, [r7, #1404]
 6988 0eaa 0A33     		adds	r3, r3, #10
 6989 0eac DAB2     		uxtb	r2, r3
 6990 0eae 07F54873 		add	r3, r7, #800
 6991 0eb2 83F82C20 		strb	r2, [r3, #44]
 6992 0eb6 97F87C35 		ldrb	r3, [r7, #1404]
 6993 0eba 0A33     		adds	r3, r3, #10
 6994 0ebc DAB2     		uxtb	r2, r3
 6995 0ebe 07F54873 		add	r3, r7, #800
 6996 0ec2 83F82D20 		strb	r2, [r3, #45]
 6997 0ec6 97F87C35 		ldrb	r3, [r7, #1404]
 6998 0eca 0A33     		adds	r3, r3, #10
 6999 0ecc DAB2     		uxtb	r2, r3
 7000 0ece 07F54873 		add	r3, r7, #800
 7001 0ed2 83F82E20 		strb	r2, [r3, #46]
 7002 0ed6 97F87C35 		ldrb	r3, [r7, #1404]
 7003 0eda 0A33     		adds	r3, r3, #10
 7004 0edc DAB2     		uxtb	r2, r3
 7005 0ede 07F54873 		add	r3, r7, #800
 7006 0ee2 83F82F20 		strb	r2, [r3, #47]
1078:..\src/command_processing.c ****         ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+S
1079:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[SECOND_MOTOR_IDX].encoder_line), ST_ENCODER+(MEM_P->motor[SECOND_M
 7007              		.loc 1 1079 0
 7008 0ee6 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7009 0eea D7F88015 		ldr	r1, [r7, #1408]
 7010 0eee 1346     		mov	r3, r2
 7011 0ef0 DB00     		lsls	r3, r3, #3
 7012 0ef2 9B1A     		subs	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 171


 7013 0ef4 1B01     		lsls	r3, r3, #4
 7014 0ef6 0B44     		add	r3, r3, r1
 7015 0ef8 03F58873 		add	r3, r3, #272
 7016 0efc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1064:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 7017              		.loc 1 1064 0
 7018 0efe 1433     		adds	r3, r3, #20
 7019 0f00 DAB2     		uxtb	r2, r3
 7020 0f02 07F54873 		add	r3, r7, #800
 7021 0f06 83F83020 		strb	r2, [r3, #48]
 7022              		.loc 1 1079 0
 7023 0f0a 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7024 0f0e D7F88015 		ldr	r1, [r7, #1408]
 7025 0f12 1346     		mov	r3, r2
 7026 0f14 DB00     		lsls	r3, r3, #3
 7027 0f16 9B1A     		subs	r3, r3, r2
 7028 0f18 1B01     		lsls	r3, r3, #4
 7029 0f1a 0B44     		add	r3, r3, r1
 7030 0f1c 03F58873 		add	r3, r3, #272
 7031 0f20 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1064:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 7032              		.loc 1 1064 0
 7033 0f22 1433     		adds	r3, r3, #20
 7034 0f24 DAB2     		uxtb	r2, r3
 7035 0f26 07F54873 		add	r3, r7, #800
 7036 0f2a 83F83120 		strb	r2, [r3, #49]
 7037              		.loc 1 1079 0
 7038 0f2e 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7039 0f32 D7F88015 		ldr	r1, [r7, #1408]
 7040 0f36 1346     		mov	r3, r2
 7041 0f38 DB00     		lsls	r3, r3, #3
 7042 0f3a 9B1A     		subs	r3, r3, r2
 7043 0f3c 1B01     		lsls	r3, r3, #4
 7044 0f3e 0B44     		add	r3, r3, r1
 7045 0f40 03F58873 		add	r3, r3, #272
 7046 0f44 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1064:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 7047              		.loc 1 1064 0
 7048 0f46 1433     		adds	r3, r3, #20
 7049 0f48 DAB2     		uxtb	r2, r3
 7050 0f4a 07F54873 		add	r3, r7, #800
 7051 0f4e 83F83220 		strb	r2, [r3, #50]
 7052 0f52 97F87C35 		ldrb	r3, [r7, #1404]
 7053 0f56 0A33     		adds	r3, r3, #10
 7054 0f58 DAB2     		uxtb	r2, r3
 7055 0f5a 07F54873 		add	r3, r7, #800
 7056 0f5e 83F83320 		strb	r2, [r3, #51]
 7057 0f62 97F87C35 		ldrb	r3, [r7, #1404]
 7058 0f66 0A33     		adds	r3, r3, #10
 7059 0f68 DAB2     		uxtb	r2, r3
 7060 0f6a 07F54873 		add	r3, r7, #800
 7061 0f6e 83F83420 		strb	r2, [r3, #52]
 7062 0f72 97F87C35 		ldrb	r3, [r7, #1404]
 7063 0f76 0A33     		adds	r3, r3, #10
 7064 0f78 DAB2     		uxtb	r2, r3
 7065 0f7a 07F54873 		add	r3, r7, #800
 7066 0f7e 83F83520 		strb	r2, [r3, #53]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 172


 7067 0f82 97F87C35 		ldrb	r3, [r7, #1404]
 7068 0f86 0A33     		adds	r3, r3, #10
 7069 0f88 DAB2     		uxtb	r2, r3
 7070 0f8a 07F54873 		add	r3, r7, #800
 7071 0f8e 83F83620 		strb	r2, [r3, #54]
1080:..\src/command_processing.c ****         ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_ENCODER
 7072              		.loc 1 1080 0
 7073 0f92 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7074 0f96 D7F88015 		ldr	r1, [r7, #1408]
 7075 0f9a 1346     		mov	r3, r2
 7076 0f9c DB00     		lsls	r3, r3, #3
 7077 0f9e 9B1A     		subs	r3, r3, r2
 7078 0fa0 1B01     		lsls	r3, r3, #4
 7079 0fa2 0B44     		add	r3, r3, r1
 7080 0fa4 03F58873 		add	r3, r3, #272
 7081 0fa8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1064:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 7082              		.loc 1 1064 0
 7083 0faa 1433     		adds	r3, r3, #20
 7084 0fac DAB2     		uxtb	r2, r3
 7085 0fae 07F54873 		add	r3, r7, #800
 7086 0fb2 83F83720 		strb	r2, [r3, #55]
1081:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[SECOND_MOTOR_IDX].encoder_line), ST_MOTOR+SECOND_MOTOR_IDX, ST_MOT
 7087              		.loc 1 1081 0
 7088 0fb6 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7089 0fba D7F88015 		ldr	r1, [r7, #1408]
 7090 0fbe 1346     		mov	r3, r2
 7091 0fc0 DB00     		lsls	r3, r3, #3
 7092 0fc2 9B1A     		subs	r3, r3, r2
 7093 0fc4 1B01     		lsls	r3, r3, #4
 7094 0fc6 0B44     		add	r3, r3, r1
 7095 0fc8 03F58873 		add	r3, r3, #272
 7096 0fcc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1064:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 7097              		.loc 1 1064 0
 7098 0fce 1433     		adds	r3, r3, #20
 7099 0fd0 DAB2     		uxtb	r2, r3
 7100 0fd2 07F54873 		add	r3, r7, #800
 7101 0fd6 83F83820 		strb	r2, [r3, #56]
 7102 0fda 97F87C35 		ldrb	r3, [r7, #1404]
 7103 0fde 0A33     		adds	r3, r3, #10
 7104 0fe0 DAB2     		uxtb	r2, r3
 7105 0fe2 07F54873 		add	r3, r7, #800
 7106 0fe6 83F83920 		strb	r2, [r3, #57]
 7107 0fea 97F87C35 		ldrb	r3, [r7, #1404]
 7108 0fee 0A33     		adds	r3, r3, #10
 7109 0ff0 DAB2     		uxtb	r2, r3
 7110 0ff2 07F54873 		add	r3, r7, #800
 7111 0ff6 83F83A20 		strb	r2, [r3, #58]
 7112 0ffa 97F87C35 		ldrb	r3, [r7, #1404]
 7113 0ffe 0A33     		adds	r3, r3, #10
 7114 1000 DAB2     		uxtb	r2, r3
 7115 1002 07F54873 		add	r3, r7, #800
 7116 1006 83F83B20 		strb	r2, [r3, #59]
 7117 100a 97F87C35 		ldrb	r3, [r7, #1404]
 7118 100e 0A33     		adds	r3, r3, #10
 7119 1010 DAB2     		uxtb	r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 173


 7120 1012 07F54873 		add	r3, r7, #800
 7121 1016 83F83C20 		strb	r2, [r3, #60]
 7122 101a 97F87C35 		ldrb	r3, [r7, #1404]
 7123 101e 0A33     		adds	r3, r3, #10
 7124 1020 DAB2     		uxtb	r2, r3
 7125 1022 07F54873 		add	r3, r7, #800
 7126 1026 83F83D20 		strb	r2, [r3, #61]
 7127 102a 97F87C35 		ldrb	r3, [r7, #1404]
 7128 102e 0A33     		adds	r3, r3, #10
 7129 1030 DAB2     		uxtb	r2, r3
 7130 1032 07F54873 		add	r3, r7, #800
 7131 1036 83F83E20 		strb	r2, [r3, #62]
1082:..\src/command_processing.c ****         ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_ENCODER
 7132              		.loc 1 1082 0
 7133 103a 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7134 103e D7F88015 		ldr	r1, [r7, #1408]
 7135 1042 1346     		mov	r3, r2
 7136 1044 DB00     		lsls	r3, r3, #3
 7137 1046 9B1A     		subs	r3, r3, r2
 7138 1048 1B01     		lsls	r3, r3, #4
 7139 104a 0B44     		add	r3, r3, r1
 7140 104c 03F58873 		add	r3, r3, #272
 7141 1050 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1064:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 7142              		.loc 1 1064 0
 7143 1052 1433     		adds	r3, r3, #20
 7144 1054 DAB2     		uxtb	r2, r3
 7145 1056 07F54873 		add	r3, r7, #800
 7146 105a 83F83F20 		strb	r2, [r3, #63]
1083:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[SECOND_MOTOR_IDX].encoder_line), ST_ENCODER+0, ST_ENCODER+1, ST_EX
 7147              		.loc 1 1083 0
 7148 105e 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7149 1062 D7F88015 		ldr	r1, [r7, #1408]
 7150 1066 1346     		mov	r3, r2
 7151 1068 DB00     		lsls	r3, r3, #3
 7152 106a 9B1A     		subs	r3, r3, r2
 7153 106c 1B01     		lsls	r3, r3, #4
 7154 106e 0B44     		add	r3, r3, r1
 7155 1070 03F58873 		add	r3, r3, #272
 7156 1074 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1064:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 7157              		.loc 1 1064 0
 7158 1076 1433     		adds	r3, r3, #20
 7159 1078 DAB2     		uxtb	r2, r3
 7160 107a 07F54873 		add	r3, r7, #800
 7161 107e 83F84020 		strb	r2, [r3, #64]
 7162 1082 07F54873 		add	r3, r7, #800
 7163 1086 1422     		movs	r2, #20
 7164 1088 83F84120 		strb	r2, [r3, #65]
 7165 108c 07F54873 		add	r3, r7, #800
 7166 1090 1522     		movs	r2, #21
 7167 1092 83F84220 		strb	r2, [r3, #66]
 7168 1096 07F54873 		add	r3, r7, #800
 7169 109a 3222     		movs	r2, #50
 7170 109c 83F84320 		strb	r2, [r3, #67]
 7171 10a0 07F54873 		add	r3, r7, #800
 7172 10a4 3222     		movs	r2, #50
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 174


 7173 10a6 83F84420 		strb	r2, [r3, #68]
 7174 10aa 07F54873 		add	r3, r7, #800
 7175 10ae 3222     		movs	r2, #50
 7176 10b0 83F84520 		strb	r2, [r3, #69]
 7177 10b4 07F54873 		add	r3, r7, #800
 7178 10b8 3222     		movs	r2, #50
 7179 10ba 83F84620 		strb	r2, [r3, #70]
 7180 10be 07F54873 		add	r3, r7, #800
 7181 10c2 6E22     		movs	r2, #110
 7182 10c4 83F84720 		strb	r2, [r3, #71]
 7183 10c8 07F54873 		add	r3, r7, #800
 7184 10cc 6E22     		movs	r2, #110
 7185 10ce 83F84820 		strb	r2, [r3, #72]
 7186 10d2 07F54873 		add	r3, r7, #800
 7187 10d6 6E22     		movs	r2, #110
 7188 10d8 83F84920 		strb	r2, [r3, #73]
 7189 10dc 07F54873 		add	r3, r7, #800
 7190 10e0 0022     		movs	r2, #0
 7191 10e2 83F84A20 		strb	r2, [r3, #74]
 7192 10e6 07F54873 		add	r3, r7, #800
 7193 10ea 6422     		movs	r2, #100
 7194 10ec 83F84B20 		strb	r2, [r3, #75]
 7195 10f0 07F54873 		add	r3, r7, #800
 7196 10f4 6422     		movs	r2, #100
 7197 10f6 83F84C20 		strb	r2, [r3, #76]
 7198 10fa 07F54873 		add	r3, r7, #800
 7199 10fe 6422     		movs	r2, #100
 7200 1100 83F84D20 		strb	r2, [r3, #77]
 7201 1104 07F54873 		add	r3, r7, #800
 7202 1108 5022     		movs	r2, #80
 7203 110a 83F84E20 		strb	r2, [r3, #78]
 7204 110e 07F54873 		add	r3, r7, #800
 7205 1112 5022     		movs	r2, #80
 7206 1114 83F84F20 		strb	r2, [r3, #79]
 7207 1118 07F54873 		add	r3, r7, #800
 7208 111c 5A22     		movs	r2, #90
 7209 111e 83F85020 		strb	r2, [r3, #80]
 7210 1122 07F54873 		add	r3, r7, #800
 7211 1126 5A22     		movs	r2, #90
 7212 1128 83F85120 		strb	r2, [r3, #81]
 7213 112c 07F54873 		add	r3, r7, #800
 7214 1130 5A22     		movs	r2, #90
 7215 1132 83F85220 		strb	r2, [r3, #82]
1084:..\src/command_processing.c ****         ST_EXPANSION, ST_EXPANSION, ST_EXPANSION, ST_JOY_SPEC,
1085:..\src/command_processing.c ****         ST_JOY_SPEC, ST_JOY_SPEC, ST_DEVICE, ST_WR_SPEC, 
1086:..\src/command_processing.c ****         ST_WR_SPEC,
1087:..\src/command_processing.c ****         
1088:..\src/command_processing.c ****                     ST_WR_SPEC, ST_MS_SPEC, ST_MS_SPEC,
1089:..\src/command_processing.c ****         ST_FB_SPEC, ST_FB_SPEC, ST_FB_SPEC
1090:..\src/command_processing.c ****         
1091:..\src/command_processing.c ****     };
1092:..\src/command_processing.c ****     
1093:..\src/command_processing.c ****     const char* PARAMS_STR[NUM_OF_PARAMS] = {
 7216              		.loc 1 1093 0
 7217 1136 07F5EA73 		add	r3, r7, #468
 7218 113a CD4A     		ldr	r2, .L374
 7219 113c 1846     		mov	r0, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 175


 7220 113e 1146     		mov	r1, r2
 7221 1140 4FF4A673 		mov	r3, #332
 7222 1144 1A46     		mov	r2, r3
 7223 1146 FFF7FEFF 		bl	memcpy
1094:..\src/command_processing.c ****         "1 - Device ID:", "2 - Position PID [P, I, D]:", "3 - Current PID [P, I, D]:", "4 - Startup
1095:..\src/command_processing.c ****         "5 - Input mode:", "6 - Control mode:", "7 - Resolutions:", "8 - Measurement Offsets:", 
1096:..\src/command_processing.c ****         "9 - Multipliers:", "10 - Pos. limit active:", "11 - Pos. limits [inf, sup]:", "12 - Max st
1097:..\src/command_processing.c ****         "13 - Current limit:", "14 - EMG thresholds:", "15 - EMG calibration on startup:", "16 - EM
1098:..\src/command_processing.c ****         "17 - EMG max speeds:", "18 - Absolute encoder position:", "19 - Motor handle ratio:", "20 
1099:..\src/command_processing.c ****         "21 - Current lookup:", "22 - Date of maintenance [D/M/Y]:", "23 - Rest position:", "24 - R
1100:..\src/command_processing.c ****         "25 - Rest vel closure (ticks/sec):", "26 - Rest position enabled:", "27 - EMG inversion:",
1101:..\src/command_processing.c ****         "29 - Enable IMUs:", "30 - Read Expansion port:", "31 - Reset counters:", "32 - Last checke
1102:..\src/command_processing.c ****         "33 - SPI read delay (IMU):", "34 - On board IMU conf. [a,g,m,q,t]:", "35 - User ID:", "36 
1103:..\src/command_processing.c ****         
1104:..\src/command_processing.c ****         // GENERIC PARAMS
1105:..\src/command_processing.c ****         "37 - Associated encoder line:", "38 - Driver type:", "39 - PWM rate limiter:", "40 - Not r
1106:..\src/command_processing.c ****         "41 - Enc idx used for control:", "42 - Gear params[N1, N2, I1]:", "43 - Use second motor:"
1107:..\src/command_processing.c ****         "45 - Current PID [P, I, D]:", "46 - Startup Activation:", "47 - Input mode:", "48 - Contro
1108:..\src/command_processing.c ****         "49 - Resolutions:", "50 - Measurement Offsets:", "51 - Multipliers:", "52 - Pos. limit act
1109:..\src/command_processing.c ****         "53 - Pos. limits [inf, sup]:", "54 - Max steps [neg, pos]:", "55 - Current limit:", "56 - 
1110:..\src/command_processing.c ****         "57 - Motor handle ratio:", "58 - PWM rescaling:", "59 - Current lookup:", "60 - Associated
1111:..\src/command_processing.c ****         "61 - Driver type:", "62 - PWM rate limiter:", "63 - Not reversible:", "64 - Enc idx used f
1112:..\src/command_processing.c ****         "65 - Gear params[N1, N2, I1]:", "66 - Read enc raw line 0:", "67 - Read enc raw line 1:", 
1113:..\src/command_processing.c ****         "69 - ADC channel [1-6]:", "70 - ADC channel [7-12]:", "71 - Record EMG on SD card:", "72 -
1114:..\src/command_processing.c ****         "73 - Joystick threshold:", "74 - Joystick gains:", "75 - Device type:", "76 - EMG FSM act.
1115:..\src/command_processing.c ****         "77 - Fast act.thresholds:",
1116:..\src/command_processing.c ****         
1117:..\src/command_processing.c ****                                      "78 - Wrist direction:", "79 - Slave communication active:", "
1118:..\src/command_processing.c ****         "81 - Maximum slave residual current:", "82 - Maximum pressure feedback (kPa):", "83 - Prop
1119:..\src/command_processing.c ****     };
1120:..\src/command_processing.c **** 
1121:..\src/command_processing.c ****     //Parameters menu
1122:..\src/command_processing.c ****     char spi_delay_menu[118]    = ""; 
 7224              		.loc 1 1122 0
 7225 114a 07F5AE73 		add	r3, r7, #348
 7226 114e 0022     		movs	r2, #0
 7227 1150 1A60     		str	r2, [r3]
 7228 1152 0433     		adds	r3, r3, #4
 7229 1154 7222     		movs	r2, #114
 7230 1156 0021     		movs	r1, #0
 7231 1158 1846     		mov	r0, r3
 7232 115a FFF7FEFF 		bl	memset
1123:..\src/command_processing.c ****     sprintf(spi_delay_menu, "0 -> None\n1 -> Low (%u us delay for each 8-bit register read)\n2 -> H
 7233              		.loc 1 1123 0
 7234 115e 07F5AE70 		add	r0, r7, #348
 7235 1162 6423     		movs	r3, #100
 7236 1164 0A22     		movs	r2, #10
 7237 1166 C349     		ldr	r1, .L374+4
 7238 1168 FFF7FEFF 		bl	sprintf
1124:..\src/command_processing.c **** 
1125:..\src/command_processing.c ****     char fsm_activation_mode_menu[56] = "";
 7239              		.loc 1 1125 0
 7240 116c 07F59273 		add	r3, r7, #292
 7241 1170 0022     		movs	r2, #0
 7242 1172 1A60     		str	r2, [r3]
 7243 1174 0433     		adds	r3, r3, #4
 7244 1176 3422     		movs	r2, #52
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 176


 7245 1178 0021     		movs	r1, #0
 7246 117a 1846     		mov	r0, r3
 7247 117c FFF7FEFF 		bl	memset
1126:..\src/command_processing.c ****     if (MEM_P->dev.dev_type == SOFTHAND_2_MOTORS){
 7248              		.loc 1 1126 0
 7249 1180 D7F88035 		ldr	r3, [r7, #1408]
 7250 1184 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 7251 1188 042B     		cmp	r3, #4
 7252 118a 10D1     		bne	.L307
1127:..\src/command_processing.c ****         sprintf(fsm_activation_mode_menu, "0 -> Fast:syn2, Slow:syn1\n1 -> Slow:syn2, Fast:syn1\n")
 7253              		.loc 1 1127 0
 7254 118c 07F59273 		add	r3, r7, #292
 7255 1190 B94A     		ldr	r2, .L374+8
 7256 1192 1C46     		mov	r4, r3
 7257 1194 1546     		mov	r5, r2
 7258 1196 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 7259 1198 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 7260 119a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 7261 119c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 7262 119e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 7263 11a0 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 7264 11a2 95E80300 		ldmia	r5, {r0, r1}
 7265 11a6 2060     		str	r0, [r4]
 7266 11a8 0434     		adds	r4, r4, #4
 7267 11aa 2170     		strb	r1, [r4]
 7268 11ac 0FE0     		b	.L308
 7269              	.L307:
1128:..\src/command_processing.c ****     }
1129:..\src/command_processing.c ****     else {
1130:..\src/command_processing.c ****         sprintf(fsm_activation_mode_menu, "0 -> Fast:wrist,Slow:hand\n1 -> Slow:wrist,Fast:hand\n")
 7270              		.loc 1 1130 0
 7271 11ae 07F59273 		add	r3, r7, #292
 7272 11b2 B24A     		ldr	r2, .L374+12
 7273 11b4 1C46     		mov	r4, r3
 7274 11b6 1546     		mov	r5, r2
 7275 11b8 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 7276 11ba 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 7277 11bc 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 7278 11be 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 7279 11c0 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 7280 11c2 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 7281 11c4 95E80300 		ldmia	r5, {r0, r1}
 7282 11c8 2060     		str	r0, [r4]
 7283 11ca 0434     		adds	r4, r4, #4
 7284 11cc 2170     		strb	r1, [r4]
 7285              	.L308:
1131:..\src/command_processing.c ****     }
1132:..\src/command_processing.c ****     
1133:..\src/command_processing.c ****     const char* MENU_STR[NUM_OF_PARAMS_MENU] = {
 7286              		.loc 1 1133 0
 7287 11ce 07F1F403 		add	r3, r7, #244
 7288 11d2 AB4A     		ldr	r2, .L374+16
 7289 11d4 1A60     		str	r2, [r3]
 7290 11d6 07F1F403 		add	r3, r7, #244
 7291 11da AA4A     		ldr	r2, .L374+20
 7292 11dc 5A60     		str	r2, [r3, #4]
 7293 11de 07F1F403 		add	r3, r7, #244
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 177


 7294 11e2 A94A     		ldr	r2, .L374+24
 7295 11e4 9A60     		str	r2, [r3, #8]
 7296 11e6 07F1F403 		add	r3, r7, #244
 7297 11ea A84A     		ldr	r2, .L374+28
 7298 11ec DA60     		str	r2, [r3, #12]
 7299 11ee 07F1F403 		add	r3, r7, #244
 7300 11f2 A74A     		ldr	r2, .L374+32
 7301 11f4 1A61     		str	r2, [r3, #16]
 7302 11f6 07F1F403 		add	r3, r7, #244
 7303 11fa A64A     		ldr	r2, .L374+36
 7304 11fc 5A61     		str	r2, [r3, #20]
 7305 11fe 07F1F403 		add	r3, r7, #244
 7306 1202 07F5AE72 		add	r2, r7, #348
 7307 1206 9A61     		str	r2, [r3, #24]
 7308 1208 07F1F403 		add	r3, r7, #244
 7309 120c A24A     		ldr	r2, .L374+40
 7310 120e DA61     		str	r2, [r3, #28]
 7311 1210 07F1F403 		add	r3, r7, #244
 7312 1214 A14A     		ldr	r2, .L374+44
 7313 1216 1A62     		str	r2, [r3, #32]
 7314 1218 07F1F403 		add	r3, r7, #244
 7315 121c A04A     		ldr	r2, .L374+48
 7316 121e 5A62     		str	r2, [r3, #36]
 7317 1220 07F1F403 		add	r3, r7, #244
 7318 1224 07F59272 		add	r2, r7, #292
 7319 1228 9A62     		str	r2, [r3, #40]
 7320 122a 07F1F403 		add	r3, r7, #244
 7321 122e 9D4A     		ldr	r2, .L374+52
 7322 1230 DA62     		str	r2, [r3, #44]
1134:..\src/command_processing.c ****         "0 -> Usb\n1 -> Handle\n2 -> EMG proportional\n3 -> EMG Integral\n4 -> EMG FCFS\n5 -> EMG F
1135:..\src/command_processing.c ****         "0 -> Position\n1 -> PWM\n2 -> Current\n3 -> Position and Current\n",                      
1136:..\src/command_processing.c ****         "0 -> Deactivate [NO]\n1 -> Activate [YES]\n",                                             
1137:..\src/command_processing.c ****         "0 -> Right\n1 -> Left\n",                                                                 
1138:..\src/command_processing.c ****         "0 -> OFF\n1 -> ON\nThe board will reset\n",                                               
1139:..\src/command_processing.c ****         "0 -> None\n1 -> SD/RTC board\n2 -> WiFi board [N/A]\n3 -> Other [N/A]\nThe board will rese
1140:..\src/command_processing.c ****         spi_delay_menu,                                                                            
1141:..\src/command_processing.c ****         "0 -> Generic user\n1 -> Maria\n2 -> R01\nThe board will reset\n",                         
1142:..\src/command_processing.c ****         "0 -> MC33887 (Standard)\n1 -> VNH5019 (High power)\n2 -> ESC (Brushless)\nThe board will r
1143:..\src/command_processing.c ****         "0 -> SOFTHAND PRO\n1 -> GENERIC 2 MOTORS\n2 -> AIR CHAMBERS\n3 -> OTTOBOCK WRIST\n4 -> SOF
1144:..\src/command_processing.c ****         fsm_activation_mode_menu,                                                                  
1145:..\src/command_processing.c ****         "0 -> Close:CW, Open:CCW\n1 -> Close:CCW, Open:CW\n"                                       
1146:..\src/command_processing.c ****     };   
1147:..\src/command_processing.c ****     
1148:..\src/command_processing.c ****     uint8 NUM_MENU[32] = {3, 1, 2, 3, 3, 3, 3, 3, 3, 4, 5, 6, 3, 7, 8, 9, 3, 5, 3, 1, 2, 3, 3, 3, 9
 7323              		.loc 1 1148 0
 7324 1232 07F1D403 		add	r3, r7, #212
 7325 1236 9C4A     		ldr	r2, .L374+56
 7326 1238 1C46     		mov	r4, r3
 7327 123a 1546     		mov	r5, r2
 7328 123c 2868     		ldr	r0, [r5]	@ unaligned
 7329 123e 6968     		ldr	r1, [r5, #4]	@ unaligned
 7330 1240 AA68     		ldr	r2, [r5, #8]	@ unaligned
 7331 1242 EB68     		ldr	r3, [r5, #12]	@ unaligned
 7332 1244 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 7333 1246 2869     		ldr	r0, [r5, #16]	@ unaligned
 7334 1248 6969     		ldr	r1, [r5, #20]	@ unaligned
 7335 124a AA69     		ldr	r2, [r5, #24]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 178


 7336 124c EB69     		ldr	r3, [r5, #28]	@ unaligned
 7337 124e 0FC4     		stmia	r4!, {r0, r1, r2, r3}
1149:..\src/command_processing.c ****     uint8 CUSTOM_PARAM_GET_LIST[9]  = {2, 3, 8, 11, 23, 44, 45, 50, 53};
 7338              		.loc 1 1149 0
 7339 1250 07F1C803 		add	r3, r7, #200
 7340 1254 954A     		ldr	r2, .L374+60
 7341 1256 1068     		ldr	r0, [r2]	@ unaligned
 7342 1258 5168     		ldr	r1, [r2, #4]	@ unaligned
 7343 125a 03C3     		stmia	r3!, {r0, r1}
 7344 125c 127A     		ldrb	r2, [r2, #8]
 7345 125e 1A70     		strb	r2, [r3]
1150:..\src/command_processing.c ****     uint8 CUSTOM_PARAM_SET_LIST[18] = {2, 3, 5, 8, 11, 23, 24, 28, 31, 32, 38, 44, 45, 47, 50, 53, 
 7346              		.loc 1 1150 0
 7347 1260 07F1B403 		add	r3, r7, #180
 7348 1264 924A     		ldr	r2, .L374+64
 7349 1266 1C46     		mov	r4, r3
 7350 1268 1546     		mov	r5, r2
 7351 126a 2868     		ldr	r0, [r5]	@ unaligned
 7352 126c 6968     		ldr	r1, [r5, #4]	@ unaligned
 7353 126e AA68     		ldr	r2, [r5, #8]	@ unaligned
 7354 1270 EB68     		ldr	r3, [r5, #12]	@ unaligned
 7355 1272 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 7356 1274 2B8A     		ldrh	r3, [r5, #16]	@ unaligned
 7357 1276 2380     		strh	r3, [r4]	@ unaligned
1151:..\src/command_processing.c ****     uint8 USER_ID_PARAM = 35;
 7358              		.loc 1 1151 0
 7359 1278 2323     		movs	r3, #35
 7360 127a 87F87B35 		strb	r3, [r7, #1403]
1152:..\src/command_processing.c **** 
1153:..\src/command_processing.c **** // Note: If a custom parameter change is needed, add to CUSTOM_PARAM_LIST, then change it
1154:..\src/command_processing.c **** // in the dedicated function set_custom_param()    
1155:..\src/command_processing.c ****     
1156:..\src/command_processing.c **** //------------------ END OF PARAMETERS VARIABLES --------------------//        
1157:..\src/command_processing.c **** 
1158:..\src/command_processing.c **** // DO NOT MODIFY THE FUNCTION UNDER THIS LINE
1159:..\src/command_processing.c ****     
1160:..\src/command_processing.c ****     uint8 CUSTOM_PARAM_GET[NUM_OF_PARAMS];
1161:..\src/command_processing.c ****     j = 0;
 7361              		.loc 1 1161 0
 7362 127e 0023     		movs	r3, #0
 7363 1280 87F88635 		strb	r3, [r7, #1414]
1162:..\src/command_processing.c ****     for (i=0; i<NUM_OF_PARAMS; i++) {
 7364              		.loc 1 1162 0
 7365 1284 0023     		movs	r3, #0
 7366 1286 87F88735 		strb	r3, [r7, #1415]
 7367 128a 21E0     		b	.L309
 7368              	.L312:
1163:..\src/command_processing.c ****         if (CUSTOM_PARAM_GET_LIST[j] == i+1) {
 7369              		.loc 1 1163 0
 7370 128c 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 7371 1290 07F1C802 		add	r2, r7, #200
 7372 1294 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 7373 1296 1A46     		mov	r2, r3
 7374 1298 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 7375 129c 0133     		adds	r3, r3, #1
 7376 129e 9A42     		cmp	r2, r3
 7377 12a0 0BD1     		bne	.L310
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 179


1164:..\src/command_processing.c ****             CUSTOM_PARAM_GET[i] = TRUE;
 7378              		.loc 1 1164 0
 7379 12a2 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 7380 12a6 07F16002 		add	r2, r7, #96
 7381 12aa 0121     		movs	r1, #1
 7382 12ac D154     		strb	r1, [r2, r3]
1165:..\src/command_processing.c ****             j++;
 7383              		.loc 1 1165 0
 7384 12ae 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 7385 12b2 0133     		adds	r3, r3, #1
 7386 12b4 87F88635 		strb	r3, [r7, #1414]
 7387 12b8 05E0     		b	.L311
 7388              	.L310:
1166:..\src/command_processing.c ****         }
1167:..\src/command_processing.c ****         else {
1168:..\src/command_processing.c ****             CUSTOM_PARAM_GET[i] = FALSE;
 7389              		.loc 1 1168 0
 7390 12ba 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 7391 12be 07F16002 		add	r2, r7, #96
 7392 12c2 0021     		movs	r1, #0
 7393 12c4 D154     		strb	r1, [r2, r3]
 7394              	.L311:
1162:..\src/command_processing.c ****         if (CUSTOM_PARAM_GET_LIST[j] == i+1) {
 7395              		.loc 1 1162 0 discriminator 2
 7396 12c6 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 7397 12ca 0133     		adds	r3, r3, #1
 7398 12cc 87F88735 		strb	r3, [r7, #1415]
 7399              	.L309:
1162:..\src/command_processing.c ****         if (CUSTOM_PARAM_GET_LIST[j] == i+1) {
 7400              		.loc 1 1162 0 is_stmt 0 discriminator 1
 7401 12d0 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 7402 12d4 522B     		cmp	r3, #82
 7403 12d6 D9D9     		bls	.L312
1169:..\src/command_processing.c ****         }
1170:..\src/command_processing.c ****     }   // All parameters can be get with default settings, except the following ones
1171:..\src/command_processing.c ****     uint8 CUSTOM_PARAM_SET[NUM_OF_PARAMS];
1172:..\src/command_processing.c ****     j = 0;
 7404              		.loc 1 1172 0 is_stmt 1
 7405 12d8 0023     		movs	r3, #0
 7406 12da 87F88635 		strb	r3, [r7, #1414]
1173:..\src/command_processing.c ****     for (i=0; i<NUM_OF_PARAMS; i++) {
 7407              		.loc 1 1173 0
 7408 12de 0023     		movs	r3, #0
 7409 12e0 87F88735 		strb	r3, [r7, #1415]
 7410 12e4 21E0     		b	.L313
 7411              	.L316:
1174:..\src/command_processing.c ****         if (CUSTOM_PARAM_SET_LIST[j] == i+1) {
 7412              		.loc 1 1174 0
 7413 12e6 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 7414 12ea 07F1B402 		add	r2, r7, #180
 7415 12ee D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 7416 12f0 1A46     		mov	r2, r3
 7417 12f2 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 7418 12f6 0133     		adds	r3, r3, #1
 7419 12f8 9A42     		cmp	r2, r3
 7420 12fa 0BD1     		bne	.L314
1175:..\src/command_processing.c ****             CUSTOM_PARAM_SET[i] = TRUE;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 180


 7421              		.loc 1 1175 0
 7422 12fc 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 7423 1300 07F10C02 		add	r2, r7, #12
 7424 1304 0121     		movs	r1, #1
 7425 1306 D154     		strb	r1, [r2, r3]
1176:..\src/command_processing.c ****             j++;
 7426              		.loc 1 1176 0
 7427 1308 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 7428 130c 0133     		adds	r3, r3, #1
 7429 130e 87F88635 		strb	r3, [r7, #1414]
 7430 1312 05E0     		b	.L315
 7431              	.L314:
1177:..\src/command_processing.c ****         }
1178:..\src/command_processing.c ****         else {
1179:..\src/command_processing.c ****             CUSTOM_PARAM_SET[i] = FALSE;
 7432              		.loc 1 1179 0
 7433 1314 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 7434 1318 07F10C02 		add	r2, r7, #12
 7435 131c 0021     		movs	r1, #0
 7436 131e D154     		strb	r1, [r2, r3]
 7437              	.L315:
1173:..\src/command_processing.c ****         if (CUSTOM_PARAM_SET_LIST[j] == i+1) {
 7438              		.loc 1 1173 0 discriminator 2
 7439 1320 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 7440 1324 0133     		adds	r3, r3, #1
 7441 1326 87F88735 		strb	r3, [r7, #1415]
 7442              	.L313:
1173:..\src/command_processing.c ****         if (CUSTOM_PARAM_SET_LIST[j] == i+1) {
 7443              		.loc 1 1173 0 is_stmt 0 discriminator 1
 7444 132a 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 7445 132e 522B     		cmp	r3, #82
 7446 1330 D9D9     		bls	.L316
1180:..\src/command_processing.c ****         }
1181:..\src/command_processing.c ****     }   // All parameters can be setted with default settings, except the following ones
1182:..\src/command_processing.c ****         
1183:..\src/command_processing.c ****     if (!index) {
 7447              		.loc 1 1183 0 is_stmt 1
 7448 1332 BB1D     		adds	r3, r7, #6
 7449 1334 1B88     		ldrh	r3, [r3]
 7450 1336 002B     		cmp	r3, #0
 7451 1338 17D1     		bne	.L317
1184:..\src/command_processing.c ****         // Get parameters list with relative types
1185:..\src/command_processing.c ****         get_param_list(VAR_P, TYPES, NUM_ITEMS, NUM_STRUCT, NUM_MENU, PARAMS_STR, CUSTOM_PARAM_GET,
 7452              		.loc 1 1185 0
 7453 133a 07F54874 		add	r4, r7, #800
 7454 133e 07F55D72 		add	r2, r7, #884
 7455 1342 07F57271 		add	r1, r7, #968
 7456 1346 07F21C40 		addw	r0, r7, #1052
 7457 134a 07F1F403 		add	r3, r7, #244
 7458 134e 0393     		str	r3, [sp, #12]
 7459 1350 07F16003 		add	r3, r7, #96
 7460 1354 0293     		str	r3, [sp, #8]
 7461 1356 07F5EA73 		add	r3, r7, #468
 7462 135a 0193     		str	r3, [sp, #4]
 7463 135c 07F1D403 		add	r3, r7, #212
 7464 1360 0093     		str	r3, [sp]
 7465 1362 2346     		mov	r3, r4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 181


 7466 1364 FFF7FEFF 		bl	get_param_list
1186:..\src/command_processing.c ****     }
1187:..\src/command_processing.c ****     else {
1188:..\src/command_processing.c ****         // Set specific parameter        
1189:..\src/command_processing.c ****         PARAM_IDX = index -1;       // Get right vector param index
1190:..\src/command_processing.c ****         
1191:..\src/command_processing.c ****         // Find size of data
1192:..\src/command_processing.c ****         switch (TYPES[PARAM_IDX]) {
1193:..\src/command_processing.c ****             case TYPE_FLAG: case TYPE_INT8: case TYPE_UINT8: case TYPE_STRING:
1194:..\src/command_processing.c ****                 sod = 1; break;
1195:..\src/command_processing.c ****             case TYPE_INT16: case TYPE_UINT16:
1196:..\src/command_processing.c ****                 sod = 2; break;
1197:..\src/command_processing.c ****             case TYPE_INT32: case TYPE_UINT32: case TYPE_FLOAT:
1198:..\src/command_processing.c ****                 sod = 4; break;
1199:..\src/command_processing.c ****         }   
1200:..\src/command_processing.c ****             
1201:..\src/command_processing.c ****         if (!CUSTOM_PARAM_SET[PARAM_IDX]) {
1202:..\src/command_processing.c ****             // Use default specifications for param setting
1203:..\src/command_processing.c ****             switch(TYPES[PARAM_IDX]) {
1204:..\src/command_processing.c ****                 case TYPE_FLAG: case TYPE_UINT8:
1205:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1206:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
1207:..\src/command_processing.c ****                     }
1208:..\src/command_processing.c ****                     break;                
1209:..\src/command_processing.c ****                 case TYPE_STRING:
1210:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1211:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
1212:..\src/command_processing.c ****                     }
1213:..\src/command_processing.c ****                     *(VAR_P[PARAM_IDX] + i*sod) = '\0';
1214:..\src/command_processing.c ****                 break; 
1215:..\src/command_processing.c ****                 case TYPE_INT8:
1216:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1217:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = *((int8*) &g_rx.buffer[3 + i]);
1218:..\src/command_processing.c ****                     }
1219:..\src/command_processing.c ****                     break;                    
1220:..\src/command_processing.c ****                 case TYPE_INT16:
1221:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1222:..\src/command_processing.c ****                         aux_int16 = *((int16 *) &g_rx.buffer[3 + i*sod]);
1223:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1224:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int16))
1225:..\src/command_processing.c ****                         }
1226:..\src/command_processing.c ****                     }                   
1227:..\src/command_processing.c ****                     break;
1228:..\src/command_processing.c ****                 case TYPE_UINT16:
1229:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1230:..\src/command_processing.c ****                         aux_uint16 = *((uint16 *) &g_rx.buffer[3 + i*sod]);
1231:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1232:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint16)
1233:..\src/command_processing.c ****                         }
1234:..\src/command_processing.c ****                     }
1235:..\src/command_processing.c ****                     break;
1236:..\src/command_processing.c ****                 case TYPE_INT32:
1237:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1238:..\src/command_processing.c ****                         aux_int32 = *((int32 *) &g_rx.buffer[3 + i*sod]);
1239:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1240:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int32))
1241:..\src/command_processing.c ****                         }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 182


1242:..\src/command_processing.c ****                     }
1243:..\src/command_processing.c ****                     break;
1244:..\src/command_processing.c ****                 case TYPE_UINT32:
1245:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1246:..\src/command_processing.c ****                         aux_uint32 = *((uint32 *) &g_rx.buffer[3 + i*sod]);
1247:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1248:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint32)
1249:..\src/command_processing.c ****                         }
1250:..\src/command_processing.c ****                     }
1251:..\src/command_processing.c ****                     break;
1252:..\src/command_processing.c ****                 case TYPE_FLOAT:
1253:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1254:..\src/command_processing.c ****                         aux_float = *((float *) &g_rx.buffer[3 + i*sod]);
1255:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1256:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_float))
1257:..\src/command_processing.c ****                         }
1258:..\src/command_processing.c ****                     }
1259:..\src/command_processing.c ****                     break;
1260:..\src/command_processing.c ****                 default:
1261:..\src/command_processing.c ****                     break;
1262:..\src/command_processing.c ****             }
1263:..\src/command_processing.c ****         }
1264:..\src/command_processing.c ****         else {  
1265:..\src/command_processing.c ****             // Use custom specifications for param setting
1266:..\src/command_processing.c ****      
1267:..\src/command_processing.c ****         }
1268:..\src/command_processing.c ****         
1269:..\src/command_processing.c ****         // Store param also in user_emg structure
1270:..\src/command_processing.c ****         if (index != USER_ID_PARAM) {        // Not when changing user id
1271:..\src/command_processing.c ****             memcpy( &(MEM_P->user[MEM_P->dev.user_id].user_emg), &(MEM_P->emg), sizeof(MEM_P->emg) 
1272:..\src/command_processing.c ****         }
1273:..\src/command_processing.c ****         
1274:..\src/command_processing.c ****         // Perform chip reset if needed
1275:..\src/command_processing.c ****         if (TYPES[PARAM_IDX] == TYPE_FLAG){
1276:..\src/command_processing.c ****             uint8 idx = 0, menu_idx = -1;
1277:..\src/command_processing.c ****             do {
1278:..\src/command_processing.c ****                 if (TYPES[idx] == TYPE_FLAG) menu_idx++;    // Increment idx to find the right NUM_
1279:..\src/command_processing.c ****                 idx++;
1280:..\src/command_processing.c ****             } while (idx <= PARAM_IDX);
1281:..\src/command_processing.c ****             
1282:..\src/command_processing.c ****             if (NUM_MENU[menu_idx] == 5 || NUM_MENU[menu_idx] == 6 || NUM_MENU[menu_idx] == 8 || NU
1283:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
1284:..\src/command_processing.c ****             }   
1285:..\src/command_processing.c ****         }
1286:..\src/command_processing.c ****     }
1287:..\src/command_processing.c **** } 
 7467              		.loc 1 1287 0
 7468 1368 DAE2     		b	.L367
 7469              	.L317:
1189:..\src/command_processing.c ****         
 7470              		.loc 1 1189 0
 7471 136a BB1D     		adds	r3, r7, #6
 7472 136c 1B88     		ldrh	r3, [r3]	@ movhi
 7473 136e DBB2     		uxtb	r3, r3
 7474 1370 013B     		subs	r3, r3, #1
 7475 1372 87F87A35 		strb	r3, [r7, #1402]
1192:..\src/command_processing.c ****             case TYPE_FLAG: case TYPE_INT8: case TYPE_UINT8: case TYPE_STRING:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 183


 7476              		.loc 1 1192 0
 7477 1376 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 7478 137a 07F57272 		add	r2, r7, #968
 7479 137e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 7480 1380 092B     		cmp	r3, #9
 7481 1382 23D8     		bhi	.L319
 7482 1384 01A2     		adr	r2, .L321
 7483 1386 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 7484 138a 00BF     		.p2align 2
 7485              	.L321:
 7486 138c B5130000 		.word	.L320+1
 7487 1390 B5130000 		.word	.L320+1
 7488 1394 B5130000 		.word	.L320+1
 7489 1398 BD130000 		.word	.L322+1
 7490 139c BD130000 		.word	.L322+1
 7491 13a0 C5130000 		.word	.L323+1
 7492 13a4 C5130000 		.word	.L323+1
 7493 13a8 C5130000 		.word	.L323+1
 7494 13ac CD130000 		.word	.L319+1
 7495 13b0 B5130000 		.word	.L320+1
 7496              		.p2align 1
 7497              	.L320:
1194:..\src/command_processing.c ****             case TYPE_INT16: case TYPE_UINT16:
 7498              		.loc 1 1194 0
 7499 13b4 0123     		movs	r3, #1
 7500 13b6 87F88535 		strb	r3, [r7, #1413]
 7501 13ba 07E0     		b	.L319
 7502              	.L322:
1196:..\src/command_processing.c ****             case TYPE_INT32: case TYPE_UINT32: case TYPE_FLOAT:
 7503              		.loc 1 1196 0
 7504 13bc 0223     		movs	r3, #2
 7505 13be 87F88535 		strb	r3, [r7, #1413]
 7506 13c2 03E0     		b	.L319
 7507              	.L323:
1198:..\src/command_processing.c ****         }   
 7508              		.loc 1 1198 0
 7509 13c4 0423     		movs	r3, #4
 7510 13c6 87F88535 		strb	r3, [r7, #1413]
 7511 13ca 00BF     		nop
 7512              	.L319:
1201:..\src/command_processing.c ****             // Use default specifications for param setting
 7513              		.loc 1 1201 0
 7514 13cc 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 7515 13d0 07F10C02 		add	r2, r7, #12
 7516 13d4 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 7517 13d6 002B     		cmp	r3, #0
 7518 13d8 40F03F82 		bne	.L324
1203:..\src/command_processing.c ****                 case TYPE_FLAG: case TYPE_UINT8:
 7519              		.loc 1 1203 0
 7520 13dc 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 7521 13e0 07F57272 		add	r2, r7, #968
 7522 13e4 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 7523 13e6 092B     		cmp	r3, #9
 7524 13e8 00F23682 		bhi	.L366
 7525 13ec 01A2     		adr	r2, .L327
 7526 13ee 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 7527 13f2 00BF     		.p2align 2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 184


 7528              	.L327:
 7529 13f4 1D140000 		.word	.L326+1
 7530 13f8 1B150000 		.word	.L328+1
 7531 13fc 1D140000 		.word	.L326+1
 7532 1400 6D150000 		.word	.L329+1
 7533 1404 03160000 		.word	.L330+1
 7534 1408 97160000 		.word	.L331+1
 7535 140c 2B170000 		.word	.L332+1
 7536 1410 BF170000 		.word	.L333+1
 7537 1414 59180000 		.word	.L366+1
 7538 1418 69140000 		.word	.L334+1
 7539              		.p2align 1
 7540              	.L326:
1205:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 7541              		.loc 1 1205 0
 7542 141c 0023     		movs	r3, #0
 7543 141e 87F88735 		strb	r3, [r7, #1415]
 7544 1422 17E0     		b	.L335
 7545              	.L336:
1206:..\src/command_processing.c ****                     }
 7546              		.loc 1 1206 0 discriminator 3
 7547 1424 97F87A25 		ldrb	r2, [r7, #1402]	@ zero_extendqisi2
 7548 1428 07F21C43 		addw	r3, r7, #1052
 7549 142c 53F82230 		ldr	r3, [r3, r2, lsl #2]
 7550 1430 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 7551 1434 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 7552 1438 01FB02F2 		mul	r2, r1, r2
 7553 143c 1344     		add	r3, r3, r2
 7554 143e 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 7555 1442 0332     		adds	r2, r2, #3
 7556 1444 1B49     		ldr	r1, .L374+68
 7557 1446 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 7558 1448 1A70     		strb	r2, [r3]
1205:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 7559              		.loc 1 1205 0 discriminator 3
 7560 144a 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 7561 144e 0133     		adds	r3, r3, #1
 7562 1450 87F88735 		strb	r3, [r7, #1415]
 7563              	.L335:
1205:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 7564              		.loc 1 1205 0 is_stmt 0 discriminator 1
 7565 1454 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 7566 1458 07F55D72 		add	r2, r7, #884
 7567 145c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 7568 145e 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 7569 1462 9A42     		cmp	r2, r3
 7570 1464 DED3     		bcc	.L336
1208:..\src/command_processing.c ****                 case TYPE_STRING:
 7571              		.loc 1 1208 0 is_stmt 1
 7572 1466 F8E1     		b	.L324
 7573              	.L334:
1210:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 7574              		.loc 1 1210 0
 7575 1468 0023     		movs	r3, #0
 7576 146a 87F88735 		strb	r3, [r7, #1415]
 7577 146e 3BE0     		b	.L338
 7578              	.L375:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 185


 7579              		.align	2
 7580              	.L374:
 7581 1470 340F0000 		.word	.LC129
 7582 1474 88020000 		.word	.LC130
 7583 1478 FC020000 		.word	.LC131
 7584 147c 34030000 		.word	.LC132
 7585 1480 6C030000 		.word	.LC133
 7586 1484 F8030000 		.word	.LC134
 7587 1488 38040000 		.word	.LC135
 7588 148c 64040000 		.word	.LC136
 7589 1490 7C040000 		.word	.LC137
 7590 1494 A4040000 		.word	.LC138
 7591 1498 00050000 		.word	.LC139
 7592 149c 3C050000 		.word	.LC140
 7593 14a0 9C050000 		.word	.LC141
 7594 14a4 18060000 		.word	.LC142
 7595 14a8 80100000 		.word	.LC85
 7596 14ac A0100000 		.word	.LC86
 7597 14b0 AC100000 		.word	.LC87
 7598 14b4 00000000 		.word	g_rx
 7599              	.L339:
1211:..\src/command_processing.c ****                     }
 7600              		.loc 1 1211 0 discriminator 3
 7601 14b8 97F87A25 		ldrb	r2, [r7, #1402]	@ zero_extendqisi2
 7602 14bc 07F21C43 		addw	r3, r7, #1052
 7603 14c0 53F82230 		ldr	r3, [r3, r2, lsl #2]
 7604 14c4 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 7605 14c8 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 7606 14cc 01FB02F2 		mul	r2, r1, r2
 7607 14d0 1344     		add	r3, r3, r2
 7608 14d2 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 7609 14d6 0332     		adds	r2, r2, #3
 7610 14d8 DE49     		ldr	r1, .L376
 7611 14da 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 7612 14dc 1A70     		strb	r2, [r3]
1210:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 7613              		.loc 1 1210 0 discriminator 3
 7614 14de 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 7615 14e2 0133     		adds	r3, r3, #1
 7616 14e4 87F88735 		strb	r3, [r7, #1415]
 7617              	.L338:
1210:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 7618              		.loc 1 1210 0 is_stmt 0 discriminator 1
 7619 14e8 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 7620 14ec 07F55D72 		add	r2, r7, #884
 7621 14f0 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 7622 14f2 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 7623 14f6 9A42     		cmp	r2, r3
 7624 14f8 DED3     		bcc	.L339
1213:..\src/command_processing.c ****                 break; 
 7625              		.loc 1 1213 0 is_stmt 1
 7626 14fa 97F87A25 		ldrb	r2, [r7, #1402]	@ zero_extendqisi2
 7627 14fe 07F21C43 		addw	r3, r7, #1052
 7628 1502 53F82230 		ldr	r3, [r3, r2, lsl #2]
 7629 1506 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 7630 150a 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 7631 150e 01FB02F2 		mul	r2, r1, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 186


 7632 1512 1344     		add	r3, r3, r2
 7633 1514 0022     		movs	r2, #0
 7634 1516 1A70     		strb	r2, [r3]
1214:..\src/command_processing.c ****                 case TYPE_INT8:
 7635              		.loc 1 1214 0
 7636 1518 9FE1     		b	.L324
 7637              	.L328:
1216:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = *((int8*) &g_rx.buffer[3 + i]);
 7638              		.loc 1 1216 0
 7639 151a 0023     		movs	r3, #0
 7640 151c 87F88735 		strb	r3, [r7, #1415]
 7641 1520 1AE0     		b	.L340
 7642              	.L341:
1217:..\src/command_processing.c ****                     }
 7643              		.loc 1 1217 0 discriminator 3
 7644 1522 97F87A25 		ldrb	r2, [r7, #1402]	@ zero_extendqisi2
 7645 1526 07F21C43 		addw	r3, r7, #1052
 7646 152a 53F82230 		ldr	r3, [r3, r2, lsl #2]
 7647 152e 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 7648 1532 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 7649 1536 01FB02F2 		mul	r2, r1, r2
 7650 153a 1344     		add	r3, r3, r2
 7651 153c 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 7652 1540 0332     		adds	r2, r2, #3
 7653 1542 C449     		ldr	r1, .L376
 7654 1544 0A44     		add	r2, r2, r1
 7655 1546 92F90020 		ldrsb	r2, [r2]
 7656 154a D2B2     		uxtb	r2, r2
 7657 154c 1A70     		strb	r2, [r3]
1216:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = *((int8*) &g_rx.buffer[3 + i]);
 7658              		.loc 1 1216 0 discriminator 3
 7659 154e 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 7660 1552 0133     		adds	r3, r3, #1
 7661 1554 87F88735 		strb	r3, [r7, #1415]
 7662              	.L340:
1216:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = *((int8*) &g_rx.buffer[3 + i]);
 7663              		.loc 1 1216 0 is_stmt 0 discriminator 1
 7664 1558 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 7665 155c 07F55D72 		add	r2, r7, #884
 7666 1560 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 7667 1562 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 7668 1566 9A42     		cmp	r2, r3
 7669 1568 DBD3     		bcc	.L341
1219:..\src/command_processing.c ****                 case TYPE_INT16:
 7670              		.loc 1 1219 0 is_stmt 1
 7671 156a 76E1     		b	.L324
 7672              	.L329:
1221:..\src/command_processing.c ****                         aux_int16 = *((int16 *) &g_rx.buffer[3 + i*sod]);
 7673              		.loc 1 1221 0
 7674 156c 0023     		movs	r3, #0
 7675 156e 87F88735 		strb	r3, [r7, #1415]
 7676 1572 3CE0     		b	.L342
 7677              	.L345:
1222:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 7678              		.loc 1 1222 0
 7679 1574 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 7680 1578 97F88525 		ldrb	r2, [r7, #1413]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 187


 7681 157c 02FB03F3 		mul	r3, r2, r3
 7682 1580 0333     		adds	r3, r3, #3
 7683 1582 B44A     		ldr	r2, .L376
 7684 1584 1344     		add	r3, r3, r2
 7685 1586 B3F90030 		ldrsh	r3, [r3]
 7686 158a A7F87835 		strh	r3, [r7, #1400]	@ movhi
1223:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int16))
 7687              		.loc 1 1223 0
 7688 158e 0023     		movs	r3, #0
 7689 1590 87F88635 		strb	r3, [r7, #1414]
 7690 1594 20E0     		b	.L343
 7691              	.L344:
1224:..\src/command_processing.c ****                         }
 7692              		.loc 1 1224 0 discriminator 3
 7693 1596 97F87A25 		ldrb	r2, [r7, #1402]	@ zero_extendqisi2
 7694 159a 07F21C43 		addw	r3, r7, #1052
 7695 159e 53F82220 		ldr	r2, [r3, r2, lsl #2]
 7696 15a2 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 7697 15a6 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 7698 15aa 01FB03F3 		mul	r3, r1, r3
 7699 15ae 1846     		mov	r0, r3
 7700 15b0 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 7701 15b4 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 7702 15b8 CB1A     		subs	r3, r1, r3
 7703 15ba 0344     		add	r3, r3, r0
 7704 15bc 013B     		subs	r3, r3, #1
 7705 15be 1344     		add	r3, r3, r2
 7706 15c0 97F88625 		ldrb	r2, [r7, #1414]	@ zero_extendqisi2
 7707 15c4 07F5AF61 		add	r1, r7, #1400
 7708 15c8 0A44     		add	r2, r2, r1
 7709 15ca 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 7710 15cc 1A70     		strb	r2, [r3]
1223:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int16))
 7711              		.loc 1 1223 0 discriminator 3
 7712 15ce 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 7713 15d2 0133     		adds	r3, r3, #1
 7714 15d4 87F88635 		strb	r3, [r7, #1414]
 7715              	.L343:
1223:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int16))
 7716              		.loc 1 1223 0 is_stmt 0 discriminator 1
 7717 15d8 97F88625 		ldrb	r2, [r7, #1414]	@ zero_extendqisi2
 7718 15dc 97F88535 		ldrb	r3, [r7, #1413]	@ zero_extendqisi2
 7719 15e0 9A42     		cmp	r2, r3
 7720 15e2 D8D3     		bcc	.L344
1221:..\src/command_processing.c ****                         aux_int16 = *((int16 *) &g_rx.buffer[3 + i*sod]);
 7721              		.loc 1 1221 0 is_stmt 1 discriminator 2
 7722 15e4 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 7723 15e8 0133     		adds	r3, r3, #1
 7724 15ea 87F88735 		strb	r3, [r7, #1415]
 7725              	.L342:
1221:..\src/command_processing.c ****                         aux_int16 = *((int16 *) &g_rx.buffer[3 + i*sod]);
 7726              		.loc 1 1221 0 is_stmt 0 discriminator 1
 7727 15ee 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 7728 15f2 07F55D72 		add	r2, r7, #884
 7729 15f6 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 7730 15f8 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 7731 15fc 9A42     		cmp	r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 188


 7732 15fe B9D3     		bcc	.L345
1227:..\src/command_processing.c ****                 case TYPE_UINT16:
 7733              		.loc 1 1227 0 is_stmt 1
 7734 1600 2BE1     		b	.L324
 7735              	.L330:
1229:..\src/command_processing.c ****                         aux_uint16 = *((uint16 *) &g_rx.buffer[3 + i*sod]);
 7736              		.loc 1 1229 0
 7737 1602 0023     		movs	r3, #0
 7738 1604 87F88735 		strb	r3, [r7, #1415]
 7739 1608 3BE0     		b	.L346
 7740              	.L349:
1230:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 7741              		.loc 1 1230 0
 7742 160a 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 7743 160e 97F88525 		ldrb	r2, [r7, #1413]	@ zero_extendqisi2
 7744 1612 02FB03F3 		mul	r3, r2, r3
 7745 1616 0333     		adds	r3, r3, #3
 7746 1618 8E4A     		ldr	r2, .L376
 7747 161a 1344     		add	r3, r3, r2
 7748 161c 1B88     		ldrh	r3, [r3]
 7749 161e A7F87635 		strh	r3, [r7, #1398]	@ movhi
1231:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint16)
 7750              		.loc 1 1231 0
 7751 1622 0023     		movs	r3, #0
 7752 1624 87F88635 		strb	r3, [r7, #1414]
 7753 1628 20E0     		b	.L347
 7754              	.L348:
1232:..\src/command_processing.c ****                         }
 7755              		.loc 1 1232 0 discriminator 3
 7756 162a 97F87A25 		ldrb	r2, [r7, #1402]	@ zero_extendqisi2
 7757 162e 07F21C43 		addw	r3, r7, #1052
 7758 1632 53F82220 		ldr	r2, [r3, r2, lsl #2]
 7759 1636 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 7760 163a 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 7761 163e 01FB03F3 		mul	r3, r1, r3
 7762 1642 1846     		mov	r0, r3
 7763 1644 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 7764 1648 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 7765 164c CB1A     		subs	r3, r1, r3
 7766 164e 0344     		add	r3, r3, r0
 7767 1650 013B     		subs	r3, r3, #1
 7768 1652 1344     		add	r3, r3, r2
 7769 1654 97F88625 		ldrb	r2, [r7, #1414]	@ zero_extendqisi2
 7770 1658 07F27651 		addw	r1, r7, #1398
 7771 165c 0A44     		add	r2, r2, r1
 7772 165e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 7773 1660 1A70     		strb	r2, [r3]
1231:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint16)
 7774              		.loc 1 1231 0 discriminator 3
 7775 1662 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 7776 1666 0133     		adds	r3, r3, #1
 7777 1668 87F88635 		strb	r3, [r7, #1414]
 7778              	.L347:
1231:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint16)
 7779              		.loc 1 1231 0 is_stmt 0 discriminator 1
 7780 166c 97F88625 		ldrb	r2, [r7, #1414]	@ zero_extendqisi2
 7781 1670 97F88535 		ldrb	r3, [r7, #1413]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 189


 7782 1674 9A42     		cmp	r2, r3
 7783 1676 D8D3     		bcc	.L348
1229:..\src/command_processing.c ****                         aux_uint16 = *((uint16 *) &g_rx.buffer[3 + i*sod]);
 7784              		.loc 1 1229 0 is_stmt 1 discriminator 2
 7785 1678 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 7786 167c 0133     		adds	r3, r3, #1
 7787 167e 87F88735 		strb	r3, [r7, #1415]
 7788              	.L346:
1229:..\src/command_processing.c ****                         aux_uint16 = *((uint16 *) &g_rx.buffer[3 + i*sod]);
 7789              		.loc 1 1229 0 is_stmt 0 discriminator 1
 7790 1682 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 7791 1686 07F55D72 		add	r2, r7, #884
 7792 168a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 7793 168c 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 7794 1690 9A42     		cmp	r2, r3
 7795 1692 BAD3     		bcc	.L349
1235:..\src/command_processing.c ****                 case TYPE_INT32:
 7796              		.loc 1 1235 0 is_stmt 1
 7797 1694 E1E0     		b	.L324
 7798              	.L331:
1237:..\src/command_processing.c ****                         aux_int32 = *((int32 *) &g_rx.buffer[3 + i*sod]);
 7799              		.loc 1 1237 0
 7800 1696 0023     		movs	r3, #0
 7801 1698 87F88735 		strb	r3, [r7, #1415]
 7802 169c 3BE0     		b	.L350
 7803              	.L353:
1238:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 7804              		.loc 1 1238 0
 7805 169e 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 7806 16a2 97F88525 		ldrb	r2, [r7, #1413]	@ zero_extendqisi2
 7807 16a6 02FB03F3 		mul	r3, r2, r3
 7808 16aa 0333     		adds	r3, r3, #3
 7809 16ac 694A     		ldr	r2, .L376
 7810 16ae 1344     		add	r3, r3, r2
 7811 16b0 1B68     		ldr	r3, [r3]
 7812 16b2 C7F87035 		str	r3, [r7, #1392]
1239:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int32))
 7813              		.loc 1 1239 0
 7814 16b6 0023     		movs	r3, #0
 7815 16b8 87F88635 		strb	r3, [r7, #1414]
 7816 16bc 20E0     		b	.L351
 7817              	.L352:
1240:..\src/command_processing.c ****                         }
 7818              		.loc 1 1240 0 discriminator 3
 7819 16be 97F87A25 		ldrb	r2, [r7, #1402]	@ zero_extendqisi2
 7820 16c2 07F21C43 		addw	r3, r7, #1052
 7821 16c6 53F82220 		ldr	r2, [r3, r2, lsl #2]
 7822 16ca 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 7823 16ce 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 7824 16d2 01FB03F3 		mul	r3, r1, r3
 7825 16d6 1846     		mov	r0, r3
 7826 16d8 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 7827 16dc 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 7828 16e0 CB1A     		subs	r3, r1, r3
 7829 16e2 0344     		add	r3, r3, r0
 7830 16e4 013B     		subs	r3, r3, #1
 7831 16e6 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 190


 7832 16e8 97F88625 		ldrb	r2, [r7, #1414]	@ zero_extendqisi2
 7833 16ec 07F5AE61 		add	r1, r7, #1392
 7834 16f0 0A44     		add	r2, r2, r1
 7835 16f2 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 7836 16f4 1A70     		strb	r2, [r3]
1239:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int32))
 7837              		.loc 1 1239 0 discriminator 3
 7838 16f6 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 7839 16fa 0133     		adds	r3, r3, #1
 7840 16fc 87F88635 		strb	r3, [r7, #1414]
 7841              	.L351:
1239:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int32))
 7842              		.loc 1 1239 0 is_stmt 0 discriminator 1
 7843 1700 97F88625 		ldrb	r2, [r7, #1414]	@ zero_extendqisi2
 7844 1704 97F88535 		ldrb	r3, [r7, #1413]	@ zero_extendqisi2
 7845 1708 9A42     		cmp	r2, r3
 7846 170a D8D3     		bcc	.L352
1237:..\src/command_processing.c ****                         aux_int32 = *((int32 *) &g_rx.buffer[3 + i*sod]);
 7847              		.loc 1 1237 0 is_stmt 1 discriminator 2
 7848 170c 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 7849 1710 0133     		adds	r3, r3, #1
 7850 1712 87F88735 		strb	r3, [r7, #1415]
 7851              	.L350:
1237:..\src/command_processing.c ****                         aux_int32 = *((int32 *) &g_rx.buffer[3 + i*sod]);
 7852              		.loc 1 1237 0 is_stmt 0 discriminator 1
 7853 1716 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 7854 171a 07F55D72 		add	r2, r7, #884
 7855 171e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 7856 1720 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 7857 1724 9A42     		cmp	r2, r3
 7858 1726 BAD3     		bcc	.L353
1243:..\src/command_processing.c ****                 case TYPE_UINT32:
 7859              		.loc 1 1243 0 is_stmt 1
 7860 1728 97E0     		b	.L324
 7861              	.L332:
1245:..\src/command_processing.c ****                         aux_uint32 = *((uint32 *) &g_rx.buffer[3 + i*sod]);
 7862              		.loc 1 1245 0
 7863 172a 0023     		movs	r3, #0
 7864 172c 87F88735 		strb	r3, [r7, #1415]
 7865 1730 3BE0     		b	.L354
 7866              	.L357:
1246:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 7867              		.loc 1 1246 0
 7868 1732 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 7869 1736 97F88525 		ldrb	r2, [r7, #1413]	@ zero_extendqisi2
 7870 173a 02FB03F3 		mul	r3, r2, r3
 7871 173e 0333     		adds	r3, r3, #3
 7872 1740 444A     		ldr	r2, .L376
 7873 1742 1344     		add	r3, r3, r2
 7874 1744 1B68     		ldr	r3, [r3]
 7875 1746 C7F86C35 		str	r3, [r7, #1388]
1247:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint32)
 7876              		.loc 1 1247 0
 7877 174a 0023     		movs	r3, #0
 7878 174c 87F88635 		strb	r3, [r7, #1414]
 7879 1750 20E0     		b	.L355
 7880              	.L356:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 191


1248:..\src/command_processing.c ****                         }
 7881              		.loc 1 1248 0 discriminator 3
 7882 1752 97F87A25 		ldrb	r2, [r7, #1402]	@ zero_extendqisi2
 7883 1756 07F21C43 		addw	r3, r7, #1052
 7884 175a 53F82220 		ldr	r2, [r3, r2, lsl #2]
 7885 175e 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 7886 1762 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 7887 1766 01FB03F3 		mul	r3, r1, r3
 7888 176a 1846     		mov	r0, r3
 7889 176c 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 7890 1770 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 7891 1774 CB1A     		subs	r3, r1, r3
 7892 1776 0344     		add	r3, r3, r0
 7893 1778 013B     		subs	r3, r3, #1
 7894 177a 1344     		add	r3, r3, r2
 7895 177c 97F88625 		ldrb	r2, [r7, #1414]	@ zero_extendqisi2
 7896 1780 07F26C51 		addw	r1, r7, #1388
 7897 1784 0A44     		add	r2, r2, r1
 7898 1786 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 7899 1788 1A70     		strb	r2, [r3]
1247:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint32)
 7900              		.loc 1 1247 0 discriminator 3
 7901 178a 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 7902 178e 0133     		adds	r3, r3, #1
 7903 1790 87F88635 		strb	r3, [r7, #1414]
 7904              	.L355:
1247:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint32)
 7905              		.loc 1 1247 0 is_stmt 0 discriminator 1
 7906 1794 97F88625 		ldrb	r2, [r7, #1414]	@ zero_extendqisi2
 7907 1798 97F88535 		ldrb	r3, [r7, #1413]	@ zero_extendqisi2
 7908 179c 9A42     		cmp	r2, r3
 7909 179e D8D3     		bcc	.L356
1245:..\src/command_processing.c ****                         aux_uint32 = *((uint32 *) &g_rx.buffer[3 + i*sod]);
 7910              		.loc 1 1245 0 is_stmt 1 discriminator 2
 7911 17a0 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 7912 17a4 0133     		adds	r3, r3, #1
 7913 17a6 87F88735 		strb	r3, [r7, #1415]
 7914              	.L354:
1245:..\src/command_processing.c ****                         aux_uint32 = *((uint32 *) &g_rx.buffer[3 + i*sod]);
 7915              		.loc 1 1245 0 is_stmt 0 discriminator 1
 7916 17aa 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 7917 17ae 07F55D72 		add	r2, r7, #884
 7918 17b2 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 7919 17b4 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 7920 17b8 9A42     		cmp	r2, r3
 7921 17ba BAD3     		bcc	.L357
1251:..\src/command_processing.c ****                 case TYPE_FLOAT:
 7922              		.loc 1 1251 0 is_stmt 1
 7923 17bc 4DE0     		b	.L324
 7924              	.L333:
1253:..\src/command_processing.c ****                         aux_float = *((float *) &g_rx.buffer[3 + i*sod]);
 7925              		.loc 1 1253 0
 7926 17be 0023     		movs	r3, #0
 7927 17c0 87F88735 		strb	r3, [r7, #1415]
 7928 17c4 3BE0     		b	.L358
 7929              	.L361:
1254:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 192


 7930              		.loc 1 1254 0
 7931 17c6 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 7932 17ca 97F88525 		ldrb	r2, [r7, #1413]	@ zero_extendqisi2
 7933 17ce 02FB03F3 		mul	r3, r2, r3
 7934 17d2 0333     		adds	r3, r3, #3
 7935 17d4 1F4A     		ldr	r2, .L376
 7936 17d6 1344     		add	r3, r3, r2
 7937 17d8 1B68     		ldr	r3, [r3]	@ float
 7938 17da C7F86835 		str	r3, [r7, #1384]	@ float
1255:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_float))
 7939              		.loc 1 1255 0
 7940 17de 0023     		movs	r3, #0
 7941 17e0 87F88635 		strb	r3, [r7, #1414]
 7942 17e4 20E0     		b	.L359
 7943              	.L360:
1256:..\src/command_processing.c ****                         }
 7944              		.loc 1 1256 0 discriminator 3
 7945 17e6 97F87A25 		ldrb	r2, [r7, #1402]	@ zero_extendqisi2
 7946 17ea 07F21C43 		addw	r3, r7, #1052
 7947 17ee 53F82220 		ldr	r2, [r3, r2, lsl #2]
 7948 17f2 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 7949 17f6 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 7950 17fa 01FB03F3 		mul	r3, r1, r3
 7951 17fe 1846     		mov	r0, r3
 7952 1800 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 7953 1804 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 7954 1808 CB1A     		subs	r3, r1, r3
 7955 180a 0344     		add	r3, r3, r0
 7956 180c 013B     		subs	r3, r3, #1
 7957 180e 1344     		add	r3, r3, r2
 7958 1810 97F88625 		ldrb	r2, [r7, #1414]	@ zero_extendqisi2
 7959 1814 07F5AD61 		add	r1, r7, #1384
 7960 1818 0A44     		add	r2, r2, r1
 7961 181a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 7962 181c 1A70     		strb	r2, [r3]
1255:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_float))
 7963              		.loc 1 1255 0 discriminator 3
 7964 181e 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 7965 1822 0133     		adds	r3, r3, #1
 7966 1824 87F88635 		strb	r3, [r7, #1414]
 7967              	.L359:
1255:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_float))
 7968              		.loc 1 1255 0 is_stmt 0 discriminator 1
 7969 1828 97F88625 		ldrb	r2, [r7, #1414]	@ zero_extendqisi2
 7970 182c 97F88535 		ldrb	r3, [r7, #1413]	@ zero_extendqisi2
 7971 1830 9A42     		cmp	r2, r3
 7972 1832 D8D3     		bcc	.L360
1253:..\src/command_processing.c ****                         aux_float = *((float *) &g_rx.buffer[3 + i*sod]);
 7973              		.loc 1 1253 0 is_stmt 1 discriminator 2
 7974 1834 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 7975 1838 0133     		adds	r3, r3, #1
 7976 183a 87F88735 		strb	r3, [r7, #1415]
 7977              	.L358:
1253:..\src/command_processing.c ****                         aux_float = *((float *) &g_rx.buffer[3 + i*sod]);
 7978              		.loc 1 1253 0 is_stmt 0 discriminator 1
 7979 183e 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 7980 1842 07F55D72 		add	r2, r7, #884
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 193


 7981 1846 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 7982 1848 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 7983 184c 9A42     		cmp	r2, r3
 7984 184e BAD3     		bcc	.L361
1259:..\src/command_processing.c ****                 default:
 7985              		.loc 1 1259 0 is_stmt 1
 7986 1850 03E0     		b	.L324
 7987              	.L377:
 7988 1852 00BF     		.align	2
 7989              	.L376:
 7990 1854 00000000 		.word	g_rx
 7991              	.L366:
1261:..\src/command_processing.c ****             }
 7992              		.loc 1 1261 0
 7993 1858 00BF     		nop
 7994              	.L324:
1270:..\src/command_processing.c ****             memcpy( &(MEM_P->user[MEM_P->dev.user_id].user_emg), &(MEM_P->emg), sizeof(MEM_P->emg) 
 7995              		.loc 1 1270 0
 7996 185a 97F87B35 		ldrb	r3, [r7, #1403]	@ zero_extendqisi2
 7997 185e 9BB2     		uxth	r3, r3
 7998 1860 BA1D     		adds	r2, r7, #6
 7999 1862 1288     		ldrh	r2, [r2]
 8000 1864 9A42     		cmp	r2, r3
 8001 1866 11D0     		beq	.L362
1271:..\src/command_processing.c ****         }
 8002              		.loc 1 1271 0
 8003 1868 D7F88035 		ldr	r3, [r7, #1408]
 8004 186c 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 8005 1870 5B01     		lsls	r3, r3, #5
 8006 1872 03F51273 		add	r3, r3, #584
 8007 1876 D7F88025 		ldr	r2, [r7, #1408]
 8008 187a D018     		adds	r0, r2, r3
 8009 187c D7F88035 		ldr	r3, [r7, #1408]
 8010 1880 03F5F873 		add	r3, r3, #496
 8011 1884 1022     		movs	r2, #16
 8012 1886 1946     		mov	r1, r3
 8013 1888 FFF7FEFF 		bl	memcpy
 8014              	.L362:
1275:..\src/command_processing.c ****             uint8 idx = 0, menu_idx = -1;
 8015              		.loc 1 1275 0
 8016 188c 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 8017 1890 07F57272 		add	r2, r7, #968
 8018 1894 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8019 1896 002B     		cmp	r3, #0
 8020 1898 42D1     		bne	.L367
 8021              	.LBB22:
1276:..\src/command_processing.c ****             do {
 8022              		.loc 1 1276 0
 8023 189a 0023     		movs	r3, #0
 8024 189c 87F87F35 		strb	r3, [r7, #1407]
 8025 18a0 FF23     		movs	r3, #255
 8026 18a2 87F87E35 		strb	r3, [r7, #1406]
 8027              	.L364:
1278:..\src/command_processing.c ****                 idx++;
 8028              		.loc 1 1278 0
 8029 18a6 97F87F35 		ldrb	r3, [r7, #1407]	@ zero_extendqisi2
 8030 18aa 07F57272 		add	r2, r7, #968
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 194


 8031 18ae D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8032 18b0 002B     		cmp	r3, #0
 8033 18b2 04D1     		bne	.L363
1278:..\src/command_processing.c ****                 idx++;
 8034              		.loc 1 1278 0 is_stmt 0 discriminator 1
 8035 18b4 97F87E35 		ldrb	r3, [r7, #1406]	@ zero_extendqisi2
 8036 18b8 0133     		adds	r3, r3, #1
 8037 18ba 87F87E35 		strb	r3, [r7, #1406]
 8038              	.L363:
1279:..\src/command_processing.c ****             } while (idx <= PARAM_IDX);
 8039              		.loc 1 1279 0 is_stmt 1
 8040 18be 97F87F35 		ldrb	r3, [r7, #1407]	@ zero_extendqisi2
 8041 18c2 0133     		adds	r3, r3, #1
 8042 18c4 87F87F35 		strb	r3, [r7, #1407]
1280:..\src/command_processing.c ****             
 8043              		.loc 1 1280 0
 8044 18c8 97F87F25 		ldrb	r2, [r7, #1407]	@ zero_extendqisi2
 8045 18cc 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 8046 18d0 9A42     		cmp	r2, r3
 8047 18d2 E8D9     		bls	.L364
1282:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 8048              		.loc 1 1282 0
 8049 18d4 97F87E35 		ldrb	r3, [r7, #1406]	@ zero_extendqisi2
 8050 18d8 07F1D402 		add	r2, r7, #212
 8051 18dc D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8052 18de 052B     		cmp	r3, #5
 8053 18e0 1BD0     		beq	.L365
1282:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 8054              		.loc 1 1282 0 is_stmt 0 discriminator 1
 8055 18e2 97F87E35 		ldrb	r3, [r7, #1406]	@ zero_extendqisi2
 8056 18e6 07F1D402 		add	r2, r7, #212
 8057 18ea D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8058 18ec 062B     		cmp	r3, #6
 8059 18ee 14D0     		beq	.L365
1282:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 8060              		.loc 1 1282 0 discriminator 2
 8061 18f0 97F87E35 		ldrb	r3, [r7, #1406]	@ zero_extendqisi2
 8062 18f4 07F1D402 		add	r2, r7, #212
 8063 18f8 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8064 18fa 082B     		cmp	r3, #8
 8065 18fc 0DD0     		beq	.L365
1282:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 8066              		.loc 1 1282 0 discriminator 3
 8067 18fe 97F87E35 		ldrb	r3, [r7, #1406]	@ zero_extendqisi2
 8068 1902 07F1D402 		add	r2, r7, #212
 8069 1906 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8070 1908 092B     		cmp	r3, #9
 8071 190a 06D0     		beq	.L365
1282:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 8072              		.loc 1 1282 0 discriminator 4
 8073 190c 97F87E35 		ldrb	r3, [r7, #1406]	@ zero_extendqisi2
 8074 1910 07F1D402 		add	r2, r7, #212
 8075 1914 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8076 1916 0A2B     		cmp	r3, #10
 8077 1918 02D1     		bne	.L367
 8078              	.L365:
1283:..\src/command_processing.c ****             }   
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 195


 8079              		.loc 1 1283 0 is_stmt 1
 8080 191a 044B     		ldr	r3, .L378
 8081 191c 0122     		movs	r2, #1
 8082 191e 1A70     		strb	r2, [r3]
 8083              	.L367:
 8084              	.LBE22:
 8085              		.loc 1 1287 0
 8086 1920 00BF     		nop
 8087 1922 07F5B167 		add	r7, r7, #1416
 8088              		.cfi_def_cfa_offset 16
 8089 1926 BD46     		mov	sp, r7
 8090              		.cfi_def_cfa_register 13
 8091              		@ sp needed
 8092 1928 B0BD     		pop	{r4, r5, r7, pc}
 8093              	.L379:
 8094 192a 00BF     		.align	2
 8095              	.L378:
 8096 192c 00000000 		.word	reset_PSoC_flag
 8097              		.cfi_endproc
 8098              	.LFE68:
 8099              		.size	manage_param_list, .-manage_param_list
 8100              		.section	.rodata
 8101 10be 0000     		.align	2
 8102              	.LC145:
 8103 10c0 506F7274 		.ascii	"Port %u ID:\000"
 8103      20257520 
 8103      49443A00 
 8104              		.align	2
 8105              	.LC146:
 8106 10cc 2575202D 		.ascii	"%u - Device ID:\000"
 8106      20446576 
 8106      69636520 
 8106      49443A00 
 8107              		.align	2
 8108              	.LC147:
 8109 10dc 2575202D 		.ascii	"%u - IMU %d configuration:\000"
 8109      20494D55 
 8109      20256420 
 8109      636F6E66 
 8109      69677572 
 8110 10f7 00       		.align	2
 8111              	.LC148:
 8112 10f8 2575202D 		.ascii	"%u - SPI read delay:\000"
 8112      20535049 
 8112      20726561 
 8112      64206465 
 8112      6C61793A 
 8113 110d 000000   		.align	2
 8114              	.LC149:
 8115 1110 204E6F6E 		.ascii	" None\000"
 8115      6500
 8116 1116 0000     		.align	2
 8117              	.LC150:
 8118 1118 204C6F77 		.ascii	" Low\000"
 8118      00
 8119 111d 000000   		.align	2
 8120              	.LC151:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 196


 8121 1120 20486967 		.ascii	" High\000"
 8121      6800
 8122 1126 0000     		.align	2
 8123              	.LC143:
 8124 1128 4E756D62 		.ascii	"Number of connected IMUs:\000"
 8124      6572206F 
 8124      6620636F 
 8124      6E6E6563 
 8124      74656420 
 8125 1142 0000     		.align	2
 8126              	.LC144:
 8127 1144 4D616720 		.ascii	"Mag cal parameters:\000"
 8127      63616C20 
 8127      70617261 
 8127      6D657465 
 8127      72733A00 
 8128              		.section	.text.get_IMU_param_list,"ax",%progbits
 8129              		.align	2
 8130              		.global	get_IMU_param_list
 8131              		.thumb
 8132              		.thumb_func
 8133              		.type	get_IMU_param_list, %function
 8134              	get_IMU_param_list:
 8135              	.LFB69:
1288:..\src/command_processing.c **** 
1289:..\src/command_processing.c **** //==============================================================================
1290:..\src/command_processing.c **** 
1291:..\src/command_processing.c **** 
1292:..\src/command_processing.c **** //==============================================================================
1293:..\src/command_processing.c **** //                                                        GET IMU PARAMETER LIST
1294:..\src/command_processing.c **** //==============================================================================
1295:..\src/command_processing.c **** 
1296:..\src/command_processing.c **** void get_IMU_param_list(uint16 index)
1297:..\src/command_processing.c **** {
 8136              		.loc 1 1297 0
 8137              		.cfi_startproc
 8138              		@ args = 0, pretend = 0, frame = 1704
 8139              		@ frame_needed = 1, uses_anonymous_args = 0
 8140 0000 B0B5     		push	{r4, r5, r7, lr}
 8141              		.cfi_def_cfa_offset 16
 8142              		.cfi_offset 4, -16
 8143              		.cfi_offset 5, -12
 8144              		.cfi_offset 7, -8
 8145              		.cfi_offset 14, -4
 8146 0002 ADF5D56D 		sub	sp, sp, #1704
 8147              		.cfi_def_cfa_offset 1720
 8148 0006 00AF     		add	r7, sp, #0
 8149              		.cfi_def_cfa_register 7
 8150 0008 0246     		mov	r2, r0
 8151 000a BB1D     		adds	r3, r7, #6
 8152 000c 1A80     		strh	r2, [r3]	@ movhi
1298:..\src/command_processing.c ****     //Package to be sent variables
1299:..\src/command_processing.c ****     uint8 packet_data[  PARAM_BYTE_SLOT   +     // Number of connected IMUs
 8153              		.loc 1 1299 0
 8154 000e 07F58A73 		add	r3, r7, #276
 8155 0012 0022     		movs	r2, #0
 8156 0014 1A60     		str	r2, [r3]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 197


 8157 0016 0433     		adds	r3, r3, #4
 8158 0018 40F27552 		movw	r2, #1397
 8159 001c 0021     		movs	r1, #0
 8160 001e 1846     		mov	r0, r3
 8161 0020 FFF7FEFF 		bl	memset
1300:..\src/command_processing.c ****                         7*PARAM_BYTE_SLOT +     // IMUs ID  (1 port instead of 7)
1301:..\src/command_processing.c ****                         9*PARAM_BYTE_SLOT +     // Mag cal parameters (1 row instead of 9)
1302:..\src/command_processing.c ****                         PARAM_BYTE_SLOT   +     // 1 - Device ID
1303:..\src/command_processing.c ****                         PARAM_BYTE_SLOT*N_IMU_MAX + // IMU configurations
1304:..\src/command_processing.c ****                         PARAM_BYTE_SLOT   +     // SPI read delay
1305:..\src/command_processing.c ****                         PARAM_MENU_SLOT   + PARAM_BYTE_SLOT + 1 ] = "";
1306:..\src/command_processing.c ****     uint16 num_imus_id_params = 7;      //(1 port instead of 7)
 8162              		.loc 1 1306 0
 8163 0024 0723     		movs	r3, #7
 8164 0026 A7F89A36 		strh	r3, [r7, #1690]	@ movhi
1307:..\src/command_processing.c ****     uint16 num_mag_cal_params = 0;
 8165              		.loc 1 1307 0
 8166 002a 0023     		movs	r3, #0
 8167 002c A7F8A636 		strh	r3, [r7, #1702]	@ movhi
1308:..\src/command_processing.c ****     uint16 first_imu_parameter = 2;
 8168              		.loc 1 1308 0
 8169 0030 0223     		movs	r3, #2
 8170 0032 A7F89836 		strh	r3, [r7, #1688]	@ movhi
1309:..\src/command_processing.c ****     uint16 packet_length = PARAM_BYTE_SLOT +
 8171              		.loc 1 1309 0
 8172 0036 B7F89A36 		ldrh	r3, [r7, #1690]
 8173 003a 5A1C     		adds	r2, r3, #1
1310:..\src/command_processing.c ****                            num_imus_id_params*PARAM_BYTE_SLOT +
 8174              		.loc 1 1310 0
 8175 003c B7F8A636 		ldrh	r3, [r7, #1702]
 8176 0040 1344     		add	r3, r3, r2
1311:..\src/command_processing.c ****                            num_mag_cal_params*PARAM_BYTE_SLOT +
 8177              		.loc 1 1311 0
 8178 0042 0133     		adds	r3, r3, #1
1309:..\src/command_processing.c ****     uint16 packet_length = PARAM_BYTE_SLOT +
 8179              		.loc 1 1309 0
 8180 0044 9AB2     		uxth	r2, r3
 8181 0046 D24B     		ldr	r3, .L426
 8182 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8183 004a 9BB2     		uxth	r3, r3
 8184 004c 1344     		add	r3, r3, r2
 8185 004e 9BB2     		uxth	r3, r3
 8186 0050 1A46     		mov	r2, r3	@ movhi
 8187 0052 9200     		lsls	r2, r2, #2
 8188 0054 1344     		add	r3, r3, r2
 8189 0056 1A46     		mov	r2, r3	@ movhi
 8190 0058 9100     		lsls	r1, r2, #2
 8191 005a 1A46     		mov	r2, r3	@ movhi
 8192 005c 0B46     		mov	r3, r1	@ movhi
 8193 005e 1344     		add	r3, r3, r2
 8194 0060 5B00     		lsls	r3, r3, #1
 8195 0062 9BB2     		uxth	r3, r3
 8196 0064 FB33     		adds	r3, r3, #251
 8197 0066 A7F89636 		strh	r3, [r7, #1686]	@ movhi
1312:..\src/command_processing.c ****                            PARAM_BYTE_SLOT   + 
1313:..\src/command_processing.c ****                            (uint16)(PARAM_BYTE_SLOT*N_IMU_Connected) +
1314:..\src/command_processing.c ****                            PARAM_BYTE_SLOT + PARAM_MENU_SLOT + PARAM_BYTE_SLOT + 1;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 198


1315:..\src/command_processing.c **** 
1316:..\src/command_processing.c ****     //Auxiliary variables
1317:..\src/command_processing.c ****     uint16 CYDATA i, j, k, h;
1318:..\src/command_processing.c ****     uint16 start_byte = 0;
 8198              		.loc 1 1318 0
 8199 006a 0023     		movs	r3, #0
 8200 006c A7F89436 		strh	r3, [r7, #1684]	@ movhi
1319:..\src/command_processing.c **** 
1320:..\src/command_processing.c ****     //Parameters menu string definitions
1321:..\src/command_processing.c ****     char n_imu_str[26]          = "Number of connected IMUs:";
 8201              		.loc 1 1321 0
 8202 0070 07F1F803 		add	r3, r7, #248
 8203 0074 C74A     		ldr	r2, .L426+4
 8204 0076 1C46     		mov	r4, r3
 8205 0078 1546     		mov	r5, r2
 8206 007a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 8207 007c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8208 007e 95E80700 		ldmia	r5, {r0, r1, r2}
 8209 0082 03C4     		stmia	r4!, {r0, r1}
 8210 0084 2280     		strh	r2, [r4]	@ movhi
1322:..\src/command_processing.c ****     char ids_str[11]            = "";
 8211              		.loc 1 1322 0
 8212 0086 07F1EC03 		add	r3, r7, #236
 8213 008a 0022     		movs	r2, #0
 8214 008c 1A60     		str	r2, [r3]
 8215 008e 0433     		adds	r3, r3, #4
 8216 0090 0022     		movs	r2, #0
 8217 0092 1A60     		str	r2, [r3]
 8218 0094 C3F80320 		str	r2, [r3, #3]	@ unaligned
1323:..\src/command_processing.c ****     char mag_param_str[20]      = "Mag cal parameters:";
 8219              		.loc 1 1323 0
 8220 0098 07F1D803 		add	r3, r7, #216
 8221 009c BE4A     		ldr	r2, .L426+8
 8222 009e 1C46     		mov	r4, r3
 8223 00a0 1546     		mov	r5, r2
 8224 00a2 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 8225 00a4 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8226 00a6 2B68     		ldr	r3, [r5]
 8227 00a8 2360     		str	r3, [r4]
1324:..\src/command_processing.c ****     char id_str[16]             = "";
 8228              		.loc 1 1324 0
 8229 00aa 07F1C803 		add	r3, r7, #200
 8230 00ae 0022     		movs	r2, #0
 8231 00b0 1A60     		str	r2, [r3]
 8232 00b2 0433     		adds	r3, r3, #4
 8233 00b4 0022     		movs	r2, #0
 8234 00b6 1A60     		str	r2, [r3]
 8235 00b8 5A60     		str	r2, [r3, #4]
 8236 00ba 9A60     		str	r2, [r3, #8]
1325:..\src/command_processing.c ****     char imu_table_str[42]      = "";
 8237              		.loc 1 1325 0
 8238 00bc 07F19C03 		add	r3, r7, #156
 8239 00c0 0022     		movs	r2, #0
 8240 00c2 1A60     		str	r2, [r3]
 8241 00c4 0433     		adds	r3, r3, #4
 8242 00c6 2622     		movs	r2, #38
 8243 00c8 0021     		movs	r1, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 199


 8244 00ca 1846     		mov	r0, r3
 8245 00cc FFF7FEFF 		bl	memset
1326:..\src/command_processing.c ****     char spi_read_delay_str[26] = "";
 8246              		.loc 1 1326 0
 8247 00d0 07F18003 		add	r3, r7, #128
 8248 00d4 0022     		movs	r2, #0
 8249 00d6 1A60     		str	r2, [r3]
 8250 00d8 0433     		adds	r3, r3, #4
 8251 00da 0022     		movs	r2, #0
 8252 00dc 1A60     		str	r2, [r3]
 8253 00de 5A60     		str	r2, [r3, #4]
 8254 00e0 9A60     		str	r2, [r3, #8]
 8255 00e2 DA60     		str	r2, [r3, #12]
 8256 00e4 1A61     		str	r2, [r3, #16]
 8257 00e6 9A82     		strh	r2, [r3, #20]	@ movhi
1327:..\src/command_processing.c ****     
1328:..\src/command_processing.c ****     //Strings lenghts
1329:..\src/command_processing.c ****     uint8 CYDATA id_str_len = strlen(id_str);
 8258              		.loc 1 1329 0
 8259 00e8 07F1C803 		add	r3, r7, #200
 8260 00ec 1846     		mov	r0, r3
 8261 00ee FFF7FEFF 		bl	strlen
 8262 00f2 0346     		mov	r3, r0
 8263 00f4 87F89336 		strb	r3, [r7, #1683]
1330:..\src/command_processing.c ****     uint8 CYDATA n_imu_str_len = strlen(n_imu_str);
 8264              		.loc 1 1330 0
 8265 00f8 07F1F803 		add	r3, r7, #248
 8266 00fc 1846     		mov	r0, r3
 8267 00fe FFF7FEFF 		bl	strlen
 8268 0102 0346     		mov	r3, r0
 8269 0104 87F89236 		strb	r3, [r7, #1682]
1331:..\src/command_processing.c ****     uint8 CYDATA ids_str_len = strlen(ids_str);
 8270              		.loc 1 1331 0
 8271 0108 07F1EC03 		add	r3, r7, #236
 8272 010c 1846     		mov	r0, r3
 8273 010e FFF7FEFF 		bl	strlen
 8274 0112 0346     		mov	r3, r0
 8275 0114 87F89136 		strb	r3, [r7, #1681]
1332:..\src/command_processing.c ****     uint8 CYDATA mag_param_str_len = strlen(mag_param_str);
 8276              		.loc 1 1332 0
 8277 0118 07F1D803 		add	r3, r7, #216
 8278 011c 1846     		mov	r0, r3
 8279 011e FFF7FEFF 		bl	strlen
 8280 0122 0346     		mov	r3, r0
 8281 0124 87F89036 		strb	r3, [r7, #1680]
1333:..\src/command_processing.c ****     uint8 CYDATA imu_table_str_len = strlen(imu_table_str);
 8282              		.loc 1 1333 0
 8283 0128 07F19C03 		add	r3, r7, #156
 8284 012c 1846     		mov	r0, r3
 8285 012e FFF7FEFF 		bl	strlen
 8286 0132 0346     		mov	r3, r0
 8287 0134 87F88F36 		strb	r3, [r7, #1679]
1334:..\src/command_processing.c ****     uint8 CYDATA spi_read_delay_str_len = strlen(spi_read_delay_str);
 8288              		.loc 1 1334 0
 8289 0138 07F18003 		add	r3, r7, #128
 8290 013c 1846     		mov	r0, r3
 8291 013e FFF7FEFF 		bl	strlen
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 200


 8292 0142 0346     		mov	r3, r0
 8293 0144 87F89D36 		strb	r3, [r7, #1693]
1335:..\src/command_processing.c ****     
1336:..\src/command_processing.c ****     char spi_delay_menu[118]    = "";
 8294              		.loc 1 1336 0
 8295 0148 07F10803 		add	r3, r7, #8
 8296 014c 0022     		movs	r2, #0
 8297 014e 1A60     		str	r2, [r3]
 8298 0150 0433     		adds	r3, r3, #4
 8299 0152 7222     		movs	r2, #114
 8300 0154 0021     		movs	r1, #0
 8301 0156 1846     		mov	r0, r3
 8302 0158 FFF7FEFF 		bl	memset
1337:..\src/command_processing.c ****     uint8 CYDATA spi_delay_menu_len;
1338:..\src/command_processing.c ****  
1339:..\src/command_processing.c ****     sprintf(spi_delay_menu, "0 -> None\n1 -> Low (%u us delay for each 8-bit register read)\n2 -> H
 8303              		.loc 1 1339 0
 8304 015c 07F10800 		add	r0, r7, #8
 8305 0160 6423     		movs	r3, #100
 8306 0162 0A22     		movs	r2, #10
 8307 0164 8D49     		ldr	r1, .L426+12
 8308 0166 FFF7FEFF 		bl	sprintf
1340:..\src/command_processing.c ****     spi_delay_menu_len = strlen(spi_delay_menu);
 8309              		.loc 1 1340 0
 8310 016a 07F10803 		add	r3, r7, #8
 8311 016e 1846     		mov	r0, r3
 8312 0170 FFF7FEFF 		bl	strlen
 8313 0174 0346     		mov	r3, r0
 8314 0176 87F88E36 		strb	r3, [r7, #1678]
1341:..\src/command_processing.c **** 
1342:..\src/command_processing.c ****     // Compute number of read parameters depending on N_IMU_Connected and
1343:..\src/command_processing.c ****     // update packet_length
1344:..\src/command_processing.c ****     num_mag_cal_params = (uint16)(N_IMU_Connected / 2);
 8315              		.loc 1 1344 0
 8316 017a 854B     		ldr	r3, .L426
 8317 017c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8318 017e 5B08     		lsrs	r3, r3, #1
 8319 0180 DBB2     		uxtb	r3, r3
 8320 0182 A7F8A636 		strh	r3, [r7, #1702]	@ movhi
1345:..\src/command_processing.c ****     if ( (N_IMU_Connected - num_mag_cal_params*2) > 0 ) num_mag_cal_params++;
 8321              		.loc 1 1345 0
 8322 0186 824B     		ldr	r3, .L426
 8323 0188 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8324 018a 1A46     		mov	r2, r3
 8325 018c B7F8A636 		ldrh	r3, [r7, #1702]
 8326 0190 5B00     		lsls	r3, r3, #1
 8327 0192 D31A     		subs	r3, r2, r3
 8328 0194 002B     		cmp	r3, #0
 8329 0196 04DD     		ble	.L381
 8330              		.loc 1 1345 0 is_stmt 0 discriminator 1
 8331 0198 B7F8A636 		ldrh	r3, [r7, #1702]
 8332 019c 0133     		adds	r3, r3, #1
 8333 019e A7F8A636 		strh	r3, [r7, #1702]	@ movhi
 8334              	.L381:
1346:..\src/command_processing.c ****     
1347:..\src/command_processing.c ****     packet_length = PARAM_BYTE_SLOT +
 8335              		.loc 1 1347 0 is_stmt 1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 201


 8336 01a2 B7F89A36 		ldrh	r3, [r7, #1690]
 8337 01a6 5A1C     		adds	r2, r3, #1
1348:..\src/command_processing.c ****                     num_imus_id_params*PARAM_BYTE_SLOT +
 8338              		.loc 1 1348 0
 8339 01a8 B7F8A636 		ldrh	r3, [r7, #1702]
 8340 01ac 1344     		add	r3, r3, r2
1349:..\src/command_processing.c ****                     num_mag_cal_params*PARAM_BYTE_SLOT +
 8341              		.loc 1 1349 0
 8342 01ae 0133     		adds	r3, r3, #1
1347:..\src/command_processing.c ****                     num_imus_id_params*PARAM_BYTE_SLOT +
 8343              		.loc 1 1347 0
 8344 01b0 9AB2     		uxth	r2, r3
 8345 01b2 774B     		ldr	r3, .L426
 8346 01b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8347 01b6 9BB2     		uxth	r3, r3
 8348 01b8 1344     		add	r3, r3, r2
 8349 01ba 9BB2     		uxth	r3, r3
 8350 01bc 1A46     		mov	r2, r3	@ movhi
 8351 01be 9200     		lsls	r2, r2, #2
 8352 01c0 1344     		add	r3, r3, r2
 8353 01c2 1A46     		mov	r2, r3	@ movhi
 8354 01c4 9100     		lsls	r1, r2, #2
 8355 01c6 1A46     		mov	r2, r3	@ movhi
 8356 01c8 0B46     		mov	r3, r1	@ movhi
 8357 01ca 1344     		add	r3, r3, r2
 8358 01cc 5B00     		lsls	r3, r3, #1
 8359 01ce 9BB2     		uxth	r3, r3
 8360 01d0 C933     		adds	r3, r3, #201
 8361 01d2 A7F89636 		strh	r3, [r7, #1686]	@ movhi
1350:..\src/command_processing.c ****                     PARAM_BYTE_SLOT   + 
1351:..\src/command_processing.c ****                     (uint16)(PARAM_BYTE_SLOT*N_IMU_Connected) +
1352:..\src/command_processing.c ****                     PARAM_MENU_SLOT + PARAM_BYTE_SLOT + 1;
1353:..\src/command_processing.c **** 
1354:..\src/command_processing.c ****     first_imu_parameter = 1 + num_imus_id_params + num_mag_cal_params + 2;
 8362              		.loc 1 1354 0
 8363 01d6 B7F89A26 		ldrh	r2, [r7, #1690]	@ movhi
 8364 01da B7F8A636 		ldrh	r3, [r7, #1702]	@ movhi
 8365 01de 1344     		add	r3, r3, r2
 8366 01e0 9BB2     		uxth	r3, r3
 8367 01e2 0333     		adds	r3, r3, #3
 8368 01e4 A7F89836 		strh	r3, [r7, #1688]	@ movhi
1355:..\src/command_processing.c ****     packet_data[0] = CMD_GET_IMU_PARAM;
 8369              		.loc 1 1355 0
 8370 01e8 07F58A73 		add	r3, r7, #276
 8371 01ec A222     		movs	r2, #162
 8372 01ee 1A70     		strb	r2, [r3]
1356:..\src/command_processing.c ****     packet_data[1] = 1 + num_imus_id_params + num_mag_cal_params + 1 + (uint8)N_IMU_Connected + 1; 
 8373              		.loc 1 1356 0
 8374 01f0 B7F89A36 		ldrh	r3, [r7, #1690]	@ movhi
 8375 01f4 DAB2     		uxtb	r2, r3
 8376 01f6 B7F8A636 		ldrh	r3, [r7, #1702]	@ movhi
 8377 01fa DBB2     		uxtb	r3, r3
 8378 01fc 1344     		add	r3, r3, r2
 8379 01fe DAB2     		uxtb	r2, r3
 8380 0200 634B     		ldr	r3, .L426
 8381 0202 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8382 0204 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 202


 8383 0206 DBB2     		uxtb	r3, r3
 8384 0208 0333     		adds	r3, r3, #3
 8385 020a DAB2     		uxtb	r2, r3
 8386 020c 07F58A73 		add	r3, r7, #276
 8387 0210 5A70     		strb	r2, [r3, #1]
1357:..\src/command_processing.c **** 
1358:..\src/command_processing.c ****     switch(index) {
 8388              		.loc 1 1358 0
 8389 0212 BB1D     		adds	r3, r7, #6
 8390 0214 1B88     		ldrh	r3, [r3]
 8391 0216 002B     		cmp	r3, #0
 8392 0218 40F0D084 		bne	.L424
1359:..\src/command_processing.c ****         case 0:         //List of all parameters with relative types
1360:..\src/command_processing.c ****             /*-------------N IMU--------------*/
1361:..\src/command_processing.c ****             start_byte = 0;
 8393              		.loc 1 1361 0
 8394 021c 0023     		movs	r3, #0
 8395 021e A7F89436 		strh	r3, [r7, #1684]	@ movhi
1362:..\src/command_processing.c ****             packet_data[2] = TYPE_UINT8;
 8396              		.loc 1 1362 0
 8397 0222 07F58A73 		add	r3, r7, #276
 8398 0226 0222     		movs	r2, #2
 8399 0228 9A70     		strb	r2, [r3, #2]
1363:..\src/command_processing.c ****             packet_data[3] = 1;
 8400              		.loc 1 1363 0
 8401 022a 07F58A73 		add	r3, r7, #276
 8402 022e 0122     		movs	r2, #1
 8403 0230 DA70     		strb	r2, [r3, #3]
1364:..\src/command_processing.c ****             packet_data[4] = (uint8)N_IMU_Connected;
 8404              		.loc 1 1364 0
 8405 0232 574B     		ldr	r3, .L426
 8406 0234 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 8407 0236 07F58A73 		add	r3, r7, #276
 8408 023a 1A71     		strb	r2, [r3, #4]
1365:..\src/command_processing.c ****             for(i = n_imu_str_len; i != 0; i--)
 8409              		.loc 1 1365 0
 8410 023c 97F89236 		ldrb	r3, [r7, #1682]	@ zero_extendqisi2
 8411 0240 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 8412 0244 15E0     		b	.L384
 8413              	.L385:
1366:..\src/command_processing.c ****                 packet_data[5 + n_imu_str_len - i] = n_imu_str[n_imu_str_len - i];
 8414              		.loc 1 1366 0 discriminator 3
 8415 0246 97F89236 		ldrb	r3, [r7, #1682]	@ zero_extendqisi2
 8416 024a 5A1D     		adds	r2, r3, #5
 8417 024c B7F8A436 		ldrh	r3, [r7, #1700]
 8418 0250 D31A     		subs	r3, r2, r3
 8419 0252 97F89216 		ldrb	r1, [r7, #1682]	@ zero_extendqisi2
 8420 0256 B7F8A426 		ldrh	r2, [r7, #1700]
 8421 025a 8A1A     		subs	r2, r1, r2
 8422 025c 07F1F801 		add	r1, r7, #248
 8423 0260 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 8424 0262 07F58A72 		add	r2, r7, #276
 8425 0266 D154     		strb	r1, [r2, r3]
1365:..\src/command_processing.c ****             for(i = n_imu_str_len; i != 0; i--)
 8426              		.loc 1 1365 0 discriminator 3
 8427 0268 B7F8A436 		ldrh	r3, [r7, #1700]
 8428 026c 013B     		subs	r3, r3, #1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 203


 8429 026e A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 8430              	.L384:
1365:..\src/command_processing.c ****             for(i = n_imu_str_len; i != 0; i--)
 8431              		.loc 1 1365 0 is_stmt 0 discriminator 1
 8432 0272 B7F8A436 		ldrh	r3, [r7, #1700]
 8433 0276 002B     		cmp	r3, #0
 8434 0278 E5D1     		bne	.L385
1367:..\src/command_processing.c ****                 
1368:..\src/command_processing.c ****             /*-------------IMUS ID--------------*/
1369:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT;
 8435              		.loc 1 1369 0 is_stmt 1
 8436 027a B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 8437 027e 3233     		adds	r3, r3, #50
 8438 0280 A7F89436 		strh	r3, [r7, #1684]	@ movhi
1370:..\src/command_processing.c ****             i = 0;
 8439              		.loc 1 1370 0
 8440 0284 0023     		movs	r3, #0
 8441 0286 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
1371:..\src/command_processing.c ****             for (k = 0; k < num_imus_id_params; k++){
 8442              		.loc 1 1371 0
 8443 028a 0023     		movs	r3, #0
 8444 028c A7F8A036 		strh	r3, [r7, #1696]	@ movhi
 8445 0290 B2E0     		b	.L386
 8446              	.L393:
1372:..\src/command_processing.c ****                 sprintf(ids_str, "Port %u ID:", k);
 8447              		.loc 1 1372 0
 8448 0292 B7F8A026 		ldrh	r2, [r7, #1696]
 8449 0296 07F1EC03 		add	r3, r7, #236
 8450 029a 4149     		ldr	r1, .L426+16
 8451 029c 1846     		mov	r0, r3
 8452 029e FFF7FEFF 		bl	sprintf
1373:..\src/command_processing.c ****                 h = 4;
 8453              		.loc 1 1373 0
 8454 02a2 0423     		movs	r3, #4
 8455 02a4 A7F89E36 		strh	r3, [r7, #1694]	@ movhi
1374:..\src/command_processing.c ****                 ids_str_len = strlen(ids_str);
 8456              		.loc 1 1374 0
 8457 02a8 07F1EC03 		add	r3, r7, #236
 8458 02ac 1846     		mov	r0, r3
 8459 02ae FFF7FEFF 		bl	strlen
 8460 02b2 0346     		mov	r3, r0
 8461 02b4 87F89136 		strb	r3, [r7, #1681]
1375:..\src/command_processing.c ****                 packet_data[2+start_byte + PARAM_BYTE_SLOT*k] = TYPE_UINT8;
 8462              		.loc 1 1375 0
 8463 02b8 B7F89436 		ldrh	r3, [r7, #1684]
 8464 02bc 9A1C     		adds	r2, r3, #2
 8465 02be B7F8A036 		ldrh	r3, [r7, #1696]
 8466 02c2 3221     		movs	r1, #50
 8467 02c4 01FB03F3 		mul	r3, r1, r3
 8468 02c8 1344     		add	r3, r3, r2
 8469 02ca 07F58A72 		add	r2, r7, #276
 8470 02ce 0221     		movs	r1, #2
 8471 02d0 D154     		strb	r1, [r2, r3]
1376:..\src/command_processing.c ****                 packet_data[3+start_byte + PARAM_BYTE_SLOT*k] = 3;
 8472              		.loc 1 1376 0
 8473 02d2 B7F89436 		ldrh	r3, [r7, #1684]
 8474 02d6 DA1C     		adds	r2, r3, #3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 204


 8475 02d8 B7F8A036 		ldrh	r3, [r7, #1696]
 8476 02dc 3221     		movs	r1, #50
 8477 02de 01FB03F3 		mul	r3, r1, r3
 8478 02e2 1344     		add	r3, r3, r2
 8479 02e4 07F58A72 		add	r2, r7, #276
 8480 02e8 0321     		movs	r1, #3
 8481 02ea D154     		strb	r1, [r2, r3]
1377:..\src/command_processing.c ****                 
1378:..\src/command_processing.c ****                 for (j = 3*k; j <= 3*k+2; j++) {  // for each possible imu on port k
 8482              		.loc 1 1378 0
 8483 02ec B7F8A036 		ldrh	r3, [r7, #1696]	@ movhi
 8484 02f0 1A46     		mov	r2, r3	@ movhi
 8485 02f2 5200     		lsls	r2, r2, #1
 8486 02f4 1344     		add	r3, r3, r2
 8487 02f6 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 8488 02fa 39E0     		b	.L387
 8489              	.L390:
1379:..\src/command_processing.c ****                     if (IMU_connected[i] == j) {
 8490              		.loc 1 1379 0
 8491 02fc B7F8A436 		ldrh	r3, [r7, #1700]
 8492 0300 284A     		ldr	r2, .L426+20
 8493 0302 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8494 0304 9BB2     		uxth	r3, r3
 8495 0306 B7F8A226 		ldrh	r2, [r7, #1698]
 8496 030a 9A42     		cmp	r2, r3
 8497 030c 17D1     		bne	.L388
1380:..\src/command_processing.c ****                         packet_data[h+start_byte + PARAM_BYTE_SLOT*k] = (uint8)IMU_connected[i];   
 8498              		.loc 1 1380 0
 8499 030e B7F89E26 		ldrh	r2, [r7, #1694]
 8500 0312 B7F89436 		ldrh	r3, [r7, #1684]
 8501 0316 1A44     		add	r2, r2, r3
 8502 0318 B7F8A036 		ldrh	r3, [r7, #1696]
 8503 031c 3221     		movs	r1, #50
 8504 031e 01FB03F3 		mul	r3, r1, r3
 8505 0322 1344     		add	r3, r3, r2
 8506 0324 B7F8A426 		ldrh	r2, [r7, #1700]
 8507 0328 1E49     		ldr	r1, .L426+20
 8508 032a 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 8509 032c 07F58A72 		add	r2, r7, #276
 8510 0330 D154     		strb	r1, [r2, r3]
1381:..\src/command_processing.c ****                         i++;
 8511              		.loc 1 1381 0
 8512 0332 B7F8A436 		ldrh	r3, [r7, #1700]
 8513 0336 0133     		adds	r3, r3, #1
 8514 0338 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 8515 033c 0EE0     		b	.L389
 8516              	.L388:
1382:..\src/command_processing.c ****                     } 
1383:..\src/command_processing.c ****                     else {
1384:..\src/command_processing.c ****                         packet_data[h+start_byte + PARAM_BYTE_SLOT*k] = 255;
 8517              		.loc 1 1384 0
 8518 033e B7F89E26 		ldrh	r2, [r7, #1694]
 8519 0342 B7F89436 		ldrh	r3, [r7, #1684]
 8520 0346 1A44     		add	r2, r2, r3
 8521 0348 B7F8A036 		ldrh	r3, [r7, #1696]
 8522 034c 3221     		movs	r1, #50
 8523 034e 01FB03F3 		mul	r3, r1, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 205


 8524 0352 1344     		add	r3, r3, r2
 8525 0354 07F58A72 		add	r2, r7, #276
 8526 0358 FF21     		movs	r1, #255
 8527 035a D154     		strb	r1, [r2, r3]
 8528              	.L389:
1385:..\src/command_processing.c ****                     }
1386:..\src/command_processing.c ****                     h++;
 8529              		.loc 1 1386 0 discriminator 2
 8530 035c B7F89E36 		ldrh	r3, [r7, #1694]
 8531 0360 0133     		adds	r3, r3, #1
 8532 0362 A7F89E36 		strh	r3, [r7, #1694]	@ movhi
1378:..\src/command_processing.c ****                     if (IMU_connected[i] == j) {
 8533              		.loc 1 1378 0 discriminator 2
 8534 0366 B7F8A236 		ldrh	r3, [r7, #1698]
 8535 036a 0133     		adds	r3, r3, #1
 8536 036c A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 8537              	.L387:
1378:..\src/command_processing.c ****                     if (IMU_connected[i] == j) {
 8538              		.loc 1 1378 0 is_stmt 0 discriminator 1
 8539 0370 B7F8A216 		ldrh	r1, [r7, #1698]
 8540 0374 B7F8A026 		ldrh	r2, [r7, #1696]
 8541 0378 1346     		mov	r3, r2
 8542 037a 5B00     		lsls	r3, r3, #1
 8543 037c 1344     		add	r3, r3, r2
 8544 037e 0233     		adds	r3, r3, #2
 8545 0380 9942     		cmp	r1, r3
 8546 0382 BBDD     		ble	.L390
1387:..\src/command_processing.c ****                 }
1388:..\src/command_processing.c **** 
1389:..\src/command_processing.c ****                 //if (IMU_connected[i] >= 3*k && IMU_connected[i] <= 3*k + 2)
1390:..\src/command_processing.c ****                 for(j = ids_str_len; j != 0; j--)
 8547              		.loc 1 1390 0 is_stmt 1
 8548 0384 97F89136 		ldrb	r3, [r7, #1681]	@ zero_extendqisi2
 8549 0388 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 8550 038c 2BE0     		b	.L391
 8551              	.L427:
 8552 038e 00BF     		.align	2
 8553              	.L426:
 8554 0390 00000000 		.word	N_IMU_Connected
 8555 0394 28110000 		.word	.LC143
 8556 0398 44110000 		.word	.LC144
 8557 039c 88020000 		.word	.LC130
 8558 03a0 C0100000 		.word	.LC145
 8559 03a4 00000000 		.word	IMU_connected
 8560              	.L392:
1391:..\src/command_processing.c ****                     packet_data[7+start_byte + PARAM_BYTE_SLOT*k + ids_str_len - j] = ids_str[ids_s
 8561              		.loc 1 1391 0 discriminator 3
 8562 03a8 B7F89436 		ldrh	r3, [r7, #1684]
 8563 03ac DA1D     		adds	r2, r3, #7
 8564 03ae B7F8A036 		ldrh	r3, [r7, #1696]
 8565 03b2 3221     		movs	r1, #50
 8566 03b4 01FB03F3 		mul	r3, r1, r3
 8567 03b8 1A44     		add	r2, r2, r3
 8568 03ba 97F89136 		ldrb	r3, [r7, #1681]	@ zero_extendqisi2
 8569 03be 1A44     		add	r2, r2, r3
 8570 03c0 B7F8A236 		ldrh	r3, [r7, #1698]
 8571 03c4 D31A     		subs	r3, r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 206


 8572 03c6 97F89116 		ldrb	r1, [r7, #1681]	@ zero_extendqisi2
 8573 03ca B7F8A226 		ldrh	r2, [r7, #1698]
 8574 03ce 8A1A     		subs	r2, r1, r2
 8575 03d0 07F1EC01 		add	r1, r7, #236
 8576 03d4 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 8577 03d6 07F58A72 		add	r2, r7, #276
 8578 03da D154     		strb	r1, [r2, r3]
1390:..\src/command_processing.c ****                     packet_data[7+start_byte + PARAM_BYTE_SLOT*k + ids_str_len - j] = ids_str[ids_s
 8579              		.loc 1 1390 0 discriminator 3
 8580 03dc B7F8A236 		ldrh	r3, [r7, #1698]
 8581 03e0 013B     		subs	r3, r3, #1
 8582 03e2 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 8583              	.L391:
1390:..\src/command_processing.c ****                     packet_data[7+start_byte + PARAM_BYTE_SLOT*k + ids_str_len - j] = ids_str[ids_s
 8584              		.loc 1 1390 0 is_stmt 0 discriminator 1
 8585 03e6 B7F8A236 		ldrh	r3, [r7, #1698]
 8586 03ea 002B     		cmp	r3, #0
 8587 03ec DCD1     		bne	.L392
1371:..\src/command_processing.c ****                 sprintf(ids_str, "Port %u ID:", k);
 8588              		.loc 1 1371 0 is_stmt 1 discriminator 2
 8589 03ee B7F8A036 		ldrh	r3, [r7, #1696]
 8590 03f2 0133     		adds	r3, r3, #1
 8591 03f4 A7F8A036 		strh	r3, [r7, #1696]	@ movhi
 8592              	.L386:
1371:..\src/command_processing.c ****                 sprintf(ids_str, "Port %u ID:", k);
 8593              		.loc 1 1371 0 is_stmt 0 discriminator 1
 8594 03f8 B7F8A026 		ldrh	r2, [r7, #1696]
 8595 03fc B7F89A36 		ldrh	r3, [r7, #1690]
 8596 0400 9A42     		cmp	r2, r3
 8597 0402 FFF446AF 		bcc	.L393
1392:..\src/command_processing.c ****             }
1393:..\src/command_processing.c ****             
1394:..\src/command_processing.c ****             /*-------------GET MAG PARAM--------------*/
1395:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT*num_imus_id_params;
 8598              		.loc 1 1395 0 is_stmt 1
 8599 0406 B7F89A36 		ldrh	r3, [r7, #1690]	@ movhi
 8600 040a 1A46     		mov	r2, r3	@ movhi
 8601 040c 9200     		lsls	r2, r2, #2
 8602 040e 1344     		add	r3, r3, r2
 8603 0410 1A46     		mov	r2, r3	@ movhi
 8604 0412 9100     		lsls	r1, r2, #2
 8605 0414 1A46     		mov	r2, r3	@ movhi
 8606 0416 0B46     		mov	r3, r1	@ movhi
 8607 0418 1344     		add	r3, r3, r2
 8608 041a 5B00     		lsls	r3, r3, #1
 8609 041c 9AB2     		uxth	r2, r3
 8610 041e B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 8611 0422 1344     		add	r3, r3, r2
 8612 0424 A7F89436 		strh	r3, [r7, #1684]	@ movhi
1396:..\src/command_processing.c ****             for (k = 0; k < num_mag_cal_params; k++){
 8613              		.loc 1 1396 0
 8614 0428 0023     		movs	r3, #0
 8615 042a A7F8A036 		strh	r3, [r7, #1696]	@ movhi
 8616 042e 1FE1     		b	.L394
 8617              	.L401:
1397:..\src/command_processing.c ****                 packet_data[2+start_byte + PARAM_BYTE_SLOT*k] = TYPE_UINT8;
 8618              		.loc 1 1397 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 207


 8619 0430 B7F89436 		ldrh	r3, [r7, #1684]
 8620 0434 9A1C     		adds	r2, r3, #2
 8621 0436 B7F8A036 		ldrh	r3, [r7, #1696]
 8622 043a 3221     		movs	r1, #50
 8623 043c 01FB03F3 		mul	r3, r1, r3
 8624 0440 1344     		add	r3, r3, r2
 8625 0442 07F58A72 		add	r2, r7, #276
 8626 0446 0221     		movs	r1, #2
 8627 0448 D154     		strb	r1, [r2, r3]
1398:..\src/command_processing.c ****                 
1399:..\src/command_processing.c ****                 packet_data[3+start_byte + PARAM_BYTE_SLOT*k] = 3;
 8628              		.loc 1 1399 0
 8629 044a B7F89436 		ldrh	r3, [r7, #1684]
 8630 044e DA1C     		adds	r2, r3, #3
 8631 0450 B7F8A036 		ldrh	r3, [r7, #1696]
 8632 0454 3221     		movs	r1, #50
 8633 0456 01FB03F3 		mul	r3, r1, r3
 8634 045a 1344     		add	r3, r3, r2
 8635 045c 07F58A72 		add	r2, r7, #276
 8636 0460 0321     		movs	r1, #3
 8637 0462 D154     		strb	r1, [r2, r3]
1400:..\src/command_processing.c ****                 packet_data[4+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*k]][
 8638              		.loc 1 1400 0
 8639 0464 B7F89436 		ldrh	r3, [r7, #1684]
 8640 0468 1A1D     		adds	r2, r3, #4
 8641 046a B7F8A036 		ldrh	r3, [r7, #1696]
 8642 046e 3221     		movs	r1, #50
 8643 0470 01FB03F3 		mul	r3, r1, r3
 8644 0474 1A44     		add	r2, r2, r3
 8645 0476 B7F8A036 		ldrh	r3, [r7, #1696]
 8646 047a 5B00     		lsls	r3, r3, #1
 8647 047c B249     		ldr	r1, .L428
 8648 047e CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 8649 0480 1846     		mov	r0, r3
 8650 0482 B249     		ldr	r1, .L428+4
 8651 0484 0346     		mov	r3, r0
 8652 0486 5B00     		lsls	r3, r3, #1
 8653 0488 0344     		add	r3, r3, r0
 8654 048a 0B44     		add	r3, r3, r1
 8655 048c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 8656 048e 07F58A73 		add	r3, r7, #276
 8657 0492 9954     		strb	r1, [r3, r2]
1401:..\src/command_processing.c ****                 packet_data[5+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*k]][
 8658              		.loc 1 1401 0
 8659 0494 B7F89436 		ldrh	r3, [r7, #1684]
 8660 0498 5A1D     		adds	r2, r3, #5
 8661 049a B7F8A036 		ldrh	r3, [r7, #1696]
 8662 049e 3221     		movs	r1, #50
 8663 04a0 01FB03F3 		mul	r3, r1, r3
 8664 04a4 1A44     		add	r2, r2, r3
 8665 04a6 B7F8A036 		ldrh	r3, [r7, #1696]
 8666 04aa 5B00     		lsls	r3, r3, #1
 8667 04ac A649     		ldr	r1, .L428
 8668 04ae CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 8669 04b0 1846     		mov	r0, r3
 8670 04b2 A649     		ldr	r1, .L428+4
 8671 04b4 0346     		mov	r3, r0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 208


 8672 04b6 5B00     		lsls	r3, r3, #1
 8673 04b8 0344     		add	r3, r3, r0
 8674 04ba 0B44     		add	r3, r3, r1
 8675 04bc 0133     		adds	r3, r3, #1
 8676 04be 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 8677 04c0 07F58A73 		add	r3, r7, #276
 8678 04c4 9954     		strb	r1, [r3, r2]
1402:..\src/command_processing.c ****                 packet_data[6+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*k]][
 8679              		.loc 1 1402 0
 8680 04c6 B7F89436 		ldrh	r3, [r7, #1684]
 8681 04ca 9A1D     		adds	r2, r3, #6
 8682 04cc B7F8A036 		ldrh	r3, [r7, #1696]
 8683 04d0 3221     		movs	r1, #50
 8684 04d2 01FB03F3 		mul	r3, r1, r3
 8685 04d6 1A44     		add	r2, r2, r3
 8686 04d8 B7F8A036 		ldrh	r3, [r7, #1696]
 8687 04dc 5B00     		lsls	r3, r3, #1
 8688 04de 9A49     		ldr	r1, .L428
 8689 04e0 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 8690 04e2 1846     		mov	r0, r3
 8691 04e4 9949     		ldr	r1, .L428+4
 8692 04e6 0346     		mov	r3, r0
 8693 04e8 5B00     		lsls	r3, r3, #1
 8694 04ea 0344     		add	r3, r3, r0
 8695 04ec 0B44     		add	r3, r3, r1
 8696 04ee 0233     		adds	r3, r3, #2
 8697 04f0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 8698 04f2 07F58A73 		add	r3, r7, #276
 8699 04f6 9954     		strb	r1, [r3, r2]
1403:..\src/command_processing.c ****                 
1404:..\src/command_processing.c ****                 // check if there is a second value
1405:..\src/command_processing.c ****                 if ( N_IMU_Connected < 2*(k+1) ) {
 8700              		.loc 1 1405 0
 8701 04f8 954B     		ldr	r3, .L428+8
 8702 04fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8703 04fc 1A46     		mov	r2, r3
 8704 04fe B7F8A036 		ldrh	r3, [r7, #1696]
 8705 0502 0133     		adds	r3, r3, #1
 8706 0504 5B00     		lsls	r3, r3, #1
 8707 0506 9A42     		cmp	r2, r3
 8708 0508 28DA     		bge	.L395
1406:..\src/command_processing.c ****                     // there is only one value
1407:..\src/command_processing.c ****                     for(j = mag_param_str_len; j != 0; j--)
 8709              		.loc 1 1407 0
 8710 050a 97F89036 		ldrb	r3, [r7, #1680]	@ zero_extendqisi2
 8711 050e A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 8712 0512 1EE0     		b	.L396
 8713              	.L397:
1408:..\src/command_processing.c ****                         packet_data[7+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = mag
 8714              		.loc 1 1408 0 discriminator 3
 8715 0514 B7F89436 		ldrh	r3, [r7, #1684]
 8716 0518 DA1D     		adds	r2, r3, #7
 8717 051a B7F8A036 		ldrh	r3, [r7, #1696]
 8718 051e 3221     		movs	r1, #50
 8719 0520 01FB03F3 		mul	r3, r1, r3
 8720 0524 1A44     		add	r2, r2, r3
 8721 0526 97F89036 		ldrb	r3, [r7, #1680]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 209


 8722 052a 1A44     		add	r2, r2, r3
 8723 052c B7F8A236 		ldrh	r3, [r7, #1698]
 8724 0530 D31A     		subs	r3, r2, r3
 8725 0532 97F89016 		ldrb	r1, [r7, #1680]	@ zero_extendqisi2
 8726 0536 B7F8A226 		ldrh	r2, [r7, #1698]
 8727 053a 8A1A     		subs	r2, r1, r2
 8728 053c 07F1D801 		add	r1, r7, #216
 8729 0540 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 8730 0542 07F58A72 		add	r2, r7, #276
 8731 0546 D154     		strb	r1, [r2, r3]
1407:..\src/command_processing.c ****                         packet_data[7+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = mag
 8732              		.loc 1 1407 0 discriminator 3
 8733 0548 B7F8A236 		ldrh	r3, [r7, #1698]
 8734 054c 013B     		subs	r3, r3, #1
 8735 054e A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 8736              	.L396:
1407:..\src/command_processing.c ****                         packet_data[7+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = mag
 8737              		.loc 1 1407 0 is_stmt 0 discriminator 1
 8738 0552 B7F8A236 		ldrh	r3, [r7, #1698]
 8739 0556 002B     		cmp	r3, #0
 8740 0558 DCD1     		bne	.L397
 8741 055a 84E0     		b	.L398
 8742              	.L395:
1409:..\src/command_processing.c ****                 }
1410:..\src/command_processing.c ****                 else {
1411:..\src/command_processing.c ****                     // fill the second value
1412:..\src/command_processing.c ****                     packet_data[3+start_byte + PARAM_BYTE_SLOT*k] = 6;
 8743              		.loc 1 1412 0 is_stmt 1
 8744 055c B7F89436 		ldrh	r3, [r7, #1684]
 8745 0560 DA1C     		adds	r2, r3, #3
 8746 0562 B7F8A036 		ldrh	r3, [r7, #1696]
 8747 0566 3221     		movs	r1, #50
 8748 0568 01FB03F3 		mul	r3, r1, r3
 8749 056c 1344     		add	r3, r3, r2
 8750 056e 07F58A72 		add	r2, r7, #276
 8751 0572 0621     		movs	r1, #6
 8752 0574 D154     		strb	r1, [r2, r3]
1413:..\src/command_processing.c ****                     packet_data[7+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*
 8753              		.loc 1 1413 0
 8754 0576 B7F89436 		ldrh	r3, [r7, #1684]
 8755 057a DA1D     		adds	r2, r3, #7
 8756 057c B7F8A036 		ldrh	r3, [r7, #1696]
 8757 0580 3221     		movs	r1, #50
 8758 0582 01FB03F3 		mul	r3, r1, r3
 8759 0586 1A44     		add	r2, r2, r3
 8760 0588 B7F8A036 		ldrh	r3, [r7, #1696]
 8761 058c 5B00     		lsls	r3, r3, #1
 8762 058e 0133     		adds	r3, r3, #1
 8763 0590 6D49     		ldr	r1, .L428
 8764 0592 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 8765 0594 1846     		mov	r0, r3
 8766 0596 6D49     		ldr	r1, .L428+4
 8767 0598 0346     		mov	r3, r0
 8768 059a 5B00     		lsls	r3, r3, #1
 8769 059c 0344     		add	r3, r3, r0
 8770 059e 0B44     		add	r3, r3, r1
 8771 05a0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 210


 8772 05a2 07F58A73 		add	r3, r7, #276
 8773 05a6 9954     		strb	r1, [r3, r2]
1414:..\src/command_processing.c ****                     packet_data[8+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*
 8774              		.loc 1 1414 0
 8775 05a8 B7F89436 		ldrh	r3, [r7, #1684]
 8776 05ac 03F10802 		add	r2, r3, #8
 8777 05b0 B7F8A036 		ldrh	r3, [r7, #1696]
 8778 05b4 3221     		movs	r1, #50
 8779 05b6 01FB03F3 		mul	r3, r1, r3
 8780 05ba 1A44     		add	r2, r2, r3
 8781 05bc B7F8A036 		ldrh	r3, [r7, #1696]
 8782 05c0 5B00     		lsls	r3, r3, #1
 8783 05c2 0133     		adds	r3, r3, #1
 8784 05c4 6049     		ldr	r1, .L428
 8785 05c6 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 8786 05c8 1846     		mov	r0, r3
 8787 05ca 6049     		ldr	r1, .L428+4
 8788 05cc 0346     		mov	r3, r0
 8789 05ce 5B00     		lsls	r3, r3, #1
 8790 05d0 0344     		add	r3, r3, r0
 8791 05d2 0B44     		add	r3, r3, r1
 8792 05d4 0133     		adds	r3, r3, #1
 8793 05d6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 8794 05d8 07F58A73 		add	r3, r7, #276
 8795 05dc 9954     		strb	r1, [r3, r2]
1415:..\src/command_processing.c ****                     packet_data[9+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*
 8796              		.loc 1 1415 0
 8797 05de B7F89436 		ldrh	r3, [r7, #1684]
 8798 05e2 03F10902 		add	r2, r3, #9
 8799 05e6 B7F8A036 		ldrh	r3, [r7, #1696]
 8800 05ea 3221     		movs	r1, #50
 8801 05ec 01FB03F3 		mul	r3, r1, r3
 8802 05f0 1A44     		add	r2, r2, r3
 8803 05f2 B7F8A036 		ldrh	r3, [r7, #1696]
 8804 05f6 5B00     		lsls	r3, r3, #1
 8805 05f8 0133     		adds	r3, r3, #1
 8806 05fa 5349     		ldr	r1, .L428
 8807 05fc CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 8808 05fe 1846     		mov	r0, r3
 8809 0600 5249     		ldr	r1, .L428+4
 8810 0602 0346     		mov	r3, r0
 8811 0604 5B00     		lsls	r3, r3, #1
 8812 0606 0344     		add	r3, r3, r0
 8813 0608 0B44     		add	r3, r3, r1
 8814 060a 0233     		adds	r3, r3, #2
 8815 060c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 8816 060e 07F58A73 		add	r3, r7, #276
 8817 0612 9954     		strb	r1, [r3, r2]
1416:..\src/command_processing.c ****                 
1417:..\src/command_processing.c ****                     for(j = mag_param_str_len; j != 0; j--)
 8818              		.loc 1 1417 0
 8819 0614 97F89036 		ldrb	r3, [r7, #1680]	@ zero_extendqisi2
 8820 0618 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 8821 061c 1FE0     		b	.L399
 8822              	.L400:
1418:..\src/command_processing.c ****                         packet_data[10+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = ma
 8823              		.loc 1 1418 0 discriminator 3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 211


 8824 061e B7F89436 		ldrh	r3, [r7, #1684]
 8825 0622 03F10A02 		add	r2, r3, #10
 8826 0626 B7F8A036 		ldrh	r3, [r7, #1696]
 8827 062a 3221     		movs	r1, #50
 8828 062c 01FB03F3 		mul	r3, r1, r3
 8829 0630 1A44     		add	r2, r2, r3
 8830 0632 97F89036 		ldrb	r3, [r7, #1680]	@ zero_extendqisi2
 8831 0636 1A44     		add	r2, r2, r3
 8832 0638 B7F8A236 		ldrh	r3, [r7, #1698]
 8833 063c D31A     		subs	r3, r2, r3
 8834 063e 97F89016 		ldrb	r1, [r7, #1680]	@ zero_extendqisi2
 8835 0642 B7F8A226 		ldrh	r2, [r7, #1698]
 8836 0646 8A1A     		subs	r2, r1, r2
 8837 0648 07F1D801 		add	r1, r7, #216
 8838 064c 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 8839 064e 07F58A72 		add	r2, r7, #276
 8840 0652 D154     		strb	r1, [r2, r3]
1417:..\src/command_processing.c ****                         packet_data[10+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = ma
 8841              		.loc 1 1417 0 discriminator 3
 8842 0654 B7F8A236 		ldrh	r3, [r7, #1698]
 8843 0658 013B     		subs	r3, r3, #1
 8844 065a A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 8845              	.L399:
1417:..\src/command_processing.c ****                         packet_data[10+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = ma
 8846              		.loc 1 1417 0 is_stmt 0 discriminator 1
 8847 065e B7F8A236 		ldrh	r3, [r7, #1698]
 8848 0662 002B     		cmp	r3, #0
 8849 0664 DBD1     		bne	.L400
 8850              	.L398:
1396:..\src/command_processing.c ****                 packet_data[2+start_byte + PARAM_BYTE_SLOT*k] = TYPE_UINT8;
 8851              		.loc 1 1396 0 is_stmt 1 discriminator 2
 8852 0666 B7F8A036 		ldrh	r3, [r7, #1696]
 8853 066a 0133     		adds	r3, r3, #1
 8854 066c A7F8A036 		strh	r3, [r7, #1696]	@ movhi
 8855              	.L394:
1396:..\src/command_processing.c ****                 packet_data[2+start_byte + PARAM_BYTE_SLOT*k] = TYPE_UINT8;
 8856              		.loc 1 1396 0 is_stmt 0 discriminator 1
 8857 0670 B7F8A026 		ldrh	r2, [r7, #1696]
 8858 0674 B7F8A636 		ldrh	r3, [r7, #1702]
 8859 0678 9A42     		cmp	r2, r3
 8860 067a FFF4D9AE 		bcc	.L401
1419:..\src/command_processing.c ****                 }
1420:..\src/command_processing.c ****             }
1421:..\src/command_processing.c ****             
1422:..\src/command_processing.c ****             /*-----------------ID-----------------*/
1423:..\src/command_processing.c ****             
1424:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT*num_mag_cal_params;
 8861              		.loc 1 1424 0 is_stmt 1
 8862 067e B7F8A636 		ldrh	r3, [r7, #1702]	@ movhi
 8863 0682 1A46     		mov	r2, r3	@ movhi
 8864 0684 9200     		lsls	r2, r2, #2
 8865 0686 1344     		add	r3, r3, r2
 8866 0688 1A46     		mov	r2, r3	@ movhi
 8867 068a 9100     		lsls	r1, r2, #2
 8868 068c 1A46     		mov	r2, r3	@ movhi
 8869 068e 0B46     		mov	r3, r1	@ movhi
 8870 0690 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 212


 8871 0692 5B00     		lsls	r3, r3, #1
 8872 0694 9AB2     		uxth	r2, r3
 8873 0696 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 8874 069a 1344     		add	r3, r3, r2
 8875 069c A7F89436 		strh	r3, [r7, #1684]	@ movhi
1425:..\src/command_processing.c ****             sprintf(id_str, "%u - Device ID:", first_imu_parameter-1);
 8876              		.loc 1 1425 0
 8877 06a0 B7F89836 		ldrh	r3, [r7, #1688]
 8878 06a4 5A1E     		subs	r2, r3, #1
 8879 06a6 07F1C803 		add	r3, r7, #200
 8880 06aa 2A49     		ldr	r1, .L428+12
 8881 06ac 1846     		mov	r0, r3
 8882 06ae FFF7FEFF 		bl	sprintf
1426:..\src/command_processing.c ****             id_str_len = strlen(id_str);
 8883              		.loc 1 1426 0
 8884 06b2 07F1C803 		add	r3, r7, #200
 8885 06b6 1846     		mov	r0, r3
 8886 06b8 FFF7FEFF 		bl	strlen
 8887 06bc 0346     		mov	r3, r0
 8888 06be 87F89336 		strb	r3, [r7, #1683]
1427:..\src/command_processing.c ****             packet_data[2+start_byte] = TYPE_UINT8;
 8889              		.loc 1 1427 0
 8890 06c2 B7F89436 		ldrh	r3, [r7, #1684]
 8891 06c6 0233     		adds	r3, r3, #2
 8892 06c8 07F58A72 		add	r2, r7, #276
 8893 06cc 0221     		movs	r1, #2
 8894 06ce D154     		strb	r1, [r2, r3]
1428:..\src/command_processing.c ****             packet_data[3+start_byte] = 1;
 8895              		.loc 1 1428 0
 8896 06d0 B7F89436 		ldrh	r3, [r7, #1684]
 8897 06d4 0333     		adds	r3, r3, #3
 8898 06d6 07F58A72 		add	r2, r7, #276
 8899 06da 0121     		movs	r1, #1
 8900 06dc D154     		strb	r1, [r2, r3]
1429:..\src/command_processing.c ****             packet_data[4+start_byte] = c_mem.dev.id;
 8901              		.loc 1 1429 0
 8902 06de B7F89436 		ldrh	r3, [r7, #1684]
 8903 06e2 0433     		adds	r3, r3, #4
 8904 06e4 1C4A     		ldr	r2, .L428+16
 8905 06e6 92F8A010 		ldrb	r1, [r2, #160]	@ zero_extendqisi2
 8906 06ea 07F58A72 		add	r2, r7, #276
 8907 06ee D154     		strb	r1, [r2, r3]
1430:..\src/command_processing.c ****             for(i = id_str_len; i != 0; i--)
 8908              		.loc 1 1430 0
 8909 06f0 97F89336 		ldrb	r3, [r7, #1683]	@ zero_extendqisi2
 8910 06f4 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 8911 06f8 18E0     		b	.L402
 8912              	.L403:
1431:..\src/command_processing.c ****                 packet_data[5+start_byte + id_str_len - i] = id_str[id_str_len - i];
 8913              		.loc 1 1431 0 discriminator 3
 8914 06fa B7F89436 		ldrh	r3, [r7, #1684]
 8915 06fe 5A1D     		adds	r2, r3, #5
 8916 0700 97F89336 		ldrb	r3, [r7, #1683]	@ zero_extendqisi2
 8917 0704 1A44     		add	r2, r2, r3
 8918 0706 B7F8A436 		ldrh	r3, [r7, #1700]
 8919 070a D31A     		subs	r3, r2, r3
 8920 070c 97F89316 		ldrb	r1, [r7, #1683]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 213


 8921 0710 B7F8A426 		ldrh	r2, [r7, #1700]
 8922 0714 8A1A     		subs	r2, r1, r2
 8923 0716 07F1C801 		add	r1, r7, #200
 8924 071a 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 8925 071c 07F58A72 		add	r2, r7, #276
 8926 0720 D154     		strb	r1, [r2, r3]
1430:..\src/command_processing.c ****             for(i = id_str_len; i != 0; i--)
 8927              		.loc 1 1430 0 discriminator 3
 8928 0722 B7F8A436 		ldrh	r3, [r7, #1700]
 8929 0726 013B     		subs	r3, r3, #1
 8930 0728 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 8931              	.L402:
1430:..\src/command_processing.c ****             for(i = id_str_len; i != 0; i--)
 8932              		.loc 1 1430 0 is_stmt 0 discriminator 1
 8933 072c B7F8A436 		ldrh	r3, [r7, #1700]
 8934 0730 002B     		cmp	r3, #0
 8935 0732 E2D1     		bne	.L403
1432:..\src/command_processing.c ****                 
1433:..\src/command_processing.c ****             /*-------------GET IMUS MODE-------------*/
1434:..\src/command_processing.c ****             
1435:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT;
 8936              		.loc 1 1435 0 is_stmt 1
 8937 0734 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 8938 0738 3233     		adds	r3, r3, #50
 8939 073a A7F89436 		strh	r3, [r7, #1684]	@ movhi
1436:..\src/command_processing.c ****             for (i = 0; i < (uint8)N_IMU_Connected; i++){
 8940              		.loc 1 1436 0
 8941 073e 0023     		movs	r3, #0
 8942 0740 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 8943 0744 38E1     		b	.L404
 8944              	.L429:
 8945 0746 00BF     		.align	2
 8946              	.L428:
 8947 0748 00000000 		.word	IMU_connected
 8948 074c 00000000 		.word	MagCal
 8949 0750 00000000 		.word	N_IMU_Connected
 8950 0754 CC100000 		.word	.LC146
 8951 0758 00000000 		.word	c_mem
 8952              	.L407:
1437:..\src/command_processing.c ****                 sprintf(imu_table_str, "%u - IMU %d configuration:", first_imu_parameter + i, (int)
 8953              		.loc 1 1437 0
 8954 075c B7F89826 		ldrh	r2, [r7, #1688]
 8955 0760 B7F8A436 		ldrh	r3, [r7, #1700]
 8956 0764 D118     		adds	r1, r2, r3
 8957 0766 B7F8A436 		ldrh	r3, [r7, #1700]
 8958 076a D54A     		ldr	r2, .L430
 8959 076c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8960 076e 07F19C00 		add	r0, r7, #156
 8961 0772 0A46     		mov	r2, r1
 8962 0774 D349     		ldr	r1, .L430+4
 8963 0776 FFF7FEFF 		bl	sprintf
1438:..\src/command_processing.c ****                 imu_table_str_len = strlen(imu_table_str);
 8964              		.loc 1 1438 0
 8965 077a 07F19C03 		add	r3, r7, #156
 8966 077e 1846     		mov	r0, r3
 8967 0780 FFF7FEFF 		bl	strlen
 8968 0784 0346     		mov	r3, r0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 214


 8969 0786 87F88F36 		strb	r3, [r7, #1679]
1439:..\src/command_processing.c ****             
1440:..\src/command_processing.c ****                 packet_data[(uint16)(2 + start_byte + PARAM_BYTE_SLOT*i)] = TYPE_UINT8;
 8970              		.loc 1 1440 0
 8971 078a B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 8972 078e 1A46     		mov	r2, r3	@ movhi
 8973 0790 9200     		lsls	r2, r2, #2
 8974 0792 1344     		add	r3, r3, r2
 8975 0794 1A46     		mov	r2, r3	@ movhi
 8976 0796 9100     		lsls	r1, r2, #2
 8977 0798 1A46     		mov	r2, r3	@ movhi
 8978 079a 0B46     		mov	r3, r1	@ movhi
 8979 079c 1344     		add	r3, r3, r2
 8980 079e 5B00     		lsls	r3, r3, #1
 8981 07a0 9AB2     		uxth	r2, r3
 8982 07a2 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 8983 07a6 1344     		add	r3, r3, r2
 8984 07a8 9BB2     		uxth	r3, r3
 8985 07aa 0233     		adds	r3, r3, #2
 8986 07ac 9BB2     		uxth	r3, r3
 8987 07ae 1A46     		mov	r2, r3
 8988 07b0 07F58A73 		add	r3, r7, #276
 8989 07b4 0221     		movs	r1, #2
 8990 07b6 9954     		strb	r1, [r3, r2]
1441:..\src/command_processing.c ****                 packet_data[(uint16)(3 + start_byte + PARAM_BYTE_SLOT*i)] = 5;
 8991              		.loc 1 1441 0
 8992 07b8 B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 8993 07bc 1A46     		mov	r2, r3	@ movhi
 8994 07be 9200     		lsls	r2, r2, #2
 8995 07c0 1344     		add	r3, r3, r2
 8996 07c2 1A46     		mov	r2, r3	@ movhi
 8997 07c4 9100     		lsls	r1, r2, #2
 8998 07c6 1A46     		mov	r2, r3	@ movhi
 8999 07c8 0B46     		mov	r3, r1	@ movhi
 9000 07ca 1344     		add	r3, r3, r2
 9001 07cc 5B00     		lsls	r3, r3, #1
 9002 07ce 9AB2     		uxth	r2, r3
 9003 07d0 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 9004 07d4 1344     		add	r3, r3, r2
 9005 07d6 9BB2     		uxth	r3, r3
 9006 07d8 0333     		adds	r3, r3, #3
 9007 07da 9BB2     		uxth	r3, r3
 9008 07dc 1A46     		mov	r2, r3
 9009 07de 07F58A73 		add	r3, r7, #276
 9010 07e2 0521     		movs	r1, #5
 9011 07e4 9954     		strb	r1, [r3, r2]
1442:..\src/command_processing.c ****                 
1443:..\src/command_processing.c ****                 packet_data[(uint16)(4 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 9012              		.loc 1 1443 0
 9013 07e6 B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 9014 07ea 1A46     		mov	r2, r3	@ movhi
 9015 07ec 9200     		lsls	r2, r2, #2
 9016 07ee 1344     		add	r3, r3, r2
 9017 07f0 1A46     		mov	r2, r3	@ movhi
 9018 07f2 9100     		lsls	r1, r2, #2
 9019 07f4 1A46     		mov	r2, r3	@ movhi
 9020 07f6 0B46     		mov	r3, r1	@ movhi
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 215


 9021 07f8 1344     		add	r3, r3, r2
 9022 07fa 5B00     		lsls	r3, r3, #1
 9023 07fc 9AB2     		uxth	r2, r3
 9024 07fe B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 9025 0802 1344     		add	r3, r3, r2
 9026 0804 9BB2     		uxth	r3, r3
 9027 0806 0433     		adds	r3, r3, #4
 9028 0808 9BB2     		uxth	r3, r3
 9029 080a 1846     		mov	r0, r3
 9030 080c B7F8A436 		ldrh	r3, [r7, #1700]
 9031 0810 AB4A     		ldr	r2, .L430
 9032 0812 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9033 0814 1946     		mov	r1, r3
 9034 0816 AC4A     		ldr	r2, .L430+8
 9035 0818 0B46     		mov	r3, r1
 9036 081a 9B00     		lsls	r3, r3, #2
 9037 081c 0B44     		add	r3, r3, r1
 9038 081e 1344     		add	r3, r3, r2
 9039 0820 03F20223 		addw	r3, r3, #514
 9040 0824 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 9041 0826 07F58A73 		add	r3, r7, #276
 9042 082a 1A54     		strb	r2, [r3, r0]
1444:..\src/command_processing.c ****                 packet_data[(uint16)(5 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 9043              		.loc 1 1444 0
 9044 082c B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 9045 0830 1A46     		mov	r2, r3	@ movhi
 9046 0832 9200     		lsls	r2, r2, #2
 9047 0834 1344     		add	r3, r3, r2
 9048 0836 1A46     		mov	r2, r3	@ movhi
 9049 0838 9100     		lsls	r1, r2, #2
 9050 083a 1A46     		mov	r2, r3	@ movhi
 9051 083c 0B46     		mov	r3, r1	@ movhi
 9052 083e 1344     		add	r3, r3, r2
 9053 0840 5B00     		lsls	r3, r3, #1
 9054 0842 9AB2     		uxth	r2, r3
 9055 0844 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 9056 0848 1344     		add	r3, r3, r2
 9057 084a 9BB2     		uxth	r3, r3
 9058 084c 0533     		adds	r3, r3, #5
 9059 084e 9BB2     		uxth	r3, r3
 9060 0850 1846     		mov	r0, r3
 9061 0852 B7F8A436 		ldrh	r3, [r7, #1700]
 9062 0856 9A4A     		ldr	r2, .L430
 9063 0858 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9064 085a 1946     		mov	r1, r3
 9065 085c 9A4A     		ldr	r2, .L430+8
 9066 085e 0B46     		mov	r3, r1
 9067 0860 9B00     		lsls	r3, r3, #2
 9068 0862 0B44     		add	r3, r3, r1
 9069 0864 1344     		add	r3, r3, r2
 9070 0866 03F20323 		addw	r3, r3, #515
 9071 086a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 9072 086c 07F58A73 		add	r3, r7, #276
 9073 0870 1A54     		strb	r2, [r3, r0]
1445:..\src/command_processing.c ****                 packet_data[(uint16)(6 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 9074              		.loc 1 1445 0
 9075 0872 B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 216


 9076 0876 1A46     		mov	r2, r3	@ movhi
 9077 0878 9200     		lsls	r2, r2, #2
 9078 087a 1344     		add	r3, r3, r2
 9079 087c 1A46     		mov	r2, r3	@ movhi
 9080 087e 9100     		lsls	r1, r2, #2
 9081 0880 1A46     		mov	r2, r3	@ movhi
 9082 0882 0B46     		mov	r3, r1	@ movhi
 9083 0884 1344     		add	r3, r3, r2
 9084 0886 5B00     		lsls	r3, r3, #1
 9085 0888 9AB2     		uxth	r2, r3
 9086 088a B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 9087 088e 1344     		add	r3, r3, r2
 9088 0890 9BB2     		uxth	r3, r3
 9089 0892 0633     		adds	r3, r3, #6
 9090 0894 9BB2     		uxth	r3, r3
 9091 0896 1846     		mov	r0, r3
 9092 0898 B7F8A436 		ldrh	r3, [r7, #1700]
 9093 089c 884A     		ldr	r2, .L430
 9094 089e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9095 08a0 1946     		mov	r1, r3
 9096 08a2 894A     		ldr	r2, .L430+8
 9097 08a4 0B46     		mov	r3, r1
 9098 08a6 9B00     		lsls	r3, r3, #2
 9099 08a8 0B44     		add	r3, r3, r1
 9100 08aa 1344     		add	r3, r3, r2
 9101 08ac 03F50173 		add	r3, r3, #516
 9102 08b0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 9103 08b2 07F58A73 		add	r3, r7, #276
 9104 08b6 1A54     		strb	r2, [r3, r0]
1446:..\src/command_processing.c ****                 packet_data[(uint16)(7 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 9105              		.loc 1 1446 0
 9106 08b8 B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 9107 08bc 1A46     		mov	r2, r3	@ movhi
 9108 08be 9200     		lsls	r2, r2, #2
 9109 08c0 1344     		add	r3, r3, r2
 9110 08c2 1A46     		mov	r2, r3	@ movhi
 9111 08c4 9100     		lsls	r1, r2, #2
 9112 08c6 1A46     		mov	r2, r3	@ movhi
 9113 08c8 0B46     		mov	r3, r1	@ movhi
 9114 08ca 1344     		add	r3, r3, r2
 9115 08cc 5B00     		lsls	r3, r3, #1
 9116 08ce 9AB2     		uxth	r2, r3
 9117 08d0 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 9118 08d4 1344     		add	r3, r3, r2
 9119 08d6 9BB2     		uxth	r3, r3
 9120 08d8 0733     		adds	r3, r3, #7
 9121 08da 9BB2     		uxth	r3, r3
 9122 08dc 1846     		mov	r0, r3
 9123 08de B7F8A436 		ldrh	r3, [r7, #1700]
 9124 08e2 774A     		ldr	r2, .L430
 9125 08e4 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9126 08e6 1946     		mov	r1, r3
 9127 08e8 774A     		ldr	r2, .L430+8
 9128 08ea 0B46     		mov	r3, r1
 9129 08ec 9B00     		lsls	r3, r3, #2
 9130 08ee 0B44     		add	r3, r3, r1
 9131 08f0 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 217


 9132 08f2 03F20523 		addw	r3, r3, #517
 9133 08f6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 9134 08f8 07F58A73 		add	r3, r7, #276
 9135 08fc 1A54     		strb	r2, [r3, r0]
1447:..\src/command_processing.c ****                 packet_data[(uint16)(8 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 9136              		.loc 1 1447 0
 9137 08fe B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 9138 0902 1A46     		mov	r2, r3	@ movhi
 9139 0904 9200     		lsls	r2, r2, #2
 9140 0906 1344     		add	r3, r3, r2
 9141 0908 1A46     		mov	r2, r3	@ movhi
 9142 090a 9100     		lsls	r1, r2, #2
 9143 090c 1A46     		mov	r2, r3	@ movhi
 9144 090e 0B46     		mov	r3, r1	@ movhi
 9145 0910 1344     		add	r3, r3, r2
 9146 0912 5B00     		lsls	r3, r3, #1
 9147 0914 9AB2     		uxth	r2, r3
 9148 0916 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 9149 091a 1344     		add	r3, r3, r2
 9150 091c 9BB2     		uxth	r3, r3
 9151 091e 0833     		adds	r3, r3, #8
 9152 0920 9BB2     		uxth	r3, r3
 9153 0922 1846     		mov	r0, r3
 9154 0924 B7F8A436 		ldrh	r3, [r7, #1700]
 9155 0928 654A     		ldr	r2, .L430
 9156 092a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9157 092c 1946     		mov	r1, r3
 9158 092e 664A     		ldr	r2, .L430+8
 9159 0930 0B46     		mov	r3, r1
 9160 0932 9B00     		lsls	r3, r3, #2
 9161 0934 0B44     		add	r3, r3, r1
 9162 0936 1344     		add	r3, r3, r2
 9163 0938 03F20623 		addw	r3, r3, #518
 9164 093c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 9165 093e 07F58A73 		add	r3, r7, #276
 9166 0942 1A54     		strb	r2, [r3, r0]
1448:..\src/command_processing.c **** 
1449:..\src/command_processing.c ****                 for(j = imu_table_str_len; j != 0; j--)
 9167              		.loc 1 1449 0
 9168 0944 97F88F36 		ldrb	r3, [r7, #1679]	@ zero_extendqisi2
 9169 0948 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 9170 094c 2BE0     		b	.L405
 9171              	.L406:
1450:..\src/command_processing.c ****                     packet_data[(uint16)(9 + start_byte + PARAM_BYTE_SLOT*i + imu_table_str_len - j
 9172              		.loc 1 1450 0 discriminator 3
 9173 094e B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 9174 0952 1A46     		mov	r2, r3	@ movhi
 9175 0954 9200     		lsls	r2, r2, #2
 9176 0956 1344     		add	r3, r3, r2
 9177 0958 1A46     		mov	r2, r3	@ movhi
 9178 095a 9100     		lsls	r1, r2, #2
 9179 095c 1A46     		mov	r2, r3	@ movhi
 9180 095e 0B46     		mov	r3, r1	@ movhi
 9181 0960 1344     		add	r3, r3, r2
 9182 0962 5B00     		lsls	r3, r3, #1
 9183 0964 9AB2     		uxth	r2, r3
 9184 0966 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 218


 9185 096a 1344     		add	r3, r3, r2
 9186 096c 9AB2     		uxth	r2, r3
 9187 096e 97F88F36 		ldrb	r3, [r7, #1679]	@ zero_extendqisi2
 9188 0972 9BB2     		uxth	r3, r3
 9189 0974 1344     		add	r3, r3, r2
 9190 0976 9AB2     		uxth	r2, r3
 9191 0978 B7F8A236 		ldrh	r3, [r7, #1698]	@ movhi
 9192 097c D31A     		subs	r3, r2, r3
 9193 097e 9BB2     		uxth	r3, r3
 9194 0980 0933     		adds	r3, r3, #9
 9195 0982 9BB2     		uxth	r3, r3
 9196 0984 1946     		mov	r1, r3
 9197 0986 97F88F26 		ldrb	r2, [r7, #1679]	@ zero_extendqisi2
 9198 098a B7F8A236 		ldrh	r3, [r7, #1698]
 9199 098e D31A     		subs	r3, r2, r3
 9200 0990 07F19C02 		add	r2, r7, #156
 9201 0994 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 9202 0996 07F58A73 		add	r3, r7, #276
 9203 099a 5A54     		strb	r2, [r3, r1]
1449:..\src/command_processing.c ****                     packet_data[(uint16)(9 + start_byte + PARAM_BYTE_SLOT*i + imu_table_str_len - j
 9204              		.loc 1 1449 0 discriminator 3
 9205 099c B7F8A236 		ldrh	r3, [r7, #1698]
 9206 09a0 013B     		subs	r3, r3, #1
 9207 09a2 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 9208              	.L405:
1449:..\src/command_processing.c ****                     packet_data[(uint16)(9 + start_byte + PARAM_BYTE_SLOT*i + imu_table_str_len - j
 9209              		.loc 1 1449 0 is_stmt 0 discriminator 1
 9210 09a6 B7F8A236 		ldrh	r3, [r7, #1698]
 9211 09aa 002B     		cmp	r3, #0
 9212 09ac CFD1     		bne	.L406
1436:..\src/command_processing.c ****                 sprintf(imu_table_str, "%u - IMU %d configuration:", first_imu_parameter + i, (int)
 9213              		.loc 1 1436 0 is_stmt 1 discriminator 2
 9214 09ae B7F8A436 		ldrh	r3, [r7, #1700]
 9215 09b2 0133     		adds	r3, r3, #1
 9216 09b4 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 9217              	.L404:
1436:..\src/command_processing.c ****                 sprintf(imu_table_str, "%u - IMU %d configuration:", first_imu_parameter + i, (int)
 9218              		.loc 1 1436 0 is_stmt 0 discriminator 1
 9219 09b8 444B     		ldr	r3, .L430+12
 9220 09ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9221 09bc 9BB2     		uxth	r3, r3
 9222 09be B7F8A426 		ldrh	r2, [r7, #1700]
 9223 09c2 9A42     		cmp	r2, r3
 9224 09c4 FFF4CAAE 		bcc	.L407
1451:..\src/command_processing.c ****             }  
1452:..\src/command_processing.c ****           
1453:..\src/command_processing.c **** 
1454:..\src/command_processing.c ****             /*-----------------SPI DELAY-----------------*/
1455:..\src/command_processing.c ****             
1456:..\src/command_processing.c ****             start_byte = start_byte + (uint16)(PARAM_BYTE_SLOT*N_IMU_Connected);
 9225              		.loc 1 1456 0 is_stmt 1
 9226 09c8 404B     		ldr	r3, .L430+12
 9227 09ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9228 09cc 9BB2     		uxth	r3, r3
 9229 09ce 1A46     		mov	r2, r3	@ movhi
 9230 09d0 9200     		lsls	r2, r2, #2
 9231 09d2 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 219


 9232 09d4 1A46     		mov	r2, r3	@ movhi
 9233 09d6 9100     		lsls	r1, r2, #2
 9234 09d8 1A46     		mov	r2, r3	@ movhi
 9235 09da 0B46     		mov	r3, r1	@ movhi
 9236 09dc 1344     		add	r3, r3, r2
 9237 09de 5B00     		lsls	r3, r3, #1
 9238 09e0 9AB2     		uxth	r2, r3
 9239 09e2 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 9240 09e6 1344     		add	r3, r3, r2
 9241 09e8 A7F89436 		strh	r3, [r7, #1684]	@ movhi
1457:..\src/command_processing.c ****             sprintf(spi_read_delay_str, "%u - SPI read delay:", first_imu_parameter+N_IMU_Connected
 9242              		.loc 1 1457 0
 9243 09ec B7F89836 		ldrh	r3, [r7, #1688]
 9244 09f0 364A     		ldr	r2, .L430+12
 9245 09f2 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9246 09f4 1A44     		add	r2, r2, r3
 9247 09f6 07F18003 		add	r3, r7, #128
 9248 09fa 3549     		ldr	r1, .L430+16
 9249 09fc 1846     		mov	r0, r3
 9250 09fe FFF7FEFF 		bl	sprintf
1458:..\src/command_processing.c ****             packet_data[2+start_byte] = TYPE_FLAG;
 9251              		.loc 1 1458 0
 9252 0a02 B7F89436 		ldrh	r3, [r7, #1684]
 9253 0a06 0233     		adds	r3, r3, #2
 9254 0a08 07F58A72 		add	r2, r7, #276
 9255 0a0c 0021     		movs	r1, #0
 9256 0a0e D154     		strb	r1, [r2, r3]
1459:..\src/command_processing.c ****             packet_data[3+start_byte] = 1;
 9257              		.loc 1 1459 0
 9258 0a10 B7F89436 		ldrh	r3, [r7, #1684]
 9259 0a14 0333     		adds	r3, r3, #3
 9260 0a16 07F58A72 		add	r2, r7, #276
 9261 0a1a 0121     		movs	r1, #1
 9262 0a1c D154     		strb	r1, [r2, r3]
1460:..\src/command_processing.c ****             packet_data[4+start_byte] = c_mem.imu.SPI_read_delay;
 9263              		.loc 1 1460 0
 9264 0a1e B7F89436 		ldrh	r3, [r7, #1684]
 9265 0a22 0433     		adds	r3, r3, #4
 9266 0a24 284A     		ldr	r2, .L430+8
 9267 0a26 92F80112 		ldrb	r1, [r2, #513]	@ zero_extendqisi2
 9268 0a2a 07F58A72 		add	r2, r7, #276
 9269 0a2e D154     		strb	r1, [r2, r3]
1461:..\src/command_processing.c ****             switch(c_mem.imu.SPI_read_delay) {
 9270              		.loc 1 1461 0
 9271 0a30 254B     		ldr	r3, .L430+8
 9272 0a32 93F80132 		ldrb	r3, [r3, #513]	@ zero_extendqisi2
 9273 0a36 012B     		cmp	r3, #1
 9274 0a38 17D0     		beq	.L409
 9275 0a3a 022B     		cmp	r3, #2
 9276 0a3c 28D0     		beq	.L410
 9277 0a3e 002B     		cmp	r3, #0
 9278 0a40 00D0     		beq	.L411
1462:..\src/command_processing.c ****                 case 0: 
1463:..\src/command_processing.c ****                     strcat(spi_read_delay_str, " None"); 
1464:..\src/command_processing.c ****                     spi_read_delay_str_len = 26;
1465:..\src/command_processing.c ****                     break;
1466:..\src/command_processing.c ****                 case 1: 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 220


1467:..\src/command_processing.c ****                     strcat(spi_read_delay_str, " Low"); 
1468:..\src/command_processing.c ****                     spi_read_delay_str_len = 25;
1469:..\src/command_processing.c ****                     break;
1470:..\src/command_processing.c ****                 case 2: 
1471:..\src/command_processing.c ****                     strcat(spi_read_delay_str, " High");
1472:..\src/command_processing.c ****                     spi_read_delay_str_len = 26;
1473:..\src/command_processing.c ****                     break;
1474:..\src/command_processing.c ****                 default:
1475:..\src/command_processing.c ****                     break;
 9279              		.loc 1 1475 0
 9280 0a42 38E0     		b	.L412
 9281              	.L411:
1463:..\src/command_processing.c ****                     spi_read_delay_str_len = 26;
 9282              		.loc 1 1463 0
 9283 0a44 07F18003 		add	r3, r7, #128
 9284 0a48 1846     		mov	r0, r3
 9285 0a4a FFF7FEFF 		bl	strlen
 9286 0a4e 0346     		mov	r3, r0
 9287 0a50 1A46     		mov	r2, r3
 9288 0a52 07F18003 		add	r3, r7, #128
 9289 0a56 1344     		add	r3, r3, r2
 9290 0a58 1E4A     		ldr	r2, .L430+20
 9291 0a5a 1068     		ldr	r0, [r2]	@ unaligned
 9292 0a5c 1860     		str	r0, [r3]	@ unaligned
 9293 0a5e 9288     		ldrh	r2, [r2, #4]	@ unaligned
 9294 0a60 9A80     		strh	r2, [r3, #4]	@ unaligned
1464:..\src/command_processing.c ****                     break;
 9295              		.loc 1 1464 0
 9296 0a62 1A23     		movs	r3, #26
 9297 0a64 87F89D36 		strb	r3, [r7, #1693]
1465:..\src/command_processing.c ****                 case 1: 
 9298              		.loc 1 1465 0
 9299 0a68 25E0     		b	.L412
 9300              	.L409:
1467:..\src/command_processing.c ****                     spi_read_delay_str_len = 25;
 9301              		.loc 1 1467 0
 9302 0a6a 07F18003 		add	r3, r7, #128
 9303 0a6e 1846     		mov	r0, r3
 9304 0a70 FFF7FEFF 		bl	strlen
 9305 0a74 0346     		mov	r3, r0
 9306 0a76 1A46     		mov	r2, r3
 9307 0a78 07F18003 		add	r3, r7, #128
 9308 0a7c 1344     		add	r3, r3, r2
 9309 0a7e 164A     		ldr	r2, .L430+24
 9310 0a80 1068     		ldr	r0, [r2]	@ unaligned
 9311 0a82 1860     		str	r0, [r3]	@ unaligned
 9312 0a84 1279     		ldrb	r2, [r2, #4]
 9313 0a86 1A71     		strb	r2, [r3, #4]
1468:..\src/command_processing.c ****                     break;
 9314              		.loc 1 1468 0
 9315 0a88 1923     		movs	r3, #25
 9316 0a8a 87F89D36 		strb	r3, [r7, #1693]
1469:..\src/command_processing.c ****                 case 2: 
 9317              		.loc 1 1469 0
 9318 0a8e 12E0     		b	.L412
 9319              	.L410:
1471:..\src/command_processing.c ****                     spi_read_delay_str_len = 26;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 221


 9320              		.loc 1 1471 0
 9321 0a90 07F18003 		add	r3, r7, #128
 9322 0a94 1846     		mov	r0, r3
 9323 0a96 FFF7FEFF 		bl	strlen
 9324 0a9a 0346     		mov	r3, r0
 9325 0a9c 1A46     		mov	r2, r3
 9326 0a9e 07F18003 		add	r3, r7, #128
 9327 0aa2 1344     		add	r3, r3, r2
 9328 0aa4 0D4A     		ldr	r2, .L430+28
 9329 0aa6 1068     		ldr	r0, [r2]	@ unaligned
 9330 0aa8 1860     		str	r0, [r3]	@ unaligned
 9331 0aaa 9288     		ldrh	r2, [r2, #4]	@ unaligned
 9332 0aac 9A80     		strh	r2, [r3, #4]	@ unaligned
1472:..\src/command_processing.c ****                     break;
 9333              		.loc 1 1472 0
 9334 0aae 1A23     		movs	r3, #26
 9335 0ab0 87F89D36 		strb	r3, [r7, #1693]
1473:..\src/command_processing.c ****                 default:
 9336              		.loc 1 1473 0
 9337 0ab4 00BF     		nop
 9338              	.L412:
1476:..\src/command_processing.c ****             }            
1477:..\src/command_processing.c ****             for(i = spi_read_delay_str_len; i != 0; i--)
 9339              		.loc 1 1477 0
 9340 0ab6 97F89D36 		ldrb	r3, [r7, #1693]	@ zero_extendqisi2
 9341 0aba A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 9342 0abe 28E0     		b	.L413
 9343              	.L431:
 9344              		.align	2
 9345              	.L430:
 9346 0ac0 00000000 		.word	IMU_connected
 9347 0ac4 DC100000 		.word	.LC147
 9348 0ac8 00000000 		.word	c_mem
 9349 0acc 00000000 		.word	N_IMU_Connected
 9350 0ad0 F8100000 		.word	.LC148
 9351 0ad4 10110000 		.word	.LC149
 9352 0ad8 18110000 		.word	.LC150
 9353 0adc 20110000 		.word	.LC151
 9354              	.L414:
1478:..\src/command_processing.c ****                 packet_data[5+start_byte + spi_read_delay_str_len - i] = spi_read_delay_str[spi_rea
 9355              		.loc 1 1478 0 discriminator 3
 9356 0ae0 B7F89436 		ldrh	r3, [r7, #1684]
 9357 0ae4 5A1D     		adds	r2, r3, #5
 9358 0ae6 97F89D36 		ldrb	r3, [r7, #1693]	@ zero_extendqisi2
 9359 0aea 1A44     		add	r2, r2, r3
 9360 0aec B7F8A436 		ldrh	r3, [r7, #1700]
 9361 0af0 D31A     		subs	r3, r2, r3
 9362 0af2 97F89D16 		ldrb	r1, [r7, #1693]	@ zero_extendqisi2
 9363 0af6 B7F8A426 		ldrh	r2, [r7, #1700]
 9364 0afa 8A1A     		subs	r2, r1, r2
 9365 0afc 07F18001 		add	r1, r7, #128
 9366 0b00 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 9367 0b02 07F58A72 		add	r2, r7, #276
 9368 0b06 D154     		strb	r1, [r2, r3]
1477:..\src/command_processing.c ****                 packet_data[5+start_byte + spi_read_delay_str_len - i] = spi_read_delay_str[spi_rea
 9369              		.loc 1 1477 0 discriminator 3
 9370 0b08 B7F8A436 		ldrh	r3, [r7, #1700]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 222


 9371 0b0c 013B     		subs	r3, r3, #1
 9372 0b0e A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 9373              	.L413:
1477:..\src/command_processing.c ****                 packet_data[5+start_byte + spi_read_delay_str_len - i] = spi_read_delay_str[spi_rea
 9374              		.loc 1 1477 0 is_stmt 0 discriminator 1
 9375 0b12 B7F8A436 		ldrh	r3, [r7, #1700]
 9376 0b16 002B     		cmp	r3, #0
 9377 0b18 E2D1     		bne	.L414
1479:..\src/command_processing.c ****             //The following byte indicates the number of menus at the end of the packet to send
1480:..\src/command_processing.c ****             packet_data[5+start_byte + spi_read_delay_str_len] = 1;
 9378              		.loc 1 1480 0 is_stmt 1
 9379 0b1a B7F89436 		ldrh	r3, [r7, #1684]
 9380 0b1e 5A1D     		adds	r2, r3, #5
 9381 0b20 97F89D36 		ldrb	r3, [r7, #1693]	@ zero_extendqisi2
 9382 0b24 1344     		add	r3, r3, r2
 9383 0b26 07F58A72 		add	r2, r7, #276
 9384 0b2a 0121     		movs	r1, #1
 9385 0b2c D154     		strb	r1, [r2, r3]
1481:..\src/command_processing.c ****                   
1482:..\src/command_processing.c ****             
1483:..\src/command_processing.c ****             /*------------PARAMETERS MENU-----------*/
1484:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT;
 9386              		.loc 1 1484 0
 9387 0b2e B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 9388 0b32 3233     		adds	r3, r3, #50
 9389 0b34 A7F89436 		strh	r3, [r7, #1684]	@ movhi
1485:..\src/command_processing.c ****             for(i = spi_delay_menu_len; i!= 0; i--)
 9390              		.loc 1 1485 0
 9391 0b38 97F88E36 		ldrb	r3, [r7, #1678]	@ zero_extendqisi2
 9392 0b3c A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 9393 0b40 1AE0     		b	.L415
 9394              	.L416:
1486:..\src/command_processing.c ****                 packet_data[(uint16)(2 + start_byte) + spi_delay_menu_len - i] = spi_delay_menu[spi
 9395              		.loc 1 1486 0 discriminator 3
 9396 0b42 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 9397 0b46 0233     		adds	r3, r3, #2
 9398 0b48 9BB2     		uxth	r3, r3
 9399 0b4a 1A46     		mov	r2, r3
 9400 0b4c 97F88E36 		ldrb	r3, [r7, #1678]	@ zero_extendqisi2
 9401 0b50 1A44     		add	r2, r2, r3
 9402 0b52 B7F8A436 		ldrh	r3, [r7, #1700]
 9403 0b56 D31A     		subs	r3, r2, r3
 9404 0b58 97F88E16 		ldrb	r1, [r7, #1678]	@ zero_extendqisi2
 9405 0b5c B7F8A426 		ldrh	r2, [r7, #1700]
 9406 0b60 8A1A     		subs	r2, r1, r2
 9407 0b62 07F10801 		add	r1, r7, #8
 9408 0b66 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 9409 0b68 07F58A72 		add	r2, r7, #276
 9410 0b6c D154     		strb	r1, [r2, r3]
1485:..\src/command_processing.c ****             for(i = spi_delay_menu_len; i!= 0; i--)
 9411              		.loc 1 1485 0 discriminator 3
 9412 0b6e B7F8A436 		ldrh	r3, [r7, #1700]
 9413 0b72 013B     		subs	r3, r3, #1
 9414 0b74 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 9415              	.L415:
1485:..\src/command_processing.c ****             for(i = spi_delay_menu_len; i!= 0; i--)
 9416              		.loc 1 1485 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 223


 9417 0b78 B7F8A436 		ldrh	r3, [r7, #1700]
 9418 0b7c 002B     		cmp	r3, #0
 9419 0b7e E0D1     		bne	.L416
1487:..\src/command_processing.c **** 
1488:..\src/command_processing.c ****             packet_data[packet_length - 1] = LCRChecksum(packet_data,packet_length - 1);
 9420              		.loc 1 1488 0 is_stmt 1
 9421 0b80 B7F89636 		ldrh	r3, [r7, #1686]
 9422 0b84 5C1E     		subs	r4, r3, #1
 9423 0b86 B7F89636 		ldrh	r3, [r7, #1686]	@ movhi
 9424 0b8a DBB2     		uxtb	r3, r3
 9425 0b8c 013B     		subs	r3, r3, #1
 9426 0b8e DAB2     		uxtb	r2, r3
 9427 0b90 07F58A73 		add	r3, r7, #276
 9428 0b94 1146     		mov	r1, r2
 9429 0b96 1846     		mov	r0, r3
 9430 0b98 FFF7FEFF 		bl	LCRChecksum
 9431 0b9c 0346     		mov	r3, r0
 9432 0b9e 1A46     		mov	r2, r3
 9433 0ba0 07F58A73 		add	r3, r7, #276
 9434 0ba4 1A55     		strb	r2, [r3, r4]
1489:..\src/command_processing.c ****             commWrite(packet_data, packet_length);
 9435              		.loc 1 1489 0
 9436 0ba6 B7F89626 		ldrh	r2, [r7, #1686]
 9437 0baa 07F58A73 		add	r3, r7, #276
 9438 0bae 1146     		mov	r1, r2
 9439 0bb0 1846     		mov	r0, r3
 9440 0bb2 FFF7FEFF 		bl	commWrite
1490:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 9441              		.loc 1 1490 0
 9442 0bb6 FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
1491:..\src/command_processing.c ****         break;
 9443              		.loc 1 1491 0
 9444 0bba 09E1     		b	.L417
 9445              	.L424:
1492:..\src/command_processing.c **** 
1493:..\src/command_processing.c **** //=========================================================     other_params
1494:..\src/command_processing.c ****         default: 
1495:..\src/command_processing.c ****             
1496:..\src/command_processing.c ****             if (index < first_imu_parameter-1)
 9446              		.loc 1 1496 0
 9447 0bbc BB1D     		adds	r3, r7, #6
 9448 0bbe 1A88     		ldrh	r2, [r3]
 9449 0bc0 B7F89836 		ldrh	r3, [r7, #1688]
 9450 0bc4 013B     		subs	r3, r3, #1
 9451 0bc6 9A42     		cmp	r2, r3
 9452 0bc8 C0F20181 		blt	.L425
1497:..\src/command_processing.c ****                 break;
1498:..\src/command_processing.c ****             
1499:..\src/command_processing.c ****             if (index == first_imu_parameter+N_IMU_Connected) {
 9453              		.loc 1 1499 0
 9454 0bcc BB1D     		adds	r3, r7, #6
 9455 0bce 1A88     		ldrh	r2, [r3]
 9456 0bd0 B7F89836 		ldrh	r3, [r7, #1688]
 9457 0bd4 8149     		ldr	r1, .L432
 9458 0bd6 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 9459 0bd8 0B44     		add	r3, r3, r1
 9460 0bda 9A42     		cmp	r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 224


 9461 0bdc 05D1     		bne	.L419
1500:..\src/command_processing.c ****                 g_mem.imu.SPI_read_delay = g_rx.buffer[3];  //SPI read delay - uint8
 9462              		.loc 1 1500 0
 9463 0bde 804B     		ldr	r3, .L432+4
 9464 0be0 DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 9465 0be2 804B     		ldr	r3, .L432+8
 9466 0be4 83F80122 		strb	r2, [r3, #513]
1501:..\src/command_processing.c ****                 break;
 9467              		.loc 1 1501 0
 9468 0be8 F2E0     		b	.L417
 9469              	.L419:
1502:..\src/command_processing.c ****             }
1503:..\src/command_processing.c ****             
1504:..\src/command_processing.c ****             if (index == first_imu_parameter-1) {
 9470              		.loc 1 1504 0
 9471 0bea BB1D     		adds	r3, r7, #6
 9472 0bec 1A88     		ldrh	r2, [r3]
 9473 0bee B7F89836 		ldrh	r3, [r7, #1688]
 9474 0bf2 013B     		subs	r3, r3, #1
 9475 0bf4 9A42     		cmp	r2, r3
 9476 0bf6 05D1     		bne	.L420
1505:..\src/command_processing.c ****                 g_mem.dev.id = g_rx.buffer[3];          //ID - uint8
 9477              		.loc 1 1505 0
 9478 0bf8 794B     		ldr	r3, .L432+4
 9479 0bfa DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 9480 0bfc 794B     		ldr	r3, .L432+8
 9481 0bfe 83F8A020 		strb	r2, [r3, #160]
1506:..\src/command_processing.c ****             }
1507:..\src/command_processing.c ****             else {
1508:..\src/command_processing.c ****             
1509:..\src/command_processing.c ****                 //Set Imu table (index > = first_imu_parameter)
1510:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][0] = g_rx.buffer[3];
1511:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][1] = g_rx.buffer[4];
1512:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][2] = g_rx.buffer[5];
1513:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][3] = g_rx.buffer[6];
1514:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][4] = g_rx.buffer[7];
1515:..\src/command_processing.c ****                 
1516:..\src/command_processing.c ****                 // Recompute IMU packets dimension
1517:..\src/command_processing.c ****                 imus_data_size = 1; //header    
1518:..\src/command_processing.c ****                 for (i = 0; i < N_IMU_Connected; i++)
1519:..\src/command_processing.c ****                 {
1520:..\src/command_processing.c ****                     single_imu_size[IMU_connected[i]] = 1 + 6*g_mem.imu.IMU_conf[IMU_connected[i]][
1521:..\src/command_processing.c ****                     imus_data_size = imus_data_size + single_imu_size[IMU_connected[i]];
1522:..\src/command_processing.c ****                 }
1523:..\src/command_processing.c ****                 imus_data_size = imus_data_size + 1;    //checksum
1524:..\src/command_processing.c ****             
1525:..\src/command_processing.c ****             }
1526:..\src/command_processing.c ****             
1527:..\src/command_processing.c ****         break;
 9482              		.loc 1 1527 0
 9483 0c02 E5E0     		b	.L417
 9484              	.L420:
1510:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][1] = g_rx.buffer[4];
 9485              		.loc 1 1510 0
 9486 0c04 BB1D     		adds	r3, r7, #6
 9487 0c06 1A88     		ldrh	r2, [r3]
 9488 0c08 B7F89836 		ldrh	r3, [r7, #1688]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 225


 9489 0c0c D31A     		subs	r3, r2, r3
 9490 0c0e 764A     		ldr	r2, .L432+12
 9491 0c10 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9492 0c12 1946     		mov	r1, r3
 9493 0c14 724B     		ldr	r3, .L432+4
 9494 0c16 D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 9495 0c18 724A     		ldr	r2, .L432+8
 9496 0c1a 0B46     		mov	r3, r1
 9497 0c1c 9B00     		lsls	r3, r3, #2
 9498 0c1e 0B44     		add	r3, r3, r1
 9499 0c20 1344     		add	r3, r3, r2
 9500 0c22 03F20223 		addw	r3, r3, #514
 9501 0c26 0246     		mov	r2, r0
 9502 0c28 1A70     		strb	r2, [r3]
1511:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][2] = g_rx.buffer[5];
 9503              		.loc 1 1511 0
 9504 0c2a BB1D     		adds	r3, r7, #6
 9505 0c2c 1A88     		ldrh	r2, [r3]
 9506 0c2e B7F89836 		ldrh	r3, [r7, #1688]
 9507 0c32 D31A     		subs	r3, r2, r3
 9508 0c34 6C4A     		ldr	r2, .L432+12
 9509 0c36 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9510 0c38 1946     		mov	r1, r3
 9511 0c3a 694B     		ldr	r3, .L432+4
 9512 0c3c 1879     		ldrb	r0, [r3, #4]	@ zero_extendqisi2
 9513 0c3e 694A     		ldr	r2, .L432+8
 9514 0c40 0B46     		mov	r3, r1
 9515 0c42 9B00     		lsls	r3, r3, #2
 9516 0c44 0B44     		add	r3, r3, r1
 9517 0c46 1344     		add	r3, r3, r2
 9518 0c48 03F20323 		addw	r3, r3, #515
 9519 0c4c 0246     		mov	r2, r0
 9520 0c4e 1A70     		strb	r2, [r3]
1512:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][3] = g_rx.buffer[6];
 9521              		.loc 1 1512 0
 9522 0c50 BB1D     		adds	r3, r7, #6
 9523 0c52 1A88     		ldrh	r2, [r3]
 9524 0c54 B7F89836 		ldrh	r3, [r7, #1688]
 9525 0c58 D31A     		subs	r3, r2, r3
 9526 0c5a 634A     		ldr	r2, .L432+12
 9527 0c5c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9528 0c5e 1946     		mov	r1, r3
 9529 0c60 5F4B     		ldr	r3, .L432+4
 9530 0c62 5879     		ldrb	r0, [r3, #5]	@ zero_extendqisi2
 9531 0c64 5F4A     		ldr	r2, .L432+8
 9532 0c66 0B46     		mov	r3, r1
 9533 0c68 9B00     		lsls	r3, r3, #2
 9534 0c6a 0B44     		add	r3, r3, r1
 9535 0c6c 1344     		add	r3, r3, r2
 9536 0c6e 03F50173 		add	r3, r3, #516
 9537 0c72 0246     		mov	r2, r0
 9538 0c74 1A70     		strb	r2, [r3]
1513:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][4] = g_rx.buffer[7];
 9539              		.loc 1 1513 0
 9540 0c76 BB1D     		adds	r3, r7, #6
 9541 0c78 1A88     		ldrh	r2, [r3]
 9542 0c7a B7F89836 		ldrh	r3, [r7, #1688]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 226


 9543 0c7e D31A     		subs	r3, r2, r3
 9544 0c80 594A     		ldr	r2, .L432+12
 9545 0c82 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9546 0c84 1946     		mov	r1, r3
 9547 0c86 564B     		ldr	r3, .L432+4
 9548 0c88 9879     		ldrb	r0, [r3, #6]	@ zero_extendqisi2
 9549 0c8a 564A     		ldr	r2, .L432+8
 9550 0c8c 0B46     		mov	r3, r1
 9551 0c8e 9B00     		lsls	r3, r3, #2
 9552 0c90 0B44     		add	r3, r3, r1
 9553 0c92 1344     		add	r3, r3, r2
 9554 0c94 03F20523 		addw	r3, r3, #517
 9555 0c98 0246     		mov	r2, r0
 9556 0c9a 1A70     		strb	r2, [r3]
1514:..\src/command_processing.c ****                 
 9557              		.loc 1 1514 0
 9558 0c9c BB1D     		adds	r3, r7, #6
 9559 0c9e 1A88     		ldrh	r2, [r3]
 9560 0ca0 B7F89836 		ldrh	r3, [r7, #1688]
 9561 0ca4 D31A     		subs	r3, r2, r3
 9562 0ca6 504A     		ldr	r2, .L432+12
 9563 0ca8 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9564 0caa 1946     		mov	r1, r3
 9565 0cac 4C4B     		ldr	r3, .L432+4
 9566 0cae D879     		ldrb	r0, [r3, #7]	@ zero_extendqisi2
 9567 0cb0 4C4A     		ldr	r2, .L432+8
 9568 0cb2 0B46     		mov	r3, r1
 9569 0cb4 9B00     		lsls	r3, r3, #2
 9570 0cb6 0B44     		add	r3, r3, r1
 9571 0cb8 1344     		add	r3, r3, r2
 9572 0cba 03F20623 		addw	r3, r3, #518
 9573 0cbe 0246     		mov	r2, r0
 9574 0cc0 1A70     		strb	r2, [r3]
1517:..\src/command_processing.c ****                 for (i = 0; i < N_IMU_Connected; i++)
 9575              		.loc 1 1517 0
 9576 0cc2 4A4B     		ldr	r3, .L432+16
 9577 0cc4 0122     		movs	r2, #1
 9578 0cc6 1A60     		str	r2, [r3]
1518:..\src/command_processing.c ****                 {
 9579              		.loc 1 1518 0
 9580 0cc8 0023     		movs	r3, #0
 9581 0cca A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 9582 0cce 71E0     		b	.L422
 9583              	.L423:
1520:..\src/command_processing.c ****                     imus_data_size = imus_data_size + single_imu_size[IMU_connected[i]];
 9584              		.loc 1 1520 0 discriminator 3
 9585 0cd0 B7F8A436 		ldrh	r3, [r7, #1700]
 9586 0cd4 444A     		ldr	r2, .L432+12
 9587 0cd6 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9588 0cd8 1C46     		mov	r4, r3
 9589 0cda B7F8A436 		ldrh	r3, [r7, #1700]
 9590 0cde 424A     		ldr	r2, .L432+12
 9591 0ce0 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9592 0ce2 1946     		mov	r1, r3
 9593 0ce4 3F4A     		ldr	r2, .L432+8
 9594 0ce6 0B46     		mov	r3, r1
 9595 0ce8 9B00     		lsls	r3, r3, #2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 227


 9596 0cea 0B44     		add	r3, r3, r1
 9597 0cec 1344     		add	r3, r3, r2
 9598 0cee 03F20223 		addw	r3, r3, #514
 9599 0cf2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9600 0cf4 1A46     		mov	r2, r3
 9601 0cf6 1346     		mov	r3, r2
 9602 0cf8 5B00     		lsls	r3, r3, #1
 9603 0cfa 1344     		add	r3, r3, r2
 9604 0cfc 5B00     		lsls	r3, r3, #1
 9605 0cfe 5A1C     		adds	r2, r3, #1
 9606 0d00 B7F8A436 		ldrh	r3, [r7, #1700]
 9607 0d04 3849     		ldr	r1, .L432+12
 9608 0d06 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 9609 0d08 1846     		mov	r0, r3
 9610 0d0a 3649     		ldr	r1, .L432+8
 9611 0d0c 0346     		mov	r3, r0
 9612 0d0e 9B00     		lsls	r3, r3, #2
 9613 0d10 0344     		add	r3, r3, r0
 9614 0d12 0B44     		add	r3, r3, r1
 9615 0d14 03F20323 		addw	r3, r3, #515
 9616 0d18 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9617 0d1a 1946     		mov	r1, r3
 9618 0d1c 0B46     		mov	r3, r1
 9619 0d1e 5B00     		lsls	r3, r3, #1
 9620 0d20 0B44     		add	r3, r3, r1
 9621 0d22 5B00     		lsls	r3, r3, #1
 9622 0d24 1A44     		add	r2, r2, r3
 9623 0d26 B7F8A436 		ldrh	r3, [r7, #1700]
 9624 0d2a 2F49     		ldr	r1, .L432+12
 9625 0d2c CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 9626 0d2e 1846     		mov	r0, r3
 9627 0d30 2C49     		ldr	r1, .L432+8
 9628 0d32 0346     		mov	r3, r0
 9629 0d34 9B00     		lsls	r3, r3, #2
 9630 0d36 0344     		add	r3, r3, r0
 9631 0d38 0B44     		add	r3, r3, r1
 9632 0d3a 03F50173 		add	r3, r3, #516
 9633 0d3e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9634 0d40 1946     		mov	r1, r3
 9635 0d42 0B46     		mov	r3, r1
 9636 0d44 5B00     		lsls	r3, r3, #1
 9637 0d46 0B44     		add	r3, r3, r1
 9638 0d48 5B00     		lsls	r3, r3, #1
 9639 0d4a 1A44     		add	r2, r2, r3
 9640 0d4c B7F8A436 		ldrh	r3, [r7, #1700]
 9641 0d50 2549     		ldr	r1, .L432+12
 9642 0d52 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 9643 0d54 1846     		mov	r0, r3
 9644 0d56 2349     		ldr	r1, .L432+8
 9645 0d58 0346     		mov	r3, r0
 9646 0d5a 9B00     		lsls	r3, r3, #2
 9647 0d5c 0344     		add	r3, r3, r0
 9648 0d5e 0B44     		add	r3, r3, r1
 9649 0d60 03F20523 		addw	r3, r3, #517
 9650 0d64 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9651 0d66 1B01     		lsls	r3, r3, #4
 9652 0d68 1A44     		add	r2, r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 228


 9653 0d6a B7F8A436 		ldrh	r3, [r7, #1700]
 9654 0d6e 1E49     		ldr	r1, .L432+12
 9655 0d70 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 9656 0d72 1846     		mov	r0, r3
 9657 0d74 1B49     		ldr	r1, .L432+8
 9658 0d76 0346     		mov	r3, r0
 9659 0d78 9B00     		lsls	r3, r3, #2
 9660 0d7a 0344     		add	r3, r3, r0
 9661 0d7c 0B44     		add	r3, r3, r1
 9662 0d7e 03F20623 		addw	r3, r3, #518
 9663 0d82 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9664 0d84 5B00     		lsls	r3, r3, #1
 9665 0d86 1344     		add	r3, r3, r2
 9666 0d88 0133     		adds	r3, r3, #1
 9667 0d8a 194A     		ldr	r2, .L432+20
 9668 0d8c 42F82430 		str	r3, [r2, r4, lsl #2]
1521:..\src/command_processing.c ****                 }
 9669              		.loc 1 1521 0 discriminator 3
 9670 0d90 B7F8A436 		ldrh	r3, [r7, #1700]
 9671 0d94 144A     		ldr	r2, .L432+12
 9672 0d96 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9673 0d98 1A46     		mov	r2, r3
 9674 0d9a 154B     		ldr	r3, .L432+20
 9675 0d9c 53F82220 		ldr	r2, [r3, r2, lsl #2]
 9676 0da0 124B     		ldr	r3, .L432+16
 9677 0da2 1B68     		ldr	r3, [r3]
 9678 0da4 1344     		add	r3, r3, r2
 9679 0da6 114A     		ldr	r2, .L432+16
 9680 0da8 1360     		str	r3, [r2]
1518:..\src/command_processing.c ****                 {
 9681              		.loc 1 1518 0 discriminator 3
 9682 0daa B7F8A436 		ldrh	r3, [r7, #1700]
 9683 0dae 0133     		adds	r3, r3, #1
 9684 0db0 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 9685              	.L422:
1518:..\src/command_processing.c ****                 {
 9686              		.loc 1 1518 0 is_stmt 0 discriminator 1
 9687 0db4 094B     		ldr	r3, .L432
 9688 0db6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9689 0db8 9BB2     		uxth	r3, r3
 9690 0dba B7F8A426 		ldrh	r2, [r7, #1700]
 9691 0dbe 9A42     		cmp	r2, r3
 9692 0dc0 86D3     		bcc	.L423
1523:..\src/command_processing.c ****             
 9693              		.loc 1 1523 0 is_stmt 1
 9694 0dc2 0A4B     		ldr	r3, .L432+16
 9695 0dc4 1B68     		ldr	r3, [r3]
 9696 0dc6 0133     		adds	r3, r3, #1
 9697 0dc8 084A     		ldr	r2, .L432+16
 9698 0dca 1360     		str	r3, [r2]
 9699              		.loc 1 1527 0
 9700 0dcc 00E0     		b	.L417
 9701              	.L425:
1497:..\src/command_processing.c ****             
 9702              		.loc 1 1497 0
 9703 0dce 00BF     		nop
 9704              	.L417:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 229


1528:..\src/command_processing.c ****     }
1529:..\src/command_processing.c **** }
 9705              		.loc 1 1529 0 discriminator 1
 9706 0dd0 00BF     		nop
 9707 0dd2 07F5D567 		add	r7, r7, #1704
 9708              		.cfi_def_cfa_offset 16
 9709 0dd6 BD46     		mov	sp, r7
 9710              		.cfi_def_cfa_register 13
 9711              		@ sp needed
 9712 0dd8 B0BD     		pop	{r4, r5, r7, pc}
 9713              	.L433:
 9714 0dda 00BF     		.align	2
 9715              	.L432:
 9716 0ddc 00000000 		.word	N_IMU_Connected
 9717 0de0 00000000 		.word	g_rx
 9718 0de4 00000000 		.word	g_mem
 9719 0de8 00000000 		.word	IMU_connected
 9720 0dec 00000000 		.word	imus_data_size
 9721 0df0 00000000 		.word	single_imu_size
 9722              		.cfi_endproc
 9723              	.LFE69:
 9724              		.size	get_IMU_param_list, .-get_IMU_param_list
 9725              		.section	.text.setZeros,"ax",%progbits
 9726              		.align	2
 9727              		.global	setZeros
 9728              		.thumb
 9729              		.thumb_func
 9730              		.type	setZeros, %function
 9731              	setZeros:
 9732              	.LFB70:
1530:..\src/command_processing.c **** 
1531:..\src/command_processing.c **** //==============================================================================
1532:..\src/command_processing.c **** //                                                            COMMAND SET ZEROS
1533:..\src/command_processing.c **** //==============================================================================
1534:..\src/command_processing.c **** 
1535:..\src/command_processing.c **** void setZeros()
1536:..\src/command_processing.c **** {
 9733              		.loc 1 1536 0
 9734              		.cfi_startproc
 9735              		@ args = 0, pretend = 0, frame = 8
 9736              		@ frame_needed = 1, uses_anonymous_args = 0
 9737 0000 B0B5     		push	{r4, r5, r7, lr}
 9738              		.cfi_def_cfa_offset 16
 9739              		.cfi_offset 4, -16
 9740              		.cfi_offset 5, -12
 9741              		.cfi_offset 7, -8
 9742              		.cfi_offset 14, -4
 9743 0002 82B0     		sub	sp, sp, #8
 9744              		.cfi_def_cfa_offset 24
 9745 0004 00AF     		add	r7, sp, #0
 9746              		.cfi_def_cfa_register 7
1537:..\src/command_processing.c ****     uint8 CYDATA i, j;        // iterator
1538:..\src/command_processing.c ****     
1539:..\src/command_processing.c ****     for (j = 0; j < N_ENCODER_LINE_MAX; j++) {
 9747              		.loc 1 1539 0
 9748 0006 0023     		movs	r3, #0
 9749 0008 BB71     		strb	r3, [r7, #6]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 230


 9750 000a 2FE0     		b	.L435
 9751              	.L438:
1540:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; i++) {
 9752              		.loc 1 1540 0
 9753 000c 0023     		movs	r3, #0
 9754 000e FB71     		strb	r3, [r7, #7]
 9755 0010 22E0     		b	.L436
 9756              	.L437:
1541:..\src/command_processing.c ****             g_mem.enc[j].m_off[i] = (int32)(data_encoder_raw[j][i]);
 9757              		.loc 1 1541 0 discriminator 3
 9758 0012 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 9759 0014 F879     		ldrb	r0, [r7, #7]	@ zero_extendqisi2
 9760 0016 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 9761 0018 FC79     		ldrb	r4, [r7, #7]	@ zero_extendqisi2
 9762 001a 194D     		ldr	r5, .L439
 9763 001c 0B46     		mov	r3, r1
 9764 001e 9B00     		lsls	r3, r3, #2
 9765 0020 0B44     		add	r3, r3, r1
 9766 0022 2344     		add	r3, r3, r4
 9767 0024 55F82330 		ldr	r3, [r5, r3, lsl #2]
 9768 0028 1C46     		mov	r4, r3
 9769 002a 1649     		ldr	r1, .L439+4
 9770 002c 1346     		mov	r3, r2
 9771 002e 5B00     		lsls	r3, r3, #1
 9772 0030 1344     		add	r3, r3, r2
 9773 0032 9B00     		lsls	r3, r3, #2
 9774 0034 0344     		add	r3, r3, r0
 9775 0036 6633     		adds	r3, r3, #102
 9776 0038 41F82340 		str	r4, [r1, r3, lsl #2]
1542:..\src/command_processing.c ****             g_meas[j].rot[i] = (int8)0;
 9777              		.loc 1 1542 0 discriminator 3
 9778 003c BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 9779 003e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 9780 0040 1149     		ldr	r1, .L439+8
 9781 0042 3420     		movs	r0, #52
 9782 0044 00FB02F2 		mul	r2, r0, r2
 9783 0048 0A44     		add	r2, r2, r1
 9784 004a 1344     		add	r3, r3, r2
 9785 004c 1833     		adds	r3, r3, #24
 9786 004e 0022     		movs	r2, #0
 9787 0050 1A70     		strb	r2, [r3]
1540:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; i++) {
 9788              		.loc 1 1540 0 discriminator 3
 9789 0052 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 9790 0054 0133     		adds	r3, r3, #1
 9791 0056 FB71     		strb	r3, [r7, #7]
 9792              	.L436:
1540:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; i++) {
 9793              		.loc 1 1540 0 is_stmt 0 discriminator 1
 9794 0058 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 9795 005a 022B     		cmp	r3, #2
 9796 005c D9D9     		bls	.L437
1543:..\src/command_processing.c ****         }
1544:..\src/command_processing.c ****         reset_last_value_flag[j] = 1;
 9797              		.loc 1 1544 0 is_stmt 1 discriminator 2
 9798 005e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 9799 0060 0A4A     		ldr	r2, .L439+12
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 231


 9800 0062 0121     		movs	r1, #1
 9801 0064 D154     		strb	r1, [r2, r3]
1539:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; i++) {
 9802              		.loc 1 1539 0 discriminator 2
 9803 0066 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 9804 0068 0133     		adds	r3, r3, #1
 9805 006a BB71     		strb	r3, [r7, #6]
 9806              	.L435:
1539:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; i++) {
 9807              		.loc 1 1539 0 is_stmt 0 discriminator 1
 9808 006c BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 9809 006e 012B     		cmp	r3, #1
 9810 0070 CCD9     		bls	.L438
1545:..\src/command_processing.c ****     }
1546:..\src/command_processing.c **** 
1547:..\src/command_processing.c ****     sendAcknowledgment(ACK_OK);
 9811              		.loc 1 1547 0 is_stmt 1
 9812 0072 0120     		movs	r0, #1
 9813 0074 FFF7FEFF 		bl	sendAcknowledgment
1548:..\src/command_processing.c **** }
 9814              		.loc 1 1548 0
 9815 0078 00BF     		nop
 9816 007a 0837     		adds	r7, r7, #8
 9817              		.cfi_def_cfa_offset 16
 9818 007c BD46     		mov	sp, r7
 9819              		.cfi_def_cfa_register 13
 9820              		@ sp needed
 9821 007e B0BD     		pop	{r4, r5, r7, pc}
 9822              	.L440:
 9823              		.align	2
 9824              	.L439:
 9825 0080 00000000 		.word	data_encoder_raw
 9826 0084 00000000 		.word	g_mem
 9827 0088 00000000 		.word	g_meas
 9828 008c 00000000 		.word	reset_last_value_flag
 9829              		.cfi_endproc
 9830              	.LFE70:
 9831              		.size	setZeros, .-setZeros
 9832              		.section	.rodata
 9833              		.align	2
 9834              	.LC152:
 9835 1158 0D0A00   		.ascii	"\015\012\000"
 9836 115b 00       		.align	2
 9837              	.LC153:
 9838 115c 4669726D 		.ascii	"Firmware version: \000"
 9838      77617265 
 9838      20766572 
 9838      73696F6E 
 9838      3A2000
 9839 116f 00       		.align	2
 9840              	.LC154:
 9841 1170 536F6674 		.ascii	"SoftHand PRO firmware v. 1.10.1 (PSoC5)\000"
 9841      48616E64 
 9841      2050524F 
 9841      20666972 
 9841      6D776172 
 9842              		.align	2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 232


 9843              	.LC155:
 9844 1198 2E0D0A0D 		.ascii	".\015\012\015\012\000"
 9844      0A00
 9845 119e 0000     		.align	2
 9846              	.LC156:
 9847 11a0 44455649 		.ascii	"DEVICE INFO\015\012\000"
 9847      43452049 
 9847      4E464F0D 
 9847      0A00
 9848 11ae 0000     		.align	2
 9849              	.LC157:
 9850 11b0 49443A20 		.ascii	"ID: %d\015\012\000"
 9850      25640D0A 
 9850      00
 9851 11b9 000000   		.align	2
 9852              	.LC158:
 9853 11bc 44657669 		.ascii	"Device: SOFTHAND PRO\015\012\000"
 9853      63653A20 
 9853      534F4654 
 9853      48414E44 
 9853      2050524F 
 9854 11d3 00       		.align	2
 9855              	.LC159:
 9856 11d4 44657669 		.ascii	"Device: GENERIC 2 MOTORS\015\012\000"
 9856      63653A20 
 9856      47454E45 
 9856      52494320 
 9856      32204D4F 
 9857 11ef 00       		.align	2
 9858              	.LC160:
 9859 11f0 44657669 		.ascii	"Device: AIR CHAMBERS HAPTIC FEEDBACK\015\012\000"
 9859      63653A20 
 9859      41495220 
 9859      4348414D 
 9859      42455253 
 9860 1217 00       		.align	2
 9861              	.LC161:
 9862 1218 44657669 		.ascii	"Device: OTTOBOCK 6v ACTIVE WRIST MASTER\015\012\000"
 9862      63653A20 
 9862      4F54544F 
 9862      424F434B 
 9862      20367620 
 9863 1242 0000     		.align	2
 9864              	.LC162:
 9865 1244 44657669 		.ascii	"Device: SOFTHAND 2 MOTORS\015\012\000"
 9865      63653A20 
 9865      534F4654 
 9865      48414E44 
 9865      2032204D 
 9866              		.align	2
 9867              	.LC163:
 9868 1260 48616E64 		.ascii	"Hand side: RIGHT\015\012\000"
 9868      20736964 
 9868      653A2052 
 9868      49474854 
 9868      0D0A00
 9869 1273 00       		.align	2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 233


 9870              	.LC164:
 9871 1274 48616E64 		.ascii	"Hand side: LEFT\015\012\000"
 9871      20736964 
 9871      653A204C 
 9871      4546540D 
 9871      0A00
 9872 1286 0000     		.align	2
 9873              	.LC165:
 9874 1288 55736572 		.ascii	"User: MARIA\015\012\000"
 9874      3A204D41 
 9874      5249410D 
 9874      0A00
 9875 1296 0000     		.align	2
 9876              	.LC166:
 9877 1298 55736572 		.ascii	"User: R01\015\012\000"
 9877      3A205230 
 9877      310D0A00 
 9878              		.align	2
 9879              	.LC167:
 9880 12a4 55736572 		.ascii	"User: GENERIC USER\015\012\000"
 9880      3A204745 
 9880      4E455249 
 9880      43205553 
 9880      45520D0A 
 9881 12b9 000000   		.align	2
 9882              	.LC168:
 9883 12bc 4D4F544F 		.ascii	"MOTOR %d INFO\015\012\000"
 9883      52202564 
 9883      20494E46 
 9883      4F0D0A00 
 9884              		.align	2
 9885              	.LC169:
 9886 12cc 4D6F746F 		.ascii	"Motor reference\000"
 9886      72207265 
 9886      66657265 
 9886      6E636500 
 9887              		.align	2
 9888              	.LC170:
 9889 12dc 202D2043 		.ascii	" - Currents: \000"
 9889      75727265 
 9889      6E74733A 
 9889      2000
 9890 12ea 0000     		.align	2
 9891              	.LC171:
 9892 12ec 202D2050 		.ascii	" - Pwm: \000"
 9892      776D3A20 
 9892      00
 9893 12f5 000000   		.align	2
 9894              	.LC172:
 9895 12f8 202D2050 		.ascii	" - Position: \000"
 9895      6F736974 
 9895      696F6E3A 
 9895      2000
 9896 1306 0000     		.align	2
 9897              	.LC173:
 9898 1308 25642000 		.ascii	"%d \000"
 9899              		.align	2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 234


 9900              	.LC174:
 9901 130c 4D6F746F 		.ascii	"Motor enabled: \000"
 9901      7220656E 
 9901      61626C65 
 9901      643A2000 
 9902              		.align	2
 9903              	.LC175:
 9904 131c 5945530D 		.ascii	"YES\015\012\000"
 9904      0A00
 9905 1322 0000     		.align	2
 9906              	.LC176:
 9907 1324 4E4F0D0A 		.ascii	"NO\015\012\000"
 9907      00
 9908 1329 000000   		.align	2
 9909              	.LC177:
 9910 132c 50574D20 		.ascii	"PWM rescaling activation: \000"
 9910      72657363 
 9910      616C696E 
 9910      67206163 
 9910      74697661 
 9911 1347 00       		.align	2
 9912              	.LC178:
 9913 1348 5945530A 		.ascii	"YES\012\000"
 9913      00
 9914 134d 000000   		.align	2
 9915              	.LC179:
 9916 1350 4E4F0A00 		.ascii	"NO\012\000"
 9917              		.align	2
 9918              	.LC180:
 9919 1354 50574D20 		.ascii	"PWM Limit: %d\015\012\000"
 9919      4C696D69 
 9919      743A2025 
 9919      640D0A00 
 9920              		.align	2
 9921              	.LC181:
 9922 1364 0D0A4D45 		.ascii	"\015\012MEASUREMENTS INFO\015\012\000"
 9922      41535552 
 9922      454D454E 
 9922      54532049 
 9922      4E464F0D 
 9923 137a 0000     		.align	2
 9924              	.LC182:
 9925 137c 53656E73 		.ascii	"Sensor value: \000"
 9925      6F722076 
 9925      616C7565 
 9925      3A2000
 9926 138b 00       		.align	2
 9927              	.LC183:
 9928 138c 256400   		.ascii	"%d\000"
 9929 138f 00       		.align	2
 9930              	.LC184:
 9931 1390 2C2000   		.ascii	", \000"
 9932 1393 00       		.align	2
 9933              	.LC185:
 9934 1394 4A6F7973 		.ascii	"Joystick measurements: %d, %d\000"
 9934      7469636B 
 9934      206D6561 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 235


 9934      73757265 
 9934      6D656E74 
 9935 13b2 0000     		.align	2
 9936              	.LC186:
 9937 13b4 42617474 		.ascii	"Battery %d Voltage (mV): %ld\000"
 9937      65727920 
 9937      25642056 
 9937      6F6C7461 
 9937      67652028 
 9938 13d1 000000   		.align	2
 9939              	.LC187:
 9940 13d4 46756C6C 		.ascii	"Full charge power tension %d (mV): %ld\000"
 9940      20636861 
 9940      72676520 
 9940      706F7765 
 9940      72207465 
 9941 13fb 00       		.align	2
 9942              	.LC188:
 9943 13fc 43757272 		.ascii	"Current %d (mA): %ld\000"
 9943      656E7420 
 9943      25642028 
 9943      6D41293A 
 9943      20256C64 
 9944 1411 000000   		.align	2
 9945              	.LC189:
 9946 1414 4C617374 		.ascii	"Last Grasp Hold Current %d (mA): %ld\000"
 9946      20477261 
 9946      73702048 
 9946      6F6C6420 
 9946      43757272 
 9947 1439 000000   		.align	2
 9948              	.LC190:
 9949 143c 0D0A4D4F 		.ascii	"\015\012MOTOR %d CONFIGURATION\015\012\000"
 9949      544F5220 
 9949      25642043 
 9949      4F4E4649 
 9949      47555241 
 9950 1457 00       		.align	2
 9951              	.LC191:
 9952 1458 50494420 		.ascii	"PID Controller: \000"
 9952      436F6E74 
 9952      726F6C6C 
 9952      65723A20 
 9952      00
 9953              		.global	__aeabi_i2d
 9954              		.global	__aeabi_ddiv
 9955 1469 000000   		.align	2
 9956              	.LC192:
 9957 146c 50202D3E 		.ascii	"P -> %f  \000"
 9957      20256620 
 9957      2000
 9958 1476 0000     		.align	2
 9959              	.LC193:
 9960 1478 49202D3E 		.ascii	"I -> %f  \000"
 9960      20256620 
 9960      2000
 9961 1482 0000     		.align	2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 236


 9962              	.LC194:
 9963 1484 44202D3E 		.ascii	"D -> %f\015\012\000"
 9963      2025660D 
 9963      0A00
 9964 148e 0000     		.align	2
 9965              	.LC195:
 9966 1490 43757272 		.ascii	"Current PID Controller: \000"
 9966      656E7420 
 9966      50494420 
 9966      436F6E74 
 9966      726F6C6C 
 9967 14a9 000000   		.align	2
 9968              	.LC196:
 9969 14ac 53746172 		.ascii	"Startup activation: YES\015\012\000"
 9969      74757020 
 9969      61637469 
 9969      76617469 
 9969      6F6E3A20 
 9970 14c6 0000     		.align	2
 9971              	.LC197:
 9972 14c8 53746172 		.ascii	"Startup activation: NO\015\012\000"
 9972      74757020 
 9972      61637469 
 9972      76617469 
 9972      6F6E3A20 
 9973 14e1 000000   		.align	2
 9974              	.LC198:
 9975 14e4 496E7075 		.ascii	"Input mode: USB\015\012\000"
 9975      74206D6F 
 9975      64653A20 
 9975      5553420D 
 9975      0A00
 9976 14f6 0000     		.align	2
 9977              	.LC199:
 9978 14f8 496E7075 		.ascii	"Input mode: Handle\015\012\000"
 9978      74206D6F 
 9978      64653A20 
 9978      48616E64 
 9978      6C650D0A 
 9979 150d 000000   		.align	2
 9980              	.LC200:
 9981 1510 496E7075 		.ascii	"Input mode: EMG proportional\015\012\000"
 9981      74206D6F 
 9981      64653A20 
 9981      454D4720 
 9981      70726F70 
 9982 152f 00       		.align	2
 9983              	.LC201:
 9984 1530 496E7075 		.ascii	"Input mode: EMG integral\015\012\000"
 9984      74206D6F 
 9984      64653A20 
 9984      454D4720 
 9984      696E7465 
 9985 154b 00       		.align	2
 9986              	.LC202:
 9987 154c 496E7075 		.ascii	"Input mode: EMG FCFS\015\012\000"
 9987      74206D6F 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 237


 9987      64653A20 
 9987      454D4720 
 9987      46434653 
 9988 1563 00       		.align	2
 9989              	.LC203:
 9990 1564 496E7075 		.ascii	"Input mode: EMG FCFS ADV\015\012\000"
 9990      74206D6F 
 9990      64653A20 
 9990      454D4720 
 9990      46434653 
 9991 157f 00       		.align	2
 9992              	.LC204:
 9993 1580 496E7075 		.ascii	"Input mode: Joystick\015\012\000"
 9993      74206D6F 
 9993      64653A20 
 9993      4A6F7973 
 9993      7469636B 
 9994 1597 00       		.align	2
 9995              	.LC205:
 9996 1598 496E7075 		.ascii	"Input mode: EMG proportional Normally Closed\015\012"
 9996      74206D6F 
 9996      64653A20 
 9996      454D4720 
 9996      70726F70 
 9997 15c6 00       		.ascii	"\000"
 9998 15c7 00       		.align	2
 9999              	.LC206:
 10000 15c8 436F6E74 		.ascii	"Control mode: Position\015\012\000"
 10000      726F6C20 
 10000      6D6F6465 
 10000      3A20506F 
 10000      73697469 
 10001 15e1 000000   		.align	2
 10002              	.LC207:
 10003 15e4 436F6E74 		.ascii	"Control mode: PWM\015\012\000"
 10003      726F6C20 
 10003      6D6F6465 
 10003      3A205057 
 10003      4D0D0A00 
 10004              		.align	2
 10005              	.LC208:
 10006 15f8 436F6E74 		.ascii	"Control mode: Current\015\012\000"
 10006      726F6C20 
 10006      6D6F6465 
 10006      3A204375 
 10006      7272656E 
 10007              		.align	2
 10008              	.LC209:
 10009 1610 436F6E74 		.ascii	"Control mode: Position and Current\015\012\000"
 10009      726F6C20 
 10009      6D6F6465 
 10009      3A20506F 
 10009      73697469 
 10010 1635 000000   		.align	2
 10011              	.LC210:
 10012 1638 4162736F 		.ascii	"Absolute encoder position: YES\015\012\000"
 10012      6C757465 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 238


 10012      20656E63 
 10012      6F646572 
 10012      20706F73 
 10013 1659 000000   		.align	2
 10014              	.LC211:
 10015 165c 4162736F 		.ascii	"Absolute encoder position: NO\015\012\000"
 10015      6C757465 
 10015      20656E63 
 10015      6F646572 
 10015      20706F73 
 10016              		.align	2
 10017              	.LC212:
 10018 167c 4D6F746F 		.ascii	"Motor-Handle Ratio: %d\015\012\000"
 10018      722D4861 
 10018      6E646C65 
 10018      20526174 
 10018      696F3A20 
 10019 1695 000000   		.align	2
 10020              	.LC213:
 10021 1698 53656E73 		.ascii	"Sensor resolution: \000"
 10021      6F722072 
 10021      65736F6C 
 10021      7574696F 
 10021      6E3A2000 
 10022              		.align	2
 10023              	.LC214:
 10024 16ac 4D656173 		.ascii	"Measurement Offset: \000"
 10024      7572656D 
 10024      656E7420 
 10024      4F666673 
 10024      65743A20 
 10025 16c1 000000   		.align	2
 10026              	.LC215:
 10027 16c4 256C6400 		.ascii	"%ld\000"
 10028              		.align	2
 10029              	.LC216:
 10030 16c8 4D656173 		.ascii	"Measurement Multiplier: \000"
 10030      7572656D 
 10030      656E7420 
 10030      4D756C74 
 10030      69706C69 
 10031              		.global	__aeabi_f2d
 10032 16e1 000000   		.align	2
 10033              	.LC217:
 10034 16e4 256600   		.ascii	"%f\000"
 10035 16e7 00       		.align	2
 10036              	.LC218:
 10037 16e8 43757272 		.ascii	"Current lookup table: %f, %f, %f, %f, %f, %f\015\012"
 10037      656E7420 
 10037      6C6F6F6B 
 10037      75702074 
 10037      61626C65 
 10038 1716 00       		.ascii	"\000"
 10039 1717 00       		.align	2
 10040              	.LC219:
 10041 1718 506F7369 		.ascii	"Position limit active: %d\000"
 10041      74696F6E 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 239


 10041      206C696D 
 10041      69742061 
 10041      63746976 
 10042 1732 0000     		.align	2
 10043              	.LC220:
 10044 1734 506F7369 		.ascii	"Position limit motor: inf -> %ld  \000"
 10044      74696F6E 
 10044      206C696D 
 10044      6974206D 
 10044      6F746F72 
 10045 1757 00       		.align	2
 10046              	.LC221:
 10047 1758 73757020 		.ascii	"sup -> %ld\015\012\000"
 10047      2D3E2025 
 10047      6C640D0A 
 10047      00
 10048 1765 000000   		.align	2
 10049              	.LC222:
 10050 1768 4D617820 		.ascii	"Max step pos and neg: %d %d\000"
 10050      73746570 
 10050      20706F73 
 10050      20616E64 
 10050      206E6567 
 10051              		.align	2
 10052              	.LC223:
 10053 1784 43757272 		.ascii	"Current limit: %d\015\012\000"
 10053      656E7420 
 10053      6C696D69 
 10053      743A2025 
 10053      640D0A00 
 10054              		.align	2
 10055              	.LC224:
 10056 1798 454D4720 		.ascii	"EMG CONFIGURATION\015\012\000"
 10056      434F4E46 
 10056      49475552 
 10056      4154494F 
 10056      4E0D0A00 
 10057              		.align	2
 10058              	.LC225:
 10059 17ac 454D4720 		.ascii	"EMG thresholds [0 - 1024]: %u, %u\000"
 10059      74687265 
 10059      73686F6C 
 10059      6473205B 
 10059      30202D20 
 10060 17ce 0000     		.align	2
 10061              	.LC226:
 10062 17d0 454D4720 		.ascii	"EMG max values [0 - 4096]: %lu, %lu\000"
 10062      6D617820 
 10062      76616C75 
 10062      6573205B 
 10062      30202D20 
 10063              		.align	2
 10064              	.LC227:
 10065 17f4 454D4720 		.ascii	"EMG inversion: YES\015\012\000"
 10065      696E7665 
 10065      7273696F 
 10065      6E3A2059 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 240


 10065      45530D0A 
 10066 1809 000000   		.align	2
 10067              	.LC228:
 10068 180c 454D4720 		.ascii	"EMG inversion: NO\015\012\000"
 10068      696E7665 
 10068      7273696F 
 10068      6E3A204E 
 10068      4F0D0A00 
 10069              		.align	2
 10070              	.LC229:
 10071 1820 43616C69 		.ascii	"Calibration enabled: YES\015\012\000"
 10071      62726174 
 10071      696F6E20 
 10071      656E6162 
 10071      6C65643A 
 10072 183b 00       		.align	2
 10073              	.LC230:
 10074 183c 43616C69 		.ascii	"Calibration enabled: NO\015\012\000"
 10074      62726174 
 10074      696F6E20 
 10074      656E6162 
 10074      6C65643A 
 10075 1856 0000     		.align	2
 10076              	.LC231:
 10077 1858 454D4720 		.ascii	"EMG max speed: %d %d\000"
 10077      6D617820 
 10077      73706565 
 10077      643A2025 
 10077      64202564 
 10078 186d 000000   		.align	2
 10079              	.LC232:
 10080 1870 41646469 		.ascii	"Additional ADC sensors value:\015\012\000"
 10080      74696F6E 
 10080      616C2041 
 10080      44432073 
 10080      656E736F 
 10081              		.align	2
 10082              	.LC233:
 10083 1890 41444320 		.ascii	"ADC %d -> %d\000"
 10083      2564202D 
 10083      3E202564 
 10083      00
 10084 189d 000000   		.align	2
 10085              	.LC234:
 10086 18a0 454D4720 		.ascii	"EMG input %d -> %d\000"
 10086      696E7075 
 10086      74202564 
 10086      202D3E20 
 10086      256400
 10087 18b3 00       		.align	2
 10088              	.LC235:
 10089 18b4 52657374 		.ascii	"Rest time delay (ms): %d\000"
 10089      2074696D 
 10089      65206465 
 10089      6C617920 
 10089      286D7329 
 10090 18cd 000000   		.align	2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 241


 10091              	.LC236:
 10092 18d0 52657374 		.ascii	"Rest velocity closure (ticks/sec): %d\000"
 10092      2076656C 
 10092      6F636974 
 10092      7920636C 
 10092      6F737572 
 10093 18f6 0000     		.align	2
 10094              	.LC237:
 10095 18f8 52657374 		.ascii	"Rest position: %d\000"
 10095      20706F73 
 10095      6974696F 
 10095      6E3A2025 
 10095      6400
 10096 190a 0000     		.align	2
 10097              	.LC238:
 10098 190c 494D5520 		.ascii	"IMU Connected: %d\015\012\000"
 10098      436F6E6E 
 10098      65637465 
 10098      643A2025 
 10098      640D0A00 
 10099              		.align	2
 10100              	.LC239:
 10101 1920 494D5573 		.ascii	"IMUs CONFIGURATION\015\012\000"
 10101      20434F4E 
 10101      46494755 
 10101      52415449 
 10101      4F4E0D0A 
 10102 1935 000000   		.align	2
 10103              	.LC240:
 10104 1938 496D7520 		.ascii	"Imu %d \015\012\011ID: %d\015\012\000"
 10104      2564200D 
 10104      0A094944 
 10104      3A202564 
 10104      0D0A00
 10105 194b 00       		.align	2
 10106              	.LC241:
 10107 194c 09416363 		.ascii	"\011Accelerometers: \000"
 10107      656C6572 
 10107      6F6D6574 
 10107      6572733A 
 10107      2000
 10108 195e 0000     		.align	2
 10109              	.LC242:
 10110 1960 09477972 		.ascii	"\011Gyroscopes: \000"
 10110      6F73636F 
 10110      7065733A 
 10110      2000
 10111 196e 0000     		.align	2
 10112              	.LC243:
 10113 1970 094D6167 		.ascii	"\011Magnetometers: \000"
 10113      6E65746F 
 10113      6D657465 
 10113      72733A20 
 10113      00
 10114 1981 000000   		.align	2
 10115              	.LC244:
 10116 1984 09517561 		.ascii	"\011Quaternion: \000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 242


 10116      7465726E 
 10116      696F6E3A 
 10116      2000
 10117 1992 0000     		.align	2
 10118              	.LC245:
 10119 1994 0954656D 		.ascii	"\011Temperature: \000"
 10119      70657261 
 10119      74757265 
 10119      3A2000
 10120 19a3 00       		.align	2
 10121              	.LC246:
 10122 19a4 4C617374 		.ascii	"Last FW cycle time: %u us\015\012\000"
 10122      20465720 
 10122      6379636C 
 10122      65207469 
 10122      6D653A20 
 10123              		.align	2
 10124              	.LC247:
 10125 19c0 0D0A0000 		.ascii	"\015\012\000\000"
 10126              		.section	.text.prepare_generic_info,"ax",%progbits
 10127              		.align	2
 10128              		.global	prepare_generic_info
 10129              		.thumb
 10130              		.thumb_func
 10131              		.type	prepare_generic_info, %function
 10132              	prepare_generic_info:
 10133              	.LFB71:
1549:..\src/command_processing.c **** 
1550:..\src/command_processing.c **** //==============================================================================
1551:..\src/command_processing.c **** //                                                   PREPARE GENERIC DEVICE INFO
1552:..\src/command_processing.c **** //==============================================================================
1553:..\src/command_processing.c **** 
1554:..\src/command_processing.c **** void prepare_generic_info(char *info_string)
1555:..\src/command_processing.c **** {
 10134              		.loc 1 1555 0
 10135              		.cfi_startproc
 10136              		@ args = 0, pretend = 0, frame = 152
 10137              		@ frame_needed = 1, uses_anonymous_args = 0
 10138 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 10139              		.cfi_def_cfa_offset 36
 10140              		.cfi_offset 4, -36
 10141              		.cfi_offset 5, -32
 10142              		.cfi_offset 6, -28
 10143              		.cfi_offset 7, -24
 10144              		.cfi_offset 8, -20
 10145              		.cfi_offset 9, -16
 10146              		.cfi_offset 10, -12
 10147              		.cfi_offset 11, -8
 10148              		.cfi_offset 14, -4
 10149 0004 B1B0     		sub	sp, sp, #196
 10150              		.cfi_def_cfa_offset 232
 10151 0006 0AAF     		add	r7, sp, #40
 10152              		.cfi_def_cfa 7, 192
 10153 0008 7861     		str	r0, [r7, #20]
1556:..\src/command_processing.c ****     int i;
1557:..\src/command_processing.c **** 
1558:..\src/command_processing.c ****     struct st_eeprom* MEM_P = &c_mem; 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 243


 10154              		.loc 1 1558 0
 10155 000a C74B     		ldr	r3, .L542
 10156 000c C7F88C30 		str	r3, [r7, #140]
1559:..\src/command_processing.c ****     
1560:..\src/command_processing.c ****     if(c_mem.dev.id != 250){                //To avoid dummy board ping
 10157              		.loc 1 1560 0
 10158 0010 C54B     		ldr	r3, .L542
 10159 0012 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 10160 0016 FA2B     		cmp	r3, #250
 10161 0018 01F0C285 		beq	.L539
 10162              	.LBB23:
1561:..\src/command_processing.c ****         char str[100];
1562:..\src/command_processing.c ****         strcpy(info_string, "");
 10163              		.loc 1 1562 0
 10164 001c 7B69     		ldr	r3, [r7, #20]
 10165 001e 0022     		movs	r2, #0
 10166 0020 1A70     		strb	r2, [r3]
1563:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 10167              		.loc 1 1563 0
 10168 0022 7869     		ldr	r0, [r7, #20]
 10169 0024 FFF7FEFF 		bl	strlen
 10170 0028 0346     		mov	r3, r0
 10171 002a 1A46     		mov	r2, r3
 10172 002c 7B69     		ldr	r3, [r7, #20]
 10173 002e 1344     		add	r3, r3, r2
 10174 0030 BE4A     		ldr	r2, .L542+4
 10175 0032 1188     		ldrh	r1, [r2]	@ unaligned
 10176 0034 9278     		ldrb	r2, [r2, #2]
 10177 0036 1980     		strh	r1, [r3]	@ unaligned
 10178 0038 9A70     		strb	r2, [r3, #2]
1564:..\src/command_processing.c ****         strcat(info_string, "Firmware version: ");
 10179              		.loc 1 1564 0
 10180 003a 7869     		ldr	r0, [r7, #20]
 10181 003c FFF7FEFF 		bl	strlen
 10182 0040 0346     		mov	r3, r0
 10183 0042 1A46     		mov	r2, r3
 10184 0044 7B69     		ldr	r3, [r7, #20]
 10185 0046 1344     		add	r3, r3, r2
 10186 0048 B94A     		ldr	r2, .L542+8
 10187 004a 1D46     		mov	r5, r3
 10188 004c 1446     		mov	r4, r2
 10189 004e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 10190 0050 2860     		str	r0, [r5]	@ unaligned
 10191 0052 6960     		str	r1, [r5, #4]	@ unaligned
 10192 0054 AA60     		str	r2, [r5, #8]	@ unaligned
 10193 0056 EB60     		str	r3, [r5, #12]	@ unaligned
 10194 0058 2388     		ldrh	r3, [r4]	@ unaligned
 10195 005a A278     		ldrb	r2, [r4, #2]
 10196 005c 2B82     		strh	r3, [r5, #16]	@ unaligned
 10197 005e 1346     		mov	r3, r2
 10198 0060 AB74     		strb	r3, [r5, #18]
1565:..\src/command_processing.c ****         strcat(info_string, VERSION);
 10199              		.loc 1 1565 0
 10200 0062 7869     		ldr	r0, [r7, #20]
 10201 0064 FFF7FEFF 		bl	strlen
 10202 0068 0346     		mov	r3, r0
 10203 006a 1A46     		mov	r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 244


 10204 006c 7B69     		ldr	r3, [r7, #20]
 10205 006e 1344     		add	r3, r3, r2
 10206 0070 B04A     		ldr	r2, .L542+12
 10207 0072 1446     		mov	r4, r2
 10208 0074 9E46     		mov	lr, r3
 10209 0076 04F1200C 		add	ip, r4, #32
 10210              	.L443:
 10211 007a 7546     		mov	r5, lr
 10212 007c 2646     		mov	r6, r4
 10213 007e 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 10214 0080 2860     		str	r0, [r5]	@ unaligned
 10215 0082 6960     		str	r1, [r5, #4]	@ unaligned
 10216 0084 AA60     		str	r2, [r5, #8]	@ unaligned
 10217 0086 EB60     		str	r3, [r5, #12]	@ unaligned
 10218 0088 1034     		adds	r4, r4, #16
 10219 008a 0EF1100E 		add	lr, lr, #16
 10220 008e 6445     		cmp	r4, ip
 10221 0090 F3D1     		bne	.L443
 10222 0092 7246     		mov	r2, lr
 10223 0094 2346     		mov	r3, r4
 10224 0096 03CB     		ldmia	r3!, {r0, r1}
 10225 0098 1060     		str	r0, [r2]	@ unaligned
 10226 009a 5160     		str	r1, [r2, #4]	@ unaligned
1566:..\src/command_processing.c ****         strcat(info_string, ".\r\n\r\n");      
 10227              		.loc 1 1566 0
 10228 009c 7869     		ldr	r0, [r7, #20]
 10229 009e FFF7FEFF 		bl	strlen
 10230 00a2 0346     		mov	r3, r0
 10231 00a4 1A46     		mov	r2, r3
 10232 00a6 7B69     		ldr	r3, [r7, #20]
 10233 00a8 1344     		add	r3, r3, r2
 10234 00aa A34A     		ldr	r2, .L542+16
 10235 00ac 1068     		ldr	r0, [r2]	@ unaligned
 10236 00ae 1860     		str	r0, [r3]	@ unaligned
 10237 00b0 9288     		ldrh	r2, [r2, #4]	@ unaligned
 10238 00b2 9A80     		strh	r2, [r3, #4]	@ unaligned
1567:..\src/command_processing.c **** 
1568:..\src/command_processing.c ****         strcat(info_string, "DEVICE INFO\r\n");
 10239              		.loc 1 1568 0
 10240 00b4 7869     		ldr	r0, [r7, #20]
 10241 00b6 FFF7FEFF 		bl	strlen
 10242 00ba 0346     		mov	r3, r0
 10243 00bc 1A46     		mov	r2, r3
 10244 00be 7B69     		ldr	r3, [r7, #20]
 10245 00c0 1344     		add	r3, r3, r2
 10246 00c2 9E4A     		ldr	r2, .L542+20
 10247 00c4 1C46     		mov	r4, r3
 10248 00c6 1346     		mov	r3, r2
 10249 00c8 07CB     		ldmia	r3!, {r0, r1, r2}
 10250 00ca 2060     		str	r0, [r4]	@ unaligned
 10251 00cc 6160     		str	r1, [r4, #4]	@ unaligned
 10252 00ce A260     		str	r2, [r4, #8]	@ unaligned
 10253 00d0 1B88     		ldrh	r3, [r3]	@ unaligned
 10254 00d2 A381     		strh	r3, [r4, #12]	@ unaligned
1569:..\src/command_processing.c ****         sprintf(str, "ID: %d\r\n", (int) MEM_P->dev.id);
 10255              		.loc 1 1569 0
 10256 00d4 D7F88C30 		ldr	r3, [r7, #140]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 245


 10257 00d8 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 10258 00dc 1A46     		mov	r2, r3
 10259 00de 07F11C03 		add	r3, r7, #28
 10260 00e2 9749     		ldr	r1, .L542+24
 10261 00e4 1846     		mov	r0, r3
 10262 00e6 FFF7FEFF 		bl	sprintf
1570:..\src/command_processing.c ****         strcat(info_string, str);
 10263              		.loc 1 1570 0
 10264 00ea 07F11C03 		add	r3, r7, #28
 10265 00ee 1946     		mov	r1, r3
 10266 00f0 7869     		ldr	r0, [r7, #20]
 10267 00f2 FFF7FEFF 		bl	strcat
1571:..\src/command_processing.c ****         switch(MEM_P->dev.dev_type){
 10268              		.loc 1 1571 0
 10269 00f6 D7F88C30 		ldr	r3, [r7, #140]
 10270 00fa 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 10271 00fe 042B     		cmp	r3, #4
 10272 0100 00F29280 		bhi	.L540
 10273 0104 01A2     		adr	r2, .L446
 10274 0106 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 10275 010a 00BF     		.p2align 2
 10276              	.L446:
 10277 010c 21010000 		.word	.L445+1
 10278 0110 4F010000 		.word	.L447+1
 10279 0114 7F010000 		.word	.L448+1
 10280 0118 C1010000 		.word	.L449+1
 10281 011c 01020000 		.word	.L450+1
 10282              		.p2align 1
 10283              	.L445:
1572:..\src/command_processing.c ****             case SOFTHAND_PRO:
1573:..\src/command_processing.c ****                 strcat(info_string, "Device: SOFTHAND PRO\r\n");
 10284              		.loc 1 1573 0
 10285 0120 7869     		ldr	r0, [r7, #20]
 10286 0122 FFF7FEFF 		bl	strlen
 10287 0126 0346     		mov	r3, r0
 10288 0128 1A46     		mov	r2, r3
 10289 012a 7B69     		ldr	r3, [r7, #20]
 10290 012c 1344     		add	r3, r3, r2
 10291 012e 854A     		ldr	r2, .L542+28
 10292 0130 1C46     		mov	r4, r3
 10293 0132 1546     		mov	r5, r2
 10294 0134 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 10295 0136 2060     		str	r0, [r4]	@ unaligned
 10296 0138 6160     		str	r1, [r4, #4]	@ unaligned
 10297 013a A260     		str	r2, [r4, #8]	@ unaligned
 10298 013c E360     		str	r3, [r4, #12]	@ unaligned
 10299 013e 2868     		ldr	r0, [r5]	@ unaligned
 10300 0140 2061     		str	r0, [r4, #16]	@ unaligned
 10301 0142 AB88     		ldrh	r3, [r5, #4]	@ unaligned
 10302 0144 AA79     		ldrb	r2, [r5, #6]
 10303 0146 A382     		strh	r3, [r4, #20]	@ unaligned
 10304 0148 1346     		mov	r3, r2
 10305 014a A375     		strb	r3, [r4, #22]
1574:..\src/command_processing.c ****                 break;
 10306              		.loc 1 1574 0
 10307 014c 6DE0     		b	.L451
 10308              	.L447:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 246


1575:..\src/command_processing.c ****             case GENERIC_2_MOTORS:
1576:..\src/command_processing.c ****                 strcat(info_string, "Device: GENERIC 2 MOTORS\r\n");
 10309              		.loc 1 1576 0
 10310 014e 7869     		ldr	r0, [r7, #20]
 10311 0150 FFF7FEFF 		bl	strlen
 10312 0154 0346     		mov	r3, r0
 10313 0156 1A46     		mov	r2, r3
 10314 0158 7B69     		ldr	r3, [r7, #20]
 10315 015a 1344     		add	r3, r3, r2
 10316 015c 7A4A     		ldr	r2, .L542+32
 10317 015e 1D46     		mov	r5, r3
 10318 0160 1446     		mov	r4, r2
 10319 0162 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 10320 0164 2860     		str	r0, [r5]	@ unaligned
 10321 0166 6960     		str	r1, [r5, #4]	@ unaligned
 10322 0168 AA60     		str	r2, [r5, #8]	@ unaligned
 10323 016a EB60     		str	r3, [r5, #12]	@ unaligned
 10324 016c 03CC     		ldmia	r4!, {r0, r1}
 10325 016e 2861     		str	r0, [r5, #16]	@ unaligned
 10326 0170 6961     		str	r1, [r5, #20]	@ unaligned
 10327 0172 2388     		ldrh	r3, [r4]	@ unaligned
 10328 0174 A278     		ldrb	r2, [r4, #2]
 10329 0176 2B83     		strh	r3, [r5, #24]	@ unaligned
 10330 0178 1346     		mov	r3, r2
 10331 017a AB76     		strb	r3, [r5, #26]
1577:..\src/command_processing.c ****                 break;
 10332              		.loc 1 1577 0
 10333 017c 55E0     		b	.L451
 10334              	.L448:
1578:..\src/command_processing.c ****             case AIR_CHAMBERS_FB:
1579:..\src/command_processing.c ****                 strcat(info_string, "Device: AIR CHAMBERS HAPTIC FEEDBACK\r\n");
 10335              		.loc 1 1579 0
 10336 017e 7869     		ldr	r0, [r7, #20]
 10337 0180 FFF7FEFF 		bl	strlen
 10338 0184 0346     		mov	r3, r0
 10339 0186 1A46     		mov	r2, r3
 10340 0188 7B69     		ldr	r3, [r7, #20]
 10341 018a 1344     		add	r3, r3, r2
 10342 018c 6F4A     		ldr	r2, .L542+36
 10343 018e 1446     		mov	r4, r2
 10344 0190 9E46     		mov	lr, r3
 10345 0192 04F1200C 		add	ip, r4, #32
 10346              	.L452:
 10347 0196 7546     		mov	r5, lr
 10348 0198 2646     		mov	r6, r4
 10349 019a 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 10350 019c 2860     		str	r0, [r5]	@ unaligned
 10351 019e 6960     		str	r1, [r5, #4]	@ unaligned
 10352 01a0 AA60     		str	r2, [r5, #8]	@ unaligned
 10353 01a2 EB60     		str	r3, [r5, #12]	@ unaligned
 10354 01a4 1034     		adds	r4, r4, #16
 10355 01a6 0EF1100E 		add	lr, lr, #16
 10356 01aa 6445     		cmp	r4, ip
 10357 01ac F3D1     		bne	.L452
 10358 01ae 7346     		mov	r3, lr
 10359 01b0 2246     		mov	r2, r4
 10360 01b2 1068     		ldr	r0, [r2]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 247


 10361 01b4 1860     		str	r0, [r3]	@ unaligned
 10362 01b6 9188     		ldrh	r1, [r2, #4]	@ unaligned
 10363 01b8 9279     		ldrb	r2, [r2, #6]
 10364 01ba 9980     		strh	r1, [r3, #4]	@ unaligned
 10365 01bc 9A71     		strb	r2, [r3, #6]
1580:..\src/command_processing.c ****                 break;
 10366              		.loc 1 1580 0
 10367 01be 34E0     		b	.L451
 10368              	.L449:
1581:..\src/command_processing.c ****             case OTBK_ACT_WRIST_MS:
1582:..\src/command_processing.c ****                 strcat(info_string, "Device: OTTOBOCK 6v ACTIVE WRIST MASTER\r\n");
 10369              		.loc 1 1582 0
 10370 01c0 7869     		ldr	r0, [r7, #20]
 10371 01c2 FFF7FEFF 		bl	strlen
 10372 01c6 0346     		mov	r3, r0
 10373 01c8 1A46     		mov	r2, r3
 10374 01ca 7B69     		ldr	r3, [r7, #20]
 10375 01cc 1344     		add	r3, r3, r2
 10376 01ce 604A     		ldr	r2, .L542+40
 10377 01d0 1446     		mov	r4, r2
 10378 01d2 9E46     		mov	lr, r3
 10379 01d4 04F1200C 		add	ip, r4, #32
 10380              	.L453:
 10381 01d8 7546     		mov	r5, lr
 10382 01da 2646     		mov	r6, r4
 10383 01dc 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 10384 01de 2860     		str	r0, [r5]	@ unaligned
 10385 01e0 6960     		str	r1, [r5, #4]	@ unaligned
 10386 01e2 AA60     		str	r2, [r5, #8]	@ unaligned
 10387 01e4 EB60     		str	r3, [r5, #12]	@ unaligned
 10388 01e6 1034     		adds	r4, r4, #16
 10389 01e8 0EF1100E 		add	lr, lr, #16
 10390 01ec 6445     		cmp	r4, ip
 10391 01ee F3D1     		bne	.L453
 10392 01f0 7246     		mov	r2, lr
 10393 01f2 2346     		mov	r3, r4
 10394 01f4 03CB     		ldmia	r3!, {r0, r1}
 10395 01f6 1060     		str	r0, [r2]	@ unaligned
 10396 01f8 5160     		str	r1, [r2, #4]	@ unaligned
 10397 01fa 1B88     		ldrh	r3, [r3]	@ unaligned
 10398 01fc 1381     		strh	r3, [r2, #8]	@ unaligned
1583:..\src/command_processing.c ****                 break;
 10399              		.loc 1 1583 0
 10400 01fe 14E0     		b	.L451
 10401              	.L450:
1584:..\src/command_processing.c ****             case SOFTHAND_2_MOTORS:
1585:..\src/command_processing.c ****                 strcat(info_string, "Device: SOFTHAND 2 MOTORS\r\n");
 10402              		.loc 1 1585 0
 10403 0200 7869     		ldr	r0, [r7, #20]
 10404 0202 FFF7FEFF 		bl	strlen
 10405 0206 0346     		mov	r3, r0
 10406 0208 1A46     		mov	r2, r3
 10407 020a 7B69     		ldr	r3, [r7, #20]
 10408 020c 1344     		add	r3, r3, r2
 10409 020e 514A     		ldr	r2, .L542+44
 10410 0210 1D46     		mov	r5, r3
 10411 0212 1446     		mov	r4, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 248


 10412 0214 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 10413 0216 2860     		str	r0, [r5]	@ unaligned
 10414 0218 6960     		str	r1, [r5, #4]	@ unaligned
 10415 021a AA60     		str	r2, [r5, #8]	@ unaligned
 10416 021c EB60     		str	r3, [r5, #12]	@ unaligned
 10417 021e 07CC     		ldmia	r4!, {r0, r1, r2}
 10418 0220 2861     		str	r0, [r5, #16]	@ unaligned
 10419 0222 6961     		str	r1, [r5, #20]	@ unaligned
 10420 0224 AA61     		str	r2, [r5, #24]	@ unaligned
1586:..\src/command_processing.c ****                 break;
 10421              		.loc 1 1586 0
 10422 0226 00E0     		b	.L451
 10423              	.L540:
1587:..\src/command_processing.c ****             default:
1588:..\src/command_processing.c ****                 break;
 10424              		.loc 1 1588 0
 10425 0228 00BF     		nop
 10426              	.L451:
1589:..\src/command_processing.c ****         }
1590:..\src/command_processing.c ****         
1591:..\src/command_processing.c ****         switch(MEM_P->dev.right_left){
 10427              		.loc 1 1591 0
 10428 022a D7F88C30 		ldr	r3, [r7, #140]
 10429 022e 93F8A730 		ldrb	r3, [r3, #167]	@ zero_extendqisi2
 10430 0232 002B     		cmp	r3, #0
 10431 0234 02D0     		beq	.L455
 10432 0236 012B     		cmp	r3, #1
 10433 0238 15D0     		beq	.L456
 10434 023a 26E0     		b	.L454
 10435              	.L455:
1592:..\src/command_processing.c ****             case RIGHT_HAND:
1593:..\src/command_processing.c ****                 strcat(info_string, "Hand side: RIGHT\r\n");
 10436              		.loc 1 1593 0
 10437 023c 7869     		ldr	r0, [r7, #20]
 10438 023e FFF7FEFF 		bl	strlen
 10439 0242 0346     		mov	r3, r0
 10440 0244 1A46     		mov	r2, r3
 10441 0246 7B69     		ldr	r3, [r7, #20]
 10442 0248 1344     		add	r3, r3, r2
 10443 024a 434A     		ldr	r2, .L542+48
 10444 024c 1D46     		mov	r5, r3
 10445 024e 1446     		mov	r4, r2
 10446 0250 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 10447 0252 2860     		str	r0, [r5]	@ unaligned
 10448 0254 6960     		str	r1, [r5, #4]	@ unaligned
 10449 0256 AA60     		str	r2, [r5, #8]	@ unaligned
 10450 0258 EB60     		str	r3, [r5, #12]	@ unaligned
 10451 025a 2388     		ldrh	r3, [r4]	@ unaligned
 10452 025c A278     		ldrb	r2, [r4, #2]
 10453 025e 2B82     		strh	r3, [r5, #16]	@ unaligned
 10454 0260 1346     		mov	r3, r2
 10455 0262 AB74     		strb	r3, [r5, #18]
1594:..\src/command_processing.c ****                 break;
 10456              		.loc 1 1594 0
 10457 0264 11E0     		b	.L454
 10458              	.L456:
1595:..\src/command_processing.c ****             case LEFT_HAND:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 249


1596:..\src/command_processing.c ****                 strcat(info_string, "Hand side: LEFT\r\n");
 10459              		.loc 1 1596 0
 10460 0266 7869     		ldr	r0, [r7, #20]
 10461 0268 FFF7FEFF 		bl	strlen
 10462 026c 0346     		mov	r3, r0
 10463 026e 1A46     		mov	r2, r3
 10464 0270 7B69     		ldr	r3, [r7, #20]
 10465 0272 1344     		add	r3, r3, r2
 10466 0274 394A     		ldr	r2, .L542+52
 10467 0276 1D46     		mov	r5, r3
 10468 0278 1446     		mov	r4, r2
 10469 027a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 10470 027c 2860     		str	r0, [r5]	@ unaligned
 10471 027e 6960     		str	r1, [r5, #4]	@ unaligned
 10472 0280 AA60     		str	r2, [r5, #8]	@ unaligned
 10473 0282 EB60     		str	r3, [r5, #12]	@ unaligned
 10474 0284 2388     		ldrh	r3, [r4]	@ unaligned
 10475 0286 2B82     		strh	r3, [r5, #16]	@ unaligned
1597:..\src/command_processing.c ****                 break;
 10476              		.loc 1 1597 0
 10477 0288 00BF     		nop
 10478              	.L454:
1598:..\src/command_processing.c ****         }
1599:..\src/command_processing.c **** 
1600:..\src/command_processing.c ****         switch(MEM_P->dev.user_id) {
 10479              		.loc 1 1600 0
 10480 028a D7F88C30 		ldr	r3, [r7, #140]
 10481 028e 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 10482 0292 012B     		cmp	r3, #1
 10483 0294 02D0     		beq	.L458
 10484 0296 022B     		cmp	r3, #2
 10485 0298 11D0     		beq	.L459
 10486 029a 1FE0     		b	.L538
 10487              	.L458:
1601:..\src/command_processing.c ****             case MARIA:
1602:..\src/command_processing.c ****                 strcat(info_string, "User: MARIA\r\n");
 10488              		.loc 1 1602 0
 10489 029c 7869     		ldr	r0, [r7, #20]
 10490 029e FFF7FEFF 		bl	strlen
 10491 02a2 0346     		mov	r3, r0
 10492 02a4 1A46     		mov	r2, r3
 10493 02a6 7B69     		ldr	r3, [r7, #20]
 10494 02a8 1344     		add	r3, r3, r2
 10495 02aa 2D4A     		ldr	r2, .L542+56
 10496 02ac 1C46     		mov	r4, r3
 10497 02ae 1346     		mov	r3, r2
 10498 02b0 07CB     		ldmia	r3!, {r0, r1, r2}
 10499 02b2 2060     		str	r0, [r4]	@ unaligned
 10500 02b4 6160     		str	r1, [r4, #4]	@ unaligned
 10501 02b6 A260     		str	r2, [r4, #8]	@ unaligned
 10502 02b8 1B88     		ldrh	r3, [r3]	@ unaligned
 10503 02ba A381     		strh	r3, [r4, #12]	@ unaligned
1603:..\src/command_processing.c ****                 break;
 10504              		.loc 1 1603 0
 10505 02bc 22E0     		b	.L460
 10506              	.L459:
1604:..\src/command_processing.c ****             case R01:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 250


1605:..\src/command_processing.c ****                 strcat(info_string, "User: R01\r\n");
 10507              		.loc 1 1605 0
 10508 02be 7869     		ldr	r0, [r7, #20]
 10509 02c0 FFF7FEFF 		bl	strlen
 10510 02c4 0346     		mov	r3, r0
 10511 02c6 1A46     		mov	r2, r3
 10512 02c8 7B69     		ldr	r3, [r7, #20]
 10513 02ca 1344     		add	r3, r3, r2
 10514 02cc 254A     		ldr	r2, .L542+60
 10515 02ce 1C46     		mov	r4, r3
 10516 02d0 1346     		mov	r3, r2
 10517 02d2 07CB     		ldmia	r3!, {r0, r1, r2}
 10518 02d4 2060     		str	r0, [r4]	@ unaligned
 10519 02d6 6160     		str	r1, [r4, #4]	@ unaligned
 10520 02d8 A260     		str	r2, [r4, #8]	@ unaligned
1606:..\src/command_processing.c ****                 break;
 10521              		.loc 1 1606 0
 10522 02da 13E0     		b	.L460
 10523              	.L538:
1607:..\src/command_processing.c ****             default:
1608:..\src/command_processing.c ****                 strcat(info_string, "User: GENERIC USER\r\n");
 10524              		.loc 1 1608 0
 10525 02dc 7869     		ldr	r0, [r7, #20]
 10526 02de FFF7FEFF 		bl	strlen
 10527 02e2 0346     		mov	r3, r0
 10528 02e4 1A46     		mov	r2, r3
 10529 02e6 7B69     		ldr	r3, [r7, #20]
 10530 02e8 1344     		add	r3, r3, r2
 10531 02ea 1F4A     		ldr	r2, .L542+64
 10532 02ec 1D46     		mov	r5, r3
 10533 02ee 1446     		mov	r4, r2
 10534 02f0 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 10535 02f2 2860     		str	r0, [r5]	@ unaligned
 10536 02f4 6960     		str	r1, [r5, #4]	@ unaligned
 10537 02f6 AA60     		str	r2, [r5, #8]	@ unaligned
 10538 02f8 EB60     		str	r3, [r5, #12]	@ unaligned
 10539 02fa 2068     		ldr	r0, [r4]	@ unaligned
 10540 02fc 2861     		str	r0, [r5, #16]	@ unaligned
 10541 02fe 2379     		ldrb	r3, [r4, #4]
 10542 0300 2B75     		strb	r3, [r5, #20]
1609:..\src/command_processing.c ****                 break;
 10543              		.loc 1 1609 0
 10544 0302 00BF     		nop
 10545              	.L460:
1610:..\src/command_processing.c ****         }
1611:..\src/command_processing.c ****         strcat(info_string, "\r\n");  
 10546              		.loc 1 1611 0
 10547 0304 7869     		ldr	r0, [r7, #20]
 10548 0306 FFF7FEFF 		bl	strlen
 10549 030a 0346     		mov	r3, r0
 10550 030c 1A46     		mov	r2, r3
 10551 030e 7B69     		ldr	r3, [r7, #20]
 10552 0310 1344     		add	r3, r3, r2
 10553 0312 064A     		ldr	r2, .L542+4
 10554 0314 1188     		ldrh	r1, [r2]	@ unaligned
 10555 0316 9278     		ldrb	r2, [r2, #2]
 10556 0318 1980     		strh	r1, [r3]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 251


 10557 031a 9A70     		strb	r2, [r3, #2]
 10558              	.LBB24:
1612:..\src/command_processing.c ****         
1613:..\src/command_processing.c ****         for (uint8 k = 0; k <= MEM_P->dev.use_2nd_motor_flag; k++) {
 10559              		.loc 1 1613 0
 10560 031c 0023     		movs	r3, #0
 10561 031e 87F89330 		strb	r3, [r7, #147]
 10562 0322 01F070B8 		b	.L461
 10563              	.L543:
 10564 0326 00BF     		.align	2
 10565              	.L542:
 10566 0328 00000000 		.word	c_mem
 10567 032c 58110000 		.word	.LC152
 10568 0330 5C110000 		.word	.LC153
 10569 0334 70110000 		.word	.LC154
 10570 0338 98110000 		.word	.LC155
 10571 033c A0110000 		.word	.LC156
 10572 0340 B0110000 		.word	.LC157
 10573 0344 BC110000 		.word	.LC158
 10574 0348 D4110000 		.word	.LC159
 10575 034c F0110000 		.word	.LC160
 10576 0350 18120000 		.word	.LC161
 10577 0354 44120000 		.word	.LC162
 10578 0358 60120000 		.word	.LC163
 10579 035c 74120000 		.word	.LC164
 10580 0360 88120000 		.word	.LC165
 10581 0364 98120000 		.word	.LC166
 10582 0368 A4120000 		.word	.LC167
 10583              	.L514:
 10584              	.LBB25:
1614:..\src/command_processing.c ****             
1615:..\src/command_processing.c ****             uint8 MOTOR_IDX = k;
 10585              		.loc 1 1615 0
 10586 036c 97F89330 		ldrb	r3, [r7, #147]
 10587 0370 87F88B30 		strb	r3, [r7, #139]
1616:..\src/command_processing.c ****             struct st_motor* MOT = &(MEM_P->motor[MOTOR_IDX]);      // Default motor
 10588              		.loc 1 1616 0
 10589 0374 97F88B20 		ldrb	r2, [r7, #139]	@ zero_extendqisi2
 10590 0378 1346     		mov	r3, r2
 10591 037a DB00     		lsls	r3, r3, #3
 10592 037c 9B1A     		subs	r3, r3, r2
 10593 037e 1B01     		lsls	r3, r3, #4
 10594 0380 B033     		adds	r3, r3, #176
 10595 0382 D7F88C20 		ldr	r2, [r7, #140]
 10596 0386 1344     		add	r3, r3, r2
 10597 0388 C7F88430 		str	r3, [r7, #132]
1617:..\src/command_processing.c ****             uint8 ENC_L = MOT->encoder_line;             // Associated encoder line
 10598              		.loc 1 1617 0
 10599 038c D7F88430 		ldr	r3, [r7, #132]
 10600 0390 93F86030 		ldrb	r3, [r3, #96]
 10601 0394 87F88330 		strb	r3, [r7, #131]
1618:..\src/command_processing.c ****                   
1619:..\src/command_processing.c ****             sprintf(str, "MOTOR %d INFO\r\n", MOTOR_IDX+1);
 10602              		.loc 1 1619 0
 10603 0398 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 10604 039c 5A1C     		adds	r2, r3, #1
 10605 039e 07F11C03 		add	r3, r7, #28
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 252


 10606 03a2 AE49     		ldr	r1, .L544
 10607 03a4 1846     		mov	r0, r3
 10608 03a6 FFF7FEFF 		bl	sprintf
1620:..\src/command_processing.c ****             strcat(info_string, str);
 10609              		.loc 1 1620 0
 10610 03aa 07F11C03 		add	r3, r7, #28
 10611 03ae 1946     		mov	r1, r3
 10612 03b0 7869     		ldr	r0, [r7, #20]
 10613 03b2 FFF7FEFF 		bl	strcat
1621:..\src/command_processing.c ****                         
1622:..\src/command_processing.c ****             strcat(info_string, "Motor reference");
 10614              		.loc 1 1622 0
 10615 03b6 7869     		ldr	r0, [r7, #20]
 10616 03b8 FFF7FEFF 		bl	strlen
 10617 03bc 0346     		mov	r3, r0
 10618 03be 1A46     		mov	r2, r3
 10619 03c0 7B69     		ldr	r3, [r7, #20]
 10620 03c2 1344     		add	r3, r3, r2
 10621 03c4 A64A     		ldr	r2, .L544+4
 10622 03c6 1C46     		mov	r4, r3
 10623 03c8 1546     		mov	r5, r2
 10624 03ca 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 10625 03cc 2060     		str	r0, [r4]	@ unaligned
 10626 03ce 6160     		str	r1, [r4, #4]	@ unaligned
 10627 03d0 A260     		str	r2, [r4, #8]	@ unaligned
 10628 03d2 E360     		str	r3, [r4, #12]	@ unaligned
1623:..\src/command_processing.c ****             if(MOT->control_mode == CONTROL_CURRENT)
 10629              		.loc 1 1623 0
 10630 03d4 D7F88430 		ldr	r3, [r7, #132]
 10631 03d8 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 10632 03dc 022B     		cmp	r3, #2
 10633 03de 10D1     		bne	.L462
1624:..\src/command_processing.c ****                 strcat(info_string," - Currents: ");
 10634              		.loc 1 1624 0
 10635 03e0 7869     		ldr	r0, [r7, #20]
 10636 03e2 FFF7FEFF 		bl	strlen
 10637 03e6 0346     		mov	r3, r0
 10638 03e8 1A46     		mov	r2, r3
 10639 03ea 7B69     		ldr	r3, [r7, #20]
 10640 03ec 1344     		add	r3, r3, r2
 10641 03ee 9D4A     		ldr	r2, .L544+8
 10642 03f0 1C46     		mov	r4, r3
 10643 03f2 1346     		mov	r3, r2
 10644 03f4 07CB     		ldmia	r3!, {r0, r1, r2}
 10645 03f6 2060     		str	r0, [r4]	@ unaligned
 10646 03f8 6160     		str	r1, [r4, #4]	@ unaligned
 10647 03fa A260     		str	r2, [r4, #8]	@ unaligned
 10648 03fc 1B88     		ldrh	r3, [r3]	@ unaligned
 10649 03fe A381     		strh	r3, [r4, #12]	@ unaligned
 10650 0400 25E0     		b	.L463
 10651              	.L462:
1625:..\src/command_processing.c ****             else {
1626:..\src/command_processing.c ****                 if (MOT->control_mode == CONTROL_PWM)
 10652              		.loc 1 1626 0
 10653 0402 D7F88430 		ldr	r3, [r7, #132]
 10654 0406 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 10655 040a 012B     		cmp	r3, #1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 253


 10656 040c 0FD1     		bne	.L464
1627:..\src/command_processing.c ****                     strcat(info_string," - Pwm: ");
 10657              		.loc 1 1627 0
 10658 040e 7869     		ldr	r0, [r7, #20]
 10659 0410 FFF7FEFF 		bl	strlen
 10660 0414 0346     		mov	r3, r0
 10661 0416 1A46     		mov	r2, r3
 10662 0418 7B69     		ldr	r3, [r7, #20]
 10663 041a 1344     		add	r3, r3, r2
 10664 041c 9249     		ldr	r1, .L544+12
 10665 041e 1A46     		mov	r2, r3
 10666 0420 0B46     		mov	r3, r1
 10667 0422 03CB     		ldmia	r3!, {r0, r1}
 10668 0424 1060     		str	r0, [r2]	@ unaligned
 10669 0426 5160     		str	r1, [r2, #4]	@ unaligned
 10670 0428 1B78     		ldrb	r3, [r3]
 10671 042a 1372     		strb	r3, [r2, #8]
 10672 042c 0FE0     		b	.L463
 10673              	.L464:
1628:..\src/command_processing.c ****                 else
1629:..\src/command_processing.c ****                     strcat(info_string," - Position: ");
 10674              		.loc 1 1629 0
 10675 042e 7869     		ldr	r0, [r7, #20]
 10676 0430 FFF7FEFF 		bl	strlen
 10677 0434 0346     		mov	r3, r0
 10678 0436 1A46     		mov	r2, r3
 10679 0438 7B69     		ldr	r3, [r7, #20]
 10680 043a 1344     		add	r3, r3, r2
 10681 043c 8B4A     		ldr	r2, .L544+16
 10682 043e 1C46     		mov	r4, r3
 10683 0440 1346     		mov	r3, r2
 10684 0442 07CB     		ldmia	r3!, {r0, r1, r2}
 10685 0444 2060     		str	r0, [r4]	@ unaligned
 10686 0446 6160     		str	r1, [r4, #4]	@ unaligned
 10687 0448 A260     		str	r2, [r4, #8]	@ unaligned
 10688 044a 1B88     		ldrh	r3, [r3]	@ unaligned
 10689 044c A381     		strh	r3, [r4, #12]	@ unaligned
 10690              	.L463:
1630:..\src/command_processing.c ****             }
1631:..\src/command_processing.c ****             if(MOT->control_mode == CONTROL_CURRENT) {
 10691              		.loc 1 1631 0
 10692 044e D7F88430 		ldr	r3, [r7, #132]
 10693 0452 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 10694 0456 022B     		cmp	r3, #2
 10695 0458 13D1     		bne	.L465
1632:..\src/command_processing.c ****                 sprintf(str, "%d ", (int)(g_refOld[MOTOR_IDX].curr));
 10696              		.loc 1 1632 0
 10697 045a 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 10698 045e 844A     		ldr	r2, .L544+20
 10699 0460 1B01     		lsls	r3, r3, #4
 10700 0462 1344     		add	r3, r3, r2
 10701 0464 0433     		adds	r3, r3, #4
 10702 0466 1A68     		ldr	r2, [r3]
 10703 0468 07F11C03 		add	r3, r7, #28
 10704 046c 8149     		ldr	r1, .L544+24
 10705 046e 1846     		mov	r0, r3
 10706 0470 FFF7FEFF 		bl	sprintf
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 254


1633:..\src/command_processing.c ****                 strcat(info_string,str);
 10707              		.loc 1 1633 0
 10708 0474 07F11C03 		add	r3, r7, #28
 10709 0478 1946     		mov	r1, r3
 10710 047a 7869     		ldr	r0, [r7, #20]
 10711 047c FFF7FEFF 		bl	strcat
 10712 0480 39E0     		b	.L466
 10713              	.L465:
1634:..\src/command_processing.c ****             }
1635:..\src/command_processing.c ****             else {
1636:..\src/command_processing.c ****                 if(MOT->control_mode == CONTROL_PWM) {
 10714              		.loc 1 1636 0
 10715 0482 D7F88430 		ldr	r3, [r7, #132]
 10716 0486 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 10717 048a 012B     		cmp	r3, #1
 10718 048c 13D1     		bne	.L467
1637:..\src/command_processing.c ****                     sprintf(str, "%d ", (int)(g_refOld[MOTOR_IDX].pwm));
 10719              		.loc 1 1637 0
 10720 048e 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 10721 0492 774A     		ldr	r2, .L544+20
 10722 0494 1B01     		lsls	r3, r3, #4
 10723 0496 1344     		add	r3, r3, r2
 10724 0498 0833     		adds	r3, r3, #8
 10725 049a 1A68     		ldr	r2, [r3]
 10726 049c 07F11C03 		add	r3, r7, #28
 10727 04a0 7449     		ldr	r1, .L544+24
 10728 04a2 1846     		mov	r0, r3
 10729 04a4 FFF7FEFF 		bl	sprintf
1638:..\src/command_processing.c ****                     strcat(info_string,str);
 10730              		.loc 1 1638 0
 10731 04a8 07F11C03 		add	r3, r7, #28
 10732 04ac 1946     		mov	r1, r3
 10733 04ae 7869     		ldr	r0, [r7, #20]
 10734 04b0 FFF7FEFF 		bl	strcat
 10735 04b4 1FE0     		b	.L466
 10736              	.L467:
1639:..\src/command_processing.c ****                 }
1640:..\src/command_processing.c ****                 else {
1641:..\src/command_processing.c ****                     sprintf(str, "%d ", (int)(g_refOld[MOTOR_IDX].pos >> MEM_P->enc[ENC_L].res[0]))
 10737              		.loc 1 1641 0
 10738 04b6 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 10739 04ba 6D4A     		ldr	r2, .L544+20
 10740 04bc 1B01     		lsls	r3, r3, #4
 10741 04be 1344     		add	r3, r3, r2
 10742 04c0 1968     		ldr	r1, [r3]
 10743 04c2 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 10744 04c6 D7F88C00 		ldr	r0, [r7, #140]
 10745 04ca 1346     		mov	r3, r2
 10746 04cc 5B00     		lsls	r3, r3, #1
 10747 04ce 1344     		add	r3, r3, r2
 10748 04d0 1B01     		lsls	r3, r3, #4
 10749 04d2 0344     		add	r3, r3, r0
 10750 04d4 03F29513 		addw	r3, r3, #405
 10751 04d8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10752 04da 41FA03F2 		asr	r2, r1, r3
 10753 04de 07F11C03 		add	r3, r7, #28
 10754 04e2 6449     		ldr	r1, .L544+24
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 255


 10755 04e4 1846     		mov	r0, r3
 10756 04e6 FFF7FEFF 		bl	sprintf
1642:..\src/command_processing.c ****                     strcat(info_string,str);
 10757              		.loc 1 1642 0
 10758 04ea 07F11C03 		add	r3, r7, #28
 10759 04ee 1946     		mov	r1, r3
 10760 04f0 7869     		ldr	r0, [r7, #20]
 10761 04f2 FFF7FEFF 		bl	strcat
 10762              	.L466:
1643:..\src/command_processing.c ****                 }
1644:..\src/command_processing.c ****             }
1645:..\src/command_processing.c ****             strcat(info_string,"\r\n");
 10763              		.loc 1 1645 0
 10764 04f6 7869     		ldr	r0, [r7, #20]
 10765 04f8 FFF7FEFF 		bl	strlen
 10766 04fc 0346     		mov	r3, r0
 10767 04fe 1A46     		mov	r2, r3
 10768 0500 7B69     		ldr	r3, [r7, #20]
 10769 0502 1344     		add	r3, r3, r2
 10770 0504 5C4A     		ldr	r2, .L544+28
 10771 0506 1188     		ldrh	r1, [r2]	@ unaligned
 10772 0508 9278     		ldrb	r2, [r2, #2]
 10773 050a 1980     		strh	r1, [r3]	@ unaligned
 10774 050c 9A70     		strb	r2, [r3, #2]
1646:..\src/command_processing.c **** 
1647:..\src/command_processing.c ****             sprintf(str, "Motor enabled: ");
 10775              		.loc 1 1647 0
 10776 050e 07F11C03 		add	r3, r7, #28
 10777 0512 5A4A     		ldr	r2, .L544+32
 10778 0514 1C46     		mov	r4, r3
 10779 0516 1346     		mov	r3, r2
 10780 0518 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 10781 051a 84E80F00 		stmia	r4, {r0, r1, r2, r3}
1648:..\src/command_processing.c ****             if (g_ref[MOTOR_IDX].onoff & 0x01) {
 10782              		.loc 1 1648 0
 10783 051e 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 10784 0522 574A     		ldr	r2, .L544+36
 10785 0524 1B01     		lsls	r3, r3, #4
 10786 0526 1344     		add	r3, r3, r2
 10787 0528 0C33     		adds	r3, r3, #12
 10788 052a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10789 052c 03F00103 		and	r3, r3, #1
 10790 0530 002B     		cmp	r3, #0
 10791 0532 0FD0     		beq	.L468
1649:..\src/command_processing.c ****                 strcat(str, "YES\r\n");
 10792              		.loc 1 1649 0
 10793 0534 07F11C03 		add	r3, r7, #28
 10794 0538 1846     		mov	r0, r3
 10795 053a FFF7FEFF 		bl	strlen
 10796 053e 0346     		mov	r3, r0
 10797 0540 1A46     		mov	r2, r3
 10798 0542 07F11C03 		add	r3, r7, #28
 10799 0546 1344     		add	r3, r3, r2
 10800 0548 4E4A     		ldr	r2, .L544+40
 10801 054a 1068     		ldr	r0, [r2]	@ unaligned
 10802 054c 1860     		str	r0, [r3]	@ unaligned
 10803 054e 9288     		ldrh	r2, [r2, #4]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 256


 10804 0550 9A80     		strh	r2, [r3, #4]	@ unaligned
 10805 0552 0EE0     		b	.L469
 10806              	.L468:
1650:..\src/command_processing.c ****             } else {
1651:..\src/command_processing.c ****                 strcat(str, "NO\r\n");
 10807              		.loc 1 1651 0
 10808 0554 07F11C03 		add	r3, r7, #28
 10809 0558 1846     		mov	r0, r3
 10810 055a FFF7FEFF 		bl	strlen
 10811 055e 0346     		mov	r3, r0
 10812 0560 1A46     		mov	r2, r3
 10813 0562 07F11C03 		add	r3, r7, #28
 10814 0566 1344     		add	r3, r3, r2
 10815 0568 474A     		ldr	r2, .L544+44
 10816 056a 1068     		ldr	r0, [r2]	@ unaligned
 10817 056c 1860     		str	r0, [r3]	@ unaligned
 10818 056e 1279     		ldrb	r2, [r2, #4]
 10819 0570 1A71     		strb	r2, [r3, #4]
 10820              	.L469:
1652:..\src/command_processing.c ****             }
1653:..\src/command_processing.c ****             strcat(info_string, str);
 10821              		.loc 1 1653 0
 10822 0572 07F11C03 		add	r3, r7, #28
 10823 0576 1946     		mov	r1, r3
 10824 0578 7869     		ldr	r0, [r7, #20]
 10825 057a FFF7FEFF 		bl	strcat
1654:..\src/command_processing.c ****                         
1655:..\src/command_processing.c ****             strcat(info_string, "PWM rescaling activation: ");
 10826              		.loc 1 1655 0
 10827 057e 7869     		ldr	r0, [r7, #20]
 10828 0580 FFF7FEFF 		bl	strlen
 10829 0584 0346     		mov	r3, r0
 10830 0586 1A46     		mov	r2, r3
 10831 0588 7B69     		ldr	r3, [r7, #20]
 10832 058a 1344     		add	r3, r3, r2
 10833 058c 3F4A     		ldr	r2, .L544+48
 10834 058e 1D46     		mov	r5, r3
 10835 0590 1446     		mov	r4, r2
 10836 0592 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 10837 0594 2860     		str	r0, [r5]	@ unaligned
 10838 0596 6960     		str	r1, [r5, #4]	@ unaligned
 10839 0598 AA60     		str	r2, [r5, #8]	@ unaligned
 10840 059a EB60     		str	r3, [r5, #12]	@ unaligned
 10841 059c 03CC     		ldmia	r4!, {r0, r1}
 10842 059e 2861     		str	r0, [r5, #16]	@ unaligned
 10843 05a0 6961     		str	r1, [r5, #20]	@ unaligned
 10844 05a2 2388     		ldrh	r3, [r4]	@ unaligned
 10845 05a4 A278     		ldrb	r2, [r4, #2]
 10846 05a6 2B83     		strh	r3, [r5, #24]	@ unaligned
 10847 05a8 1346     		mov	r3, r2
 10848 05aa AB76     		strb	r3, [r5, #26]
1656:..\src/command_processing.c ****             if(MOT->activate_pwm_rescaling == MAXON_12V)
 10849              		.loc 1 1656 0
 10850 05ac D7F88430 		ldr	r3, [r7, #132]
 10851 05b0 93F83130 		ldrb	r3, [r3, #49]	@ zero_extendqisi2
 10852 05b4 012B     		cmp	r3, #1
 10853 05b6 0CD1     		bne	.L470
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 257


1657:..\src/command_processing.c ****                 strcat(info_string, "YES\n");
 10854              		.loc 1 1657 0
 10855 05b8 7869     		ldr	r0, [r7, #20]
 10856 05ba FFF7FEFF 		bl	strlen
 10857 05be 0346     		mov	r3, r0
 10858 05c0 1A46     		mov	r2, r3
 10859 05c2 7B69     		ldr	r3, [r7, #20]
 10860 05c4 1344     		add	r3, r3, r2
 10861 05c6 324A     		ldr	r2, .L544+52
 10862 05c8 1068     		ldr	r0, [r2]	@ unaligned
 10863 05ca 1860     		str	r0, [r3]	@ unaligned
 10864 05cc 1279     		ldrb	r2, [r2, #4]
 10865 05ce 1A71     		strb	r2, [r3, #4]
 10866 05d0 09E0     		b	.L471
 10867              	.L470:
1658:..\src/command_processing.c ****             else
1659:..\src/command_processing.c ****                 strcat(info_string, "NO\n");
 10868              		.loc 1 1659 0
 10869 05d2 7869     		ldr	r0, [r7, #20]
 10870 05d4 FFF7FEFF 		bl	strlen
 10871 05d8 0346     		mov	r3, r0
 10872 05da 1A46     		mov	r2, r3
 10873 05dc 7B69     		ldr	r3, [r7, #20]
 10874 05de 1344     		add	r3, r3, r2
 10875 05e0 2C4A     		ldr	r2, .L544+56
 10876 05e2 1068     		ldr	r0, [r2]	@ unaligned
 10877 05e4 1860     		str	r0, [r3]	@ unaligned
 10878              	.L471:
1660:..\src/command_processing.c ****             
1661:..\src/command_processing.c ****             sprintf(str, "PWM Limit: %d\r\n", (int) dev_pwm_limit[MOTOR_IDX]);
 10879              		.loc 1 1661 0
 10880 05e6 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 10881 05ea 2B4A     		ldr	r2, .L544+60
 10882 05ec 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 10883 05f0 1A46     		mov	r2, r3
 10884 05f2 07F11C03 		add	r3, r7, #28
 10885 05f6 2949     		ldr	r1, .L544+64
 10886 05f8 1846     		mov	r0, r3
 10887 05fa FFF7FEFF 		bl	sprintf
1662:..\src/command_processing.c ****             strcat(info_string, str);
 10888              		.loc 1 1662 0
 10889 05fe 07F11C03 		add	r3, r7, #28
 10890 0602 1946     		mov	r1, r3
 10891 0604 7869     		ldr	r0, [r7, #20]
 10892 0606 FFF7FEFF 		bl	strcat
1663:..\src/command_processing.c **** 
1664:..\src/command_processing.c ****             strcat(info_string, "\r\nMEASUREMENTS INFO\r\n");
 10893              		.loc 1 1664 0
 10894 060a 7869     		ldr	r0, [r7, #20]
 10895 060c FFF7FEFF 		bl	strlen
 10896 0610 0346     		mov	r3, r0
 10897 0612 1A46     		mov	r2, r3
 10898 0614 7B69     		ldr	r3, [r7, #20]
 10899 0616 1344     		add	r3, r3, r2
 10900 0618 214A     		ldr	r2, .L544+68
 10901 061a 1D46     		mov	r5, r3
 10902 061c 1446     		mov	r4, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 258


 10903 061e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 10904 0620 2860     		str	r0, [r5]	@ unaligned
 10905 0622 6960     		str	r1, [r5, #4]	@ unaligned
 10906 0624 AA60     		str	r2, [r5, #8]	@ unaligned
 10907 0626 EB60     		str	r3, [r5, #12]	@ unaligned
 10908 0628 2068     		ldr	r0, [r4]	@ unaligned
 10909 062a 2861     		str	r0, [r5, #16]	@ unaligned
 10910 062c A388     		ldrh	r3, [r4, #4]	@ unaligned
 10911 062e AB82     		strh	r3, [r5, #20]	@ unaligned
1665:..\src/command_processing.c ****             strcat(info_string, "Sensor value: ");
 10912              		.loc 1 1665 0
 10913 0630 7869     		ldr	r0, [r7, #20]
 10914 0632 FFF7FEFF 		bl	strlen
 10915 0636 0346     		mov	r3, r0
 10916 0638 1A46     		mov	r2, r3
 10917 063a 7B69     		ldr	r3, [r7, #20]
 10918 063c 1344     		add	r3, r3, r2
 10919 063e 194A     		ldr	r2, .L544+72
 10920 0640 1C46     		mov	r4, r3
 10921 0642 1346     		mov	r3, r2
 10922 0644 07CB     		ldmia	r3!, {r0, r1, r2}
 10923 0646 2060     		str	r0, [r4]	@ unaligned
 10924 0648 6160     		str	r1, [r4, #4]	@ unaligned
 10925 064a A260     		str	r2, [r4, #8]	@ unaligned
 10926 064c 1A88     		ldrh	r2, [r3]	@ unaligned
 10927 064e 9B78     		ldrb	r3, [r3, #2]
 10928 0650 A281     		strh	r2, [r4, #12]	@ unaligned
 10929 0652 A373     		strb	r3, [r4, #14]
1666:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; i++) {
 10930              		.loc 1 1666 0
 10931 0654 0023     		movs	r3, #0
 10932 0656 C7F89430 		str	r3, [r7, #148]
 10933 065a 64E0     		b	.L472
 10934              	.L545:
 10935              		.align	2
 10936              	.L544:
 10937 065c BC120000 		.word	.LC168
 10938 0660 CC120000 		.word	.LC169
 10939 0664 DC120000 		.word	.LC170
 10940 0668 EC120000 		.word	.LC171
 10941 066c F8120000 		.word	.LC172
 10942 0670 00000000 		.word	g_refOld
 10943 0674 08130000 		.word	.LC173
 10944 0678 58110000 		.word	.LC152
 10945 067c 0C130000 		.word	.LC174
 10946 0680 00000000 		.word	g_ref
 10947 0684 1C130000 		.word	.LC175
 10948 0688 24130000 		.word	.LC176
 10949 068c 2C130000 		.word	.LC177
 10950 0690 48130000 		.word	.LC178
 10951 0694 50130000 		.word	.LC179
 10952 0698 00000000 		.word	dev_pwm_limit
 10953 069c 54130000 		.word	.LC180
 10954 06a0 64130000 		.word	.LC181
 10955 06a4 7C130000 		.word	.LC182
 10956              	.L474:
1667:..\src/command_processing.c ****                 sprintf(str, "%d", (int)(g_meas[ENC_L].pos[i] >> MEM_P->enc[ENC_L].res[i]));
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 259


 10957              		.loc 1 1667 0
 10958 06a8 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 10959 06ac B849     		ldr	r1, .L546
 10960 06ae 1346     		mov	r3, r2
 10961 06b0 5B00     		lsls	r3, r3, #1
 10962 06b2 1344     		add	r3, r3, r2
 10963 06b4 9B00     		lsls	r3, r3, #2
 10964 06b6 1344     		add	r3, r3, r2
 10965 06b8 D7F89420 		ldr	r2, [r7, #148]
 10966 06bc 1344     		add	r3, r3, r2
 10967 06be 51F82310 		ldr	r1, [r1, r3, lsl #2]
 10968 06c2 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 10969 06c6 D7F88C00 		ldr	r0, [r7, #140]
 10970 06ca 1346     		mov	r3, r2
 10971 06cc 5B00     		lsls	r3, r3, #1
 10972 06ce 1344     		add	r3, r3, r2
 10973 06d0 1B01     		lsls	r3, r3, #4
 10974 06d2 C218     		adds	r2, r0, r3
 10975 06d4 D7F89430 		ldr	r3, [r7, #148]
 10976 06d8 1344     		add	r3, r3, r2
 10977 06da 03F29513 		addw	r3, r3, #405
 10978 06de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10979 06e0 41FA03F2 		asr	r2, r1, r3
 10980 06e4 07F11C03 		add	r3, r7, #28
 10981 06e8 AA49     		ldr	r1, .L546+4
 10982 06ea 1846     		mov	r0, r3
 10983 06ec FFF7FEFF 		bl	sprintf
1668:..\src/command_processing.c ****                 strcat(info_string, str);
 10984              		.loc 1 1668 0
 10985 06f0 07F11C03 		add	r3, r7, #28
 10986 06f4 1946     		mov	r1, r3
 10987 06f6 7869     		ldr	r0, [r7, #20]
 10988 06f8 FFF7FEFF 		bl	strcat
1669:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
 10989              		.loc 1 1669 0
 10990 06fc D7F89430 		ldr	r3, [r7, #148]
 10991 0700 022B     		cmp	r3, #2
 10992 0702 0BD0     		beq	.L473
1670:..\src/command_processing.c ****                     strcat(info_string, ", ");
 10993              		.loc 1 1670 0
 10994 0704 7869     		ldr	r0, [r7, #20]
 10995 0706 FFF7FEFF 		bl	strlen
 10996 070a 0346     		mov	r3, r0
 10997 070c 1A46     		mov	r2, r3
 10998 070e 7B69     		ldr	r3, [r7, #20]
 10999 0710 1344     		add	r3, r3, r2
 11000 0712 A14A     		ldr	r2, .L546+8
 11001 0714 1188     		ldrh	r1, [r2]	@ unaligned
 11002 0716 9278     		ldrb	r2, [r2, #2]
 11003 0718 1980     		strh	r1, [r3]	@ unaligned
 11004 071a 9A70     		strb	r2, [r3, #2]
 11005              	.L473:
1666:..\src/command_processing.c ****                 sprintf(str, "%d", (int)(g_meas[ENC_L].pos[i] >> MEM_P->enc[ENC_L].res[i]));
 11006              		.loc 1 1666 0 discriminator 2
 11007 071c D7F89430 		ldr	r3, [r7, #148]
 11008 0720 0133     		adds	r3, r3, #1
 11009 0722 C7F89430 		str	r3, [r7, #148]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 260


 11010              	.L472:
1666:..\src/command_processing.c ****                 sprintf(str, "%d", (int)(g_meas[ENC_L].pos[i] >> MEM_P->enc[ENC_L].res[i]));
 11011              		.loc 1 1666 0 is_stmt 0 discriminator 1
 11012 0726 D7F89430 		ldr	r3, [r7, #148]
 11013 072a 022B     		cmp	r3, #2
 11014 072c BCDD     		ble	.L474
1671:..\src/command_processing.c ****                 }                
1672:..\src/command_processing.c ****             }
1673:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 11015              		.loc 1 1673 0 is_stmt 1
 11016 072e 7869     		ldr	r0, [r7, #20]
 11017 0730 FFF7FEFF 		bl	strlen
 11018 0734 0346     		mov	r3, r0
 11019 0736 1A46     		mov	r2, r3
 11020 0738 7B69     		ldr	r3, [r7, #20]
 11021 073a 1344     		add	r3, r3, r2
 11022 073c 974A     		ldr	r2, .L546+12
 11023 073e 1188     		ldrh	r1, [r2]	@ unaligned
 11024 0740 9278     		ldrb	r2, [r2, #2]
 11025 0742 1980     		strh	r1, [r3]	@ unaligned
 11026 0744 9A70     		strb	r2, [r3, #2]
1674:..\src/command_processing.c ****             
1675:..\src/command_processing.c ****             if (MOT->input_mode == INPUT_MODE_JOYSTICK){
 11027              		.loc 1 1675 0
 11028 0746 D7F88430 		ldr	r3, [r7, #132]
 11029 074a 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
 11030 074e 062B     		cmp	r3, #6
 11031 0750 1AD1     		bne	.L475
1676:..\src/command_processing.c ****                 sprintf(str, "Joystick measurements: %d, %d", (int)g_adc_measOld.joystick[0], (int)
 11032              		.loc 1 1676 0
 11033 0752 934B     		ldr	r3, .L546+16
 11034 0754 1A6A     		ldr	r2, [r3, #32]
 11035 0756 924B     		ldr	r3, .L546+16
 11036 0758 5B6A     		ldr	r3, [r3, #36]
 11037 075a 07F11C00 		add	r0, r7, #28
 11038 075e 9149     		ldr	r1, .L546+20
 11039 0760 FFF7FEFF 		bl	sprintf
1677:..\src/command_processing.c ****                 strcat(info_string, str);
 11040              		.loc 1 1677 0
 11041 0764 07F11C03 		add	r3, r7, #28
 11042 0768 1946     		mov	r1, r3
 11043 076a 7869     		ldr	r0, [r7, #20]
 11044 076c FFF7FEFF 		bl	strcat
1678:..\src/command_processing.c ****                 strcat(info_string, "\r\n");
 11045              		.loc 1 1678 0
 11046 0770 7869     		ldr	r0, [r7, #20]
 11047 0772 FFF7FEFF 		bl	strlen
 11048 0776 0346     		mov	r3, r0
 11049 0778 1A46     		mov	r2, r3
 11050 077a 7B69     		ldr	r3, [r7, #20]
 11051 077c 1344     		add	r3, r3, r2
 11052 077e 874A     		ldr	r2, .L546+12
 11053 0780 1188     		ldrh	r1, [r2]	@ unaligned
 11054 0782 9278     		ldrb	r2, [r2, #2]
 11055 0784 1980     		strh	r1, [r3]	@ unaligned
 11056 0786 9A70     		strb	r2, [r3, #2]
 11057              	.L475:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 261


1679:..\src/command_processing.c ****             }
1680:..\src/command_processing.c **** 
1681:..\src/command_processing.c ****             sprintf(str, "Battery %d Voltage (mV): %ld", MOTOR_IDX+1, (int32) dev_tension[MOTOR_IDX
 11058              		.loc 1 1681 0
 11059 0788 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 11060 078c 591C     		adds	r1, r3, #1
 11061 078e 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 11062 0792 854A     		ldr	r2, .L546+24
 11063 0794 52F82330 		ldr	r3, [r2, r3, lsl #2]
 11064 0798 07F11C00 		add	r0, r7, #28
 11065 079c 0A46     		mov	r2, r1
 11066 079e 8349     		ldr	r1, .L546+28
 11067 07a0 FFF7FEFF 		bl	sprintf
1682:..\src/command_processing.c ****             strcat(info_string, str);
 11068              		.loc 1 1682 0
 11069 07a4 07F11C03 		add	r3, r7, #28
 11070 07a8 1946     		mov	r1, r3
 11071 07aa 7869     		ldr	r0, [r7, #20]
 11072 07ac FFF7FEFF 		bl	strcat
1683:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 11073              		.loc 1 1683 0
 11074 07b0 7869     		ldr	r0, [r7, #20]
 11075 07b2 FFF7FEFF 		bl	strlen
 11076 07b6 0346     		mov	r3, r0
 11077 07b8 1A46     		mov	r2, r3
 11078 07ba 7B69     		ldr	r3, [r7, #20]
 11079 07bc 1344     		add	r3, r3, r2
 11080 07be 774A     		ldr	r2, .L546+12
 11081 07c0 1188     		ldrh	r1, [r2]	@ unaligned
 11082 07c2 9278     		ldrb	r2, [r2, #2]
 11083 07c4 1980     		strh	r1, [r3]	@ unaligned
 11084 07c6 9A70     		strb	r2, [r3, #2]
1684:..\src/command_processing.c ****             
1685:..\src/command_processing.c ****             sprintf(str, "Full charge power tension %d (mV): %ld", MOTOR_IDX+1, (int32) pow_tension
 11085              		.loc 1 1685 0
 11086 07c8 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 11087 07cc 591C     		adds	r1, r3, #1
 11088 07ce 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 11089 07d2 774A     		ldr	r2, .L546+32
 11090 07d4 52F82330 		ldr	r3, [r2, r3, lsl #2]
 11091 07d8 07F11C00 		add	r0, r7, #28
 11092 07dc 0A46     		mov	r2, r1
 11093 07de 7549     		ldr	r1, .L546+36
 11094 07e0 FFF7FEFF 		bl	sprintf
1686:..\src/command_processing.c ****             strcat(info_string, str);
 11095              		.loc 1 1686 0
 11096 07e4 07F11C03 		add	r3, r7, #28
 11097 07e8 1946     		mov	r1, r3
 11098 07ea 7869     		ldr	r0, [r7, #20]
 11099 07ec FFF7FEFF 		bl	strcat
1687:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 11100              		.loc 1 1687 0
 11101 07f0 7869     		ldr	r0, [r7, #20]
 11102 07f2 FFF7FEFF 		bl	strlen
 11103 07f6 0346     		mov	r3, r0
 11104 07f8 1A46     		mov	r2, r3
 11105 07fa 7B69     		ldr	r3, [r7, #20]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 262


 11106 07fc 1344     		add	r3, r3, r2
 11107 07fe 674A     		ldr	r2, .L546+12
 11108 0800 1188     		ldrh	r1, [r2]	@ unaligned
 11109 0802 9278     		ldrb	r2, [r2, #2]
 11110 0804 1980     		strh	r1, [r3]	@ unaligned
 11111 0806 9A70     		strb	r2, [r3, #2]
1688:..\src/command_processing.c **** 
1689:..\src/command_processing.c ****             sprintf(str, "Current %d (mA): %ld", MOTOR_IDX+1, (int32) g_meas[ENC_L].curr );
 11112              		.loc 1 1689 0
 11113 0808 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 11114 080c 5C1C     		adds	r4, r3, #1
 11115 080e 97F88330 		ldrb	r3, [r7, #131]	@ zero_extendqisi2
 11116 0812 5F4A     		ldr	r2, .L546
 11117 0814 3421     		movs	r1, #52
 11118 0816 01FB03F3 		mul	r3, r1, r3
 11119 081a 1344     		add	r3, r3, r2
 11120 081c 0C33     		adds	r3, r3, #12
 11121 081e 1B68     		ldr	r3, [r3]
 11122 0820 07F11C00 		add	r0, r7, #28
 11123 0824 2246     		mov	r2, r4
 11124 0826 6449     		ldr	r1, .L546+40
 11125 0828 FFF7FEFF 		bl	sprintf
1690:..\src/command_processing.c ****             strcat(info_string, str);
 11126              		.loc 1 1690 0
 11127 082c 07F11C03 		add	r3, r7, #28
 11128 0830 1946     		mov	r1, r3
 11129 0832 7869     		ldr	r0, [r7, #20]
 11130 0834 FFF7FEFF 		bl	strcat
1691:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 11131              		.loc 1 1691 0
 11132 0838 7869     		ldr	r0, [r7, #20]
 11133 083a FFF7FEFF 		bl	strlen
 11134 083e 0346     		mov	r3, r0
 11135 0840 1A46     		mov	r2, r3
 11136 0842 7B69     		ldr	r3, [r7, #20]
 11137 0844 1344     		add	r3, r3, r2
 11138 0846 554A     		ldr	r2, .L546+12
 11139 0848 1188     		ldrh	r1, [r2]	@ unaligned
 11140 084a 9278     		ldrb	r2, [r2, #2]
 11141 084c 1980     		strh	r1, [r3]	@ unaligned
 11142 084e 9A70     		strb	r2, [r3, #2]
1692:..\src/command_processing.c ****             
1693:..\src/command_processing.c ****             if (MOT->not_revers_motor_flag == TRUE){
 11143              		.loc 1 1693 0
 11144 0850 D7F88430 		ldr	r3, [r7, #132]
 11145 0854 93F86230 		ldrb	r3, [r3, #98]	@ zero_extendqisi2
 11146 0858 012B     		cmp	r3, #1
 11147 085a 23D1     		bne	.L476
1694:..\src/command_processing.c ****                 sprintf(str, "Last Grasp Hold Current %d (mA): %ld", MOTOR_IDX+1, (int32) g_meas[EN
 11148              		.loc 1 1694 0
 11149 085c 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 11150 0860 5C1C     		adds	r4, r3, #1
 11151 0862 97F88330 		ldrb	r3, [r7, #131]	@ zero_extendqisi2
 11152 0866 4A4A     		ldr	r2, .L546
 11153 0868 3421     		movs	r1, #52
 11154 086a 01FB03F3 		mul	r3, r1, r3
 11155 086e 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 263


 11156 0870 1433     		adds	r3, r3, #20
 11157 0872 1B68     		ldr	r3, [r3]
 11158 0874 07F11C00 		add	r0, r7, #28
 11159 0878 2246     		mov	r2, r4
 11160 087a 5049     		ldr	r1, .L546+44
 11161 087c FFF7FEFF 		bl	sprintf
1695:..\src/command_processing.c ****                 strcat(info_string, str);
 11162              		.loc 1 1695 0
 11163 0880 07F11C03 		add	r3, r7, #28
 11164 0884 1946     		mov	r1, r3
 11165 0886 7869     		ldr	r0, [r7, #20]
 11166 0888 FFF7FEFF 		bl	strcat
1696:..\src/command_processing.c ****                 strcat(info_string, "\r\n");
 11167              		.loc 1 1696 0
 11168 088c 7869     		ldr	r0, [r7, #20]
 11169 088e FFF7FEFF 		bl	strlen
 11170 0892 0346     		mov	r3, r0
 11171 0894 1A46     		mov	r2, r3
 11172 0896 7B69     		ldr	r3, [r7, #20]
 11173 0898 1344     		add	r3, r3, r2
 11174 089a 404A     		ldr	r2, .L546+12
 11175 089c 1188     		ldrh	r1, [r2]	@ unaligned
 11176 089e 9278     		ldrb	r2, [r2, #2]
 11177 08a0 1980     		strh	r1, [r3]	@ unaligned
 11178 08a2 9A70     		strb	r2, [r3, #2]
 11179              	.L476:
1697:..\src/command_processing.c ****             }
1698:..\src/command_processing.c ****             
1699:..\src/command_processing.c ****             sprintf(str, "\r\nMOTOR %d CONFIGURATION\r\n", MOTOR_IDX+1);
 11180              		.loc 1 1699 0
 11181 08a4 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 11182 08a8 5A1C     		adds	r2, r3, #1
 11183 08aa 07F11C03 		add	r3, r7, #28
 11184 08ae 4449     		ldr	r1, .L546+48
 11185 08b0 1846     		mov	r0, r3
 11186 08b2 FFF7FEFF 		bl	sprintf
1700:..\src/command_processing.c ****             strcat(info_string, str);
 11187              		.loc 1 1700 0
 11188 08b6 07F11C03 		add	r3, r7, #28
 11189 08ba 1946     		mov	r1, r3
 11190 08bc 7869     		ldr	r0, [r7, #20]
 11191 08be FFF7FEFF 		bl	strcat
1701:..\src/command_processing.c **** 
1702:..\src/command_processing.c ****             strcat(info_string, "PID Controller: ");
 11192              		.loc 1 1702 0
 11193 08c2 7869     		ldr	r0, [r7, #20]
 11194 08c4 FFF7FEFF 		bl	strlen
 11195 08c8 0346     		mov	r3, r0
 11196 08ca 1A46     		mov	r2, r3
 11197 08cc 7B69     		ldr	r3, [r7, #20]
 11198 08ce 1344     		add	r3, r3, r2
 11199 08d0 3C4A     		ldr	r2, .L546+52
 11200 08d2 1D46     		mov	r5, r3
 11201 08d4 1446     		mov	r4, r2
 11202 08d6 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 11203 08d8 2860     		str	r0, [r5]	@ unaligned
 11204 08da 6960     		str	r1, [r5, #4]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 264


 11205 08dc AA60     		str	r2, [r5, #8]	@ unaligned
 11206 08de EB60     		str	r3, [r5, #12]	@ unaligned
 11207 08e0 2378     		ldrb	r3, [r4]
 11208 08e2 2B74     		strb	r3, [r5, #16]
1703:..\src/command_processing.c ****             if(MOT->control_mode != CURR_AND_POS_CONTROL) {
 11209              		.loc 1 1703 0
 11210 08e4 D7F88430 		ldr	r3, [r7, #132]
 11211 08e8 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 11212 08ec 032B     		cmp	r3, #3
 11213 08ee 73D0     		beq	.L477
1704:..\src/command_processing.c ****                 sprintf(str, "P -> %f  ", ((double) MOT->k_p / 65536));
 11214              		.loc 1 1704 0
 11215 08f0 D7F88430 		ldr	r3, [r7, #132]
 11216 08f4 1B68     		ldr	r3, [r3]
 11217 08f6 1846     		mov	r0, r3
 11218 08f8 FFF7FEFF 		bl	__aeabi_i2d
 11219 08fc 4FF00002 		mov	r2, #0
 11220 0900 314B     		ldr	r3, .L546+56
 11221 0902 FFF7FEFF 		bl	__aeabi_ddiv
 11222 0906 0346     		mov	r3, r0
 11223 0908 0C46     		mov	r4, r1
 11224 090a 07F11C00 		add	r0, r7, #28
 11225 090e 1A46     		mov	r2, r3
 11226 0910 2346     		mov	r3, r4
 11227 0912 2E49     		ldr	r1, .L546+60
 11228 0914 FFF7FEFF 		bl	sprintf
1705:..\src/command_processing.c ****                 strcat(info_string, str);
 11229              		.loc 1 1705 0
 11230 0918 07F11C03 		add	r3, r7, #28
 11231 091c 1946     		mov	r1, r3
 11232 091e 7869     		ldr	r0, [r7, #20]
 11233 0920 FFF7FEFF 		bl	strcat
1706:..\src/command_processing.c ****                 sprintf(str, "I -> %f  ", ((double) MOT->k_i / 65536));
 11234              		.loc 1 1706 0
 11235 0924 D7F88430 		ldr	r3, [r7, #132]
 11236 0928 5B68     		ldr	r3, [r3, #4]
 11237 092a 1846     		mov	r0, r3
 11238 092c FFF7FEFF 		bl	__aeabi_i2d
 11239 0930 4FF00002 		mov	r2, #0
 11240 0934 244B     		ldr	r3, .L546+56
 11241 0936 FFF7FEFF 		bl	__aeabi_ddiv
 11242 093a 0346     		mov	r3, r0
 11243 093c 0C46     		mov	r4, r1
 11244 093e 07F11C00 		add	r0, r7, #28
 11245 0942 1A46     		mov	r2, r3
 11246 0944 2346     		mov	r3, r4
 11247 0946 2249     		ldr	r1, .L546+64
 11248 0948 FFF7FEFF 		bl	sprintf
1707:..\src/command_processing.c ****                 strcat(info_string, str);
 11249              		.loc 1 1707 0
 11250 094c 07F11C03 		add	r3, r7, #28
 11251 0950 1946     		mov	r1, r3
 11252 0952 7869     		ldr	r0, [r7, #20]
 11253 0954 FFF7FEFF 		bl	strcat
1708:..\src/command_processing.c ****                 sprintf(str, "D -> %f\r\n", ((double) MOT->k_d / 65536));
 11254              		.loc 1 1708 0
 11255 0958 D7F88430 		ldr	r3, [r7, #132]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 265


 11256 095c 9B68     		ldr	r3, [r3, #8]
 11257 095e 1846     		mov	r0, r3
 11258 0960 FFF7FEFF 		bl	__aeabi_i2d
 11259 0964 4FF00002 		mov	r2, #0
 11260 0968 174B     		ldr	r3, .L546+56
 11261 096a FFF7FEFF 		bl	__aeabi_ddiv
 11262 096e 0346     		mov	r3, r0
 11263 0970 0C46     		mov	r4, r1
 11264 0972 07F11C00 		add	r0, r7, #28
 11265 0976 1A46     		mov	r2, r3
 11266 0978 2346     		mov	r3, r4
 11267 097a 1649     		ldr	r1, .L546+68
 11268 097c FFF7FEFF 		bl	sprintf
1709:..\src/command_processing.c ****                 strcat(info_string, str);
 11269              		.loc 1 1709 0
 11270 0980 07F11C03 		add	r3, r7, #28
 11271 0984 1946     		mov	r1, r3
 11272 0986 7869     		ldr	r0, [r7, #20]
 11273 0988 FFF7FEFF 		bl	strcat
 11274 098c 72E0     		b	.L478
 11275              	.L547:
 11276 098e 00BF     		.align	2
 11277              	.L546:
 11278 0990 00000000 		.word	g_meas
 11279 0994 8C130000 		.word	.LC183
 11280 0998 90130000 		.word	.LC184
 11281 099c 58110000 		.word	.LC152
 11282 09a0 00000000 		.word	g_adc_measOld
 11283 09a4 94130000 		.word	.LC185
 11284 09a8 00000000 		.word	dev_tension
 11285 09ac B4130000 		.word	.LC186
 11286 09b0 00000000 		.word	pow_tension
 11287 09b4 D4130000 		.word	.LC187
 11288 09b8 FC130000 		.word	.LC188
 11289 09bc 14140000 		.word	.LC189
 11290 09c0 3C140000 		.word	.LC190
 11291 09c4 58140000 		.word	.LC191
 11292 09c8 0000F040 		.word	1089470464
 11293 09cc 6C140000 		.word	.LC192
 11294 09d0 78140000 		.word	.LC193
 11295 09d4 84140000 		.word	.LC194
 11296              	.L477:
1710:..\src/command_processing.c ****             }
1711:..\src/command_processing.c ****             else { 
1712:..\src/command_processing.c ****                 sprintf(str, "P -> %f  ", ((double) MOT->k_p_dl / 65536));
 11297              		.loc 1 1712 0
 11298 09d8 D7F88430 		ldr	r3, [r7, #132]
 11299 09dc 9B69     		ldr	r3, [r3, #24]
 11300 09de 1846     		mov	r0, r3
 11301 09e0 FFF7FEFF 		bl	__aeabi_i2d
 11302 09e4 4FF00002 		mov	r2, #0
 11303 09e8 CE4B     		ldr	r3, .L548
 11304 09ea FFF7FEFF 		bl	__aeabi_ddiv
 11305 09ee 0346     		mov	r3, r0
 11306 09f0 0C46     		mov	r4, r1
 11307 09f2 07F11C00 		add	r0, r7, #28
 11308 09f6 1A46     		mov	r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 266


 11309 09f8 2346     		mov	r3, r4
 11310 09fa CB49     		ldr	r1, .L548+4
 11311 09fc FFF7FEFF 		bl	sprintf
1713:..\src/command_processing.c ****                 strcat(info_string, str);
 11312              		.loc 1 1713 0
 11313 0a00 07F11C03 		add	r3, r7, #28
 11314 0a04 1946     		mov	r1, r3
 11315 0a06 7869     		ldr	r0, [r7, #20]
 11316 0a08 FFF7FEFF 		bl	strcat
1714:..\src/command_processing.c ****                 sprintf(str, "I -> %f  ", ((double) MOT->k_i_dl / 65536));
 11317              		.loc 1 1714 0
 11318 0a0c D7F88430 		ldr	r3, [r7, #132]
 11319 0a10 DB69     		ldr	r3, [r3, #28]
 11320 0a12 1846     		mov	r0, r3
 11321 0a14 FFF7FEFF 		bl	__aeabi_i2d
 11322 0a18 4FF00002 		mov	r2, #0
 11323 0a1c C14B     		ldr	r3, .L548
 11324 0a1e FFF7FEFF 		bl	__aeabi_ddiv
 11325 0a22 0346     		mov	r3, r0
 11326 0a24 0C46     		mov	r4, r1
 11327 0a26 07F11C00 		add	r0, r7, #28
 11328 0a2a 1A46     		mov	r2, r3
 11329 0a2c 2346     		mov	r3, r4
 11330 0a2e BF49     		ldr	r1, .L548+8
 11331 0a30 FFF7FEFF 		bl	sprintf
1715:..\src/command_processing.c ****                 strcat(info_string, str);
 11332              		.loc 1 1715 0
 11333 0a34 07F11C03 		add	r3, r7, #28
 11334 0a38 1946     		mov	r1, r3
 11335 0a3a 7869     		ldr	r0, [r7, #20]
 11336 0a3c FFF7FEFF 		bl	strcat
1716:..\src/command_processing.c ****                 sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_dl / 65536));
 11337              		.loc 1 1716 0
 11338 0a40 D7F88430 		ldr	r3, [r7, #132]
 11339 0a44 1B6A     		ldr	r3, [r3, #32]
 11340 0a46 1846     		mov	r0, r3
 11341 0a48 FFF7FEFF 		bl	__aeabi_i2d
 11342 0a4c 4FF00002 		mov	r2, #0
 11343 0a50 B44B     		ldr	r3, .L548
 11344 0a52 FFF7FEFF 		bl	__aeabi_ddiv
 11345 0a56 0346     		mov	r3, r0
 11346 0a58 0C46     		mov	r4, r1
 11347 0a5a 07F11C00 		add	r0, r7, #28
 11348 0a5e 1A46     		mov	r2, r3
 11349 0a60 2346     		mov	r3, r4
 11350 0a62 B349     		ldr	r1, .L548+12
 11351 0a64 FFF7FEFF 		bl	sprintf
1717:..\src/command_processing.c ****                 strcat(info_string, str);
 11352              		.loc 1 1717 0
 11353 0a68 07F11C03 		add	r3, r7, #28
 11354 0a6c 1946     		mov	r1, r3
 11355 0a6e 7869     		ldr	r0, [r7, #20]
 11356 0a70 FFF7FEFF 		bl	strcat
 11357              	.L478:
1718:..\src/command_processing.c ****             }
1719:..\src/command_processing.c **** 
1720:..\src/command_processing.c ****             strcat(info_string, "Current PID Controller: ");
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 267


 11358              		.loc 1 1720 0
 11359 0a74 7869     		ldr	r0, [r7, #20]
 11360 0a76 FFF7FEFF 		bl	strlen
 11361 0a7a 0346     		mov	r3, r0
 11362 0a7c 1A46     		mov	r2, r3
 11363 0a7e 7B69     		ldr	r3, [r7, #20]
 11364 0a80 1344     		add	r3, r3, r2
 11365 0a82 AC4A     		ldr	r2, .L548+16
 11366 0a84 1D46     		mov	r5, r3
 11367 0a86 1446     		mov	r4, r2
 11368 0a88 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 11369 0a8a 2860     		str	r0, [r5]	@ unaligned
 11370 0a8c 6960     		str	r1, [r5, #4]	@ unaligned
 11371 0a8e AA60     		str	r2, [r5, #8]	@ unaligned
 11372 0a90 EB60     		str	r3, [r5, #12]	@ unaligned
 11373 0a92 03CC     		ldmia	r4!, {r0, r1}
 11374 0a94 2861     		str	r0, [r5, #16]	@ unaligned
 11375 0a96 6961     		str	r1, [r5, #20]	@ unaligned
 11376 0a98 2378     		ldrb	r3, [r4]
 11377 0a9a 2B76     		strb	r3, [r5, #24]
1721:..\src/command_processing.c ****             if(MOT->control_mode != CURR_AND_POS_CONTROL) {
 11378              		.loc 1 1721 0
 11379 0a9c D7F88430 		ldr	r3, [r7, #132]
 11380 0aa0 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 11381 0aa4 032B     		cmp	r3, #3
 11382 0aa6 4ED0     		beq	.L479
1722:..\src/command_processing.c ****                 sprintf(str, "P -> %f  ", ((double) MOT->k_p_c / 65536));
 11383              		.loc 1 1722 0
 11384 0aa8 D7F88430 		ldr	r3, [r7, #132]
 11385 0aac DB68     		ldr	r3, [r3, #12]
 11386 0aae 1846     		mov	r0, r3
 11387 0ab0 FFF7FEFF 		bl	__aeabi_i2d
 11388 0ab4 4FF00002 		mov	r2, #0
 11389 0ab8 9A4B     		ldr	r3, .L548
 11390 0aba FFF7FEFF 		bl	__aeabi_ddiv
 11391 0abe 0346     		mov	r3, r0
 11392 0ac0 0C46     		mov	r4, r1
 11393 0ac2 07F11C00 		add	r0, r7, #28
 11394 0ac6 1A46     		mov	r2, r3
 11395 0ac8 2346     		mov	r3, r4
 11396 0aca 9749     		ldr	r1, .L548+4
 11397 0acc FFF7FEFF 		bl	sprintf
1723:..\src/command_processing.c ****                 strcat(info_string, str);
 11398              		.loc 1 1723 0
 11399 0ad0 07F11C03 		add	r3, r7, #28
 11400 0ad4 1946     		mov	r1, r3
 11401 0ad6 7869     		ldr	r0, [r7, #20]
 11402 0ad8 FFF7FEFF 		bl	strcat
1724:..\src/command_processing.c ****                 sprintf(str, "I -> %f  ", ((double) MOT->k_i_c / 65536));
 11403              		.loc 1 1724 0
 11404 0adc D7F88430 		ldr	r3, [r7, #132]
 11405 0ae0 1B69     		ldr	r3, [r3, #16]
 11406 0ae2 1846     		mov	r0, r3
 11407 0ae4 FFF7FEFF 		bl	__aeabi_i2d
 11408 0ae8 4FF00002 		mov	r2, #0
 11409 0aec 8D4B     		ldr	r3, .L548
 11410 0aee FFF7FEFF 		bl	__aeabi_ddiv
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 268


 11411 0af2 0346     		mov	r3, r0
 11412 0af4 0C46     		mov	r4, r1
 11413 0af6 07F11C00 		add	r0, r7, #28
 11414 0afa 1A46     		mov	r2, r3
 11415 0afc 2346     		mov	r3, r4
 11416 0afe 8B49     		ldr	r1, .L548+8
 11417 0b00 FFF7FEFF 		bl	sprintf
1725:..\src/command_processing.c ****                 strcat(info_string, str);
 11418              		.loc 1 1725 0
 11419 0b04 07F11C03 		add	r3, r7, #28
 11420 0b08 1946     		mov	r1, r3
 11421 0b0a 7869     		ldr	r0, [r7, #20]
 11422 0b0c FFF7FEFF 		bl	strcat
1726:..\src/command_processing.c ****                 sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_c / 65536));
 11423              		.loc 1 1726 0
 11424 0b10 D7F88430 		ldr	r3, [r7, #132]
 11425 0b14 5B69     		ldr	r3, [r3, #20]
 11426 0b16 1846     		mov	r0, r3
 11427 0b18 FFF7FEFF 		bl	__aeabi_i2d
 11428 0b1c 4FF00002 		mov	r2, #0
 11429 0b20 804B     		ldr	r3, .L548
 11430 0b22 FFF7FEFF 		bl	__aeabi_ddiv
 11431 0b26 0346     		mov	r3, r0
 11432 0b28 0C46     		mov	r4, r1
 11433 0b2a 07F11C00 		add	r0, r7, #28
 11434 0b2e 1A46     		mov	r2, r3
 11435 0b30 2346     		mov	r3, r4
 11436 0b32 7F49     		ldr	r1, .L548+12
 11437 0b34 FFF7FEFF 		bl	sprintf
1727:..\src/command_processing.c ****                 strcat(info_string, str);
 11438              		.loc 1 1727 0
 11439 0b38 07F11C03 		add	r3, r7, #28
 11440 0b3c 1946     		mov	r1, r3
 11441 0b3e 7869     		ldr	r0, [r7, #20]
 11442 0b40 FFF7FEFF 		bl	strcat
 11443 0b44 4DE0     		b	.L480
 11444              	.L479:
1728:..\src/command_processing.c **** 
1729:..\src/command_processing.c ****             }
1730:..\src/command_processing.c ****             else {
1731:..\src/command_processing.c ****                 sprintf(str, "P -> %f  ", ((double) MOT->k_p_c_dl / 65536));
 11445              		.loc 1 1731 0
 11446 0b46 D7F88430 		ldr	r3, [r7, #132]
 11447 0b4a 5B6A     		ldr	r3, [r3, #36]
 11448 0b4c 1846     		mov	r0, r3
 11449 0b4e FFF7FEFF 		bl	__aeabi_i2d
 11450 0b52 4FF00002 		mov	r2, #0
 11451 0b56 734B     		ldr	r3, .L548
 11452 0b58 FFF7FEFF 		bl	__aeabi_ddiv
 11453 0b5c 0346     		mov	r3, r0
 11454 0b5e 0C46     		mov	r4, r1
 11455 0b60 07F11C00 		add	r0, r7, #28
 11456 0b64 1A46     		mov	r2, r3
 11457 0b66 2346     		mov	r3, r4
 11458 0b68 6F49     		ldr	r1, .L548+4
 11459 0b6a FFF7FEFF 		bl	sprintf
1732:..\src/command_processing.c ****                 strcat(info_string, str);
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 269


 11460              		.loc 1 1732 0
 11461 0b6e 07F11C03 		add	r3, r7, #28
 11462 0b72 1946     		mov	r1, r3
 11463 0b74 7869     		ldr	r0, [r7, #20]
 11464 0b76 FFF7FEFF 		bl	strcat
1733:..\src/command_processing.c ****                 sprintf(str, "I -> %f  ", ((double) MOT->k_i_c_dl / 65536));
 11465              		.loc 1 1733 0
 11466 0b7a D7F88430 		ldr	r3, [r7, #132]
 11467 0b7e 9B6A     		ldr	r3, [r3, #40]
 11468 0b80 1846     		mov	r0, r3
 11469 0b82 FFF7FEFF 		bl	__aeabi_i2d
 11470 0b86 4FF00002 		mov	r2, #0
 11471 0b8a 664B     		ldr	r3, .L548
 11472 0b8c FFF7FEFF 		bl	__aeabi_ddiv
 11473 0b90 0346     		mov	r3, r0
 11474 0b92 0C46     		mov	r4, r1
 11475 0b94 07F11C00 		add	r0, r7, #28
 11476 0b98 1A46     		mov	r2, r3
 11477 0b9a 2346     		mov	r3, r4
 11478 0b9c 6349     		ldr	r1, .L548+8
 11479 0b9e FFF7FEFF 		bl	sprintf
1734:..\src/command_processing.c ****                 strcat(info_string, str);
 11480              		.loc 1 1734 0
 11481 0ba2 07F11C03 		add	r3, r7, #28
 11482 0ba6 1946     		mov	r1, r3
 11483 0ba8 7869     		ldr	r0, [r7, #20]
 11484 0baa FFF7FEFF 		bl	strcat
1735:..\src/command_processing.c ****                 sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_c_dl / 65536));
 11485              		.loc 1 1735 0
 11486 0bae D7F88430 		ldr	r3, [r7, #132]
 11487 0bb2 DB6A     		ldr	r3, [r3, #44]
 11488 0bb4 1846     		mov	r0, r3
 11489 0bb6 FFF7FEFF 		bl	__aeabi_i2d
 11490 0bba 4FF00002 		mov	r2, #0
 11491 0bbe 594B     		ldr	r3, .L548
 11492 0bc0 FFF7FEFF 		bl	__aeabi_ddiv
 11493 0bc4 0346     		mov	r3, r0
 11494 0bc6 0C46     		mov	r4, r1
 11495 0bc8 07F11C00 		add	r0, r7, #28
 11496 0bcc 1A46     		mov	r2, r3
 11497 0bce 2346     		mov	r3, r4
 11498 0bd0 5749     		ldr	r1, .L548+12
 11499 0bd2 FFF7FEFF 		bl	sprintf
1736:..\src/command_processing.c ****                 strcat(info_string, str);
 11500              		.loc 1 1736 0
 11501 0bd6 07F11C03 		add	r3, r7, #28
 11502 0bda 1946     		mov	r1, r3
 11503 0bdc 7869     		ldr	r0, [r7, #20]
 11504 0bde FFF7FEFF 		bl	strcat
 11505              	.L480:
1737:..\src/command_processing.c ****             }
1738:..\src/command_processing.c ****             if (MOT->activ == 0x01)
 11506              		.loc 1 1738 0
 11507 0be2 D7F88430 		ldr	r3, [r7, #132]
 11508 0be6 93F83030 		ldrb	r3, [r3, #48]	@ zero_extendqisi2
 11509 0bea 012B     		cmp	r3, #1
 11510 0bec 14D1     		bne	.L481
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 270


1739:..\src/command_processing.c ****                 strcat(info_string, "Startup activation: YES\r\n");
 11511              		.loc 1 1739 0
 11512 0bee 7869     		ldr	r0, [r7, #20]
 11513 0bf0 FFF7FEFF 		bl	strlen
 11514 0bf4 0346     		mov	r3, r0
 11515 0bf6 1A46     		mov	r2, r3
 11516 0bf8 7B69     		ldr	r3, [r7, #20]
 11517 0bfa 1344     		add	r3, r3, r2
 11518 0bfc 4E4A     		ldr	r2, .L548+20
 11519 0bfe 1D46     		mov	r5, r3
 11520 0c00 1446     		mov	r4, r2
 11521 0c02 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 11522 0c04 2860     		str	r0, [r5]	@ unaligned
 11523 0c06 6960     		str	r1, [r5, #4]	@ unaligned
 11524 0c08 AA60     		str	r2, [r5, #8]	@ unaligned
 11525 0c0a EB60     		str	r3, [r5, #12]	@ unaligned
 11526 0c0c 03CC     		ldmia	r4!, {r0, r1}
 11527 0c0e 2861     		str	r0, [r5, #16]	@ unaligned
 11528 0c10 6961     		str	r1, [r5, #20]	@ unaligned
 11529 0c12 2388     		ldrh	r3, [r4]	@ unaligned
 11530 0c14 2B83     		strh	r3, [r5, #24]	@ unaligned
 11531 0c16 13E0     		b	.L482
 11532              	.L481:
1740:..\src/command_processing.c ****             else
1741:..\src/command_processing.c ****                 strcat(info_string, "Startup activation: NO\r\n");
 11533              		.loc 1 1741 0
 11534 0c18 7869     		ldr	r0, [r7, #20]
 11535 0c1a FFF7FEFF 		bl	strlen
 11536 0c1e 0346     		mov	r3, r0
 11537 0c20 1A46     		mov	r2, r3
 11538 0c22 7B69     		ldr	r3, [r7, #20]
 11539 0c24 1344     		add	r3, r3, r2
 11540 0c26 454A     		ldr	r2, .L548+24
 11541 0c28 1D46     		mov	r5, r3
 11542 0c2a 1446     		mov	r4, r2
 11543 0c2c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 11544 0c2e 2860     		str	r0, [r5]	@ unaligned
 11545 0c30 6960     		str	r1, [r5, #4]	@ unaligned
 11546 0c32 AA60     		str	r2, [r5, #8]	@ unaligned
 11547 0c34 EB60     		str	r3, [r5, #12]	@ unaligned
 11548 0c36 03CC     		ldmia	r4!, {r0, r1}
 11549 0c38 2861     		str	r0, [r5, #16]	@ unaligned
 11550 0c3a 6961     		str	r1, [r5, #20]	@ unaligned
 11551 0c3c 2378     		ldrb	r3, [r4]
 11552 0c3e 2B76     		strb	r3, [r5, #24]
 11553              	.L482:
1742:..\src/command_processing.c **** 
1743:..\src/command_processing.c ****             switch(MOT->input_mode) {
 11554              		.loc 1 1743 0
 11555 0c40 D7F88430 		ldr	r3, [r7, #132]
 11556 0c44 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
 11557 0c48 072B     		cmp	r3, #7
 11558 0c4a 00F2EA80 		bhi	.L483
 11559 0c4e 01A2     		adr	r2, .L485
 11560 0c50 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 11561              		.p2align 2
 11562              	.L485:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 271


 11563 0c54 750C0000 		.word	.L484+1
 11564 0c58 990C0000 		.word	.L486+1
 11565 0c5c C10C0000 		.word	.L487+1
 11566 0c60 F30C0000 		.word	.L488+1
 11567 0c64 510D0000 		.word	.L489+1
 11568 0c68 7F0D0000 		.word	.L490+1
 11569 0c6c AF0D0000 		.word	.L491+1
 11570 0c70 DD0D0000 		.word	.L492+1
 11571              		.p2align 1
 11572              	.L484:
1744:..\src/command_processing.c ****                 case INPUT_MODE_EXTERNAL:
1745:..\src/command_processing.c ****                     strcat(info_string, "Input mode: USB\r\n");
 11573              		.loc 1 1745 0
 11574 0c74 7869     		ldr	r0, [r7, #20]
 11575 0c76 FFF7FEFF 		bl	strlen
 11576 0c7a 0346     		mov	r3, r0
 11577 0c7c 1A46     		mov	r2, r3
 11578 0c7e 7B69     		ldr	r3, [r7, #20]
 11579 0c80 1344     		add	r3, r3, r2
 11580 0c82 2F4A     		ldr	r2, .L548+28
 11581 0c84 1D46     		mov	r5, r3
 11582 0c86 1446     		mov	r4, r2
 11583 0c88 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 11584 0c8a 2860     		str	r0, [r5]	@ unaligned
 11585 0c8c 6960     		str	r1, [r5, #4]	@ unaligned
 11586 0c8e AA60     		str	r2, [r5, #8]	@ unaligned
 11587 0c90 EB60     		str	r3, [r5, #12]	@ unaligned
 11588 0c92 2388     		ldrh	r3, [r4]	@ unaligned
 11589 0c94 2B82     		strh	r3, [r5, #16]	@ unaligned
1746:..\src/command_processing.c ****                     break;
 11590              		.loc 1 1746 0
 11591 0c96 C4E0     		b	.L483
 11592              	.L486:
1747:..\src/command_processing.c ****                 case INPUT_MODE_ENCODER3:
1748:..\src/command_processing.c ****                     strcat(info_string, "Input mode: Handle\r\n");
 11593              		.loc 1 1748 0
 11594 0c98 7869     		ldr	r0, [r7, #20]
 11595 0c9a FFF7FEFF 		bl	strlen
 11596 0c9e 0346     		mov	r3, r0
 11597 0ca0 1A46     		mov	r2, r3
 11598 0ca2 7B69     		ldr	r3, [r7, #20]
 11599 0ca4 1344     		add	r3, r3, r2
 11600 0ca6 274A     		ldr	r2, .L548+32
 11601 0ca8 1D46     		mov	r5, r3
 11602 0caa 1446     		mov	r4, r2
 11603 0cac 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 11604 0cae 2860     		str	r0, [r5]	@ unaligned
 11605 0cb0 6960     		str	r1, [r5, #4]	@ unaligned
 11606 0cb2 AA60     		str	r2, [r5, #8]	@ unaligned
 11607 0cb4 EB60     		str	r3, [r5, #12]	@ unaligned
 11608 0cb6 2068     		ldr	r0, [r4]	@ unaligned
 11609 0cb8 2861     		str	r0, [r5, #16]	@ unaligned
 11610 0cba 2379     		ldrb	r3, [r4, #4]
 11611 0cbc 2B75     		strb	r3, [r5, #20]
1749:..\src/command_processing.c ****                     break;
 11612              		.loc 1 1749 0
 11613 0cbe B0E0     		b	.L483
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 272


 11614              	.L487:
1750:..\src/command_processing.c ****                 case INPUT_MODE_EMG_PROPORTIONAL:
1751:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG proportional\r\n");
 11615              		.loc 1 1751 0
 11616 0cc0 7869     		ldr	r0, [r7, #20]
 11617 0cc2 FFF7FEFF 		bl	strlen
 11618 0cc6 0346     		mov	r3, r0
 11619 0cc8 1A46     		mov	r2, r3
 11620 0cca 7B69     		ldr	r3, [r7, #20]
 11621 0ccc 1344     		add	r3, r3, r2
 11622 0cce 1E4A     		ldr	r2, .L548+36
 11623 0cd0 1D46     		mov	r5, r3
 11624 0cd2 1446     		mov	r4, r2
 11625 0cd4 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 11626 0cd6 2860     		str	r0, [r5]	@ unaligned
 11627 0cd8 6960     		str	r1, [r5, #4]	@ unaligned
 11628 0cda AA60     		str	r2, [r5, #8]	@ unaligned
 11629 0cdc EB60     		str	r3, [r5, #12]	@ unaligned
 11630 0cde 07CC     		ldmia	r4!, {r0, r1, r2}
 11631 0ce0 2861     		str	r0, [r5, #16]	@ unaligned
 11632 0ce2 6961     		str	r1, [r5, #20]	@ unaligned
 11633 0ce4 AA61     		str	r2, [r5, #24]	@ unaligned
 11634 0ce6 2388     		ldrh	r3, [r4]	@ unaligned
 11635 0ce8 A278     		ldrb	r2, [r4, #2]
 11636 0cea AB83     		strh	r3, [r5, #28]	@ unaligned
 11637 0cec 1346     		mov	r3, r2
 11638 0cee AB77     		strb	r3, [r5, #30]
1752:..\src/command_processing.c ****                     break;
 11639              		.loc 1 1752 0
 11640 0cf0 97E0     		b	.L483
 11641              	.L488:
1753:..\src/command_processing.c ****                 case INPUT_MODE_EMG_INTEGRAL:
1754:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG integral\r\n");
 11642              		.loc 1 1754 0
 11643 0cf2 7869     		ldr	r0, [r7, #20]
 11644 0cf4 FFF7FEFF 		bl	strlen
 11645 0cf8 0346     		mov	r3, r0
 11646 0cfa 1A46     		mov	r2, r3
 11647 0cfc 7B69     		ldr	r3, [r7, #20]
 11648 0cfe 1344     		add	r3, r3, r2
 11649 0d00 124A     		ldr	r2, .L548+40
 11650 0d02 1D46     		mov	r5, r3
 11651 0d04 1446     		mov	r4, r2
 11652 0d06 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 11653 0d08 2860     		str	r0, [r5]	@ unaligned
 11654 0d0a 6960     		str	r1, [r5, #4]	@ unaligned
 11655 0d0c AA60     		str	r2, [r5, #8]	@ unaligned
 11656 0d0e EB60     		str	r3, [r5, #12]	@ unaligned
 11657 0d10 03CC     		ldmia	r4!, {r0, r1}
 11658 0d12 2861     		str	r0, [r5, #16]	@ unaligned
 11659 0d14 6961     		str	r1, [r5, #20]	@ unaligned
 11660 0d16 2388     		ldrh	r3, [r4]	@ unaligned
 11661 0d18 A278     		ldrb	r2, [r4, #2]
 11662 0d1a 2B83     		strh	r3, [r5, #24]	@ unaligned
 11663 0d1c 1346     		mov	r3, r2
 11664 0d1e AB76     		strb	r3, [r5, #26]
1755:..\src/command_processing.c ****                     break;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 273


 11665              		.loc 1 1755 0
 11666 0d20 7FE0     		b	.L483
 11667              	.L549:
 11668 0d22 00BF     		.align	2
 11669              	.L548:
 11670 0d24 0000F040 		.word	1089470464
 11671 0d28 6C140000 		.word	.LC192
 11672 0d2c 78140000 		.word	.LC193
 11673 0d30 84140000 		.word	.LC194
 11674 0d34 90140000 		.word	.LC195
 11675 0d38 AC140000 		.word	.LC196
 11676 0d3c C8140000 		.word	.LC197
 11677 0d40 E4140000 		.word	.LC198
 11678 0d44 F8140000 		.word	.LC199
 11679 0d48 10150000 		.word	.LC200
 11680 0d4c 30150000 		.word	.LC201
 11681              	.L489:
1756:..\src/command_processing.c ****                 case INPUT_MODE_EMG_FCFS:
1757:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG FCFS\r\n");
 11682              		.loc 1 1757 0
 11683 0d50 7869     		ldr	r0, [r7, #20]
 11684 0d52 FFF7FEFF 		bl	strlen
 11685 0d56 0346     		mov	r3, r0
 11686 0d58 1A46     		mov	r2, r3
 11687 0d5a 7B69     		ldr	r3, [r7, #20]
 11688 0d5c 1344     		add	r3, r3, r2
 11689 0d5e CF4A     		ldr	r2, .L550
 11690 0d60 1C46     		mov	r4, r3
 11691 0d62 1546     		mov	r5, r2
 11692 0d64 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 11693 0d66 2060     		str	r0, [r4]	@ unaligned
 11694 0d68 6160     		str	r1, [r4, #4]	@ unaligned
 11695 0d6a A260     		str	r2, [r4, #8]	@ unaligned
 11696 0d6c E360     		str	r3, [r4, #12]	@ unaligned
 11697 0d6e 2868     		ldr	r0, [r5]	@ unaligned
 11698 0d70 2061     		str	r0, [r4, #16]	@ unaligned
 11699 0d72 AB88     		ldrh	r3, [r5, #4]	@ unaligned
 11700 0d74 AA79     		ldrb	r2, [r5, #6]
 11701 0d76 A382     		strh	r3, [r4, #20]	@ unaligned
 11702 0d78 1346     		mov	r3, r2
 11703 0d7a A375     		strb	r3, [r4, #22]
1758:..\src/command_processing.c ****                     break;
 11704              		.loc 1 1758 0
 11705 0d7c 51E0     		b	.L483
 11706              	.L490:
1759:..\src/command_processing.c ****                 case INPUT_MODE_EMG_FCFS_ADV:
1760:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG FCFS ADV\r\n");
 11707              		.loc 1 1760 0
 11708 0d7e 7869     		ldr	r0, [r7, #20]
 11709 0d80 FFF7FEFF 		bl	strlen
 11710 0d84 0346     		mov	r3, r0
 11711 0d86 1A46     		mov	r2, r3
 11712 0d88 7B69     		ldr	r3, [r7, #20]
 11713 0d8a 1344     		add	r3, r3, r2
 11714 0d8c C44A     		ldr	r2, .L550+4
 11715 0d8e 1D46     		mov	r5, r3
 11716 0d90 1446     		mov	r4, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 274


 11717 0d92 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 11718 0d94 2860     		str	r0, [r5]	@ unaligned
 11719 0d96 6960     		str	r1, [r5, #4]	@ unaligned
 11720 0d98 AA60     		str	r2, [r5, #8]	@ unaligned
 11721 0d9a EB60     		str	r3, [r5, #12]	@ unaligned
 11722 0d9c 03CC     		ldmia	r4!, {r0, r1}
 11723 0d9e 2861     		str	r0, [r5, #16]	@ unaligned
 11724 0da0 6961     		str	r1, [r5, #20]	@ unaligned
 11725 0da2 2388     		ldrh	r3, [r4]	@ unaligned
 11726 0da4 A278     		ldrb	r2, [r4, #2]
 11727 0da6 2B83     		strh	r3, [r5, #24]	@ unaligned
 11728 0da8 1346     		mov	r3, r2
 11729 0daa AB76     		strb	r3, [r5, #26]
1761:..\src/command_processing.c ****                     break;
 11730              		.loc 1 1761 0
 11731 0dac 39E0     		b	.L483
 11732              	.L491:
1762:..\src/command_processing.c ****                 case INPUT_MODE_JOYSTICK:
1763:..\src/command_processing.c ****                     strcat(info_string, "Input mode: Joystick\r\n");
 11733              		.loc 1 1763 0
 11734 0dae 7869     		ldr	r0, [r7, #20]
 11735 0db0 FFF7FEFF 		bl	strlen
 11736 0db4 0346     		mov	r3, r0
 11737 0db6 1A46     		mov	r2, r3
 11738 0db8 7B69     		ldr	r3, [r7, #20]
 11739 0dba 1344     		add	r3, r3, r2
 11740 0dbc B94A     		ldr	r2, .L550+8
 11741 0dbe 1C46     		mov	r4, r3
 11742 0dc0 1546     		mov	r5, r2
 11743 0dc2 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 11744 0dc4 2060     		str	r0, [r4]	@ unaligned
 11745 0dc6 6160     		str	r1, [r4, #4]	@ unaligned
 11746 0dc8 A260     		str	r2, [r4, #8]	@ unaligned
 11747 0dca E360     		str	r3, [r4, #12]	@ unaligned
 11748 0dcc 2868     		ldr	r0, [r5]	@ unaligned
 11749 0dce 2061     		str	r0, [r4, #16]	@ unaligned
 11750 0dd0 AB88     		ldrh	r3, [r5, #4]	@ unaligned
 11751 0dd2 AA79     		ldrb	r2, [r5, #6]
 11752 0dd4 A382     		strh	r3, [r4, #20]	@ unaligned
 11753 0dd6 1346     		mov	r3, r2
 11754 0dd8 A375     		strb	r3, [r4, #22]
1764:..\src/command_processing.c ****                     break;
 11755              		.loc 1 1764 0
 11756 0dda 22E0     		b	.L483
 11757              	.L492:
1765:..\src/command_processing.c ****                 case INPUT_MODE_EMG_PROPORTIONAL_NC:
1766:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG proportional Normally Closed\r\n");
 11758              		.loc 1 1766 0
 11759 0ddc 7869     		ldr	r0, [r7, #20]
 11760 0dde FFF7FEFF 		bl	strlen
 11761 0de2 0346     		mov	r3, r0
 11762 0de4 1A46     		mov	r2, r3
 11763 0de6 7B69     		ldr	r3, [r7, #20]
 11764 0de8 1344     		add	r3, r3, r2
 11765 0dea AF4A     		ldr	r2, .L550+12
 11766 0dec 1546     		mov	r5, r2
 11767 0dee 9E46     		mov	lr, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 275


 11768 0df0 05F1200C 		add	ip, r5, #32
 11769              	.L493:
 11770 0df4 7446     		mov	r4, lr
 11771 0df6 2E46     		mov	r6, r5
 11772 0df8 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 11773 0dfa 2060     		str	r0, [r4]	@ unaligned
 11774 0dfc 6160     		str	r1, [r4, #4]	@ unaligned
 11775 0dfe A260     		str	r2, [r4, #8]	@ unaligned
 11776 0e00 E360     		str	r3, [r4, #12]	@ unaligned
 11777 0e02 1035     		adds	r5, r5, #16
 11778 0e04 0EF1100E 		add	lr, lr, #16
 11779 0e08 6545     		cmp	r5, ip
 11780 0e0a F3D1     		bne	.L493
 11781 0e0c 7446     		mov	r4, lr
 11782 0e0e 2B46     		mov	r3, r5
 11783 0e10 07CB     		ldmia	r3!, {r0, r1, r2}
 11784 0e12 2060     		str	r0, [r4]	@ unaligned
 11785 0e14 6160     		str	r1, [r4, #4]	@ unaligned
 11786 0e16 A260     		str	r2, [r4, #8]	@ unaligned
 11787 0e18 1A88     		ldrh	r2, [r3]	@ unaligned
 11788 0e1a 9B78     		ldrb	r3, [r3, #2]
 11789 0e1c A281     		strh	r2, [r4, #12]	@ unaligned
 11790 0e1e A373     		strb	r3, [r4, #14]
1767:..\src/command_processing.c ****                     break;
 11791              		.loc 1 1767 0
 11792 0e20 00BF     		nop
 11793              	.L483:
1768:..\src/command_processing.c ****             }
1769:..\src/command_processing.c **** 
1770:..\src/command_processing.c ****             switch(MOT->control_mode) {
 11794              		.loc 1 1770 0
 11795 0e22 D7F88430 		ldr	r3, [r7, #132]
 11796 0e26 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 11797 0e2a 032B     		cmp	r3, #3
 11798 0e2c 63D8     		bhi	.L541
 11799 0e2e 01A2     		adr	r2, .L496
 11800 0e30 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 11801              		.p2align 2
 11802              	.L496:
 11803 0e34 450E0000 		.word	.L495+1
 11804 0e38 6F0E0000 		.word	.L497+1
 11805 0e3c 930E0000 		.word	.L498+1
 11806 0e40 B90E0000 		.word	.L499+1
 11807              		.p2align 1
 11808              	.L495:
1771:..\src/command_processing.c ****                 case CONTROL_ANGLE:
1772:..\src/command_processing.c ****                     strcat(info_string, "Control mode: Position\r\n");
 11809              		.loc 1 1772 0
 11810 0e44 7869     		ldr	r0, [r7, #20]
 11811 0e46 FFF7FEFF 		bl	strlen
 11812 0e4a 0346     		mov	r3, r0
 11813 0e4c 1A46     		mov	r2, r3
 11814 0e4e 7B69     		ldr	r3, [r7, #20]
 11815 0e50 1344     		add	r3, r3, r2
 11816 0e52 964A     		ldr	r2, .L550+16
 11817 0e54 1D46     		mov	r5, r3
 11818 0e56 1446     		mov	r4, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 276


 11819 0e58 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 11820 0e5a 2860     		str	r0, [r5]	@ unaligned
 11821 0e5c 6960     		str	r1, [r5, #4]	@ unaligned
 11822 0e5e AA60     		str	r2, [r5, #8]	@ unaligned
 11823 0e60 EB60     		str	r3, [r5, #12]	@ unaligned
 11824 0e62 03CC     		ldmia	r4!, {r0, r1}
 11825 0e64 2861     		str	r0, [r5, #16]	@ unaligned
 11826 0e66 6961     		str	r1, [r5, #20]	@ unaligned
 11827 0e68 2378     		ldrb	r3, [r4]
 11828 0e6a 2B76     		strb	r3, [r5, #24]
1773:..\src/command_processing.c ****                     break;
 11829              		.loc 1 1773 0
 11830 0e6c 44E0     		b	.L500
 11831              	.L497:
1774:..\src/command_processing.c ****                 case CONTROL_PWM:
1775:..\src/command_processing.c ****                     strcat(info_string, "Control mode: PWM\r\n");
 11832              		.loc 1 1775 0
 11833 0e6e 7869     		ldr	r0, [r7, #20]
 11834 0e70 FFF7FEFF 		bl	strlen
 11835 0e74 0346     		mov	r3, r0
 11836 0e76 1A46     		mov	r2, r3
 11837 0e78 7B69     		ldr	r3, [r7, #20]
 11838 0e7a 1344     		add	r3, r3, r2
 11839 0e7c 8C4A     		ldr	r2, .L550+20
 11840 0e7e 1D46     		mov	r5, r3
 11841 0e80 1446     		mov	r4, r2
 11842 0e82 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 11843 0e84 2860     		str	r0, [r5]	@ unaligned
 11844 0e86 6960     		str	r1, [r5, #4]	@ unaligned
 11845 0e88 AA60     		str	r2, [r5, #8]	@ unaligned
 11846 0e8a EB60     		str	r3, [r5, #12]	@ unaligned
 11847 0e8c 2068     		ldr	r0, [r4]	@ unaligned
 11848 0e8e 2861     		str	r0, [r5, #16]	@ unaligned
1776:..\src/command_processing.c ****                     break;
 11849              		.loc 1 1776 0
 11850 0e90 32E0     		b	.L500
 11851              	.L498:
1777:..\src/command_processing.c ****                 case CONTROL_CURRENT:
1778:..\src/command_processing.c ****                     strcat(info_string, "Control mode: Current\r\n");
 11852              		.loc 1 1778 0
 11853 0e92 7869     		ldr	r0, [r7, #20]
 11854 0e94 FFF7FEFF 		bl	strlen
 11855 0e98 0346     		mov	r3, r0
 11856 0e9a 1A46     		mov	r2, r3
 11857 0e9c 7B69     		ldr	r3, [r7, #20]
 11858 0e9e 1344     		add	r3, r3, r2
 11859 0ea0 844A     		ldr	r2, .L550+24
 11860 0ea2 1D46     		mov	r5, r3
 11861 0ea4 1446     		mov	r4, r2
 11862 0ea6 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 11863 0ea8 2860     		str	r0, [r5]	@ unaligned
 11864 0eaa 6960     		str	r1, [r5, #4]	@ unaligned
 11865 0eac AA60     		str	r2, [r5, #8]	@ unaligned
 11866 0eae EB60     		str	r3, [r5, #12]	@ unaligned
 11867 0eb0 03CC     		ldmia	r4!, {r0, r1}
 11868 0eb2 2861     		str	r0, [r5, #16]	@ unaligned
 11869 0eb4 6961     		str	r1, [r5, #20]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 277


1779:..\src/command_processing.c ****                     break;
 11870              		.loc 1 1779 0
 11871 0eb6 1FE0     		b	.L500
 11872              	.L499:
1780:..\src/command_processing.c ****                 case CURR_AND_POS_CONTROL:
1781:..\src/command_processing.c ****                     strcat(info_string, "Control mode: Position and Current\r\n");
 11873              		.loc 1 1781 0
 11874 0eb8 7869     		ldr	r0, [r7, #20]
 11875 0eba FFF7FEFF 		bl	strlen
 11876 0ebe 0346     		mov	r3, r0
 11877 0ec0 1A46     		mov	r2, r3
 11878 0ec2 7B69     		ldr	r3, [r7, #20]
 11879 0ec4 1344     		add	r3, r3, r2
 11880 0ec6 7C4A     		ldr	r2, .L550+28
 11881 0ec8 1446     		mov	r4, r2
 11882 0eca 9E46     		mov	lr, r3
 11883 0ecc 04F1200C 		add	ip, r4, #32
 11884              	.L501:
 11885 0ed0 7546     		mov	r5, lr
 11886 0ed2 2646     		mov	r6, r4
 11887 0ed4 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 11888 0ed6 2860     		str	r0, [r5]	@ unaligned
 11889 0ed8 6960     		str	r1, [r5, #4]	@ unaligned
 11890 0eda AA60     		str	r2, [r5, #8]	@ unaligned
 11891 0edc EB60     		str	r3, [r5, #12]	@ unaligned
 11892 0ede 1034     		adds	r4, r4, #16
 11893 0ee0 0EF1100E 		add	lr, lr, #16
 11894 0ee4 6445     		cmp	r4, ip
 11895 0ee6 F3D1     		bne	.L501
 11896 0ee8 7346     		mov	r3, lr
 11897 0eea 2246     		mov	r2, r4
 11898 0eec 1068     		ldr	r0, [r2]	@ unaligned
 11899 0eee 1860     		str	r0, [r3]	@ unaligned
 11900 0ef0 1279     		ldrb	r2, [r2, #4]
 11901 0ef2 1A71     		strb	r2, [r3, #4]
1782:..\src/command_processing.c ****                     break;
 11902              		.loc 1 1782 0
 11903 0ef4 00E0     		b	.L500
 11904              	.L541:
1783:..\src/command_processing.c ****                 default:
1784:..\src/command_processing.c ****                     break;
 11905              		.loc 1 1784 0
 11906 0ef6 00BF     		nop
 11907              	.L500:
1785:..\src/command_processing.c ****             }
1786:..\src/command_processing.c **** 
1787:..\src/command_processing.c ****             if (MEM_P->enc[ENC_L].double_encoder_on_off)
 11908              		.loc 1 1787 0
 11909 0ef8 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 11910 0efc D7F88C10 		ldr	r1, [r7, #140]
 11911 0f00 1346     		mov	r3, r2
 11912 0f02 5B00     		lsls	r3, r3, #1
 11913 0f04 1344     		add	r3, r3, r2
 11914 0f06 1B01     		lsls	r3, r3, #4
 11915 0f08 0B44     		add	r3, r3, r1
 11916 0f0a 03F5D873 		add	r3, r3, #432
 11917 0f0e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 278


 11918 0f10 002B     		cmp	r3, #0
 11919 0f12 1CD0     		beq	.L502
1788:..\src/command_processing.c ****                 strcat(info_string, "Absolute encoder position: YES\r\n");
 11920              		.loc 1 1788 0
 11921 0f14 7869     		ldr	r0, [r7, #20]
 11922 0f16 FFF7FEFF 		bl	strlen
 11923 0f1a 0346     		mov	r3, r0
 11924 0f1c 1A46     		mov	r2, r3
 11925 0f1e 7B69     		ldr	r3, [r7, #20]
 11926 0f20 1344     		add	r3, r3, r2
 11927 0f22 664A     		ldr	r2, .L550+32
 11928 0f24 1446     		mov	r4, r2
 11929 0f26 9E46     		mov	lr, r3
 11930 0f28 04F1200C 		add	ip, r4, #32
 11931              	.L503:
 11932 0f2c 7546     		mov	r5, lr
 11933 0f2e 2646     		mov	r6, r4
 11934 0f30 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 11935 0f32 2860     		str	r0, [r5]	@ unaligned
 11936 0f34 6960     		str	r1, [r5, #4]	@ unaligned
 11937 0f36 AA60     		str	r2, [r5, #8]	@ unaligned
 11938 0f38 EB60     		str	r3, [r5, #12]	@ unaligned
 11939 0f3a 1034     		adds	r4, r4, #16
 11940 0f3c 0EF1100E 		add	lr, lr, #16
 11941 0f40 6445     		cmp	r4, ip
 11942 0f42 F3D1     		bne	.L503
 11943 0f44 7346     		mov	r3, lr
 11944 0f46 2246     		mov	r2, r4
 11945 0f48 1278     		ldrb	r2, [r2]
 11946 0f4a 1A70     		strb	r2, [r3]
 11947 0f4c 13E0     		b	.L504
 11948              	.L502:
1789:..\src/command_processing.c ****             else
1790:..\src/command_processing.c ****                 strcat(info_string, "Absolute encoder position: NO\r\n");
 11949              		.loc 1 1790 0
 11950 0f4e 7869     		ldr	r0, [r7, #20]
 11951 0f50 FFF7FEFF 		bl	strlen
 11952 0f54 0346     		mov	r3, r0
 11953 0f56 1A46     		mov	r2, r3
 11954 0f58 7B69     		ldr	r3, [r7, #20]
 11955 0f5a 1344     		add	r3, r3, r2
 11956 0f5c 584A     		ldr	r2, .L550+36
 11957 0f5e 1C46     		mov	r4, r3
 11958 0f60 1546     		mov	r5, r2
 11959 0f62 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 11960 0f64 2060     		str	r0, [r4]	@ unaligned
 11961 0f66 6160     		str	r1, [r4, #4]	@ unaligned
 11962 0f68 A260     		str	r2, [r4, #8]	@ unaligned
 11963 0f6a E360     		str	r3, [r4, #12]	@ unaligned
 11964 0f6c 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 11965 0f6e 2061     		str	r0, [r4, #16]	@ unaligned
 11966 0f70 6161     		str	r1, [r4, #20]	@ unaligned
 11967 0f72 A261     		str	r2, [r4, #24]	@ unaligned
 11968 0f74 E361     		str	r3, [r4, #28]	@ unaligned
 11969              	.L504:
1791:..\src/command_processing.c **** 
1792:..\src/command_processing.c ****             sprintf(str, "Motor-Handle Ratio: %d\r\n", (int)MEM_P->enc[ENC_L].motor_handle_ratio);
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 279


 11970              		.loc 1 1792 0
 11971 0f76 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 11972 0f7a D7F88C10 		ldr	r1, [r7, #140]
 11973 0f7e 1346     		mov	r3, r2
 11974 0f80 5B00     		lsls	r3, r3, #1
 11975 0f82 1344     		add	r3, r3, r2
 11976 0f84 1B01     		lsls	r3, r3, #4
 11977 0f86 0B44     		add	r3, r3, r1
 11978 0f88 03F5DA73 		add	r3, r3, #436
 11979 0f8c 93F90030 		ldrsb	r3, [r3]
 11980 0f90 1A46     		mov	r2, r3
 11981 0f92 07F11C03 		add	r3, r7, #28
 11982 0f96 4B49     		ldr	r1, .L550+40
 11983 0f98 1846     		mov	r0, r3
 11984 0f9a FFF7FEFF 		bl	sprintf
1793:..\src/command_processing.c ****             strcat(info_string, str);
 11985              		.loc 1 1793 0
 11986 0f9e 07F11C03 		add	r3, r7, #28
 11987 0fa2 1946     		mov	r1, r3
 11988 0fa4 7869     		ldr	r0, [r7, #20]
 11989 0fa6 FFF7FEFF 		bl	strcat
1794:..\src/command_processing.c **** #ifdef GENERIC_FW       // decided not to show when using SOFTHAND_FW to streamline ping, since the
1795:..\src/command_processing.c ****             strcat(info_string, "Encoder indices used for motor control: ");
1796:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; ++i) {
1797:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].Enc_idx_use_for_control[i]);
1798:..\src/command_processing.c ****                 strcat(info_string, str);
1799:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
1800:..\src/command_processing.c ****                     strcat(info_string, ", ");
1801:..\src/command_processing.c ****                 }                
1802:..\src/command_processing.c ****             }
1803:..\src/command_processing.c ****             strcat(info_string, "\r\n");
1804:..\src/command_processing.c ****             sprintf(str, "First Gear: %d teeth\r\n", (int)MEM_P->enc[ENC_L].gears_params[0]);
1805:..\src/command_processing.c ****             strcat(info_string, str);
1806:..\src/command_processing.c ****             sprintf(str, "Second Gear: %d teeth\r\n", (int)MEM_P->enc[ENC_L].gears_params[1]);
1807:..\src/command_processing.c ****             strcat(info_string, str);
1808:..\src/command_processing.c ****             sprintf(str, "Gear invariant: %d\r\n", (int)MEM_P->enc[ENC_L].gears_params[2]);
1809:..\src/command_processing.c ****             strcat(info_string, str);
1810:..\src/command_processing.c **** #endif            
1811:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 11990              		.loc 1 1811 0
 11991 0faa 7869     		ldr	r0, [r7, #20]
 11992 0fac FFF7FEFF 		bl	strlen
 11993 0fb0 0346     		mov	r3, r0
 11994 0fb2 1A46     		mov	r2, r3
 11995 0fb4 7B69     		ldr	r3, [r7, #20]
 11996 0fb6 1344     		add	r3, r3, r2
 11997 0fb8 434A     		ldr	r2, .L550+44
 11998 0fba 1188     		ldrh	r1, [r2]	@ unaligned
 11999 0fbc 9278     		ldrb	r2, [r2, #2]
 12000 0fbe 1980     		strh	r1, [r3]	@ unaligned
 12001 0fc0 9A70     		strb	r2, [r3, #2]
1812:..\src/command_processing.c **** 
1813:..\src/command_processing.c ****             strcat(info_string, "Sensor resolution: ");
 12002              		.loc 1 1813 0
 12003 0fc2 7869     		ldr	r0, [r7, #20]
 12004 0fc4 FFF7FEFF 		bl	strlen
 12005 0fc8 0346     		mov	r3, r0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 280


 12006 0fca 1A46     		mov	r2, r3
 12007 0fcc 7B69     		ldr	r3, [r7, #20]
 12008 0fce 1344     		add	r3, r3, r2
 12009 0fd0 3E4A     		ldr	r2, .L550+48
 12010 0fd2 1D46     		mov	r5, r3
 12011 0fd4 1446     		mov	r4, r2
 12012 0fd6 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 12013 0fd8 2860     		str	r0, [r5]	@ unaligned
 12014 0fda 6960     		str	r1, [r5, #4]	@ unaligned
 12015 0fdc AA60     		str	r2, [r5, #8]	@ unaligned
 12016 0fde EB60     		str	r3, [r5, #12]	@ unaligned
 12017 0fe0 2068     		ldr	r0, [r4]	@ unaligned
 12018 0fe2 2861     		str	r0, [r5, #16]	@ unaligned
1814:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; ++i) {
 12019              		.loc 1 1814 0
 12020 0fe4 0023     		movs	r3, #0
 12021 0fe6 C7F89430 		str	r3, [r7, #148]
 12022 0fea 30E0     		b	.L505
 12023              	.L507:
1815:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 12024              		.loc 1 1815 0
 12025 0fec 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 12026 0ff0 D7F88C10 		ldr	r1, [r7, #140]
 12027 0ff4 1346     		mov	r3, r2
 12028 0ff6 5B00     		lsls	r3, r3, #1
 12029 0ff8 1344     		add	r3, r3, r2
 12030 0ffa 1B01     		lsls	r3, r3, #4
 12031 0ffc CA18     		adds	r2, r1, r3
 12032 0ffe D7F89430 		ldr	r3, [r7, #148]
 12033 1002 1344     		add	r3, r3, r2
 12034 1004 03F29513 		addw	r3, r3, #405
 12035 1008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12036 100a 1A46     		mov	r2, r3
 12037 100c 07F11C03 		add	r3, r7, #28
 12038 1010 2F49     		ldr	r1, .L550+52
 12039 1012 1846     		mov	r0, r3
 12040 1014 FFF7FEFF 		bl	sprintf
1816:..\src/command_processing.c ****                 strcat(info_string, str);
 12041              		.loc 1 1816 0
 12042 1018 07F11C03 		add	r3, r7, #28
 12043 101c 1946     		mov	r1, r3
 12044 101e 7869     		ldr	r0, [r7, #20]
 12045 1020 FFF7FEFF 		bl	strcat
1817:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
 12046              		.loc 1 1817 0
 12047 1024 D7F89430 		ldr	r3, [r7, #148]
 12048 1028 022B     		cmp	r3, #2
 12049 102a 0BD0     		beq	.L506
1818:..\src/command_processing.c ****                     strcat(info_string, ", ");
 12050              		.loc 1 1818 0
 12051 102c 7869     		ldr	r0, [r7, #20]
 12052 102e FFF7FEFF 		bl	strlen
 12053 1032 0346     		mov	r3, r0
 12054 1034 1A46     		mov	r2, r3
 12055 1036 7B69     		ldr	r3, [r7, #20]
 12056 1038 1344     		add	r3, r3, r2
 12057 103a 264A     		ldr	r2, .L550+56
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 281


 12058 103c 1188     		ldrh	r1, [r2]	@ unaligned
 12059 103e 9278     		ldrb	r2, [r2, #2]
 12060 1040 1980     		strh	r1, [r3]	@ unaligned
 12061 1042 9A70     		strb	r2, [r3, #2]
 12062              	.L506:
1814:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 12063              		.loc 1 1814 0 discriminator 2
 12064 1044 D7F89430 		ldr	r3, [r7, #148]
 12065 1048 0133     		adds	r3, r3, #1
 12066 104a C7F89430 		str	r3, [r7, #148]
 12067              	.L505:
1814:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 12068              		.loc 1 1814 0 is_stmt 0 discriminator 1
 12069 104e D7F89430 		ldr	r3, [r7, #148]
 12070 1052 022B     		cmp	r3, #2
 12071 1054 CADD     		ble	.L507
1819:..\src/command_processing.c ****                 }                
1820:..\src/command_processing.c ****             }
1821:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 12072              		.loc 1 1821 0 is_stmt 1
 12073 1056 7869     		ldr	r0, [r7, #20]
 12074 1058 FFF7FEFF 		bl	strlen
 12075 105c 0346     		mov	r3, r0
 12076 105e 1A46     		mov	r2, r3
 12077 1060 7B69     		ldr	r3, [r7, #20]
 12078 1062 1344     		add	r3, r3, r2
 12079 1064 184A     		ldr	r2, .L550+44
 12080 1066 1188     		ldrh	r1, [r2]	@ unaligned
 12081 1068 9278     		ldrb	r2, [r2, #2]
 12082 106a 1980     		strh	r1, [r3]	@ unaligned
 12083 106c 9A70     		strb	r2, [r3, #2]
1822:..\src/command_processing.c **** 
1823:..\src/command_processing.c ****             strcat(info_string, "Measurement Offset: ");
 12084              		.loc 1 1823 0
 12085 106e 7869     		ldr	r0, [r7, #20]
 12086 1070 FFF7FEFF 		bl	strlen
 12087 1074 0346     		mov	r3, r0
 12088 1076 1A46     		mov	r2, r3
 12089 1078 7B69     		ldr	r3, [r7, #20]
 12090 107a 1344     		add	r3, r3, r2
 12091 107c 164A     		ldr	r2, .L550+60
 12092 107e 1D46     		mov	r5, r3
 12093 1080 1446     		mov	r4, r2
 12094 1082 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 12095 1084 2860     		str	r0, [r5]	@ unaligned
 12096 1086 6960     		str	r1, [r5, #4]	@ unaligned
 12097 1088 AA60     		str	r2, [r5, #8]	@ unaligned
 12098 108a EB60     		str	r3, [r5, #12]	@ unaligned
 12099 108c 2068     		ldr	r0, [r4]	@ unaligned
 12100 108e 2861     		str	r0, [r5, #16]	@ unaligned
 12101 1090 2379     		ldrb	r3, [r4, #4]
 12102 1092 2B75     		strb	r3, [r5, #20]
1824:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; ++i) {
 12103              		.loc 1 1824 0
 12104 1094 0023     		movs	r3, #0
 12105 1096 C7F89430 		str	r3, [r7, #148]
 12106 109a 5FE0     		b	.L508
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 282


 12107              	.L551:
 12108              		.align	2
 12109              	.L550:
 12110 109c 4C150000 		.word	.LC202
 12111 10a0 64150000 		.word	.LC203
 12112 10a4 80150000 		.word	.LC204
 12113 10a8 98150000 		.word	.LC205
 12114 10ac C8150000 		.word	.LC206
 12115 10b0 E4150000 		.word	.LC207
 12116 10b4 F8150000 		.word	.LC208
 12117 10b8 10160000 		.word	.LC209
 12118 10bc 38160000 		.word	.LC210
 12119 10c0 5C160000 		.word	.LC211
 12120 10c4 7C160000 		.word	.LC212
 12121 10c8 58110000 		.word	.LC152
 12122 10cc 98160000 		.word	.LC213
 12123 10d0 8C130000 		.word	.LC183
 12124 10d4 90130000 		.word	.LC184
 12125 10d8 AC160000 		.word	.LC214
 12126              	.L510:
1825:..\src/command_processing.c ****                 sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i])
 12127              		.loc 1 1825 0
 12128 10dc 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 12129 10e0 D7F88C10 		ldr	r1, [r7, #140]
 12130 10e4 1346     		mov	r3, r2
 12131 10e6 5B00     		lsls	r3, r3, #1
 12132 10e8 1344     		add	r3, r3, r2
 12133 10ea 9B00     		lsls	r3, r3, #2
 12134 10ec D7F89420 		ldr	r2, [r7, #148]
 12135 10f0 1344     		add	r3, r3, r2
 12136 10f2 6633     		adds	r3, r3, #102
 12137 10f4 51F82310 		ldr	r1, [r1, r3, lsl #2]
 12138 10f8 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 12139 10fc D7F88C00 		ldr	r0, [r7, #140]
 12140 1100 1346     		mov	r3, r2
 12141 1102 5B00     		lsls	r3, r3, #1
 12142 1104 1344     		add	r3, r3, r2
 12143 1106 1B01     		lsls	r3, r3, #4
 12144 1108 C218     		adds	r2, r0, r3
 12145 110a D7F89430 		ldr	r3, [r7, #148]
 12146 110e 1344     		add	r3, r3, r2
 12147 1110 03F29513 		addw	r3, r3, #405
 12148 1114 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12149 1116 41FA03F2 		asr	r2, r1, r3
 12150 111a 07F11C03 		add	r3, r7, #28
 12151 111e 2349     		ldr	r1, .L552
 12152 1120 1846     		mov	r0, r3
 12153 1122 FFF7FEFF 		bl	sprintf
1826:..\src/command_processing.c ****                 strcat(info_string, str);
 12154              		.loc 1 1826 0
 12155 1126 07F11C03 		add	r3, r7, #28
 12156 112a 1946     		mov	r1, r3
 12157 112c 7869     		ldr	r0, [r7, #20]
 12158 112e FFF7FEFF 		bl	strcat
1827:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
 12159              		.loc 1 1827 0
 12160 1132 D7F89430 		ldr	r3, [r7, #148]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 283


 12161 1136 022B     		cmp	r3, #2
 12162 1138 0BD0     		beq	.L509
1828:..\src/command_processing.c ****                     strcat(info_string, ", ");
 12163              		.loc 1 1828 0
 12164 113a 7869     		ldr	r0, [r7, #20]
 12165 113c FFF7FEFF 		bl	strlen
 12166 1140 0346     		mov	r3, r0
 12167 1142 1A46     		mov	r2, r3
 12168 1144 7B69     		ldr	r3, [r7, #20]
 12169 1146 1344     		add	r3, r3, r2
 12170 1148 194A     		ldr	r2, .L552+4
 12171 114a 1188     		ldrh	r1, [r2]	@ unaligned
 12172 114c 9278     		ldrb	r2, [r2, #2]
 12173 114e 1980     		strh	r1, [r3]	@ unaligned
 12174 1150 9A70     		strb	r2, [r3, #2]
 12175              	.L509:
1824:..\src/command_processing.c ****                 sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i])
 12176              		.loc 1 1824 0 discriminator 2
 12177 1152 D7F89430 		ldr	r3, [r7, #148]
 12178 1156 0133     		adds	r3, r3, #1
 12179 1158 C7F89430 		str	r3, [r7, #148]
 12180              	.L508:
1824:..\src/command_processing.c ****                 sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i])
 12181              		.loc 1 1824 0 is_stmt 0 discriminator 1
 12182 115c D7F89430 		ldr	r3, [r7, #148]
 12183 1160 022B     		cmp	r3, #2
 12184 1162 BBDD     		ble	.L510
1829:..\src/command_processing.c ****                 }
1830:..\src/command_processing.c ****             }
1831:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 12185              		.loc 1 1831 0 is_stmt 1
 12186 1164 7869     		ldr	r0, [r7, #20]
 12187 1166 FFF7FEFF 		bl	strlen
 12188 116a 0346     		mov	r3, r0
 12189 116c 1A46     		mov	r2, r3
 12190 116e 7B69     		ldr	r3, [r7, #20]
 12191 1170 1344     		add	r3, r3, r2
 12192 1172 104A     		ldr	r2, .L552+8
 12193 1174 1188     		ldrh	r1, [r2]	@ unaligned
 12194 1176 9278     		ldrb	r2, [r2, #2]
 12195 1178 1980     		strh	r1, [r3]	@ unaligned
 12196 117a 9A70     		strb	r2, [r3, #2]
1832:..\src/command_processing.c ****                 
1833:..\src/command_processing.c ****             strcat(info_string, "Measurement Multiplier: ");
 12197              		.loc 1 1833 0
 12198 117c 7869     		ldr	r0, [r7, #20]
 12199 117e FFF7FEFF 		bl	strlen
 12200 1182 0346     		mov	r3, r0
 12201 1184 1A46     		mov	r2, r3
 12202 1186 7B69     		ldr	r3, [r7, #20]
 12203 1188 1344     		add	r3, r3, r2
 12204 118a 0B4A     		ldr	r2, .L552+12
 12205 118c 1D46     		mov	r5, r3
 12206 118e 1446     		mov	r4, r2
 12207 1190 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 12208 1192 2860     		str	r0, [r5]	@ unaligned
 12209 1194 6960     		str	r1, [r5, #4]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 284


 12210 1196 AA60     		str	r2, [r5, #8]	@ unaligned
 12211 1198 EB60     		str	r3, [r5, #12]	@ unaligned
 12212 119a 03CC     		ldmia	r4!, {r0, r1}
 12213 119c 2861     		str	r0, [r5, #16]	@ unaligned
 12214 119e 6961     		str	r1, [r5, #20]	@ unaligned
 12215 11a0 2378     		ldrb	r3, [r4]
 12216 11a2 2B76     		strb	r3, [r5, #24]
1834:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; ++i) {
 12217              		.loc 1 1834 0
 12218 11a4 0023     		movs	r3, #0
 12219 11a6 C7F89430 		str	r3, [r7, #148]
 12220 11aa 3DE0     		b	.L511
 12221              	.L553:
 12222              		.align	2
 12223              	.L552:
 12224 11ac C4160000 		.word	.LC215
 12225 11b0 90130000 		.word	.LC184
 12226 11b4 58110000 		.word	.LC152
 12227 11b8 C8160000 		.word	.LC216
 12228              	.L513:
1835:..\src/command_processing.c ****                 sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 12229              		.loc 1 1835 0
 12230 11bc 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 12231 11c0 D7F88C10 		ldr	r1, [r7, #140]
 12232 11c4 1346     		mov	r3, r2
 12233 11c6 5B00     		lsls	r3, r3, #1
 12234 11c8 1344     		add	r3, r3, r2
 12235 11ca 9B00     		lsls	r3, r3, #2
 12236 11cc D7F89420 		ldr	r2, [r7, #148]
 12237 11d0 1344     		add	r3, r3, r2
 12238 11d2 6833     		adds	r3, r3, #104
 12239 11d4 9B00     		lsls	r3, r3, #2
 12240 11d6 0B44     		add	r3, r3, r1
 12241 11d8 5B68     		ldr	r3, [r3, #4]	@ float
 12242 11da 1846     		mov	r0, r3
 12243 11dc FFF7FEFF 		bl	__aeabi_f2d
 12244 11e0 0346     		mov	r3, r0
 12245 11e2 0C46     		mov	r4, r1
 12246 11e4 07F11C00 		add	r0, r7, #28
 12247 11e8 1A46     		mov	r2, r3
 12248 11ea 2346     		mov	r3, r4
 12249 11ec BF49     		ldr	r1, .L554
 12250 11ee FFF7FEFF 		bl	sprintf
1836:..\src/command_processing.c ****                 strcat(info_string, str);
 12251              		.loc 1 1836 0
 12252 11f2 07F11C03 		add	r3, r7, #28
 12253 11f6 1946     		mov	r1, r3
 12254 11f8 7869     		ldr	r0, [r7, #20]
 12255 11fa FFF7FEFF 		bl	strcat
1837:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
 12256              		.loc 1 1837 0
 12257 11fe D7F89430 		ldr	r3, [r7, #148]
 12258 1202 022B     		cmp	r3, #2
 12259 1204 0BD0     		beq	.L512
1838:..\src/command_processing.c ****                     strcat(info_string, ", ");
 12260              		.loc 1 1838 0
 12261 1206 7869     		ldr	r0, [r7, #20]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 285


 12262 1208 FFF7FEFF 		bl	strlen
 12263 120c 0346     		mov	r3, r0
 12264 120e 1A46     		mov	r2, r3
 12265 1210 7B69     		ldr	r3, [r7, #20]
 12266 1212 1344     		add	r3, r3, r2
 12267 1214 B64A     		ldr	r2, .L554+4
 12268 1216 1188     		ldrh	r1, [r2]	@ unaligned
 12269 1218 9278     		ldrb	r2, [r2, #2]
 12270 121a 1980     		strh	r1, [r3]	@ unaligned
 12271 121c 9A70     		strb	r2, [r3, #2]
 12272              	.L512:
1834:..\src/command_processing.c ****                 sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 12273              		.loc 1 1834 0 discriminator 2
 12274 121e D7F89430 		ldr	r3, [r7, #148]
 12275 1222 0133     		adds	r3, r3, #1
 12276 1224 C7F89430 		str	r3, [r7, #148]
 12277              	.L511:
1834:..\src/command_processing.c ****                 sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 12278              		.loc 1 1834 0 is_stmt 0 discriminator 1
 12279 1228 D7F89430 		ldr	r3, [r7, #148]
 12280 122c 022B     		cmp	r3, #2
 12281 122e C5DD     		ble	.L513
1839:..\src/command_processing.c ****                 }
1840:..\src/command_processing.c ****             }
1841:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 12282              		.loc 1 1841 0 is_stmt 1 discriminator 2
 12283 1230 7869     		ldr	r0, [r7, #20]
 12284 1232 FFF7FEFF 		bl	strlen
 12285 1236 0346     		mov	r3, r0
 12286 1238 1A46     		mov	r2, r3
 12287 123a 7B69     		ldr	r3, [r7, #20]
 12288 123c 1344     		add	r3, r3, r2
 12289 123e AD4A     		ldr	r2, .L554+8
 12290 1240 1188     		ldrh	r1, [r2]	@ unaligned
 12291 1242 9278     		ldrb	r2, [r2, #2]
 12292 1244 1980     		strh	r1, [r3]	@ unaligned
 12293 1246 9A70     		strb	r2, [r3, #2]
1842:..\src/command_processing.c ****             
1843:..\src/command_processing.c ****     		sprintf(str, "Current lookup table: %f, %f, %f, %f, %f, %f\r\n", 
1844:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 12294              		.loc 1 1844 0 discriminator 2
 12295 1248 D7F88430 		ldr	r3, [r7, #132]
 12296 124c 5B6C     		ldr	r3, [r3, #68]	@ float
1843:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 12297              		.loc 1 1843 0 discriminator 2
 12298 124e 1846     		mov	r0, r3
 12299 1250 FFF7FEFF 		bl	__aeabi_f2d
 12300 1254 C7E90201 		strd	r0, [r7, #8]
 12301              		.loc 1 1844 0 discriminator 2
 12302 1258 D7F88430 		ldr	r3, [r7, #132]
 12303 125c 9B6C     		ldr	r3, [r3, #72]	@ float
1843:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 12304              		.loc 1 1843 0 discriminator 2
 12305 125e 1846     		mov	r0, r3
 12306 1260 FFF7FEFF 		bl	__aeabi_f2d
 12307 1264 0446     		mov	r4, r0
 12308 1266 0D46     		mov	r5, r1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 286


 12309              		.loc 1 1844 0 discriminator 2
 12310 1268 D7F88430 		ldr	r3, [r7, #132]
 12311 126c DB6C     		ldr	r3, [r3, #76]	@ float
1843:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 12312              		.loc 1 1843 0 discriminator 2
 12313 126e 1846     		mov	r0, r3
 12314 1270 FFF7FEFF 		bl	__aeabi_f2d
 12315 1274 8046     		mov	r8, r0
 12316 1276 8946     		mov	r9, r1
1845:..\src/command_processing.c ****                 MOT->curr_lookup[3], MOT->curr_lookup[4], MOT->curr_lookup[5]);
 12317              		.loc 1 1845 0 discriminator 2
 12318 1278 D7F88430 		ldr	r3, [r7, #132]
 12319 127c 1B6D     		ldr	r3, [r3, #80]	@ float
1843:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 12320              		.loc 1 1843 0 discriminator 2
 12321 127e 1846     		mov	r0, r3
 12322 1280 FFF7FEFF 		bl	__aeabi_f2d
 12323 1284 8246     		mov	r10, r0
 12324 1286 8B46     		mov	fp, r1
 12325              		.loc 1 1845 0 discriminator 2
 12326 1288 D7F88430 		ldr	r3, [r7, #132]
 12327 128c 5B6D     		ldr	r3, [r3, #84]	@ float
1843:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 12328              		.loc 1 1843 0 discriminator 2
 12329 128e 1846     		mov	r0, r3
 12330 1290 FFF7FEFF 		bl	__aeabi_f2d
 12331 1294 C7E90001 		strd	r0, [r7]
 12332              		.loc 1 1845 0 discriminator 2
 12333 1298 D7F88430 		ldr	r3, [r7, #132]
 12334 129c 9B6D     		ldr	r3, [r3, #88]	@ float
1843:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 12335              		.loc 1 1843 0 discriminator 2
 12336 129e 1846     		mov	r0, r3
 12337 12a0 FFF7FEFF 		bl	__aeabi_f2d
 12338 12a4 0246     		mov	r2, r0
 12339 12a6 0B46     		mov	r3, r1
 12340 12a8 07F11C00 		add	r0, r7, #28
 12341 12ac CDE90823 		strd	r2, [sp, #32]
 12342 12b0 D7E90012 		ldrd	r1, [r7]
 12343 12b4 CDE90612 		strd	r1, [sp, #24]
 12344 12b8 CDE904AB 		strd	r10, [sp, #16]
 12345 12bc CDE90289 		strd	r8, [sp, #8]
 12346 12c0 CDE90045 		strd	r4, [sp]
 12347 12c4 D7E90223 		ldrd	r2, [r7, #8]
 12348 12c8 8B49     		ldr	r1, .L554+12
 12349 12ca FFF7FEFF 		bl	sprintf
1846:..\src/command_processing.c **** 		    strcat(info_string, str);       
 12350              		.loc 1 1846 0 discriminator 2
 12351 12ce 07F11C03 		add	r3, r7, #28
 12352 12d2 1946     		mov	r1, r3
 12353 12d4 7869     		ldr	r0, [r7, #20]
 12354 12d6 FFF7FEFF 		bl	strcat
1847:..\src/command_processing.c **** 
1848:..\src/command_processing.c ****             sprintf(str, "Position limit active: %d", (int)MOT->pos_lim_flag);
 12355              		.loc 1 1848 0 discriminator 2
 12356 12da D7F88430 		ldr	r3, [r7, #132]
 12357 12de 93F83330 		ldrb	r3, [r3, #51]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 287


 12358 12e2 1A46     		mov	r2, r3
 12359 12e4 07F11C03 		add	r3, r7, #28
 12360 12e8 8449     		ldr	r1, .L554+16
 12361 12ea 1846     		mov	r0, r3
 12362 12ec FFF7FEFF 		bl	sprintf
1849:..\src/command_processing.c ****             strcat(info_string, str);
 12363              		.loc 1 1849 0 discriminator 2
 12364 12f0 07F11C03 		add	r3, r7, #28
 12365 12f4 1946     		mov	r1, r3
 12366 12f6 7869     		ldr	r0, [r7, #20]
 12367 12f8 FFF7FEFF 		bl	strcat
1850:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 12368              		.loc 1 1850 0 discriminator 2
 12369 12fc 7869     		ldr	r0, [r7, #20]
 12370 12fe FFF7FEFF 		bl	strlen
 12371 1302 0346     		mov	r3, r0
 12372 1304 1A46     		mov	r2, r3
 12373 1306 7B69     		ldr	r3, [r7, #20]
 12374 1308 1344     		add	r3, r3, r2
 12375 130a 7A4A     		ldr	r2, .L554+8
 12376 130c 1188     		ldrh	r1, [r2]	@ unaligned
 12377 130e 9278     		ldrb	r2, [r2, #2]
 12378 1310 1980     		strh	r1, [r3]	@ unaligned
 12379 1312 9A70     		strb	r2, [r3, #2]
1851:..\src/command_processing.c **** 
1852:..\src/command_processing.c ****             sprintf(str, "Position limit motor: inf -> %ld  ", (int32)MOT->pos_lim_inf >> MEM_P->en
 12380              		.loc 1 1852 0 discriminator 2
 12381 1314 D7F88430 		ldr	r3, [r7, #132]
 12382 1318 596B     		ldr	r1, [r3, #52]
 12383 131a 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 12384 131e D7F88C00 		ldr	r0, [r7, #140]
 12385 1322 1346     		mov	r3, r2
 12386 1324 5B00     		lsls	r3, r3, #1
 12387 1326 1344     		add	r3, r3, r2
 12388 1328 1B01     		lsls	r3, r3, #4
 12389 132a 0344     		add	r3, r3, r0
 12390 132c 03F29513 		addw	r3, r3, #405
 12391 1330 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12392 1332 41FA03F2 		asr	r2, r1, r3
 12393 1336 07F11C03 		add	r3, r7, #28
 12394 133a 7149     		ldr	r1, .L554+20
 12395 133c 1846     		mov	r0, r3
 12396 133e FFF7FEFF 		bl	sprintf
1853:..\src/command_processing.c ****             strcat(info_string, str);
 12397              		.loc 1 1853 0 discriminator 2
 12398 1342 07F11C03 		add	r3, r7, #28
 12399 1346 1946     		mov	r1, r3
 12400 1348 7869     		ldr	r0, [r7, #20]
 12401 134a FFF7FEFF 		bl	strcat
1854:..\src/command_processing.c ****             sprintf(str, "sup -> %ld\r\n", (int32)MOT->pos_lim_sup >> MEM_P->enc[ENC_L].res[0]);
 12402              		.loc 1 1854 0 discriminator 2
 12403 134e D7F88430 		ldr	r3, [r7, #132]
 12404 1352 996B     		ldr	r1, [r3, #56]
 12405 1354 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 12406 1358 D7F88C00 		ldr	r0, [r7, #140]
 12407 135c 1346     		mov	r3, r2
 12408 135e 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 288


 12409 1360 1344     		add	r3, r3, r2
 12410 1362 1B01     		lsls	r3, r3, #4
 12411 1364 0344     		add	r3, r3, r0
 12412 1366 03F29513 		addw	r3, r3, #405
 12413 136a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12414 136c 41FA03F2 		asr	r2, r1, r3
 12415 1370 07F11C03 		add	r3, r7, #28
 12416 1374 6349     		ldr	r1, .L554+24
 12417 1376 1846     		mov	r0, r3
 12418 1378 FFF7FEFF 		bl	sprintf
1855:..\src/command_processing.c ****             strcat(info_string, str);
 12419              		.loc 1 1855 0 discriminator 2
 12420 137c 07F11C03 		add	r3, r7, #28
 12421 1380 1946     		mov	r1, r3
 12422 1382 7869     		ldr	r0, [r7, #20]
 12423 1384 FFF7FEFF 		bl	strcat
1856:..\src/command_processing.c **** 
1857:..\src/command_processing.c ****             sprintf(str, "Max step pos and neg: %d %d", (int)MOT->max_step_pos, (int)MOT->max_step_
 12424              		.loc 1 1857 0 discriminator 2
 12425 1388 D7F88430 		ldr	r3, [r7, #132]
 12426 138c 1A6C     		ldr	r2, [r3, #64]
 12427 138e D7F88430 		ldr	r3, [r7, #132]
 12428 1392 DB6B     		ldr	r3, [r3, #60]
 12429 1394 07F11C00 		add	r0, r7, #28
 12430 1398 5B49     		ldr	r1, .L554+28
 12431 139a FFF7FEFF 		bl	sprintf
1858:..\src/command_processing.c ****             strcat(info_string, str);
 12432              		.loc 1 1858 0 discriminator 2
 12433 139e 07F11C03 		add	r3, r7, #28
 12434 13a2 1946     		mov	r1, r3
 12435 13a4 7869     		ldr	r0, [r7, #20]
 12436 13a6 FFF7FEFF 		bl	strcat
1859:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 12437              		.loc 1 1859 0 discriminator 2
 12438 13aa 7869     		ldr	r0, [r7, #20]
 12439 13ac FFF7FEFF 		bl	strlen
 12440 13b0 0346     		mov	r3, r0
 12441 13b2 1A46     		mov	r2, r3
 12442 13b4 7B69     		ldr	r3, [r7, #20]
 12443 13b6 1344     		add	r3, r3, r2
 12444 13b8 4E4A     		ldr	r2, .L554+8
 12445 13ba 1188     		ldrh	r1, [r2]	@ unaligned
 12446 13bc 9278     		ldrb	r2, [r2, #2]
 12447 13be 1980     		strh	r1, [r3]	@ unaligned
 12448 13c0 9A70     		strb	r2, [r3, #2]
1860:..\src/command_processing.c **** 
1861:..\src/command_processing.c ****             sprintf(str, "Current limit: %d\r\n", (int)MOT->current_limit);
 12449              		.loc 1 1861 0 discriminator 2
 12450 13c2 D7F88430 		ldr	r3, [r7, #132]
 12451 13c6 B3F95C30 		ldrsh	r3, [r3, #92]
 12452 13ca 1A46     		mov	r2, r3
 12453 13cc 07F11C03 		add	r3, r7, #28
 12454 13d0 4E49     		ldr	r1, .L554+32
 12455 13d2 1846     		mov	r0, r3
 12456 13d4 FFF7FEFF 		bl	sprintf
1862:..\src/command_processing.c ****             strcat(info_string, str);
 12457              		.loc 1 1862 0 discriminator 2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 289


 12458 13d8 07F11C03 		add	r3, r7, #28
 12459 13dc 1946     		mov	r1, r3
 12460 13de 7869     		ldr	r0, [r7, #20]
 12461 13e0 FFF7FEFF 		bl	strcat
1863:..\src/command_processing.c **** #ifdef GENERIC_FW       // decided not to show when using SOFTHAND_FW to streamline ping, since the
1864:..\src/command_processing.c ****             sprintf(str, "Motor board associated encoder line: %d\r\n", (int)MOT->encoder_line);
1865:..\src/command_processing.c ****             strcat(info_string, str);
1866:..\src/command_processing.c ****             switch(MOT->motor_driver_type) {
1867:..\src/command_processing.c ****                 case DRIVER_MC33887:
1868:..\src/command_processing.c ****                     strcat(info_string, "Driver type: MC33887 (Standard)\r\n");
1869:..\src/command_processing.c ****                     break;
1870:..\src/command_processing.c ****                 case DRIVER_VNH5019:
1871:..\src/command_processing.c ****                     strcat(info_string, "Driver type: VNH5019 (High power)\r\n");
1872:..\src/command_processing.c ****                     break;
1873:..\src/command_processing.c ****                 case DRIVER_BRUSHLESS:
1874:..\src/command_processing.c ****                     strcat(info_string, "Driver type: ESC (Brushless)\r\n");
1875:..\src/command_processing.c ****                     break;
1876:..\src/command_processing.c ****                 default:
1877:..\src/command_processing.c ****                     break;
1878:..\src/command_processing.c ****             }
1879:..\src/command_processing.c ****             sprintf(str, "PWM rate limiter value: %d\r\n", (int)MOT->pwm_rate_limiter);
1880:..\src/command_processing.c ****             strcat(info_string, str);
1881:..\src/command_processing.c ****             if (MOT->not_revers_motor_flag)
1882:..\src/command_processing.c ****                 strcat(info_string, "Not reversible motor: YES\r\n");
1883:..\src/command_processing.c ****             else
1884:..\src/command_processing.c ****                 strcat(info_string, "Not reversible motor: NO\r\n");
1885:..\src/command_processing.c **** #endif                
1886:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 12462              		.loc 1 1886 0 discriminator 2
 12463 13e4 7869     		ldr	r0, [r7, #20]
 12464 13e6 FFF7FEFF 		bl	strlen
 12465 13ea 0346     		mov	r3, r0
 12466 13ec 1A46     		mov	r2, r3
 12467 13ee 7B69     		ldr	r3, [r7, #20]
 12468 13f0 1344     		add	r3, r3, r2
 12469 13f2 404A     		ldr	r2, .L554+8
 12470 13f4 1188     		ldrh	r1, [r2]	@ unaligned
 12471 13f6 9278     		ldrb	r2, [r2, #2]
 12472 13f8 1980     		strh	r1, [r3]	@ unaligned
 12473 13fa 9A70     		strb	r2, [r3, #2]
 12474              	.LBE25:
1613:..\src/command_processing.c ****             
 12475              		.loc 1 1613 0 discriminator 2
 12476 13fc 97F89330 		ldrb	r3, [r7, #147]	@ zero_extendqisi2
 12477 1400 0133     		adds	r3, r3, #1
 12478 1402 87F89330 		strb	r3, [r7, #147]
 12479              	.L461:
1613:..\src/command_processing.c ****             
 12480              		.loc 1 1613 0 is_stmt 0 discriminator 1
 12481 1406 D7F88C30 		ldr	r3, [r7, #140]
 12482 140a 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 12483 140e 97F89320 		ldrb	r2, [r7, #147]	@ zero_extendqisi2
 12484 1412 9A42     		cmp	r2, r3
 12485 1414 7EF6AAAF 		bls	.L514
 12486              	.LBE24:
1887:..\src/command_processing.c ****         }
1888:..\src/command_processing.c ****       
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 290


1889:..\src/command_processing.c ****         strcat(info_string, "EMG CONFIGURATION\r\n");
 12487              		.loc 1 1889 0 is_stmt 1
 12488 1418 7869     		ldr	r0, [r7, #20]
 12489 141a FFF7FEFF 		bl	strlen
 12490 141e 0346     		mov	r3, r0
 12491 1420 1A46     		mov	r2, r3
 12492 1422 7B69     		ldr	r3, [r7, #20]
 12493 1424 1344     		add	r3, r3, r2
 12494 1426 3A4A     		ldr	r2, .L554+36
 12495 1428 1D46     		mov	r5, r3
 12496 142a 1446     		mov	r4, r2
 12497 142c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 12498 142e 2860     		str	r0, [r5]	@ unaligned
 12499 1430 6960     		str	r1, [r5, #4]	@ unaligned
 12500 1432 AA60     		str	r2, [r5, #8]	@ unaligned
 12501 1434 EB60     		str	r3, [r5, #12]	@ unaligned
 12502 1436 2068     		ldr	r0, [r4]	@ unaligned
 12503 1438 2861     		str	r0, [r5, #16]	@ unaligned
1890:..\src/command_processing.c ****         sprintf(str, "EMG thresholds [0 - 1024]: %u, %u", MEM_P->emg.emg_threshold[0], MEM_P->emg.e
 12504              		.loc 1 1890 0
 12505 143a D7F88C30 		ldr	r3, [r7, #140]
 12506 143e B3F8F031 		ldrh	r3, [r3, #496]
 12507 1442 1A46     		mov	r2, r3
 12508 1444 D7F88C30 		ldr	r3, [r7, #140]
 12509 1448 B3F8F231 		ldrh	r3, [r3, #498]
 12510 144c 07F11C00 		add	r0, r7, #28
 12511 1450 3049     		ldr	r1, .L554+40
 12512 1452 FFF7FEFF 		bl	sprintf
1891:..\src/command_processing.c ****         strcat(info_string, str);
 12513              		.loc 1 1891 0
 12514 1456 07F11C03 		add	r3, r7, #28
 12515 145a 1946     		mov	r1, r3
 12516 145c 7869     		ldr	r0, [r7, #20]
 12517 145e FFF7FEFF 		bl	strcat
1892:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 12518              		.loc 1 1892 0
 12519 1462 7869     		ldr	r0, [r7, #20]
 12520 1464 FFF7FEFF 		bl	strlen
 12521 1468 0346     		mov	r3, r0
 12522 146a 1A46     		mov	r2, r3
 12523 146c 7B69     		ldr	r3, [r7, #20]
 12524 146e 1344     		add	r3, r3, r2
 12525 1470 204A     		ldr	r2, .L554+8
 12526 1472 1188     		ldrh	r1, [r2]	@ unaligned
 12527 1474 9278     		ldrb	r2, [r2, #2]
 12528 1476 1980     		strh	r1, [r3]	@ unaligned
 12529 1478 9A70     		strb	r2, [r3, #2]
1893:..\src/command_processing.c **** 
1894:..\src/command_processing.c ****         sprintf(str, "EMG max values [0 - 4096]: %lu, %lu", MEM_P->emg.emg_max_value[0], MEM_P->emg
 12530              		.loc 1 1894 0
 12531 147a D7F88C30 		ldr	r3, [r7, #140]
 12532 147e D3F8F421 		ldr	r2, [r3, #500]
 12533 1482 D7F88C30 		ldr	r3, [r7, #140]
 12534 1486 D3F8F831 		ldr	r3, [r3, #504]
 12535 148a 07F11C00 		add	r0, r7, #28
 12536 148e 2249     		ldr	r1, .L554+44
 12537 1490 FFF7FEFF 		bl	sprintf
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 291


1895:..\src/command_processing.c ****         strcat(info_string, str);
 12538              		.loc 1 1895 0
 12539 1494 07F11C03 		add	r3, r7, #28
 12540 1498 1946     		mov	r1, r3
 12541 149a 7869     		ldr	r0, [r7, #20]
 12542 149c FFF7FEFF 		bl	strcat
1896:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 12543              		.loc 1 1896 0
 12544 14a0 7869     		ldr	r0, [r7, #20]
 12545 14a2 FFF7FEFF 		bl	strlen
 12546 14a6 0346     		mov	r3, r0
 12547 14a8 1A46     		mov	r2, r3
 12548 14aa 7B69     		ldr	r3, [r7, #20]
 12549 14ac 1344     		add	r3, r3, r2
 12550 14ae 114A     		ldr	r2, .L554+8
 12551 14b0 1188     		ldrh	r1, [r2]	@ unaligned
 12552 14b2 9278     		ldrb	r2, [r2, #2]
 12553 14b4 1980     		strh	r1, [r3]	@ unaligned
 12554 14b6 9A70     		strb	r2, [r3, #2]
1897:..\src/command_processing.c **** 
1898:..\src/command_processing.c ****         if (MEM_P->emg.switch_emg)
 12555              		.loc 1 1898 0
 12556 14b8 D7F88C30 		ldr	r3, [r7, #140]
 12557 14bc 93F8FF31 		ldrb	r3, [r3, #511]	@ zero_extendqisi2
 12558 14c0 002B     		cmp	r3, #0
 12559 14c2 2DD0     		beq	.L515
1899:..\src/command_processing.c ****             strcat(info_string, "EMG inversion: YES\r\n");
 12560              		.loc 1 1899 0
 12561 14c4 7869     		ldr	r0, [r7, #20]
 12562 14c6 FFF7FEFF 		bl	strlen
 12563 14ca 0346     		mov	r3, r0
 12564 14cc 1A46     		mov	r2, r3
 12565 14ce 7B69     		ldr	r3, [r7, #20]
 12566 14d0 1344     		add	r3, r3, r2
 12567 14d2 124A     		ldr	r2, .L554+48
 12568 14d4 1D46     		mov	r5, r3
 12569 14d6 1446     		mov	r4, r2
 12570 14d8 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 12571 14da 2860     		str	r0, [r5]	@ unaligned
 12572 14dc 6960     		str	r1, [r5, #4]	@ unaligned
 12573 14de AA60     		str	r2, [r5, #8]	@ unaligned
 12574 14e0 EB60     		str	r3, [r5, #12]	@ unaligned
 12575 14e2 2068     		ldr	r0, [r4]	@ unaligned
 12576 14e4 2861     		str	r0, [r5, #16]	@ unaligned
 12577 14e6 2379     		ldrb	r3, [r4, #4]
 12578 14e8 2B75     		strb	r3, [r5, #20]
 12579 14ea 2AE0     		b	.L516
 12580              	.L555:
 12581              		.align	2
 12582              	.L554:
 12583 14ec E4160000 		.word	.LC217
 12584 14f0 90130000 		.word	.LC184
 12585 14f4 58110000 		.word	.LC152
 12586 14f8 E8160000 		.word	.LC218
 12587 14fc 18170000 		.word	.LC219
 12588 1500 34170000 		.word	.LC220
 12589 1504 58170000 		.word	.LC221
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 292


 12590 1508 68170000 		.word	.LC222
 12591 150c 84170000 		.word	.LC223
 12592 1510 98170000 		.word	.LC224
 12593 1514 AC170000 		.word	.LC225
 12594 1518 D0170000 		.word	.LC226
 12595 151c F4170000 		.word	.LC227
 12596              	.L515:
1900:..\src/command_processing.c ****         else
1901:..\src/command_processing.c ****             strcat(info_string, "EMG inversion: NO\r\n");
 12597              		.loc 1 1901 0
 12598 1520 7869     		ldr	r0, [r7, #20]
 12599 1522 FFF7FEFF 		bl	strlen
 12600 1526 0346     		mov	r3, r0
 12601 1528 1A46     		mov	r2, r3
 12602 152a 7B69     		ldr	r3, [r7, #20]
 12603 152c 1344     		add	r3, r3, r2
 12604 152e BA4A     		ldr	r2, .L556
 12605 1530 1D46     		mov	r5, r3
 12606 1532 1446     		mov	r4, r2
 12607 1534 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 12608 1536 2860     		str	r0, [r5]	@ unaligned
 12609 1538 6960     		str	r1, [r5, #4]	@ unaligned
 12610 153a AA60     		str	r2, [r5, #8]	@ unaligned
 12611 153c EB60     		str	r3, [r5, #12]	@ unaligned
 12612 153e 2068     		ldr	r0, [r4]	@ unaligned
 12613 1540 2861     		str	r0, [r5, #16]	@ unaligned
 12614              	.L516:
1902:..\src/command_processing.c ****             
1903:..\src/command_processing.c ****         if (MEM_P->emg.emg_calibration_flag)
 12615              		.loc 1 1903 0
 12616 1542 D7F88C30 		ldr	r3, [r7, #140]
 12617 1546 93F8FE31 		ldrb	r3, [r3, #510]	@ zero_extendqisi2
 12618 154a 002B     		cmp	r3, #0
 12619 154c 17D0     		beq	.L517
1904:..\src/command_processing.c ****             strcat(info_string, "Calibration enabled: YES\r\n");
 12620              		.loc 1 1904 0
 12621 154e 7869     		ldr	r0, [r7, #20]
 12622 1550 FFF7FEFF 		bl	strlen
 12623 1554 0346     		mov	r3, r0
 12624 1556 1A46     		mov	r2, r3
 12625 1558 7B69     		ldr	r3, [r7, #20]
 12626 155a 1344     		add	r3, r3, r2
 12627 155c AF4A     		ldr	r2, .L556+4
 12628 155e 1D46     		mov	r5, r3
 12629 1560 1446     		mov	r4, r2
 12630 1562 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 12631 1564 2860     		str	r0, [r5]	@ unaligned
 12632 1566 6960     		str	r1, [r5, #4]	@ unaligned
 12633 1568 AA60     		str	r2, [r5, #8]	@ unaligned
 12634 156a EB60     		str	r3, [r5, #12]	@ unaligned
 12635 156c 03CC     		ldmia	r4!, {r0, r1}
 12636 156e 2861     		str	r0, [r5, #16]	@ unaligned
 12637 1570 6961     		str	r1, [r5, #20]	@ unaligned
 12638 1572 2388     		ldrh	r3, [r4]	@ unaligned
 12639 1574 A278     		ldrb	r2, [r4, #2]
 12640 1576 2B83     		strh	r3, [r5, #24]	@ unaligned
 12641 1578 1346     		mov	r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 293


 12642 157a AB76     		strb	r3, [r5, #26]
 12643 157c 13E0     		b	.L518
 12644              	.L517:
1905:..\src/command_processing.c ****         else
1906:..\src/command_processing.c ****             strcat(info_string, "Calibration enabled: NO\r\n");
 12645              		.loc 1 1906 0
 12646 157e 7869     		ldr	r0, [r7, #20]
 12647 1580 FFF7FEFF 		bl	strlen
 12648 1584 0346     		mov	r3, r0
 12649 1586 1A46     		mov	r2, r3
 12650 1588 7B69     		ldr	r3, [r7, #20]
 12651 158a 1344     		add	r3, r3, r2
 12652 158c A44A     		ldr	r2, .L556+8
 12653 158e 1D46     		mov	r5, r3
 12654 1590 1446     		mov	r4, r2
 12655 1592 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 12656 1594 2860     		str	r0, [r5]	@ unaligned
 12657 1596 6960     		str	r1, [r5, #4]	@ unaligned
 12658 1598 AA60     		str	r2, [r5, #8]	@ unaligned
 12659 159a EB60     		str	r3, [r5, #12]	@ unaligned
 12660 159c 03CC     		ldmia	r4!, {r0, r1}
 12661 159e 2861     		str	r0, [r5, #16]	@ unaligned
 12662 15a0 6961     		str	r1, [r5, #20]	@ unaligned
 12663 15a2 2388     		ldrh	r3, [r4]	@ unaligned
 12664 15a4 2B83     		strh	r3, [r5, #24]	@ unaligned
 12665              	.L518:
1907:..\src/command_processing.c **** 
1908:..\src/command_processing.c ****         sprintf(str, "EMG max speed: %d %d", (int)MEM_P->emg.emg_speed[0], (int)MEM_P->emg.emg_spee
 12666              		.loc 1 1908 0
 12667 15a6 D7F88C30 		ldr	r3, [r7, #140]
 12668 15aa 93F8FC31 		ldrb	r3, [r3, #508]	@ zero_extendqisi2
 12669 15ae 1A46     		mov	r2, r3
 12670 15b0 D7F88C30 		ldr	r3, [r7, #140]
 12671 15b4 93F8FD31 		ldrb	r3, [r3, #509]	@ zero_extendqisi2
 12672 15b8 07F11C00 		add	r0, r7, #28
 12673 15bc 9949     		ldr	r1, .L556+12
 12674 15be FFF7FEFF 		bl	sprintf
1909:..\src/command_processing.c ****         strcat(info_string, str);
 12675              		.loc 1 1909 0
 12676 15c2 07F11C03 		add	r3, r7, #28
 12677 15c6 1946     		mov	r1, r3
 12678 15c8 7869     		ldr	r0, [r7, #20]
 12679 15ca FFF7FEFF 		bl	strcat
1910:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 12680              		.loc 1 1910 0
 12681 15ce 7869     		ldr	r0, [r7, #20]
 12682 15d0 FFF7FEFF 		bl	strlen
 12683 15d4 0346     		mov	r3, r0
 12684 15d6 1A46     		mov	r2, r3
 12685 15d8 7B69     		ldr	r3, [r7, #20]
 12686 15da 1344     		add	r3, r3, r2
 12687 15dc 924A     		ldr	r2, .L556+16
 12688 15de 1188     		ldrh	r1, [r2]	@ unaligned
 12689 15e0 9278     		ldrb	r2, [r2, #2]
 12690 15e2 1980     		strh	r1, [r3]	@ unaligned
 12691 15e4 9A70     		strb	r2, [r3, #2]
1911:..\src/command_processing.c **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 294


1912:..\src/command_processing.c ****         if (MEM_P->exp.read_ADC_sensors_port_flag == TRUE){
 12692              		.loc 1 1912 0
 12693 15e6 D7F88C30 		ldr	r3, [r7, #140]
 12694 15ea 93F82732 		ldrb	r3, [r3, #551]	@ zero_extendqisi2
 12695 15ee 012B     		cmp	r3, #1
 12696 15f0 6ED1     		bne	.L519
1913:..\src/command_processing.c ****             strcat(info_string, "Additional ADC sensors value:\r\n");
 12697              		.loc 1 1913 0
 12698 15f2 7869     		ldr	r0, [r7, #20]
 12699 15f4 FFF7FEFF 		bl	strlen
 12700 15f8 0346     		mov	r3, r0
 12701 15fa 1A46     		mov	r2, r3
 12702 15fc 7B69     		ldr	r3, [r7, #20]
 12703 15fe 1344     		add	r3, r3, r2
 12704 1600 8A4A     		ldr	r2, .L556+20
 12705 1602 1C46     		mov	r4, r3
 12706 1604 1546     		mov	r5, r2
 12707 1606 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 12708 1608 2060     		str	r0, [r4]	@ unaligned
 12709 160a 6160     		str	r1, [r4, #4]	@ unaligned
 12710 160c A260     		str	r2, [r4, #8]	@ unaligned
 12711 160e E360     		str	r3, [r4, #12]	@ unaligned
 12712 1610 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 12713 1612 2061     		str	r0, [r4, #16]	@ unaligned
 12714 1614 6161     		str	r1, [r4, #20]	@ unaligned
 12715 1616 A261     		str	r2, [r4, #24]	@ unaligned
 12716 1618 E361     		str	r3, [r4, #28]	@ unaligned
1914:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_ADDITIONAL_EMGS; ++i) {
 12717              		.loc 1 1914 0
 12718 161a 0023     		movs	r3, #0
 12719 161c C7F89430 		str	r3, [r7, #148]
 12720 1620 25E0     		b	.L520
 12721              	.L521:
1915:..\src/command_processing.c ****                 sprintf(str,"ADC %d -> %d", (int)(i + 1), (int) g_adc_meas.add_emg[i]);
 12722              		.loc 1 1915 0 discriminator 3
 12723 1622 D7F89430 		ldr	r3, [r7, #148]
 12724 1626 591C     		adds	r1, r3, #1
 12725 1628 814A     		ldr	r2, .L556+24
 12726 162a D7F89430 		ldr	r3, [r7, #148]
 12727 162e 0233     		adds	r3, r3, #2
 12728 1630 52F82330 		ldr	r3, [r2, r3, lsl #2]
 12729 1634 07F11C00 		add	r0, r7, #28
 12730 1638 0A46     		mov	r2, r1
 12731 163a 7E49     		ldr	r1, .L556+28
 12732 163c FFF7FEFF 		bl	sprintf
1916:..\src/command_processing.c ****                 strcat(info_string, str);
 12733              		.loc 1 1916 0 discriminator 3
 12734 1640 07F11C03 		add	r3, r7, #28
 12735 1644 1946     		mov	r1, r3
 12736 1646 7869     		ldr	r0, [r7, #20]
 12737 1648 FFF7FEFF 		bl	strcat
1917:..\src/command_processing.c ****                 strcat(info_string,"\r\n");
 12738              		.loc 1 1917 0 discriminator 3
 12739 164c 7869     		ldr	r0, [r7, #20]
 12740 164e FFF7FEFF 		bl	strlen
 12741 1652 0346     		mov	r3, r0
 12742 1654 1A46     		mov	r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 295


 12743 1656 7B69     		ldr	r3, [r7, #20]
 12744 1658 1344     		add	r3, r3, r2
 12745 165a 734A     		ldr	r2, .L556+16
 12746 165c 1188     		ldrh	r1, [r2]	@ unaligned
 12747 165e 9278     		ldrb	r2, [r2, #2]
 12748 1660 1980     		strh	r1, [r3]	@ unaligned
 12749 1662 9A70     		strb	r2, [r3, #2]
1914:..\src/command_processing.c ****                 sprintf(str,"ADC %d -> %d", (int)(i + 1), (int) g_adc_meas.add_emg[i]);
 12750              		.loc 1 1914 0 discriminator 3
 12751 1664 D7F89430 		ldr	r3, [r7, #148]
 12752 1668 0133     		adds	r3, r3, #1
 12753 166a C7F89430 		str	r3, [r7, #148]
 12754              	.L520:
1914:..\src/command_processing.c ****                 sprintf(str,"ADC %d -> %d", (int)(i + 1), (int) g_adc_meas.add_emg[i]);
 12755              		.loc 1 1914 0 is_stmt 0 discriminator 1
 12756 166e D7F89430 		ldr	r3, [r7, #148]
 12757 1672 052B     		cmp	r3, #5
 12758 1674 D5DD     		ble	.L521
1918:..\src/command_processing.c ****             }
1919:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_INPUT_EMGS; ++i) {
 12759              		.loc 1 1919 0 is_stmt 1
 12760 1676 0023     		movs	r3, #0
 12761 1678 C7F89430 		str	r3, [r7, #148]
 12762 167c 24E0     		b	.L522
 12763              	.L523:
1920:..\src/command_processing.c ****                 sprintf(str,"EMG input %d -> %d", (int)(i + 1), (int) g_adc_meas.emg[i]);
 12764              		.loc 1 1920 0 discriminator 3
 12765 167e D7F89430 		ldr	r3, [r7, #148]
 12766 1682 591C     		adds	r1, r3, #1
 12767 1684 6A4A     		ldr	r2, .L556+24
 12768 1686 D7F89430 		ldr	r3, [r7, #148]
 12769 168a 52F82330 		ldr	r3, [r2, r3, lsl #2]
 12770 168e 07F11C00 		add	r0, r7, #28
 12771 1692 0A46     		mov	r2, r1
 12772 1694 6849     		ldr	r1, .L556+32
 12773 1696 FFF7FEFF 		bl	sprintf
1921:..\src/command_processing.c ****                 strcat(info_string, str);
 12774              		.loc 1 1921 0 discriminator 3
 12775 169a 07F11C03 		add	r3, r7, #28
 12776 169e 1946     		mov	r1, r3
 12777 16a0 7869     		ldr	r0, [r7, #20]
 12778 16a2 FFF7FEFF 		bl	strcat
1922:..\src/command_processing.c ****                 strcat(info_string,"\r\n");
 12779              		.loc 1 1922 0 discriminator 3
 12780 16a6 7869     		ldr	r0, [r7, #20]
 12781 16a8 FFF7FEFF 		bl	strlen
 12782 16ac 0346     		mov	r3, r0
 12783 16ae 1A46     		mov	r2, r3
 12784 16b0 7B69     		ldr	r3, [r7, #20]
 12785 16b2 1344     		add	r3, r3, r2
 12786 16b4 5C4A     		ldr	r2, .L556+16
 12787 16b6 1188     		ldrh	r1, [r2]	@ unaligned
 12788 16b8 9278     		ldrb	r2, [r2, #2]
 12789 16ba 1980     		strh	r1, [r3]	@ unaligned
 12790 16bc 9A70     		strb	r2, [r3, #2]
1919:..\src/command_processing.c ****                 sprintf(str,"EMG input %d -> %d", (int)(i + 1), (int) g_adc_meas.emg[i]);
 12791              		.loc 1 1919 0 discriminator 3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 296


 12792 16be D7F89430 		ldr	r3, [r7, #148]
 12793 16c2 0133     		adds	r3, r3, #1
 12794 16c4 C7F89430 		str	r3, [r7, #148]
 12795              	.L522:
1919:..\src/command_processing.c ****                 sprintf(str,"EMG input %d -> %d", (int)(i + 1), (int) g_adc_meas.emg[i]);
 12796              		.loc 1 1919 0 is_stmt 0 discriminator 1
 12797 16c8 D7F89430 		ldr	r3, [r7, #148]
 12798 16cc 012B     		cmp	r3, #1
 12799 16ce D6DD     		ble	.L523
 12800              	.L519:
1923:..\src/command_processing.c ****             }
1924:..\src/command_processing.c ****         }
1925:..\src/command_processing.c **** 
1926:..\src/command_processing.c **** #ifdef GENERIC_FW
1927:..\src/command_processing.c ****     
1928:..\src/command_processing.c ****         strcat(info_string, "\r\n");
1929:..\src/command_processing.c ****         strcat(info_string, "JOYSTICK CONFIGURATION\r\n");
1930:..\src/command_processing.c ****         sprintf(str, "Closure speed: %d", c_mem.JOY_spec.joystick_closure_speed);
1931:..\src/command_processing.c ****         strcat(info_string, str);
1932:..\src/command_processing.c ****         strcat(info_string, "\r\n");
1933:..\src/command_processing.c **** 
1934:..\src/command_processing.c ****         sprintf(str, "Joystick Threshold: %d", c_mem.JOY_spec.joystick_threshold);
1935:..\src/command_processing.c ****         strcat(info_string, str);
1936:..\src/command_processing.c ****         strcat(info_string, "\r\n");
1937:..\src/command_processing.c ****         sprintf(str, "Joystick Gains - X:%hu  Y:%hu", c_mem.JOY_spec.joystick_gains[0], c_mem.JOY_s
1938:..\src/command_processing.c ****         strcat(info_string, str);
1939:..\src/command_processing.c ****         strcat(info_string, "\r\n");
1940:..\src/command_processing.c **** 
1941:..\src/command_processing.c **** #endif
1942:..\src/command_processing.c ****         
1943:..\src/command_processing.c ****         if (MEM_P->SH.rest_position_flag) {
 12801              		.loc 1 1943 0 is_stmt 1
 12802 16d0 D7F88C30 		ldr	r3, [r7, #140]
 12803 16d4 93F8AC32 		ldrb	r3, [r3, #684]	@ zero_extendqisi2
 12804 16d8 002B     		cmp	r3, #0
 12805 16da 63D0     		beq	.L524
1944:..\src/command_processing.c ****     		sprintf(str, "Rest time delay (ms): %d", (int)MEM_P->SH.rest_delay);
 12806              		.loc 1 1944 0
 12807 16dc D7F88C30 		ldr	r3, [r7, #140]
 12808 16e0 D3F8A422 		ldr	r2, [r3, #676]
 12809 16e4 07F11C03 		add	r3, r7, #28
 12810 16e8 5449     		ldr	r1, .L556+36
 12811 16ea 1846     		mov	r0, r3
 12812 16ec FFF7FEFF 		bl	sprintf
1945:..\src/command_processing.c ****             strcat(info_string, str);
 12813              		.loc 1 1945 0
 12814 16f0 07F11C03 		add	r3, r7, #28
 12815 16f4 1946     		mov	r1, r3
 12816 16f6 7869     		ldr	r0, [r7, #20]
 12817 16f8 FFF7FEFF 		bl	strcat
1946:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 12818              		.loc 1 1946 0
 12819 16fc 7869     		ldr	r0, [r7, #20]
 12820 16fe FFF7FEFF 		bl	strlen
 12821 1702 0346     		mov	r3, r0
 12822 1704 1A46     		mov	r2, r3
 12823 1706 7B69     		ldr	r3, [r7, #20]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 297


 12824 1708 1344     		add	r3, r3, r2
 12825 170a 474A     		ldr	r2, .L556+16
 12826 170c 1188     		ldrh	r1, [r2]	@ unaligned
 12827 170e 9278     		ldrb	r2, [r2, #2]
 12828 1710 1980     		strh	r1, [r3]	@ unaligned
 12829 1712 9A70     		strb	r2, [r3, #2]
1947:..\src/command_processing.c ****             
1948:..\src/command_processing.c ****             sprintf(str, "Rest velocity closure (ticks/sec): %d", (int)MEM_P->SH.rest_vel);
 12830              		.loc 1 1948 0
 12831 1714 D7F88C30 		ldr	r3, [r7, #140]
 12832 1718 D3F8A822 		ldr	r2, [r3, #680]
 12833 171c 07F11C03 		add	r3, r7, #28
 12834 1720 4749     		ldr	r1, .L556+40
 12835 1722 1846     		mov	r0, r3
 12836 1724 FFF7FEFF 		bl	sprintf
1949:..\src/command_processing.c ****             strcat(info_string, str);
 12837              		.loc 1 1949 0
 12838 1728 07F11C03 		add	r3, r7, #28
 12839 172c 1946     		mov	r1, r3
 12840 172e 7869     		ldr	r0, [r7, #20]
 12841 1730 FFF7FEFF 		bl	strcat
1950:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 12842              		.loc 1 1950 0
 12843 1734 7869     		ldr	r0, [r7, #20]
 12844 1736 FFF7FEFF 		bl	strlen
 12845 173a 0346     		mov	r3, r0
 12846 173c 1A46     		mov	r2, r3
 12847 173e 7B69     		ldr	r3, [r7, #20]
 12848 1740 1344     		add	r3, r3, r2
 12849 1742 394A     		ldr	r2, .L556+16
 12850 1744 1188     		ldrh	r1, [r2]	@ unaligned
 12851 1746 9278     		ldrb	r2, [r2, #2]
 12852 1748 1980     		strh	r1, [r3]	@ unaligned
 12853 174a 9A70     		strb	r2, [r3, #2]
1951:..\src/command_processing.c ****             
1952:..\src/command_processing.c ****             sprintf(str, "Rest position: %d", (int)(MEM_P->SH.rest_pos >> MEM_P->enc[MEM_P->motor[0
 12854              		.loc 1 1952 0
 12855 174c D7F88C30 		ldr	r3, [r7, #140]
 12856 1750 D3F8A022 		ldr	r2, [r3, #672]
 12857 1754 D7F88C30 		ldr	r3, [r7, #140]
 12858 1758 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 12859 175c 1846     		mov	r0, r3
 12860 175e D7F88C10 		ldr	r1, [r7, #140]
 12861 1762 0346     		mov	r3, r0
 12862 1764 5B00     		lsls	r3, r3, #1
 12863 1766 0344     		add	r3, r3, r0
 12864 1768 1B01     		lsls	r3, r3, #4
 12865 176a 0B44     		add	r3, r3, r1
 12866 176c 03F29513 		addw	r3, r3, #405
 12867 1770 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12868 1772 1A41     		asrs	r2, r2, r3
 12869 1774 07F11C03 		add	r3, r7, #28
 12870 1778 3249     		ldr	r1, .L556+44
 12871 177a 1846     		mov	r0, r3
 12872 177c FFF7FEFF 		bl	sprintf
1953:..\src/command_processing.c ****             strcat(info_string, str);
 12873              		.loc 1 1953 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 298


 12874 1780 07F11C03 		add	r3, r7, #28
 12875 1784 1946     		mov	r1, r3
 12876 1786 7869     		ldr	r0, [r7, #20]
 12877 1788 FFF7FEFF 		bl	strcat
1954:..\src/command_processing.c ****             strcat(info_string, "\r\n");  
 12878              		.loc 1 1954 0
 12879 178c 7869     		ldr	r0, [r7, #20]
 12880 178e FFF7FEFF 		bl	strlen
 12881 1792 0346     		mov	r3, r0
 12882 1794 1A46     		mov	r2, r3
 12883 1796 7B69     		ldr	r3, [r7, #20]
 12884 1798 1344     		add	r3, r3, r2
 12885 179a 234A     		ldr	r2, .L556+16
 12886 179c 1188     		ldrh	r1, [r2]	@ unaligned
 12887 179e 9278     		ldrb	r2, [r2, #2]
 12888 17a0 1980     		strh	r1, [r3]	@ unaligned
 12889 17a2 9A70     		strb	r2, [r3, #2]
 12890              	.L524:
1955:..\src/command_processing.c ****         }
1956:..\src/command_processing.c **** 
1957:..\src/command_processing.c ****         if (MEM_P->imu.read_imu_flag) {
 12891              		.loc 1 1957 0
 12892 17a4 D7F88C30 		ldr	r3, [r7, #140]
 12893 17a8 93F80032 		ldrb	r3, [r3, #512]	@ zero_extendqisi2
 12894 17ac 002B     		cmp	r3, #0
 12895 17ae 00F0CD81 		beq	.L525
1958:..\src/command_processing.c ****             sprintf(str, "IMU Connected: %d\r\n", (int) N_IMU_Connected);
 12896              		.loc 1 1958 0
 12897 17b2 254B     		ldr	r3, .L556+48
 12898 17b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12899 17b6 1A46     		mov	r2, r3
 12900 17b8 07F11C03 		add	r3, r7, #28
 12901 17bc 2349     		ldr	r1, .L556+52
 12902 17be 1846     		mov	r0, r3
 12903 17c0 FFF7FEFF 		bl	sprintf
1959:..\src/command_processing.c ****             strcat(info_string, str);
 12904              		.loc 1 1959 0
 12905 17c4 07F11C03 		add	r3, r7, #28
 12906 17c8 1946     		mov	r1, r3
 12907 17ca 7869     		ldr	r0, [r7, #20]
 12908 17cc FFF7FEFF 		bl	strcat
1960:..\src/command_processing.c ****             
1961:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 12909              		.loc 1 1961 0
 12910 17d0 7869     		ldr	r0, [r7, #20]
 12911 17d2 FFF7FEFF 		bl	strlen
 12912 17d6 0346     		mov	r3, r0
 12913 17d8 1A46     		mov	r2, r3
 12914 17da 7B69     		ldr	r3, [r7, #20]
 12915 17dc 1344     		add	r3, r3, r2
 12916 17de 124A     		ldr	r2, .L556+16
 12917 17e0 1188     		ldrh	r1, [r2]	@ unaligned
 12918 17e2 9278     		ldrb	r2, [r2, #2]
 12919 17e4 1980     		strh	r1, [r3]	@ unaligned
 12920 17e6 9A70     		strb	r2, [r3, #2]
1962:..\src/command_processing.c ****             
1963:..\src/command_processing.c ****             strcat(info_string, "IMUs CONFIGURATION\r\n");
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 299


 12921              		.loc 1 1963 0
 12922 17e8 7869     		ldr	r0, [r7, #20]
 12923 17ea FFF7FEFF 		bl	strlen
 12924 17ee 0346     		mov	r3, r0
 12925 17f0 1A46     		mov	r2, r3
 12926 17f2 7B69     		ldr	r3, [r7, #20]
 12927 17f4 1344     		add	r3, r3, r2
 12928 17f6 164A     		ldr	r2, .L556+56
 12929 17f8 1D46     		mov	r5, r3
 12930 17fa 1446     		mov	r4, r2
 12931 17fc 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 12932 17fe 2860     		str	r0, [r5]	@ unaligned
 12933 1800 6960     		str	r1, [r5, #4]	@ unaligned
 12934 1802 AA60     		str	r2, [r5, #8]	@ unaligned
 12935 1804 EB60     		str	r3, [r5, #12]	@ unaligned
 12936 1806 2068     		ldr	r0, [r4]	@ unaligned
 12937 1808 2861     		str	r0, [r5, #16]	@ unaligned
 12938 180a 2379     		ldrb	r3, [r4, #4]
 12939 180c 2B75     		strb	r3, [r5, #20]
1964:..\src/command_processing.c ****             for (i=0; i<N_IMU_Connected; i++){
 12940              		.loc 1 1964 0
 12941 180e 0023     		movs	r3, #0
 12942 1810 C7F89430 		str	r3, [r7, #148]
 12943 1814 83E1     		b	.L526
 12944              	.L557:
 12945 1816 00BF     		.align	2
 12946              	.L556:
 12947 1818 0C180000 		.word	.LC228
 12948 181c 20180000 		.word	.LC229
 12949 1820 3C180000 		.word	.LC230
 12950 1824 58180000 		.word	.LC231
 12951 1828 58110000 		.word	.LC152
 12952 182c 70180000 		.word	.LC232
 12953 1830 00000000 		.word	g_adc_meas
 12954 1834 90180000 		.word	.LC233
 12955 1838 A0180000 		.word	.LC234
 12956 183c B4180000 		.word	.LC235
 12957 1840 D0180000 		.word	.LC236
 12958 1844 F8180000 		.word	.LC237
 12959 1848 00000000 		.word	N_IMU_Connected
 12960 184c 0C190000 		.word	.LC238
 12961 1850 20190000 		.word	.LC239
 12962              	.L537:
1965:..\src/command_processing.c ****                 sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 12963              		.loc 1 1965 0
 12964 1854 D54A     		ldr	r2, .L558
 12965 1856 D7F89430 		ldr	r3, [r7, #148]
 12966 185a 1344     		add	r3, r3, r2
 12967 185c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12968 185e 07F11C00 		add	r0, r7, #28
 12969 1862 D7F89420 		ldr	r2, [r7, #148]
 12970 1866 D249     		ldr	r1, .L558+4
 12971 1868 FFF7FEFF 		bl	sprintf
1966:..\src/command_processing.c ****                 strcat(info_string, str);
 12972              		.loc 1 1966 0
 12973 186c 07F11C03 		add	r3, r7, #28
 12974 1870 1946     		mov	r1, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 300


 12975 1872 7869     		ldr	r0, [r7, #20]
 12976 1874 FFF7FEFF 		bl	strcat
1967:..\src/command_processing.c ****                 
1968:..\src/command_processing.c ****                 sprintf(str, "\tAccelerometers: ");
 12977              		.loc 1 1968 0
 12978 1878 07F11C03 		add	r3, r7, #28
 12979 187c CD4A     		ldr	r2, .L558+8
 12980 187e 1C46     		mov	r4, r3
 12981 1880 1546     		mov	r5, r2
 12982 1882 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 12983 1884 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 12984 1886 2B68     		ldr	r3, [r5]
 12985 1888 2380     		strh	r3, [r4]	@ movhi
1969:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][0]))
 12986              		.loc 1 1969 0
 12987 188a C84A     		ldr	r2, .L558
 12988 188c D7F89430 		ldr	r3, [r7, #148]
 12989 1890 1344     		add	r3, r3, r2
 12990 1892 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12991 1894 1946     		mov	r1, r3
 12992 1896 D7F88C20 		ldr	r2, [r7, #140]
 12993 189a 0B46     		mov	r3, r1
 12994 189c 9B00     		lsls	r3, r3, #2
 12995 189e 0B44     		add	r3, r3, r1
 12996 18a0 1344     		add	r3, r3, r2
 12997 18a2 03F20223 		addw	r3, r3, #514
 12998 18a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12999 18a8 002B     		cmp	r3, #0
 13000 18aa 0FD0     		beq	.L527
1970:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 13001              		.loc 1 1970 0
 13002 18ac 07F11C03 		add	r3, r7, #28
 13003 18b0 1846     		mov	r0, r3
 13004 18b2 FFF7FEFF 		bl	strlen
 13005 18b6 0346     		mov	r3, r0
 13006 18b8 1A46     		mov	r2, r3
 13007 18ba 07F11C03 		add	r3, r7, #28
 13008 18be 1344     		add	r3, r3, r2
 13009 18c0 BD4A     		ldr	r2, .L558+12
 13010 18c2 1068     		ldr	r0, [r2]	@ unaligned
 13011 18c4 1860     		str	r0, [r3]	@ unaligned
 13012 18c6 9288     		ldrh	r2, [r2, #4]	@ unaligned
 13013 18c8 9A80     		strh	r2, [r3, #4]	@ unaligned
 13014 18ca 0EE0     		b	.L528
 13015              	.L527:
1971:..\src/command_processing.c ****                 else
1972:..\src/command_processing.c ****                     strcat(str, "NO\r\n"); 
 13016              		.loc 1 1972 0
 13017 18cc 07F11C03 		add	r3, r7, #28
 13018 18d0 1846     		mov	r0, r3
 13019 18d2 FFF7FEFF 		bl	strlen
 13020 18d6 0346     		mov	r3, r0
 13021 18d8 1A46     		mov	r2, r3
 13022 18da 07F11C03 		add	r3, r7, #28
 13023 18de 1344     		add	r3, r3, r2
 13024 18e0 B64A     		ldr	r2, .L558+16
 13025 18e2 1068     		ldr	r0, [r2]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 301


 13026 18e4 1860     		str	r0, [r3]	@ unaligned
 13027 18e6 1279     		ldrb	r2, [r2, #4]
 13028 18e8 1A71     		strb	r2, [r3, #4]
 13029              	.L528:
1973:..\src/command_processing.c ****                 strcat(str, "\tGyroscopes: ");
 13030              		.loc 1 1973 0
 13031 18ea 07F11C03 		add	r3, r7, #28
 13032 18ee 1846     		mov	r0, r3
 13033 18f0 FFF7FEFF 		bl	strlen
 13034 18f4 0346     		mov	r3, r0
 13035 18f6 1A46     		mov	r2, r3
 13036 18f8 07F11C03 		add	r3, r7, #28
 13037 18fc 1344     		add	r3, r3, r2
 13038 18fe B04A     		ldr	r2, .L558+20
 13039 1900 1C46     		mov	r4, r3
 13040 1902 1346     		mov	r3, r2
 13041 1904 07CB     		ldmia	r3!, {r0, r1, r2}
 13042 1906 2060     		str	r0, [r4]	@ unaligned
 13043 1908 6160     		str	r1, [r4, #4]	@ unaligned
 13044 190a A260     		str	r2, [r4, #8]	@ unaligned
 13045 190c 1B88     		ldrh	r3, [r3]	@ unaligned
 13046 190e A381     		strh	r3, [r4, #12]	@ unaligned
1974:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][1]))
 13047              		.loc 1 1974 0
 13048 1910 A64A     		ldr	r2, .L558
 13049 1912 D7F89430 		ldr	r3, [r7, #148]
 13050 1916 1344     		add	r3, r3, r2
 13051 1918 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13052 191a 1946     		mov	r1, r3
 13053 191c D7F88C20 		ldr	r2, [r7, #140]
 13054 1920 0B46     		mov	r3, r1
 13055 1922 9B00     		lsls	r3, r3, #2
 13056 1924 0B44     		add	r3, r3, r1
 13057 1926 1344     		add	r3, r3, r2
 13058 1928 03F20323 		addw	r3, r3, #515
 13059 192c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13060 192e 002B     		cmp	r3, #0
 13061 1930 0FD0     		beq	.L529
1975:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 13062              		.loc 1 1975 0
 13063 1932 07F11C03 		add	r3, r7, #28
 13064 1936 1846     		mov	r0, r3
 13065 1938 FFF7FEFF 		bl	strlen
 13066 193c 0346     		mov	r3, r0
 13067 193e 1A46     		mov	r2, r3
 13068 1940 07F11C03 		add	r3, r7, #28
 13069 1944 1344     		add	r3, r3, r2
 13070 1946 9C4A     		ldr	r2, .L558+12
 13071 1948 1068     		ldr	r0, [r2]	@ unaligned
 13072 194a 1860     		str	r0, [r3]	@ unaligned
 13073 194c 9288     		ldrh	r2, [r2, #4]	@ unaligned
 13074 194e 9A80     		strh	r2, [r3, #4]	@ unaligned
 13075 1950 0EE0     		b	.L530
 13076              	.L529:
1976:..\src/command_processing.c ****                 else
1977:..\src/command_processing.c ****                     strcat(str, "NO\r\n"); 
 13077              		.loc 1 1977 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 302


 13078 1952 07F11C03 		add	r3, r7, #28
 13079 1956 1846     		mov	r0, r3
 13080 1958 FFF7FEFF 		bl	strlen
 13081 195c 0346     		mov	r3, r0
 13082 195e 1A46     		mov	r2, r3
 13083 1960 07F11C03 		add	r3, r7, #28
 13084 1964 1344     		add	r3, r3, r2
 13085 1966 954A     		ldr	r2, .L558+16
 13086 1968 1068     		ldr	r0, [r2]	@ unaligned
 13087 196a 1860     		str	r0, [r3]	@ unaligned
 13088 196c 1279     		ldrb	r2, [r2, #4]
 13089 196e 1A71     		strb	r2, [r3, #4]
 13090              	.L530:
1978:..\src/command_processing.c ****                 strcat(str, "\tMagnetometers: ");
 13091              		.loc 1 1978 0
 13092 1970 07F11C03 		add	r3, r7, #28
 13093 1974 1846     		mov	r0, r3
 13094 1976 FFF7FEFF 		bl	strlen
 13095 197a 0346     		mov	r3, r0
 13096 197c 1A46     		mov	r2, r3
 13097 197e 07F11C03 		add	r3, r7, #28
 13098 1982 1344     		add	r3, r3, r2
 13099 1984 8F4A     		ldr	r2, .L558+24
 13100 1986 1D46     		mov	r5, r3
 13101 1988 1446     		mov	r4, r2
 13102 198a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 13103 198c 2860     		str	r0, [r5]	@ unaligned
 13104 198e 6960     		str	r1, [r5, #4]	@ unaligned
 13105 1990 AA60     		str	r2, [r5, #8]	@ unaligned
 13106 1992 EB60     		str	r3, [r5, #12]	@ unaligned
 13107 1994 2378     		ldrb	r3, [r4]
 13108 1996 2B74     		strb	r3, [r5, #16]
1979:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][2]))
 13109              		.loc 1 1979 0
 13110 1998 844A     		ldr	r2, .L558
 13111 199a D7F89430 		ldr	r3, [r7, #148]
 13112 199e 1344     		add	r3, r3, r2
 13113 19a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13114 19a2 1946     		mov	r1, r3
 13115 19a4 D7F88C20 		ldr	r2, [r7, #140]
 13116 19a8 0B46     		mov	r3, r1
 13117 19aa 9B00     		lsls	r3, r3, #2
 13118 19ac 0B44     		add	r3, r3, r1
 13119 19ae 1344     		add	r3, r3, r2
 13120 19b0 03F50173 		add	r3, r3, #516
 13121 19b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13122 19b6 002B     		cmp	r3, #0
 13123 19b8 0FD0     		beq	.L531
1980:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 13124              		.loc 1 1980 0
 13125 19ba 07F11C03 		add	r3, r7, #28
 13126 19be 1846     		mov	r0, r3
 13127 19c0 FFF7FEFF 		bl	strlen
 13128 19c4 0346     		mov	r3, r0
 13129 19c6 1A46     		mov	r2, r3
 13130 19c8 07F11C03 		add	r3, r7, #28
 13131 19cc 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 303


 13132 19ce 7A4A     		ldr	r2, .L558+12
 13133 19d0 1068     		ldr	r0, [r2]	@ unaligned
 13134 19d2 1860     		str	r0, [r3]	@ unaligned
 13135 19d4 9288     		ldrh	r2, [r2, #4]	@ unaligned
 13136 19d6 9A80     		strh	r2, [r3, #4]	@ unaligned
 13137 19d8 0EE0     		b	.L532
 13138              	.L531:
1981:..\src/command_processing.c ****                 else
1982:..\src/command_processing.c ****                     strcat(str, "NO\r\n");
 13139              		.loc 1 1982 0
 13140 19da 07F11C03 		add	r3, r7, #28
 13141 19de 1846     		mov	r0, r3
 13142 19e0 FFF7FEFF 		bl	strlen
 13143 19e4 0346     		mov	r3, r0
 13144 19e6 1A46     		mov	r2, r3
 13145 19e8 07F11C03 		add	r3, r7, #28
 13146 19ec 1344     		add	r3, r3, r2
 13147 19ee 734A     		ldr	r2, .L558+16
 13148 19f0 1068     		ldr	r0, [r2]	@ unaligned
 13149 19f2 1860     		str	r0, [r3]	@ unaligned
 13150 19f4 1279     		ldrb	r2, [r2, #4]
 13151 19f6 1A71     		strb	r2, [r3, #4]
 13152              	.L532:
1983:..\src/command_processing.c ****                 strcat(str, "\tQuaternion: ");                
 13153              		.loc 1 1983 0
 13154 19f8 07F11C03 		add	r3, r7, #28
 13155 19fc 1846     		mov	r0, r3
 13156 19fe FFF7FEFF 		bl	strlen
 13157 1a02 0346     		mov	r3, r0
 13158 1a04 1A46     		mov	r2, r3
 13159 1a06 07F11C03 		add	r3, r7, #28
 13160 1a0a 1344     		add	r3, r3, r2
 13161 1a0c 6E4A     		ldr	r2, .L558+28
 13162 1a0e 1C46     		mov	r4, r3
 13163 1a10 1346     		mov	r3, r2
 13164 1a12 07CB     		ldmia	r3!, {r0, r1, r2}
 13165 1a14 2060     		str	r0, [r4]	@ unaligned
 13166 1a16 6160     		str	r1, [r4, #4]	@ unaligned
 13167 1a18 A260     		str	r2, [r4, #8]	@ unaligned
 13168 1a1a 1B88     		ldrh	r3, [r3]	@ unaligned
 13169 1a1c A381     		strh	r3, [r4, #12]	@ unaligned
1984:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][3]))
 13170              		.loc 1 1984 0
 13171 1a1e 634A     		ldr	r2, .L558
 13172 1a20 D7F89430 		ldr	r3, [r7, #148]
 13173 1a24 1344     		add	r3, r3, r2
 13174 1a26 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13175 1a28 1946     		mov	r1, r3
 13176 1a2a D7F88C20 		ldr	r2, [r7, #140]
 13177 1a2e 0B46     		mov	r3, r1
 13178 1a30 9B00     		lsls	r3, r3, #2
 13179 1a32 0B44     		add	r3, r3, r1
 13180 1a34 1344     		add	r3, r3, r2
 13181 1a36 03F20523 		addw	r3, r3, #517
 13182 1a3a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13183 1a3c 002B     		cmp	r3, #0
 13184 1a3e 0FD0     		beq	.L533
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 304


1985:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 13185              		.loc 1 1985 0
 13186 1a40 07F11C03 		add	r3, r7, #28
 13187 1a44 1846     		mov	r0, r3
 13188 1a46 FFF7FEFF 		bl	strlen
 13189 1a4a 0346     		mov	r3, r0
 13190 1a4c 1A46     		mov	r2, r3
 13191 1a4e 07F11C03 		add	r3, r7, #28
 13192 1a52 1344     		add	r3, r3, r2
 13193 1a54 584A     		ldr	r2, .L558+12
 13194 1a56 1068     		ldr	r0, [r2]	@ unaligned
 13195 1a58 1860     		str	r0, [r3]	@ unaligned
 13196 1a5a 9288     		ldrh	r2, [r2, #4]	@ unaligned
 13197 1a5c 9A80     		strh	r2, [r3, #4]	@ unaligned
 13198 1a5e 0EE0     		b	.L534
 13199              	.L533:
1986:..\src/command_processing.c ****                 else
1987:..\src/command_processing.c ****                     strcat(str, "NO\r\n");
 13200              		.loc 1 1987 0
 13201 1a60 07F11C03 		add	r3, r7, #28
 13202 1a64 1846     		mov	r0, r3
 13203 1a66 FFF7FEFF 		bl	strlen
 13204 1a6a 0346     		mov	r3, r0
 13205 1a6c 1A46     		mov	r2, r3
 13206 1a6e 07F11C03 		add	r3, r7, #28
 13207 1a72 1344     		add	r3, r3, r2
 13208 1a74 514A     		ldr	r2, .L558+16
 13209 1a76 1068     		ldr	r0, [r2]	@ unaligned
 13210 1a78 1860     		str	r0, [r3]	@ unaligned
 13211 1a7a 1279     		ldrb	r2, [r2, #4]
 13212 1a7c 1A71     		strb	r2, [r3, #4]
 13213              	.L534:
1988:..\src/command_processing.c ****                 strcat(str, "\tTemperature: ");
 13214              		.loc 1 1988 0
 13215 1a7e 07F11C03 		add	r3, r7, #28
 13216 1a82 1846     		mov	r0, r3
 13217 1a84 FFF7FEFF 		bl	strlen
 13218 1a88 0346     		mov	r3, r0
 13219 1a8a 1A46     		mov	r2, r3
 13220 1a8c 07F11C03 		add	r3, r7, #28
 13221 1a90 1344     		add	r3, r3, r2
 13222 1a92 4E4A     		ldr	r2, .L558+32
 13223 1a94 1C46     		mov	r4, r3
 13224 1a96 1346     		mov	r3, r2
 13225 1a98 07CB     		ldmia	r3!, {r0, r1, r2}
 13226 1a9a 2060     		str	r0, [r4]	@ unaligned
 13227 1a9c 6160     		str	r1, [r4, #4]	@ unaligned
 13228 1a9e A260     		str	r2, [r4, #8]	@ unaligned
 13229 1aa0 1A88     		ldrh	r2, [r3]	@ unaligned
 13230 1aa2 9B78     		ldrb	r3, [r3, #2]
 13231 1aa4 A281     		strh	r2, [r4, #12]	@ unaligned
 13232 1aa6 A373     		strb	r3, [r4, #14]
1989:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][4]))
 13233              		.loc 1 1989 0
 13234 1aa8 404A     		ldr	r2, .L558
 13235 1aaa D7F89430 		ldr	r3, [r7, #148]
 13236 1aae 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 305


 13237 1ab0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13238 1ab2 1946     		mov	r1, r3
 13239 1ab4 D7F88C20 		ldr	r2, [r7, #140]
 13240 1ab8 0B46     		mov	r3, r1
 13241 1aba 9B00     		lsls	r3, r3, #2
 13242 1abc 0B44     		add	r3, r3, r1
 13243 1abe 1344     		add	r3, r3, r2
 13244 1ac0 03F20623 		addw	r3, r3, #518
 13245 1ac4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13246 1ac6 002B     		cmp	r3, #0
 13247 1ac8 0FD0     		beq	.L535
1990:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 13248              		.loc 1 1990 0
 13249 1aca 07F11C03 		add	r3, r7, #28
 13250 1ace 1846     		mov	r0, r3
 13251 1ad0 FFF7FEFF 		bl	strlen
 13252 1ad4 0346     		mov	r3, r0
 13253 1ad6 1A46     		mov	r2, r3
 13254 1ad8 07F11C03 		add	r3, r7, #28
 13255 1adc 1344     		add	r3, r3, r2
 13256 1ade 364A     		ldr	r2, .L558+12
 13257 1ae0 1068     		ldr	r0, [r2]	@ unaligned
 13258 1ae2 1860     		str	r0, [r3]	@ unaligned
 13259 1ae4 9288     		ldrh	r2, [r2, #4]	@ unaligned
 13260 1ae6 9A80     		strh	r2, [r3, #4]	@ unaligned
 13261 1ae8 0EE0     		b	.L536
 13262              	.L535:
1991:..\src/command_processing.c ****                 else
1992:..\src/command_processing.c ****                     strcat(str, "NO\r\n");
 13263              		.loc 1 1992 0
 13264 1aea 07F11C03 		add	r3, r7, #28
 13265 1aee 1846     		mov	r0, r3
 13266 1af0 FFF7FEFF 		bl	strlen
 13267 1af4 0346     		mov	r3, r0
 13268 1af6 1A46     		mov	r2, r3
 13269 1af8 07F11C03 		add	r3, r7, #28
 13270 1afc 1344     		add	r3, r3, r2
 13271 1afe 2F4A     		ldr	r2, .L558+16
 13272 1b00 1068     		ldr	r0, [r2]	@ unaligned
 13273 1b02 1860     		str	r0, [r3]	@ unaligned
 13274 1b04 1279     		ldrb	r2, [r2, #4]
 13275 1b06 1A71     		strb	r2, [r3, #4]
 13276              	.L536:
1993:..\src/command_processing.c ****                      
1994:..\src/command_processing.c ****                 strcat(info_string, str);
 13277              		.loc 1 1994 0 discriminator 2
 13278 1b08 07F11C03 		add	r3, r7, #28
 13279 1b0c 1946     		mov	r1, r3
 13280 1b0e 7869     		ldr	r0, [r7, #20]
 13281 1b10 FFF7FEFF 		bl	strcat
1964:..\src/command_processing.c ****                 sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 13282              		.loc 1 1964 0 discriminator 2
 13283 1b14 D7F89430 		ldr	r3, [r7, #148]
 13284 1b18 0133     		adds	r3, r3, #1
 13285 1b1a C7F89430 		str	r3, [r7, #148]
 13286              	.L526:
1964:..\src/command_processing.c ****                 sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 306


 13287              		.loc 1 1964 0 is_stmt 0 discriminator 1
 13288 1b1e 2C4B     		ldr	r3, .L558+36
 13289 1b20 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13290 1b22 1A46     		mov	r2, r3
 13291 1b24 D7F89430 		ldr	r3, [r7, #148]
 13292 1b28 9A42     		cmp	r2, r3
 13293 1b2a 3FF793AE 		bgt	.L537
1995:..\src/command_processing.c ****             }       
1996:..\src/command_processing.c ****             
1997:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 13294              		.loc 1 1997 0 is_stmt 1
 13295 1b2e 7869     		ldr	r0, [r7, #20]
 13296 1b30 FFF7FEFF 		bl	strlen
 13297 1b34 0346     		mov	r3, r0
 13298 1b36 1A46     		mov	r2, r3
 13299 1b38 7B69     		ldr	r3, [r7, #20]
 13300 1b3a 1344     		add	r3, r3, r2
 13301 1b3c 254A     		ldr	r2, .L558+40
 13302 1b3e 1188     		ldrh	r1, [r2]	@ unaligned
 13303 1b40 9278     		ldrb	r2, [r2, #2]
 13304 1b42 1980     		strh	r1, [r3]	@ unaligned
 13305 1b44 9A70     		strb	r2, [r3, #2]
1998:..\src/command_processing.c ****           
1999:..\src/command_processing.c ****             IMU_reading_info(info_string);
 13306              		.loc 1 1999 0
 13307 1b46 7869     		ldr	r0, [r7, #20]
 13308 1b48 FFF7FEFF 		bl	IMU_reading_info
 13309              	.L525:
2000:..\src/command_processing.c ****         }
2001:..\src/command_processing.c ****         
2002:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 13310              		.loc 1 2002 0
 13311 1b4c 7869     		ldr	r0, [r7, #20]
 13312 1b4e FFF7FEFF 		bl	strlen
 13313 1b52 0346     		mov	r3, r0
 13314 1b54 1A46     		mov	r2, r3
 13315 1b56 7B69     		ldr	r3, [r7, #20]
 13316 1b58 1344     		add	r3, r3, r2
 13317 1b5a 1E4A     		ldr	r2, .L558+40
 13318 1b5c 1188     		ldrh	r1, [r2]	@ unaligned
 13319 1b5e 9278     		ldrb	r2, [r2, #2]
 13320 1b60 1980     		strh	r1, [r3]	@ unaligned
 13321 1b62 9A70     		strb	r2, [r3, #2]
2003:..\src/command_processing.c **** 
2004:..\src/command_processing.c **** #ifdef GENERIC_FW   
2005:..\src/command_processing.c ****         int j;
2006:..\src/command_processing.c ****         strcat(info_string, "ENCODER CONFIGURATION\r\n");
2007:..\src/command_processing.c ****         for (i = 0; i < N_ENCODER_LINE_MAX; i++) {
2008:..\src/command_processing.c ****             sprintf(str, "Encoder Connected Line %d: %d", (int) i, (int) N_Encoder_Line_Connected[i
2009:..\src/command_processing.c ****             strcat(info_string, str);
2010:..\src/command_processing.c ****             if (MEM_P->dev.right_left == i) {
2011:..\src/command_processing.c ****                 sprintf(str, " [%s HAND main encoder line]", (MEM_P->dev.right_left?"LEFT":"RIGHT")
2012:..\src/command_processing.c ****                 strcat(info_string, str);
2013:..\src/command_processing.c ****             }
2014:..\src/command_processing.c ****             strcat(info_string, "\r\n");
2015:..\src/command_processing.c ****             if (N_Encoder_Line_Connected[i] > 0) {
2016:..\src/command_processing.c ****                 strcat(info_string, "Raw value [status]:\r\n");
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 307


2017:..\src/command_processing.c ****                 for (j = 0; j < N_Encoder_Line_Connected[i]; j++) {
2018:..\src/command_processing.c ****                     sprintf(str, "%d\t[%s]\r\n", (uint16) Encoder_Value[i][j], (Encoder_Check[i][j]
2019:..\src/command_processing.c ****                     strcat(info_string, str);
2020:..\src/command_processing.c ****                 }
2021:..\src/command_processing.c ****                 strcat(info_string, "\r\n");
2022:..\src/command_processing.c ****             }
2023:..\src/command_processing.c ****         }
2024:..\src/command_processing.c **** #endif   
2025:..\src/command_processing.c ****         
2026:..\src/command_processing.c **** #ifdef MASTER_FW
2027:..\src/command_processing.c ****         if (MEM_P->MS.slave_comm_active)
2028:..\src/command_processing.c ****             strcat(info_string, "Slave communication active: YES\r\n");
2029:..\src/command_processing.c ****         else
2030:..\src/command_processing.c ****             strcat(info_string, "Slave communication active: NO\r\n");
2031:..\src/command_processing.c **** 
2032:..\src/command_processing.c ****         sprintf(str, "Slave ID: %d\r\n", (int)MEM_P->MS.slave_ID);
2033:..\src/command_processing.c ****         strcat(info_string, str);
2034:..\src/command_processing.c **** #endif
2035:..\src/command_processing.c **** 
2036:..\src/command_processing.c ****         sprintf(str, "Last FW cycle time: %u us\r\n", (uint16)timer_value0 - (uint16)timer_value);
 13322              		.loc 1 2036 0
 13323 1b64 1C4B     		ldr	r3, .L558+44
 13324 1b66 1B88     		ldrh	r3, [r3]
 13325 1b68 1A46     		mov	r2, r3
 13326 1b6a 1C4B     		ldr	r3, .L558+48
 13327 1b6c 1B88     		ldrh	r3, [r3]
 13328 1b6e D21A     		subs	r2, r2, r3
 13329 1b70 07F11C03 		add	r3, r7, #28
 13330 1b74 1A49     		ldr	r1, .L558+52
 13331 1b76 1846     		mov	r0, r3
 13332 1b78 FFF7FEFF 		bl	sprintf
2037:..\src/command_processing.c ****         strcat(info_string, str);
 13333              		.loc 1 2037 0
 13334 1b7c 07F11C03 		add	r3, r7, #28
 13335 1b80 1946     		mov	r1, r3
 13336 1b82 7869     		ldr	r0, [r7, #20]
 13337 1b84 FFF7FEFF 		bl	strcat
2038:..\src/command_processing.c ****   
2039:..\src/command_processing.c ****         strcat(info_string, "\r\n\0");      // End of info_string
 13338              		.loc 1 2039 0
 13339 1b88 7869     		ldr	r0, [r7, #20]
 13340 1b8a FFF7FEFF 		bl	strlen
 13341 1b8e 0346     		mov	r3, r0
 13342 1b90 1A46     		mov	r2, r3
 13343 1b92 7B69     		ldr	r3, [r7, #20]
 13344 1b94 1344     		add	r3, r3, r2
 13345 1b96 134A     		ldr	r2, .L558+56
 13346 1b98 1188     		ldrh	r1, [r2]	@ unaligned
 13347 1b9a 9278     		ldrb	r2, [r2, #2]
 13348 1b9c 1980     		strh	r1, [r3]	@ unaligned
 13349 1b9e 9A70     		strb	r2, [r3, #2]
 13350              	.L539:
 13351              	.LBE23:
2040:..\src/command_processing.c ****     }
2041:..\src/command_processing.c **** }
 13352              		.loc 1 2041 0
 13353 1ba0 00BF     		nop
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 308


 13354 1ba2 9C37     		adds	r7, r7, #156
 13355              		.cfi_def_cfa_offset 36
 13356 1ba4 BD46     		mov	sp, r7
 13357              		.cfi_def_cfa_register 13
 13358              		@ sp needed
 13359 1ba6 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 13360              	.L559:
 13361 1baa 00BF     		.align	2
 13362              	.L558:
 13363 1bac 00000000 		.word	IMU_connected
 13364 1bb0 38190000 		.word	.LC240
 13365 1bb4 4C190000 		.word	.LC241
 13366 1bb8 1C130000 		.word	.LC175
 13367 1bbc 24130000 		.word	.LC176
 13368 1bc0 60190000 		.word	.LC242
 13369 1bc4 70190000 		.word	.LC243
 13370 1bc8 84190000 		.word	.LC244
 13371 1bcc 94190000 		.word	.LC245
 13372 1bd0 00000000 		.word	N_IMU_Connected
 13373 1bd4 58110000 		.word	.LC152
 13374 1bd8 00000000 		.word	timer_value0
 13375 1bdc 00000000 		.word	timer_value
 13376 1be0 A4190000 		.word	.LC246
 13377 1be4 C0190000 		.word	.LC247
 13378              		.cfi_endproc
 13379              	.LFE71:
 13380              		.size	prepare_generic_info, .-prepare_generic_info
 13381              		.section	.rodata
 13382              		.align	2
 13383              	.LC248:
 13384 19c4 0D0A5553 		.ascii	"\015\012USAGE STATISTICS\015\012\000"
 13384      41474520 
 13384      53544154 
 13384      49535449 
 13384      43530D0A 
 13385 19d9 000000   		.align	2
 13386              	.LC249:
 13387 19dc 44617465 		.ascii	"Date of HW maintenance: %02d/%02d/20%02d\015\012\000"
 13387      206F6620 
 13387      4857206D 
 13387      61696E74 
 13387      656E616E 
 13388 1a07 00       		.align	2
 13389              	.LC250:
 13390 1a08 44617465 		.ascii	"Date of usage stats period begin: %02d/%02d/20%02d\015"
 13390      206F6620 
 13390      75736167 
 13390      65207374 
 13390      61747320 
 13391 1a3b 0A00     		.ascii	"\012\000"
 13392 1a3d 000000   		.align	2
 13393              	.LC251:
 13394 1a40 4C617374 		.ascii	"Last checked Time: %02d/%02d/20%02d %02d:%02d:%02d\015"
 13394      20636865 
 13394      636B6564 
 13394      2054696D 
 13394      653A2025 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 309


 13395 1a73 0A00     		.ascii	"\012\000"
 13396 1a75 000000   		.align	2
 13397              	.LC252:
 13398 1a78 506F7369 		.ascii	"Positions histogram (ticks):\015\012\000"
 13398      74696F6E 
 13398      73206869 
 13398      73746F67 
 13398      72616D20 
 13399 1a97 00       		.align	2
 13400              	.LC253:
 13401 1a98 42696E20 		.ascii	"Bin %d [%d-%d]: %lu\015\012\000"
 13401      2564205B 
 13401      25642D25 
 13401      645D3A20 
 13401      256C750D 
 13402 1aae 0000     		.align	2
 13403              	.LC254:
 13404 1ab0 43757272 		.ascii	"Current histogram (mA):\015\012\000"
 13404      656E7420 
 13404      68697374 
 13404      6F677261 
 13404      6D20286D 
 13405 1aca 0000     		.align	2
 13406              	.LC255:
 13407 1acc 54687265 		.ascii	"Threshold %d [%d-%d]: %lu\015\012\000"
 13407      73686F6C 
 13407      64202564 
 13407      205B2564 
 13407      2D25645D 
 13408              		.align	2
 13409              	.LC256:
 13410 1ae8 4D6F7469 		.ascii	"Motions through EMG counter: %lu, %lu\000"
 13410      6F6E7320 
 13410      7468726F 
 13410      75676820 
 13410      454D4720 
 13411 1b0e 0000     		.align	2
 13412              	.LC257:
 13413 1b10 52657374 		.ascii	"Rest position occurrences: %lu\000"
 13413      20706F73 
 13413      6974696F 
 13413      6E206F63 
 13413      63757272 
 13414 1b2f 00       		.align	2
 13415              	.LC258:
 13416 1b30 416E676C 		.ascii	"Angle total displacement (ticks): %lu\000"
 13416      6520746F 
 13416      74616C20 
 13416      64697370 
 13416      6C616365 
 13417 1b56 0000     		.align	2
 13418              	.LC259:
 13419 1b58 546F7461 		.ascii	"Total power on time (sec): %lu\000"
 13419      6C20706F 
 13419      77657220 
 13419      6F6E2074 
 13419      696D6520 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 310


 13420 1b77 00       		.align	2
 13421              	.LC260:
 13422 1b78 546F7461 		.ascii	"Total rest position time (sec): %lu\000"
 13422      6C207265 
 13422      73742070 
 13422      6F736974 
 13422      696F6E20 
 13423              		.section	.text.prepare_counter_info,"ax",%progbits
 13424              		.align	2
 13425              		.global	prepare_counter_info
 13426              		.thumb
 13427              		.thumb_func
 13428              		.type	prepare_counter_info, %function
 13429              	prepare_counter_info:
 13430              	.LFB72:
2042:..\src/command_processing.c **** 
2043:..\src/command_processing.c **** //==============================================================================
2044:..\src/command_processing.c **** //                                                 PREPARE GENERIC COUNTERS INFO
2045:..\src/command_processing.c **** //==============================================================================
2046:..\src/command_processing.c **** 
2047:..\src/command_processing.c **** void prepare_counter_info(char *info_string)
2048:..\src/command_processing.c **** {
 13431              		.loc 1 2048 0
 13432              		.cfi_startproc
 13433              		@ args = 0, pretend = 0, frame = 432
 13434              		@ frame_needed = 1, uses_anonymous_args = 0
 13435 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 13436              		.cfi_def_cfa_offset 20
 13437              		.cfi_offset 4, -20
 13438              		.cfi_offset 5, -16
 13439              		.cfi_offset 6, -12
 13440              		.cfi_offset 7, -8
 13441              		.cfi_offset 14, -4
 13442 0002 F1B0     		sub	sp, sp, #452
 13443              		.cfi_def_cfa_offset 472
 13444 0004 04AF     		add	r7, sp, #16
 13445              		.cfi_def_cfa 7, 456
 13446 0006 3B1D     		adds	r3, r7, #4
 13447 0008 1860     		str	r0, [r3]
2049:..\src/command_processing.c ****     char str[100];  
2050:..\src/command_processing.c ****     int i;
2051:..\src/command_processing.c ****     int step;
2052:..\src/command_processing.c **** 
2053:..\src/command_processing.c ****     struct st_eeprom* MEM_P = &g_mem;    
 13448              		.loc 1 2053 0
 13449 000a 964B     		ldr	r3, .L566
 13450 000c C7F8A831 		str	r3, [r7, #424]
2054:..\src/command_processing.c ****     struct st_motor* MOT = &(MEM_P->motor[0]);      // Default motor
 13451              		.loc 1 2054 0
 13452 0010 D7F8A831 		ldr	r3, [r7, #424]
 13453 0014 B033     		adds	r3, r3, #176
 13454 0016 C7F8A431 		str	r3, [r7, #420]
2055:..\src/command_processing.c ****     uint8 ENC_L = MOT->encoder_line;                // Associated encoder line
 13455              		.loc 1 2055 0
 13456 001a D7F8A431 		ldr	r3, [r7, #420]
 13457 001e 93F86030 		ldrb	r3, [r3, #96]
 13458 0022 87F8A331 		strb	r3, [r7, #419]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 311


2056:..\src/command_processing.c ****     
2057:..\src/command_processing.c ****     strcpy(info_string, "");
 13459              		.loc 1 2057 0
 13460 0026 3B1D     		adds	r3, r7, #4
 13461 0028 1B68     		ldr	r3, [r3]
 13462 002a 0022     		movs	r2, #0
 13463 002c 1A70     		strb	r2, [r3]
2058:..\src/command_processing.c ****     
2059:..\src/command_processing.c ****     strcat(info_string, "\r\nUSAGE STATISTICS\r\n");
 13464              		.loc 1 2059 0
 13465 002e 3B1D     		adds	r3, r7, #4
 13466 0030 1868     		ldr	r0, [r3]
 13467 0032 FFF7FEFF 		bl	strlen
 13468 0036 0346     		mov	r3, r0
 13469 0038 1A46     		mov	r2, r3
 13470 003a 3B1D     		adds	r3, r7, #4
 13471 003c 1B68     		ldr	r3, [r3]
 13472 003e 1344     		add	r3, r3, r2
 13473 0040 894A     		ldr	r2, .L566+4
 13474 0042 1D46     		mov	r5, r3
 13475 0044 1446     		mov	r4, r2
 13476 0046 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 13477 0048 2860     		str	r0, [r5]	@ unaligned
 13478 004a 6960     		str	r1, [r5, #4]	@ unaligned
 13479 004c AA60     		str	r2, [r5, #8]	@ unaligned
 13480 004e EB60     		str	r3, [r5, #12]	@ unaligned
 13481 0050 2068     		ldr	r0, [r4]	@ unaligned
 13482 0052 2861     		str	r0, [r5, #16]	@ unaligned
 13483 0054 2379     		ldrb	r3, [r4, #4]
 13484 0056 2B75     		strb	r3, [r5, #20]
2060:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 13485              		.loc 1 2060 0
 13486 0058 3B1D     		adds	r3, r7, #4
 13487 005a 1868     		ldr	r0, [r3]
 13488 005c FFF7FEFF 		bl	strlen
 13489 0060 0346     		mov	r3, r0
 13490 0062 1A46     		mov	r2, r3
 13491 0064 3B1D     		adds	r3, r7, #4
 13492 0066 1B68     		ldr	r3, [r3]
 13493 0068 1344     		add	r3, r3, r2
 13494 006a 804A     		ldr	r2, .L566+8
 13495 006c 1188     		ldrh	r1, [r2]	@ unaligned
 13496 006e 9278     		ldrb	r2, [r2, #2]
 13497 0070 1980     		strh	r1, [r3]	@ unaligned
 13498 0072 9A70     		strb	r2, [r3, #2]
2061:..\src/command_processing.c ****     
2062:..\src/command_processing.c ****     sprintf(str, "Date of HW maintenance: %02d/%02d/20%02d\r\n", (int)MEM_P->dev.hw_maint_date[0], 
 13499              		.loc 1 2062 0
 13500 0074 D7F8A831 		ldr	r3, [r7, #424]
 13501 0078 93F8A130 		ldrb	r3, [r3, #161]	@ zero_extendqisi2
 13502 007c 1A46     		mov	r2, r3
 13503 007e D7F8A831 		ldr	r3, [r7, #424]
 13504 0082 93F8A230 		ldrb	r3, [r3, #162]	@ zero_extendqisi2
 13505 0086 1946     		mov	r1, r3
 13506 0088 D7F8A831 		ldr	r3, [r7, #424]
 13507 008c 93F8A330 		ldrb	r3, [r3, #163]	@ zero_extendqisi2
 13508 0090 07F59C70 		add	r0, r7, #312
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 312


 13509 0094 0093     		str	r3, [sp]
 13510 0096 0B46     		mov	r3, r1
 13511 0098 7549     		ldr	r1, .L566+12
 13512 009a FFF7FEFF 		bl	sprintf
2063:..\src/command_processing.c ****     strcat(info_string, str);
 13513              		.loc 1 2063 0
 13514 009e 07F59C72 		add	r2, r7, #312
 13515 00a2 3B1D     		adds	r3, r7, #4
 13516 00a4 1146     		mov	r1, r2
 13517 00a6 1868     		ldr	r0, [r3]
 13518 00a8 FFF7FEFF 		bl	strcat
2064:..\src/command_processing.c ****     
2065:..\src/command_processing.c ****     sprintf(str, "Date of usage stats period begin: %02d/%02d/20%02d\r\n", (int)MEM_P->dev.stats_pe
 13519              		.loc 1 2065 0
 13520 00ac D7F8A831 		ldr	r3, [r7, #424]
 13521 00b0 93F8A430 		ldrb	r3, [r3, #164]	@ zero_extendqisi2
 13522 00b4 1A46     		mov	r2, r3
 13523 00b6 D7F8A831 		ldr	r3, [r7, #424]
 13524 00ba 93F8A530 		ldrb	r3, [r3, #165]	@ zero_extendqisi2
 13525 00be 1946     		mov	r1, r3
 13526 00c0 D7F8A831 		ldr	r3, [r7, #424]
 13527 00c4 93F8A630 		ldrb	r3, [r3, #166]	@ zero_extendqisi2
 13528 00c8 07F59C70 		add	r0, r7, #312
 13529 00cc 0093     		str	r3, [sp]
 13530 00ce 0B46     		mov	r3, r1
 13531 00d0 6849     		ldr	r1, .L566+16
 13532 00d2 FFF7FEFF 		bl	sprintf
2066:..\src/command_processing.c ****     strcat(info_string, str);
 13533              		.loc 1 2066 0
 13534 00d6 07F59C72 		add	r2, r7, #312
 13535 00da 3B1D     		adds	r3, r7, #4
 13536 00dc 1146     		mov	r1, r2
 13537 00de 1868     		ldr	r0, [r3]
 13538 00e0 FFF7FEFF 		bl	strcat
2067:..\src/command_processing.c ****             
2068:..\src/command_processing.c ****     sprintf(str, "Last checked Time: %02d/%02d/20%02d %02d:%02d:%02d\r\n", (int)MEM_P->exp.curr_tim
 13539              		.loc 1 2068 0
 13540 00e4 D7F8A831 		ldr	r3, [r7, #424]
 13541 00e8 93F82032 		ldrb	r3, [r3, #544]	@ zero_extendqisi2
 13542 00ec 1D46     		mov	r5, r3
 13543 00ee D7F8A831 		ldr	r3, [r7, #424]
 13544 00f2 93F82132 		ldrb	r3, [r3, #545]	@ zero_extendqisi2
 13545 00f6 1E46     		mov	r6, r3
 13546 00f8 D7F8A831 		ldr	r3, [r7, #424]
 13547 00fc 93F82232 		ldrb	r3, [r3, #546]	@ zero_extendqisi2
 13548 0100 1A46     		mov	r2, r3
 13549 0102 D7F8A831 		ldr	r3, [r7, #424]
 13550 0106 93F82332 		ldrb	r3, [r3, #547]	@ zero_extendqisi2
 13551 010a 1946     		mov	r1, r3
 13552 010c D7F8A831 		ldr	r3, [r7, #424]
 13553 0110 93F82432 		ldrb	r3, [r3, #548]	@ zero_extendqisi2
 13554 0114 1C46     		mov	r4, r3
 13555 0116 D7F8A831 		ldr	r3, [r7, #424]
 13556 011a 93F82532 		ldrb	r3, [r3, #549]	@ zero_extendqisi2
 13557 011e 07F59C70 		add	r0, r7, #312
 13558 0122 0393     		str	r3, [sp, #12]
 13559 0124 0294     		str	r4, [sp, #8]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 313


 13560 0126 0191     		str	r1, [sp, #4]
 13561 0128 0092     		str	r2, [sp]
 13562 012a 3346     		mov	r3, r6
 13563 012c 2A46     		mov	r2, r5
 13564 012e 5249     		ldr	r1, .L566+20
 13565 0130 FFF7FEFF 		bl	sprintf
2069:..\src/command_processing.c ****     strcat(info_string, str);
 13566              		.loc 1 2069 0
 13567 0134 07F59C72 		add	r2, r7, #312
 13568 0138 3B1D     		adds	r3, r7, #4
 13569 013a 1146     		mov	r1, r2
 13570 013c 1868     		ldr	r0, [r3]
 13571 013e FFF7FEFF 		bl	strcat
2070:..\src/command_processing.c ****     
2071:..\src/command_processing.c ****     sprintf(str, "Positions histogram (ticks):\r\n");
 13572              		.loc 1 2071 0
 13573 0142 07F59C73 		add	r3, r7, #312
 13574 0146 4D4A     		ldr	r2, .L566+24
 13575 0148 1C46     		mov	r4, r3
 13576 014a 1546     		mov	r5, r2
 13577 014c 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 13578 014e 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 13579 0150 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 13580 0154 07C4     		stmia	r4!, {r0, r1, r2}
 13581 0156 2380     		strh	r3, [r4]	@ movhi
 13582 0158 0234     		adds	r4, r4, #2
 13583 015a 1B0C     		lsrs	r3, r3, #16
 13584 015c 2370     		strb	r3, [r4]
2072:..\src/command_processing.c ****     strcat(info_string, str);
 13585              		.loc 1 2072 0
 13586 015e 07F59C72 		add	r2, r7, #312
 13587 0162 3B1D     		adds	r3, r7, #4
 13588 0164 1146     		mov	r1, r2
 13589 0166 1868     		ldr	r0, [r3]
 13590 0168 FFF7FEFF 		bl	strcat
2073:..\src/command_processing.c ****     step = ( (int)(MOT->pos_lim_sup >> MEM_P->enc[ENC_L].res[0]) / 10);
 13591              		.loc 1 2073 0
 13592 016c D7F8A431 		ldr	r3, [r7, #420]
 13593 0170 996B     		ldr	r1, [r3, #56]
 13594 0172 97F8A321 		ldrb	r2, [r7, #419]	@ zero_extendqisi2
 13595 0176 D7F8A801 		ldr	r0, [r7, #424]
 13596 017a 1346     		mov	r3, r2
 13597 017c 5B00     		lsls	r3, r3, #1
 13598 017e 1344     		add	r3, r3, r2
 13599 0180 1B01     		lsls	r3, r3, #4
 13600 0182 0344     		add	r3, r3, r0
 13601 0184 03F29513 		addw	r3, r3, #405
 13602 0188 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13603 018a 41FA03F3 		asr	r3, r1, r3
 13604 018e 3C4A     		ldr	r2, .L566+28
 13605 0190 82FB0312 		smull	r1, r2, r2, r3
 13606 0194 9210     		asrs	r2, r2, #2
 13607 0196 DB17     		asrs	r3, r3, #31
 13608 0198 D31A     		subs	r3, r2, r3
 13609 019a C7F89C31 		str	r3, [r7, #412]
2074:..\src/command_processing.c ****     for (i=1; i<=10;i++){
 13610              		.loc 1 2074 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 314


 13611 019e 0123     		movs	r3, #1
 13612 01a0 C7F8AC31 		str	r3, [r7, #428]
 13613 01a4 2BE0     		b	.L561
 13614              	.L562:
2075:..\src/command_processing.c ****         sprintf(str, "Bin %d [%d-%d]: %lu\r\n", i, step*(i-1)+1, step*(i), MEM_P->cnt.position_hist
 13615              		.loc 1 2075 0 discriminator 3
 13616 01a6 D7F8AC31 		ldr	r3, [r7, #428]
 13617 01aa 013B     		subs	r3, r3, #1
 13618 01ac D7F89C21 		ldr	r2, [r7, #412]
 13619 01b0 02FB03F3 		mul	r3, r2, r3
 13620 01b4 5C1C     		adds	r4, r3, #1
 13621 01b6 D7F89C31 		ldr	r3, [r7, #412]
 13622 01ba D7F8AC21 		ldr	r2, [r7, #428]
 13623 01be 02FB03F3 		mul	r3, r2, r3
 13624 01c2 D7F8AC21 		ldr	r2, [r7, #428]
 13625 01c6 511E     		subs	r1, r2, #1
 13626 01c8 D7F8A821 		ldr	r2, [r7, #424]
 13627 01cc 0631     		adds	r1, r1, #6
 13628 01ce 52F82120 		ldr	r2, [r2, r1, lsl #2]
 13629 01d2 07F59C70 		add	r0, r7, #312
 13630 01d6 0192     		str	r2, [sp, #4]
 13631 01d8 0093     		str	r3, [sp]
 13632 01da 2346     		mov	r3, r4
 13633 01dc D7F8AC21 		ldr	r2, [r7, #428]
 13634 01e0 2849     		ldr	r1, .L566+32
 13635 01e2 FFF7FEFF 		bl	sprintf
2076:..\src/command_processing.c ****         strcat(info_string, str);
 13636              		.loc 1 2076 0 discriminator 3
 13637 01e6 07F59C72 		add	r2, r7, #312
 13638 01ea 3B1D     		adds	r3, r7, #4
 13639 01ec 1146     		mov	r1, r2
 13640 01ee 1868     		ldr	r0, [r3]
 13641 01f0 FFF7FEFF 		bl	strcat
2074:..\src/command_processing.c ****     for (i=1; i<=10;i++){
 13642              		.loc 1 2074 0 discriminator 3
 13643 01f4 D7F8AC31 		ldr	r3, [r7, #428]
 13644 01f8 0133     		adds	r3, r3, #1
 13645 01fa C7F8AC31 		str	r3, [r7, #428]
 13646              	.L561:
2074:..\src/command_processing.c ****     for (i=1; i<=10;i++){
 13647              		.loc 1 2074 0 is_stmt 0 discriminator 1
 13648 01fe D7F8AC31 		ldr	r3, [r7, #428]
 13649 0202 0A2B     		cmp	r3, #10
 13650 0204 CFDD     		ble	.L562
2077:..\src/command_processing.c ****     }
2078:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 13651              		.loc 1 2078 0 is_stmt 1
 13652 0206 3B1D     		adds	r3, r7, #4
 13653 0208 1868     		ldr	r0, [r3]
 13654 020a FFF7FEFF 		bl	strlen
 13655 020e 0346     		mov	r3, r0
 13656 0210 1A46     		mov	r2, r3
 13657 0212 3B1D     		adds	r3, r7, #4
 13658 0214 1B68     		ldr	r3, [r3]
 13659 0216 1344     		add	r3, r3, r2
 13660 0218 144A     		ldr	r2, .L566+8
 13661 021a 1188     		ldrh	r1, [r2]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 315


 13662 021c 9278     		ldrb	r2, [r2, #2]
 13663 021e 1980     		strh	r1, [r3]	@ unaligned
 13664 0220 9A70     		strb	r2, [r3, #2]
2079:..\src/command_processing.c ****     
2080:..\src/command_processing.c ****     sprintf(str, "Current histogram (mA):\r\n");
 13665              		.loc 1 2080 0
 13666 0222 07F59C73 		add	r3, r7, #312
 13667 0226 184A     		ldr	r2, .L566+36
 13668 0228 1C46     		mov	r4, r3
 13669 022a 1546     		mov	r5, r2
 13670 022c 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 13671 022e 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 13672 0230 95E80700 		ldmia	r5, {r0, r1, r2}
 13673 0234 03C4     		stmia	r4!, {r0, r1}
 13674 0236 2280     		strh	r2, [r4]	@ movhi
2081:..\src/command_processing.c ****     strcat(info_string, str);
 13675              		.loc 1 2081 0
 13676 0238 07F59C72 		add	r2, r7, #312
 13677 023c 3B1D     		adds	r3, r7, #4
 13678 023e 1146     		mov	r1, r2
 13679 0240 1868     		ldr	r0, [r3]
 13680 0242 FFF7FEFF 		bl	strcat
2082:..\src/command_processing.c ****     step = ( (int)(MOT->current_limit) / 4);
 13681              		.loc 1 2082 0
 13682 0246 D7F8A431 		ldr	r3, [r7, #420]
 13683 024a B3F95C30 		ldrsh	r3, [r3, #92]
 13684 024e 002B     		cmp	r3, #0
 13685 0250 00DA     		bge	.L563
 13686 0252 0333     		adds	r3, r3, #3
 13687              	.L563:
 13688 0254 9B10     		asrs	r3, r3, #2
 13689 0256 1BB2     		sxth	r3, r3
 13690 0258 C7F89C31 		str	r3, [r7, #412]
2083:..\src/command_processing.c ****     for (i=1; i<=4;i++){
 13691              		.loc 1 2083 0
 13692 025c 0123     		movs	r3, #1
 13693 025e C7F8AC31 		str	r3, [r7, #428]
 13694 0262 3EE0     		b	.L564
 13695              	.L567:
 13696              		.align	2
 13697              	.L566:
 13698 0264 00000000 		.word	g_mem
 13699 0268 C4190000 		.word	.LC248
 13700 026c 58110000 		.word	.LC152
 13701 0270 DC190000 		.word	.LC249
 13702 0274 081A0000 		.word	.LC250
 13703 0278 401A0000 		.word	.LC251
 13704 027c 781A0000 		.word	.LC252
 13705 0280 67666666 		.word	1717986919
 13706 0284 981A0000 		.word	.LC253
 13707 0288 B01A0000 		.word	.LC254
 13708              	.L565:
2084:..\src/command_processing.c ****         sprintf(str, "Threshold %d [%d-%d]: %lu\r\n", i, step*(i-1), step*(i), MEM_P->cnt.current_h
 13709              		.loc 1 2084 0 discriminator 3
 13710 028c D7F8AC31 		ldr	r3, [r7, #428]
 13711 0290 013B     		subs	r3, r3, #1
 13712 0292 D7F89C21 		ldr	r2, [r7, #412]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 316


 13713 0296 02FB03F4 		mul	r4, r2, r3
 13714 029a D7F89C31 		ldr	r3, [r7, #412]
 13715 029e D7F8AC21 		ldr	r2, [r7, #428]
 13716 02a2 02FB03F3 		mul	r3, r2, r3
 13717 02a6 D7F8AC21 		ldr	r2, [r7, #428]
 13718 02aa 511E     		subs	r1, r2, #1
 13719 02ac D7F8A821 		ldr	r2, [r7, #424]
 13720 02b0 1031     		adds	r1, r1, #16
 13721 02b2 52F82120 		ldr	r2, [r2, r1, lsl #2]
 13722 02b6 07F59C70 		add	r0, r7, #312
 13723 02ba 0192     		str	r2, [sp, #4]
 13724 02bc 0093     		str	r3, [sp]
 13725 02be 2346     		mov	r3, r4
 13726 02c0 D7F8AC21 		ldr	r2, [r7, #428]
 13727 02c4 6B49     		ldr	r1, .L568
 13728 02c6 FFF7FEFF 		bl	sprintf
2085:..\src/command_processing.c ****         strcat(info_string, str);
 13729              		.loc 1 2085 0 discriminator 3
 13730 02ca 07F59C72 		add	r2, r7, #312
 13731 02ce 3B1D     		adds	r3, r7, #4
 13732 02d0 1146     		mov	r1, r2
 13733 02d2 1868     		ldr	r0, [r3]
 13734 02d4 FFF7FEFF 		bl	strcat
2083:..\src/command_processing.c ****     for (i=1; i<=4;i++){
 13735              		.loc 1 2083 0 discriminator 3
 13736 02d8 D7F8AC31 		ldr	r3, [r7, #428]
 13737 02dc 0133     		adds	r3, r3, #1
 13738 02de C7F8AC31 		str	r3, [r7, #428]
 13739              	.L564:
2083:..\src/command_processing.c ****     for (i=1; i<=4;i++){
 13740              		.loc 1 2083 0 is_stmt 0 discriminator 1
 13741 02e2 D7F8AC31 		ldr	r3, [r7, #428]
 13742 02e6 042B     		cmp	r3, #4
 13743 02e8 D0DD     		ble	.L565
2086:..\src/command_processing.c ****     }
2087:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 13744              		.loc 1 2087 0 is_stmt 1
 13745 02ea 3B1D     		adds	r3, r7, #4
 13746 02ec 1868     		ldr	r0, [r3]
 13747 02ee FFF7FEFF 		bl	strlen
 13748 02f2 0346     		mov	r3, r0
 13749 02f4 1A46     		mov	r2, r3
 13750 02f6 3B1D     		adds	r3, r7, #4
 13751 02f8 1B68     		ldr	r3, [r3]
 13752 02fa 1344     		add	r3, r3, r2
 13753 02fc 5E4A     		ldr	r2, .L568+4
 13754 02fe 1188     		ldrh	r1, [r2]	@ unaligned
 13755 0300 9278     		ldrb	r2, [r2, #2]
 13756 0302 1980     		strh	r1, [r3]	@ unaligned
 13757 0304 9A70     		strb	r2, [r3, #2]
2088:..\src/command_processing.c ****             
2089:..\src/command_processing.c ****     sprintf(str, "Motions through EMG counter: %lu, %lu", MEM_P->cnt.motion_counter[0], MEM_P->cnt.
 13758              		.loc 1 2089 0
 13759 0306 D7F8A831 		ldr	r3, [r7, #424]
 13760 030a DA6E     		ldr	r2, [r3, #108]
 13761 030c D7F8A831 		ldr	r3, [r7, #424]
 13762 0310 1B6F     		ldr	r3, [r3, #112]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 317


 13763 0312 07F59C70 		add	r0, r7, #312
 13764 0316 5949     		ldr	r1, .L568+8
 13765 0318 FFF7FEFF 		bl	sprintf
2090:..\src/command_processing.c ****     strcat(info_string, str);
 13766              		.loc 1 2090 0
 13767 031c 07F59C72 		add	r2, r7, #312
 13768 0320 3B1D     		adds	r3, r7, #4
 13769 0322 1146     		mov	r1, r2
 13770 0324 1868     		ldr	r0, [r3]
 13771 0326 FFF7FEFF 		bl	strcat
2091:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 13772              		.loc 1 2091 0
 13773 032a 3B1D     		adds	r3, r7, #4
 13774 032c 1868     		ldr	r0, [r3]
 13775 032e FFF7FEFF 		bl	strlen
 13776 0332 0346     		mov	r3, r0
 13777 0334 1A46     		mov	r2, r3
 13778 0336 3B1D     		adds	r3, r7, #4
 13779 0338 1B68     		ldr	r3, [r3]
 13780 033a 1344     		add	r3, r3, r2
 13781 033c 4E4A     		ldr	r2, .L568+4
 13782 033e 1188     		ldrh	r1, [r2]	@ unaligned
 13783 0340 9278     		ldrb	r2, [r2, #2]
 13784 0342 1980     		strh	r1, [r3]	@ unaligned
 13785 0344 9A70     		strb	r2, [r3, #2]
2092:..\src/command_processing.c ****     
2093:..\src/command_processing.c ****     sprintf(str, "Rest position occurrences: %lu", MEM_P->cnt.rest_counter);
 13786              		.loc 1 2093 0
 13787 0346 D7F8A831 		ldr	r3, [r7, #424]
 13788 034a 1A6D     		ldr	r2, [r3, #80]
 13789 034c 07F59C73 		add	r3, r7, #312
 13790 0350 4B49     		ldr	r1, .L568+12
 13791 0352 1846     		mov	r0, r3
 13792 0354 FFF7FEFF 		bl	sprintf
2094:..\src/command_processing.c ****     strcat(info_string, str);
 13793              		.loc 1 2094 0
 13794 0358 07F59C72 		add	r2, r7, #312
 13795 035c 3B1D     		adds	r3, r7, #4
 13796 035e 1146     		mov	r1, r2
 13797 0360 1868     		ldr	r0, [r3]
 13798 0362 FFF7FEFF 		bl	strcat
2095:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 13799              		.loc 1 2095 0
 13800 0366 3B1D     		adds	r3, r7, #4
 13801 0368 1868     		ldr	r0, [r3]
 13802 036a FFF7FEFF 		bl	strlen
 13803 036e 0346     		mov	r3, r0
 13804 0370 1A46     		mov	r2, r3
 13805 0372 3B1D     		adds	r3, r7, #4
 13806 0374 1B68     		ldr	r3, [r3]
 13807 0376 1344     		add	r3, r3, r2
 13808 0378 3F4A     		ldr	r2, .L568+4
 13809 037a 1188     		ldrh	r1, [r2]	@ unaligned
 13810 037c 9278     		ldrb	r2, [r2, #2]
 13811 037e 1980     		strh	r1, [r3]	@ unaligned
 13812 0380 9A70     		strb	r2, [r3, #2]
2096:..\src/command_processing.c ****     
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 318


2097:..\src/command_processing.c ****     sprintf(str, "Angle total displacement (ticks): %lu", MEM_P->cnt.wire_disp);
 13813              		.loc 1 2097 0
 13814 0382 D7F8A831 		ldr	r3, [r7, #424]
 13815 0386 5A6D     		ldr	r2, [r3, #84]
 13816 0388 07F59C73 		add	r3, r7, #312
 13817 038c 3D49     		ldr	r1, .L568+16
 13818 038e 1846     		mov	r0, r3
 13819 0390 FFF7FEFF 		bl	sprintf
2098:..\src/command_processing.c ****     strcat(info_string, str);
 13820              		.loc 1 2098 0
 13821 0394 07F59C72 		add	r2, r7, #312
 13822 0398 3B1D     		adds	r3, r7, #4
 13823 039a 1146     		mov	r1, r2
 13824 039c 1868     		ldr	r0, [r3]
 13825 039e FFF7FEFF 		bl	strcat
2099:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 13826              		.loc 1 2099 0
 13827 03a2 3B1D     		adds	r3, r7, #4
 13828 03a4 1868     		ldr	r0, [r3]
 13829 03a6 FFF7FEFF 		bl	strlen
 13830 03aa 0346     		mov	r3, r0
 13831 03ac 1A46     		mov	r2, r3
 13832 03ae 3B1D     		adds	r3, r7, #4
 13833 03b0 1B68     		ldr	r3, [r3]
 13834 03b2 1344     		add	r3, r3, r2
 13835 03b4 304A     		ldr	r2, .L568+4
 13836 03b6 1188     		ldrh	r1, [r2]	@ unaligned
 13837 03b8 9278     		ldrb	r2, [r2, #2]
 13838 03ba 1980     		strh	r1, [r3]	@ unaligned
 13839 03bc 9A70     		strb	r2, [r3, #2]
2100:..\src/command_processing.c ****     
2101:..\src/command_processing.c ****     sprintf(str, "Total power on time (sec): %lu", MEM_P->cnt.total_runtime);
 13840              		.loc 1 2101 0
 13841 03be D7F8A831 		ldr	r3, [r7, #424]
 13842 03c2 9A6D     		ldr	r2, [r3, #88]
 13843 03c4 07F59C73 		add	r3, r7, #312
 13844 03c8 2F49     		ldr	r1, .L568+20
 13845 03ca 1846     		mov	r0, r3
 13846 03cc FFF7FEFF 		bl	sprintf
2102:..\src/command_processing.c ****     strcat(info_string, str);
 13847              		.loc 1 2102 0
 13848 03d0 07F59C72 		add	r2, r7, #312
 13849 03d4 3B1D     		adds	r3, r7, #4
 13850 03d6 1146     		mov	r1, r2
 13851 03d8 1868     		ldr	r0, [r3]
 13852 03da FFF7FEFF 		bl	strcat
2103:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 13853              		.loc 1 2103 0
 13854 03de 3B1D     		adds	r3, r7, #4
 13855 03e0 1868     		ldr	r0, [r3]
 13856 03e2 FFF7FEFF 		bl	strlen
 13857 03e6 0346     		mov	r3, r0
 13858 03e8 1A46     		mov	r2, r3
 13859 03ea 3B1D     		adds	r3, r7, #4
 13860 03ec 1B68     		ldr	r3, [r3]
 13861 03ee 1344     		add	r3, r3, r2
 13862 03f0 214A     		ldr	r2, .L568+4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 319


 13863 03f2 1188     		ldrh	r1, [r2]	@ unaligned
 13864 03f4 9278     		ldrb	r2, [r2, #2]
 13865 03f6 1980     		strh	r1, [r3]	@ unaligned
 13866 03f8 9A70     		strb	r2, [r3, #2]
2104:..\src/command_processing.c ****     
2105:..\src/command_processing.c ****     sprintf(str, "Total rest position time (sec): %lu", MEM_P->cnt.total_time_rest);
 13867              		.loc 1 2105 0
 13868 03fa D7F8A831 		ldr	r3, [r7, #424]
 13869 03fe DA6D     		ldr	r2, [r3, #92]
 13870 0400 07F59C73 		add	r3, r7, #312
 13871 0404 2149     		ldr	r1, .L568+24
 13872 0406 1846     		mov	r0, r3
 13873 0408 FFF7FEFF 		bl	sprintf
2106:..\src/command_processing.c ****     strcat(info_string, str);
 13874              		.loc 1 2106 0
 13875 040c 07F59C72 		add	r2, r7, #312
 13876 0410 3B1D     		adds	r3, r7, #4
 13877 0412 1146     		mov	r1, r2
 13878 0414 1868     		ldr	r0, [r3]
 13879 0416 FFF7FEFF 		bl	strcat
2107:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 13880              		.loc 1 2107 0
 13881 041a 3B1D     		adds	r3, r7, #4
 13882 041c 1868     		ldr	r0, [r3]
 13883 041e FFF7FEFF 		bl	strlen
 13884 0422 0346     		mov	r3, r0
 13885 0424 1A46     		mov	r2, r3
 13886 0426 3B1D     		adds	r3, r7, #4
 13887 0428 1B68     		ldr	r3, [r3]
 13888 042a 1344     		add	r3, r3, r2
 13889 042c 124A     		ldr	r2, .L568+4
 13890 042e 1188     		ldrh	r1, [r2]	@ unaligned
 13891 0430 9278     		ldrb	r2, [r2, #2]
 13892 0432 1980     		strh	r1, [r3]	@ unaligned
 13893 0434 9A70     		strb	r2, [r3, #2]
2108:..\src/command_processing.c ****     
2109:..\src/command_processing.c ****     
2110:..\src/command_processing.c ****     // R01 Project statistics (some are duplicated)
2111:..\src/command_processing.c ****     char CYDATA R01_str[300];
2112:..\src/command_processing.c ****     prepare_R01_info(R01_str);
 13894              		.loc 1 2112 0
 13895 0436 07F10C03 		add	r3, r7, #12
 13896 043a 1846     		mov	r0, r3
 13897 043c FFF7FEFF 		bl	prepare_R01_info
2113:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 13898              		.loc 1 2113 0
 13899 0440 3B1D     		adds	r3, r7, #4
 13900 0442 1868     		ldr	r0, [r3]
 13901 0444 FFF7FEFF 		bl	strlen
 13902 0448 0346     		mov	r3, r0
 13903 044a 1A46     		mov	r2, r3
 13904 044c 3B1D     		adds	r3, r7, #4
 13905 044e 1B68     		ldr	r3, [r3]
 13906 0450 1344     		add	r3, r3, r2
 13907 0452 094A     		ldr	r2, .L568+4
 13908 0454 1188     		ldrh	r1, [r2]	@ unaligned
 13909 0456 9278     		ldrb	r2, [r2, #2]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 320


 13910 0458 1980     		strh	r1, [r3]	@ unaligned
 13911 045a 9A70     		strb	r2, [r3, #2]
2114:..\src/command_processing.c ****     strcat(info_string, R01_str);
 13912              		.loc 1 2114 0
 13913 045c 07F10C02 		add	r2, r7, #12
 13914 0460 3B1D     		adds	r3, r7, #4
 13915 0462 1146     		mov	r1, r2
 13916 0464 1868     		ldr	r0, [r3]
 13917 0466 FFF7FEFF 		bl	strcat
2115:..\src/command_processing.c **** }
 13918              		.loc 1 2115 0
 13919 046a 00BF     		nop
 13920 046c 07F5DA77 		add	r7, r7, #436
 13921              		.cfi_def_cfa_offset 20
 13922 0470 BD46     		mov	sp, r7
 13923              		.cfi_def_cfa_register 13
 13924              		@ sp needed
 13925 0472 F0BD     		pop	{r4, r5, r6, r7, pc}
 13926              	.L569:
 13927              		.align	2
 13928              	.L568:
 13929 0474 CC1A0000 		.word	.LC255
 13930 0478 58110000 		.word	.LC152
 13931 047c E81A0000 		.word	.LC256
 13932 0480 101B0000 		.word	.LC257
 13933 0484 301B0000 		.word	.LC258
 13934 0488 581B0000 		.word	.LC259
 13935 048c 781B0000 		.word	.LC260
 13936              		.cfi_endproc
 13937              	.LFE72:
 13938              		.size	prepare_counter_info, .-prepare_counter_info
 13939              		.section	.rodata
 13940              		.align	2
 13941              	.LC261:
 13942 1b9c 52303120 		.ascii	"R01 PROJECT STATISTICS\015\012\000"
 13942      50524F4A 
 13942      45435420 
 13942      53544154 
 13942      49535449 
 13943 1bb5 000000   		.align	2
 13944              	.LC262:
 13945 1bb8 506F7765 		.ascii	"Power cycles: %lu\000"
 13945      72206379 
 13945      636C6573 
 13945      3A20256C 
 13945      7500
 13946 1bca 0000     		.align	2
 13947              	.LC263:
 13948 1bcc 454D4720 		.ascii	"EMG activations counter: %lu, %lu\000"
 13948      61637469 
 13948      76617469 
 13948      6F6E7320 
 13948      636F756E 
 13949 1bee 0000     		.align	2
 13950              	.LC264:
 13951 1bf0 4E756D62 		.ascii	"Number of motions (close/open): %lu, %lu\000"
 13951      6572206F 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 321


 13951      66206D6F 
 13951      74696F6E 
 13951      73202863 
 13952 1c19 000000   		.align	2
 13953              	.LC265:
 13954 1c1c 45786365 		.ascii	"Excessive signal activity (close/open): %lu, %lu\000"
 13954      73736976 
 13954      65207369 
 13954      676E616C 
 13954      20616374 
 13955 1c4d 000000   		.align	2
 13956              	.LC266:
 13957 1c50 546F7461 		.ascii	"Total runtime (sec): %lu\000"
 13957      6C207275 
 13957      6E74696D 
 13957      65202873 
 13957      6563293A 
 13958              		.global	__aeabi_ui2f
 13959 1c69 000000   		.align	2
 13960              	.LC267:
 13961 1c6c 41766572 		.ascii	"Average duration of a powered-on session (sec): %.4"
 13961      61676520 
 13961      64757261 
 13961      74696F6E 
 13961      206F6620 
 13962 1c9f 6600     		.ascii	"f\000"
 13963 1ca1 000000   		.align	2
 13964              	.LC268:
 13965 1ca4 46726571 		.ascii	"Frequency of motions: %.4f\000"
 13965      75656E63 
 13965      79206F66 
 13965      206D6F74 
 13965      696F6E73 
 13966              		.section	.text.prepare_R01_info,"ax",%progbits
 13967              		.align	2
 13968              		.global	prepare_R01_info
 13969              		.thumb
 13970              		.thumb_func
 13971              		.type	prepare_R01_info, %function
 13972              	prepare_R01_info:
 13973              	.LFB73:
2116:..\src/command_processing.c **** 
2117:..\src/command_processing.c **** //==============================================================================
2118:..\src/command_processing.c **** //                                                 PREPARE GENERIC COUNTERS INFO
2119:..\src/command_processing.c **** //==============================================================================
2120:..\src/command_processing.c **** 
2121:..\src/command_processing.c **** void prepare_R01_info(char *info_string)
2122:..\src/command_processing.c **** {
 13974              		.loc 1 2122 0
 13975              		.cfi_startproc
 13976              		@ args = 0, pretend = 0, frame = 168
 13977              		@ frame_needed = 1, uses_anonymous_args = 0
 13978 0000 B0B5     		push	{r4, r5, r7, lr}
 13979              		.cfi_def_cfa_offset 16
 13980              		.cfi_offset 4, -16
 13981              		.cfi_offset 5, -12
 13982              		.cfi_offset 7, -8
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 322


 13983              		.cfi_offset 14, -4
 13984 0002 AAB0     		sub	sp, sp, #168
 13985              		.cfi_def_cfa_offset 184
 13986 0004 00AF     		add	r7, sp, #0
 13987              		.cfi_def_cfa_register 7
 13988 0006 7860     		str	r0, [r7, #4]
2123:..\src/command_processing.c ****     char str[150];  
2124:..\src/command_processing.c **** 
2125:..\src/command_processing.c ****     struct st_eeprom* MEM_P = &g_mem;    
 13989              		.loc 1 2125 0
 13990 0008 8A4B     		ldr	r3, .L571
 13991 000a C7F8A430 		str	r3, [r7, #164]
2126:..\src/command_processing.c **** 
2127:..\src/command_processing.c ****     strcpy(info_string, "");
 13992              		.loc 1 2127 0
 13993 000e 7B68     		ldr	r3, [r7, #4]
 13994 0010 0022     		movs	r2, #0
 13995 0012 1A70     		strb	r2, [r3]
2128:..\src/command_processing.c ****     
2129:..\src/command_processing.c ****     strcat(info_string, "R01 PROJECT STATISTICS\r\n");
 13996              		.loc 1 2129 0
 13997 0014 7868     		ldr	r0, [r7, #4]
 13998 0016 FFF7FEFF 		bl	strlen
 13999 001a 0346     		mov	r3, r0
 14000 001c 1A46     		mov	r2, r3
 14001 001e 7B68     		ldr	r3, [r7, #4]
 14002 0020 1344     		add	r3, r3, r2
 14003 0022 854A     		ldr	r2, .L571+4
 14004 0024 1D46     		mov	r5, r3
 14005 0026 1446     		mov	r4, r2
 14006 0028 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14007 002a 2860     		str	r0, [r5]	@ unaligned
 14008 002c 6960     		str	r1, [r5, #4]	@ unaligned
 14009 002e AA60     		str	r2, [r5, #8]	@ unaligned
 14010 0030 EB60     		str	r3, [r5, #12]	@ unaligned
 14011 0032 03CC     		ldmia	r4!, {r0, r1}
 14012 0034 2861     		str	r0, [r5, #16]	@ unaligned
 14013 0036 6961     		str	r1, [r5, #20]	@ unaligned
 14014 0038 2378     		ldrb	r3, [r4]
 14015 003a 2B76     		strb	r3, [r5, #24]
2130:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 14016              		.loc 1 2130 0
 14017 003c 7868     		ldr	r0, [r7, #4]
 14018 003e FFF7FEFF 		bl	strlen
 14019 0042 0346     		mov	r3, r0
 14020 0044 1A46     		mov	r2, r3
 14021 0046 7B68     		ldr	r3, [r7, #4]
 14022 0048 1344     		add	r3, r3, r2
 14023 004a 7C4A     		ldr	r2, .L571+8
 14024 004c 1188     		ldrh	r1, [r2]	@ unaligned
 14025 004e 9278     		ldrb	r2, [r2, #2]
 14026 0050 1980     		strh	r1, [r3]	@ unaligned
 14027 0052 9A70     		strb	r2, [r3, #2]
2131:..\src/command_processing.c ****     
2132:..\src/command_processing.c ****     sprintf(str, "Power cycles: %lu", MEM_P->cnt.power_cycles);
 14028              		.loc 1 2132 0
 14029 0054 D7F8A430 		ldr	r3, [r7, #164]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 323


 14030 0058 1A6E     		ldr	r2, [r3, #96]
 14031 005a 07F10C03 		add	r3, r7, #12
 14032 005e 7849     		ldr	r1, .L571+12
 14033 0060 1846     		mov	r0, r3
 14034 0062 FFF7FEFF 		bl	sprintf
2133:..\src/command_processing.c ****     strcat(info_string, str);
 14035              		.loc 1 2133 0
 14036 0066 07F10C03 		add	r3, r7, #12
 14037 006a 1946     		mov	r1, r3
 14038 006c 7868     		ldr	r0, [r7, #4]
 14039 006e FFF7FEFF 		bl	strcat
2134:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 14040              		.loc 1 2134 0
 14041 0072 7868     		ldr	r0, [r7, #4]
 14042 0074 FFF7FEFF 		bl	strlen
 14043 0078 0346     		mov	r3, r0
 14044 007a 1A46     		mov	r2, r3
 14045 007c 7B68     		ldr	r3, [r7, #4]
 14046 007e 1344     		add	r3, r3, r2
 14047 0080 6E4A     		ldr	r2, .L571+8
 14048 0082 1188     		ldrh	r1, [r2]	@ unaligned
 14049 0084 9278     		ldrb	r2, [r2, #2]
 14050 0086 1980     		strh	r1, [r3]	@ unaligned
 14051 0088 9A70     		strb	r2, [r3, #2]
2135:..\src/command_processing.c ****     
2136:..\src/command_processing.c ****     sprintf(str, "EMG activations counter: %lu, %lu", MEM_P->cnt.emg_act_counter[0], MEM_P->cnt.emg
 14052              		.loc 1 2136 0
 14053 008a D7F8A430 		ldr	r3, [r7, #164]
 14054 008e 1A69     		ldr	r2, [r3, #16]
 14055 0090 D7F8A430 		ldr	r3, [r7, #164]
 14056 0094 5B69     		ldr	r3, [r3, #20]
 14057 0096 07F10C00 		add	r0, r7, #12
 14058 009a 6A49     		ldr	r1, .L571+16
 14059 009c FFF7FEFF 		bl	sprintf
2137:..\src/command_processing.c ****     strcat(info_string, str);
 14060              		.loc 1 2137 0
 14061 00a0 07F10C03 		add	r3, r7, #12
 14062 00a4 1946     		mov	r1, r3
 14063 00a6 7868     		ldr	r0, [r7, #4]
 14064 00a8 FFF7FEFF 		bl	strcat
2138:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 14065              		.loc 1 2138 0
 14066 00ac 7868     		ldr	r0, [r7, #4]
 14067 00ae FFF7FEFF 		bl	strlen
 14068 00b2 0346     		mov	r3, r0
 14069 00b4 1A46     		mov	r2, r3
 14070 00b6 7B68     		ldr	r3, [r7, #4]
 14071 00b8 1344     		add	r3, r3, r2
 14072 00ba 604A     		ldr	r2, .L571+8
 14073 00bc 1188     		ldrh	r1, [r2]	@ unaligned
 14074 00be 9278     		ldrb	r2, [r2, #2]
 14075 00c0 1980     		strh	r1, [r3]	@ unaligned
 14076 00c2 9A70     		strb	r2, [r3, #2]
2139:..\src/command_processing.c ****     
2140:..\src/command_processing.c ****     sprintf(str, "Number of motions (close/open): %lu, %lu", MEM_P->cnt.motion_counter[0], MEM_P->c
 14077              		.loc 1 2140 0
 14078 00c4 D7F8A430 		ldr	r3, [r7, #164]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 324


 14079 00c8 DA6E     		ldr	r2, [r3, #108]
 14080 00ca D7F8A430 		ldr	r3, [r7, #164]
 14081 00ce 1B6F     		ldr	r3, [r3, #112]
 14082 00d0 07F10C00 		add	r0, r7, #12
 14083 00d4 5C49     		ldr	r1, .L571+20
 14084 00d6 FFF7FEFF 		bl	sprintf
2141:..\src/command_processing.c ****     strcat(info_string, str);
 14085              		.loc 1 2141 0
 14086 00da 07F10C03 		add	r3, r7, #12
 14087 00de 1946     		mov	r1, r3
 14088 00e0 7868     		ldr	r0, [r7, #4]
 14089 00e2 FFF7FEFF 		bl	strcat
2142:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 14090              		.loc 1 2142 0
 14091 00e6 7868     		ldr	r0, [r7, #4]
 14092 00e8 FFF7FEFF 		bl	strlen
 14093 00ec 0346     		mov	r3, r0
 14094 00ee 1A46     		mov	r2, r3
 14095 00f0 7B68     		ldr	r3, [r7, #4]
 14096 00f2 1344     		add	r3, r3, r2
 14097 00f4 514A     		ldr	r2, .L571+8
 14098 00f6 1188     		ldrh	r1, [r2]	@ unaligned
 14099 00f8 9278     		ldrb	r2, [r2, #2]
 14100 00fa 1980     		strh	r1, [r3]	@ unaligned
 14101 00fc 9A70     		strb	r2, [r3, #2]
2143:..\src/command_processing.c ****     
2144:..\src/command_processing.c ****     sprintf(str, "Excessive signal activity (close/open): %lu, %lu", MEM_P->cnt.excessive_signal_ac
 14102              		.loc 1 2144 0
 14103 00fe D7F8A430 		ldr	r3, [r7, #164]
 14104 0102 5A6E     		ldr	r2, [r3, #100]
 14105 0104 D7F8A430 		ldr	r3, [r7, #164]
 14106 0108 9B6E     		ldr	r3, [r3, #104]
 14107 010a 07F10C00 		add	r0, r7, #12
 14108 010e 4F49     		ldr	r1, .L571+24
 14109 0110 FFF7FEFF 		bl	sprintf
2145:..\src/command_processing.c ****     strcat(info_string, str);
 14110              		.loc 1 2145 0
 14111 0114 07F10C03 		add	r3, r7, #12
 14112 0118 1946     		mov	r1, r3
 14113 011a 7868     		ldr	r0, [r7, #4]
 14114 011c FFF7FEFF 		bl	strcat
2146:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 14115              		.loc 1 2146 0
 14116 0120 7868     		ldr	r0, [r7, #4]
 14117 0122 FFF7FEFF 		bl	strlen
 14118 0126 0346     		mov	r3, r0
 14119 0128 1A46     		mov	r2, r3
 14120 012a 7B68     		ldr	r3, [r7, #4]
 14121 012c 1344     		add	r3, r3, r2
 14122 012e 434A     		ldr	r2, .L571+8
 14123 0130 1188     		ldrh	r1, [r2]	@ unaligned
 14124 0132 9278     		ldrb	r2, [r2, #2]
 14125 0134 1980     		strh	r1, [r3]	@ unaligned
 14126 0136 9A70     		strb	r2, [r3, #2]
2147:..\src/command_processing.c ****     
2148:..\src/command_processing.c ****     sprintf(str, "Total runtime (sec): %lu", MEM_P->cnt.total_runtime);
 14127              		.loc 1 2148 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 325


 14128 0138 D7F8A430 		ldr	r3, [r7, #164]
 14129 013c 9A6D     		ldr	r2, [r3, #88]
 14130 013e 07F10C03 		add	r3, r7, #12
 14131 0142 4349     		ldr	r1, .L571+28
 14132 0144 1846     		mov	r0, r3
 14133 0146 FFF7FEFF 		bl	sprintf
2149:..\src/command_processing.c ****     strcat(info_string, str);
 14134              		.loc 1 2149 0
 14135 014a 07F10C03 		add	r3, r7, #12
 14136 014e 1946     		mov	r1, r3
 14137 0150 7868     		ldr	r0, [r7, #4]
 14138 0152 FFF7FEFF 		bl	strcat
2150:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 14139              		.loc 1 2150 0
 14140 0156 7868     		ldr	r0, [r7, #4]
 14141 0158 FFF7FEFF 		bl	strlen
 14142 015c 0346     		mov	r3, r0
 14143 015e 1A46     		mov	r2, r3
 14144 0160 7B68     		ldr	r3, [r7, #4]
 14145 0162 1344     		add	r3, r3, r2
 14146 0164 354A     		ldr	r2, .L571+8
 14147 0166 1188     		ldrh	r1, [r2]	@ unaligned
 14148 0168 9278     		ldrb	r2, [r2, #2]
 14149 016a 1980     		strh	r1, [r3]	@ unaligned
 14150 016c 9A70     		strb	r2, [r3, #2]
2151:..\src/command_processing.c ****     
2152:..\src/command_processing.c ****     sprintf(str, "Average duration of a powered-on session (sec): %.4f", (float)(MEM_P->cnt.total_r
 14151              		.loc 1 2152 0
 14152 016e D7F8A430 		ldr	r3, [r7, #164]
 14153 0172 9A6D     		ldr	r2, [r3, #88]
 14154 0174 D7F8A430 		ldr	r3, [r7, #164]
 14155 0178 1B6E     		ldr	r3, [r3, #96]
 14156 017a B2FBF3F3 		udiv	r3, r2, r3
 14157 017e 1846     		mov	r0, r3
 14158 0180 FFF7FEFF 		bl	__aeabi_ui2f
 14159 0184 0346     		mov	r3, r0
 14160 0186 1846     		mov	r0, r3
 14161 0188 FFF7FEFF 		bl	__aeabi_f2d
 14162 018c 0346     		mov	r3, r0
 14163 018e 0C46     		mov	r4, r1
 14164 0190 07F10C00 		add	r0, r7, #12
 14165 0194 1A46     		mov	r2, r3
 14166 0196 2346     		mov	r3, r4
 14167 0198 2E49     		ldr	r1, .L571+32
 14168 019a FFF7FEFF 		bl	sprintf
2153:..\src/command_processing.c ****     strcat(info_string, str);
 14169              		.loc 1 2153 0
 14170 019e 07F10C03 		add	r3, r7, #12
 14171 01a2 1946     		mov	r1, r3
 14172 01a4 7868     		ldr	r0, [r7, #4]
 14173 01a6 FFF7FEFF 		bl	strcat
2154:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 14174              		.loc 1 2154 0
 14175 01aa 7868     		ldr	r0, [r7, #4]
 14176 01ac FFF7FEFF 		bl	strlen
 14177 01b0 0346     		mov	r3, r0
 14178 01b2 1A46     		mov	r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 326


 14179 01b4 7B68     		ldr	r3, [r7, #4]
 14180 01b6 1344     		add	r3, r3, r2
 14181 01b8 204A     		ldr	r2, .L571+8
 14182 01ba 1188     		ldrh	r1, [r2]	@ unaligned
 14183 01bc 9278     		ldrb	r2, [r2, #2]
 14184 01be 1980     		strh	r1, [r3]	@ unaligned
 14185 01c0 9A70     		strb	r2, [r3, #2]
2155:..\src/command_processing.c ****     
2156:..\src/command_processing.c ****     sprintf(str, "Frequency of motions: %.4f", (float)((MEM_P->cnt.emg_act_counter[0] + MEM_P->cnt.
 14186              		.loc 1 2156 0
 14187 01c2 D7F8A430 		ldr	r3, [r7, #164]
 14188 01c6 1A69     		ldr	r2, [r3, #16]
 14189 01c8 D7F8A430 		ldr	r3, [r7, #164]
 14190 01cc 5B69     		ldr	r3, [r3, #20]
 14191 01ce 1344     		add	r3, r3, r2
 14192 01d0 1846     		mov	r0, r3
 14193 01d2 FFF7FEFF 		bl	__aeabi_ui2f
 14194 01d6 0446     		mov	r4, r0
 14195 01d8 D7F8A430 		ldr	r3, [r7, #164]
 14196 01dc 9B6D     		ldr	r3, [r3, #88]
 14197 01de 1846     		mov	r0, r3
 14198 01e0 FFF7FEFF 		bl	__aeabi_ui2f
 14199 01e4 0346     		mov	r3, r0
 14200 01e6 1946     		mov	r1, r3
 14201 01e8 2046     		mov	r0, r4
 14202 01ea FFF7FEFF 		bl	__aeabi_fdiv
 14203 01ee 0346     		mov	r3, r0
 14204 01f0 1846     		mov	r0, r3
 14205 01f2 FFF7FEFF 		bl	__aeabi_f2d
 14206 01f6 0346     		mov	r3, r0
 14207 01f8 0C46     		mov	r4, r1
 14208 01fa 07F10C00 		add	r0, r7, #12
 14209 01fe 1A46     		mov	r2, r3
 14210 0200 2346     		mov	r3, r4
 14211 0202 1549     		ldr	r1, .L571+36
 14212 0204 FFF7FEFF 		bl	sprintf
2157:..\src/command_processing.c ****     strcat(info_string, str);
 14213              		.loc 1 2157 0
 14214 0208 07F10C03 		add	r3, r7, #12
 14215 020c 1946     		mov	r1, r3
 14216 020e 7868     		ldr	r0, [r7, #4]
 14217 0210 FFF7FEFF 		bl	strcat
2158:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 14218              		.loc 1 2158 0
 14219 0214 7868     		ldr	r0, [r7, #4]
 14220 0216 FFF7FEFF 		bl	strlen
 14221 021a 0346     		mov	r3, r0
 14222 021c 1A46     		mov	r2, r3
 14223 021e 7B68     		ldr	r3, [r7, #4]
 14224 0220 1344     		add	r3, r3, r2
 14225 0222 064A     		ldr	r2, .L571+8
 14226 0224 1188     		ldrh	r1, [r2]	@ unaligned
 14227 0226 9278     		ldrb	r2, [r2, #2]
 14228 0228 1980     		strh	r1, [r3]	@ unaligned
 14229 022a 9A70     		strb	r2, [r3, #2]
2159:..\src/command_processing.c **** 
2160:..\src/command_processing.c **** }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 327


 14230              		.loc 1 2160 0
 14231 022c 00BF     		nop
 14232 022e A837     		adds	r7, r7, #168
 14233              		.cfi_def_cfa_offset 16
 14234 0230 BD46     		mov	sp, r7
 14235              		.cfi_def_cfa_register 13
 14236              		@ sp needed
 14237 0232 B0BD     		pop	{r4, r5, r7, pc}
 14238              	.L572:
 14239              		.align	2
 14240              	.L571:
 14241 0234 00000000 		.word	g_mem
 14242 0238 9C1B0000 		.word	.LC261
 14243 023c 58110000 		.word	.LC152
 14244 0240 B81B0000 		.word	.LC262
 14245 0244 CC1B0000 		.word	.LC263
 14246 0248 F01B0000 		.word	.LC264
 14247 024c 1C1C0000 		.word	.LC265
 14248 0250 501C0000 		.word	.LC266
 14249 0254 6C1C0000 		.word	.LC267
 14250 0258 A41C0000 		.word	.LC268
 14251              		.cfi_endproc
 14252              	.LFE73:
 14253              		.size	prepare_R01_info, .-prepare_R01_info
 14254              		.section	.rodata
 14255 1cbf 00       		.align	2
 14256              	.LC269:
 14257 1cc0 4669726D 		.ascii	"Firmware version: %s\015\012\000"
 14257      77617265 
 14257      20766572 
 14257      73696F6E 
 14257      3A202573 
 14258 1cd7 00       		.align	2
 14259              	.LC270:
 14260 1cd8 506F7369 		.ascii	"Position PID: \000"
 14260      74696F6E 
 14260      20504944 
 14260      3A2000
 14261 1ce7 00       		.align	2
 14262              	.LC271:
 14263 1ce8 43757272 		.ascii	"Current PID: \000"
 14263      656E7420 
 14263      5049443A 
 14263      2000
 14264 1cf6 0000     		.align	2
 14265              	.LC272:
 14266 1cf8 5265736F 		.ascii	"Resolutions: \000"
 14266      6C757469 
 14266      6F6E733A 
 14266      2000
 14267 1d06 0000     		.align	2
 14268              	.LC273:
 14269 1d08 4F666673 		.ascii	"Offsets: \000"
 14269      6574733A 
 14269      2000
 14270 1d12 0000     		.align	2
 14271              	.LC274:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 328


 14272 1d14 4D756C74 		.ascii	"Multipliers: \000"
 14272      69706C69 
 14272      6572733A 
 14272      2000
 14273 1d22 0000     		.align	2
 14274              	.LC275:
 14275 1d24 43757272 		.ascii	"Current lookup table p[0] - p[5]: %f, %f, %f, %f, %"
 14275      656E7420 
 14275      6C6F6F6B 
 14275      75702074 
 14275      61626C65 
 14276 1d57 662C2025 		.ascii	"f, %f\015\012\000"
 14276      660D0A00 
 14277 1d5f 00       		.align	2
 14278              	.LC276:
 14279 1d60 506F7369 		.ascii	"Position limit active: %d\015\012\000"
 14279      74696F6E 
 14279      206C696D 
 14279      69742061 
 14279      63746976 
 14280              		.align	2
 14281              	.LC277:
 14282 1d7c 506F7369 		.ascii	"Position limits: inf -> %ld, sup -> %ld\015\012\000"
 14282      74696F6E 
 14282      206C696D 
 14282      6974733A 
 14282      20696E66 
 14283              		.section	.text.prepare_SD_param_info,"ax",%progbits
 14284              		.align	2
 14285              		.global	prepare_SD_param_info
 14286              		.thumb
 14287              		.thumb_func
 14288              		.type	prepare_SD_param_info, %function
 14289              	prepare_SD_param_info:
 14290              	.LFB74:
2161:..\src/command_processing.c **** 
2162:..\src/command_processing.c **** //==============================================================================
2163:..\src/command_processing.c **** //                                                    PREPARE SD CARD PARAM INFO
2164:..\src/command_processing.c **** //==============================================================================
2165:..\src/command_processing.c **** 
2166:..\src/command_processing.c **** void prepare_SD_param_info(char *info_string)
2167:..\src/command_processing.c **** {
 14291              		.loc 1 2167 0
 14292              		.cfi_startproc
 14293              		@ args = 0, pretend = 0, frame = 152
 14294              		@ frame_needed = 1, uses_anonymous_args = 0
 14295 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 14296              		.cfi_def_cfa_offset 36
 14297              		.cfi_offset 4, -36
 14298              		.cfi_offset 5, -32
 14299              		.cfi_offset 6, -28
 14300              		.cfi_offset 7, -24
 14301              		.cfi_offset 8, -20
 14302              		.cfi_offset 9, -16
 14303              		.cfi_offset 10, -12
 14304              		.cfi_offset 11, -8
 14305              		.cfi_offset 14, -4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 329


 14306 0004 B1B0     		sub	sp, sp, #196
 14307              		.cfi_def_cfa_offset 232
 14308 0006 0AAF     		add	r7, sp, #40
 14309              		.cfi_def_cfa 7, 192
 14310 0008 7861     		str	r0, [r7, #20]
2168:..\src/command_processing.c ****     char str[100];  
2169:..\src/command_processing.c ****     int i;
2170:..\src/command_processing.c ****            
2171:..\src/command_processing.c ****     // NOTE: use g_mem structure instead of c_mem because when changing parameters c_mem struct is 
2172:..\src/command_processing.c ****     
2173:..\src/command_processing.c ****     struct st_eeprom* MEM_P = &g_mem;    
 14311              		.loc 1 2173 0
 14312 000a AC4B     		ldr	r3, .L638
 14313 000c C7F88C30 		str	r3, [r7, #140]
2174:..\src/command_processing.c ****         
2175:..\src/command_processing.c ****     sprintf(info_string, "Firmware version: %s\r\n", VERSION);
 14314              		.loc 1 2175 0
 14315 0010 AB4A     		ldr	r2, .L638+4
 14316 0012 AC49     		ldr	r1, .L638+8
 14317 0014 7869     		ldr	r0, [r7, #20]
 14318 0016 FFF7FEFF 		bl	sprintf
2176:..\src/command_processing.c ****     
2177:..\src/command_processing.c ****     sprintf(str, "ID: %d\r\n", (int) MEM_P->dev.id);
 14319              		.loc 1 2177 0
 14320 001a D7F88C30 		ldr	r3, [r7, #140]
 14321 001e 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 14322 0022 1A46     		mov	r2, r3
 14323 0024 07F11C03 		add	r3, r7, #28
 14324 0028 A749     		ldr	r1, .L638+12
 14325 002a 1846     		mov	r0, r3
 14326 002c FFF7FEFF 		bl	sprintf
2178:..\src/command_processing.c ****     strcat(info_string, str);
 14327              		.loc 1 2178 0
 14328 0030 07F11C03 		add	r3, r7, #28
 14329 0034 1946     		mov	r1, r3
 14330 0036 7869     		ldr	r0, [r7, #20]
 14331 0038 FFF7FEFF 		bl	strcat
2179:..\src/command_processing.c ****     switch(MEM_P->dev.right_left){
 14332              		.loc 1 2179 0
 14333 003c D7F88C30 		ldr	r3, [r7, #140]
 14334 0040 93F8A730 		ldrb	r3, [r3, #167]	@ zero_extendqisi2
 14335 0044 002B     		cmp	r3, #0
 14336 0046 02D0     		beq	.L575
 14337 0048 012B     		cmp	r3, #1
 14338 004a 15D0     		beq	.L576
 14339 004c 26E0     		b	.L574
 14340              	.L575:
2180:..\src/command_processing.c ****         case RIGHT_HAND:
2181:..\src/command_processing.c ****             strcat(info_string, "Hand side: RIGHT\r\n");
 14341              		.loc 1 2181 0
 14342 004e 7869     		ldr	r0, [r7, #20]
 14343 0050 FFF7FEFF 		bl	strlen
 14344 0054 0346     		mov	r3, r0
 14345 0056 1A46     		mov	r2, r3
 14346 0058 7B69     		ldr	r3, [r7, #20]
 14347 005a 1344     		add	r3, r3, r2
 14348 005c 9B4A     		ldr	r2, .L638+16
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 330


 14349 005e 1D46     		mov	r5, r3
 14350 0060 1446     		mov	r4, r2
 14351 0062 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14352 0064 2860     		str	r0, [r5]	@ unaligned
 14353 0066 6960     		str	r1, [r5, #4]	@ unaligned
 14354 0068 AA60     		str	r2, [r5, #8]	@ unaligned
 14355 006a EB60     		str	r3, [r5, #12]	@ unaligned
 14356 006c 2388     		ldrh	r3, [r4]	@ unaligned
 14357 006e A278     		ldrb	r2, [r4, #2]
 14358 0070 2B82     		strh	r3, [r5, #16]	@ unaligned
 14359 0072 1346     		mov	r3, r2
 14360 0074 AB74     		strb	r3, [r5, #18]
2182:..\src/command_processing.c ****             break;
 14361              		.loc 1 2182 0
 14362 0076 11E0     		b	.L574
 14363              	.L576:
2183:..\src/command_processing.c ****         case LEFT_HAND:
2184:..\src/command_processing.c ****             strcat(info_string, "Hand side: LEFT\r\n");
 14364              		.loc 1 2184 0
 14365 0078 7869     		ldr	r0, [r7, #20]
 14366 007a FFF7FEFF 		bl	strlen
 14367 007e 0346     		mov	r3, r0
 14368 0080 1A46     		mov	r2, r3
 14369 0082 7B69     		ldr	r3, [r7, #20]
 14370 0084 1344     		add	r3, r3, r2
 14371 0086 924A     		ldr	r2, .L638+20
 14372 0088 1D46     		mov	r5, r3
 14373 008a 1446     		mov	r4, r2
 14374 008c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14375 008e 2860     		str	r0, [r5]	@ unaligned
 14376 0090 6960     		str	r1, [r5, #4]	@ unaligned
 14377 0092 AA60     		str	r2, [r5, #8]	@ unaligned
 14378 0094 EB60     		str	r3, [r5, #12]	@ unaligned
 14379 0096 2388     		ldrh	r3, [r4]	@ unaligned
 14380 0098 2B82     		strh	r3, [r5, #16]	@ unaligned
2185:..\src/command_processing.c ****             break;
 14381              		.loc 1 2185 0
 14382 009a 00BF     		nop
 14383              	.L574:
2186:..\src/command_processing.c ****     }
2187:..\src/command_processing.c **** 
2188:..\src/command_processing.c ****     sprintf(str, "Date of HW maintenance: %02d/%02d/20%02d\r\n", (int)MEM_P->dev.hw_maint_date[0], 
 14384              		.loc 1 2188 0
 14385 009c D7F88C30 		ldr	r3, [r7, #140]
 14386 00a0 93F8A130 		ldrb	r3, [r3, #161]	@ zero_extendqisi2
 14387 00a4 1A46     		mov	r2, r3
 14388 00a6 D7F88C30 		ldr	r3, [r7, #140]
 14389 00aa 93F8A230 		ldrb	r3, [r3, #162]	@ zero_extendqisi2
 14390 00ae 1946     		mov	r1, r3
 14391 00b0 D7F88C30 		ldr	r3, [r7, #140]
 14392 00b4 93F8A330 		ldrb	r3, [r3, #163]	@ zero_extendqisi2
 14393 00b8 07F11C00 		add	r0, r7, #28
 14394 00bc 0093     		str	r3, [sp]
 14395 00be 0B46     		mov	r3, r1
 14396 00c0 8449     		ldr	r1, .L638+24
 14397 00c2 FFF7FEFF 		bl	sprintf
2189:..\src/command_processing.c ****     strcat(info_string, str);
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 331


 14398              		.loc 1 2189 0
 14399 00c6 07F11C03 		add	r3, r7, #28
 14400 00ca 1946     		mov	r1, r3
 14401 00cc 7869     		ldr	r0, [r7, #20]
 14402 00ce FFF7FEFF 		bl	strcat
2190:..\src/command_processing.c ****     
2191:..\src/command_processing.c ****     sprintf(str, "Date of usage stats period begin: %02d/%02d/20%02d\r\n", (int)MEM_P->dev.stats_pe
 14403              		.loc 1 2191 0
 14404 00d2 D7F88C30 		ldr	r3, [r7, #140]
 14405 00d6 93F8A430 		ldrb	r3, [r3, #164]	@ zero_extendqisi2
 14406 00da 1A46     		mov	r2, r3
 14407 00dc D7F88C30 		ldr	r3, [r7, #140]
 14408 00e0 93F8A530 		ldrb	r3, [r3, #165]	@ zero_extendqisi2
 14409 00e4 1946     		mov	r1, r3
 14410 00e6 D7F88C30 		ldr	r3, [r7, #140]
 14411 00ea 93F8A630 		ldrb	r3, [r3, #166]	@ zero_extendqisi2
 14412 00ee 07F11C00 		add	r0, r7, #28
 14413 00f2 0093     		str	r3, [sp]
 14414 00f4 0B46     		mov	r3, r1
 14415 00f6 7849     		ldr	r1, .L638+28
 14416 00f8 FFF7FEFF 		bl	sprintf
2192:..\src/command_processing.c ****     strcat(info_string, str);
 14417              		.loc 1 2192 0
 14418 00fc 07F11C03 		add	r3, r7, #28
 14419 0100 1946     		mov	r1, r3
 14420 0102 7869     		ldr	r0, [r7, #20]
 14421 0104 FFF7FEFF 		bl	strcat
 14422              	.LBB26:
2193:..\src/command_processing.c ****     
2194:..\src/command_processing.c **** 	for (uint8 k = 0; k <= MEM_P->dev.use_2nd_motor_flag; k++) {
 14423              		.loc 1 2194 0
 14424 0108 0023     		movs	r3, #0
 14425 010a 87F89330 		strb	r3, [r7, #147]
 14426 010e 00F05EBE 		b	.L577
 14427              	.L621:
 14428              	.LBB27:
2195:..\src/command_processing.c ****             
2196:..\src/command_processing.c **** 	    uint8 MOTOR_IDX = k;
 14429              		.loc 1 2196 0
 14430 0112 97F89330 		ldrb	r3, [r7, #147]
 14431 0116 87F88B30 		strb	r3, [r7, #139]
2197:..\src/command_processing.c ****         struct st_motor* MOT = &(MEM_P->motor[MOTOR_IDX]);      // Default motor
 14432              		.loc 1 2197 0
 14433 011a 97F88B20 		ldrb	r2, [r7, #139]	@ zero_extendqisi2
 14434 011e 1346     		mov	r3, r2
 14435 0120 DB00     		lsls	r3, r3, #3
 14436 0122 9B1A     		subs	r3, r3, r2
 14437 0124 1B01     		lsls	r3, r3, #4
 14438 0126 B033     		adds	r3, r3, #176
 14439 0128 D7F88C20 		ldr	r2, [r7, #140]
 14440 012c 1344     		add	r3, r3, r2
 14441 012e C7F88430 		str	r3, [r7, #132]
2198:..\src/command_processing.c ****         uint8 ENC_L = MOT->encoder_line;             // Associated encoder line
 14442              		.loc 1 2198 0
 14443 0132 D7F88430 		ldr	r3, [r7, #132]
 14444 0136 93F86030 		ldrb	r3, [r3, #96]
 14445 013a 87F88330 		strb	r3, [r7, #131]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 332


2199:..\src/command_processing.c ****               
2200:..\src/command_processing.c ****         sprintf(str, "MOTOR %d INFO\r\n", MOTOR_IDX+1);
 14446              		.loc 1 2200 0
 14447 013e 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 14448 0142 5A1C     		adds	r2, r3, #1
 14449 0144 07F11C03 		add	r3, r7, #28
 14450 0148 6449     		ldr	r1, .L638+32
 14451 014a 1846     		mov	r0, r3
 14452 014c FFF7FEFF 		bl	sprintf
2201:..\src/command_processing.c ****         strcat(info_string, str);
 14453              		.loc 1 2201 0
 14454 0150 07F11C03 		add	r3, r7, #28
 14455 0154 1946     		mov	r1, r3
 14456 0156 7869     		ldr	r0, [r7, #20]
 14457 0158 FFF7FEFF 		bl	strcat
2202:..\src/command_processing.c ****                     
2203:..\src/command_processing.c ****         strcat(info_string, "PWM rescaling activation: ");
 14458              		.loc 1 2203 0
 14459 015c 7869     		ldr	r0, [r7, #20]
 14460 015e FFF7FEFF 		bl	strlen
 14461 0162 0346     		mov	r3, r0
 14462 0164 1A46     		mov	r2, r3
 14463 0166 7B69     		ldr	r3, [r7, #20]
 14464 0168 1344     		add	r3, r3, r2
 14465 016a 5D4A     		ldr	r2, .L638+36
 14466 016c 1D46     		mov	r5, r3
 14467 016e 1446     		mov	r4, r2
 14468 0170 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14469 0172 2860     		str	r0, [r5]	@ unaligned
 14470 0174 6960     		str	r1, [r5, #4]	@ unaligned
 14471 0176 AA60     		str	r2, [r5, #8]	@ unaligned
 14472 0178 EB60     		str	r3, [r5, #12]	@ unaligned
 14473 017a 03CC     		ldmia	r4!, {r0, r1}
 14474 017c 2861     		str	r0, [r5, #16]	@ unaligned
 14475 017e 6961     		str	r1, [r5, #20]	@ unaligned
 14476 0180 2388     		ldrh	r3, [r4]	@ unaligned
 14477 0182 A278     		ldrb	r2, [r4, #2]
 14478 0184 2B83     		strh	r3, [r5, #24]	@ unaligned
 14479 0186 1346     		mov	r3, r2
 14480 0188 AB76     		strb	r3, [r5, #26]
2204:..\src/command_processing.c ****         if(MOT->activate_pwm_rescaling == MAXON_12V)
 14481              		.loc 1 2204 0
 14482 018a D7F88430 		ldr	r3, [r7, #132]
 14483 018e 93F83130 		ldrb	r3, [r3, #49]	@ zero_extendqisi2
 14484 0192 012B     		cmp	r3, #1
 14485 0194 0CD1     		bne	.L578
2205:..\src/command_processing.c ****             strcat(info_string, "YES\r\n");
 14486              		.loc 1 2205 0
 14487 0196 7869     		ldr	r0, [r7, #20]
 14488 0198 FFF7FEFF 		bl	strlen
 14489 019c 0346     		mov	r3, r0
 14490 019e 1A46     		mov	r2, r3
 14491 01a0 7B69     		ldr	r3, [r7, #20]
 14492 01a2 1344     		add	r3, r3, r2
 14493 01a4 4F4A     		ldr	r2, .L638+40
 14494 01a6 1068     		ldr	r0, [r2]	@ unaligned
 14495 01a8 1860     		str	r0, [r3]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 333


 14496 01aa 9288     		ldrh	r2, [r2, #4]	@ unaligned
 14497 01ac 9A80     		strh	r2, [r3, #4]	@ unaligned
 14498 01ae 0BE0     		b	.L579
 14499              	.L578:
2206:..\src/command_processing.c ****         else
2207:..\src/command_processing.c ****             strcat(info_string, "NO\r\n");
 14500              		.loc 1 2207 0
 14501 01b0 7869     		ldr	r0, [r7, #20]
 14502 01b2 FFF7FEFF 		bl	strlen
 14503 01b6 0346     		mov	r3, r0
 14504 01b8 1A46     		mov	r2, r3
 14505 01ba 7B69     		ldr	r3, [r7, #20]
 14506 01bc 1344     		add	r3, r3, r2
 14507 01be 4A4A     		ldr	r2, .L638+44
 14508 01c0 1068     		ldr	r0, [r2]	@ unaligned
 14509 01c2 1860     		str	r0, [r3]	@ unaligned
 14510 01c4 1279     		ldrb	r2, [r2, #4]
 14511 01c6 1A71     		strb	r2, [r3, #4]
 14512              	.L579:
2208:..\src/command_processing.c ****         
2209:..\src/command_processing.c ****         sprintf(str, "PWM Limit: %d\r\n", (int) dev_pwm_limit[MOTOR_IDX]);
 14513              		.loc 1 2209 0
 14514 01c8 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 14515 01cc 474A     		ldr	r2, .L638+48
 14516 01ce 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 14517 01d2 1A46     		mov	r2, r3
 14518 01d4 07F11C03 		add	r3, r7, #28
 14519 01d8 4549     		ldr	r1, .L638+52
 14520 01da 1846     		mov	r0, r3
 14521 01dc FFF7FEFF 		bl	sprintf
2210:..\src/command_processing.c ****         strcat(info_string, str);
 14522              		.loc 1 2210 0
 14523 01e0 07F11C03 		add	r3, r7, #28
 14524 01e4 1946     		mov	r1, r3
 14525 01e6 7869     		ldr	r0, [r7, #20]
 14526 01e8 FFF7FEFF 		bl	strcat
2211:..\src/command_processing.c **** 
2212:..\src/command_processing.c ****         strcat(info_string, "Position PID: ");
 14527              		.loc 1 2212 0
 14528 01ec 7869     		ldr	r0, [r7, #20]
 14529 01ee FFF7FEFF 		bl	strlen
 14530 01f2 0346     		mov	r3, r0
 14531 01f4 1A46     		mov	r2, r3
 14532 01f6 7B69     		ldr	r3, [r7, #20]
 14533 01f8 1344     		add	r3, r3, r2
 14534 01fa 3E4A     		ldr	r2, .L638+56
 14535 01fc 1C46     		mov	r4, r3
 14536 01fe 1346     		mov	r3, r2
 14537 0200 07CB     		ldmia	r3!, {r0, r1, r2}
 14538 0202 2060     		str	r0, [r4]	@ unaligned
 14539 0204 6160     		str	r1, [r4, #4]	@ unaligned
 14540 0206 A260     		str	r2, [r4, #8]	@ unaligned
 14541 0208 1A88     		ldrh	r2, [r3]	@ unaligned
 14542 020a 9B78     		ldrb	r3, [r3, #2]
 14543 020c A281     		strh	r2, [r4, #12]	@ unaligned
 14544 020e A373     		strb	r3, [r4, #14]
2213:..\src/command_processing.c ****         if(MOT->control_mode != CURR_AND_POS_CONTROL) {
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 334


 14545              		.loc 1 2213 0
 14546 0210 D7F88430 		ldr	r3, [r7, #132]
 14547 0214 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 14548 0218 032B     		cmp	r3, #3
 14549 021a 75D0     		beq	.L580
2214:..\src/command_processing.c ****             sprintf(str, "P -> %f  ", ((double) MOT->k_p / 65536));
 14550              		.loc 1 2214 0
 14551 021c D7F88430 		ldr	r3, [r7, #132]
 14552 0220 1B68     		ldr	r3, [r3]
 14553 0222 1846     		mov	r0, r3
 14554 0224 FFF7FEFF 		bl	__aeabi_i2d
 14555 0228 4FF00002 		mov	r2, #0
 14556 022c 324B     		ldr	r3, .L638+60
 14557 022e FFF7FEFF 		bl	__aeabi_ddiv
 14558 0232 0346     		mov	r3, r0
 14559 0234 0C46     		mov	r4, r1
 14560 0236 07F11C00 		add	r0, r7, #28
 14561 023a 1A46     		mov	r2, r3
 14562 023c 2346     		mov	r3, r4
 14563 023e 2F49     		ldr	r1, .L638+64
 14564 0240 FFF7FEFF 		bl	sprintf
2215:..\src/command_processing.c ****             strcat(info_string, str);
 14565              		.loc 1 2215 0
 14566 0244 07F11C03 		add	r3, r7, #28
 14567 0248 1946     		mov	r1, r3
 14568 024a 7869     		ldr	r0, [r7, #20]
 14569 024c FFF7FEFF 		bl	strcat
2216:..\src/command_processing.c ****             sprintf(str, "I -> %f  ", ((double) MOT->k_i / 65536));
 14570              		.loc 1 2216 0
 14571 0250 D7F88430 		ldr	r3, [r7, #132]
 14572 0254 5B68     		ldr	r3, [r3, #4]
 14573 0256 1846     		mov	r0, r3
 14574 0258 FFF7FEFF 		bl	__aeabi_i2d
 14575 025c 4FF00002 		mov	r2, #0
 14576 0260 254B     		ldr	r3, .L638+60
 14577 0262 FFF7FEFF 		bl	__aeabi_ddiv
 14578 0266 0346     		mov	r3, r0
 14579 0268 0C46     		mov	r4, r1
 14580 026a 07F11C00 		add	r0, r7, #28
 14581 026e 1A46     		mov	r2, r3
 14582 0270 2346     		mov	r3, r4
 14583 0272 2349     		ldr	r1, .L638+68
 14584 0274 FFF7FEFF 		bl	sprintf
2217:..\src/command_processing.c ****             strcat(info_string, str);
 14585              		.loc 1 2217 0
 14586 0278 07F11C03 		add	r3, r7, #28
 14587 027c 1946     		mov	r1, r3
 14588 027e 7869     		ldr	r0, [r7, #20]
 14589 0280 FFF7FEFF 		bl	strcat
2218:..\src/command_processing.c ****             sprintf(str, "D -> %f\r\n", ((double) MOT->k_d / 65536));
 14590              		.loc 1 2218 0
 14591 0284 D7F88430 		ldr	r3, [r7, #132]
 14592 0288 9B68     		ldr	r3, [r3, #8]
 14593 028a 1846     		mov	r0, r3
 14594 028c FFF7FEFF 		bl	__aeabi_i2d
 14595 0290 4FF00002 		mov	r2, #0
 14596 0294 184B     		ldr	r3, .L638+60
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 335


 14597 0296 FFF7FEFF 		bl	__aeabi_ddiv
 14598 029a 0346     		mov	r3, r0
 14599 029c 0C46     		mov	r4, r1
 14600 029e 07F11C00 		add	r0, r7, #28
 14601 02a2 1A46     		mov	r2, r3
 14602 02a4 2346     		mov	r3, r4
 14603 02a6 1749     		ldr	r1, .L638+72
 14604 02a8 FFF7FEFF 		bl	sprintf
2219:..\src/command_processing.c ****             strcat(info_string, str);
 14605              		.loc 1 2219 0
 14606 02ac 07F11C03 		add	r3, r7, #28
 14607 02b0 1946     		mov	r1, r3
 14608 02b2 7869     		ldr	r0, [r7, #20]
 14609 02b4 FFF7FEFF 		bl	strcat
 14610 02b8 74E0     		b	.L581
 14611              	.L639:
 14612 02ba 00BF     		.align	2
 14613              	.L638:
 14614 02bc 00000000 		.word	g_mem
 14615 02c0 70110000 		.word	.LC154
 14616 02c4 C01C0000 		.word	.LC269
 14617 02c8 B0110000 		.word	.LC157
 14618 02cc 60120000 		.word	.LC163
 14619 02d0 74120000 		.word	.LC164
 14620 02d4 DC190000 		.word	.LC249
 14621 02d8 081A0000 		.word	.LC250
 14622 02dc BC120000 		.word	.LC168
 14623 02e0 2C130000 		.word	.LC177
 14624 02e4 1C130000 		.word	.LC175
 14625 02e8 24130000 		.word	.LC176
 14626 02ec 00000000 		.word	dev_pwm_limit
 14627 02f0 54130000 		.word	.LC180
 14628 02f4 D81C0000 		.word	.LC270
 14629 02f8 0000F040 		.word	1089470464
 14630 02fc 6C140000 		.word	.LC192
 14631 0300 78140000 		.word	.LC193
 14632 0304 84140000 		.word	.LC194
 14633              	.L580:
2220:..\src/command_processing.c ****         }
2221:..\src/command_processing.c ****         else { 
2222:..\src/command_processing.c ****             sprintf(str, "P -> %f  ", ((double) MOT->k_p_dl / 65536));
 14634              		.loc 1 2222 0
 14635 0308 D7F88430 		ldr	r3, [r7, #132]
 14636 030c 9B69     		ldr	r3, [r3, #24]
 14637 030e 1846     		mov	r0, r3
 14638 0310 FFF7FEFF 		bl	__aeabi_i2d
 14639 0314 4FF00002 		mov	r2, #0
 14640 0318 CC4B     		ldr	r3, .L640
 14641 031a FFF7FEFF 		bl	__aeabi_ddiv
 14642 031e 0346     		mov	r3, r0
 14643 0320 0C46     		mov	r4, r1
 14644 0322 07F11C00 		add	r0, r7, #28
 14645 0326 1A46     		mov	r2, r3
 14646 0328 2346     		mov	r3, r4
 14647 032a C949     		ldr	r1, .L640+4
 14648 032c FFF7FEFF 		bl	sprintf
2223:..\src/command_processing.c ****             strcat(info_string, str);
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 336


 14649              		.loc 1 2223 0
 14650 0330 07F11C03 		add	r3, r7, #28
 14651 0334 1946     		mov	r1, r3
 14652 0336 7869     		ldr	r0, [r7, #20]
 14653 0338 FFF7FEFF 		bl	strcat
2224:..\src/command_processing.c ****             sprintf(str, "I -> %f  ", ((double) MOT->k_i_dl / 65536));
 14654              		.loc 1 2224 0
 14655 033c D7F88430 		ldr	r3, [r7, #132]
 14656 0340 DB69     		ldr	r3, [r3, #28]
 14657 0342 1846     		mov	r0, r3
 14658 0344 FFF7FEFF 		bl	__aeabi_i2d
 14659 0348 4FF00002 		mov	r2, #0
 14660 034c BF4B     		ldr	r3, .L640
 14661 034e FFF7FEFF 		bl	__aeabi_ddiv
 14662 0352 0346     		mov	r3, r0
 14663 0354 0C46     		mov	r4, r1
 14664 0356 07F11C00 		add	r0, r7, #28
 14665 035a 1A46     		mov	r2, r3
 14666 035c 2346     		mov	r3, r4
 14667 035e BD49     		ldr	r1, .L640+8
 14668 0360 FFF7FEFF 		bl	sprintf
2225:..\src/command_processing.c ****             strcat(info_string, str);
 14669              		.loc 1 2225 0
 14670 0364 07F11C03 		add	r3, r7, #28
 14671 0368 1946     		mov	r1, r3
 14672 036a 7869     		ldr	r0, [r7, #20]
 14673 036c FFF7FEFF 		bl	strcat
2226:..\src/command_processing.c ****             sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_dl / 65536));
 14674              		.loc 1 2226 0
 14675 0370 D7F88430 		ldr	r3, [r7, #132]
 14676 0374 1B6A     		ldr	r3, [r3, #32]
 14677 0376 1846     		mov	r0, r3
 14678 0378 FFF7FEFF 		bl	__aeabi_i2d
 14679 037c 4FF00002 		mov	r2, #0
 14680 0380 B24B     		ldr	r3, .L640
 14681 0382 FFF7FEFF 		bl	__aeabi_ddiv
 14682 0386 0346     		mov	r3, r0
 14683 0388 0C46     		mov	r4, r1
 14684 038a 07F11C00 		add	r0, r7, #28
 14685 038e 1A46     		mov	r2, r3
 14686 0390 2346     		mov	r3, r4
 14687 0392 B149     		ldr	r1, .L640+12
 14688 0394 FFF7FEFF 		bl	sprintf
2227:..\src/command_processing.c ****             strcat(info_string, str);
 14689              		.loc 1 2227 0
 14690 0398 07F11C03 		add	r3, r7, #28
 14691 039c 1946     		mov	r1, r3
 14692 039e 7869     		ldr	r0, [r7, #20]
 14693 03a0 FFF7FEFF 		bl	strcat
 14694              	.L581:
2228:..\src/command_processing.c ****         }
2229:..\src/command_processing.c **** 
2230:..\src/command_processing.c ****         strcat(info_string, "Current PID: ");
 14695              		.loc 1 2230 0
 14696 03a4 7869     		ldr	r0, [r7, #20]
 14697 03a6 FFF7FEFF 		bl	strlen
 14698 03aa 0346     		mov	r3, r0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 337


 14699 03ac 1A46     		mov	r2, r3
 14700 03ae 7B69     		ldr	r3, [r7, #20]
 14701 03b0 1344     		add	r3, r3, r2
 14702 03b2 AA4A     		ldr	r2, .L640+16
 14703 03b4 1C46     		mov	r4, r3
 14704 03b6 1346     		mov	r3, r2
 14705 03b8 07CB     		ldmia	r3!, {r0, r1, r2}
 14706 03ba 2060     		str	r0, [r4]	@ unaligned
 14707 03bc 6160     		str	r1, [r4, #4]	@ unaligned
 14708 03be A260     		str	r2, [r4, #8]	@ unaligned
 14709 03c0 1B88     		ldrh	r3, [r3]	@ unaligned
 14710 03c2 A381     		strh	r3, [r4, #12]	@ unaligned
2231:..\src/command_processing.c ****         if(MOT->control_mode != CURR_AND_POS_CONTROL) {
 14711              		.loc 1 2231 0
 14712 03c4 D7F88430 		ldr	r3, [r7, #132]
 14713 03c8 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 14714 03cc 032B     		cmp	r3, #3
 14715 03ce 4ED0     		beq	.L582
2232:..\src/command_processing.c ****             sprintf(str, "P -> %f  ", ((double) MOT->k_p_c / 65536));
 14716              		.loc 1 2232 0
 14717 03d0 D7F88430 		ldr	r3, [r7, #132]
 14718 03d4 DB68     		ldr	r3, [r3, #12]
 14719 03d6 1846     		mov	r0, r3
 14720 03d8 FFF7FEFF 		bl	__aeabi_i2d
 14721 03dc 4FF00002 		mov	r2, #0
 14722 03e0 9A4B     		ldr	r3, .L640
 14723 03e2 FFF7FEFF 		bl	__aeabi_ddiv
 14724 03e6 0346     		mov	r3, r0
 14725 03e8 0C46     		mov	r4, r1
 14726 03ea 07F11C00 		add	r0, r7, #28
 14727 03ee 1A46     		mov	r2, r3
 14728 03f0 2346     		mov	r3, r4
 14729 03f2 9749     		ldr	r1, .L640+4
 14730 03f4 FFF7FEFF 		bl	sprintf
2233:..\src/command_processing.c ****             strcat(info_string, str);
 14731              		.loc 1 2233 0
 14732 03f8 07F11C03 		add	r3, r7, #28
 14733 03fc 1946     		mov	r1, r3
 14734 03fe 7869     		ldr	r0, [r7, #20]
 14735 0400 FFF7FEFF 		bl	strcat
2234:..\src/command_processing.c ****             sprintf(str, "I -> %f  ", ((double) MOT->k_i_c / 65536));
 14736              		.loc 1 2234 0
 14737 0404 D7F88430 		ldr	r3, [r7, #132]
 14738 0408 1B69     		ldr	r3, [r3, #16]
 14739 040a 1846     		mov	r0, r3
 14740 040c FFF7FEFF 		bl	__aeabi_i2d
 14741 0410 4FF00002 		mov	r2, #0
 14742 0414 8D4B     		ldr	r3, .L640
 14743 0416 FFF7FEFF 		bl	__aeabi_ddiv
 14744 041a 0346     		mov	r3, r0
 14745 041c 0C46     		mov	r4, r1
 14746 041e 07F11C00 		add	r0, r7, #28
 14747 0422 1A46     		mov	r2, r3
 14748 0424 2346     		mov	r3, r4
 14749 0426 8B49     		ldr	r1, .L640+8
 14750 0428 FFF7FEFF 		bl	sprintf
2235:..\src/command_processing.c ****             strcat(info_string, str);
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 338


 14751              		.loc 1 2235 0
 14752 042c 07F11C03 		add	r3, r7, #28
 14753 0430 1946     		mov	r1, r3
 14754 0432 7869     		ldr	r0, [r7, #20]
 14755 0434 FFF7FEFF 		bl	strcat
2236:..\src/command_processing.c ****             sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_c / 65536));
 14756              		.loc 1 2236 0
 14757 0438 D7F88430 		ldr	r3, [r7, #132]
 14758 043c 5B69     		ldr	r3, [r3, #20]
 14759 043e 1846     		mov	r0, r3
 14760 0440 FFF7FEFF 		bl	__aeabi_i2d
 14761 0444 4FF00002 		mov	r2, #0
 14762 0448 804B     		ldr	r3, .L640
 14763 044a FFF7FEFF 		bl	__aeabi_ddiv
 14764 044e 0346     		mov	r3, r0
 14765 0450 0C46     		mov	r4, r1
 14766 0452 07F11C00 		add	r0, r7, #28
 14767 0456 1A46     		mov	r2, r3
 14768 0458 2346     		mov	r3, r4
 14769 045a 7F49     		ldr	r1, .L640+12
 14770 045c FFF7FEFF 		bl	sprintf
2237:..\src/command_processing.c ****             strcat(info_string, str);
 14771              		.loc 1 2237 0
 14772 0460 07F11C03 		add	r3, r7, #28
 14773 0464 1946     		mov	r1, r3
 14774 0466 7869     		ldr	r0, [r7, #20]
 14775 0468 FFF7FEFF 		bl	strcat
 14776 046c 4DE0     		b	.L583
 14777              	.L582:
2238:..\src/command_processing.c **** 
2239:..\src/command_processing.c ****         }
2240:..\src/command_processing.c ****         else {
2241:..\src/command_processing.c ****             sprintf(str, "P -> %f  ", ((double) MOT->k_p_c_dl / 65536));
 14778              		.loc 1 2241 0
 14779 046e D7F88430 		ldr	r3, [r7, #132]
 14780 0472 5B6A     		ldr	r3, [r3, #36]
 14781 0474 1846     		mov	r0, r3
 14782 0476 FFF7FEFF 		bl	__aeabi_i2d
 14783 047a 4FF00002 		mov	r2, #0
 14784 047e 734B     		ldr	r3, .L640
 14785 0480 FFF7FEFF 		bl	__aeabi_ddiv
 14786 0484 0346     		mov	r3, r0
 14787 0486 0C46     		mov	r4, r1
 14788 0488 07F11C00 		add	r0, r7, #28
 14789 048c 1A46     		mov	r2, r3
 14790 048e 2346     		mov	r3, r4
 14791 0490 6F49     		ldr	r1, .L640+4
 14792 0492 FFF7FEFF 		bl	sprintf
2242:..\src/command_processing.c ****             strcat(info_string, str);
 14793              		.loc 1 2242 0
 14794 0496 07F11C03 		add	r3, r7, #28
 14795 049a 1946     		mov	r1, r3
 14796 049c 7869     		ldr	r0, [r7, #20]
 14797 049e FFF7FEFF 		bl	strcat
2243:..\src/command_processing.c ****             sprintf(str, "I -> %f  ", ((double) MOT->k_i_c_dl / 65536));
 14798              		.loc 1 2243 0
 14799 04a2 D7F88430 		ldr	r3, [r7, #132]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 339


 14800 04a6 9B6A     		ldr	r3, [r3, #40]
 14801 04a8 1846     		mov	r0, r3
 14802 04aa FFF7FEFF 		bl	__aeabi_i2d
 14803 04ae 4FF00002 		mov	r2, #0
 14804 04b2 664B     		ldr	r3, .L640
 14805 04b4 FFF7FEFF 		bl	__aeabi_ddiv
 14806 04b8 0346     		mov	r3, r0
 14807 04ba 0C46     		mov	r4, r1
 14808 04bc 07F11C00 		add	r0, r7, #28
 14809 04c0 1A46     		mov	r2, r3
 14810 04c2 2346     		mov	r3, r4
 14811 04c4 6349     		ldr	r1, .L640+8
 14812 04c6 FFF7FEFF 		bl	sprintf
2244:..\src/command_processing.c ****             strcat(info_string, str);
 14813              		.loc 1 2244 0
 14814 04ca 07F11C03 		add	r3, r7, #28
 14815 04ce 1946     		mov	r1, r3
 14816 04d0 7869     		ldr	r0, [r7, #20]
 14817 04d2 FFF7FEFF 		bl	strcat
2245:..\src/command_processing.c ****             sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_c_dl / 65536));
 14818              		.loc 1 2245 0
 14819 04d6 D7F88430 		ldr	r3, [r7, #132]
 14820 04da DB6A     		ldr	r3, [r3, #44]
 14821 04dc 1846     		mov	r0, r3
 14822 04de FFF7FEFF 		bl	__aeabi_i2d
 14823 04e2 4FF00002 		mov	r2, #0
 14824 04e6 594B     		ldr	r3, .L640
 14825 04e8 FFF7FEFF 		bl	__aeabi_ddiv
 14826 04ec 0346     		mov	r3, r0
 14827 04ee 0C46     		mov	r4, r1
 14828 04f0 07F11C00 		add	r0, r7, #28
 14829 04f4 1A46     		mov	r2, r3
 14830 04f6 2346     		mov	r3, r4
 14831 04f8 5749     		ldr	r1, .L640+12
 14832 04fa FFF7FEFF 		bl	sprintf
2246:..\src/command_processing.c ****             strcat(info_string, str);
 14833              		.loc 1 2246 0
 14834 04fe 07F11C03 		add	r3, r7, #28
 14835 0502 1946     		mov	r1, r3
 14836 0504 7869     		ldr	r0, [r7, #20]
 14837 0506 FFF7FEFF 		bl	strcat
 14838              	.L583:
2247:..\src/command_processing.c ****         }
2248:..\src/command_processing.c ****         if (MOT->activ == 0x01)
 14839              		.loc 1 2248 0
 14840 050a D7F88430 		ldr	r3, [r7, #132]
 14841 050e 93F83030 		ldrb	r3, [r3, #48]	@ zero_extendqisi2
 14842 0512 012B     		cmp	r3, #1
 14843 0514 14D1     		bne	.L584
2249:..\src/command_processing.c ****             strcat(info_string, "Startup activation: YES\r\n");
 14844              		.loc 1 2249 0
 14845 0516 7869     		ldr	r0, [r7, #20]
 14846 0518 FFF7FEFF 		bl	strlen
 14847 051c 0346     		mov	r3, r0
 14848 051e 1A46     		mov	r2, r3
 14849 0520 7B69     		ldr	r3, [r7, #20]
 14850 0522 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 340


 14851 0524 4E4A     		ldr	r2, .L640+20
 14852 0526 1D46     		mov	r5, r3
 14853 0528 1446     		mov	r4, r2
 14854 052a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14855 052c 2860     		str	r0, [r5]	@ unaligned
 14856 052e 6960     		str	r1, [r5, #4]	@ unaligned
 14857 0530 AA60     		str	r2, [r5, #8]	@ unaligned
 14858 0532 EB60     		str	r3, [r5, #12]	@ unaligned
 14859 0534 03CC     		ldmia	r4!, {r0, r1}
 14860 0536 2861     		str	r0, [r5, #16]	@ unaligned
 14861 0538 6961     		str	r1, [r5, #20]	@ unaligned
 14862 053a 2388     		ldrh	r3, [r4]	@ unaligned
 14863 053c 2B83     		strh	r3, [r5, #24]	@ unaligned
 14864 053e 13E0     		b	.L585
 14865              	.L584:
2250:..\src/command_processing.c ****         else
2251:..\src/command_processing.c ****             strcat(info_string, "Startup activation: NO\r\n");
 14866              		.loc 1 2251 0
 14867 0540 7869     		ldr	r0, [r7, #20]
 14868 0542 FFF7FEFF 		bl	strlen
 14869 0546 0346     		mov	r3, r0
 14870 0548 1A46     		mov	r2, r3
 14871 054a 7B69     		ldr	r3, [r7, #20]
 14872 054c 1344     		add	r3, r3, r2
 14873 054e 454A     		ldr	r2, .L640+24
 14874 0550 1D46     		mov	r5, r3
 14875 0552 1446     		mov	r4, r2
 14876 0554 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14877 0556 2860     		str	r0, [r5]	@ unaligned
 14878 0558 6960     		str	r1, [r5, #4]	@ unaligned
 14879 055a AA60     		str	r2, [r5, #8]	@ unaligned
 14880 055c EB60     		str	r3, [r5, #12]	@ unaligned
 14881 055e 03CC     		ldmia	r4!, {r0, r1}
 14882 0560 2861     		str	r0, [r5, #16]	@ unaligned
 14883 0562 6961     		str	r1, [r5, #20]	@ unaligned
 14884 0564 2378     		ldrb	r3, [r4]
 14885 0566 2B76     		strb	r3, [r5, #24]
 14886              	.L585:
2252:..\src/command_processing.c **** 
2253:..\src/command_processing.c ****         switch(MOT->input_mode) {
 14887              		.loc 1 2253 0
 14888 0568 D7F88430 		ldr	r3, [r7, #132]
 14889 056c 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
 14890 0570 072B     		cmp	r3, #7
 14891 0572 00F2EA80 		bhi	.L586
 14892 0576 01A2     		adr	r2, .L588
 14893 0578 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 14894              		.p2align 2
 14895              	.L588:
 14896 057c 9D050000 		.word	.L587+1
 14897 0580 C1050000 		.word	.L589+1
 14898 0584 E9050000 		.word	.L590+1
 14899 0588 1B060000 		.word	.L591+1
 14900 058c 79060000 		.word	.L592+1
 14901 0590 A7060000 		.word	.L593+1
 14902 0594 D7060000 		.word	.L594+1
 14903 0598 05070000 		.word	.L595+1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 341


 14904              		.p2align 1
 14905              	.L587:
2254:..\src/command_processing.c ****             case INPUT_MODE_EXTERNAL:
2255:..\src/command_processing.c ****                 strcat(info_string, "Input mode: USB\r\n");
 14906              		.loc 1 2255 0
 14907 059c 7869     		ldr	r0, [r7, #20]
 14908 059e FFF7FEFF 		bl	strlen
 14909 05a2 0346     		mov	r3, r0
 14910 05a4 1A46     		mov	r2, r3
 14911 05a6 7B69     		ldr	r3, [r7, #20]
 14912 05a8 1344     		add	r3, r3, r2
 14913 05aa 2F4A     		ldr	r2, .L640+28
 14914 05ac 1D46     		mov	r5, r3
 14915 05ae 1446     		mov	r4, r2
 14916 05b0 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14917 05b2 2860     		str	r0, [r5]	@ unaligned
 14918 05b4 6960     		str	r1, [r5, #4]	@ unaligned
 14919 05b6 AA60     		str	r2, [r5, #8]	@ unaligned
 14920 05b8 EB60     		str	r3, [r5, #12]	@ unaligned
 14921 05ba 2388     		ldrh	r3, [r4]	@ unaligned
 14922 05bc 2B82     		strh	r3, [r5, #16]	@ unaligned
2256:..\src/command_processing.c ****                 break;
 14923              		.loc 1 2256 0
 14924 05be C4E0     		b	.L586
 14925              	.L589:
2257:..\src/command_processing.c ****             case INPUT_MODE_ENCODER3:
2258:..\src/command_processing.c ****                 strcat(info_string, "Input mode: Handle\r\n");
 14926              		.loc 1 2258 0
 14927 05c0 7869     		ldr	r0, [r7, #20]
 14928 05c2 FFF7FEFF 		bl	strlen
 14929 05c6 0346     		mov	r3, r0
 14930 05c8 1A46     		mov	r2, r3
 14931 05ca 7B69     		ldr	r3, [r7, #20]
 14932 05cc 1344     		add	r3, r3, r2
 14933 05ce 274A     		ldr	r2, .L640+32
 14934 05d0 1D46     		mov	r5, r3
 14935 05d2 1446     		mov	r4, r2
 14936 05d4 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14937 05d6 2860     		str	r0, [r5]	@ unaligned
 14938 05d8 6960     		str	r1, [r5, #4]	@ unaligned
 14939 05da AA60     		str	r2, [r5, #8]	@ unaligned
 14940 05dc EB60     		str	r3, [r5, #12]	@ unaligned
 14941 05de 2068     		ldr	r0, [r4]	@ unaligned
 14942 05e0 2861     		str	r0, [r5, #16]	@ unaligned
 14943 05e2 2379     		ldrb	r3, [r4, #4]
 14944 05e4 2B75     		strb	r3, [r5, #20]
2259:..\src/command_processing.c ****                 break;
 14945              		.loc 1 2259 0
 14946 05e6 B0E0     		b	.L586
 14947              	.L590:
2260:..\src/command_processing.c ****             case INPUT_MODE_EMG_PROPORTIONAL:
2261:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG proportional\r\n");
 14948              		.loc 1 2261 0
 14949 05e8 7869     		ldr	r0, [r7, #20]
 14950 05ea FFF7FEFF 		bl	strlen
 14951 05ee 0346     		mov	r3, r0
 14952 05f0 1A46     		mov	r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 342


 14953 05f2 7B69     		ldr	r3, [r7, #20]
 14954 05f4 1344     		add	r3, r3, r2
 14955 05f6 1E4A     		ldr	r2, .L640+36
 14956 05f8 1D46     		mov	r5, r3
 14957 05fa 1446     		mov	r4, r2
 14958 05fc 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14959 05fe 2860     		str	r0, [r5]	@ unaligned
 14960 0600 6960     		str	r1, [r5, #4]	@ unaligned
 14961 0602 AA60     		str	r2, [r5, #8]	@ unaligned
 14962 0604 EB60     		str	r3, [r5, #12]	@ unaligned
 14963 0606 07CC     		ldmia	r4!, {r0, r1, r2}
 14964 0608 2861     		str	r0, [r5, #16]	@ unaligned
 14965 060a 6961     		str	r1, [r5, #20]	@ unaligned
 14966 060c AA61     		str	r2, [r5, #24]	@ unaligned
 14967 060e 2388     		ldrh	r3, [r4]	@ unaligned
 14968 0610 A278     		ldrb	r2, [r4, #2]
 14969 0612 AB83     		strh	r3, [r5, #28]	@ unaligned
 14970 0614 1346     		mov	r3, r2
 14971 0616 AB77     		strb	r3, [r5, #30]
2262:..\src/command_processing.c ****                 break;
 14972              		.loc 1 2262 0
 14973 0618 97E0     		b	.L586
 14974              	.L591:
2263:..\src/command_processing.c ****             case INPUT_MODE_EMG_INTEGRAL:
2264:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG integral\r\n");
 14975              		.loc 1 2264 0
 14976 061a 7869     		ldr	r0, [r7, #20]
 14977 061c FFF7FEFF 		bl	strlen
 14978 0620 0346     		mov	r3, r0
 14979 0622 1A46     		mov	r2, r3
 14980 0624 7B69     		ldr	r3, [r7, #20]
 14981 0626 1344     		add	r3, r3, r2
 14982 0628 124A     		ldr	r2, .L640+40
 14983 062a 1D46     		mov	r5, r3
 14984 062c 1446     		mov	r4, r2
 14985 062e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14986 0630 2860     		str	r0, [r5]	@ unaligned
 14987 0632 6960     		str	r1, [r5, #4]	@ unaligned
 14988 0634 AA60     		str	r2, [r5, #8]	@ unaligned
 14989 0636 EB60     		str	r3, [r5, #12]	@ unaligned
 14990 0638 03CC     		ldmia	r4!, {r0, r1}
 14991 063a 2861     		str	r0, [r5, #16]	@ unaligned
 14992 063c 6961     		str	r1, [r5, #20]	@ unaligned
 14993 063e 2388     		ldrh	r3, [r4]	@ unaligned
 14994 0640 A278     		ldrb	r2, [r4, #2]
 14995 0642 2B83     		strh	r3, [r5, #24]	@ unaligned
 14996 0644 1346     		mov	r3, r2
 14997 0646 AB76     		strb	r3, [r5, #26]
2265:..\src/command_processing.c ****                 break;
 14998              		.loc 1 2265 0
 14999 0648 7FE0     		b	.L586
 15000              	.L641:
 15001 064a 00BF     		.align	2
 15002              	.L640:
 15003 064c 0000F040 		.word	1089470464
 15004 0650 6C140000 		.word	.LC192
 15005 0654 78140000 		.word	.LC193
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 343


 15006 0658 84140000 		.word	.LC194
 15007 065c E81C0000 		.word	.LC271
 15008 0660 AC140000 		.word	.LC196
 15009 0664 C8140000 		.word	.LC197
 15010 0668 E4140000 		.word	.LC198
 15011 066c F8140000 		.word	.LC199
 15012 0670 10150000 		.word	.LC200
 15013 0674 30150000 		.word	.LC201
 15014              	.L592:
2266:..\src/command_processing.c ****             case INPUT_MODE_EMG_FCFS:
2267:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG FCFS\r\n");
 15015              		.loc 1 2267 0
 15016 0678 7869     		ldr	r0, [r7, #20]
 15017 067a FFF7FEFF 		bl	strlen
 15018 067e 0346     		mov	r3, r0
 15019 0680 1A46     		mov	r2, r3
 15020 0682 7B69     		ldr	r3, [r7, #20]
 15021 0684 1344     		add	r3, r3, r2
 15022 0686 BA4A     		ldr	r2, .L642
 15023 0688 1C46     		mov	r4, r3
 15024 068a 1546     		mov	r5, r2
 15025 068c 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 15026 068e 2060     		str	r0, [r4]	@ unaligned
 15027 0690 6160     		str	r1, [r4, #4]	@ unaligned
 15028 0692 A260     		str	r2, [r4, #8]	@ unaligned
 15029 0694 E360     		str	r3, [r4, #12]	@ unaligned
 15030 0696 2868     		ldr	r0, [r5]	@ unaligned
 15031 0698 2061     		str	r0, [r4, #16]	@ unaligned
 15032 069a AB88     		ldrh	r3, [r5, #4]	@ unaligned
 15033 069c AA79     		ldrb	r2, [r5, #6]
 15034 069e A382     		strh	r3, [r4, #20]	@ unaligned
 15035 06a0 1346     		mov	r3, r2
 15036 06a2 A375     		strb	r3, [r4, #22]
2268:..\src/command_processing.c ****                 break;
 15037              		.loc 1 2268 0
 15038 06a4 51E0     		b	.L586
 15039              	.L593:
2269:..\src/command_processing.c ****             case INPUT_MODE_EMG_FCFS_ADV:
2270:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG FCFS ADV\r\n");
 15040              		.loc 1 2270 0
 15041 06a6 7869     		ldr	r0, [r7, #20]
 15042 06a8 FFF7FEFF 		bl	strlen
 15043 06ac 0346     		mov	r3, r0
 15044 06ae 1A46     		mov	r2, r3
 15045 06b0 7B69     		ldr	r3, [r7, #20]
 15046 06b2 1344     		add	r3, r3, r2
 15047 06b4 AF4A     		ldr	r2, .L642+4
 15048 06b6 1D46     		mov	r5, r3
 15049 06b8 1446     		mov	r4, r2
 15050 06ba 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15051 06bc 2860     		str	r0, [r5]	@ unaligned
 15052 06be 6960     		str	r1, [r5, #4]	@ unaligned
 15053 06c0 AA60     		str	r2, [r5, #8]	@ unaligned
 15054 06c2 EB60     		str	r3, [r5, #12]	@ unaligned
 15055 06c4 03CC     		ldmia	r4!, {r0, r1}
 15056 06c6 2861     		str	r0, [r5, #16]	@ unaligned
 15057 06c8 6961     		str	r1, [r5, #20]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 344


 15058 06ca 2388     		ldrh	r3, [r4]	@ unaligned
 15059 06cc A278     		ldrb	r2, [r4, #2]
 15060 06ce 2B83     		strh	r3, [r5, #24]	@ unaligned
 15061 06d0 1346     		mov	r3, r2
 15062 06d2 AB76     		strb	r3, [r5, #26]
2271:..\src/command_processing.c ****                 break;
 15063              		.loc 1 2271 0
 15064 06d4 39E0     		b	.L586
 15065              	.L594:
2272:..\src/command_processing.c ****             case INPUT_MODE_JOYSTICK:
2273:..\src/command_processing.c ****                 strcat(info_string, "Input mode: Joystick\r\n");
 15066              		.loc 1 2273 0
 15067 06d6 7869     		ldr	r0, [r7, #20]
 15068 06d8 FFF7FEFF 		bl	strlen
 15069 06dc 0346     		mov	r3, r0
 15070 06de 1A46     		mov	r2, r3
 15071 06e0 7B69     		ldr	r3, [r7, #20]
 15072 06e2 1344     		add	r3, r3, r2
 15073 06e4 A44A     		ldr	r2, .L642+8
 15074 06e6 1C46     		mov	r4, r3
 15075 06e8 1546     		mov	r5, r2
 15076 06ea 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 15077 06ec 2060     		str	r0, [r4]	@ unaligned
 15078 06ee 6160     		str	r1, [r4, #4]	@ unaligned
 15079 06f0 A260     		str	r2, [r4, #8]	@ unaligned
 15080 06f2 E360     		str	r3, [r4, #12]	@ unaligned
 15081 06f4 2868     		ldr	r0, [r5]	@ unaligned
 15082 06f6 2061     		str	r0, [r4, #16]	@ unaligned
 15083 06f8 AB88     		ldrh	r3, [r5, #4]	@ unaligned
 15084 06fa AA79     		ldrb	r2, [r5, #6]
 15085 06fc A382     		strh	r3, [r4, #20]	@ unaligned
 15086 06fe 1346     		mov	r3, r2
 15087 0700 A375     		strb	r3, [r4, #22]
2274:..\src/command_processing.c ****                 break;
 15088              		.loc 1 2274 0
 15089 0702 22E0     		b	.L586
 15090              	.L595:
2275:..\src/command_processing.c ****             case INPUT_MODE_EMG_PROPORTIONAL_NC:
2276:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG proportional Normally Closed\r\n");
 15091              		.loc 1 2276 0
 15092 0704 7869     		ldr	r0, [r7, #20]
 15093 0706 FFF7FEFF 		bl	strlen
 15094 070a 0346     		mov	r3, r0
 15095 070c 1A46     		mov	r2, r3
 15096 070e 7B69     		ldr	r3, [r7, #20]
 15097 0710 1344     		add	r3, r3, r2
 15098 0712 9A4A     		ldr	r2, .L642+12
 15099 0714 1546     		mov	r5, r2
 15100 0716 9E46     		mov	lr, r3
 15101 0718 05F1200C 		add	ip, r5, #32
 15102              	.L596:
 15103 071c 7446     		mov	r4, lr
 15104 071e 2E46     		mov	r6, r5
 15105 0720 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 15106 0722 2060     		str	r0, [r4]	@ unaligned
 15107 0724 6160     		str	r1, [r4, #4]	@ unaligned
 15108 0726 A260     		str	r2, [r4, #8]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 345


 15109 0728 E360     		str	r3, [r4, #12]	@ unaligned
 15110 072a 1035     		adds	r5, r5, #16
 15111 072c 0EF1100E 		add	lr, lr, #16
 15112 0730 6545     		cmp	r5, ip
 15113 0732 F3D1     		bne	.L596
 15114 0734 7446     		mov	r4, lr
 15115 0736 2B46     		mov	r3, r5
 15116 0738 07CB     		ldmia	r3!, {r0, r1, r2}
 15117 073a 2060     		str	r0, [r4]	@ unaligned
 15118 073c 6160     		str	r1, [r4, #4]	@ unaligned
 15119 073e A260     		str	r2, [r4, #8]	@ unaligned
 15120 0740 1A88     		ldrh	r2, [r3]	@ unaligned
 15121 0742 9B78     		ldrb	r3, [r3, #2]
 15122 0744 A281     		strh	r2, [r4, #12]	@ unaligned
 15123 0746 A373     		strb	r3, [r4, #14]
2277:..\src/command_processing.c ****                 break;
 15124              		.loc 1 2277 0
 15125 0748 00BF     		nop
 15126              	.L586:
2278:..\src/command_processing.c ****         }
2279:..\src/command_processing.c **** 
2280:..\src/command_processing.c ****         switch(MOT->control_mode) {
 15127              		.loc 1 2280 0
 15128 074a D7F88430 		ldr	r3, [r7, #132]
 15129 074e 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 15130 0752 032B     		cmp	r3, #3
 15131 0754 63D8     		bhi	.L636
 15132 0756 01A2     		adr	r2, .L599
 15133 0758 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 15134              		.p2align 2
 15135              	.L599:
 15136 075c 6D070000 		.word	.L598+1
 15137 0760 97070000 		.word	.L600+1
 15138 0764 BB070000 		.word	.L601+1
 15139 0768 E1070000 		.word	.L602+1
 15140              		.p2align 1
 15141              	.L598:
2281:..\src/command_processing.c ****             case CONTROL_ANGLE:
2282:..\src/command_processing.c ****                 strcat(info_string, "Control mode: Position\r\n");
 15142              		.loc 1 2282 0
 15143 076c 7869     		ldr	r0, [r7, #20]
 15144 076e FFF7FEFF 		bl	strlen
 15145 0772 0346     		mov	r3, r0
 15146 0774 1A46     		mov	r2, r3
 15147 0776 7B69     		ldr	r3, [r7, #20]
 15148 0778 1344     		add	r3, r3, r2
 15149 077a 814A     		ldr	r2, .L642+16
 15150 077c 1D46     		mov	r5, r3
 15151 077e 1446     		mov	r4, r2
 15152 0780 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15153 0782 2860     		str	r0, [r5]	@ unaligned
 15154 0784 6960     		str	r1, [r5, #4]	@ unaligned
 15155 0786 AA60     		str	r2, [r5, #8]	@ unaligned
 15156 0788 EB60     		str	r3, [r5, #12]	@ unaligned
 15157 078a 03CC     		ldmia	r4!, {r0, r1}
 15158 078c 2861     		str	r0, [r5, #16]	@ unaligned
 15159 078e 6961     		str	r1, [r5, #20]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 346


 15160 0790 2378     		ldrb	r3, [r4]
 15161 0792 2B76     		strb	r3, [r5, #24]
2283:..\src/command_processing.c ****                 break;
 15162              		.loc 1 2283 0
 15163 0794 44E0     		b	.L603
 15164              	.L600:
2284:..\src/command_processing.c ****             case CONTROL_PWM:
2285:..\src/command_processing.c ****                 strcat(info_string, "Control mode: PWM\r\n");
 15165              		.loc 1 2285 0
 15166 0796 7869     		ldr	r0, [r7, #20]
 15167 0798 FFF7FEFF 		bl	strlen
 15168 079c 0346     		mov	r3, r0
 15169 079e 1A46     		mov	r2, r3
 15170 07a0 7B69     		ldr	r3, [r7, #20]
 15171 07a2 1344     		add	r3, r3, r2
 15172 07a4 774A     		ldr	r2, .L642+20
 15173 07a6 1D46     		mov	r5, r3
 15174 07a8 1446     		mov	r4, r2
 15175 07aa 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15176 07ac 2860     		str	r0, [r5]	@ unaligned
 15177 07ae 6960     		str	r1, [r5, #4]	@ unaligned
 15178 07b0 AA60     		str	r2, [r5, #8]	@ unaligned
 15179 07b2 EB60     		str	r3, [r5, #12]	@ unaligned
 15180 07b4 2068     		ldr	r0, [r4]	@ unaligned
 15181 07b6 2861     		str	r0, [r5, #16]	@ unaligned
2286:..\src/command_processing.c ****                 break;
 15182              		.loc 1 2286 0
 15183 07b8 32E0     		b	.L603
 15184              	.L601:
2287:..\src/command_processing.c ****             case CONTROL_CURRENT:
2288:..\src/command_processing.c ****                 strcat(info_string, "Control mode: Current\r\n");
 15185              		.loc 1 2288 0
 15186 07ba 7869     		ldr	r0, [r7, #20]
 15187 07bc FFF7FEFF 		bl	strlen
 15188 07c0 0346     		mov	r3, r0
 15189 07c2 1A46     		mov	r2, r3
 15190 07c4 7B69     		ldr	r3, [r7, #20]
 15191 07c6 1344     		add	r3, r3, r2
 15192 07c8 6F4A     		ldr	r2, .L642+24
 15193 07ca 1D46     		mov	r5, r3
 15194 07cc 1446     		mov	r4, r2
 15195 07ce 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15196 07d0 2860     		str	r0, [r5]	@ unaligned
 15197 07d2 6960     		str	r1, [r5, #4]	@ unaligned
 15198 07d4 AA60     		str	r2, [r5, #8]	@ unaligned
 15199 07d6 EB60     		str	r3, [r5, #12]	@ unaligned
 15200 07d8 03CC     		ldmia	r4!, {r0, r1}
 15201 07da 2861     		str	r0, [r5, #16]	@ unaligned
 15202 07dc 6961     		str	r1, [r5, #20]	@ unaligned
2289:..\src/command_processing.c ****                 break;
 15203              		.loc 1 2289 0
 15204 07de 1FE0     		b	.L603
 15205              	.L602:
2290:..\src/command_processing.c ****             case CURR_AND_POS_CONTROL:
2291:..\src/command_processing.c ****                 strcat(info_string, "Control mode: Position and Current\r\n");
 15206              		.loc 1 2291 0
 15207 07e0 7869     		ldr	r0, [r7, #20]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 347


 15208 07e2 FFF7FEFF 		bl	strlen
 15209 07e6 0346     		mov	r3, r0
 15210 07e8 1A46     		mov	r2, r3
 15211 07ea 7B69     		ldr	r3, [r7, #20]
 15212 07ec 1344     		add	r3, r3, r2
 15213 07ee 674A     		ldr	r2, .L642+28
 15214 07f0 1446     		mov	r4, r2
 15215 07f2 9E46     		mov	lr, r3
 15216 07f4 04F1200C 		add	ip, r4, #32
 15217              	.L604:
 15218 07f8 7546     		mov	r5, lr
 15219 07fa 2646     		mov	r6, r4
 15220 07fc 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 15221 07fe 2860     		str	r0, [r5]	@ unaligned
 15222 0800 6960     		str	r1, [r5, #4]	@ unaligned
 15223 0802 AA60     		str	r2, [r5, #8]	@ unaligned
 15224 0804 EB60     		str	r3, [r5, #12]	@ unaligned
 15225 0806 1034     		adds	r4, r4, #16
 15226 0808 0EF1100E 		add	lr, lr, #16
 15227 080c 6445     		cmp	r4, ip
 15228 080e F3D1     		bne	.L604
 15229 0810 7346     		mov	r3, lr
 15230 0812 2246     		mov	r2, r4
 15231 0814 1068     		ldr	r0, [r2]	@ unaligned
 15232 0816 1860     		str	r0, [r3]	@ unaligned
 15233 0818 1279     		ldrb	r2, [r2, #4]
 15234 081a 1A71     		strb	r2, [r3, #4]
2292:..\src/command_processing.c ****                 break;
 15235              		.loc 1 2292 0
 15236 081c 00E0     		b	.L603
 15237              	.L636:
2293:..\src/command_processing.c ****             default:
2294:..\src/command_processing.c ****                 break;
 15238              		.loc 1 2294 0
 15239 081e 00BF     		nop
 15240              	.L603:
2295:..\src/command_processing.c ****         }
2296:..\src/command_processing.c **** 
2297:..\src/command_processing.c ****         if (MEM_P->enc[ENC_L].double_encoder_on_off)
 15241              		.loc 1 2297 0
 15242 0820 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 15243 0824 D7F88C10 		ldr	r1, [r7, #140]
 15244 0828 1346     		mov	r3, r2
 15245 082a 5B00     		lsls	r3, r3, #1
 15246 082c 1344     		add	r3, r3, r2
 15247 082e 1B01     		lsls	r3, r3, #4
 15248 0830 0B44     		add	r3, r3, r1
 15249 0832 03F5D873 		add	r3, r3, #432
 15250 0836 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 15251 0838 002B     		cmp	r3, #0
 15252 083a 1CD0     		beq	.L605
2298:..\src/command_processing.c ****             strcat(info_string, "Absolute encoder position: YES\r\n");
 15253              		.loc 1 2298 0
 15254 083c 7869     		ldr	r0, [r7, #20]
 15255 083e FFF7FEFF 		bl	strlen
 15256 0842 0346     		mov	r3, r0
 15257 0844 1A46     		mov	r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 348


 15258 0846 7B69     		ldr	r3, [r7, #20]
 15259 0848 1344     		add	r3, r3, r2
 15260 084a 514A     		ldr	r2, .L642+32
 15261 084c 1446     		mov	r4, r2
 15262 084e 9E46     		mov	lr, r3
 15263 0850 04F1200C 		add	ip, r4, #32
 15264              	.L606:
 15265 0854 7546     		mov	r5, lr
 15266 0856 2646     		mov	r6, r4
 15267 0858 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 15268 085a 2860     		str	r0, [r5]	@ unaligned
 15269 085c 6960     		str	r1, [r5, #4]	@ unaligned
 15270 085e AA60     		str	r2, [r5, #8]	@ unaligned
 15271 0860 EB60     		str	r3, [r5, #12]	@ unaligned
 15272 0862 1034     		adds	r4, r4, #16
 15273 0864 0EF1100E 		add	lr, lr, #16
 15274 0868 6445     		cmp	r4, ip
 15275 086a F3D1     		bne	.L606
 15276 086c 7346     		mov	r3, lr
 15277 086e 2246     		mov	r2, r4
 15278 0870 1278     		ldrb	r2, [r2]
 15279 0872 1A70     		strb	r2, [r3]
 15280 0874 13E0     		b	.L607
 15281              	.L605:
2299:..\src/command_processing.c ****         else
2300:..\src/command_processing.c ****             strcat(info_string, "Absolute encoder position: NO\r\n");
 15282              		.loc 1 2300 0
 15283 0876 7869     		ldr	r0, [r7, #20]
 15284 0878 FFF7FEFF 		bl	strlen
 15285 087c 0346     		mov	r3, r0
 15286 087e 1A46     		mov	r2, r3
 15287 0880 7B69     		ldr	r3, [r7, #20]
 15288 0882 1344     		add	r3, r3, r2
 15289 0884 434A     		ldr	r2, .L642+36
 15290 0886 1C46     		mov	r4, r3
 15291 0888 1546     		mov	r5, r2
 15292 088a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 15293 088c 2060     		str	r0, [r4]	@ unaligned
 15294 088e 6160     		str	r1, [r4, #4]	@ unaligned
 15295 0890 A260     		str	r2, [r4, #8]	@ unaligned
 15296 0892 E360     		str	r3, [r4, #12]	@ unaligned
 15297 0894 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 15298 0896 2061     		str	r0, [r4, #16]	@ unaligned
 15299 0898 6161     		str	r1, [r4, #20]	@ unaligned
 15300 089a A261     		str	r2, [r4, #24]	@ unaligned
 15301 089c E361     		str	r3, [r4, #28]	@ unaligned
 15302              	.L607:
2301:..\src/command_processing.c **** 
2302:..\src/command_processing.c ****         strcat(info_string, "Resolutions: ");
 15303              		.loc 1 2302 0
 15304 089e 7869     		ldr	r0, [r7, #20]
 15305 08a0 FFF7FEFF 		bl	strlen
 15306 08a4 0346     		mov	r3, r0
 15307 08a6 1A46     		mov	r2, r3
 15308 08a8 7B69     		ldr	r3, [r7, #20]
 15309 08aa 1344     		add	r3, r3, r2
 15310 08ac 3A4A     		ldr	r2, .L642+40
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 349


 15311 08ae 1C46     		mov	r4, r3
 15312 08b0 1346     		mov	r3, r2
 15313 08b2 07CB     		ldmia	r3!, {r0, r1, r2}
 15314 08b4 2060     		str	r0, [r4]	@ unaligned
 15315 08b6 6160     		str	r1, [r4, #4]	@ unaligned
 15316 08b8 A260     		str	r2, [r4, #8]	@ unaligned
 15317 08ba 1B88     		ldrh	r3, [r3]	@ unaligned
 15318 08bc A381     		strh	r3, [r4, #12]	@ unaligned
2303:..\src/command_processing.c ****         for (i = 0; i < NUM_OF_SENSORS; ++i) {
 15319              		.loc 1 2303 0
 15320 08be 0023     		movs	r3, #0
 15321 08c0 C7F89430 		str	r3, [r7, #148]
 15322 08c4 30E0     		b	.L608
 15323              	.L610:
2304:..\src/command_processing.c ****             sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 15324              		.loc 1 2304 0
 15325 08c6 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 15326 08ca D7F88C10 		ldr	r1, [r7, #140]
 15327 08ce 1346     		mov	r3, r2
 15328 08d0 5B00     		lsls	r3, r3, #1
 15329 08d2 1344     		add	r3, r3, r2
 15330 08d4 1B01     		lsls	r3, r3, #4
 15331 08d6 CA18     		adds	r2, r1, r3
 15332 08d8 D7F89430 		ldr	r3, [r7, #148]
 15333 08dc 1344     		add	r3, r3, r2
 15334 08de 03F29513 		addw	r3, r3, #405
 15335 08e2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 15336 08e4 1A46     		mov	r2, r3
 15337 08e6 07F11C03 		add	r3, r7, #28
 15338 08ea 2C49     		ldr	r1, .L642+44
 15339 08ec 1846     		mov	r0, r3
 15340 08ee FFF7FEFF 		bl	sprintf
2305:..\src/command_processing.c ****             strcat(info_string, str);
 15341              		.loc 1 2305 0
 15342 08f2 07F11C03 		add	r3, r7, #28
 15343 08f6 1946     		mov	r1, r3
 15344 08f8 7869     		ldr	r0, [r7, #20]
 15345 08fa FFF7FEFF 		bl	strcat
2306:..\src/command_processing.c ****             if (i != NUM_OF_SENSORS-1){
 15346              		.loc 1 2306 0
 15347 08fe D7F89430 		ldr	r3, [r7, #148]
 15348 0902 022B     		cmp	r3, #2
 15349 0904 0BD0     		beq	.L609
2307:..\src/command_processing.c ****                 strcat(info_string, ", ");
 15350              		.loc 1 2307 0
 15351 0906 7869     		ldr	r0, [r7, #20]
 15352 0908 FFF7FEFF 		bl	strlen
 15353 090c 0346     		mov	r3, r0
 15354 090e 1A46     		mov	r2, r3
 15355 0910 7B69     		ldr	r3, [r7, #20]
 15356 0912 1344     		add	r3, r3, r2
 15357 0914 224A     		ldr	r2, .L642+48
 15358 0916 1188     		ldrh	r1, [r2]	@ unaligned
 15359 0918 9278     		ldrb	r2, [r2, #2]
 15360 091a 1980     		strh	r1, [r3]	@ unaligned
 15361 091c 9A70     		strb	r2, [r3, #2]
 15362              	.L609:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 350


2303:..\src/command_processing.c ****             sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 15363              		.loc 1 2303 0 discriminator 2
 15364 091e D7F89430 		ldr	r3, [r7, #148]
 15365 0922 0133     		adds	r3, r3, #1
 15366 0924 C7F89430 		str	r3, [r7, #148]
 15367              	.L608:
2303:..\src/command_processing.c ****             sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 15368              		.loc 1 2303 0 is_stmt 0 discriminator 1
 15369 0928 D7F89430 		ldr	r3, [r7, #148]
 15370 092c 022B     		cmp	r3, #2
 15371 092e CADD     		ble	.L610
2308:..\src/command_processing.c ****             }                
2309:..\src/command_processing.c ****         }
2310:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 15372              		.loc 1 2310 0 is_stmt 1
 15373 0930 7869     		ldr	r0, [r7, #20]
 15374 0932 FFF7FEFF 		bl	strlen
 15375 0936 0346     		mov	r3, r0
 15376 0938 1A46     		mov	r2, r3
 15377 093a 7B69     		ldr	r3, [r7, #20]
 15378 093c 1344     		add	r3, r3, r2
 15379 093e 194A     		ldr	r2, .L642+52
 15380 0940 1188     		ldrh	r1, [r2]	@ unaligned
 15381 0942 9278     		ldrb	r2, [r2, #2]
 15382 0944 1980     		strh	r1, [r3]	@ unaligned
 15383 0946 9A70     		strb	r2, [r3, #2]
2311:..\src/command_processing.c **** 
2312:..\src/command_processing.c ****         strcat(info_string, "Offsets: ");
 15384              		.loc 1 2312 0
 15385 0948 7869     		ldr	r0, [r7, #20]
 15386 094a FFF7FEFF 		bl	strlen
 15387 094e 0346     		mov	r3, r0
 15388 0950 1A46     		mov	r2, r3
 15389 0952 7B69     		ldr	r3, [r7, #20]
 15390 0954 1344     		add	r3, r3, r2
 15391 0956 1449     		ldr	r1, .L642+56
 15392 0958 1A46     		mov	r2, r3
 15393 095a 0B46     		mov	r3, r1
 15394 095c 03CB     		ldmia	r3!, {r0, r1}
 15395 095e 1060     		str	r0, [r2]	@ unaligned
 15396 0960 5160     		str	r1, [r2, #4]	@ unaligned
 15397 0962 1B88     		ldrh	r3, [r3]	@ unaligned
 15398 0964 1381     		strh	r3, [r2, #8]	@ unaligned
2313:..\src/command_processing.c ****         for (i = 0; i < NUM_OF_SENSORS; ++i) {
 15399              		.loc 1 2313 0
 15400 0966 0023     		movs	r3, #0
 15401 0968 C7F89430 		str	r3, [r7, #148]
 15402 096c 5EE0     		b	.L611
 15403              	.L643:
 15404 096e 00BF     		.align	2
 15405              	.L642:
 15406 0970 4C150000 		.word	.LC202
 15407 0974 64150000 		.word	.LC203
 15408 0978 80150000 		.word	.LC204
 15409 097c 98150000 		.word	.LC205
 15410 0980 C8150000 		.word	.LC206
 15411 0984 E4150000 		.word	.LC207
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 351


 15412 0988 F8150000 		.word	.LC208
 15413 098c 10160000 		.word	.LC209
 15414 0990 38160000 		.word	.LC210
 15415 0994 5C160000 		.word	.LC211
 15416 0998 F81C0000 		.word	.LC272
 15417 099c 8C130000 		.word	.LC183
 15418 09a0 90130000 		.word	.LC184
 15419 09a4 58110000 		.word	.LC152
 15420 09a8 081D0000 		.word	.LC273
 15421              	.L613:
2314:..\src/command_processing.c ****             sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i]);
 15422              		.loc 1 2314 0
 15423 09ac 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 15424 09b0 D7F88C10 		ldr	r1, [r7, #140]
 15425 09b4 1346     		mov	r3, r2
 15426 09b6 5B00     		lsls	r3, r3, #1
 15427 09b8 1344     		add	r3, r3, r2
 15428 09ba 9B00     		lsls	r3, r3, #2
 15429 09bc D7F89420 		ldr	r2, [r7, #148]
 15430 09c0 1344     		add	r3, r3, r2
 15431 09c2 6633     		adds	r3, r3, #102
 15432 09c4 51F82310 		ldr	r1, [r1, r3, lsl #2]
 15433 09c8 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 15434 09cc D7F88C00 		ldr	r0, [r7, #140]
 15435 09d0 1346     		mov	r3, r2
 15436 09d2 5B00     		lsls	r3, r3, #1
 15437 09d4 1344     		add	r3, r3, r2
 15438 09d6 1B01     		lsls	r3, r3, #4
 15439 09d8 C218     		adds	r2, r0, r3
 15440 09da D7F89430 		ldr	r3, [r7, #148]
 15441 09de 1344     		add	r3, r3, r2
 15442 09e0 03F29513 		addw	r3, r3, #405
 15443 09e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 15444 09e6 41FA03F2 		asr	r2, r1, r3
 15445 09ea 07F11C03 		add	r3, r7, #28
 15446 09ee CF49     		ldr	r1, .L644
 15447 09f0 1846     		mov	r0, r3
 15448 09f2 FFF7FEFF 		bl	sprintf
2315:..\src/command_processing.c ****             strcat(info_string, str);
 15449              		.loc 1 2315 0
 15450 09f6 07F11C03 		add	r3, r7, #28
 15451 09fa 1946     		mov	r1, r3
 15452 09fc 7869     		ldr	r0, [r7, #20]
 15453 09fe FFF7FEFF 		bl	strcat
2316:..\src/command_processing.c ****             if (i != NUM_OF_SENSORS-1){
 15454              		.loc 1 2316 0
 15455 0a02 D7F89430 		ldr	r3, [r7, #148]
 15456 0a06 022B     		cmp	r3, #2
 15457 0a08 0BD0     		beq	.L612
2317:..\src/command_processing.c ****                 strcat(info_string, ", ");
 15458              		.loc 1 2317 0
 15459 0a0a 7869     		ldr	r0, [r7, #20]
 15460 0a0c FFF7FEFF 		bl	strlen
 15461 0a10 0346     		mov	r3, r0
 15462 0a12 1A46     		mov	r2, r3
 15463 0a14 7B69     		ldr	r3, [r7, #20]
 15464 0a16 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 352


 15465 0a18 C54A     		ldr	r2, .L644+4
 15466 0a1a 1188     		ldrh	r1, [r2]	@ unaligned
 15467 0a1c 9278     		ldrb	r2, [r2, #2]
 15468 0a1e 1980     		strh	r1, [r3]	@ unaligned
 15469 0a20 9A70     		strb	r2, [r3, #2]
 15470              	.L612:
2313:..\src/command_processing.c ****             sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i]);
 15471              		.loc 1 2313 0 discriminator 2
 15472 0a22 D7F89430 		ldr	r3, [r7, #148]
 15473 0a26 0133     		adds	r3, r3, #1
 15474 0a28 C7F89430 		str	r3, [r7, #148]
 15475              	.L611:
2313:..\src/command_processing.c ****             sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i]);
 15476              		.loc 1 2313 0 is_stmt 0 discriminator 1
 15477 0a2c D7F89430 		ldr	r3, [r7, #148]
 15478 0a30 022B     		cmp	r3, #2
 15479 0a32 BBDD     		ble	.L613
2318:..\src/command_processing.c ****             }
2319:..\src/command_processing.c ****         }
2320:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 15480              		.loc 1 2320 0 is_stmt 1
 15481 0a34 7869     		ldr	r0, [r7, #20]
 15482 0a36 FFF7FEFF 		bl	strlen
 15483 0a3a 0346     		mov	r3, r0
 15484 0a3c 1A46     		mov	r2, r3
 15485 0a3e 7B69     		ldr	r3, [r7, #20]
 15486 0a40 1344     		add	r3, r3, r2
 15487 0a42 BC4A     		ldr	r2, .L644+8
 15488 0a44 1188     		ldrh	r1, [r2]	@ unaligned
 15489 0a46 9278     		ldrb	r2, [r2, #2]
 15490 0a48 1980     		strh	r1, [r3]	@ unaligned
 15491 0a4a 9A70     		strb	r2, [r3, #2]
2321:..\src/command_processing.c ****             
2322:..\src/command_processing.c ****         strcat(info_string, "Multipliers: ");
 15492              		.loc 1 2322 0
 15493 0a4c 7869     		ldr	r0, [r7, #20]
 15494 0a4e FFF7FEFF 		bl	strlen
 15495 0a52 0346     		mov	r3, r0
 15496 0a54 1A46     		mov	r2, r3
 15497 0a56 7B69     		ldr	r3, [r7, #20]
 15498 0a58 1344     		add	r3, r3, r2
 15499 0a5a B74A     		ldr	r2, .L644+12
 15500 0a5c 1C46     		mov	r4, r3
 15501 0a5e 1346     		mov	r3, r2
 15502 0a60 07CB     		ldmia	r3!, {r0, r1, r2}
 15503 0a62 2060     		str	r0, [r4]	@ unaligned
 15504 0a64 6160     		str	r1, [r4, #4]	@ unaligned
 15505 0a66 A260     		str	r2, [r4, #8]	@ unaligned
 15506 0a68 1B88     		ldrh	r3, [r3]	@ unaligned
 15507 0a6a A381     		strh	r3, [r4, #12]	@ unaligned
2323:..\src/command_processing.c ****         for (i = 0; i < NUM_OF_SENSORS; ++i) {
 15508              		.loc 1 2323 0
 15509 0a6c 0023     		movs	r3, #0
 15510 0a6e C7F89430 		str	r3, [r7, #148]
 15511 0a72 35E0     		b	.L614
 15512              	.L616:
2324:..\src/command_processing.c ****             sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 353


 15513              		.loc 1 2324 0
 15514 0a74 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 15515 0a78 D7F88C10 		ldr	r1, [r7, #140]
 15516 0a7c 1346     		mov	r3, r2
 15517 0a7e 5B00     		lsls	r3, r3, #1
 15518 0a80 1344     		add	r3, r3, r2
 15519 0a82 9B00     		lsls	r3, r3, #2
 15520 0a84 D7F89420 		ldr	r2, [r7, #148]
 15521 0a88 1344     		add	r3, r3, r2
 15522 0a8a 6833     		adds	r3, r3, #104
 15523 0a8c 9B00     		lsls	r3, r3, #2
 15524 0a8e 0B44     		add	r3, r3, r1
 15525 0a90 5B68     		ldr	r3, [r3, #4]	@ float
 15526 0a92 1846     		mov	r0, r3
 15527 0a94 FFF7FEFF 		bl	__aeabi_f2d
 15528 0a98 0346     		mov	r3, r0
 15529 0a9a 0C46     		mov	r4, r1
 15530 0a9c 07F11C00 		add	r0, r7, #28
 15531 0aa0 1A46     		mov	r2, r3
 15532 0aa2 2346     		mov	r3, r4
 15533 0aa4 A549     		ldr	r1, .L644+16
 15534 0aa6 FFF7FEFF 		bl	sprintf
2325:..\src/command_processing.c ****             strcat(info_string, str);
 15535              		.loc 1 2325 0
 15536 0aaa 07F11C03 		add	r3, r7, #28
 15537 0aae 1946     		mov	r1, r3
 15538 0ab0 7869     		ldr	r0, [r7, #20]
 15539 0ab2 FFF7FEFF 		bl	strcat
2326:..\src/command_processing.c ****             if (i != NUM_OF_SENSORS-1){
 15540              		.loc 1 2326 0
 15541 0ab6 D7F89430 		ldr	r3, [r7, #148]
 15542 0aba 022B     		cmp	r3, #2
 15543 0abc 0BD0     		beq	.L615
2327:..\src/command_processing.c ****                 strcat(info_string, ", ");
 15544              		.loc 1 2327 0
 15545 0abe 7869     		ldr	r0, [r7, #20]
 15546 0ac0 FFF7FEFF 		bl	strlen
 15547 0ac4 0346     		mov	r3, r0
 15548 0ac6 1A46     		mov	r2, r3
 15549 0ac8 7B69     		ldr	r3, [r7, #20]
 15550 0aca 1344     		add	r3, r3, r2
 15551 0acc 984A     		ldr	r2, .L644+4
 15552 0ace 1188     		ldrh	r1, [r2]	@ unaligned
 15553 0ad0 9278     		ldrb	r2, [r2, #2]
 15554 0ad2 1980     		strh	r1, [r3]	@ unaligned
 15555 0ad4 9A70     		strb	r2, [r3, #2]
 15556              	.L615:
2323:..\src/command_processing.c ****             sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 15557              		.loc 1 2323 0 discriminator 2
 15558 0ad6 D7F89430 		ldr	r3, [r7, #148]
 15559 0ada 0133     		adds	r3, r3, #1
 15560 0adc C7F89430 		str	r3, [r7, #148]
 15561              	.L614:
2323:..\src/command_processing.c ****             sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 15562              		.loc 1 2323 0 is_stmt 0 discriminator 1
 15563 0ae0 D7F89430 		ldr	r3, [r7, #148]
 15564 0ae4 022B     		cmp	r3, #2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 354


 15565 0ae6 C5DD     		ble	.L616
2328:..\src/command_processing.c ****             }
2329:..\src/command_processing.c ****         }
2330:..\src/command_processing.c ****         strcat(info_string, "\r\n");       
 15566              		.loc 1 2330 0 is_stmt 1
 15567 0ae8 7869     		ldr	r0, [r7, #20]
 15568 0aea FFF7FEFF 		bl	strlen
 15569 0aee 0346     		mov	r3, r0
 15570 0af0 1A46     		mov	r2, r3
 15571 0af2 7B69     		ldr	r3, [r7, #20]
 15572 0af4 1344     		add	r3, r3, r2
 15573 0af6 8F4A     		ldr	r2, .L644+8
 15574 0af8 1188     		ldrh	r1, [r2]	@ unaligned
 15575 0afa 9278     		ldrb	r2, [r2, #2]
 15576 0afc 1980     		strh	r1, [r3]	@ unaligned
 15577 0afe 9A70     		strb	r2, [r3, #2]
2331:..\src/command_processing.c **** 
2332:..\src/command_processing.c **** 		sprintf(str, "Current lookup table p[0] - p[5]: %f, %f, %f, %f, %f, %f\r\n", MOT->curr_lookup[0],
 15578              		.loc 1 2332 0
 15579 0b00 D7F88430 		ldr	r3, [r7, #132]
 15580 0b04 5B6C     		ldr	r3, [r3, #68]	@ float
 15581 0b06 1846     		mov	r0, r3
 15582 0b08 FFF7FEFF 		bl	__aeabi_f2d
 15583 0b0c C7E90201 		strd	r0, [r7, #8]
 15584 0b10 D7F88430 		ldr	r3, [r7, #132]
 15585 0b14 9B6C     		ldr	r3, [r3, #72]	@ float
 15586 0b16 1846     		mov	r0, r3
 15587 0b18 FFF7FEFF 		bl	__aeabi_f2d
 15588 0b1c 0446     		mov	r4, r0
 15589 0b1e 0D46     		mov	r5, r1
 15590 0b20 D7F88430 		ldr	r3, [r7, #132]
 15591 0b24 DB6C     		ldr	r3, [r3, #76]	@ float
 15592 0b26 1846     		mov	r0, r3
 15593 0b28 FFF7FEFF 		bl	__aeabi_f2d
 15594 0b2c 8046     		mov	r8, r0
 15595 0b2e 8946     		mov	r9, r1
 15596 0b30 D7F88430 		ldr	r3, [r7, #132]
 15597 0b34 1B6D     		ldr	r3, [r3, #80]	@ float
 15598 0b36 1846     		mov	r0, r3
 15599 0b38 FFF7FEFF 		bl	__aeabi_f2d
 15600 0b3c 8246     		mov	r10, r0
 15601 0b3e 8B46     		mov	fp, r1
 15602 0b40 D7F88430 		ldr	r3, [r7, #132]
 15603 0b44 5B6D     		ldr	r3, [r3, #84]	@ float
 15604 0b46 1846     		mov	r0, r3
 15605 0b48 FFF7FEFF 		bl	__aeabi_f2d
 15606 0b4c C7E90001 		strd	r0, [r7]
 15607 0b50 D7F88430 		ldr	r3, [r7, #132]
 15608 0b54 9B6D     		ldr	r3, [r3, #88]	@ float
 15609 0b56 1846     		mov	r0, r3
 15610 0b58 FFF7FEFF 		bl	__aeabi_f2d
 15611 0b5c 0246     		mov	r2, r0
 15612 0b5e 0B46     		mov	r3, r1
 15613 0b60 07F11C00 		add	r0, r7, #28
 15614 0b64 CDE90823 		strd	r2, [sp, #32]
 15615 0b68 D7E90012 		ldrd	r1, [r7]
 15616 0b6c CDE90612 		strd	r1, [sp, #24]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 355


 15617 0b70 CDE904AB 		strd	r10, [sp, #16]
 15618 0b74 CDE90289 		strd	r8, [sp, #8]
 15619 0b78 CDE90045 		strd	r4, [sp]
 15620 0b7c D7E90223 		ldrd	r2, [r7, #8]
 15621 0b80 6F49     		ldr	r1, .L644+20
 15622 0b82 FFF7FEFF 		bl	sprintf
2333:..\src/command_processing.c **** 		strcat(info_string, str);
 15623              		.loc 1 2333 0
 15624 0b86 07F11C03 		add	r3, r7, #28
 15625 0b8a 1946     		mov	r1, r3
 15626 0b8c 7869     		ldr	r0, [r7, #20]
 15627 0b8e FFF7FEFF 		bl	strcat
2334:..\src/command_processing.c **** 
2335:..\src/command_processing.c **** 		sprintf(str, "Position limit active: %d\r\n", (int)MOT->pos_lim_flag);
 15628              		.loc 1 2335 0
 15629 0b92 D7F88430 		ldr	r3, [r7, #132]
 15630 0b96 93F83330 		ldrb	r3, [r3, #51]	@ zero_extendqisi2
 15631 0b9a 1A46     		mov	r2, r3
 15632 0b9c 07F11C03 		add	r3, r7, #28
 15633 0ba0 6849     		ldr	r1, .L644+24
 15634 0ba2 1846     		mov	r0, r3
 15635 0ba4 FFF7FEFF 		bl	sprintf
2336:..\src/command_processing.c **** 		strcat(info_string, str);
 15636              		.loc 1 2336 0
 15637 0ba8 07F11C03 		add	r3, r7, #28
 15638 0bac 1946     		mov	r1, r3
 15639 0bae 7869     		ldr	r0, [r7, #20]
 15640 0bb0 FFF7FEFF 		bl	strcat
2337:..\src/command_processing.c **** 
2338:..\src/command_processing.c **** 		sprintf(str, "Position limits: inf -> %ld, sup -> %ld\r\n", (int32)MOT->pos_lim_inf >> MEM_P->enc
 15641              		.loc 1 2338 0
 15642 0bb4 D7F88430 		ldr	r3, [r7, #132]
 15643 0bb8 596B     		ldr	r1, [r3, #52]
 15644 0bba 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 15645 0bbe D7F88C00 		ldr	r0, [r7, #140]
 15646 0bc2 1346     		mov	r3, r2
 15647 0bc4 5B00     		lsls	r3, r3, #1
 15648 0bc6 1344     		add	r3, r3, r2
 15649 0bc8 1B01     		lsls	r3, r3, #4
 15650 0bca 0344     		add	r3, r3, r0
 15651 0bcc 03F29513 		addw	r3, r3, #405
 15652 0bd0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 15653 0bd2 41FA03F4 		asr	r4, r1, r3
 15654 0bd6 D7F88430 		ldr	r3, [r7, #132]
 15655 0bda 996B     		ldr	r1, [r3, #56]
 15656 0bdc 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 15657 0be0 D7F88C00 		ldr	r0, [r7, #140]
 15658 0be4 1346     		mov	r3, r2
 15659 0be6 5B00     		lsls	r3, r3, #1
 15660 0be8 1344     		add	r3, r3, r2
 15661 0bea 1B01     		lsls	r3, r3, #4
 15662 0bec 0344     		add	r3, r3, r0
 15663 0bee 03F29513 		addw	r3, r3, #405
 15664 0bf2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 15665 0bf4 41FA03F3 		asr	r3, r1, r3
 15666 0bf8 07F11C00 		add	r0, r7, #28
 15667 0bfc 2246     		mov	r2, r4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 356


 15668 0bfe 5249     		ldr	r1, .L644+28
 15669 0c00 FFF7FEFF 		bl	sprintf
2339:..\src/command_processing.c **** 		strcat(info_string, str);
 15670              		.loc 1 2339 0
 15671 0c04 07F11C03 		add	r3, r7, #28
 15672 0c08 1946     		mov	r1, r3
 15673 0c0a 7869     		ldr	r0, [r7, #20]
 15674 0c0c FFF7FEFF 		bl	strcat
2340:..\src/command_processing.c **** 
2341:..\src/command_processing.c **** 		sprintf(str, "Current limit: %d\r\n", (int)MOT->current_limit);
 15675              		.loc 1 2341 0
 15676 0c10 D7F88430 		ldr	r3, [r7, #132]
 15677 0c14 B3F95C30 		ldrsh	r3, [r3, #92]
 15678 0c18 1A46     		mov	r2, r3
 15679 0c1a 07F11C03 		add	r3, r7, #28
 15680 0c1e 4B49     		ldr	r1, .L644+32
 15681 0c20 1846     		mov	r0, r3
 15682 0c22 FFF7FEFF 		bl	sprintf
2342:..\src/command_processing.c **** 		strcat(info_string, str);
 15683              		.loc 1 2342 0
 15684 0c26 07F11C03 		add	r3, r7, #28
 15685 0c2a 1946     		mov	r1, r3
 15686 0c2c 7869     		ldr	r0, [r7, #20]
 15687 0c2e FFF7FEFF 		bl	strcat
2343:..\src/command_processing.c **** 
2344:..\src/command_processing.c **** 		if ((MOT->input_mode == INPUT_MODE_EMG_PROPORTIONAL) ||
 15688              		.loc 1 2344 0
 15689 0c32 D7F88430 		ldr	r3, [r7, #132]
 15690 0c36 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
 15691 0c3a 022B     		cmp	r3, #2
 15692 0c3c 18D0     		beq	.L617
2345:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_INTEGRAL) ||
 15693              		.loc 1 2345 0 discriminator 1
 15694 0c3e D7F88430 		ldr	r3, [r7, #132]
 15695 0c42 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
2344:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_INTEGRAL) ||
 15696              		.loc 1 2344 0 discriminator 1
 15697 0c46 032B     		cmp	r3, #3
 15698 0c48 12D0     		beq	.L617
2346:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_FCFS) ||
 15699              		.loc 1 2346 0
 15700 0c4a D7F88430 		ldr	r3, [r7, #132]
 15701 0c4e 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
2345:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_INTEGRAL) ||
 15702              		.loc 1 2345 0
 15703 0c52 042B     		cmp	r3, #4
 15704 0c54 0CD0     		beq	.L617
2347:..\src/command_processing.c ****             (MOT->input_mode == INPUT_MODE_EMG_FCFS_ADV) ||
 15705              		.loc 1 2347 0
 15706 0c56 D7F88430 		ldr	r3, [r7, #132]
 15707 0c5a 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
2346:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_FCFS) ||
 15708              		.loc 1 2346 0
 15709 0c5e 052B     		cmp	r3, #5
 15710 0c60 06D0     		beq	.L617
2348:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_PROPORTIONAL_NC)) {
 15711              		.loc 1 2348 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 357


 15712 0c62 D7F88430 		ldr	r3, [r7, #132]
 15713 0c66 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
2347:..\src/command_processing.c ****             (MOT->input_mode == INPUT_MODE_EMG_FCFS_ADV) ||
 15714              		.loc 1 2347 0
 15715 0c6a 072B     		cmp	r3, #7
 15716 0c6c 40F0AA80 		bne	.L618
 15717              	.L617:
2349:..\src/command_processing.c **** 			sprintf(str, "EMG thresholds [0 - 1024]: %u, %u", MEM_P->emg.emg_threshold[0], MEM_P->emg.emg_th
 15718              		.loc 1 2349 0
 15719 0c70 D7F88C30 		ldr	r3, [r7, #140]
 15720 0c74 B3F8F031 		ldrh	r3, [r3, #496]
 15721 0c78 1A46     		mov	r2, r3
 15722 0c7a D7F88C30 		ldr	r3, [r7, #140]
 15723 0c7e B3F8F231 		ldrh	r3, [r3, #498]
 15724 0c82 07F11C00 		add	r0, r7, #28
 15725 0c86 3249     		ldr	r1, .L644+36
 15726 0c88 FFF7FEFF 		bl	sprintf
2350:..\src/command_processing.c **** 			strcat(info_string, str);
 15727              		.loc 1 2350 0
 15728 0c8c 07F11C03 		add	r3, r7, #28
 15729 0c90 1946     		mov	r1, r3
 15730 0c92 7869     		ldr	r0, [r7, #20]
 15731 0c94 FFF7FEFF 		bl	strcat
2351:..\src/command_processing.c **** 			strcat(info_string, "\r\n");
 15732              		.loc 1 2351 0
 15733 0c98 7869     		ldr	r0, [r7, #20]
 15734 0c9a FFF7FEFF 		bl	strlen
 15735 0c9e 0346     		mov	r3, r0
 15736 0ca0 1A46     		mov	r2, r3
 15737 0ca2 7B69     		ldr	r3, [r7, #20]
 15738 0ca4 1344     		add	r3, r3, r2
 15739 0ca6 234A     		ldr	r2, .L644+8
 15740 0ca8 1188     		ldrh	r1, [r2]	@ unaligned
 15741 0caa 9278     		ldrb	r2, [r2, #2]
 15742 0cac 1980     		strh	r1, [r3]	@ unaligned
 15743 0cae 9A70     		strb	r2, [r3, #2]
2352:..\src/command_processing.c **** 
2353:..\src/command_processing.c **** 			sprintf(str, "EMG max values [0 - 4096]: %lu, %lu", MEM_P->emg.emg_max_value[0], MEM_P->emg.emg_
 15744              		.loc 1 2353 0
 15745 0cb0 D7F88C30 		ldr	r3, [r7, #140]
 15746 0cb4 D3F8F421 		ldr	r2, [r3, #500]
 15747 0cb8 D7F88C30 		ldr	r3, [r7, #140]
 15748 0cbc D3F8F831 		ldr	r3, [r3, #504]
 15749 0cc0 07F11C00 		add	r0, r7, #28
 15750 0cc4 2349     		ldr	r1, .L644+40
 15751 0cc6 FFF7FEFF 		bl	sprintf
2354:..\src/command_processing.c **** 			strcat(info_string, str);
 15752              		.loc 1 2354 0
 15753 0cca 07F11C03 		add	r3, r7, #28
 15754 0cce 1946     		mov	r1, r3
 15755 0cd0 7869     		ldr	r0, [r7, #20]
 15756 0cd2 FFF7FEFF 		bl	strcat
2355:..\src/command_processing.c **** 			strcat(info_string, "\r\n");
 15757              		.loc 1 2355 0
 15758 0cd6 7869     		ldr	r0, [r7, #20]
 15759 0cd8 FFF7FEFF 		bl	strlen
 15760 0cdc 0346     		mov	r3, r0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 358


 15761 0cde 1A46     		mov	r2, r3
 15762 0ce0 7B69     		ldr	r3, [r7, #20]
 15763 0ce2 1344     		add	r3, r3, r2
 15764 0ce4 134A     		ldr	r2, .L644+8
 15765 0ce6 1188     		ldrh	r1, [r2]	@ unaligned
 15766 0ce8 9278     		ldrb	r2, [r2, #2]
 15767 0cea 1980     		strh	r1, [r3]	@ unaligned
 15768 0cec 9A70     		strb	r2, [r3, #2]
2356:..\src/command_processing.c **** 
2357:..\src/command_processing.c **** 			if (MEM_P->emg.emg_calibration_flag)
 15769              		.loc 1 2357 0
 15770 0cee D7F88C30 		ldr	r3, [r7, #140]
 15771 0cf2 93F8FE31 		ldrb	r3, [r3, #510]	@ zero_extendqisi2
 15772 0cf6 002B     		cmp	r3, #0
 15773 0cf8 30D0     		beq	.L619
2358:..\src/command_processing.c **** 				strcat(info_string, "Calibration enabled: YES\r\n");
 15774              		.loc 1 2358 0
 15775 0cfa 7869     		ldr	r0, [r7, #20]
 15776 0cfc FFF7FEFF 		bl	strlen
 15777 0d00 0346     		mov	r3, r0
 15778 0d02 1A46     		mov	r2, r3
 15779 0d04 7B69     		ldr	r3, [r7, #20]
 15780 0d06 1344     		add	r3, r3, r2
 15781 0d08 134A     		ldr	r2, .L644+44
 15782 0d0a 1D46     		mov	r5, r3
 15783 0d0c 1446     		mov	r4, r2
 15784 0d0e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15785 0d10 2860     		str	r0, [r5]	@ unaligned
 15786 0d12 6960     		str	r1, [r5, #4]	@ unaligned
 15787 0d14 AA60     		str	r2, [r5, #8]	@ unaligned
 15788 0d16 EB60     		str	r3, [r5, #12]	@ unaligned
 15789 0d18 03CC     		ldmia	r4!, {r0, r1}
 15790 0d1a 2861     		str	r0, [r5, #16]	@ unaligned
 15791 0d1c 6961     		str	r1, [r5, #20]	@ unaligned
 15792 0d1e 2388     		ldrh	r3, [r4]	@ unaligned
 15793 0d20 A278     		ldrb	r2, [r4, #2]
 15794 0d22 2B83     		strh	r3, [r5, #24]	@ unaligned
 15795 0d24 1346     		mov	r3, r2
 15796 0d26 AB76     		strb	r3, [r5, #26]
 15797 0d28 2CE0     		b	.L620
 15798              	.L645:
 15799 0d2a 00BF     		.align	2
 15800              	.L644:
 15801 0d2c C4160000 		.word	.LC215
 15802 0d30 90130000 		.word	.LC184
 15803 0d34 58110000 		.word	.LC152
 15804 0d38 141D0000 		.word	.LC274
 15805 0d3c E4160000 		.word	.LC217
 15806 0d40 241D0000 		.word	.LC275
 15807 0d44 601D0000 		.word	.LC276
 15808 0d48 7C1D0000 		.word	.LC277
 15809 0d4c 84170000 		.word	.LC223
 15810 0d50 AC170000 		.word	.LC225
 15811 0d54 D0170000 		.word	.LC226
 15812 0d58 20180000 		.word	.LC229
 15813              	.L619:
2359:..\src/command_processing.c **** 			else
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 359


2360:..\src/command_processing.c **** 				strcat(info_string, "Calibration enabled: NO\r\n");
 15814              		.loc 1 2360 0
 15815 0d5c 7869     		ldr	r0, [r7, #20]
 15816 0d5e FFF7FEFF 		bl	strlen
 15817 0d62 0346     		mov	r3, r0
 15818 0d64 1A46     		mov	r2, r3
 15819 0d66 7B69     		ldr	r3, [r7, #20]
 15820 0d68 1344     		add	r3, r3, r2
 15821 0d6a D04A     		ldr	r2, .L646
 15822 0d6c 1D46     		mov	r5, r3
 15823 0d6e 1446     		mov	r4, r2
 15824 0d70 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15825 0d72 2860     		str	r0, [r5]	@ unaligned
 15826 0d74 6960     		str	r1, [r5, #4]	@ unaligned
 15827 0d76 AA60     		str	r2, [r5, #8]	@ unaligned
 15828 0d78 EB60     		str	r3, [r5, #12]	@ unaligned
 15829 0d7a 03CC     		ldmia	r4!, {r0, r1}
 15830 0d7c 2861     		str	r0, [r5, #16]	@ unaligned
 15831 0d7e 6961     		str	r1, [r5, #20]	@ unaligned
 15832 0d80 2388     		ldrh	r3, [r4]	@ unaligned
 15833 0d82 2B83     		strh	r3, [r5, #24]	@ unaligned
 15834              	.L620:
2361:..\src/command_processing.c **** 
2362:..\src/command_processing.c **** 			sprintf(str, "EMG max speed: %d %d", (int)MEM_P->emg.emg_speed[0], (int)MEM_P->emg.emg_speed[1])
 15835              		.loc 1 2362 0
 15836 0d84 D7F88C30 		ldr	r3, [r7, #140]
 15837 0d88 93F8FC31 		ldrb	r3, [r3, #508]	@ zero_extendqisi2
 15838 0d8c 1A46     		mov	r2, r3
 15839 0d8e D7F88C30 		ldr	r3, [r7, #140]
 15840 0d92 93F8FD31 		ldrb	r3, [r3, #509]	@ zero_extendqisi2
 15841 0d96 07F11C00 		add	r0, r7, #28
 15842 0d9a C549     		ldr	r1, .L646+4
 15843 0d9c FFF7FEFF 		bl	sprintf
2363:..\src/command_processing.c **** 			strcat(info_string, str);
 15844              		.loc 1 2363 0
 15845 0da0 07F11C03 		add	r3, r7, #28
 15846 0da4 1946     		mov	r1, r3
 15847 0da6 7869     		ldr	r0, [r7, #20]
 15848 0da8 FFF7FEFF 		bl	strcat
2364:..\src/command_processing.c **** 			strcat(info_string, "\r\n");
 15849              		.loc 1 2364 0
 15850 0dac 7869     		ldr	r0, [r7, #20]
 15851 0dae FFF7FEFF 		bl	strlen
 15852 0db2 0346     		mov	r3, r0
 15853 0db4 1A46     		mov	r2, r3
 15854 0db6 7B69     		ldr	r3, [r7, #20]
 15855 0db8 1344     		add	r3, r3, r2
 15856 0dba BE4A     		ldr	r2, .L646+8
 15857 0dbc 1188     		ldrh	r1, [r2]	@ unaligned
 15858 0dbe 9278     		ldrb	r2, [r2, #2]
 15859 0dc0 1980     		strh	r1, [r3]	@ unaligned
 15860 0dc2 9A70     		strb	r2, [r3, #2]
 15861              	.L618:
 15862              	.LBE27:
2194:..\src/command_processing.c ****             
 15863              		.loc 1 2194 0 discriminator 2
 15864 0dc4 97F89330 		ldrb	r3, [r7, #147]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 360


 15865 0dc8 0133     		adds	r3, r3, #1
 15866 0dca 87F89330 		strb	r3, [r7, #147]
 15867              	.L577:
2194:..\src/command_processing.c ****             
 15868              		.loc 1 2194 0 is_stmt 0 discriminator 1
 15869 0dce D7F88C30 		ldr	r3, [r7, #140]
 15870 0dd2 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 15871 0dd6 97F89320 		ldrb	r2, [r7, #147]	@ zero_extendqisi2
 15872 0dda 9A42     		cmp	r2, r3
 15873 0ddc 7FF699A9 		bls	.L621
 15874              	.LBE26:
2365:..\src/command_processing.c **** 		}
2366:..\src/command_processing.c **** 	}
2367:..\src/command_processing.c **** 	 
2368:..\src/command_processing.c ****     if (MEM_P->SH.rest_position_flag) {
 15875              		.loc 1 2368 0 is_stmt 1
 15876 0de0 D7F88C30 		ldr	r3, [r7, #140]
 15877 0de4 93F8AC32 		ldrb	r3, [r3, #684]	@ zero_extendqisi2
 15878 0de8 002B     		cmp	r3, #0
 15879 0dea 63D0     		beq	.L622
2369:..\src/command_processing.c **** 		sprintf(str, "Rest time delay (ms): %d", (int)MEM_P->SH.rest_delay);
 15880              		.loc 1 2369 0
 15881 0dec D7F88C30 		ldr	r3, [r7, #140]
 15882 0df0 D3F8A422 		ldr	r2, [r3, #676]
 15883 0df4 07F11C03 		add	r3, r7, #28
 15884 0df8 AF49     		ldr	r1, .L646+12
 15885 0dfa 1846     		mov	r0, r3
 15886 0dfc FFF7FEFF 		bl	sprintf
2370:..\src/command_processing.c ****         strcat(info_string, str);
 15887              		.loc 1 2370 0
 15888 0e00 07F11C03 		add	r3, r7, #28
 15889 0e04 1946     		mov	r1, r3
 15890 0e06 7869     		ldr	r0, [r7, #20]
 15891 0e08 FFF7FEFF 		bl	strcat
2371:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 15892              		.loc 1 2371 0
 15893 0e0c 7869     		ldr	r0, [r7, #20]
 15894 0e0e FFF7FEFF 		bl	strlen
 15895 0e12 0346     		mov	r3, r0
 15896 0e14 1A46     		mov	r2, r3
 15897 0e16 7B69     		ldr	r3, [r7, #20]
 15898 0e18 1344     		add	r3, r3, r2
 15899 0e1a A64A     		ldr	r2, .L646+8
 15900 0e1c 1188     		ldrh	r1, [r2]	@ unaligned
 15901 0e1e 9278     		ldrb	r2, [r2, #2]
 15902 0e20 1980     		strh	r1, [r3]	@ unaligned
 15903 0e22 9A70     		strb	r2, [r3, #2]
2372:..\src/command_processing.c ****         
2373:..\src/command_processing.c ****         sprintf(str, "Rest velocity closure (ticks/sec): %d", (int)MEM_P->SH.rest_vel);
 15904              		.loc 1 2373 0
 15905 0e24 D7F88C30 		ldr	r3, [r7, #140]
 15906 0e28 D3F8A822 		ldr	r2, [r3, #680]
 15907 0e2c 07F11C03 		add	r3, r7, #28
 15908 0e30 A249     		ldr	r1, .L646+16
 15909 0e32 1846     		mov	r0, r3
 15910 0e34 FFF7FEFF 		bl	sprintf
2374:..\src/command_processing.c ****         strcat(info_string, str);
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 361


 15911              		.loc 1 2374 0
 15912 0e38 07F11C03 		add	r3, r7, #28
 15913 0e3c 1946     		mov	r1, r3
 15914 0e3e 7869     		ldr	r0, [r7, #20]
 15915 0e40 FFF7FEFF 		bl	strcat
2375:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 15916              		.loc 1 2375 0
 15917 0e44 7869     		ldr	r0, [r7, #20]
 15918 0e46 FFF7FEFF 		bl	strlen
 15919 0e4a 0346     		mov	r3, r0
 15920 0e4c 1A46     		mov	r2, r3
 15921 0e4e 7B69     		ldr	r3, [r7, #20]
 15922 0e50 1344     		add	r3, r3, r2
 15923 0e52 984A     		ldr	r2, .L646+8
 15924 0e54 1188     		ldrh	r1, [r2]	@ unaligned
 15925 0e56 9278     		ldrb	r2, [r2, #2]
 15926 0e58 1980     		strh	r1, [r3]	@ unaligned
 15927 0e5a 9A70     		strb	r2, [r3, #2]
2376:..\src/command_processing.c ****         
2377:..\src/command_processing.c ****         sprintf(str, "Rest position: %d", (int)(MEM_P->SH.rest_pos >> MEM_P->enc[MEM_P->motor[0].en
 15928              		.loc 1 2377 0
 15929 0e5c D7F88C30 		ldr	r3, [r7, #140]
 15930 0e60 D3F8A022 		ldr	r2, [r3, #672]
 15931 0e64 D7F88C30 		ldr	r3, [r7, #140]
 15932 0e68 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 15933 0e6c 1846     		mov	r0, r3
 15934 0e6e D7F88C10 		ldr	r1, [r7, #140]
 15935 0e72 0346     		mov	r3, r0
 15936 0e74 5B00     		lsls	r3, r3, #1
 15937 0e76 0344     		add	r3, r3, r0
 15938 0e78 1B01     		lsls	r3, r3, #4
 15939 0e7a 0B44     		add	r3, r3, r1
 15940 0e7c 03F29513 		addw	r3, r3, #405
 15941 0e80 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 15942 0e82 1A41     		asrs	r2, r2, r3
 15943 0e84 07F11C03 		add	r3, r7, #28
 15944 0e88 8D49     		ldr	r1, .L646+20
 15945 0e8a 1846     		mov	r0, r3
 15946 0e8c FFF7FEFF 		bl	sprintf
2378:..\src/command_processing.c ****         strcat(info_string, str);
 15947              		.loc 1 2378 0
 15948 0e90 07F11C03 		add	r3, r7, #28
 15949 0e94 1946     		mov	r1, r3
 15950 0e96 7869     		ldr	r0, [r7, #20]
 15951 0e98 FFF7FEFF 		bl	strcat
2379:..\src/command_processing.c ****         strcat(info_string, "\r\n");  
 15952              		.loc 1 2379 0
 15953 0e9c 7869     		ldr	r0, [r7, #20]
 15954 0e9e FFF7FEFF 		bl	strlen
 15955 0ea2 0346     		mov	r3, r0
 15956 0ea4 1A46     		mov	r2, r3
 15957 0ea6 7B69     		ldr	r3, [r7, #20]
 15958 0ea8 1344     		add	r3, r3, r2
 15959 0eaa 824A     		ldr	r2, .L646+8
 15960 0eac 1188     		ldrh	r1, [r2]	@ unaligned
 15961 0eae 9278     		ldrb	r2, [r2, #2]
 15962 0eb0 1980     		strh	r1, [r3]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 362


 15963 0eb2 9A70     		strb	r2, [r3, #2]
 15964              	.L622:
2380:..\src/command_processing.c ****     }
2381:..\src/command_processing.c **** 	
2382:..\src/command_processing.c **** 	if (MEM_P->imu.read_imu_flag) {
 15965              		.loc 1 2382 0
 15966 0eb4 D7F88C30 		ldr	r3, [r7, #140]
 15967 0eb8 93F80032 		ldrb	r3, [r3, #512]	@ zero_extendqisi2
 15968 0ebc 002B     		cmp	r3, #0
 15969 0ebe 00F0CB81 		beq	.L637
2383:..\src/command_processing.c **** 		sprintf(str, "IMU Connected: %d\r\n", (int) N_IMU_Connected);
 15970              		.loc 1 2383 0
 15971 0ec2 804B     		ldr	r3, .L646+24
 15972 0ec4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 15973 0ec6 1A46     		mov	r2, r3
 15974 0ec8 07F11C03 		add	r3, r7, #28
 15975 0ecc 7E49     		ldr	r1, .L646+28
 15976 0ece 1846     		mov	r0, r3
 15977 0ed0 FFF7FEFF 		bl	sprintf
2384:..\src/command_processing.c **** 		strcat(info_string, str);
 15978              		.loc 1 2384 0
 15979 0ed4 07F11C03 		add	r3, r7, #28
 15980 0ed8 1946     		mov	r1, r3
 15981 0eda 7869     		ldr	r0, [r7, #20]
 15982 0edc FFF7FEFF 		bl	strcat
2385:..\src/command_processing.c **** 		
2386:..\src/command_processing.c **** 		strcat(info_string, "\r\n");
 15983              		.loc 1 2386 0
 15984 0ee0 7869     		ldr	r0, [r7, #20]
 15985 0ee2 FFF7FEFF 		bl	strlen
 15986 0ee6 0346     		mov	r3, r0
 15987 0ee8 1A46     		mov	r2, r3
 15988 0eea 7B69     		ldr	r3, [r7, #20]
 15989 0eec 1344     		add	r3, r3, r2
 15990 0eee 714A     		ldr	r2, .L646+8
 15991 0ef0 1188     		ldrh	r1, [r2]	@ unaligned
 15992 0ef2 9278     		ldrb	r2, [r2, #2]
 15993 0ef4 1980     		strh	r1, [r3]	@ unaligned
 15994 0ef6 9A70     		strb	r2, [r3, #2]
2387:..\src/command_processing.c **** 		
2388:..\src/command_processing.c **** 		strcat(info_string, "IMUs CONFIGURATION\r\n");
 15995              		.loc 1 2388 0
 15996 0ef8 7869     		ldr	r0, [r7, #20]
 15997 0efa FFF7FEFF 		bl	strlen
 15998 0efe 0346     		mov	r3, r0
 15999 0f00 1A46     		mov	r2, r3
 16000 0f02 7B69     		ldr	r3, [r7, #20]
 16001 0f04 1344     		add	r3, r3, r2
 16002 0f06 714A     		ldr	r2, .L646+32
 16003 0f08 1D46     		mov	r5, r3
 16004 0f0a 1446     		mov	r4, r2
 16005 0f0c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16006 0f0e 2860     		str	r0, [r5]	@ unaligned
 16007 0f10 6960     		str	r1, [r5, #4]	@ unaligned
 16008 0f12 AA60     		str	r2, [r5, #8]	@ unaligned
 16009 0f14 EB60     		str	r3, [r5, #12]	@ unaligned
 16010 0f16 2068     		ldr	r0, [r4]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 363


 16011 0f18 2861     		str	r0, [r5, #16]	@ unaligned
 16012 0f1a 2379     		ldrb	r3, [r4, #4]
 16013 0f1c 2B75     		strb	r3, [r5, #20]
2389:..\src/command_processing.c **** 		for (i=0; i<N_IMU_Connected; i++){
 16014              		.loc 1 2389 0
 16015 0f1e 0023     		movs	r3, #0
 16016 0f20 C7F89430 		str	r3, [r7, #148]
 16017 0f24 84E1     		b	.L624
 16018              	.L635:
2390:..\src/command_processing.c **** 			sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 16019              		.loc 1 2390 0
 16020 0f26 6A4A     		ldr	r2, .L646+36
 16021 0f28 D7F89430 		ldr	r3, [r7, #148]
 16022 0f2c 1344     		add	r3, r3, r2
 16023 0f2e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16024 0f30 07F11C00 		add	r0, r7, #28
 16025 0f34 D7F89420 		ldr	r2, [r7, #148]
 16026 0f38 6649     		ldr	r1, .L646+40
 16027 0f3a FFF7FEFF 		bl	sprintf
2391:..\src/command_processing.c **** 			strcat(info_string, str);
 16028              		.loc 1 2391 0
 16029 0f3e 07F11C03 		add	r3, r7, #28
 16030 0f42 1946     		mov	r1, r3
 16031 0f44 7869     		ldr	r0, [r7, #20]
 16032 0f46 FFF7FEFF 		bl	strcat
2392:..\src/command_processing.c **** 			
2393:..\src/command_processing.c **** 			sprintf(str, "\tAccelerometers: ");
 16033              		.loc 1 2393 0
 16034 0f4a 07F11C03 		add	r3, r7, #28
 16035 0f4e 624A     		ldr	r2, .L646+44
 16036 0f50 1C46     		mov	r4, r3
 16037 0f52 1546     		mov	r5, r2
 16038 0f54 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 16039 0f56 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 16040 0f58 2B68     		ldr	r3, [r5]
 16041 0f5a 2380     		strh	r3, [r4]	@ movhi
2394:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][0]))
 16042              		.loc 1 2394 0
 16043 0f5c 5C4A     		ldr	r2, .L646+36
 16044 0f5e D7F89430 		ldr	r3, [r7, #148]
 16045 0f62 1344     		add	r3, r3, r2
 16046 0f64 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16047 0f66 1946     		mov	r1, r3
 16048 0f68 D7F88C20 		ldr	r2, [r7, #140]
 16049 0f6c 0B46     		mov	r3, r1
 16050 0f6e 9B00     		lsls	r3, r3, #2
 16051 0f70 0B44     		add	r3, r3, r1
 16052 0f72 1344     		add	r3, r3, r2
 16053 0f74 03F20223 		addw	r3, r3, #514
 16054 0f78 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16055 0f7a 002B     		cmp	r3, #0
 16056 0f7c 0FD0     		beq	.L625
2395:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 16057              		.loc 1 2395 0
 16058 0f7e 07F11C03 		add	r3, r7, #28
 16059 0f82 1846     		mov	r0, r3
 16060 0f84 FFF7FEFF 		bl	strlen
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 364


 16061 0f88 0346     		mov	r3, r0
 16062 0f8a 1A46     		mov	r2, r3
 16063 0f8c 07F11C03 		add	r3, r7, #28
 16064 0f90 1344     		add	r3, r3, r2
 16065 0f92 524A     		ldr	r2, .L646+48
 16066 0f94 1068     		ldr	r0, [r2]	@ unaligned
 16067 0f96 1860     		str	r0, [r3]	@ unaligned
 16068 0f98 9288     		ldrh	r2, [r2, #4]	@ unaligned
 16069 0f9a 9A80     		strh	r2, [r3, #4]	@ unaligned
 16070 0f9c 0EE0     		b	.L626
 16071              	.L625:
2396:..\src/command_processing.c **** 			else
2397:..\src/command_processing.c **** 				strcat(str, "NO\r\n"); 
 16072              		.loc 1 2397 0
 16073 0f9e 07F11C03 		add	r3, r7, #28
 16074 0fa2 1846     		mov	r0, r3
 16075 0fa4 FFF7FEFF 		bl	strlen
 16076 0fa8 0346     		mov	r3, r0
 16077 0faa 1A46     		mov	r2, r3
 16078 0fac 07F11C03 		add	r3, r7, #28
 16079 0fb0 1344     		add	r3, r3, r2
 16080 0fb2 4B4A     		ldr	r2, .L646+52
 16081 0fb4 1068     		ldr	r0, [r2]	@ unaligned
 16082 0fb6 1860     		str	r0, [r3]	@ unaligned
 16083 0fb8 1279     		ldrb	r2, [r2, #4]
 16084 0fba 1A71     		strb	r2, [r3, #4]
 16085              	.L626:
2398:..\src/command_processing.c **** 			strcat(str, "\tGyroscopes: ");
 16086              		.loc 1 2398 0
 16087 0fbc 07F11C03 		add	r3, r7, #28
 16088 0fc0 1846     		mov	r0, r3
 16089 0fc2 FFF7FEFF 		bl	strlen
 16090 0fc6 0346     		mov	r3, r0
 16091 0fc8 1A46     		mov	r2, r3
 16092 0fca 07F11C03 		add	r3, r7, #28
 16093 0fce 1344     		add	r3, r3, r2
 16094 0fd0 444A     		ldr	r2, .L646+56
 16095 0fd2 1C46     		mov	r4, r3
 16096 0fd4 1346     		mov	r3, r2
 16097 0fd6 07CB     		ldmia	r3!, {r0, r1, r2}
 16098 0fd8 2060     		str	r0, [r4]	@ unaligned
 16099 0fda 6160     		str	r1, [r4, #4]	@ unaligned
 16100 0fdc A260     		str	r2, [r4, #8]	@ unaligned
 16101 0fde 1B88     		ldrh	r3, [r3]	@ unaligned
 16102 0fe0 A381     		strh	r3, [r4, #12]	@ unaligned
2399:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][1]))
 16103              		.loc 1 2399 0
 16104 0fe2 3B4A     		ldr	r2, .L646+36
 16105 0fe4 D7F89430 		ldr	r3, [r7, #148]
 16106 0fe8 1344     		add	r3, r3, r2
 16107 0fea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16108 0fec 1946     		mov	r1, r3
 16109 0fee D7F88C20 		ldr	r2, [r7, #140]
 16110 0ff2 0B46     		mov	r3, r1
 16111 0ff4 9B00     		lsls	r3, r3, #2
 16112 0ff6 0B44     		add	r3, r3, r1
 16113 0ff8 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 365


 16114 0ffa 03F20323 		addw	r3, r3, #515
 16115 0ffe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16116 1000 002B     		cmp	r3, #0
 16117 1002 0FD0     		beq	.L627
2400:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 16118              		.loc 1 2400 0
 16119 1004 07F11C03 		add	r3, r7, #28
 16120 1008 1846     		mov	r0, r3
 16121 100a FFF7FEFF 		bl	strlen
 16122 100e 0346     		mov	r3, r0
 16123 1010 1A46     		mov	r2, r3
 16124 1012 07F11C03 		add	r3, r7, #28
 16125 1016 1344     		add	r3, r3, r2
 16126 1018 304A     		ldr	r2, .L646+48
 16127 101a 1068     		ldr	r0, [r2]	@ unaligned
 16128 101c 1860     		str	r0, [r3]	@ unaligned
 16129 101e 9288     		ldrh	r2, [r2, #4]	@ unaligned
 16130 1020 9A80     		strh	r2, [r3, #4]	@ unaligned
 16131 1022 0EE0     		b	.L628
 16132              	.L627:
2401:..\src/command_processing.c **** 			else
2402:..\src/command_processing.c **** 				strcat(str, "NO\r\n"); 
 16133              		.loc 1 2402 0
 16134 1024 07F11C03 		add	r3, r7, #28
 16135 1028 1846     		mov	r0, r3
 16136 102a FFF7FEFF 		bl	strlen
 16137 102e 0346     		mov	r3, r0
 16138 1030 1A46     		mov	r2, r3
 16139 1032 07F11C03 		add	r3, r7, #28
 16140 1036 1344     		add	r3, r3, r2
 16141 1038 294A     		ldr	r2, .L646+52
 16142 103a 1068     		ldr	r0, [r2]	@ unaligned
 16143 103c 1860     		str	r0, [r3]	@ unaligned
 16144 103e 1279     		ldrb	r2, [r2, #4]
 16145 1040 1A71     		strb	r2, [r3, #4]
 16146              	.L628:
2403:..\src/command_processing.c **** 			strcat(str, "\tMagnetometers: ");
 16147              		.loc 1 2403 0
 16148 1042 07F11C03 		add	r3, r7, #28
 16149 1046 1846     		mov	r0, r3
 16150 1048 FFF7FEFF 		bl	strlen
 16151 104c 0346     		mov	r3, r0
 16152 104e 1A46     		mov	r2, r3
 16153 1050 07F11C03 		add	r3, r7, #28
 16154 1054 1344     		add	r3, r3, r2
 16155 1056 244A     		ldr	r2, .L646+60
 16156 1058 1D46     		mov	r5, r3
 16157 105a 1446     		mov	r4, r2
 16158 105c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16159 105e 2860     		str	r0, [r5]	@ unaligned
 16160 1060 6960     		str	r1, [r5, #4]	@ unaligned
 16161 1062 AA60     		str	r2, [r5, #8]	@ unaligned
 16162 1064 EB60     		str	r3, [r5, #12]	@ unaligned
 16163 1066 2378     		ldrb	r3, [r4]
 16164 1068 2B74     		strb	r3, [r5, #16]
2404:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][2]))
 16165              		.loc 1 2404 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 366


 16166 106a 194A     		ldr	r2, .L646+36
 16167 106c D7F89430 		ldr	r3, [r7, #148]
 16168 1070 1344     		add	r3, r3, r2
 16169 1072 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16170 1074 1946     		mov	r1, r3
 16171 1076 D7F88C20 		ldr	r2, [r7, #140]
 16172 107a 0B46     		mov	r3, r1
 16173 107c 9B00     		lsls	r3, r3, #2
 16174 107e 0B44     		add	r3, r3, r1
 16175 1080 1344     		add	r3, r3, r2
 16176 1082 03F50173 		add	r3, r3, #516
 16177 1086 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16178 1088 002B     		cmp	r3, #0
 16179 108a 2FD0     		beq	.L629
2405:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 16180              		.loc 1 2405 0
 16181 108c 07F11C03 		add	r3, r7, #28
 16182 1090 1846     		mov	r0, r3
 16183 1092 FFF7FEFF 		bl	strlen
 16184 1096 0346     		mov	r3, r0
 16185 1098 1A46     		mov	r2, r3
 16186 109a 07F11C03 		add	r3, r7, #28
 16187 109e 1344     		add	r3, r3, r2
 16188 10a0 0E4A     		ldr	r2, .L646+48
 16189 10a2 1068     		ldr	r0, [r2]	@ unaligned
 16190 10a4 1860     		str	r0, [r3]	@ unaligned
 16191 10a6 9288     		ldrh	r2, [r2, #4]	@ unaligned
 16192 10a8 9A80     		strh	r2, [r3, #4]	@ unaligned
 16193 10aa 2EE0     		b	.L630
 16194              	.L647:
 16195              		.align	2
 16196              	.L646:
 16197 10ac 3C180000 		.word	.LC230
 16198 10b0 58180000 		.word	.LC231
 16199 10b4 58110000 		.word	.LC152
 16200 10b8 B4180000 		.word	.LC235
 16201 10bc D0180000 		.word	.LC236
 16202 10c0 F8180000 		.word	.LC237
 16203 10c4 00000000 		.word	N_IMU_Connected
 16204 10c8 0C190000 		.word	.LC238
 16205 10cc 20190000 		.word	.LC239
 16206 10d0 00000000 		.word	IMU_connected
 16207 10d4 38190000 		.word	.LC240
 16208 10d8 4C190000 		.word	.LC241
 16209 10dc 1C130000 		.word	.LC175
 16210 10e0 24130000 		.word	.LC176
 16211 10e4 60190000 		.word	.LC242
 16212 10e8 70190000 		.word	.LC243
 16213              	.L629:
2406:..\src/command_processing.c **** 			else
2407:..\src/command_processing.c **** 				strcat(str, "NO\r\n");
 16214              		.loc 1 2407 0
 16215 10ec 07F11C03 		add	r3, r7, #28
 16216 10f0 1846     		mov	r0, r3
 16217 10f2 FFF7FEFF 		bl	strlen
 16218 10f6 0346     		mov	r3, r0
 16219 10f8 1A46     		mov	r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 367


 16220 10fa 07F11C03 		add	r3, r7, #28
 16221 10fe 1344     		add	r3, r3, r2
 16222 1100 584A     		ldr	r2, .L648
 16223 1102 1068     		ldr	r0, [r2]	@ unaligned
 16224 1104 1860     		str	r0, [r3]	@ unaligned
 16225 1106 1279     		ldrb	r2, [r2, #4]
 16226 1108 1A71     		strb	r2, [r3, #4]
 16227              	.L630:
2408:..\src/command_processing.c **** 			strcat(str, "\tQuaternion: ");                
 16228              		.loc 1 2408 0
 16229 110a 07F11C03 		add	r3, r7, #28
 16230 110e 1846     		mov	r0, r3
 16231 1110 FFF7FEFF 		bl	strlen
 16232 1114 0346     		mov	r3, r0
 16233 1116 1A46     		mov	r2, r3
 16234 1118 07F11C03 		add	r3, r7, #28
 16235 111c 1344     		add	r3, r3, r2
 16236 111e 524A     		ldr	r2, .L648+4
 16237 1120 1C46     		mov	r4, r3
 16238 1122 1346     		mov	r3, r2
 16239 1124 07CB     		ldmia	r3!, {r0, r1, r2}
 16240 1126 2060     		str	r0, [r4]	@ unaligned
 16241 1128 6160     		str	r1, [r4, #4]	@ unaligned
 16242 112a A260     		str	r2, [r4, #8]	@ unaligned
 16243 112c 1B88     		ldrh	r3, [r3]	@ unaligned
 16244 112e A381     		strh	r3, [r4, #12]	@ unaligned
2409:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][3]))
 16245              		.loc 1 2409 0
 16246 1130 4E4A     		ldr	r2, .L648+8
 16247 1132 D7F89430 		ldr	r3, [r7, #148]
 16248 1136 1344     		add	r3, r3, r2
 16249 1138 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16250 113a 1946     		mov	r1, r3
 16251 113c D7F88C20 		ldr	r2, [r7, #140]
 16252 1140 0B46     		mov	r3, r1
 16253 1142 9B00     		lsls	r3, r3, #2
 16254 1144 0B44     		add	r3, r3, r1
 16255 1146 1344     		add	r3, r3, r2
 16256 1148 03F20523 		addw	r3, r3, #517
 16257 114c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16258 114e 002B     		cmp	r3, #0
 16259 1150 0FD0     		beq	.L631
2410:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 16260              		.loc 1 2410 0
 16261 1152 07F11C03 		add	r3, r7, #28
 16262 1156 1846     		mov	r0, r3
 16263 1158 FFF7FEFF 		bl	strlen
 16264 115c 0346     		mov	r3, r0
 16265 115e 1A46     		mov	r2, r3
 16266 1160 07F11C03 		add	r3, r7, #28
 16267 1164 1344     		add	r3, r3, r2
 16268 1166 424A     		ldr	r2, .L648+12
 16269 1168 1068     		ldr	r0, [r2]	@ unaligned
 16270 116a 1860     		str	r0, [r3]	@ unaligned
 16271 116c 9288     		ldrh	r2, [r2, #4]	@ unaligned
 16272 116e 9A80     		strh	r2, [r3, #4]	@ unaligned
 16273 1170 0EE0     		b	.L632
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 368


 16274              	.L631:
2411:..\src/command_processing.c **** 			else
2412:..\src/command_processing.c **** 				strcat(str, "NO\r\n");
 16275              		.loc 1 2412 0
 16276 1172 07F11C03 		add	r3, r7, #28
 16277 1176 1846     		mov	r0, r3
 16278 1178 FFF7FEFF 		bl	strlen
 16279 117c 0346     		mov	r3, r0
 16280 117e 1A46     		mov	r2, r3
 16281 1180 07F11C03 		add	r3, r7, #28
 16282 1184 1344     		add	r3, r3, r2
 16283 1186 374A     		ldr	r2, .L648
 16284 1188 1068     		ldr	r0, [r2]	@ unaligned
 16285 118a 1860     		str	r0, [r3]	@ unaligned
 16286 118c 1279     		ldrb	r2, [r2, #4]
 16287 118e 1A71     		strb	r2, [r3, #4]
 16288              	.L632:
2413:..\src/command_processing.c **** 			strcat(str, "\tTemperature: ");
 16289              		.loc 1 2413 0
 16290 1190 07F11C03 		add	r3, r7, #28
 16291 1194 1846     		mov	r0, r3
 16292 1196 FFF7FEFF 		bl	strlen
 16293 119a 0346     		mov	r3, r0
 16294 119c 1A46     		mov	r2, r3
 16295 119e 07F11C03 		add	r3, r7, #28
 16296 11a2 1344     		add	r3, r3, r2
 16297 11a4 334A     		ldr	r2, .L648+16
 16298 11a6 1C46     		mov	r4, r3
 16299 11a8 1346     		mov	r3, r2
 16300 11aa 07CB     		ldmia	r3!, {r0, r1, r2}
 16301 11ac 2060     		str	r0, [r4]	@ unaligned
 16302 11ae 6160     		str	r1, [r4, #4]	@ unaligned
 16303 11b0 A260     		str	r2, [r4, #8]	@ unaligned
 16304 11b2 1A88     		ldrh	r2, [r3]	@ unaligned
 16305 11b4 9B78     		ldrb	r3, [r3, #2]
 16306 11b6 A281     		strh	r2, [r4, #12]	@ unaligned
 16307 11b8 A373     		strb	r3, [r4, #14]
2414:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][4]))
 16308              		.loc 1 2414 0
 16309 11ba 2C4A     		ldr	r2, .L648+8
 16310 11bc D7F89430 		ldr	r3, [r7, #148]
 16311 11c0 1344     		add	r3, r3, r2
 16312 11c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16313 11c4 1946     		mov	r1, r3
 16314 11c6 D7F88C20 		ldr	r2, [r7, #140]
 16315 11ca 0B46     		mov	r3, r1
 16316 11cc 9B00     		lsls	r3, r3, #2
 16317 11ce 0B44     		add	r3, r3, r1
 16318 11d0 1344     		add	r3, r3, r2
 16319 11d2 03F20623 		addw	r3, r3, #518
 16320 11d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16321 11d8 002B     		cmp	r3, #0
 16322 11da 0FD0     		beq	.L633
2415:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 16323              		.loc 1 2415 0
 16324 11dc 07F11C03 		add	r3, r7, #28
 16325 11e0 1846     		mov	r0, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 369


 16326 11e2 FFF7FEFF 		bl	strlen
 16327 11e6 0346     		mov	r3, r0
 16328 11e8 1A46     		mov	r2, r3
 16329 11ea 07F11C03 		add	r3, r7, #28
 16330 11ee 1344     		add	r3, r3, r2
 16331 11f0 1F4A     		ldr	r2, .L648+12
 16332 11f2 1068     		ldr	r0, [r2]	@ unaligned
 16333 11f4 1860     		str	r0, [r3]	@ unaligned
 16334 11f6 9288     		ldrh	r2, [r2, #4]	@ unaligned
 16335 11f8 9A80     		strh	r2, [r3, #4]	@ unaligned
 16336 11fa 0EE0     		b	.L634
 16337              	.L633:
2416:..\src/command_processing.c **** 			else
2417:..\src/command_processing.c **** 				strcat(str, "NO\r\n");
 16338              		.loc 1 2417 0
 16339 11fc 07F11C03 		add	r3, r7, #28
 16340 1200 1846     		mov	r0, r3
 16341 1202 FFF7FEFF 		bl	strlen
 16342 1206 0346     		mov	r3, r0
 16343 1208 1A46     		mov	r2, r3
 16344 120a 07F11C03 		add	r3, r7, #28
 16345 120e 1344     		add	r3, r3, r2
 16346 1210 144A     		ldr	r2, .L648
 16347 1212 1068     		ldr	r0, [r2]	@ unaligned
 16348 1214 1860     		str	r0, [r3]	@ unaligned
 16349 1216 1279     		ldrb	r2, [r2, #4]
 16350 1218 1A71     		strb	r2, [r3, #4]
 16351              	.L634:
2418:..\src/command_processing.c **** 				 
2419:..\src/command_processing.c **** 			strcat(info_string, str);
 16352              		.loc 1 2419 0 discriminator 2
 16353 121a 07F11C03 		add	r3, r7, #28
 16354 121e 1946     		mov	r1, r3
 16355 1220 7869     		ldr	r0, [r7, #20]
 16356 1222 FFF7FEFF 		bl	strcat
2389:..\src/command_processing.c **** 			sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 16357              		.loc 1 2389 0 discriminator 2
 16358 1226 D7F89430 		ldr	r3, [r7, #148]
 16359 122a 0133     		adds	r3, r3, #1
 16360 122c C7F89430 		str	r3, [r7, #148]
 16361              	.L624:
2389:..\src/command_processing.c **** 			sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 16362              		.loc 1 2389 0 is_stmt 0 discriminator 1
 16363 1230 114B     		ldr	r3, .L648+20
 16364 1232 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16365 1234 1A46     		mov	r2, r3
 16366 1236 D7F89430 		ldr	r3, [r7, #148]
 16367 123a 9A42     		cmp	r2, r3
 16368 123c 3FF773AE 		bgt	.L635
2420:..\src/command_processing.c **** 		}       
2421:..\src/command_processing.c **** 		
2422:..\src/command_processing.c **** 		strcat(info_string, "\r\n");
 16369              		.loc 1 2422 0 is_stmt 1
 16370 1240 7869     		ldr	r0, [r7, #20]
 16371 1242 FFF7FEFF 		bl	strlen
 16372 1246 0346     		mov	r3, r0
 16373 1248 1A46     		mov	r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 370


 16374 124a 7B69     		ldr	r3, [r7, #20]
 16375 124c 1344     		add	r3, r3, r2
 16376 124e 0B4A     		ldr	r2, .L648+24
 16377 1250 1188     		ldrh	r1, [r2]	@ unaligned
 16378 1252 9278     		ldrb	r2, [r2, #2]
 16379 1254 1980     		strh	r1, [r3]	@ unaligned
 16380 1256 9A70     		strb	r2, [r3, #2]
 16381              	.L637:
2423:..\src/command_processing.c **** 	}
2424:..\src/command_processing.c **** }
 16382              		.loc 1 2424 0
 16383 1258 00BF     		nop
 16384 125a 9C37     		adds	r7, r7, #156
 16385              		.cfi_def_cfa_offset 36
 16386 125c BD46     		mov	sp, r7
 16387              		.cfi_def_cfa_register 13
 16388              		@ sp needed
 16389 125e BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 16390              	.L649:
 16391 1262 00BF     		.align	2
 16392              	.L648:
 16393 1264 24130000 		.word	.LC176
 16394 1268 84190000 		.word	.LC244
 16395 126c 00000000 		.word	IMU_connected
 16396 1270 1C130000 		.word	.LC175
 16397 1274 94190000 		.word	.LC245
 16398 1278 00000000 		.word	N_IMU_Connected
 16399 127c 58110000 		.word	.LC152
 16400              		.cfi_endproc
 16401              	.LFE74:
 16402              		.size	prepare_SD_param_info, .-prepare_SD_param_info
 16403              		.section	.rodata
 16404 1da6 0000     		.align	2
 16405              	.LC278:
 16406 1da8 486F7572 		.ascii	"Hour,Min,Sec,\000"
 16406      2C4D696E 
 16406      2C536563 
 16406      2C00
 16407 1db6 0000     		.align	2
 16408              	.LC279:
 16409 1db8 42696E5F 		.ascii	"Bin_%d_Pos,\000"
 16409      25645F50 
 16409      6F732C00 
 16410              		.align	2
 16411              	.LC280:
 16412 1dc4 42696E5F 		.ascii	"Bin_%d_Curr,\000"
 16412      25645F43 
 16412      7572722C 
 16412      00
 16413 1dd1 000000   		.align	2
 16414              	.LC281:
 16415 1dd4 52657374 		.ascii	"Rest_times,Wire_disp,Total_rest_time,Power_cycles,E"
 16415      5F74696D 
 16415      65732C57 
 16415      6972655F 
 16415      64697370 
 16416 1e07 4D475F31 		.ascii	"MG_1_act,EMG_2_act,EMG_1_excess,EMG_2_excess,Motion"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 371


 16416      5F616374 
 16416      2C454D47 
 16416      5F325F61 
 16416      63742C45 
 16417 1e3a 5F312C4D 		.ascii	"_1,Motion_2,Total_runtime\000"
 16417      6F74696F 
 16417      6E5F322C 
 16417      546F7461 
 16417      6C5F7275 
 16418              		.section	.text.prepare_SD_legend,"ax",%progbits
 16419              		.align	2
 16420              		.global	prepare_SD_legend
 16421              		.thumb
 16422              		.thumb_func
 16423              		.type	prepare_SD_legend, %function
 16424              	prepare_SD_legend:
 16425              	.LFB75:
2425:..\src/command_processing.c **** 
2426:..\src/command_processing.c **** 
2427:..\src/command_processing.c **** //==============================================================================
2428:..\src/command_processing.c **** //                                                        PREPARE SD CARD LEGEND
2429:..\src/command_processing.c **** //==============================================================================
2430:..\src/command_processing.c **** void prepare_SD_legend(char *info_string)
2431:..\src/command_processing.c **** {
 16426              		.loc 1 2431 0
 16427              		.cfi_startproc
 16428              		@ args = 0, pretend = 0, frame = 152
 16429              		@ frame_needed = 1, uses_anonymous_args = 0
 16430 0000 90B5     		push	{r4, r7, lr}
 16431              		.cfi_def_cfa_offset 12
 16432              		.cfi_offset 4, -12
 16433              		.cfi_offset 7, -8
 16434              		.cfi_offset 14, -4
 16435 0002 A7B0     		sub	sp, sp, #156
 16436              		.cfi_def_cfa_offset 168
 16437 0004 00AF     		add	r7, sp, #0
 16438              		.cfi_def_cfa_register 7
 16439 0006 7860     		str	r0, [r7, #4]
2432:..\src/command_processing.c ****     char str[140];  
2433:..\src/command_processing.c ****     int i;
2434:..\src/command_processing.c ****         
2435:..\src/command_processing.c ****     // Legend
2436:..\src/command_processing.c ****     strcpy(info_string, "Hour,Min,Sec,");
 16440              		.loc 1 2436 0
 16441 0008 7B68     		ldr	r3, [r7, #4]
 16442 000a 2F4A     		ldr	r2, .L655
 16443 000c 1C46     		mov	r4, r3
 16444 000e 1346     		mov	r3, r2
 16445 0010 07CB     		ldmia	r3!, {r0, r1, r2}
 16446 0012 2060     		str	r0, [r4]	@ unaligned
 16447 0014 6160     		str	r1, [r4, #4]	@ unaligned
 16448 0016 A260     		str	r2, [r4, #8]	@ unaligned
 16449 0018 1B88     		ldrh	r3, [r3]	@ unaligned
 16450 001a A381     		strh	r3, [r4, #12]	@ unaligned
2437:..\src/command_processing.c ****     for (i=1; i<=10;i++){       // Position bins
 16451              		.loc 1 2437 0
 16452 001c 0123     		movs	r3, #1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 372


 16453 001e C7F89430 		str	r3, [r7, #148]
 16454 0022 12E0     		b	.L651
 16455              	.L652:
2438:..\src/command_processing.c ****         sprintf(str, "Bin_%d_Pos,", i); 
 16456              		.loc 1 2438 0 discriminator 3
 16457 0024 07F10803 		add	r3, r7, #8
 16458 0028 D7F89420 		ldr	r2, [r7, #148]
 16459 002c 2749     		ldr	r1, .L655+4
 16460 002e 1846     		mov	r0, r3
 16461 0030 FFF7FEFF 		bl	sprintf
2439:..\src/command_processing.c ****         strcat(info_string, str);
 16462              		.loc 1 2439 0 discriminator 3
 16463 0034 07F10803 		add	r3, r7, #8
 16464 0038 1946     		mov	r1, r3
 16465 003a 7868     		ldr	r0, [r7, #4]
 16466 003c FFF7FEFF 		bl	strcat
2437:..\src/command_processing.c ****     for (i=1; i<=10;i++){       // Position bins
 16467              		.loc 1 2437 0 discriminator 3
 16468 0040 D7F89430 		ldr	r3, [r7, #148]
 16469 0044 0133     		adds	r3, r3, #1
 16470 0046 C7F89430 		str	r3, [r7, #148]
 16471              	.L651:
2437:..\src/command_processing.c ****     for (i=1; i<=10;i++){       // Position bins
 16472              		.loc 1 2437 0 is_stmt 0 discriminator 1
 16473 004a D7F89430 		ldr	r3, [r7, #148]
 16474 004e 0A2B     		cmp	r3, #10
 16475 0050 E8DD     		ble	.L652
2440:..\src/command_processing.c ****     }
2441:..\src/command_processing.c ****     for (i=1; i<=4;i++){        // Current bins
 16476              		.loc 1 2441 0 is_stmt 1
 16477 0052 0123     		movs	r3, #1
 16478 0054 C7F89430 		str	r3, [r7, #148]
 16479 0058 12E0     		b	.L653
 16480              	.L654:
2442:..\src/command_processing.c ****         sprintf(str, "Bin_%d_Curr,", i); 
 16481              		.loc 1 2442 0 discriminator 3
 16482 005a 07F10803 		add	r3, r7, #8
 16483 005e D7F89420 		ldr	r2, [r7, #148]
 16484 0062 1B49     		ldr	r1, .L655+8
 16485 0064 1846     		mov	r0, r3
 16486 0066 FFF7FEFF 		bl	sprintf
2443:..\src/command_processing.c ****         strcat(info_string, str);
 16487              		.loc 1 2443 0 discriminator 3
 16488 006a 07F10803 		add	r3, r7, #8
 16489 006e 1946     		mov	r1, r3
 16490 0070 7868     		ldr	r0, [r7, #4]
 16491 0072 FFF7FEFF 		bl	strcat
2441:..\src/command_processing.c ****         sprintf(str, "Bin_%d_Curr,", i); 
 16492              		.loc 1 2441 0 discriminator 3
 16493 0076 D7F89430 		ldr	r3, [r7, #148]
 16494 007a 0133     		adds	r3, r3, #1
 16495 007c C7F89430 		str	r3, [r7, #148]
 16496              	.L653:
2441:..\src/command_processing.c ****         sprintf(str, "Bin_%d_Curr,", i); 
 16497              		.loc 1 2441 0 is_stmt 0 discriminator 1
 16498 0080 D7F89430 		ldr	r3, [r7, #148]
 16499 0084 042B     		cmp	r3, #4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 373


 16500 0086 E8DD     		ble	.L654
2444:..\src/command_processing.c ****     }
2445:..\src/command_processing.c ****     sprintf(str, "Rest_times,Wire_disp,Total_rest_time,Power_cycles,EMG_1_act,EMG_2_act,EMG_1_exces
 16501              		.loc 1 2445 0 is_stmt 1
 16502 0088 07F10803 		add	r3, r7, #8
 16503 008c 114A     		ldr	r2, .L655+12
 16504 008e 1846     		mov	r0, r3
 16505 0090 1146     		mov	r1, r2
 16506 0092 8023     		movs	r3, #128
 16507 0094 1A46     		mov	r2, r3
 16508 0096 FFF7FEFF 		bl	memcpy
2446:..\src/command_processing.c ****     strcat(info_string, str);
 16509              		.loc 1 2446 0
 16510 009a 07F10803 		add	r3, r7, #8
 16511 009e 1946     		mov	r1, r3
 16512 00a0 7868     		ldr	r0, [r7, #4]
 16513 00a2 FFF7FEFF 		bl	strcat
2447:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 16514              		.loc 1 2447 0
 16515 00a6 7868     		ldr	r0, [r7, #4]
 16516 00a8 FFF7FEFF 		bl	strlen
 16517 00ac 0346     		mov	r3, r0
 16518 00ae 1A46     		mov	r2, r3
 16519 00b0 7B68     		ldr	r3, [r7, #4]
 16520 00b2 1344     		add	r3, r3, r2
 16521 00b4 084A     		ldr	r2, .L655+16
 16522 00b6 1188     		ldrh	r1, [r2]	@ unaligned
 16523 00b8 9278     		ldrb	r2, [r2, #2]
 16524 00ba 1980     		strh	r1, [r3]	@ unaligned
 16525 00bc 9A70     		strb	r2, [r3, #2]
2448:..\src/command_processing.c **** }
 16526              		.loc 1 2448 0
 16527 00be 00BF     		nop
 16528 00c0 9C37     		adds	r7, r7, #156
 16529              		.cfi_def_cfa_offset 12
 16530 00c2 BD46     		mov	sp, r7
 16531              		.cfi_def_cfa_register 13
 16532              		@ sp needed
 16533 00c4 90BD     		pop	{r4, r7, pc}
 16534              	.L656:
 16535 00c6 00BF     		.align	2
 16536              	.L655:
 16537 00c8 A81D0000 		.word	.LC278
 16538 00cc B81D0000 		.word	.LC279
 16539 00d0 C41D0000 		.word	.LC280
 16540 00d4 D41D0000 		.word	.LC281
 16541 00d8 58110000 		.word	.LC152
 16542              		.cfi_endproc
 16543              	.LFE75:
 16544              		.size	prepare_SD_legend, .-prepare_SD_legend
 16545              		.section	.rodata
 16546              		.align	2
 16547              	.LC282:
 16548 1e54 25303264 		.ascii	"%02d,%02d,%02d,\000"
 16548      2C253032 
 16548      642C2530 
 16548      32642C00 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 374


 16549              		.align	2
 16550              	.LC283:
 16551 1e64 256C752C 		.ascii	"%lu,\000"
 16551      00
 16552 1e69 000000   		.align	2
 16553              	.LC284:
 16554 1e6c 256C752C 		.ascii	"%lu,%lu,%lu,%lu,\000"
 16554      256C752C 
 16554      256C752C 
 16554      256C752C 
 16554      00
 16555 1e7d 000000   		.align	2
 16556              	.LC285:
 16557 1e80 256C752C 		.ascii	"%lu,%lu,%lu,%lu,%lu,%lu,\000"
 16557      256C752C 
 16557      256C752C 
 16557      256C752C 
 16557      256C752C 
 16558 1e99 000000   		.align	2
 16559              	.LC286:
 16560 1e9c 256C7500 		.ascii	"%lu\000"
 16561              		.section	.text.prepare_SD_info,"ax",%progbits
 16562              		.align	2
 16563              		.global	prepare_SD_info
 16564              		.thumb
 16565              		.thumb_func
 16566              		.type	prepare_SD_info, %function
 16567              	prepare_SD_info:
 16568              	.LFB76:
2449:..\src/command_processing.c **** 
2450:..\src/command_processing.c **** 
2451:..\src/command_processing.c **** //==============================================================================
2452:..\src/command_processing.c **** //                                                          PREPARE SD CARD INFO
2453:..\src/command_processing.c **** //==============================================================================
2454:..\src/command_processing.c **** void prepare_SD_info(char *info_string)
2455:..\src/command_processing.c **** {
 16569              		.loc 1 2455 0
 16570              		.cfi_startproc
 16571              		@ args = 0, pretend = 0, frame = 136
 16572              		@ frame_needed = 1, uses_anonymous_args = 0
 16573 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 16574              		.cfi_def_cfa_offset 20
 16575              		.cfi_offset 4, -20
 16576              		.cfi_offset 5, -16
 16577              		.cfi_offset 6, -12
 16578              		.cfi_offset 7, -8
 16579              		.cfi_offset 14, -4
 16580 0002 A7B0     		sub	sp, sp, #156
 16581              		.cfi_def_cfa_offset 176
 16582 0004 04AF     		add	r7, sp, #16
 16583              		.cfi_def_cfa 7, 160
 16584 0006 7860     		str	r0, [r7, #4]
2456:..\src/command_processing.c ****     char str[120];  
2457:..\src/command_processing.c ****     int i;
2458:..\src/command_processing.c ****             
2459:..\src/command_processing.c ****     strcpy(info_string, "");
 16585              		.loc 1 2459 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 375


 16586 0008 7B68     		ldr	r3, [r7, #4]
 16587 000a 0022     		movs	r2, #0
 16588 000c 1A70     		strb	r2, [r3]
2460:..\src/command_processing.c ****     
2461:..\src/command_processing.c ****     // Time
2462:..\src/command_processing.c ****     strcat(info_string, "");
2463:..\src/command_processing.c ****     sprintf(str, "%02d,%02d,%02d,", (int)g_mem.exp.curr_time[3], (int)g_mem.exp.curr_time[4], (int)
 16589              		.loc 1 2463 0
 16590 000e 554B     		ldr	r3, .L662
 16591 0010 93F82332 		ldrb	r3, [r3, #547]	@ zero_extendqisi2
 16592 0014 1A46     		mov	r2, r3
 16593 0016 534B     		ldr	r3, .L662
 16594 0018 93F82432 		ldrb	r3, [r3, #548]	@ zero_extendqisi2
 16595 001c 1946     		mov	r1, r3
 16596 001e 514B     		ldr	r3, .L662
 16597 0020 93F82532 		ldrb	r3, [r3, #549]	@ zero_extendqisi2
 16598 0024 07F10C00 		add	r0, r7, #12
 16599 0028 0093     		str	r3, [sp]
 16600 002a 0B46     		mov	r3, r1
 16601 002c 4E49     		ldr	r1, .L662+4
 16602 002e FFF7FEFF 		bl	sprintf
2464:..\src/command_processing.c ****     strcat(info_string, str);
 16603              		.loc 1 2464 0
 16604 0032 07F10C03 		add	r3, r7, #12
 16605 0036 1946     		mov	r1, r3
 16606 0038 7868     		ldr	r0, [r7, #4]
 16607 003a FFF7FEFF 		bl	strcat
2465:..\src/command_processing.c **** 
2466:..\src/command_processing.c ****     // Pos_Bin
2467:..\src/command_processing.c ****     for (i=1; i<=10;i++){
 16608              		.loc 1 2467 0
 16609 003e 0123     		movs	r3, #1
 16610 0040 C7F88430 		str	r3, [r7, #132]
 16611 0044 17E0     		b	.L658
 16612              	.L659:
2468:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.position_hist[i-1]); 
 16613              		.loc 1 2468 0 discriminator 3
 16614 0046 D7F88430 		ldr	r3, [r7, #132]
 16615 004a 013B     		subs	r3, r3, #1
 16616 004c 454A     		ldr	r2, .L662
 16617 004e 0633     		adds	r3, r3, #6
 16618 0050 52F82320 		ldr	r2, [r2, r3, lsl #2]
 16619 0054 07F10C03 		add	r3, r7, #12
 16620 0058 4449     		ldr	r1, .L662+8
 16621 005a 1846     		mov	r0, r3
 16622 005c FFF7FEFF 		bl	sprintf
2469:..\src/command_processing.c ****         strcat(info_string, str);
 16623              		.loc 1 2469 0 discriminator 3
 16624 0060 07F10C03 		add	r3, r7, #12
 16625 0064 1946     		mov	r1, r3
 16626 0066 7868     		ldr	r0, [r7, #4]
 16627 0068 FFF7FEFF 		bl	strcat
2467:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.position_hist[i-1]); 
 16628              		.loc 1 2467 0 discriminator 3
 16629 006c D7F88430 		ldr	r3, [r7, #132]
 16630 0070 0133     		adds	r3, r3, #1
 16631 0072 C7F88430 		str	r3, [r7, #132]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 376


 16632              	.L658:
2467:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.position_hist[i-1]); 
 16633              		.loc 1 2467 0 is_stmt 0 discriminator 1
 16634 0076 D7F88430 		ldr	r3, [r7, #132]
 16635 007a 0A2B     		cmp	r3, #10
 16636 007c E3DD     		ble	.L659
2470:..\src/command_processing.c ****     }
2471:..\src/command_processing.c ****     
2472:..\src/command_processing.c ****     // Curr_Bin
2473:..\src/command_processing.c ****     for (i=1; i<=4;i++){
 16637              		.loc 1 2473 0 is_stmt 1
 16638 007e 0123     		movs	r3, #1
 16639 0080 C7F88430 		str	r3, [r7, #132]
 16640 0084 17E0     		b	.L660
 16641              	.L661:
2474:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.current_hist[i-1]); 
 16642              		.loc 1 2474 0 discriminator 3
 16643 0086 D7F88430 		ldr	r3, [r7, #132]
 16644 008a 013B     		subs	r3, r3, #1
 16645 008c 354A     		ldr	r2, .L662
 16646 008e 1033     		adds	r3, r3, #16
 16647 0090 52F82320 		ldr	r2, [r2, r3, lsl #2]
 16648 0094 07F10C03 		add	r3, r7, #12
 16649 0098 3449     		ldr	r1, .L662+8
 16650 009a 1846     		mov	r0, r3
 16651 009c FFF7FEFF 		bl	sprintf
2475:..\src/command_processing.c ****         strcat(info_string, str);
 16652              		.loc 1 2475 0 discriminator 3
 16653 00a0 07F10C03 		add	r3, r7, #12
 16654 00a4 1946     		mov	r1, r3
 16655 00a6 7868     		ldr	r0, [r7, #4]
 16656 00a8 FFF7FEFF 		bl	strcat
2473:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.current_hist[i-1]); 
 16657              		.loc 1 2473 0 discriminator 3
 16658 00ac D7F88430 		ldr	r3, [r7, #132]
 16659 00b0 0133     		adds	r3, r3, #1
 16660 00b2 C7F88430 		str	r3, [r7, #132]
 16661              	.L660:
2473:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.current_hist[i-1]); 
 16662              		.loc 1 2473 0 is_stmt 0 discriminator 1
 16663 00b6 D7F88430 		ldr	r3, [r7, #132]
 16664 00ba 042B     		cmp	r3, #4
 16665 00bc E3DD     		ble	.L661
2476:..\src/command_processing.c ****     }
2477:..\src/command_processing.c **** 
2478:..\src/command_processing.c ****     // Rest_times, Wire_disp, Total_time_rest, Power_cycles
2479:..\src/command_processing.c ****     sprintf(str, "%lu,%lu,%lu,%lu,", g_mem.cnt.rest_counter, g_mem.cnt.wire_disp, g_mem.cnt.total_t
 16666              		.loc 1 2479 0 is_stmt 1
 16667 00be 294B     		ldr	r3, .L662
 16668 00c0 196D     		ldr	r1, [r3, #80]
 16669 00c2 284B     		ldr	r3, .L662
 16670 00c4 5C6D     		ldr	r4, [r3, #84]
 16671 00c6 274B     		ldr	r3, .L662
 16672 00c8 DB6D     		ldr	r3, [r3, #92]
 16673 00ca 264A     		ldr	r2, .L662
 16674 00cc 126E     		ldr	r2, [r2, #96]
 16675 00ce 07F10C00 		add	r0, r7, #12
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 377


 16676 00d2 0192     		str	r2, [sp, #4]
 16677 00d4 0093     		str	r3, [sp]
 16678 00d6 2346     		mov	r3, r4
 16679 00d8 0A46     		mov	r2, r1
 16680 00da 2549     		ldr	r1, .L662+12
 16681 00dc FFF7FEFF 		bl	sprintf
2480:..\src/command_processing.c ****     strcat(info_string, str);
 16682              		.loc 1 2480 0
 16683 00e0 07F10C03 		add	r3, r7, #12
 16684 00e4 1946     		mov	r1, r3
 16685 00e6 7868     		ldr	r0, [r7, #4]
 16686 00e8 FFF7FEFF 		bl	strcat
2481:..\src/command_processing.c ****     
2482:..\src/command_processing.c ****     // EMG_1_act, EMG_2_act, EMG_1_excess, EMG_2_excess, Motion_1, Motion_2
2483:..\src/command_processing.c ****     sprintf(str, "%lu,%lu,%lu,%lu,%lu,%lu,", g_mem.cnt.emg_act_counter[0], g_mem.cnt.emg_act_counte
 16687              		.loc 1 2483 0
 16688 00ec 1D4B     		ldr	r3, .L662
 16689 00ee 1D69     		ldr	r5, [r3, #16]
 16690 00f0 1C4B     		ldr	r3, .L662
 16691 00f2 5E69     		ldr	r6, [r3, #20]
 16692 00f4 1B4B     		ldr	r3, .L662
 16693 00f6 5B6E     		ldr	r3, [r3, #100]
 16694 00f8 1A4A     		ldr	r2, .L662
 16695 00fa 926E     		ldr	r2, [r2, #104]
 16696 00fc 1949     		ldr	r1, .L662
 16697 00fe C96E     		ldr	r1, [r1, #108]
 16698 0100 1848     		ldr	r0, .L662
 16699 0102 006F     		ldr	r0, [r0, #112]
 16700 0104 07F10C04 		add	r4, r7, #12
 16701 0108 0390     		str	r0, [sp, #12]
 16702 010a 0291     		str	r1, [sp, #8]
 16703 010c 0192     		str	r2, [sp, #4]
 16704 010e 0093     		str	r3, [sp]
 16705 0110 3346     		mov	r3, r6
 16706 0112 2A46     		mov	r2, r5
 16707 0114 1749     		ldr	r1, .L662+16
 16708 0116 2046     		mov	r0, r4
 16709 0118 FFF7FEFF 		bl	sprintf
2484:..\src/command_processing.c ****                                     g_mem.cnt.excessive_signal_activity[0], g_mem.cnt.excessive_sig
2485:..\src/command_processing.c ****                                     g_mem.cnt.motion_counter[0], g_mem.cnt.motion_counter[1]);
2486:..\src/command_processing.c ****     strcat(info_string, str);
 16710              		.loc 1 2486 0
 16711 011c 07F10C03 		add	r3, r7, #12
 16712 0120 1946     		mov	r1, r3
 16713 0122 7868     		ldr	r0, [r7, #4]
 16714 0124 FFF7FEFF 		bl	strcat
2487:..\src/command_processing.c ****     
2488:..\src/command_processing.c ****     // Total_runtime
2489:..\src/command_processing.c ****     sprintf(str, "%lu", g_mem.cnt.total_runtime);
 16715              		.loc 1 2489 0
 16716 0128 0E4B     		ldr	r3, .L662
 16717 012a 9A6D     		ldr	r2, [r3, #88]
 16718 012c 07F10C03 		add	r3, r7, #12
 16719 0130 1149     		ldr	r1, .L662+20
 16720 0132 1846     		mov	r0, r3
 16721 0134 FFF7FEFF 		bl	sprintf
2490:..\src/command_processing.c ****     strcat(info_string, str);
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 378


 16722              		.loc 1 2490 0
 16723 0138 07F10C03 		add	r3, r7, #12
 16724 013c 1946     		mov	r1, r3
 16725 013e 7868     		ldr	r0, [r7, #4]
 16726 0140 FFF7FEFF 		bl	strcat
2491:..\src/command_processing.c ****     
2492:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 16727              		.loc 1 2492 0
 16728 0144 7868     		ldr	r0, [r7, #4]
 16729 0146 FFF7FEFF 		bl	strlen
 16730 014a 0346     		mov	r3, r0
 16731 014c 1A46     		mov	r2, r3
 16732 014e 7B68     		ldr	r3, [r7, #4]
 16733 0150 1344     		add	r3, r3, r2
 16734 0152 0A4A     		ldr	r2, .L662+24
 16735 0154 1188     		ldrh	r1, [r2]	@ unaligned
 16736 0156 9278     		ldrb	r2, [r2, #2]
 16737 0158 1980     		strh	r1, [r3]	@ unaligned
 16738 015a 9A70     		strb	r2, [r3, #2]
2493:..\src/command_processing.c **** }
 16739              		.loc 1 2493 0
 16740 015c 00BF     		nop
 16741 015e 8C37     		adds	r7, r7, #140
 16742              		.cfi_def_cfa_offset 20
 16743 0160 BD46     		mov	sp, r7
 16744              		.cfi_def_cfa_register 13
 16745              		@ sp needed
 16746 0162 F0BD     		pop	{r4, r5, r6, r7, pc}
 16747              	.L663:
 16748              		.align	2
 16749              	.L662:
 16750 0164 00000000 		.word	g_mem
 16751 0168 541E0000 		.word	.LC282
 16752 016c 641E0000 		.word	.LC283
 16753 0170 6C1E0000 		.word	.LC284
 16754 0174 801E0000 		.word	.LC285
 16755 0178 9C1E0000 		.word	.LC286
 16756 017c 58110000 		.word	.LC152
 16757              		.cfi_endproc
 16758              	.LFE76:
 16759              		.size	prepare_SD_info, .-prepare_SD_info
 16760              		.section	.rodata
 16761              		.align	2
 16762              	.LC287:
 16763 1ea0 54696D65 		.ascii	"Time,EMG1,EMG2\012\000"
 16763      2C454D47 
 16763      312C454D 
 16763      47320A00 
 16764              		.section	.text.prepare_SD_EMG_History_legend,"ax",%progbits
 16765              		.align	2
 16766              		.global	prepare_SD_EMG_History_legend
 16767              		.thumb
 16768              		.thumb_func
 16769              		.type	prepare_SD_EMG_History_legend, %function
 16770              	prepare_SD_EMG_History_legend:
 16771              	.LFB77:
2494:..\src/command_processing.c **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 379


2495:..\src/command_processing.c **** //==============================================================================
2496:..\src/command_processing.c **** //                                            PREPARE SD CARD EMG HISTORY LEGEND
2497:..\src/command_processing.c **** //==============================================================================
2498:..\src/command_processing.c **** void prepare_SD_EMG_History_legend(char *info_string)
2499:..\src/command_processing.c **** {
 16772              		.loc 1 2499 0
 16773              		.cfi_startproc
 16774              		@ args = 0, pretend = 0, frame = 8
 16775              		@ frame_needed = 1, uses_anonymous_args = 0
 16776              		@ link register save eliminated.
 16777 0000 B0B4     		push	{r4, r5, r7}
 16778              		.cfi_def_cfa_offset 12
 16779              		.cfi_offset 4, -12
 16780              		.cfi_offset 5, -8
 16781              		.cfi_offset 7, -4
 16782 0002 83B0     		sub	sp, sp, #12
 16783              		.cfi_def_cfa_offset 24
 16784 0004 00AF     		add	r7, sp, #0
 16785              		.cfi_def_cfa_register 7
 16786 0006 7860     		str	r0, [r7, #4]
2500:..\src/command_processing.c ****         
2501:..\src/command_processing.c ****     // Legend
2502:..\src/command_processing.c ****     strcpy(info_string, "Time,EMG1,EMG2\n");
 16787              		.loc 1 2502 0
 16788 0008 7B68     		ldr	r3, [r7, #4]
 16789 000a 064A     		ldr	r2, .L665
 16790 000c 1C46     		mov	r4, r3
 16791 000e 1546     		mov	r5, r2
 16792 0010 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 16793 0012 2060     		str	r0, [r4]	@ unaligned
 16794 0014 6160     		str	r1, [r4, #4]	@ unaligned
 16795 0016 A260     		str	r2, [r4, #8]	@ unaligned
 16796 0018 E360     		str	r3, [r4, #12]	@ unaligned
2503:..\src/command_processing.c ****     
2504:..\src/command_processing.c **** }
 16797              		.loc 1 2504 0
 16798 001a 00BF     		nop
 16799 001c 0C37     		adds	r7, r7, #12
 16800              		.cfi_def_cfa_offset 12
 16801 001e BD46     		mov	sp, r7
 16802              		.cfi_def_cfa_register 13
 16803              		@ sp needed
 16804 0020 B0BC     		pop	{r4, r5, r7}
 16805              		.cfi_restore 7
 16806              		.cfi_restore 5
 16807              		.cfi_restore 4
 16808              		.cfi_def_cfa_offset 0
 16809 0022 7047     		bx	lr
 16810              	.L666:
 16811              		.align	2
 16812              	.L665:
 16813 0024 A01E0000 		.word	.LC287
 16814              		.cfi_endproc
 16815              	.LFE77:
 16816              		.size	prepare_SD_EMG_History_legend, .-prepare_SD_EMG_History_legend
 16817              		.section	.rodata
 16818              		.align	2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 380


 16819              	.LC288:
 16820 1eb0 252E3166 		.ascii	"%.1f,%u,%u\012\000"
 16820      2C25752C 
 16820      25750A00 
 16821              		.global	__aeabi_dadd
 16822              		.global	__aeabi_d2f
 16823              		.section	.text.prepare_SD_EMG_history,"ax",%progbits
 16824              		.align	2
 16825              		.global	prepare_SD_EMG_history
 16826              		.thumb
 16827              		.thumb_func
 16828              		.type	prepare_SD_EMG_history, %function
 16829              	prepare_SD_EMG_history:
 16830              	.LFB78:
2505:..\src/command_processing.c **** 
2506:..\src/command_processing.c **** //==============================================================================
2507:..\src/command_processing.c **** //                                                   PREPARE SD CARD EMG HISTORY
2508:..\src/command_processing.c **** //==============================================================================
2509:..\src/command_processing.c **** void prepare_SD_EMG_history(char *info_string)
2510:..\src/command_processing.c **** {
 16831              		.loc 1 2510 0
 16832              		.cfi_startproc
 16833              		@ args = 0, pretend = 0, frame = 120
 16834              		@ frame_needed = 1, uses_anonymous_args = 0
 16835 0000 B0B5     		push	{r4, r5, r7, lr}
 16836              		.cfi_def_cfa_offset 16
 16837              		.cfi_offset 4, -16
 16838              		.cfi_offset 5, -12
 16839              		.cfi_offset 7, -8
 16840              		.cfi_offset 14, -4
 16841 0002 A0B0     		sub	sp, sp, #128
 16842              		.cfi_def_cfa_offset 144
 16843 0004 02AF     		add	r7, sp, #8
 16844              		.cfi_def_cfa 7, 136
 16845 0006 7860     		str	r0, [r7, #4]
2511:..\src/command_processing.c ****     char str_data[100] = "";
 16846              		.loc 1 2511 0
 16847 0008 0023     		movs	r3, #0
 16848 000a FB60     		str	r3, [r7, #12]
 16849 000c 07F11003 		add	r3, r7, #16
 16850 0010 6022     		movs	r2, #96
 16851 0012 0021     		movs	r1, #0
 16852 0014 1846     		mov	r0, r3
 16853 0016 FFF7FEFF 		bl	memset
2512:..\src/command_processing.c ****     uint16 v_idx = 0;
 16854              		.loc 1 2512 0
 16855 001a 0023     		movs	r3, #0
 16856 001c A7F87630 		strh	r3, [r7, #118]	@ movhi
2513:..\src/command_processing.c ****     static float h_time = 0.0;
2514:..\src/command_processing.c ****                 
2515:..\src/command_processing.c ****     strcpy(info_string, "");
 16857              		.loc 1 2515 0
 16858 0020 7B68     		ldr	r3, [r7, #4]
 16859 0022 0022     		movs	r2, #0
 16860 0024 1A70     		strb	r2, [r3]
 16861              	.LBB28:
2516:..\src/command_processing.c ****     
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 381


2517:..\src/command_processing.c ****     // Oldest samples of the vector
2518:..\src/command_processing.c ****     for (int i = 0; i < SAMPLES_FOR_EMG_HISTORY; i++){
 16862              		.loc 1 2518 0
 16863 0026 0023     		movs	r3, #0
 16864 0028 3B67     		str	r3, [r7, #112]
 16865 002a 4AE0     		b	.L668
 16866              	.L670:
2519:..\src/command_processing.c ****               
2520:..\src/command_processing.c ****         // Send line per line all the history vector
2521:..\src/command_processing.c ****         // First line (oldest) is made by values of emg_history_next_idx index (they will be the ne
2522:..\src/command_processing.c ****         v_idx = emg_history_next_idx + i;
 16867              		.loc 1 2522 0
 16868 002c 2C4B     		ldr	r3, .L671+8
 16869 002e 1B68     		ldr	r3, [r3]
 16870 0030 9AB2     		uxth	r2, r3
 16871 0032 3B6F     		ldr	r3, [r7, #112]
 16872 0034 9BB2     		uxth	r3, r3
 16873 0036 1344     		add	r3, r3, r2
 16874 0038 A7F87630 		strh	r3, [r7, #118]	@ movhi
2523:..\src/command_processing.c ****         if (v_idx > SAMPLES_FOR_EMG_HISTORY){
 16875              		.loc 1 2523 0
 16876 003c B7F87630 		ldrh	r3, [r7, #118]
 16877 0040 B3F5167F 		cmp	r3, #600
 16878 0044 05D9     		bls	.L669
2524:..\src/command_processing.c ****             v_idx -= SAMPLES_FOR_EMG_HISTORY;
 16879              		.loc 1 2524 0
 16880 0046 B7F87630 		ldrh	r3, [r7, #118]	@ movhi
 16881 004a A3F51673 		sub	r3, r3, #600
 16882 004e A7F87630 		strh	r3, [r7, #118]	@ movhi
 16883              	.L669:
2525:..\src/command_processing.c ****         }
2526:..\src/command_processing.c ****         
2527:..\src/command_processing.c ****         // Time vector is reconstructed setting oldest samples as t=0.0s
2528:..\src/command_processing.c ****         sprintf(str_data, "%.1f,%u,%u\n", h_time, emg_history[v_idx][0], emg_history[v_idx][1]);
 16884              		.loc 1 2528 0 discriminator 2
 16885 0052 244B     		ldr	r3, .L671+12
 16886 0054 1B68     		ldr	r3, [r3]	@ float
 16887 0056 1846     		mov	r0, r3
 16888 0058 FFF7FEFF 		bl	__aeabi_f2d
 16889 005c 0446     		mov	r4, r0
 16890 005e 0D46     		mov	r5, r1
 16891 0060 B7F87630 		ldrh	r3, [r7, #118]
 16892 0064 204A     		ldr	r2, .L671+16
 16893 0066 32F82330 		ldrh	r3, [r2, r3, lsl #2]
 16894 006a 1946     		mov	r1, r3
 16895 006c B7F87630 		ldrh	r3, [r7, #118]
 16896 0070 1D4A     		ldr	r2, .L671+16
 16897 0072 9B00     		lsls	r3, r3, #2
 16898 0074 1344     		add	r3, r3, r2
 16899 0076 5B88     		ldrh	r3, [r3, #2]
 16900 0078 07F10C00 		add	r0, r7, #12
 16901 007c 0193     		str	r3, [sp, #4]
 16902 007e 0091     		str	r1, [sp]
 16903 0080 2246     		mov	r2, r4
 16904 0082 2B46     		mov	r3, r5
 16905 0084 1949     		ldr	r1, .L671+20
 16906 0086 FFF7FEFF 		bl	sprintf
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 382


2529:..\src/command_processing.c ****         
2530:..\src/command_processing.c ****         strcat(info_string, str_data);
 16907              		.loc 1 2530 0 discriminator 2
 16908 008a 07F10C03 		add	r3, r7, #12
 16909 008e 1946     		mov	r1, r3
 16910 0090 7868     		ldr	r0, [r7, #4]
 16911 0092 FFF7FEFF 		bl	strcat
2531:..\src/command_processing.c ****         
2532:..\src/command_processing.c ****         h_time += 0.2;      // Row time interval is 200ms (5Hz)
 16912              		.loc 1 2532 0 discriminator 2
 16913 0096 134B     		ldr	r3, .L671+12
 16914 0098 1B68     		ldr	r3, [r3]	@ float
 16915 009a 1846     		mov	r0, r3
 16916 009c FFF7FEFF 		bl	__aeabi_f2d
 16917 00a0 0DA3     		adr	r3, .L671
 16918 00a2 D3E90023 		ldrd	r2, [r3]
 16919 00a6 FFF7FEFF 		bl	__aeabi_dadd
 16920 00aa 0346     		mov	r3, r0
 16921 00ac 0C46     		mov	r4, r1
 16922 00ae 1846     		mov	r0, r3
 16923 00b0 2146     		mov	r1, r4
 16924 00b2 FFF7FEFF 		bl	__aeabi_d2f
 16925 00b6 0246     		mov	r2, r0
 16926 00b8 0A4B     		ldr	r3, .L671+12
 16927 00ba 1A60     		str	r2, [r3]	@ float
2518:..\src/command_processing.c ****               
 16928              		.loc 1 2518 0 discriminator 2
 16929 00bc 3B6F     		ldr	r3, [r7, #112]
 16930 00be 0133     		adds	r3, r3, #1
 16931 00c0 3B67     		str	r3, [r7, #112]
 16932              	.L668:
2518:..\src/command_processing.c ****               
 16933              		.loc 1 2518 0 is_stmt 0 discriminator 1
 16934 00c2 3B6F     		ldr	r3, [r7, #112]
 16935 00c4 B3F5167F 		cmp	r3, #600
 16936 00c8 B0DB     		blt	.L670
 16937              	.LBE28:
2533:..\src/command_processing.c **** 
2534:..\src/command_processing.c ****     }
2535:..\src/command_processing.c ****     
2536:..\src/command_processing.c **** }
 16938              		.loc 1 2536 0 is_stmt 1
 16939 00ca 00BF     		nop
 16940 00cc 7837     		adds	r7, r7, #120
 16941              		.cfi_def_cfa_offset 16
 16942 00ce BD46     		mov	sp, r7
 16943              		.cfi_def_cfa_register 13
 16944              		@ sp needed
 16945 00d0 B0BD     		pop	{r4, r5, r7, pc}
 16946              	.L672:
 16947 00d2 00BFAFF3 		.align	3
 16947      0080
 16948              	.L671:
 16949 00d8 9A999999 		.word	-1717986918
 16950 00dc 9999C93F 		.word	1070176665
 16951 00e0 00000000 		.word	emg_history_next_idx
 16952 00e4 00000000 		.word	h_time.10531
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 383


 16953 00e8 00000000 		.word	emg_history
 16954 00ec B01E0000 		.word	.LC288
 16955              		.cfi_endproc
 16956              	.LFE78:
 16957              		.size	prepare_SD_EMG_history, .-prepare_SD_EMG_history
 16958              		.section	.rodata
 16959              		.align	2
 16960              	.LC289:
 16961 1ebc 53454E53 		.ascii	"SENSORS INFO\015\012\000"
 16961      4F525320 
 16961      494E464F 
 16961      0D0A00
 16962 1ecb 00       		.align	2
 16963              	.LC290:
 16964 1ecc 09416363 		.ascii	"\011Acc: %d\011%d\011%d\015\012\000"
 16964      3A202564 
 16964      09256409 
 16964      25640D0A 
 16964      00
 16965 1edd 000000   		.align	2
 16966              	.LC291:
 16967 1ee0 09477972 		.ascii	"\011Gyro: %d\011%d\011%d\015\012\000"
 16967      6F3A2025 
 16967      64092564 
 16967      0925640D 
 16967      0A00
 16968 1ef2 0000     		.align	2
 16969              	.LC292:
 16970 1ef4 094D6167 		.ascii	"\011Mag: %d\011%d\011%d\015\012\000"
 16970      3A202564 
 16970      09256409 
 16970      25640D0A 
 16970      00
 16971 1f05 000000   		.align	2
 16972              	.LC293:
 16973 1f08 09517561 		.ascii	"\011Quat: %.3f\011%.3f\011%.3f\011%.3f\015\012\000"
 16973      743A2025 
 16973      2E336609 
 16973      252E3366 
 16973      09252E33 
 16974 1f25 000000   		.align	2
 16975              	.LC294:
 16976 1f28 0954656D 		.ascii	"\011Temperature: %d\015\012\000"
 16976      70657261 
 16976      74757265 
 16976      3A202564 
 16976      0D0A00
 16977              		.section	.text.IMU_reading_info,"ax",%progbits
 16978              		.align	2
 16979              		.global	IMU_reading_info
 16980              		.thumb
 16981              		.thumb_func
 16982              		.type	IMU_reading_info, %function
 16983              	IMU_reading_info:
 16984              	.LFB79:
2537:..\src/command_processing.c **** 
2538:..\src/command_processing.c **** //==============================================================================
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 384


2539:..\src/command_processing.c **** //                                                              IMU READING INFO
2540:..\src/command_processing.c **** //==============================================================================
2541:..\src/command_processing.c **** 
2542:..\src/command_processing.c **** void IMU_reading_info(char *info_string)
2543:..\src/command_processing.c **** {
 16985              		.loc 1 2543 0
 16986              		.cfi_startproc
 16987              		@ args = 0, pretend = 0, frame = 312
 16988              		@ frame_needed = 1, uses_anonymous_args = 0
 16989 0000 2DE9B04F 		push	{r4, r5, r7, r8, r9, r10, fp, lr}
 16990              		.cfi_def_cfa_offset 32
 16991              		.cfi_offset 4, -32
 16992              		.cfi_offset 5, -28
 16993              		.cfi_offset 7, -24
 16994              		.cfi_offset 8, -20
 16995              		.cfi_offset 9, -16
 16996              		.cfi_offset 10, -12
 16997              		.cfi_offset 11, -8
 16998              		.cfi_offset 14, -4
 16999 0004 D4B0     		sub	sp, sp, #336
 17000              		.cfi_def_cfa_offset 368
 17001 0006 06AF     		add	r7, sp, #24
 17002              		.cfi_def_cfa 7, 344
 17003 0008 3B1D     		adds	r3, r7, #4
 17004 000a 1860     		str	r0, [r3]
2544:..\src/command_processing.c ****     char str[300];  
2545:..\src/command_processing.c ****     int i;
2546:..\src/command_processing.c ****                  
2547:..\src/command_processing.c ****     strcat(info_string, "SENSORS INFO\r\n");
 17005              		.loc 1 2547 0
 17006 000c 3B1D     		adds	r3, r7, #4
 17007 000e 1868     		ldr	r0, [r3]
 17008 0010 FFF7FEFF 		bl	strlen
 17009 0014 0346     		mov	r3, r0
 17010 0016 1A46     		mov	r2, r3
 17011 0018 3B1D     		adds	r3, r7, #4
 17012 001a 1B68     		ldr	r3, [r3]
 17013 001c 1344     		add	r3, r3, r2
 17014 001e C94A     		ldr	r2, .L681
 17015 0020 1C46     		mov	r4, r3
 17016 0022 1346     		mov	r3, r2
 17017 0024 07CB     		ldmia	r3!, {r0, r1, r2}
 17018 0026 2060     		str	r0, [r4]	@ unaligned
 17019 0028 6160     		str	r1, [r4, #4]	@ unaligned
 17020 002a A260     		str	r2, [r4, #8]	@ unaligned
 17021 002c 1A88     		ldrh	r2, [r3]	@ unaligned
 17022 002e 9B78     		ldrb	r3, [r3, #2]
 17023 0030 A281     		strh	r2, [r4, #12]	@ unaligned
 17024 0032 A373     		strb	r3, [r4, #14]
2548:..\src/command_processing.c ****     for (i=0; i<N_IMU_Connected; i++){
 17025              		.loc 1 2548 0
 17026 0034 0023     		movs	r3, #0
 17027 0036 C7F83431 		str	r3, [r7, #308]
 17028 003a 66E1     		b	.L674
 17029              	.L680:
2549:..\src/command_processing.c ****         sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 17030              		.loc 1 2549 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 385


 17031 003c C24A     		ldr	r2, .L681+4
 17032 003e D7F83431 		ldr	r3, [r7, #308]
 17033 0042 1344     		add	r3, r3, r2
 17034 0044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17035 0046 07F10800 		add	r0, r7, #8
 17036 004a D7F83421 		ldr	r2, [r7, #308]
 17037 004e BF49     		ldr	r1, .L681+8
 17038 0050 FFF7FEFF 		bl	sprintf
2550:..\src/command_processing.c ****         strcat(info_string, str);
 17039              		.loc 1 2550 0
 17040 0054 07F10802 		add	r2, r7, #8
 17041 0058 3B1D     		adds	r3, r7, #4
 17042 005a 1146     		mov	r1, r2
 17043 005c 1868     		ldr	r0, [r3]
 17044 005e FFF7FEFF 		bl	strcat
2551:..\src/command_processing.c ****         
2552:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][0])){
 17045              		.loc 1 2552 0
 17046 0062 B94A     		ldr	r2, .L681+4
 17047 0064 D7F83431 		ldr	r3, [r7, #308]
 17048 0068 1344     		add	r3, r3, r2
 17049 006a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17050 006c 1946     		mov	r1, r3
 17051 006e B84A     		ldr	r2, .L681+12
 17052 0070 0B46     		mov	r3, r1
 17053 0072 9B00     		lsls	r3, r3, #2
 17054 0074 0B44     		add	r3, r3, r1
 17055 0076 1344     		add	r3, r3, r2
 17056 0078 03F20223 		addw	r3, r3, #514
 17057 007c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17058 007e 002B     		cmp	r3, #0
 17059 0080 31D0     		beq	.L675
2553:..\src/command_processing.c ****             sprintf(str, "\tAcc: %d\t%d\t%d\r\n", (int16) g_imu[i].accel_value[0], (int16) g_imu[i]
 17060              		.loc 1 2553 0
 17061 0082 B449     		ldr	r1, .L681+16
 17062 0084 D7F83421 		ldr	r2, [r7, #308]
 17063 0088 1346     		mov	r3, r2
 17064 008a 9B00     		lsls	r3, r3, #2
 17065 008c 1344     		add	r3, r3, r2
 17066 008e DB00     		lsls	r3, r3, #3
 17067 0090 0B44     		add	r3, r3, r1
 17068 0092 0233     		adds	r3, r3, #2
 17069 0094 B3F90030 		ldrsh	r3, [r3]
 17070 0098 1C46     		mov	r4, r3
 17071 009a AE49     		ldr	r1, .L681+16
 17072 009c D7F83421 		ldr	r2, [r7, #308]
 17073 00a0 1346     		mov	r3, r2
 17074 00a2 9B00     		lsls	r3, r3, #2
 17075 00a4 1344     		add	r3, r3, r2
 17076 00a6 DB00     		lsls	r3, r3, #3
 17077 00a8 0B44     		add	r3, r3, r1
 17078 00aa 0433     		adds	r3, r3, #4
 17079 00ac B3F90030 		ldrsh	r3, [r3]
 17080 00b0 1D46     		mov	r5, r3
 17081 00b2 A849     		ldr	r1, .L681+16
 17082 00b4 D7F83421 		ldr	r2, [r7, #308]
 17083 00b8 1346     		mov	r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 386


 17084 00ba 9B00     		lsls	r3, r3, #2
 17085 00bc 1344     		add	r3, r3, r2
 17086 00be DB00     		lsls	r3, r3, #3
 17087 00c0 0B44     		add	r3, r3, r1
 17088 00c2 0633     		adds	r3, r3, #6
 17089 00c4 B3F90030 		ldrsh	r3, [r3]
 17090 00c8 07F10800 		add	r0, r7, #8
 17091 00cc 0093     		str	r3, [sp]
 17092 00ce 2B46     		mov	r3, r5
 17093 00d0 2246     		mov	r2, r4
 17094 00d2 A149     		ldr	r1, .L681+20
 17095 00d4 FFF7FEFF 		bl	sprintf
2554:..\src/command_processing.c ****             strcat(info_string, str);
 17096              		.loc 1 2554 0
 17097 00d8 07F10802 		add	r2, r7, #8
 17098 00dc 3B1D     		adds	r3, r7, #4
 17099 00de 1146     		mov	r1, r2
 17100 00e0 1868     		ldr	r0, [r3]
 17101 00e2 FFF7FEFF 		bl	strcat
 17102              	.L675:
2555:..\src/command_processing.c ****         }
2556:..\src/command_processing.c **** 
2557:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][1])){
 17103              		.loc 1 2557 0
 17104 00e6 984A     		ldr	r2, .L681+4
 17105 00e8 D7F83431 		ldr	r3, [r7, #308]
 17106 00ec 1344     		add	r3, r3, r2
 17107 00ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17108 00f0 1946     		mov	r1, r3
 17109 00f2 974A     		ldr	r2, .L681+12
 17110 00f4 0B46     		mov	r3, r1
 17111 00f6 9B00     		lsls	r3, r3, #2
 17112 00f8 0B44     		add	r3, r3, r1
 17113 00fa 1344     		add	r3, r3, r2
 17114 00fc 03F20323 		addw	r3, r3, #515
 17115 0100 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17116 0102 002B     		cmp	r3, #0
 17117 0104 31D0     		beq	.L676
2558:..\src/command_processing.c ****             sprintf(str, "\tGyro: %d\t%d\t%d\r\n", (int16) g_imu[i].gyro_value[0], (int16) g_imu[i]
 17118              		.loc 1 2558 0
 17119 0106 9349     		ldr	r1, .L681+16
 17120 0108 D7F83421 		ldr	r2, [r7, #308]
 17121 010c 1346     		mov	r3, r2
 17122 010e 9B00     		lsls	r3, r3, #2
 17123 0110 1344     		add	r3, r3, r2
 17124 0112 DB00     		lsls	r3, r3, #3
 17125 0114 0B44     		add	r3, r3, r1
 17126 0116 0833     		adds	r3, r3, #8
 17127 0118 B3F90030 		ldrsh	r3, [r3]
 17128 011c 1C46     		mov	r4, r3
 17129 011e 8D49     		ldr	r1, .L681+16
 17130 0120 D7F83421 		ldr	r2, [r7, #308]
 17131 0124 1346     		mov	r3, r2
 17132 0126 9B00     		lsls	r3, r3, #2
 17133 0128 1344     		add	r3, r3, r2
 17134 012a DB00     		lsls	r3, r3, #3
 17135 012c 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 387


 17136 012e 0A33     		adds	r3, r3, #10
 17137 0130 B3F90030 		ldrsh	r3, [r3]
 17138 0134 1D46     		mov	r5, r3
 17139 0136 8749     		ldr	r1, .L681+16
 17140 0138 D7F83421 		ldr	r2, [r7, #308]
 17141 013c 1346     		mov	r3, r2
 17142 013e 9B00     		lsls	r3, r3, #2
 17143 0140 1344     		add	r3, r3, r2
 17144 0142 DB00     		lsls	r3, r3, #3
 17145 0144 0B44     		add	r3, r3, r1
 17146 0146 0C33     		adds	r3, r3, #12
 17147 0148 B3F90030 		ldrsh	r3, [r3]
 17148 014c 07F10800 		add	r0, r7, #8
 17149 0150 0093     		str	r3, [sp]
 17150 0152 2B46     		mov	r3, r5
 17151 0154 2246     		mov	r2, r4
 17152 0156 8149     		ldr	r1, .L681+24
 17153 0158 FFF7FEFF 		bl	sprintf
2559:..\src/command_processing.c ****             strcat(info_string, str);
 17154              		.loc 1 2559 0
 17155 015c 07F10802 		add	r2, r7, #8
 17156 0160 3B1D     		adds	r3, r7, #4
 17157 0162 1146     		mov	r1, r2
 17158 0164 1868     		ldr	r0, [r3]
 17159 0166 FFF7FEFF 		bl	strcat
 17160              	.L676:
2560:..\src/command_processing.c ****         }
2561:..\src/command_processing.c **** 
2562:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][2])){
 17161              		.loc 1 2562 0
 17162 016a 774A     		ldr	r2, .L681+4
 17163 016c D7F83431 		ldr	r3, [r7, #308]
 17164 0170 1344     		add	r3, r3, r2
 17165 0172 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17166 0174 1946     		mov	r1, r3
 17167 0176 764A     		ldr	r2, .L681+12
 17168 0178 0B46     		mov	r3, r1
 17169 017a 9B00     		lsls	r3, r3, #2
 17170 017c 0B44     		add	r3, r3, r1
 17171 017e 1344     		add	r3, r3, r2
 17172 0180 03F50173 		add	r3, r3, #516
 17173 0184 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17174 0186 002B     		cmp	r3, #0
 17175 0188 31D0     		beq	.L677
2563:..\src/command_processing.c ****             sprintf(str, "\tMag: %d\t%d\t%d\r\n", (int16) g_imu[i].mag_value[0], (int16) g_imu[i].m
 17176              		.loc 1 2563 0
 17177 018a 7249     		ldr	r1, .L681+16
 17178 018c D7F83421 		ldr	r2, [r7, #308]
 17179 0190 1346     		mov	r3, r2
 17180 0192 9B00     		lsls	r3, r3, #2
 17181 0194 1344     		add	r3, r3, r2
 17182 0196 DB00     		lsls	r3, r3, #3
 17183 0198 0B44     		add	r3, r3, r1
 17184 019a 0E33     		adds	r3, r3, #14
 17185 019c B3F90030 		ldrsh	r3, [r3]
 17186 01a0 1C46     		mov	r4, r3
 17187 01a2 6C49     		ldr	r1, .L681+16
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 388


 17188 01a4 D7F83421 		ldr	r2, [r7, #308]
 17189 01a8 1346     		mov	r3, r2
 17190 01aa 9B00     		lsls	r3, r3, #2
 17191 01ac 1344     		add	r3, r3, r2
 17192 01ae DB00     		lsls	r3, r3, #3
 17193 01b0 0B44     		add	r3, r3, r1
 17194 01b2 1033     		adds	r3, r3, #16
 17195 01b4 B3F90030 		ldrsh	r3, [r3]
 17196 01b8 1D46     		mov	r5, r3
 17197 01ba 6649     		ldr	r1, .L681+16
 17198 01bc D7F83421 		ldr	r2, [r7, #308]
 17199 01c0 1346     		mov	r3, r2
 17200 01c2 9B00     		lsls	r3, r3, #2
 17201 01c4 1344     		add	r3, r3, r2
 17202 01c6 DB00     		lsls	r3, r3, #3
 17203 01c8 0B44     		add	r3, r3, r1
 17204 01ca 1233     		adds	r3, r3, #18
 17205 01cc B3F90030 		ldrsh	r3, [r3]
 17206 01d0 07F10800 		add	r0, r7, #8
 17207 01d4 0093     		str	r3, [sp]
 17208 01d6 2B46     		mov	r3, r5
 17209 01d8 2246     		mov	r2, r4
 17210 01da 6149     		ldr	r1, .L681+28
 17211 01dc FFF7FEFF 		bl	sprintf
2564:..\src/command_processing.c ****             strcat(info_string, str);
 17212              		.loc 1 2564 0
 17213 01e0 07F10802 		add	r2, r7, #8
 17214 01e4 3B1D     		adds	r3, r7, #4
 17215 01e6 1146     		mov	r1, r2
 17216 01e8 1868     		ldr	r0, [r3]
 17217 01ea FFF7FEFF 		bl	strcat
 17218              	.L677:
2565:..\src/command_processing.c ****         }
2566:..\src/command_processing.c ****         
2567:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][3])){
 17219              		.loc 1 2567 0
 17220 01ee 564A     		ldr	r2, .L681+4
 17221 01f0 D7F83431 		ldr	r3, [r7, #308]
 17222 01f4 1344     		add	r3, r3, r2
 17223 01f6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17224 01f8 1946     		mov	r1, r3
 17225 01fa 554A     		ldr	r2, .L681+12
 17226 01fc 0B46     		mov	r3, r1
 17227 01fe 9B00     		lsls	r3, r3, #2
 17228 0200 0B44     		add	r3, r3, r1
 17229 0202 1344     		add	r3, r3, r2
 17230 0204 03F20523 		addw	r3, r3, #517
 17231 0208 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17232 020a 002B     		cmp	r3, #0
 17233 020c 4FD0     		beq	.L678
2568:..\src/command_processing.c ****             sprintf(str, "\tQuat: %.3f\t%.3f\t%.3f\t%.3f\r\n", (float) g_imu[i].quat_value[0], (flo
 17234              		.loc 1 2568 0
 17235 020e 5149     		ldr	r1, .L681+16
 17236 0210 D7F83421 		ldr	r2, [r7, #308]
 17237 0214 1346     		mov	r3, r2
 17238 0216 9B00     		lsls	r3, r3, #2
 17239 0218 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 389


 17240 021a DB00     		lsls	r3, r3, #3
 17241 021c 0B44     		add	r3, r3, r1
 17242 021e 1433     		adds	r3, r3, #20
 17243 0220 1B68     		ldr	r3, [r3]	@ float
 17244 0222 1846     		mov	r0, r3
 17245 0224 FFF7FEFF 		bl	__aeabi_f2d
 17246 0228 8246     		mov	r10, r0
 17247 022a 8B46     		mov	fp, r1
 17248 022c 4949     		ldr	r1, .L681+16
 17249 022e D7F83421 		ldr	r2, [r7, #308]
 17250 0232 1346     		mov	r3, r2
 17251 0234 9B00     		lsls	r3, r3, #2
 17252 0236 1344     		add	r3, r3, r2
 17253 0238 DB00     		lsls	r3, r3, #3
 17254 023a 0B44     		add	r3, r3, r1
 17255 023c 1833     		adds	r3, r3, #24
 17256 023e 1B68     		ldr	r3, [r3]	@ float
 17257 0240 1846     		mov	r0, r3
 17258 0242 FFF7FEFF 		bl	__aeabi_f2d
 17259 0246 0446     		mov	r4, r0
 17260 0248 0D46     		mov	r5, r1
 17261 024a 4249     		ldr	r1, .L681+16
 17262 024c D7F83421 		ldr	r2, [r7, #308]
 17263 0250 1346     		mov	r3, r2
 17264 0252 9B00     		lsls	r3, r3, #2
 17265 0254 1344     		add	r3, r3, r2
 17266 0256 DB00     		lsls	r3, r3, #3
 17267 0258 0B44     		add	r3, r3, r1
 17268 025a 1C33     		adds	r3, r3, #28
 17269 025c 1B68     		ldr	r3, [r3]	@ float
 17270 025e 1846     		mov	r0, r3
 17271 0260 FFF7FEFF 		bl	__aeabi_f2d
 17272 0264 8046     		mov	r8, r0
 17273 0266 8946     		mov	r9, r1
 17274 0268 3A49     		ldr	r1, .L681+16
 17275 026a D7F83421 		ldr	r2, [r7, #308]
 17276 026e 1346     		mov	r3, r2
 17277 0270 9B00     		lsls	r3, r3, #2
 17278 0272 1344     		add	r3, r3, r2
 17279 0274 DB00     		lsls	r3, r3, #3
 17280 0276 0B44     		add	r3, r3, r1
 17281 0278 2033     		adds	r3, r3, #32
 17282 027a 1B68     		ldr	r3, [r3]	@ float
 17283 027c 1846     		mov	r0, r3
 17284 027e FFF7FEFF 		bl	__aeabi_f2d
 17285 0282 0246     		mov	r2, r0
 17286 0284 0B46     		mov	r3, r1
 17287 0286 07F10800 		add	r0, r7, #8
 17288 028a CDE90423 		strd	r2, [sp, #16]
 17289 028e CDE90289 		strd	r8, [sp, #8]
 17290 0292 CDE90045 		strd	r4, [sp]
 17291 0296 5246     		mov	r2, r10
 17292 0298 5B46     		mov	r3, fp
 17293 029a 3249     		ldr	r1, .L681+32
 17294 029c FFF7FEFF 		bl	sprintf
2569:..\src/command_processing.c ****             strcat(info_string, str);
 17295              		.loc 1 2569 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 390


 17296 02a0 07F10802 		add	r2, r7, #8
 17297 02a4 3B1D     		adds	r3, r7, #4
 17298 02a6 1146     		mov	r1, r2
 17299 02a8 1868     		ldr	r0, [r3]
 17300 02aa FFF7FEFF 		bl	strcat
 17301              	.L678:
2570:..\src/command_processing.c ****         }
2571:..\src/command_processing.c ****         
2572:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][4])){
 17302              		.loc 1 2572 0
 17303 02ae 264A     		ldr	r2, .L681+4
 17304 02b0 D7F83431 		ldr	r3, [r7, #308]
 17305 02b4 1344     		add	r3, r3, r2
 17306 02b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17307 02b8 1946     		mov	r1, r3
 17308 02ba 254A     		ldr	r2, .L681+12
 17309 02bc 0B46     		mov	r3, r1
 17310 02be 9B00     		lsls	r3, r3, #2
 17311 02c0 0B44     		add	r3, r3, r1
 17312 02c2 1344     		add	r3, r3, r2
 17313 02c4 03F20623 		addw	r3, r3, #518
 17314 02c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17315 02ca 002B     		cmp	r3, #0
 17316 02cc 18D0     		beq	.L679
2573:..\src/command_processing.c ****             sprintf(str, "\tTemperature: %d\r\n", (int16) g_imu[i].temp_value);
 17317              		.loc 1 2573 0
 17318 02ce 2149     		ldr	r1, .L681+16
 17319 02d0 D7F83421 		ldr	r2, [r7, #308]
 17320 02d4 1346     		mov	r3, r2
 17321 02d6 9B00     		lsls	r3, r3, #2
 17322 02d8 1344     		add	r3, r3, r2
 17323 02da DB00     		lsls	r3, r3, #3
 17324 02dc 0B44     		add	r3, r3, r1
 17325 02de 2433     		adds	r3, r3, #36
 17326 02e0 B3F90030 		ldrsh	r3, [r3]
 17327 02e4 1A46     		mov	r2, r3
 17328 02e6 07F10803 		add	r3, r7, #8
 17329 02ea 1F49     		ldr	r1, .L681+36
 17330 02ec 1846     		mov	r0, r3
 17331 02ee FFF7FEFF 		bl	sprintf
2574:..\src/command_processing.c ****             strcat(info_string, str);
 17332              		.loc 1 2574 0
 17333 02f2 07F10802 		add	r2, r7, #8
 17334 02f6 3B1D     		adds	r3, r7, #4
 17335 02f8 1146     		mov	r1, r2
 17336 02fa 1868     		ldr	r0, [r3]
 17337 02fc FFF7FEFF 		bl	strcat
 17338              	.L679:
2548:..\src/command_processing.c ****         sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 17339              		.loc 1 2548 0 discriminator 2
 17340 0300 D7F83431 		ldr	r3, [r7, #308]
 17341 0304 0133     		adds	r3, r3, #1
 17342 0306 C7F83431 		str	r3, [r7, #308]
 17343              	.L674:
2548:..\src/command_processing.c ****         sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 17344              		.loc 1 2548 0 is_stmt 0 discriminator 1
 17345 030a 184B     		ldr	r3, .L681+40
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 391


 17346 030c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17347 030e 1A46     		mov	r2, r3
 17348 0310 D7F83431 		ldr	r3, [r7, #308]
 17349 0314 9A42     		cmp	r2, r3
 17350 0316 3FF791AE 		bgt	.L680
2575:..\src/command_processing.c ****         }
2576:..\src/command_processing.c ****         
2577:..\src/command_processing.c ****     }
2578:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 17351              		.loc 1 2578 0 is_stmt 1
 17352 031a 3B1D     		adds	r3, r7, #4
 17353 031c 1868     		ldr	r0, [r3]
 17354 031e FFF7FEFF 		bl	strlen
 17355 0322 0346     		mov	r3, r0
 17356 0324 1A46     		mov	r2, r3
 17357 0326 3B1D     		adds	r3, r7, #4
 17358 0328 1B68     		ldr	r3, [r3]
 17359 032a 1344     		add	r3, r3, r2
 17360 032c 104A     		ldr	r2, .L681+44
 17361 032e 1188     		ldrh	r1, [r2]	@ unaligned
 17362 0330 9278     		ldrb	r2, [r2, #2]
 17363 0332 1980     		strh	r1, [r3]	@ unaligned
 17364 0334 9A70     		strb	r2, [r3, #2]
2579:..\src/command_processing.c **** }
 17365              		.loc 1 2579 0
 17366 0336 00BF     		nop
 17367 0338 07F59C77 		add	r7, r7, #312
 17368              		.cfi_def_cfa_offset 32
 17369 033c BD46     		mov	sp, r7
 17370              		.cfi_def_cfa_register 13
 17371              		@ sp needed
 17372 033e BDE8B08F 		pop	{r4, r5, r7, r8, r9, r10, fp, pc}
 17373              	.L682:
 17374 0342 00BF     		.align	2
 17375              	.L681:
 17376 0344 BC1E0000 		.word	.LC289
 17377 0348 00000000 		.word	IMU_connected
 17378 034c 38190000 		.word	.LC240
 17379 0350 00000000 		.word	c_mem
 17380 0354 00000000 		.word	g_imu
 17381 0358 CC1E0000 		.word	.LC290
 17382 035c E01E0000 		.word	.LC291
 17383 0360 F41E0000 		.word	.LC292
 17384 0364 081F0000 		.word	.LC293
 17385 0368 281F0000 		.word	.LC294
 17386 036c 00000000 		.word	N_IMU_Connected
 17387 0370 58110000 		.word	.LC152
 17388              		.cfi_endproc
 17389              	.LFE79:
 17390              		.size	IMU_reading_info, .-IMU_reading_info
 17391              		.section	.text.commWrite_old_id,"ax",%progbits
 17392              		.align	2
 17393              		.global	commWrite_old_id
 17394              		.thumb
 17395              		.thumb_func
 17396              		.type	commWrite_old_id, %function
 17397              	commWrite_old_id:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 392


 17398              	.LFB80:
2580:..\src/command_processing.c **** 
2581:..\src/command_processing.c **** //==============================================================================
2582:..\src/command_processing.c **** //                                                     WRITE FUNCTIONS FOR RS485
2583:..\src/command_processing.c **** //==============================================================================
2584:..\src/command_processing.c **** 
2585:..\src/command_processing.c **** void commWrite_old_id(uint8 *packet_data, uint16 packet_lenght, uint8 old_id)
2586:..\src/command_processing.c **** {
 17399              		.loc 1 2586 0
 17400              		.cfi_startproc
 17401              		@ args = 0, pretend = 0, frame = 16
 17402              		@ frame_needed = 1, uses_anonymous_args = 0
 17403 0000 80B5     		push	{r7, lr}
 17404              		.cfi_def_cfa_offset 8
 17405              		.cfi_offset 7, -8
 17406              		.cfi_offset 14, -4
 17407 0002 84B0     		sub	sp, sp, #16
 17408              		.cfi_def_cfa_offset 24
 17409 0004 00AF     		add	r7, sp, #0
 17410              		.cfi_def_cfa_register 7
 17411 0006 7860     		str	r0, [r7, #4]
 17412 0008 0B46     		mov	r3, r1
 17413 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 17414 000c 1346     		mov	r3, r2
 17415 000e 7B70     		strb	r3, [r7, #1]
2587:..\src/command_processing.c ****     uint16 CYDATA index;    // iterator
2588:..\src/command_processing.c **** 
2589:..\src/command_processing.c ****     // frame - start
2590:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 17416              		.loc 1 2590 0
 17417 0010 3A20     		movs	r0, #58
 17418 0012 FFF7FEFF 		bl	UART_RS485_PutChar
2591:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 17419              		.loc 1 2591 0
 17420 0016 3A20     		movs	r0, #58
 17421 0018 FFF7FEFF 		bl	UART_RS485_PutChar
2592:..\src/command_processing.c ****     // frame - ID
2593:..\src/command_processing.c ****     //if(old_id)
2594:..\src/command_processing.c ****         UART_RS485_PutChar(old_id);
 17422              		.loc 1 2594 0
 17423 001c 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 17424 001e 1846     		mov	r0, r3
 17425 0020 FFF7FEFF 		bl	UART_RS485_PutChar
2595:..\src/command_processing.c ****     //else
2596:..\src/command_processing.c ****         //UART_RS485_PutChar(g_mem.id);
2597:..\src/command_processing.c ****         
2598:..\src/command_processing.c ****     // frame - length
2599:..\src/command_processing.c ****     UART_RS485_PutChar((uint8)packet_lenght);
 17426              		.loc 1 2599 0
 17427 0024 7B88     		ldrh	r3, [r7, #2]	@ movhi
 17428 0026 DBB2     		uxtb	r3, r3
 17429 0028 1846     		mov	r0, r3
 17430 002a FFF7FEFF 		bl	UART_RS485_PutChar
2600:..\src/command_processing.c ****     // frame - packet data
2601:..\src/command_processing.c ****     for(index = 0; index < packet_lenght; ++index) {
 17431              		.loc 1 2601 0
 17432 002e 0023     		movs	r3, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 393


 17433 0030 FB81     		strh	r3, [r7, #14]	@ movhi
 17434 0032 09E0     		b	.L684
 17435              	.L685:
2602:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 17436              		.loc 1 2602 0 discriminator 3
 17437 0034 FB89     		ldrh	r3, [r7, #14]
 17438 0036 7A68     		ldr	r2, [r7, #4]
 17439 0038 1344     		add	r3, r3, r2
 17440 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17441 003c 1846     		mov	r0, r3
 17442 003e FFF7FEFF 		bl	UART_RS485_PutChar
2601:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 17443              		.loc 1 2601 0 discriminator 3
 17444 0042 FB89     		ldrh	r3, [r7, #14]	@ movhi
 17445 0044 0133     		adds	r3, r3, #1
 17446 0046 FB81     		strh	r3, [r7, #14]	@ movhi
 17447              	.L684:
2601:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 17448              		.loc 1 2601 0 is_stmt 0 discriminator 1
 17449 0048 FA89     		ldrh	r2, [r7, #14]
 17450 004a 7B88     		ldrh	r3, [r7, #2]
 17451 004c 9A42     		cmp	r2, r3
 17452 004e F1D3     		bcc	.L685
2603:..\src/command_processing.c ****     }
2604:..\src/command_processing.c **** 
2605:..\src/command_processing.c ****     index = 0;
 17453              		.loc 1 2605 0 is_stmt 1
 17454 0050 0023     		movs	r3, #0
 17455 0052 FB81     		strh	r3, [r7, #14]	@ movhi
2606:..\src/command_processing.c **** 
2607:..\src/command_processing.c ****     while(!(UART_RS485_ReadTxStatus() & UART_RS485_TX_STS_COMPLETE) && index++ <= 1000){}
 17456              		.loc 1 2607 0
 17457 0054 00BF     		nop
 17458              	.L687:
 17459              		.loc 1 2607 0 is_stmt 0 discriminator 2
 17460 0056 FFF7FEFF 		bl	UART_RS485_ReadTxStatus
 17461 005a 0346     		mov	r3, r0
 17462 005c 03F00103 		and	r3, r3, #1
 17463 0060 002B     		cmp	r3, #0
 17464 0062 05D1     		bne	.L686
 17465              		.loc 1 2607 0 discriminator 1
 17466 0064 FB89     		ldrh	r3, [r7, #14]
 17467 0066 5A1C     		adds	r2, r3, #1
 17468 0068 FA81     		strh	r2, [r7, #14]	@ movhi
 17469 006a B3F57A7F 		cmp	r3, #1000
 17470 006e F2D9     		bls	.L687
 17471              	.L686:
2608:..\src/command_processing.c **** 
2609:..\src/command_processing.c ****     RS485_CTS_Write(1);
 17472              		.loc 1 2609 0 is_stmt 1
 17473 0070 0120     		movs	r0, #1
 17474 0072 FFF7FEFF 		bl	RS485_CTS_Write
2610:..\src/command_processing.c ****     RS485_CTS_Write(0);
 17475              		.loc 1 2610 0
 17476 0076 0020     		movs	r0, #0
 17477 0078 FFF7FEFF 		bl	RS485_CTS_Write
2611:..\src/command_processing.c **** }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 394


 17478              		.loc 1 2611 0
 17479 007c 00BF     		nop
 17480 007e 1037     		adds	r7, r7, #16
 17481              		.cfi_def_cfa_offset 8
 17482 0080 BD46     		mov	sp, r7
 17483              		.cfi_def_cfa_register 13
 17484              		@ sp needed
 17485 0082 80BD     		pop	{r7, pc}
 17486              		.cfi_endproc
 17487              	.LFE80:
 17488              		.size	commWrite_old_id, .-commWrite_old_id
 17489              		.section	.text.commWrite,"ax",%progbits
 17490              		.align	2
 17491              		.global	commWrite
 17492              		.thumb
 17493              		.thumb_func
 17494              		.type	commWrite, %function
 17495              	commWrite:
 17496              	.LFB81:
2612:..\src/command_processing.c **** 
2613:..\src/command_processing.c **** void commWrite(uint8 *packet_data, uint16 packet_lenght)
2614:..\src/command_processing.c **** {
 17497              		.loc 1 2614 0
 17498              		.cfi_startproc
 17499              		@ args = 0, pretend = 0, frame = 16
 17500              		@ frame_needed = 1, uses_anonymous_args = 0
 17501 0000 80B5     		push	{r7, lr}
 17502              		.cfi_def_cfa_offset 8
 17503              		.cfi_offset 7, -8
 17504              		.cfi_offset 14, -4
 17505 0002 84B0     		sub	sp, sp, #16
 17506              		.cfi_def_cfa_offset 24
 17507 0004 00AF     		add	r7, sp, #0
 17508              		.cfi_def_cfa_register 7
 17509 0006 7860     		str	r0, [r7, #4]
 17510 0008 0B46     		mov	r3, r1
 17511 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2615:..\src/command_processing.c ****     uint16 CYDATA index;    // iterator
2616:..\src/command_processing.c **** 
2617:..\src/command_processing.c ****     // frame - start
2618:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 17512              		.loc 1 2618 0
 17513 000c 3A20     		movs	r0, #58
 17514 000e FFF7FEFF 		bl	UART_RS485_PutChar
2619:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 17515              		.loc 1 2619 0
 17516 0012 3A20     		movs	r0, #58
 17517 0014 FFF7FEFF 		bl	UART_RS485_PutChar
2620:..\src/command_processing.c ****     // frame - ID
2621:..\src/command_processing.c ****     UART_RS485_PutChar(g_mem.dev.id);
 17518              		.loc 1 2621 0
 17519 0018 1A4B     		ldr	r3, .L693
 17520 001a 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 17521 001e 1846     		mov	r0, r3
 17522 0020 FFF7FEFF 		bl	UART_RS485_PutChar
2622:..\src/command_processing.c ****     // frame - length
2623:..\src/command_processing.c ****     UART_RS485_PutChar((uint8)packet_lenght);
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 395


 17523              		.loc 1 2623 0
 17524 0024 7B88     		ldrh	r3, [r7, #2]	@ movhi
 17525 0026 DBB2     		uxtb	r3, r3
 17526 0028 1846     		mov	r0, r3
 17527 002a FFF7FEFF 		bl	UART_RS485_PutChar
2624:..\src/command_processing.c ****     // frame - packet data
2625:..\src/command_processing.c ****     for(index = 0; index < packet_lenght; ++index) {
 17528              		.loc 1 2625 0
 17529 002e 0023     		movs	r3, #0
 17530 0030 FB81     		strh	r3, [r7, #14]	@ movhi
 17531 0032 09E0     		b	.L689
 17532              	.L690:
2626:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 17533              		.loc 1 2626 0 discriminator 3
 17534 0034 FB89     		ldrh	r3, [r7, #14]
 17535 0036 7A68     		ldr	r2, [r7, #4]
 17536 0038 1344     		add	r3, r3, r2
 17537 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17538 003c 1846     		mov	r0, r3
 17539 003e FFF7FEFF 		bl	UART_RS485_PutChar
2625:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 17540              		.loc 1 2625 0 discriminator 3
 17541 0042 FB89     		ldrh	r3, [r7, #14]	@ movhi
 17542 0044 0133     		adds	r3, r3, #1
 17543 0046 FB81     		strh	r3, [r7, #14]	@ movhi
 17544              	.L689:
2625:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 17545              		.loc 1 2625 0 is_stmt 0 discriminator 1
 17546 0048 FA89     		ldrh	r2, [r7, #14]
 17547 004a 7B88     		ldrh	r3, [r7, #2]
 17548 004c 9A42     		cmp	r2, r3
 17549 004e F1D3     		bcc	.L690
2627:..\src/command_processing.c ****     }
2628:..\src/command_processing.c **** 
2629:..\src/command_processing.c ****     index = 0;
 17550              		.loc 1 2629 0 is_stmt 1
 17551 0050 0023     		movs	r3, #0
 17552 0052 FB81     		strh	r3, [r7, #14]	@ movhi
2630:..\src/command_processing.c **** 
2631:..\src/command_processing.c ****     while(!(UART_RS485_ReadTxStatus() & UART_RS485_TX_STS_COMPLETE) && index++ <= 1000){}
 17553              		.loc 1 2631 0
 17554 0054 00BF     		nop
 17555              	.L692:
 17556              		.loc 1 2631 0 is_stmt 0 discriminator 2
 17557 0056 FFF7FEFF 		bl	UART_RS485_ReadTxStatus
 17558 005a 0346     		mov	r3, r0
 17559 005c 03F00103 		and	r3, r3, #1
 17560 0060 002B     		cmp	r3, #0
 17561 0062 05D1     		bne	.L691
 17562              		.loc 1 2631 0 discriminator 1
 17563 0064 FB89     		ldrh	r3, [r7, #14]
 17564 0066 5A1C     		adds	r2, r3, #1
 17565 0068 FA81     		strh	r2, [r7, #14]	@ movhi
 17566 006a B3F57A7F 		cmp	r3, #1000
 17567 006e F2D9     		bls	.L692
 17568              	.L691:
2632:..\src/command_processing.c **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 396


2633:..\src/command_processing.c ****     RS485_CTS_Write(1);
 17569              		.loc 1 2633 0 is_stmt 1
 17570 0070 0120     		movs	r0, #1
 17571 0072 FFF7FEFF 		bl	RS485_CTS_Write
2634:..\src/command_processing.c ****     RS485_CTS_Write(0);
 17572              		.loc 1 2634 0
 17573 0076 0020     		movs	r0, #0
 17574 0078 FFF7FEFF 		bl	RS485_CTS_Write
2635:..\src/command_processing.c **** }
 17575              		.loc 1 2635 0
 17576 007c 00BF     		nop
 17577 007e 1037     		adds	r7, r7, #16
 17578              		.cfi_def_cfa_offset 8
 17579 0080 BD46     		mov	sp, r7
 17580              		.cfi_def_cfa_register 13
 17581              		@ sp needed
 17582 0082 80BD     		pop	{r7, pc}
 17583              	.L694:
 17584              		.align	2
 17585              	.L693:
 17586 0084 00000000 		.word	g_mem
 17587              		.cfi_endproc
 17588              	.LFE81:
 17589              		.size	commWrite, .-commWrite
 17590              		.section	.text.commWriteID,"ax",%progbits
 17591              		.align	2
 17592              		.global	commWriteID
 17593              		.thumb
 17594              		.thumb_func
 17595              		.type	commWriteID, %function
 17596              	commWriteID:
 17597              	.LFB82:
2636:..\src/command_processing.c **** 
2637:..\src/command_processing.c **** //==============================================================================
2638:..\src/command_processing.c **** //                                             WRITE FUNCTION FOR ANOTHER DEVICE
2639:..\src/command_processing.c **** //==============================================================================
2640:..\src/command_processing.c **** 
2641:..\src/command_processing.c **** void commWriteID(uint8 *packet_data, uint16 packet_lenght, uint8 id)
2642:..\src/command_processing.c **** {
 17598              		.loc 1 2642 0
 17599              		.cfi_startproc
 17600              		@ args = 0, pretend = 0, frame = 8
 17601              		@ frame_needed = 1, uses_anonymous_args = 0
 17602 0000 80B5     		push	{r7, lr}
 17603              		.cfi_def_cfa_offset 8
 17604              		.cfi_offset 7, -8
 17605              		.cfi_offset 14, -4
 17606 0002 82B0     		sub	sp, sp, #8
 17607              		.cfi_def_cfa_offset 16
 17608 0004 00AF     		add	r7, sp, #0
 17609              		.cfi_def_cfa_register 7
 17610 0006 7860     		str	r0, [r7, #4]
 17611 0008 0B46     		mov	r3, r1
 17612 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 17613 000c 1346     		mov	r3, r2
 17614 000e 7B70     		strb	r3, [r7, #1]
2643:..\src/command_processing.c ****     static uint16 CYDATA i;    // iterator
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 397


2644:..\src/command_processing.c **** 
2645:..\src/command_processing.c ****     // frame - start
2646:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 17615              		.loc 1 2646 0
 17616 0010 3A20     		movs	r0, #58
 17617 0012 FFF7FEFF 		bl	UART_RS485_PutChar
2647:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 17618              		.loc 1 2647 0
 17619 0016 3A20     		movs	r0, #58
 17620 0018 FFF7FEFF 		bl	UART_RS485_PutChar
2648:..\src/command_processing.c ****     // frame - ID
2649:..\src/command_processing.c ****     UART_RS485_PutChar(id);
 17621              		.loc 1 2649 0
 17622 001c 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 17623 001e 1846     		mov	r0, r3
 17624 0020 FFF7FEFF 		bl	UART_RS485_PutChar
2650:..\src/command_processing.c ****     // frame - length
2651:..\src/command_processing.c ****     UART_RS485_PutChar((uint8)packet_lenght);
 17625              		.loc 1 2651 0
 17626 0024 7B88     		ldrh	r3, [r7, #2]	@ movhi
 17627 0026 DBB2     		uxtb	r3, r3
 17628 0028 1846     		mov	r0, r3
 17629 002a FFF7FEFF 		bl	UART_RS485_PutChar
2652:..\src/command_processing.c ****     // frame - packet data
2653:..\src/command_processing.c ****     for(i = 0; i < packet_lenght; ++i) {
 17630              		.loc 1 2653 0
 17631 002e 1B4B     		ldr	r3, .L700
 17632 0030 0022     		movs	r2, #0
 17633 0032 1A80     		strh	r2, [r3]	@ movhi
 17634 0034 0EE0     		b	.L696
 17635              	.L697:
2654:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[i]);
 17636              		.loc 1 2654 0 discriminator 3
 17637 0036 194B     		ldr	r3, .L700
 17638 0038 1B88     		ldrh	r3, [r3]
 17639 003a 1A46     		mov	r2, r3
 17640 003c 7B68     		ldr	r3, [r7, #4]
 17641 003e 1344     		add	r3, r3, r2
 17642 0040 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17643 0042 1846     		mov	r0, r3
 17644 0044 FFF7FEFF 		bl	UART_RS485_PutChar
2653:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[i]);
 17645              		.loc 1 2653 0 discriminator 3
 17646 0048 144B     		ldr	r3, .L700
 17647 004a 1B88     		ldrh	r3, [r3]
 17648 004c 0133     		adds	r3, r3, #1
 17649 004e 9AB2     		uxth	r2, r3
 17650 0050 124B     		ldr	r3, .L700
 17651 0052 1A80     		strh	r2, [r3]	@ movhi
 17652              	.L696:
2653:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[i]);
 17653              		.loc 1 2653 0 is_stmt 0 discriminator 1
 17654 0054 114B     		ldr	r3, .L700
 17655 0056 1B88     		ldrh	r3, [r3]
 17656 0058 7A88     		ldrh	r2, [r7, #2]
 17657 005a 9A42     		cmp	r2, r3
 17658 005c EBD8     		bhi	.L697
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 398


2655:..\src/command_processing.c ****     }
2656:..\src/command_processing.c **** 
2657:..\src/command_processing.c ****     i = 0;
 17659              		.loc 1 2657 0 is_stmt 1
 17660 005e 0F4B     		ldr	r3, .L700
 17661 0060 0022     		movs	r2, #0
 17662 0062 1A80     		strh	r2, [r3]	@ movhi
2658:..\src/command_processing.c **** 
2659:..\src/command_processing.c ****     while(!(UART_RS485_ReadTxStatus() & UART_RS485_TX_STS_COMPLETE) && i++ <= 1000){}
 17663              		.loc 1 2659 0
 17664 0064 00BF     		nop
 17665              	.L699:
 17666              		.loc 1 2659 0 is_stmt 0 discriminator 2
 17667 0066 FFF7FEFF 		bl	UART_RS485_ReadTxStatus
 17668 006a 0346     		mov	r3, r0
 17669 006c 03F00103 		and	r3, r3, #1
 17670 0070 002B     		cmp	r3, #0
 17671 0072 08D1     		bne	.L698
 17672              		.loc 1 2659 0 discriminator 1
 17673 0074 094B     		ldr	r3, .L700
 17674 0076 1B88     		ldrh	r3, [r3]
 17675 0078 5A1C     		adds	r2, r3, #1
 17676 007a 91B2     		uxth	r1, r2
 17677 007c 074A     		ldr	r2, .L700
 17678 007e 1180     		strh	r1, [r2]	@ movhi
 17679 0080 B3F57A7F 		cmp	r3, #1000
 17680 0084 EFD9     		bls	.L699
 17681              	.L698:
2660:..\src/command_processing.c ****     
2661:..\src/command_processing.c ****     RS485_CTS_Write(1);
 17682              		.loc 1 2661 0 is_stmt 1
 17683 0086 0120     		movs	r0, #1
 17684 0088 FFF7FEFF 		bl	RS485_CTS_Write
2662:..\src/command_processing.c ****     RS485_CTS_Write(0);
 17685              		.loc 1 2662 0
 17686 008c 0020     		movs	r0, #0
 17687 008e FFF7FEFF 		bl	RS485_CTS_Write
2663:..\src/command_processing.c **** }
 17688              		.loc 1 2663 0
 17689 0092 00BF     		nop
 17690 0094 0837     		adds	r7, r7, #8
 17691              		.cfi_def_cfa_offset 8
 17692 0096 BD46     		mov	sp, r7
 17693              		.cfi_def_cfa_register 13
 17694              		@ sp needed
 17695 0098 80BD     		pop	{r7, pc}
 17696              	.L701:
 17697 009a 00BF     		.align	2
 17698              	.L700:
 17699 009c 04000000 		.word	i.10572
 17700              		.cfi_endproc
 17701              	.LFE82:
 17702              		.size	commWriteID, .-commWriteID
 17703              		.section	.text.LCRChecksum,"ax",%progbits
 17704              		.align	2
 17705              		.global	LCRChecksum
 17706              		.thumb
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 399


 17707              		.thumb_func
 17708              		.type	LCRChecksum, %function
 17709              	LCRChecksum:
 17710              	.LFB83:
2664:..\src/command_processing.c **** 
2665:..\src/command_processing.c **** //==============================================================================
2666:..\src/command_processing.c **** //                                                             CHECKSUM FUNCTION
2667:..\src/command_processing.c **** //==============================================================================
2668:..\src/command_processing.c **** 
2669:..\src/command_processing.c **** // Performs a XOR byte by byte on the entire vector
2670:..\src/command_processing.c **** 
2671:..\src/command_processing.c **** uint8 LCRChecksum(uint8 *data_array, uint8 data_length) {
 17711              		.loc 1 2671 0
 17712              		.cfi_startproc
 17713              		@ args = 0, pretend = 0, frame = 16
 17714              		@ frame_needed = 1, uses_anonymous_args = 0
 17715              		@ link register save eliminated.
 17716 0000 80B4     		push	{r7}
 17717              		.cfi_def_cfa_offset 4
 17718              		.cfi_offset 7, -4
 17719 0002 85B0     		sub	sp, sp, #20
 17720              		.cfi_def_cfa_offset 24
 17721 0004 00AF     		add	r7, sp, #0
 17722              		.cfi_def_cfa_register 7
 17723 0006 7860     		str	r0, [r7, #4]
 17724 0008 0B46     		mov	r3, r1
 17725 000a FB70     		strb	r3, [r7, #3]
2672:..\src/command_processing.c ****     
2673:..\src/command_processing.c ****     uint8 CYDATA i;
2674:..\src/command_processing.c ****     uint8 CYDATA checksum = 0x00;
 17726              		.loc 1 2674 0
 17727 000c 0023     		movs	r3, #0
 17728 000e BB73     		strb	r3, [r7, #14]
2675:..\src/command_processing.c ****     
2676:..\src/command_processing.c ****     for(i = 0; i < data_length; ++i)
 17729              		.loc 1 2676 0
 17730 0010 0023     		movs	r3, #0
 17731 0012 FB73     		strb	r3, [r7, #15]
 17732 0014 09E0     		b	.L703
 17733              	.L704:
2677:..\src/command_processing.c ****        checksum ^= data_array[i];
 17734              		.loc 1 2677 0 discriminator 3
 17735 0016 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 17736 0018 7A68     		ldr	r2, [r7, #4]
 17737 001a 1344     		add	r3, r3, r2
 17738 001c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 17739 001e BB7B     		ldrb	r3, [r7, #14]
 17740 0020 5340     		eors	r3, r3, r2
 17741 0022 BB73     		strb	r3, [r7, #14]
2676:..\src/command_processing.c ****        checksum ^= data_array[i];
 17742              		.loc 1 2676 0 discriminator 3
 17743 0024 FB7B     		ldrb	r3, [r7, #15]
 17744 0026 0133     		adds	r3, r3, #1
 17745 0028 FB73     		strb	r3, [r7, #15]
 17746              	.L703:
2676:..\src/command_processing.c ****        checksum ^= data_array[i];
 17747              		.loc 1 2676 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 400


 17748 002a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 17749 002c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 17750 002e 9A42     		cmp	r2, r3
 17751 0030 F1D3     		bcc	.L704
2678:..\src/command_processing.c ****   
2679:..\src/command_processing.c ****     return checksum;
 17752              		.loc 1 2679 0 is_stmt 1
 17753 0032 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
2680:..\src/command_processing.c **** }
 17754              		.loc 1 2680 0
 17755 0034 1846     		mov	r0, r3
 17756 0036 1437     		adds	r7, r7, #20
 17757              		.cfi_def_cfa_offset 4
 17758 0038 BD46     		mov	sp, r7
 17759              		.cfi_def_cfa_register 13
 17760              		@ sp needed
 17761 003a 80BC     		pop	{r7}
 17762              		.cfi_restore 7
 17763              		.cfi_def_cfa_offset 0
 17764 003c 7047     		bx	lr
 17765              		.cfi_endproc
 17766              	.LFE83:
 17767              		.size	LCRChecksum, .-LCRChecksum
 17768 003e 00BF     		.section	.text.sendAcknowledgment,"ax",%progbits
 17769              		.align	2
 17770              		.global	sendAcknowledgment
 17771              		.thumb
 17772              		.thumb_func
 17773              		.type	sendAcknowledgment, %function
 17774              	sendAcknowledgment:
 17775              	.LFB84:
2681:..\src/command_processing.c **** 
2682:..\src/command_processing.c **** 
2683:..\src/command_processing.c **** //==============================================================================
2684:..\src/command_processing.c **** //                                                       ACKNOWLEDGMENT FUNCTION
2685:..\src/command_processing.c **** //==============================================================================
2686:..\src/command_processing.c **** 
2687:..\src/command_processing.c **** void sendAcknowledgment(uint8 value) {
 17776              		.loc 1 2687 0
 17777              		.cfi_startproc
 17778              		@ args = 0, pretend = 0, frame = 16
 17779              		@ frame_needed = 1, uses_anonymous_args = 0
 17780 0000 80B5     		push	{r7, lr}
 17781              		.cfi_def_cfa_offset 8
 17782              		.cfi_offset 7, -8
 17783              		.cfi_offset 14, -4
 17784 0002 84B0     		sub	sp, sp, #16
 17785              		.cfi_def_cfa_offset 24
 17786 0004 00AF     		add	r7, sp, #0
 17787              		.cfi_def_cfa_register 7
 17788 0006 0346     		mov	r3, r0
 17789 0008 FB71     		strb	r3, [r7, #7]
2688:..\src/command_processing.c ****     int packet_lenght = 2;
 17790              		.loc 1 2688 0
 17791 000a 0223     		movs	r3, #2
 17792 000c FB60     		str	r3, [r7, #12]
2689:..\src/command_processing.c ****     uint8 packet_data[2];
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 401


2690:..\src/command_processing.c **** 
2691:..\src/command_processing.c ****     packet_data[0] = value;
 17793              		.loc 1 2691 0
 17794 000e FB79     		ldrb	r3, [r7, #7]
 17795 0010 3B72     		strb	r3, [r7, #8]
2692:..\src/command_processing.c ****     packet_data[1] = value;
 17796              		.loc 1 2692 0
 17797 0012 FB79     		ldrb	r3, [r7, #7]
 17798 0014 7B72     		strb	r3, [r7, #9]
2693:..\src/command_processing.c **** 
2694:..\src/command_processing.c ****     commWrite(packet_data, packet_lenght);
 17799              		.loc 1 2694 0
 17800 0016 FB68     		ldr	r3, [r7, #12]
 17801 0018 9AB2     		uxth	r2, r3
 17802 001a 07F10803 		add	r3, r7, #8
 17803 001e 1146     		mov	r1, r2
 17804 0020 1846     		mov	r0, r3
 17805 0022 FFF7FEFF 		bl	commWrite
2695:..\src/command_processing.c **** }
 17806              		.loc 1 2695 0
 17807 0026 00BF     		nop
 17808 0028 1037     		adds	r7, r7, #16
 17809              		.cfi_def_cfa_offset 8
 17810 002a BD46     		mov	sp, r7
 17811              		.cfi_def_cfa_register 13
 17812              		@ sp needed
 17813 002c 80BD     		pop	{r7, pc}
 17814              		.cfi_endproc
 17815              	.LFE84:
 17816              		.size	sendAcknowledgment, .-sendAcknowledgment
 17817 002e 00BF     		.section	.text.memStore,"ax",%progbits
 17818              		.align	2
 17819              		.global	memStore
 17820              		.thumb
 17821              		.thumb_func
 17822              		.type	memStore, %function
 17823              	memStore:
 17824              	.LFB85:
2696:..\src/command_processing.c **** 
2697:..\src/command_processing.c **** //==============================================================================
2698:..\src/command_processing.c **** //                                                                  STORE MEMORY
2699:..\src/command_processing.c **** //==============================================================================
2700:..\src/command_processing.c **** 
2701:..\src/command_processing.c **** 
2702:..\src/command_processing.c **** uint8 memStore(int displacement)
2703:..\src/command_processing.c **** {
 17825              		.loc 1 2703 0
 17826              		.cfi_startproc
 17827              		@ args = 0, pretend = 0, frame = 24
 17828              		@ frame_needed = 1, uses_anonymous_args = 0
 17829 0000 80B5     		push	{r7, lr}
 17830              		.cfi_def_cfa_offset 8
 17831              		.cfi_offset 7, -8
 17832              		.cfi_offset 14, -4
 17833 0002 86B0     		sub	sp, sp, #24
 17834              		.cfi_def_cfa_offset 32
 17835 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 402


 17836              		.cfi_def_cfa_register 7
 17837 0006 7860     		str	r0, [r7, #4]
2704:..\src/command_processing.c ****     int i;  // iterator
2705:..\src/command_processing.c ****     uint8 writeStatus;
2706:..\src/command_processing.c ****     int pages;
2707:..\src/command_processing.c ****     uint8 ret_val = 1;
 17838              		.loc 1 2707 0
 17839 0008 0123     		movs	r3, #1
 17840 000a FB74     		strb	r3, [r7, #19]
2708:..\src/command_processing.c **** 
2709:..\src/command_processing.c ****     // Disable Interrupt
2710:..\src/command_processing.c ****     ISR_RS485_RX_Disable();
 17841              		.loc 1 2710 0
 17842 000c FFF7FEFF 		bl	ISR_RS485_RX_Disable
2711:..\src/command_processing.c **** 
2712:..\src/command_processing.c ****     // Stop motor
2713:..\src/command_processing.c ****     PWM_MOTORS_WriteCompare1(0);
 17843              		.loc 1 2713 0
 17844 0010 0020     		movs	r0, #0
 17845 0012 FFF7FEFF 		bl	PWM_MOTORS_WriteCompare1
2714:..\src/command_processing.c **** 
2715:..\src/command_processing.c ****     // Update temperature information for better writing performance
2716:..\src/command_processing.c ****     EEPROM_UpdateTemperature();
 17846              		.loc 1 2716 0
 17847 0016 FFF7FEFF 		bl	EEPROM_UpdateTemperature
2717:..\src/command_processing.c **** 
2718:..\src/command_processing.c ****     memcpy( &c_mem, &g_mem, sizeof(g_mem) );
 17848              		.loc 1 2718 0
 17849 001a 1D4A     		ldr	r2, .L713
 17850 001c 1D4B     		ldr	r3, .L713+4
 17851 001e 1046     		mov	r0, r2
 17852 0020 1946     		mov	r1, r3
 17853 0022 4FF43D73 		mov	r3, #756
 17854 0026 1A46     		mov	r2, r3
 17855 0028 FFF7FEFF 		bl	memcpy
2719:..\src/command_processing.c **** 
2720:..\src/command_processing.c ****     pages = sizeof(g_mem) / 16 + (sizeof(g_mem) % 16 > 0);
 17856              		.loc 1 2720 0
 17857 002c 3023     		movs	r3, #48
 17858 002e FB60     		str	r3, [r7, #12]
2721:..\src/command_processing.c **** 
2722:..\src/command_processing.c ****     for(i = 0; i < pages; ++i) {
 17859              		.loc 1 2722 0
 17860 0030 0023     		movs	r3, #0
 17861 0032 7B61     		str	r3, [r7, #20]
 17862 0034 18E0     		b	.L708
 17863              	.L711:
2723:..\src/command_processing.c ****         writeStatus = EEPROM_Write((uint8*)&g_mem.flag + 16 * i, i + displacement);
 17864              		.loc 1 2723 0
 17865 0036 7B69     		ldr	r3, [r7, #20]
 17866 0038 1B01     		lsls	r3, r3, #4
 17867 003a 1A46     		mov	r2, r3
 17868 003c 154B     		ldr	r3, .L713+4
 17869 003e D018     		adds	r0, r2, r3
 17870 0040 7B69     		ldr	r3, [r7, #20]
 17871 0042 DAB2     		uxtb	r2, r3
 17872 0044 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 403


 17873 0046 DBB2     		uxtb	r3, r3
 17874 0048 1344     		add	r3, r3, r2
 17875 004a DBB2     		uxtb	r3, r3
 17876 004c 1946     		mov	r1, r3
 17877 004e FFF7FEFF 		bl	EEPROM_Write
 17878 0052 0346     		mov	r3, r0
 17879 0054 FB72     		strb	r3, [r7, #11]
2724:..\src/command_processing.c ****         if(writeStatus != CYRET_SUCCESS) {
 17880              		.loc 1 2724 0
 17881 0056 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 17882 0058 002B     		cmp	r3, #0
 17883 005a 02D0     		beq	.L709
2725:..\src/command_processing.c ****             ret_val = 0;
 17884              		.loc 1 2725 0
 17885 005c 0023     		movs	r3, #0
 17886 005e FB74     		strb	r3, [r7, #19]
2726:..\src/command_processing.c ****             break;
 17887              		.loc 1 2726 0
 17888 0060 06E0     		b	.L710
 17889              	.L709:
2722:..\src/command_processing.c ****         writeStatus = EEPROM_Write((uint8*)&g_mem.flag + 16 * i, i + displacement);
 17890              		.loc 1 2722 0 discriminator 2
 17891 0062 7B69     		ldr	r3, [r7, #20]
 17892 0064 0133     		adds	r3, r3, #1
 17893 0066 7B61     		str	r3, [r7, #20]
 17894              	.L708:
2722:..\src/command_processing.c ****         writeStatus = EEPROM_Write((uint8*)&g_mem.flag + 16 * i, i + displacement);
 17895              		.loc 1 2722 0 is_stmt 0 discriminator 1
 17896 0068 7A69     		ldr	r2, [r7, #20]
 17897 006a FB68     		ldr	r3, [r7, #12]
 17898 006c 9A42     		cmp	r2, r3
 17899 006e E2DB     		blt	.L711
 17900              	.L710:
2727:..\src/command_processing.c ****         }
2728:..\src/command_processing.c ****     }
2729:..\src/command_processing.c **** 
2730:..\src/command_processing.c ****     memcpy( &g_mem, &c_mem, sizeof(g_mem) );
 17901              		.loc 1 2730 0 is_stmt 1
 17902 0070 084A     		ldr	r2, .L713+4
 17903 0072 074B     		ldr	r3, .L713
 17904 0074 1046     		mov	r0, r2
 17905 0076 1946     		mov	r1, r3
 17906 0078 4FF43D73 		mov	r3, #756
 17907 007c 1A46     		mov	r2, r3
 17908 007e FFF7FEFF 		bl	memcpy
2731:..\src/command_processing.c **** 
2732:..\src/command_processing.c ****     // Re-Enable Interrupt
2733:..\src/command_processing.c ****     ISR_RS485_RX_Enable();
 17909              		.loc 1 2733 0
 17910 0082 FFF7FEFF 		bl	ISR_RS485_RX_Enable
2734:..\src/command_processing.c **** 
2735:..\src/command_processing.c ****     return ret_val;
 17911              		.loc 1 2735 0
 17912 0086 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
2736:..\src/command_processing.c **** }
 17913              		.loc 1 2736 0
 17914 0088 1846     		mov	r0, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 404


 17915 008a 1837     		adds	r7, r7, #24
 17916              		.cfi_def_cfa_offset 8
 17917 008c BD46     		mov	sp, r7
 17918              		.cfi_def_cfa_register 13
 17919              		@ sp needed
 17920 008e 80BD     		pop	{r7, pc}
 17921              	.L714:
 17922              		.align	2
 17923              	.L713:
 17924 0090 00000000 		.word	c_mem
 17925 0094 00000000 		.word	g_mem
 17926              		.cfi_endproc
 17927              	.LFE85:
 17928              		.size	memStore, .-memStore
 17929              		.section	.text.memRecall,"ax",%progbits
 17930              		.align	2
 17931              		.global	memRecall
 17932              		.thumb
 17933              		.thumb_func
 17934              		.type	memRecall, %function
 17935              	memRecall:
 17936              	.LFB86:
2737:..\src/command_processing.c **** 
2738:..\src/command_processing.c **** 
2739:..\src/command_processing.c **** //==============================================================================
2740:..\src/command_processing.c **** //                                                                 RECALL MEMORY
2741:..\src/command_processing.c **** //==============================================================================
2742:..\src/command_processing.c **** 
2743:..\src/command_processing.c **** 
2744:..\src/command_processing.c **** void memRecall(void)
2745:..\src/command_processing.c **** {
 17937              		.loc 1 2745 0
 17938              		.cfi_startproc
 17939              		@ args = 0, pretend = 0, frame = 8
 17940              		@ frame_needed = 1, uses_anonymous_args = 0
 17941 0000 80B5     		push	{r7, lr}
 17942              		.cfi_def_cfa_offset 8
 17943              		.cfi_offset 7, -8
 17944              		.cfi_offset 14, -4
 17945 0002 82B0     		sub	sp, sp, #8
 17946              		.cfi_def_cfa_offset 16
 17947 0004 00AF     		add	r7, sp, #0
 17948              		.cfi_def_cfa_register 7
2746:..\src/command_processing.c ****     uint16 i;
2747:..\src/command_processing.c **** 
2748:..\src/command_processing.c ****     for (i = 0; i < sizeof(g_mem); i++) {
 17949              		.loc 1 2748 0
 17950 0006 0023     		movs	r3, #0
 17951 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 17952 000a 0CE0     		b	.L716
 17953              	.L717:
2749:..\src/command_processing.c ****         ((reg8 *) &g_mem.flag)[i] = EEPROM_ADDR[i];
 17954              		.loc 1 2749 0 discriminator 3
 17955 000c FB88     		ldrh	r3, [r7, #6]
 17956 000e 184A     		ldr	r2, .L721
 17957 0010 1344     		add	r3, r3, r2
 17958 0012 184A     		ldr	r2, .L721+4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 405


 17959 0014 1168     		ldr	r1, [r2]
 17960 0016 FA88     		ldrh	r2, [r7, #6]
 17961 0018 0A44     		add	r2, r2, r1
 17962 001a 1278     		ldrb	r2, [r2]
 17963 001c D2B2     		uxtb	r2, r2
 17964 001e 1A70     		strb	r2, [r3]
2748:..\src/command_processing.c ****         ((reg8 *) &g_mem.flag)[i] = EEPROM_ADDR[i];
 17965              		.loc 1 2748 0 discriminator 3
 17966 0020 FB88     		ldrh	r3, [r7, #6]
 17967 0022 0133     		adds	r3, r3, #1
 17968 0024 FB80     		strh	r3, [r7, #6]	@ movhi
 17969              	.L716:
2748:..\src/command_processing.c ****         ((reg8 *) &g_mem.flag)[i] = EEPROM_ADDR[i];
 17970              		.loc 1 2748 0 is_stmt 0 discriminator 1
 17971 0026 FB88     		ldrh	r3, [r7, #6]
 17972 0028 B3F53D7F 		cmp	r3, #756
 17973 002c EED3     		bcc	.L717
2750:..\src/command_processing.c ****     }
2751:..\src/command_processing.c ****     
2752:..\src/command_processing.c ****     // Recall saved user_emg structure
2753:..\src/command_processing.c ****     memcpy( &(g_mem.emg), &(g_mem.user[g_mem.dev.user_id].user_emg), sizeof(g_mem.emg) );
 17974              		.loc 1 2753 0 is_stmt 1
 17975 002e 104B     		ldr	r3, .L721
 17976 0030 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 17977 0034 5B01     		lsls	r3, r3, #5
 17978 0036 03F51273 		add	r3, r3, #584
 17979 003a 0D4A     		ldr	r2, .L721
 17980 003c 1344     		add	r3, r3, r2
 17981 003e 1022     		movs	r2, #16
 17982 0040 1946     		mov	r1, r3
 17983 0042 0D48     		ldr	r0, .L721+8
 17984 0044 FFF7FEFF 		bl	memcpy
2754:..\src/command_processing.c **** 
2755:..\src/command_processing.c ****     //check for initialization
2756:..\src/command_processing.c ****     if (g_mem.flag == FALSE) {
 17985              		.loc 1 2756 0
 17986 0048 094B     		ldr	r3, .L721
 17987 004a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17988 004c 002B     		cmp	r3, #0
 17989 004e 02D1     		bne	.L718
2757:..\src/command_processing.c ****         memRestore();
 17990              		.loc 1 2757 0
 17991 0050 FFF7FEFF 		bl	memRestore
2758:..\src/command_processing.c ****     } else {
2759:..\src/command_processing.c ****         memcpy( &c_mem, &g_mem, sizeof(g_mem) );
2760:..\src/command_processing.c ****     }        
2761:..\src/command_processing.c **** }
 17992              		.loc 1 2761 0
 17993 0054 08E0     		b	.L720
 17994              	.L718:
2759:..\src/command_processing.c ****     }        
 17995              		.loc 1 2759 0
 17996 0056 094A     		ldr	r2, .L721+12
 17997 0058 054B     		ldr	r3, .L721
 17998 005a 1046     		mov	r0, r2
 17999 005c 1946     		mov	r1, r3
 18000 005e 4FF43D73 		mov	r3, #756
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 406


 18001 0062 1A46     		mov	r2, r3
 18002 0064 FFF7FEFF 		bl	memcpy
 18003              	.L720:
 18004              		.loc 1 2761 0
 18005 0068 00BF     		nop
 18006 006a 0837     		adds	r7, r7, #8
 18007              		.cfi_def_cfa_offset 8
 18008 006c BD46     		mov	sp, r7
 18009              		.cfi_def_cfa_register 13
 18010              		@ sp needed
 18011 006e 80BD     		pop	{r7, pc}
 18012              	.L722:
 18013              		.align	2
 18014              	.L721:
 18015 0070 00000000 		.word	g_mem
 18016 0074 00000000 		.word	EEPROM_ADDR
 18017 0078 F0010000 		.word	g_mem+496
 18018 007c 00000000 		.word	c_mem
 18019              		.cfi_endproc
 18020              	.LFE86:
 18021              		.size	memRecall, .-memRecall
 18022              		.section	.text.memRestore,"ax",%progbits
 18023              		.align	2
 18024              		.global	memRestore
 18025              		.thumb
 18026              		.thumb_func
 18027              		.type	memRestore, %function
 18028              	memRestore:
 18029              	.LFB87:
2762:..\src/command_processing.c **** 
2763:..\src/command_processing.c **** 
2764:..\src/command_processing.c **** //==============================================================================
2765:..\src/command_processing.c **** //                                                                RESTORE MEMORY
2766:..\src/command_processing.c **** //==============================================================================
2767:..\src/command_processing.c **** 
2768:..\src/command_processing.c **** 
2769:..\src/command_processing.c **** uint8 memRestore(void) {
 18030              		.loc 1 2769 0
 18031              		.cfi_startproc
 18032              		@ args = 0, pretend = 0, frame = 8
 18033              		@ frame_needed = 1, uses_anonymous_args = 0
 18034 0000 80B5     		push	{r7, lr}
 18035              		.cfi_def_cfa_offset 8
 18036              		.cfi_offset 7, -8
 18037              		.cfi_offset 14, -4
 18038 0002 82B0     		sub	sp, sp, #8
 18039              		.cfi_def_cfa_offset 16
 18040 0004 00AF     		add	r7, sp, #0
 18041              		.cfi_def_cfa_register 7
2770:..\src/command_processing.c ****     uint16 i;
2771:..\src/command_processing.c **** 
2772:..\src/command_processing.c ****     for (i = 0; i < sizeof(g_mem); i++) {
 18042              		.loc 1 2772 0
 18043 0006 0023     		movs	r3, #0
 18044 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 18045 000a 0EE0     		b	.L724
 18046              	.L725:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 407


2773:..\src/command_processing.c ****         ((reg8 *) (uint8*)&g_mem.flag)[i] = EEPROM_ADDR[i + (DEFAULT_EEPROM_DISPLACEMENT * 16)];
 18047              		.loc 1 2773 0 discriminator 3
 18048 000c FB88     		ldrh	r3, [r7, #6]
 18049 000e 114A     		ldr	r2, .L728
 18050 0010 1344     		add	r3, r3, r2
 18051 0012 114A     		ldr	r2, .L728+4
 18052 0014 1168     		ldr	r1, [r2]
 18053 0016 FA88     		ldrh	r2, [r7, #6]
 18054 0018 02F54872 		add	r2, r2, #800
 18055 001c 0A44     		add	r2, r2, r1
 18056 001e 1278     		ldrb	r2, [r2]
 18057 0020 D2B2     		uxtb	r2, r2
 18058 0022 1A70     		strb	r2, [r3]
2772:..\src/command_processing.c ****         ((reg8 *) (uint8*)&g_mem.flag)[i] = EEPROM_ADDR[i + (DEFAULT_EEPROM_DISPLACEMENT * 16)];
 18059              		.loc 1 2772 0 discriminator 3
 18060 0024 FB88     		ldrh	r3, [r7, #6]
 18061 0026 0133     		adds	r3, r3, #1
 18062 0028 FB80     		strh	r3, [r7, #6]	@ movhi
 18063              	.L724:
2772:..\src/command_processing.c ****         ((reg8 *) (uint8*)&g_mem.flag)[i] = EEPROM_ADDR[i + (DEFAULT_EEPROM_DISPLACEMENT * 16)];
 18064              		.loc 1 2772 0 is_stmt 0 discriminator 1
 18065 002a FB88     		ldrh	r3, [r7, #6]
 18066 002c B3F53D7F 		cmp	r3, #756
 18067 0030 ECD3     		bcc	.L725
2774:..\src/command_processing.c ****     }
2775:..\src/command_processing.c **** 
2776:..\src/command_processing.c ****     //check for initialization
2777:..\src/command_processing.c ****     if (g_mem.flag == FALSE) {
 18068              		.loc 1 2777 0 is_stmt 1
 18069 0032 084B     		ldr	r3, .L728
 18070 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18071 0036 002B     		cmp	r3, #0
 18072 0038 03D1     		bne	.L726
2778:..\src/command_processing.c ****         return memInit();
 18073              		.loc 1 2778 0
 18074 003a FFF7FEFF 		bl	memInit
 18075 003e 0346     		mov	r3, r0
 18076 0040 03E0     		b	.L727
 18077              	.L726:
2779:..\src/command_processing.c ****     } else {
2780:..\src/command_processing.c ****         return memStore(0);
 18078              		.loc 1 2780 0
 18079 0042 0020     		movs	r0, #0
 18080 0044 FFF7FEFF 		bl	memStore
 18081 0048 0346     		mov	r3, r0
 18082              	.L727:
2781:..\src/command_processing.c ****     }  
2782:..\src/command_processing.c **** }
 18083              		.loc 1 2782 0
 18084 004a 1846     		mov	r0, r3
 18085 004c 0837     		adds	r7, r7, #8
 18086              		.cfi_def_cfa_offset 8
 18087 004e BD46     		mov	sp, r7
 18088              		.cfi_def_cfa_register 13
 18089              		@ sp needed
 18090 0050 80BD     		pop	{r7, pc}
 18091              	.L729:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 408


 18092 0052 00BF     		.align	2
 18093              	.L728:
 18094 0054 00000000 		.word	g_mem
 18095 0058 00000000 		.word	EEPROM_ADDR
 18096              		.cfi_endproc
 18097              	.LFE87:
 18098              		.size	memRestore, .-memRestore
 18099              		.section	.rodata
 18100 1f3b 00       		.align	2
 18101              	.LC295:
 18102 1f3c 47454E30 		.ascii	"GEN001\000"
 18102      303100
 18103              		.section	.text.memInit,"ax",%progbits
 18104              		.align	2
 18105              		.global	memInit
 18106              		.thumb
 18107              		.thumb_func
 18108              		.type	memInit, %function
 18109              	memInit:
 18110              	.LFB88:
2783:..\src/command_processing.c **** 
2784:..\src/command_processing.c **** //==============================================================================
2785:..\src/command_processing.c **** //                                                                   MEMORY INIT
2786:..\src/command_processing.c **** //==============================================================================
2787:..\src/command_processing.c **** 
2788:..\src/command_processing.c **** uint8 memInit(void)
2789:..\src/command_processing.c **** {
 18111              		.loc 1 2789 0
 18112              		.cfi_startproc
 18113              		@ args = 0, pretend = 0, frame = 8
 18114              		@ frame_needed = 1, uses_anonymous_args = 0
 18115 0000 80B5     		push	{r7, lr}
 18116              		.cfi_def_cfa_offset 8
 18117              		.cfi_offset 7, -8
 18118              		.cfi_offset 14, -4
 18119 0002 82B0     		sub	sp, sp, #8
 18120              		.cfi_def_cfa_offset 16
 18121 0004 00AF     		add	r7, sp, #0
 18122              		.cfi_def_cfa_register 7
2790:..\src/command_processing.c ****     uint8 i, j;
2791:..\src/command_processing.c **** 
2792:..\src/command_processing.c ****     //initialize memory settings
2793:..\src/command_processing.c ****     for (i=0; i<15; i++){
 18123              		.loc 1 2793 0
 18124 0006 0023     		movs	r3, #0
 18125 0008 FB71     		strb	r3, [r7, #7]
 18126 000a 07E0     		b	.L731
 18127              	.L732:
2794:..\src/command_processing.c ****         g_mem.unused_bytes[i] = 0;
 18128              		.loc 1 2794 0 discriminator 3
 18129 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 18130 000e B44A     		ldr	r2, .L757
 18131 0010 1344     		add	r3, r3, r2
 18132 0012 0022     		movs	r2, #0
 18133 0014 5A70     		strb	r2, [r3, #1]
2793:..\src/command_processing.c ****         g_mem.unused_bytes[i] = 0;
 18134              		.loc 1 2793 0 discriminator 3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 409


 18135 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 18136 0018 0133     		adds	r3, r3, #1
 18137 001a FB71     		strb	r3, [r7, #7]
 18138              	.L731:
2793:..\src/command_processing.c ****         g_mem.unused_bytes[i] = 0;
 18139              		.loc 1 2793 0 is_stmt 0 discriminator 1
 18140 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 18141 001e 0E2B     		cmp	r3, #14
 18142 0020 F4D9     		bls	.L732
2795:..\src/command_processing.c ****     }
2796:..\src/command_processing.c ****         
2797:..\src/command_processing.c ****     // DEV STRUCT
2798:..\src/command_processing.c ****     g_mem.dev.id                = 1;
 18143              		.loc 1 2798 0 is_stmt 1
 18144 0022 AF4B     		ldr	r3, .L757
 18145 0024 0122     		movs	r2, #1
 18146 0026 83F8A020 		strb	r2, [r3, #160]
2799:..\src/command_processing.c ****     g_mem.dev.right_left        = RIGHT_HAND;
 18147              		.loc 1 2799 0
 18148 002a AD4B     		ldr	r3, .L757
 18149 002c 0022     		movs	r2, #0
 18150 002e 83F8A720 		strb	r2, [r3, #167]
2800:..\src/command_processing.c ****     g_mem.dev.dev_type          = GENERIC_2_MOTORS;
 18151              		.loc 1 2800 0
 18152 0032 AB4B     		ldr	r3, .L757
 18153 0034 0122     		movs	r2, #1
 18154 0036 83F8AC20 		strb	r2, [r3, #172]
2801:..\src/command_processing.c ****     g_mem.dev.reset_counters    = FALSE;   
 18155              		.loc 1 2801 0
 18156 003a A94B     		ldr	r3, .L757
 18157 003c 0022     		movs	r2, #0
 18158 003e 83F8A820 		strb	r2, [r3, #168]
2802:..\src/command_processing.c ****     reset_counters();                       //Initialize counters
 18159              		.loc 1 2802 0
 18160 0042 FFF7FEFF 		bl	reset_counters
2803:..\src/command_processing.c ****     for (i=0; i<EEPROM_BYTES_ROW*EEPROM_AFTER_CNT_FREE_ROWS; i++){
 18161              		.loc 1 2803 0
 18162 0046 0023     		movs	r3, #0
 18163 0048 FB71     		strb	r3, [r7, #7]
 18164 004a 08E0     		b	.L733
 18165              	.L734:
2804:..\src/command_processing.c ****         g_mem.unused_bytes1[i] = 0;
 18166              		.loc 1 2804 0 discriminator 3
 18167 004c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 18168 004e A44A     		ldr	r2, .L757
 18169 0050 1344     		add	r3, r3, r2
 18170 0052 0022     		movs	r2, #0
 18171 0054 83F88020 		strb	r2, [r3, #128]
2803:..\src/command_processing.c ****     for (i=0; i<EEPROM_BYTES_ROW*EEPROM_AFTER_CNT_FREE_ROWS; i++){
 18172              		.loc 1 2803 0 discriminator 3
 18173 0058 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 18174 005a 0133     		adds	r3, r3, #1
 18175 005c FB71     		strb	r3, [r7, #7]
 18176              	.L733:
2803:..\src/command_processing.c ****     for (i=0; i<EEPROM_BYTES_ROW*EEPROM_AFTER_CNT_FREE_ROWS; i++){
 18177              		.loc 1 2803 0 is_stmt 0 discriminator 1
 18178 005e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 410


 18179 0060 1F2B     		cmp	r3, #31
 18180 0062 F3D9     		bls	.L734
2805:..\src/command_processing.c ****     }
2806:..\src/command_processing.c ****     g_mem.dev.use_2nd_motor_flag = FALSE;
 18181              		.loc 1 2806 0 is_stmt 1
 18182 0064 9E4B     		ldr	r3, .L757
 18183 0066 0022     		movs	r2, #0
 18184 0068 83F8A920 		strb	r2, [r3, #169]
2807:..\src/command_processing.c **** 
2808:..\src/command_processing.c ****     // MOTOR STRUCT
2809:..\src/command_processing.c ****     for (i=0; i< NUM_OF_MOTORS; i++) {
 18185              		.loc 1 2809 0
 18186 006c 0023     		movs	r3, #0
 18187 006e FB71     		strb	r3, [r7, #7]
 18188 0070 15E1     		b	.L735
 18189              	.L738:
2810:..\src/command_processing.c ****         g_mem.motor[i].k_p           =0.0165 * 65536;
 18190              		.loc 1 2810 0
 18191 0072 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 18192 0074 9A49     		ldr	r1, .L757
 18193 0076 1346     		mov	r3, r2
 18194 0078 DB00     		lsls	r3, r3, #3
 18195 007a 9B1A     		subs	r3, r3, r2
 18196 007c 1B01     		lsls	r3, r3, #4
 18197 007e 0B44     		add	r3, r3, r1
 18198 0080 B033     		adds	r3, r3, #176
 18199 0082 40F23942 		movw	r2, #1081
 18200 0086 1A60     		str	r2, [r3]
2811:..\src/command_processing.c ****         g_mem.motor[i].k_i           =     0 * 65536;
 18201              		.loc 1 2811 0
 18202 0088 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 18203 008a 9549     		ldr	r1, .L757
 18204 008c 1346     		mov	r3, r2
 18205 008e DB00     		lsls	r3, r3, #3
 18206 0090 9B1A     		subs	r3, r3, r2
 18207 0092 1B01     		lsls	r3, r3, #4
 18208 0094 0B44     		add	r3, r3, r1
 18209 0096 B433     		adds	r3, r3, #180
 18210 0098 0022     		movs	r2, #0
 18211 009a 1A60     		str	r2, [r3]
2812:..\src/command_processing.c ****         g_mem.motor[i].k_d           = 0.007 * 65536;  // changed in order to avoid metallic clatte
 18212              		.loc 1 2812 0
 18213 009c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 18214 009e 9049     		ldr	r1, .L757
 18215 00a0 1346     		mov	r3, r2
 18216 00a2 DB00     		lsls	r3, r3, #3
 18217 00a4 9B1A     		subs	r3, r3, r2
 18218 00a6 1B01     		lsls	r3, r3, #4
 18219 00a8 0B44     		add	r3, r3, r1
 18220 00aa B833     		adds	r3, r3, #184
 18221 00ac 4FF4E572 		mov	r2, #458
 18222 00b0 1A60     		str	r2, [r3]
2813:..\src/command_processing.c ****         g_mem.motor[i].k_p_c         =     1 * 65536;
 18223              		.loc 1 2813 0
 18224 00b2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 18225 00b4 8A49     		ldr	r1, .L757
 18226 00b6 1346     		mov	r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 411


 18227 00b8 DB00     		lsls	r3, r3, #3
 18228 00ba 9B1A     		subs	r3, r3, r2
 18229 00bc 1B01     		lsls	r3, r3, #4
 18230 00be 0B44     		add	r3, r3, r1
 18231 00c0 BC33     		adds	r3, r3, #188
 18232 00c2 4FF48032 		mov	r2, #65536
 18233 00c6 1A60     		str	r2, [r3]
2814:..\src/command_processing.c ****         g_mem.motor[i].k_i_c         = 0.001 * 65536;
 18234              		.loc 1 2814 0
 18235 00c8 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 18236 00ca 8549     		ldr	r1, .L757
 18237 00cc 1346     		mov	r3, r2
 18238 00ce DB00     		lsls	r3, r3, #3
 18239 00d0 9B1A     		subs	r3, r3, r2
 18240 00d2 1B01     		lsls	r3, r3, #4
 18241 00d4 0B44     		add	r3, r3, r1
 18242 00d6 C033     		adds	r3, r3, #192
 18243 00d8 4122     		movs	r2, #65
 18244 00da 1A60     		str	r2, [r3]
2815:..\src/command_processing.c ****         g_mem.motor[i].k_d_c         =     0 * 65536;
 18245              		.loc 1 2815 0
 18246 00dc FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 18247 00de 8049     		ldr	r1, .L757
 18248 00e0 1346     		mov	r3, r2
 18249 00e2 DB00     		lsls	r3, r3, #3
 18250 00e4 9B1A     		subs	r3, r3, r2
 18251 00e6 1B01     		lsls	r3, r3, #4
 18252 00e8 0B44     		add	r3, r3, r1
 18253 00ea C433     		adds	r3, r3, #196
 18254 00ec 0022     		movs	r2, #0
 18255 00ee 1A60     		str	r2, [r3]
2816:..\src/command_processing.c **** 
2817:..\src/command_processing.c ****         g_mem.motor[i].k_p_dl        =   0.1 * 65536;
 18256              		.loc 1 2817 0
 18257 00f0 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 18258 00f2 7B49     		ldr	r1, .L757
 18259 00f4 1346     		mov	r3, r2
 18260 00f6 DB00     		lsls	r3, r3, #3
 18261 00f8 9B1A     		subs	r3, r3, r2
 18262 00fa 1B01     		lsls	r3, r3, #4
 18263 00fc 0B44     		add	r3, r3, r1
 18264 00fe C833     		adds	r3, r3, #200
 18265 0100 41F69912 		movw	r2, #6553
 18266 0104 1A60     		str	r2, [r3]
2818:..\src/command_processing.c ****         g_mem.motor[i].k_i_dl        =     0 * 65536;
 18267              		.loc 1 2818 0
 18268 0106 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 18269 0108 7549     		ldr	r1, .L757
 18270 010a 1346     		mov	r3, r2
 18271 010c DB00     		lsls	r3, r3, #3
 18272 010e 9B1A     		subs	r3, r3, r2
 18273 0110 1B01     		lsls	r3, r3, #4
 18274 0112 0B44     		add	r3, r3, r1
 18275 0114 CC33     		adds	r3, r3, #204
 18276 0116 0022     		movs	r2, #0
 18277 0118 1A60     		str	r2, [r3]
2819:..\src/command_processing.c ****         g_mem.motor[i].k_d_dl        =     0 * 65536;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 412


 18278              		.loc 1 2819 0
 18279 011a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 18280 011c 7049     		ldr	r1, .L757
 18281 011e 1346     		mov	r3, r2
 18282 0120 DB00     		lsls	r3, r3, #3
 18283 0122 9B1A     		subs	r3, r3, r2
 18284 0124 1B01     		lsls	r3, r3, #4
 18285 0126 0B44     		add	r3, r3, r1
 18286 0128 D033     		adds	r3, r3, #208
 18287 012a 0022     		movs	r2, #0
 18288 012c 1A60     		str	r2, [r3]
2820:..\src/command_processing.c ****         g_mem.motor[i].k_p_c_dl      =   0.3 * 65536;
 18289              		.loc 1 2820 0
 18290 012e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 18291 0130 6B49     		ldr	r1, .L757
 18292 0132 1346     		mov	r3, r2
 18293 0134 DB00     		lsls	r3, r3, #3
 18294 0136 9B1A     		subs	r3, r3, r2
 18295 0138 1B01     		lsls	r3, r3, #4
 18296 013a 0B44     		add	r3, r3, r1
 18297 013c D433     		adds	r3, r3, #212
 18298 013e 44F6CC42 		movw	r2, #19660
 18299 0142 1A60     		str	r2, [r3]
2821:..\src/command_processing.c ****         g_mem.motor[i].k_i_c_dl      =0.0002 * 65536;
 18300              		.loc 1 2821 0
 18301 0144 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 18302 0146 6649     		ldr	r1, .L757
 18303 0148 1346     		mov	r3, r2
 18304 014a DB00     		lsls	r3, r3, #3
 18305 014c 9B1A     		subs	r3, r3, r2
 18306 014e 1B01     		lsls	r3, r3, #4
 18307 0150 0B44     		add	r3, r3, r1
 18308 0152 D833     		adds	r3, r3, #216
 18309 0154 0D22     		movs	r2, #13
 18310 0156 1A60     		str	r2, [r3]
2822:..\src/command_processing.c ****         g_mem.motor[i].k_d_c_dl      =     0 * 65536;
 18311              		.loc 1 2822 0
 18312 0158 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 18313 015a 6149     		ldr	r1, .L757
 18314 015c 1346     		mov	r3, r2
 18315 015e DB00     		lsls	r3, r3, #3
 18316 0160 9B1A     		subs	r3, r3, r2
 18317 0162 1B01     		lsls	r3, r3, #4
 18318 0164 0B44     		add	r3, r3, r1
 18319 0166 DC33     		adds	r3, r3, #220
 18320 0168 0022     		movs	r2, #0
 18321 016a 1A60     		str	r2, [r3]
2823:..\src/command_processing.c **** 
2824:..\src/command_processing.c ****         g_mem.motor[i].activ         = 1;
 18322              		.loc 1 2824 0
 18323 016c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 18324 016e 5C49     		ldr	r1, .L757
 18325 0170 1346     		mov	r3, r2
 18326 0172 DB00     		lsls	r3, r3, #3
 18327 0174 9B1A     		subs	r3, r3, r2
 18328 0176 1B01     		lsls	r3, r3, #4
 18329 0178 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 413


 18330 017a E033     		adds	r3, r3, #224
 18331 017c 0122     		movs	r2, #1
 18332 017e 1A70     		strb	r2, [r3]
2825:..\src/command_processing.c ****         g_mem.motor[i].activate_pwm_rescaling = MAXON_24V;      //rescaling active for 12V motor
 18333              		.loc 1 2825 0
 18334 0180 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 18335 0182 5749     		ldr	r1, .L757
 18336 0184 1346     		mov	r3, r2
 18337 0186 DB00     		lsls	r3, r3, #3
 18338 0188 9B1A     		subs	r3, r3, r2
 18339 018a 1B01     		lsls	r3, r3, #4
 18340 018c 0B44     		add	r3, r3, r1
 18341 018e E133     		adds	r3, r3, #225
 18342 0190 0022     		movs	r2, #0
 18343 0192 1A70     		strb	r2, [r3]
2826:..\src/command_processing.c ****         g_mem.motor[i].motor_driver_type = DRIVER_MC33887;      //SoftHand standard driver
 18344              		.loc 1 2826 0
 18345 0194 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 18346 0196 5249     		ldr	r1, .L757
 18347 0198 1346     		mov	r3, r2
 18348 019a DB00     		lsls	r3, r3, #3
 18349 019c 9B1A     		subs	r3, r3, r2
 18350 019e 1B01     		lsls	r3, r3, #4
 18351 01a0 0B44     		add	r3, r3, r1
 18352 01a2 E233     		adds	r3, r3, #226
 18353 01a4 0022     		movs	r2, #0
 18354 01a6 1A70     		strb	r2, [r3]
2827:..\src/command_processing.c ****         g_mem.motor[i].input_mode    = INPUT_MODE_EXTERNAL;
 18355              		.loc 1 2827 0
 18356 01a8 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 18357 01aa 4D49     		ldr	r1, .L757
 18358 01ac 1346     		mov	r3, r2
 18359 01ae DB00     		lsls	r3, r3, #3
 18360 01b0 9B1A     		subs	r3, r3, r2
 18361 01b2 1B01     		lsls	r3, r3, #4
 18362 01b4 0B44     		add	r3, r3, r1
 18363 01b6 03F58773 		add	r3, r3, #270
 18364 01ba 0022     		movs	r2, #0
 18365 01bc 1A70     		strb	r2, [r3]
2828:..\src/command_processing.c ****         g_mem.motor[i].control_mode  = CONTROL_ANGLE;
 18366              		.loc 1 2828 0
 18367 01be FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 18368 01c0 4749     		ldr	r1, .L757
 18369 01c2 1346     		mov	r3, r2
 18370 01c4 DB00     		lsls	r3, r3, #3
 18371 01c6 9B1A     		subs	r3, r3, r2
 18372 01c8 1B01     		lsls	r3, r3, #4
 18373 01ca 0B44     		add	r3, r3, r1
 18374 01cc 03F20F13 		addw	r3, r3, #271
 18375 01d0 0022     		movs	r2, #0
 18376 01d2 1A70     		strb	r2, [r3]
2829:..\src/command_processing.c ****         g_mem.motor[i].max_step_pos = 0;
 18377              		.loc 1 2829 0
 18378 01d4 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 18379 01d6 4249     		ldr	r1, .L757
 18380 01d8 1346     		mov	r3, r2
 18381 01da DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 414


 18382 01dc 9B1A     		subs	r3, r3, r2
 18383 01de 1B01     		lsls	r3, r3, #4
 18384 01e0 0B44     		add	r3, r3, r1
 18385 01e2 F033     		adds	r3, r3, #240
 18386 01e4 0022     		movs	r2, #0
 18387 01e6 1A60     		str	r2, [r3]
2830:..\src/command_processing.c ****         g_mem.motor[i].max_step_neg = 0;
 18388              		.loc 1 2830 0
 18389 01e8 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 18390 01ea 3D49     		ldr	r1, .L757
 18391 01ec 1346     		mov	r3, r2
 18392 01ee DB00     		lsls	r3, r3, #3
 18393 01f0 9B1A     		subs	r3, r3, r2
 18394 01f2 1B01     		lsls	r3, r3, #4
 18395 01f4 0B44     		add	r3, r3, r1
 18396 01f6 EC33     		adds	r3, r3, #236
 18397 01f8 0022     		movs	r2, #0
 18398 01fa 1A60     		str	r2, [r3]
2831:..\src/command_processing.c ****         for(j = 0; j < LOOKUP_DIM; j++) {
 18399              		.loc 1 2831 0
 18400 01fc 0023     		movs	r3, #0
 18401 01fe BB71     		strb	r3, [r7, #6]
 18402 0200 10E0     		b	.L736
 18403              	.L737:
2832:..\src/command_processing.c ****             g_mem.motor[i].curr_lookup[j] = 0;
 18404              		.loc 1 2832 0 discriminator 3
 18405 0202 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 18406 0204 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 18407 0206 3648     		ldr	r0, .L757
 18408 0208 1346     		mov	r3, r2
 18409 020a DB00     		lsls	r3, r3, #3
 18410 020c 9B1A     		subs	r3, r3, r2
 18411 020e 9B00     		lsls	r3, r3, #2
 18412 0210 0B44     		add	r3, r3, r1
 18413 0212 3C33     		adds	r3, r3, #60
 18414 0214 9B00     		lsls	r3, r3, #2
 18415 0216 0344     		add	r3, r3, r0
 18416 0218 4FF00002 		mov	r2, #0
 18417 021c 5A60     		str	r2, [r3, #4]	@ float
2831:..\src/command_processing.c ****         for(j = 0; j < LOOKUP_DIM; j++) {
 18418              		.loc 1 2831 0 discriminator 3
 18419 021e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 18420 0220 0133     		adds	r3, r3, #1
 18421 0222 BB71     		strb	r3, [r7, #6]
 18422              	.L736:
2831:..\src/command_processing.c ****         for(j = 0; j < LOOKUP_DIM; j++) {
 18423              		.loc 1 2831 0 is_stmt 0 discriminator 1
 18424 0224 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 18425 0226 052B     		cmp	r3, #5
 18426 0228 EBD9     		bls	.L737
2833:..\src/command_processing.c ****         }
2834:..\src/command_processing.c ****         g_mem.motor[i].current_limit = DEFAULT_CURRENT_LIMIT;
 18427              		.loc 1 2834 0 is_stmt 1 discriminator 2
 18428 022a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 18429 022c 2C49     		ldr	r1, .L757
 18430 022e 1346     		mov	r3, r2
 18431 0230 DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 415


 18432 0232 9B1A     		subs	r3, r3, r2
 18433 0234 1B01     		lsls	r3, r3, #4
 18434 0236 0B44     		add	r3, r3, r1
 18435 0238 03F58673 		add	r3, r3, #268
 18436 023c 40F2DC52 		movw	r2, #1500
 18437 0240 1A80     		strh	r2, [r3]	@ movhi
2835:..\src/command_processing.c ****         g_mem.motor[i].encoder_line = i;    
 18438              		.loc 1 2835 0 discriminator 2
 18439 0242 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 18440 0244 2649     		ldr	r1, .L757
 18441 0246 1346     		mov	r3, r2
 18442 0248 DB00     		lsls	r3, r3, #3
 18443 024a 9B1A     		subs	r3, r3, r2
 18444 024c 1B01     		lsls	r3, r3, #4
 18445 024e 0B44     		add	r3, r3, r1
 18446 0250 03F58873 		add	r3, r3, #272
 18447 0254 FA79     		ldrb	r2, [r7, #7]
 18448 0256 1A70     		strb	r2, [r3]
2836:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_flag = 1;
 18449              		.loc 1 2836 0 discriminator 2
 18450 0258 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 18451 025a 2149     		ldr	r1, .L757
 18452 025c 1346     		mov	r3, r2
 18453 025e DB00     		lsls	r3, r3, #3
 18454 0260 9B1A     		subs	r3, r3, r2
 18455 0262 1B01     		lsls	r3, r3, #4
 18456 0264 0B44     		add	r3, r3, r1
 18457 0266 E333     		adds	r3, r3, #227
 18458 0268 0122     		movs	r2, #1
 18459 026a 1A70     		strb	r2, [r3]
2837:..\src/command_processing.c ****         
2838:..\src/command_processing.c ****         g_mem.motor[i].pwm_rate_limiter = PWM_RATE_LIMITER_MAX;
 18460              		.loc 1 2838 0 discriminator 2
 18461 026c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 18462 026e 1C49     		ldr	r1, .L757
 18463 0270 1346     		mov	r3, r2
 18464 0272 DB00     		lsls	r3, r3, #3
 18465 0274 9B1A     		subs	r3, r3, r2
 18466 0276 1B01     		lsls	r3, r3, #4
 18467 0278 0B44     		add	r3, r3, r1
 18468 027a 03F21113 		addw	r3, r3, #273
 18469 027e 0122     		movs	r2, #1
 18470 0280 1A70     		strb	r2, [r3]
2839:..\src/command_processing.c ****         g_mem.motor[i].not_revers_motor_flag = FALSE;       // Generic reversible motor  
 18471              		.loc 1 2839 0 discriminator 2
 18472 0282 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 18473 0284 1649     		ldr	r1, .L757
 18474 0286 1346     		mov	r3, r2
 18475 0288 DB00     		lsls	r3, r3, #3
 18476 028a 9B1A     		subs	r3, r3, r2
 18477 028c 1B01     		lsls	r3, r3, #4
 18478 028e 0B44     		add	r3, r3, r1
 18479 0290 03F58973 		add	r3, r3, #274
 18480 0294 0022     		movs	r2, #0
 18481 0296 1A70     		strb	r2, [r3]
2809:..\src/command_processing.c ****         g_mem.motor[i].k_p           =0.0165 * 65536;
 18482              		.loc 1 2809 0 discriminator 2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 416


 18483 0298 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 18484 029a 0133     		adds	r3, r3, #1
 18485 029c FB71     		strb	r3, [r7, #7]
 18486              	.L735:
2809:..\src/command_processing.c ****         g_mem.motor[i].k_p           =0.0165 * 65536;
 18487              		.loc 1 2809 0 is_stmt 0 discriminator 1
 18488 029e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 18489 02a0 012B     		cmp	r3, #1
 18490 02a2 7FF6E6AE 		bls	.L738
2840:..\src/command_processing.c ****     }
2841:..\src/command_processing.c ****     
2842:..\src/command_processing.c ****     // ENC STRUCT
2843:..\src/command_processing.c ****     for (i = 0; i< N_ENCODER_LINE_MAX; i++){
 18491              		.loc 1 2843 0 is_stmt 1
 18492 02a6 0023     		movs	r3, #0
 18493 02a8 FB71     		strb	r3, [r7, #7]
 18494 02aa 98E0     		b	.L739
 18495              	.L746:
2844:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 18496              		.loc 1 2844 0
 18497 02ac 0023     		movs	r3, #0
 18498 02ae BB71     		strb	r3, [r7, #6]
 18499 02b0 0FE0     		b	.L740
 18500              	.L741:
2845:..\src/command_processing.c ****             g_mem.enc[i].Enc_raw_read_conf[j] = 0;
 18501              		.loc 1 2845 0 discriminator 3
 18502 02b2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 18503 02b4 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 18504 02b6 0A48     		ldr	r0, .L757
 18505 02b8 1346     		mov	r3, r2
 18506 02ba 5B00     		lsls	r3, r3, #1
 18507 02bc 1344     		add	r3, r3, r2
 18508 02be 1B01     		lsls	r3, r3, #4
 18509 02c0 0344     		add	r3, r3, r0
 18510 02c2 0B44     		add	r3, r3, r1
 18511 02c4 03F5C873 		add	r3, r3, #400
 18512 02c8 0022     		movs	r2, #0
 18513 02ca 1A70     		strb	r2, [r3]
2844:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 18514              		.loc 1 2844 0 discriminator 3
 18515 02cc BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 18516 02ce 0133     		adds	r3, r3, #1
 18517 02d0 BB71     		strb	r3, [r7, #6]
 18518              	.L740:
2844:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 18519              		.loc 1 2844 0 is_stmt 0 discriminator 1
 18520 02d2 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 18521 02d4 042B     		cmp	r3, #4
 18522 02d6 ECD9     		bls	.L741
2846:..\src/command_processing.c ****         }
2847:..\src/command_processing.c ****         for(j = 0; j < NUM_OF_SENSORS; j++){
 18523              		.loc 1 2847 0 is_stmt 1
 18524 02d8 0023     		movs	r3, #0
 18525 02da BB71     		strb	r3, [r7, #6]
 18526 02dc 2CE0     		b	.L742
 18527              	.L758:
 18528 02de 00BF     		.align	2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 417


 18529              	.L757:
 18530 02e0 00000000 		.word	g_mem
 18531              	.L743:
2848:..\src/command_processing.c ****             g_mem.enc[i].res[j] = 3;
 18532              		.loc 1 2848 0 discriminator 3
 18533 02e4 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 18534 02e6 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 18535 02e8 CA48     		ldr	r0, .L759
 18536 02ea 1346     		mov	r3, r2
 18537 02ec 5B00     		lsls	r3, r3, #1
 18538 02ee 1344     		add	r3, r3, r2
 18539 02f0 1B01     		lsls	r3, r3, #4
 18540 02f2 0344     		add	r3, r3, r0
 18541 02f4 0B44     		add	r3, r3, r1
 18542 02f6 03F29513 		addw	r3, r3, #405
 18543 02fa 0322     		movs	r2, #3
 18544 02fc 1A70     		strb	r2, [r3]
2849:..\src/command_processing.c ****             g_mem.enc[i].m_mult[j] = 1;
 18545              		.loc 1 2849 0 discriminator 3
 18546 02fe FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 18547 0300 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 18548 0302 C448     		ldr	r0, .L759
 18549 0304 1346     		mov	r3, r2
 18550 0306 5B00     		lsls	r3, r3, #1
 18551 0308 1344     		add	r3, r3, r2
 18552 030a 9B00     		lsls	r3, r3, #2
 18553 030c 0B44     		add	r3, r3, r1
 18554 030e 6833     		adds	r3, r3, #104
 18555 0310 9B00     		lsls	r3, r3, #2
 18556 0312 0344     		add	r3, r3, r0
 18557 0314 4FF07E52 		mov	r2, #1065353216
 18558 0318 5A60     		str	r2, [r3, #4]	@ float
2850:..\src/command_processing.c ****             g_mem.enc[i].m_off[j] = (int32)0 << g_mem.enc[i].res[j];
 18559              		.loc 1 2850 0 discriminator 3
 18560 031a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 18561 031c B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 18562 031e BD48     		ldr	r0, .L759
 18563 0320 1346     		mov	r3, r2
 18564 0322 5B00     		lsls	r3, r3, #1
 18565 0324 1344     		add	r3, r3, r2
 18566 0326 9B00     		lsls	r3, r3, #2
 18567 0328 0B44     		add	r3, r3, r1
 18568 032a 6633     		adds	r3, r3, #102
 18569 032c 0022     		movs	r2, #0
 18570 032e 40F82320 		str	r2, [r0, r3, lsl #2]
2847:..\src/command_processing.c ****             g_mem.enc[i].res[j] = 3;
 18571              		.loc 1 2847 0 discriminator 3
 18572 0332 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 18573 0334 0133     		adds	r3, r3, #1
 18574 0336 BB71     		strb	r3, [r7, #6]
 18575              	.L742:
2847:..\src/command_processing.c ****             g_mem.enc[i].res[j] = 3;
 18576              		.loc 1 2847 0 is_stmt 0 discriminator 1
 18577 0338 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 18578 033a 022B     		cmp	r3, #2
 18579 033c D2D9     		bls	.L743
2851:..\src/command_processing.c ****         }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 418


2852:..\src/command_processing.c ****         g_mem.enc[i].double_encoder_on_off = FALSE;
 18580              		.loc 1 2852 0 is_stmt 1
 18581 033e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 18582 0340 B449     		ldr	r1, .L759
 18583 0342 1346     		mov	r3, r2
 18584 0344 5B00     		lsls	r3, r3, #1
 18585 0346 1344     		add	r3, r3, r2
 18586 0348 1B01     		lsls	r3, r3, #4
 18587 034a 0B44     		add	r3, r3, r1
 18588 034c 03F5D873 		add	r3, r3, #432
 18589 0350 0022     		movs	r2, #0
 18590 0352 1A70     		strb	r2, [r3]
2853:..\src/command_processing.c ****         g_mem.enc[i].motor_handle_ratio = 22;     
 18591              		.loc 1 2853 0
 18592 0354 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 18593 0356 AF49     		ldr	r1, .L759
 18594 0358 1346     		mov	r3, r2
 18595 035a 5B00     		lsls	r3, r3, #1
 18596 035c 1344     		add	r3, r3, r2
 18597 035e 1B01     		lsls	r3, r3, #4
 18598 0360 0B44     		add	r3, r3, r1
 18599 0362 03F5DA73 		add	r3, r3, #436
 18600 0366 1622     		movs	r2, #22
 18601 0368 1A70     		strb	r2, [r3]
2854:..\src/command_processing.c ****         for(j = 0; j < NUM_OF_SENSORS; j++){
 18602              		.loc 1 2854 0
 18603 036a 0023     		movs	r3, #0
 18604 036c BB71     		strb	r3, [r7, #6]
 18605 036e 0FE0     		b	.L744
 18606              	.L745:
2855:..\src/command_processing.c ****             g_mem.enc[i].Enc_idx_use_for_control[j] = j;    // First encoder is that with index 0 a
 18607              		.loc 1 2855 0 discriminator 3
 18608 0370 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 18609 0372 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 18610 0374 A748     		ldr	r0, .L759
 18611 0376 1346     		mov	r3, r2
 18612 0378 5B00     		lsls	r3, r3, #1
 18613 037a 1344     		add	r3, r3, r2
 18614 037c 1B01     		lsls	r3, r3, #4
 18615 037e 0344     		add	r3, r3, r0
 18616 0380 0B44     		add	r3, r3, r1
 18617 0382 03F2B113 		addw	r3, r3, #433
 18618 0386 BA79     		ldrb	r2, [r7, #6]
 18619 0388 1A70     		strb	r2, [r3]
2854:..\src/command_processing.c ****         for(j = 0; j < NUM_OF_SENSORS; j++){
 18620              		.loc 1 2854 0 discriminator 3
 18621 038a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 18622 038c 0133     		adds	r3, r3, #1
 18623 038e BB71     		strb	r3, [r7, #6]
 18624              	.L744:
2854:..\src/command_processing.c ****         for(j = 0; j < NUM_OF_SENSORS; j++){
 18625              		.loc 1 2854 0 is_stmt 0 discriminator 1
 18626 0390 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 18627 0392 022B     		cmp	r3, #2
 18628 0394 ECD9     		bls	.L745
2856:..\src/command_processing.c ****         }
2857:..\src/command_processing.c ****         g_mem.enc[i].gears_params[0] = 15;     
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 419


 18629              		.loc 1 2857 0 is_stmt 1 discriminator 2
 18630 0396 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 18631 0398 9E49     		ldr	r1, .L759
 18632 039a 1346     		mov	r3, r2
 18633 039c 5B00     		lsls	r3, r3, #1
 18634 039e 1344     		add	r3, r3, r2
 18635 03a0 1B01     		lsls	r3, r3, #4
 18636 03a2 0B44     		add	r3, r3, r1
 18637 03a4 03F2B513 		addw	r3, r3, #437
 18638 03a8 0F22     		movs	r2, #15
 18639 03aa 1A70     		strb	r2, [r3]
2858:..\src/command_processing.c ****         g_mem.enc[i].gears_params[1] = 14;     
 18640              		.loc 1 2858 0 discriminator 2
 18641 03ac FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 18642 03ae 9949     		ldr	r1, .L759
 18643 03b0 1346     		mov	r3, r2
 18644 03b2 5B00     		lsls	r3, r3, #1
 18645 03b4 1344     		add	r3, r3, r2
 18646 03b6 1B01     		lsls	r3, r3, #4
 18647 03b8 0B44     		add	r3, r3, r1
 18648 03ba 03F5DB73 		add	r3, r3, #438
 18649 03be 0E22     		movs	r2, #14
 18650 03c0 1A70     		strb	r2, [r3]
2859:..\src/command_processing.c ****         g_mem.enc[i].gears_params[2] = 1;  
 18651              		.loc 1 2859 0 discriminator 2
 18652 03c2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 18653 03c4 9349     		ldr	r1, .L759
 18654 03c6 1346     		mov	r3, r2
 18655 03c8 5B00     		lsls	r3, r3, #1
 18656 03ca 1344     		add	r3, r3, r2
 18657 03cc 1B01     		lsls	r3, r3, #4
 18658 03ce 0B44     		add	r3, r3, r1
 18659 03d0 03F2B713 		addw	r3, r3, #439
 18660 03d4 0122     		movs	r2, #1
 18661 03d6 1A70     		strb	r2, [r3]
2843:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 18662              		.loc 1 2843 0 discriminator 2
 18663 03d8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 18664 03da 0133     		adds	r3, r3, #1
 18665 03dc FB71     		strb	r3, [r7, #7]
 18666              	.L739:
2843:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 18667              		.loc 1 2843 0 is_stmt 0 discriminator 1
 18668 03de FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 18669 03e0 012B     		cmp	r3, #1
 18670 03e2 7FF663AF 		bls	.L746
2860:..\src/command_processing.c ****     }
2861:..\src/command_processing.c ****     
2862:..\src/command_processing.c ****     for (i=0; i< NUM_OF_MOTORS; i++) {
 18671              		.loc 1 2862 0 is_stmt 1
 18672 03e6 0023     		movs	r3, #0
 18673 03e8 FB71     		strb	r3, [r7, #7]
 18674 03ea 2EE0     		b	.L747
 18675              	.L748:
2863:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_inf = 0;
 18676              		.loc 1 2863 0 discriminator 3
 18677 03ec FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 420


 18678 03ee 8949     		ldr	r1, .L759
 18679 03f0 1346     		mov	r3, r2
 18680 03f2 DB00     		lsls	r3, r3, #3
 18681 03f4 9B1A     		subs	r3, r3, r2
 18682 03f6 1B01     		lsls	r3, r3, #4
 18683 03f8 0B44     		add	r3, r3, r1
 18684 03fa E433     		adds	r3, r3, #228
 18685 03fc 0022     		movs	r2, #0
 18686 03fe 1A60     		str	r2, [r3]
2864:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_sup = (int32)19000 << g_mem.enc[g_mem.motor[i].encoder_line].res[0];
 18687              		.loc 1 2864 0 discriminator 3
 18688 0400 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 18689 0402 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 18690 0404 8348     		ldr	r0, .L759
 18691 0406 0B46     		mov	r3, r1
 18692 0408 DB00     		lsls	r3, r3, #3
 18693 040a 5B1A     		subs	r3, r3, r1
 18694 040c 1B01     		lsls	r3, r3, #4
 18695 040e 0344     		add	r3, r3, r0
 18696 0410 03F58873 		add	r3, r3, #272
 18697 0414 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18698 0416 1846     		mov	r0, r3
 18699 0418 7E49     		ldr	r1, .L759
 18700 041a 0346     		mov	r3, r0
 18701 041c 5B00     		lsls	r3, r3, #1
 18702 041e 0344     		add	r3, r3, r0
 18703 0420 1B01     		lsls	r3, r3, #4
 18704 0422 0B44     		add	r3, r3, r1
 18705 0424 03F29513 		addw	r3, r3, #405
 18706 0428 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18707 042a 1946     		mov	r1, r3
 18708 042c 44F63823 		movw	r3, #19000
 18709 0430 03FA01F1 		lsl	r1, r3, r1
 18710 0434 7748     		ldr	r0, .L759
 18711 0436 1346     		mov	r3, r2
 18712 0438 DB00     		lsls	r3, r3, #3
 18713 043a 9B1A     		subs	r3, r3, r2
 18714 043c 1B01     		lsls	r3, r3, #4
 18715 043e 0344     		add	r3, r3, r0
 18716 0440 E833     		adds	r3, r3, #232
 18717 0442 1960     		str	r1, [r3]
2862:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_inf = 0;
 18718              		.loc 1 2862 0 discriminator 3
 18719 0444 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 18720 0446 0133     		adds	r3, r3, #1
 18721 0448 FB71     		strb	r3, [r7, #7]
 18722              	.L747:
2862:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_inf = 0;
 18723              		.loc 1 2862 0 is_stmt 0 discriminator 1
 18724 044a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 18725 044c 012B     		cmp	r3, #1
 18726 044e CDD9     		bls	.L748
2865:..\src/command_processing.c ****     }
2866:..\src/command_processing.c ****     
2867:..\src/command_processing.c ****     // EMG STRUCT     
2868:..\src/command_processing.c ****     g_mem.emg.emg_threshold[0] = 200;
 18727              		.loc 1 2868 0 is_stmt 1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 421


 18728 0450 704B     		ldr	r3, .L759
 18729 0452 C822     		movs	r2, #200
 18730 0454 A3F8F021 		strh	r2, [r3, #496]	@ movhi
2869:..\src/command_processing.c ****     g_mem.emg.emg_threshold[1] = 200;
 18731              		.loc 1 2869 0
 18732 0458 6E4B     		ldr	r3, .L759
 18733 045a C822     		movs	r2, #200
 18734 045c A3F8F221 		strh	r2, [r3, #498]	@ movhi
2870:..\src/command_processing.c ****     g_mem.emg.emg_max_value[0] = 1024;
 18735              		.loc 1 2870 0
 18736 0460 6C4B     		ldr	r3, .L759
 18737 0462 4FF48062 		mov	r2, #1024
 18738 0466 C3F8F421 		str	r2, [r3, #500]
2871:..\src/command_processing.c ****     g_mem.emg.emg_max_value[1] = 1024;   
 18739              		.loc 1 2871 0
 18740 046a 6A4B     		ldr	r3, .L759
 18741 046c 4FF48062 		mov	r2, #1024
 18742 0470 C3F8F821 		str	r2, [r3, #504]
2872:..\src/command_processing.c ****     g_mem.emg.emg_speed[0] = 100; 
 18743              		.loc 1 2872 0
 18744 0474 674B     		ldr	r3, .L759
 18745 0476 6422     		movs	r2, #100
 18746 0478 83F8FC21 		strb	r2, [r3, #508]
2873:..\src/command_processing.c ****     g_mem.emg.emg_speed[1] = 100; 
 18747              		.loc 1 2873 0
 18748 047c 654B     		ldr	r3, .L759
 18749 047e 6422     		movs	r2, #100
 18750 0480 83F8FD21 		strb	r2, [r3, #509]
2874:..\src/command_processing.c ****     g_mem.emg.emg_calibration_flag = 0;      // EMG calibration disabled by default
 18751              		.loc 1 2874 0
 18752 0484 634B     		ldr	r3, .L759
 18753 0486 0022     		movs	r2, #0
 18754 0488 83F8FE21 		strb	r2, [r3, #510]
2875:..\src/command_processing.c ****     g_mem.emg.switch_emg = 0;    
 18755              		.loc 1 2875 0
 18756 048c 614B     		ldr	r3, .L759
 18757 048e 0022     		movs	r2, #0
 18758 0490 83F8FF21 		strb	r2, [r3, #511]
2876:..\src/command_processing.c **** 
2877:..\src/command_processing.c ****     // IMU STRUCT
2878:..\src/command_processing.c ****     g_mem.imu.read_imu_flag = FALSE;
 18759              		.loc 1 2878 0
 18760 0494 5F4B     		ldr	r3, .L759
 18761 0496 0022     		movs	r2, #0
 18762 0498 83F80022 		strb	r2, [r3, #512]
2879:..\src/command_processing.c ****     g_mem.imu.SPI_read_delay = 0;       // 0 - No delay
 18763              		.loc 1 2879 0
 18764 049c 5D4B     		ldr	r3, .L759
 18765 049e 0022     		movs	r2, #0
 18766 04a0 83F80122 		strb	r2, [r3, #513]
2880:..\src/command_processing.c ****     for (i = 0; i< N_IMU_MAX; i++){
 18767              		.loc 1 2880 0
 18768 04a4 0023     		movs	r3, #0
 18769 04a6 FB71     		strb	r3, [r7, #7]
 18770 04a8 34E0     		b	.L749
 18771              	.L750:
2881:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][0] = 1;   // Accelerometers
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 422


 18772              		.loc 1 2881 0 discriminator 3
 18773 04aa FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 18774 04ac 5949     		ldr	r1, .L759
 18775 04ae 1346     		mov	r3, r2
 18776 04b0 9B00     		lsls	r3, r3, #2
 18777 04b2 1344     		add	r3, r3, r2
 18778 04b4 0B44     		add	r3, r3, r1
 18779 04b6 03F20223 		addw	r3, r3, #514
 18780 04ba 0122     		movs	r2, #1
 18781 04bc 1A70     		strb	r2, [r3]
2882:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][1] = 1;   // Gyroscopes
 18782              		.loc 1 2882 0 discriminator 3
 18783 04be FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 18784 04c0 5449     		ldr	r1, .L759
 18785 04c2 1346     		mov	r3, r2
 18786 04c4 9B00     		lsls	r3, r3, #2
 18787 04c6 1344     		add	r3, r3, r2
 18788 04c8 0B44     		add	r3, r3, r1
 18789 04ca 03F20323 		addw	r3, r3, #515
 18790 04ce 0122     		movs	r2, #1
 18791 04d0 1A70     		strb	r2, [r3]
2883:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][2] = 0;   // Magnetometers
 18792              		.loc 1 2883 0 discriminator 3
 18793 04d2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 18794 04d4 4F49     		ldr	r1, .L759
 18795 04d6 1346     		mov	r3, r2
 18796 04d8 9B00     		lsls	r3, r3, #2
 18797 04da 1344     		add	r3, r3, r2
 18798 04dc 0B44     		add	r3, r3, r1
 18799 04de 03F50173 		add	r3, r3, #516
 18800 04e2 0022     		movs	r2, #0
 18801 04e4 1A70     		strb	r2, [r3]
2884:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][3] = 0;   // Quaternions
 18802              		.loc 1 2884 0 discriminator 3
 18803 04e6 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 18804 04e8 4A49     		ldr	r1, .L759
 18805 04ea 1346     		mov	r3, r2
 18806 04ec 9B00     		lsls	r3, r3, #2
 18807 04ee 1344     		add	r3, r3, r2
 18808 04f0 0B44     		add	r3, r3, r1
 18809 04f2 03F20523 		addw	r3, r3, #517
 18810 04f6 0022     		movs	r2, #0
 18811 04f8 1A70     		strb	r2, [r3]
2885:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][4] = 0;   // Temperatures
 18812              		.loc 1 2885 0 discriminator 3
 18813 04fa FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 18814 04fc 4549     		ldr	r1, .L759
 18815 04fe 1346     		mov	r3, r2
 18816 0500 9B00     		lsls	r3, r3, #2
 18817 0502 1344     		add	r3, r3, r2
 18818 0504 0B44     		add	r3, r3, r1
 18819 0506 03F20623 		addw	r3, r3, #518
 18820 050a 0022     		movs	r2, #0
 18821 050c 1A70     		strb	r2, [r3]
2880:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][0] = 1;   // Accelerometers
 18822              		.loc 1 2880 0 discriminator 3
 18823 050e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 423


 18824 0510 0133     		adds	r3, r3, #1
 18825 0512 FB71     		strb	r3, [r7, #7]
 18826              	.L749:
2880:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][0] = 1;   // Accelerometers
 18827              		.loc 1 2880 0 is_stmt 0 discriminator 1
 18828 0514 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 18829 0516 042B     		cmp	r3, #4
 18830 0518 C7D9     		bls	.L750
2886:..\src/command_processing.c ****     }
2887:..\src/command_processing.c ****      
2888:..\src/command_processing.c ****     // EXP STRUCT
2889:..\src/command_processing.c ****     g_mem.exp.read_exp_port_flag = EXP_NONE;       // 0 - None
 18831              		.loc 1 2889 0 is_stmt 1
 18832 051a 3E4B     		ldr	r3, .L759
 18833 051c 0022     		movs	r2, #0
 18834 051e 83F82622 		strb	r2, [r3, #550]
2890:..\src/command_processing.c ****     strcpy(g_mem.user[g_mem.dev.user_id].user_code_string, "GEN001");
 18835              		.loc 1 2890 0
 18836 0522 3C4B     		ldr	r3, .L759
 18837 0524 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 18838 0528 1233     		adds	r3, r3, #18
 18839 052a 5B01     		lsls	r3, r3, #5
 18840 052c 394A     		ldr	r2, .L759
 18841 052e 1344     		add	r3, r3, r2
 18842 0530 394A     		ldr	r2, .L759+4
 18843 0532 1068     		ldr	r0, [r2]	@ unaligned
 18844 0534 1860     		str	r0, [r3]	@ unaligned
 18845 0536 9188     		ldrh	r1, [r2, #4]	@ unaligned
 18846 0538 9279     		ldrb	r2, [r2, #6]
 18847 053a 9980     		strh	r1, [r3, #4]	@ unaligned
 18848 053c 9A71     		strb	r2, [r3, #6]
2891:..\src/command_processing.c ****     if (g_mem.exp.read_exp_port_flag == EXP_SD_RTC) {
 18849              		.loc 1 2891 0
 18850 053e 354B     		ldr	r3, .L759
 18851 0540 93F82632 		ldrb	r3, [r3, #550]	@ zero_extendqisi2
 18852 0544 012B     		cmp	r3, #1
 18853 0546 13D1     		bne	.L751
2892:..\src/command_processing.c ****         // Set date of maintenance from RTC
2893:..\src/command_processing.c ****         store_RTC_current_time();
 18854              		.loc 1 2893 0
 18855 0548 FFF7FEFF 		bl	store_RTC_current_time
2894:..\src/command_processing.c ****         
2895:..\src/command_processing.c ****         g_mem.dev.stats_period_begin_date[0] = g_mem.exp.curr_time[0];
 18856              		.loc 1 2895 0
 18857 054c 314B     		ldr	r3, .L759
 18858 054e 93F82022 		ldrb	r2, [r3, #544]	@ zero_extendqisi2
 18859 0552 304B     		ldr	r3, .L759
 18860 0554 83F8A420 		strb	r2, [r3, #164]
2896:..\src/command_processing.c ****         g_mem.dev.stats_period_begin_date[1] = g_mem.exp.curr_time[1];
 18861              		.loc 1 2896 0
 18862 0558 2E4B     		ldr	r3, .L759
 18863 055a 93F82122 		ldrb	r2, [r3, #545]	@ zero_extendqisi2
 18864 055e 2D4B     		ldr	r3, .L759
 18865 0560 83F8A520 		strb	r2, [r3, #165]
2897:..\src/command_processing.c ****         g_mem.dev.stats_period_begin_date[2] = g_mem.exp.curr_time[2];
 18866              		.loc 1 2897 0
 18867 0564 2B4B     		ldr	r3, .L759
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 424


 18868 0566 93F82222 		ldrb	r2, [r3, #546]	@ zero_extendqisi2
 18869 056a 2A4B     		ldr	r3, .L759
 18870 056c 83F8A620 		strb	r2, [r3, #166]
 18871              	.L751:
2898:..\src/command_processing.c ****     }
2899:..\src/command_processing.c ****     g_mem.exp.read_ADC_sensors_port_flag = FALSE;
 18872              		.loc 1 2899 0
 18873 0570 284B     		ldr	r3, .L759
 18874 0572 0022     		movs	r2, #0
 18875 0574 83F82722 		strb	r2, [r3, #551]
2900:..\src/command_processing.c ****     for (i = 0; i < NUM_OF_ADC_CHANNELS_MAX; i++) {
 18876              		.loc 1 2900 0
 18877 0578 0023     		movs	r3, #0
 18878 057a FB71     		strb	r3, [r7, #7]
 18879 057c 08E0     		b	.L752
 18880              	.L753:
2901:..\src/command_processing.c ****         g_mem.exp.ADC_conf[i] = 0;
 18881              		.loc 1 2901 0 discriminator 3
 18882 057e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 18883 0580 244A     		ldr	r2, .L759
 18884 0582 1344     		add	r3, r3, r2
 18885 0584 0022     		movs	r2, #0
 18886 0586 83F82822 		strb	r2, [r3, #552]
2900:..\src/command_processing.c ****     for (i = 0; i < NUM_OF_ADC_CHANNELS_MAX; i++) {
 18887              		.loc 1 2900 0 discriminator 3
 18888 058a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 18889 058c 0133     		adds	r3, r3, #1
 18890 058e FB71     		strb	r3, [r7, #7]
 18891              	.L752:
2900:..\src/command_processing.c ****     for (i = 0; i < NUM_OF_ADC_CHANNELS_MAX; i++) {
 18892              		.loc 1 2900 0 is_stmt 0 discriminator 1
 18893 0590 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 18894 0592 0B2B     		cmp	r3, #11
 18895 0594 F3D9     		bls	.L753
2902:..\src/command_processing.c ****     }
2903:..\src/command_processing.c ****     //Activate only the two EMG channels by default for every firmware configuration
2904:..\src/command_processing.c ****     g_mem.exp.ADC_conf[2] = 1;
 18896              		.loc 1 2904 0 is_stmt 1
 18897 0596 1F4B     		ldr	r3, .L759
 18898 0598 0122     		movs	r2, #1
 18899 059a 83F82A22 		strb	r2, [r3, #554]
2905:..\src/command_processing.c ****     g_mem.exp.ADC_conf[3] = 1;
 18900              		.loc 1 2905 0
 18901 059e 1D4B     		ldr	r3, .L759
 18902 05a0 0122     		movs	r2, #1
 18903 05a2 83F82B22 		strb	r2, [r3, #555]
2906:..\src/command_processing.c ****     g_mem.exp.record_EMG_history_on_SD = FALSE;
 18904              		.loc 1 2906 0
 18905 05a6 1B4B     		ldr	r3, .L759
 18906 05a8 0022     		movs	r2, #0
 18907 05aa 83F83422 		strb	r2, [r3, #564]
2907:..\src/command_processing.c **** 
2908:..\src/command_processing.c ****     // WR STRUCT (default in generic fw)
2909:..\src/command_processing.c ****     g_mem.WR.activation_mode = 0;                // Default Fast:wrist/syn2, Slow:hand/syn1
 18908              		.loc 1 2909 0
 18909 05ae 194B     		ldr	r3, .L759
 18910 05b0 0022     		movs	r2, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 425


 18911 05b2 83F8E022 		strb	r2, [r3, #736]
2910:..\src/command_processing.c ****     g_mem.WR.fast_act_threshold[0] = 800;
 18912              		.loc 1 2910 0
 18913 05b6 174B     		ldr	r3, .L759
 18914 05b8 4FF44872 		mov	r2, #800
 18915 05bc A3F8E222 		strh	r2, [r3, #738]	@ movhi
2911:..\src/command_processing.c **** 
2912:..\src/command_processing.c **** #ifdef SOFTHAND_FW
2913:..\src/command_processing.c ****     // Override memory values with specific ones for SoftHand Pro device
2914:..\src/command_processing.c ****     memInit_SoftHandPro();
 18916              		.loc 1 2914 0
 18917 05c0 FFF7FEFF 		bl	memInit_SoftHandPro
2915:..\src/command_processing.c **** #endif 
2916:..\src/command_processing.c **** 
2917:..\src/command_processing.c **** #ifdef MASTER_FW
2918:..\src/command_processing.c ****     // Override memory values with specific ones for Master device
2919:..\src/command_processing.c ****     memInit_Master();
2920:..\src/command_processing.c **** #endif 
2921:..\src/command_processing.c **** 
2922:..\src/command_processing.c **** #ifdef AIR_CHAMBERS_FB_FW
2923:..\src/command_processing.c ****     // Override memory values with specific ones for Air Chambers device
2924:..\src/command_processing.c ****     memInit_AirChambersFb();
2925:..\src/command_processing.c **** #endif 
2926:..\src/command_processing.c **** 
2927:..\src/command_processing.c **** #ifdef OTBK_ACT_WRIST_MS_FW
2928:..\src/command_processing.c ****     // Override memory values with specific ones for Ottobock Wrist device
2929:..\src/command_processing.c ****     memInit_OtbkActWristMs();
2930:..\src/command_processing.c **** #endif
2931:..\src/command_processing.c **** 
2932:..\src/command_processing.c ****     // JOYSTICK STRUCT
2933:..\src/command_processing.c ****     g_mem.JOY_spec.joystick_closure_speed = 150;
 18918              		.loc 1 2933 0
 18919 05c4 134B     		ldr	r3, .L759
 18920 05c6 9622     		movs	r2, #150
 18921 05c8 A3F8B022 		strh	r2, [r3, #688]	@ movhi
2934:..\src/command_processing.c ****     g_mem.JOY_spec.joystick_threshold = 100;
 18922              		.loc 1 2934 0
 18923 05cc 114B     		ldr	r3, .L759
 18924 05ce 6422     		movs	r2, #100
 18925 05d0 A3F8B222 		strh	r2, [r3, #690]	@ movhi
2935:..\src/command_processing.c ****     g_mem.JOY_spec.joystick_gains[0] = 1024;
 18926              		.loc 1 2935 0
 18927 05d4 0F4B     		ldr	r3, .L759
 18928 05d6 4FF48062 		mov	r2, #1024
 18929 05da A3F8B422 		strh	r2, [r3, #692]	@ movhi
2936:..\src/command_processing.c ****     g_mem.JOY_spec.joystick_gains[1] = 1024;
 18930              		.loc 1 2936 0
 18931 05de 0D4B     		ldr	r3, .L759
 18932 05e0 4FF48062 		mov	r2, #1024
 18933 05e4 A3F8B622 		strh	r2, [r3, #694]	@ movhi
2937:..\src/command_processing.c **** 
2938:..\src/command_processing.c ****     // Default generic user_id
2939:..\src/command_processing.c ****     g_mem.dev.user_id = GENERIC_USER;    
 18934              		.loc 1 2939 0
 18935 05e8 0A4B     		ldr	r3, .L759
 18936 05ea 0022     		movs	r2, #0
 18937 05ec 83F8AB20 		strb	r2, [r3, #171]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 426


2940:..\src/command_processing.c **** 
2941:..\src/command_processing.c ****     // set the initialized flag to show EEPROM has been populated
2942:..\src/command_processing.c ****     g_mem.flag = TRUE;
 18938              		.loc 1 2942 0
 18939 05f0 084B     		ldr	r3, .L759
 18940 05f2 0122     		movs	r2, #1
 18941 05f4 1A70     		strb	r2, [r3]
2943:..\src/command_processing.c ****     
2944:..\src/command_processing.c ****     //write that configuration to EEPROM
2945:..\src/command_processing.c ****     return ( memStore(0) && memStore(DEFAULT_EEPROM_DISPLACEMENT) );
 18942              		.loc 1 2945 0
 18943 05f6 0020     		movs	r0, #0
 18944 05f8 FFF7FEFF 		bl	memStore
 18945 05fc 0346     		mov	r3, r0
 18946 05fe 002B     		cmp	r3, #0
 18947 0600 0CD0     		beq	.L754
 18948              		.loc 1 2945 0 is_stmt 0 discriminator 1
 18949 0602 3220     		movs	r0, #50
 18950 0604 FFF7FEFF 		bl	memStore
 18951 0608 0346     		mov	r3, r0
 18952 060a 002B     		cmp	r3, #0
 18953 060c 06D0     		beq	.L754
 18954              		.loc 1 2945 0 discriminator 3
 18955 060e 0123     		movs	r3, #1
 18956 0610 05E0     		b	.L755
 18957              	.L760:
 18958 0612 00BF     		.align	2
 18959              	.L759:
 18960 0614 00000000 		.word	g_mem
 18961 0618 3C1F0000 		.word	.LC295
 18962              	.L754:
 18963              		.loc 1 2945 0 discriminator 4
 18964 061c 0023     		movs	r3, #0
 18965              	.L755:
 18966              		.loc 1 2945 0 discriminator 6
 18967 061e DBB2     		uxtb	r3, r3
2946:..\src/command_processing.c **** }
 18968              		.loc 1 2946 0 is_stmt 1 discriminator 6
 18969 0620 1846     		mov	r0, r3
 18970 0622 0837     		adds	r7, r7, #8
 18971              		.cfi_def_cfa_offset 8
 18972 0624 BD46     		mov	sp, r7
 18973              		.cfi_def_cfa_register 13
 18974              		@ sp needed
 18975 0626 80BD     		pop	{r7, pc}
 18976              		.cfi_endproc
 18977              	.LFE88:
 18978              		.size	memInit, .-memInit
 18979              		.section	.rodata
 18980 1f43 00       		.align	2
 18981              	.LC296:
 18982 1f44 55535230 		.ascii	"USR001\000"
 18982      303100
 18983              		.section	.text.memInit_SoftHandPro,"ax",%progbits
 18984              		.align	2
 18985              		.global	memInit_SoftHandPro
 18986              		.thumb
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 427


 18987              		.thumb_func
 18988              		.type	memInit_SoftHandPro, %function
 18989              	memInit_SoftHandPro:
 18990              	.LFB89:
2947:..\src/command_processing.c **** 
2948:..\src/command_processing.c **** //==============================================================================
2949:..\src/command_processing.c **** //                                                          MEMORY INIT SOFTHAND
2950:..\src/command_processing.c **** //==============================================================================
2951:..\src/command_processing.c **** void memInit_SoftHandPro(void)
2952:..\src/command_processing.c **** {
 18991              		.loc 1 2952 0
 18992              		.cfi_startproc
 18993              		@ args = 0, pretend = 0, frame = 8
 18994              		@ frame_needed = 1, uses_anonymous_args = 0
 18995              		@ link register save eliminated.
 18996 0000 80B4     		push	{r7}
 18997              		.cfi_def_cfa_offset 4
 18998              		.cfi_offset 7, -4
 18999 0002 83B0     		sub	sp, sp, #12
 19000              		.cfi_def_cfa_offset 16
 19001 0004 00AF     		add	r7, sp, #0
 19002              		.cfi_def_cfa_register 7
2953:..\src/command_processing.c ****     uint8 MOTOR_IDX = 0;
 19003              		.loc 1 2953 0
 19004 0006 0023     		movs	r3, #0
 19005 0008 FB70     		strb	r3, [r7, #3]
2954:..\src/command_processing.c ****     
2955:..\src/command_processing.c ****     //initialize memory settings ( Specific for SoftHand Pro device )    
2956:..\src/command_processing.c ****     g_mem.dev.right_left = LEFT_HAND;
 19006              		.loc 1 2956 0
 19007 000a 8B4B     		ldr	r3, .L764
 19008 000c 0122     		movs	r2, #1
 19009 000e 83F8A720 		strb	r2, [r3, #167]
2957:..\src/command_processing.c ****     g_mem.dev.dev_type = SOFTHAND_PRO;
 19010              		.loc 1 2957 0
 19011 0012 894B     		ldr	r3, .L764
 19012 0014 0022     		movs	r2, #0
 19013 0016 83F8AC20 		strb	r2, [r3, #172]
2958:..\src/command_processing.c ****     
2959:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].activ         = 1;
 19014              		.loc 1 2959 0
 19015 001a FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 19016 001c 8649     		ldr	r1, .L764
 19017 001e 1346     		mov	r3, r2
 19018 0020 DB00     		lsls	r3, r3, #3
 19019 0022 9B1A     		subs	r3, r3, r2
 19020 0024 1B01     		lsls	r3, r3, #4
 19021 0026 0B44     		add	r3, r3, r1
 19022 0028 E033     		adds	r3, r3, #224
 19023 002a 0122     		movs	r2, #1
 19024 002c 1A70     		strb	r2, [r3]
2960:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].input_mode    = INPUT_MODE_EXTERNAL;
 19025              		.loc 1 2960 0
 19026 002e FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 19027 0030 8149     		ldr	r1, .L764
 19028 0032 1346     		mov	r3, r2
 19029 0034 DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 428


 19030 0036 9B1A     		subs	r3, r3, r2
 19031 0038 1B01     		lsls	r3, r3, #4
 19032 003a 0B44     		add	r3, r3, r1
 19033 003c 03F58773 		add	r3, r3, #270
 19034 0040 0022     		movs	r2, #0
 19035 0042 1A70     		strb	r2, [r3]
2961:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].control_mode  = CONTROL_ANGLE;
 19036              		.loc 1 2961 0
 19037 0044 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 19038 0046 7C49     		ldr	r1, .L764
 19039 0048 1346     		mov	r3, r2
 19040 004a DB00     		lsls	r3, r3, #3
 19041 004c 9B1A     		subs	r3, r3, r2
 19042 004e 1B01     		lsls	r3, r3, #4
 19043 0050 0B44     		add	r3, r3, r1
 19044 0052 03F20F13 		addw	r3, r3, #271
 19045 0056 0022     		movs	r2, #0
 19046 0058 1A70     		strb	r2, [r3]
2962:..\src/command_processing.c ****     
2963:..\src/command_processing.c ****     // Get CS0 encoder line for RIGHT HAND and CS1 line for LEFT HAND as default
2964:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].encoder_line  = g_mem.dev.right_left;
 19047              		.loc 1 2964 0
 19048 005a FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 19049 005c 764B     		ldr	r3, .L764
 19050 005e 93F8A700 		ldrb	r0, [r3, #167]	@ zero_extendqisi2
 19051 0062 7549     		ldr	r1, .L764
 19052 0064 1346     		mov	r3, r2
 19053 0066 DB00     		lsls	r3, r3, #3
 19054 0068 9B1A     		subs	r3, r3, r2
 19055 006a 1B01     		lsls	r3, r3, #4
 19056 006c 0B44     		add	r3, r3, r1
 19057 006e 03F58873 		add	r3, r3, #272
 19058 0072 0246     		mov	r2, r0
 19059 0074 1A70     		strb	r2, [r3]
2965:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].pwm_rate_limiter = PWM_RATE_LIMITER_MAX;
 19060              		.loc 1 2965 0
 19061 0076 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 19062 0078 6F49     		ldr	r1, .L764
 19063 007a 1346     		mov	r3, r2
 19064 007c DB00     		lsls	r3, r3, #3
 19065 007e 9B1A     		subs	r3, r3, r2
 19066 0080 1B01     		lsls	r3, r3, #4
 19067 0082 0B44     		add	r3, r3, r1
 19068 0084 03F21113 		addw	r3, r3, #273
 19069 0088 0122     		movs	r2, #1
 19070 008a 1A70     		strb	r2, [r3]
2966:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].not_revers_motor_flag = TRUE;       // SoftHand not reversible motor
 19071              		.loc 1 2966 0
 19072 008c FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 19073 008e 6A49     		ldr	r1, .L764
 19074 0090 1346     		mov	r3, r2
 19075 0092 DB00     		lsls	r3, r3, #3
 19076 0094 9B1A     		subs	r3, r3, r2
 19077 0096 1B01     		lsls	r3, r3, #4
 19078 0098 0B44     		add	r3, r3, r1
 19079 009a 03F58973 		add	r3, r3, #274
 19080 009e 0122     		movs	r2, #1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 429


 19081 00a0 1A70     		strb	r2, [r3]
2967:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].pos_lim_inf = 0;
 19082              		.loc 1 2967 0
 19083 00a2 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 19084 00a4 6449     		ldr	r1, .L764
 19085 00a6 1346     		mov	r3, r2
 19086 00a8 DB00     		lsls	r3, r3, #3
 19087 00aa 9B1A     		subs	r3, r3, r2
 19088 00ac 1B01     		lsls	r3, r3, #4
 19089 00ae 0B44     		add	r3, r3, r1
 19090 00b0 E433     		adds	r3, r3, #228
 19091 00b2 0022     		movs	r2, #0
 19092 00b4 1A60     		str	r2, [r3]
2968:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].pos_lim_sup = (int32)16000 << g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_l
 19093              		.loc 1 2968 0
 19094 00b6 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 19095 00b8 F978     		ldrb	r1, [r7, #3]	@ zero_extendqisi2
 19096 00ba 5F48     		ldr	r0, .L764
 19097 00bc 0B46     		mov	r3, r1
 19098 00be DB00     		lsls	r3, r3, #3
 19099 00c0 5B1A     		subs	r3, r3, r1
 19100 00c2 1B01     		lsls	r3, r3, #4
 19101 00c4 0344     		add	r3, r3, r0
 19102 00c6 03F58873 		add	r3, r3, #272
 19103 00ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19104 00cc 1846     		mov	r0, r3
 19105 00ce 5A49     		ldr	r1, .L764
 19106 00d0 0346     		mov	r3, r0
 19107 00d2 5B00     		lsls	r3, r3, #1
 19108 00d4 0344     		add	r3, r3, r0
 19109 00d6 1B01     		lsls	r3, r3, #4
 19110 00d8 0B44     		add	r3, r3, r1
 19111 00da 03F29513 		addw	r3, r3, #405
 19112 00de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19113 00e0 1946     		mov	r1, r3
 19114 00e2 4FF47A53 		mov	r3, #16000
 19115 00e6 03FA01F1 		lsl	r1, r3, r1
 19116 00ea 5348     		ldr	r0, .L764
 19117 00ec 1346     		mov	r3, r2
 19118 00ee DB00     		lsls	r3, r3, #3
 19119 00f0 9B1A     		subs	r3, r3, r2
 19120 00f2 1B01     		lsls	r3, r3, #4
 19121 00f4 0344     		add	r3, r3, r0
 19122 00f6 E833     		adds	r3, r3, #232
 19123 00f8 1960     		str	r1, [r3]
 19124              	.LBB29:
2969:..\src/command_processing.c ****     
2970:..\src/command_processing.c ****     for (int i=0; i < N_ENCODER_LINE_MAX; i++) {
 19125              		.loc 1 2970 0
 19126 00fa 0023     		movs	r3, #0
 19127 00fc 7B60     		str	r3, [r7, #4]
 19128 00fe 2EE0     		b	.L762
 19129              	.L763:
2971:..\src/command_processing.c ****         // Initialize parameters for each encoder line (either for RIGHT and for LEFT hand)
2972:..\src/command_processing.c ****         g_mem.enc[i].double_encoder_on_off = TRUE;
 19130              		.loc 1 2972 0 discriminator 3
 19131 0100 4D49     		ldr	r1, .L764
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 430


 19132 0102 7A68     		ldr	r2, [r7, #4]
 19133 0104 1346     		mov	r3, r2
 19134 0106 5B00     		lsls	r3, r3, #1
 19135 0108 1344     		add	r3, r3, r2
 19136 010a 1B01     		lsls	r3, r3, #4
 19137 010c 0B44     		add	r3, r3, r1
 19138 010e 03F5D873 		add	r3, r3, #432
 19139 0112 0122     		movs	r2, #1
 19140 0114 1A70     		strb	r2, [r3]
2973:..\src/command_processing.c ****         g_mem.enc[i].gears_params[0] = SH_N1;     
 19141              		.loc 1 2973 0 discriminator 3
 19142 0116 4849     		ldr	r1, .L764
 19143 0118 7A68     		ldr	r2, [r7, #4]
 19144 011a 1346     		mov	r3, r2
 19145 011c 5B00     		lsls	r3, r3, #1
 19146 011e 1344     		add	r3, r3, r2
 19147 0120 1B01     		lsls	r3, r3, #4
 19148 0122 0B44     		add	r3, r3, r1
 19149 0124 03F2B513 		addw	r3, r3, #437
 19150 0128 2322     		movs	r2, #35
 19151 012a 1A70     		strb	r2, [r3]
2974:..\src/command_processing.c ****         g_mem.enc[i].gears_params[1] = SH_N2;     
 19152              		.loc 1 2974 0 discriminator 3
 19153 012c 4249     		ldr	r1, .L764
 19154 012e 7A68     		ldr	r2, [r7, #4]
 19155 0130 1346     		mov	r3, r2
 19156 0132 5B00     		lsls	r3, r3, #1
 19157 0134 1344     		add	r3, r3, r2
 19158 0136 1B01     		lsls	r3, r3, #4
 19159 0138 0B44     		add	r3, r3, r1
 19160 013a 03F5DB73 		add	r3, r3, #438
 19161 013e 0322     		movs	r2, #3
 19162 0140 1A70     		strb	r2, [r3]
2975:..\src/command_processing.c ****         g_mem.enc[i].gears_params[2] = SH_I1;  
 19163              		.loc 1 2975 0 discriminator 3
 19164 0142 3D49     		ldr	r1, .L764
 19165 0144 7A68     		ldr	r2, [r7, #4]
 19166 0146 1346     		mov	r3, r2
 19167 0148 5B00     		lsls	r3, r3, #1
 19168 014a 1344     		add	r3, r3, r2
 19169 014c 1B01     		lsls	r3, r3, #4
 19170 014e 0B44     		add	r3, r3, r1
 19171 0150 03F2B713 		addw	r3, r3, #439
 19172 0154 FF22     		movs	r2, #255
 19173 0156 1A70     		strb	r2, [r3]
2970:..\src/command_processing.c ****         // Initialize parameters for each encoder line (either for RIGHT and for LEFT hand)
 19174              		.loc 1 2970 0 discriminator 3
 19175 0158 7B68     		ldr	r3, [r7, #4]
 19176 015a 0133     		adds	r3, r3, #1
 19177 015c 7B60     		str	r3, [r7, #4]
 19178              	.L762:
2970:..\src/command_processing.c ****         // Initialize parameters for each encoder line (either for RIGHT and for LEFT hand)
 19179              		.loc 1 2970 0 is_stmt 0 discriminator 1
 19180 015e 7B68     		ldr	r3, [r7, #4]
 19181 0160 012B     		cmp	r3, #1
 19182 0162 CDDD     		ble	.L763
 19183              	.LBE29:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 431


2976:..\src/command_processing.c ****     }
2977:..\src/command_processing.c ****     
2978:..\src/command_processing.c ****     g_mem.emg.emg_max_value[0] = 1024;
 19184              		.loc 1 2978 0 is_stmt 1
 19185 0164 344B     		ldr	r3, .L764
 19186 0166 4FF48062 		mov	r2, #1024
 19187 016a C3F8F421 		str	r2, [r3, #500]
2979:..\src/command_processing.c ****     g_mem.emg.emg_max_value[1] = 1024;
 19188              		.loc 1 2979 0
 19189 016e 324B     		ldr	r3, .L764
 19190 0170 4FF48062 		mov	r2, #1024
 19191 0174 C3F8F821 		str	r2, [r3, #504]
2980:..\src/command_processing.c ****     g_mem.emg.emg_threshold[0] = 200;
 19192              		.loc 1 2980 0
 19193 0178 2F4B     		ldr	r3, .L764
 19194 017a C822     		movs	r2, #200
 19195 017c A3F8F021 		strh	r2, [r3, #496]	@ movhi
2981:..\src/command_processing.c ****     g_mem.emg.emg_threshold[1] = 200;
 19196              		.loc 1 2981 0
 19197 0180 2D4B     		ldr	r3, .L764
 19198 0182 C822     		movs	r2, #200
 19199 0184 A3F8F221 		strh	r2, [r3, #498]	@ movhi
2982:..\src/command_processing.c ****     g_mem.emg.emg_speed[0] = 100;
 19200              		.loc 1 2982 0
 19201 0188 2B4B     		ldr	r3, .L764
 19202 018a 6422     		movs	r2, #100
 19203 018c 83F8FC21 		strb	r2, [r3, #508]
2983:..\src/command_processing.c ****     g_mem.emg.emg_speed[1] = 100;
 19204              		.loc 1 2983 0
 19205 0190 294B     		ldr	r3, .L764
 19206 0192 6422     		movs	r2, #100
 19207 0194 83F8FD21 		strb	r2, [r3, #509]
2984:..\src/command_processing.c ****     g_mem.emg.emg_calibration_flag = 0;      // EMG calibration disabled by default
 19208              		.loc 1 2984 0
 19209 0198 274B     		ldr	r3, .L764
 19210 019a 0022     		movs	r2, #0
 19211 019c 83F8FE21 		strb	r2, [r3, #510]
2985:..\src/command_processing.c ****     g_mem.emg.switch_emg = 0;
 19212              		.loc 1 2985 0
 19213 01a0 254B     		ldr	r3, .L764
 19214 01a2 0022     		movs	r2, #0
 19215 01a4 83F8FF21 		strb	r2, [r3, #511]
2986:..\src/command_processing.c ****     
2987:..\src/command_processing.c ****     //Initialize rest position parameters  
2988:..\src/command_processing.c ****     g_mem.SH.rest_position_flag = FALSE;
 19216              		.loc 1 2988 0
 19217 01a8 234B     		ldr	r3, .L764
 19218 01aa 0022     		movs	r2, #0
 19219 01ac 83F8AC22 		strb	r2, [r3, #684]
2989:..\src/command_processing.c ****     g_mem.SH.rest_pos = (int32)7000 << g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].res[0]; // 56
 19220              		.loc 1 2989 0
 19221 01b0 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 19222 01b2 2149     		ldr	r1, .L764
 19223 01b4 1346     		mov	r3, r2
 19224 01b6 DB00     		lsls	r3, r3, #3
 19225 01b8 9B1A     		subs	r3, r3, r2
 19226 01ba 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 432


 19227 01bc 0B44     		add	r3, r3, r1
 19228 01be 03F58873 		add	r3, r3, #272
 19229 01c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19230 01c4 1946     		mov	r1, r3
 19231 01c6 1C4A     		ldr	r2, .L764
 19232 01c8 0B46     		mov	r3, r1
 19233 01ca 5B00     		lsls	r3, r3, #1
 19234 01cc 0B44     		add	r3, r3, r1
 19235 01ce 1B01     		lsls	r3, r3, #4
 19236 01d0 1344     		add	r3, r3, r2
 19237 01d2 03F29513 		addw	r3, r3, #405
 19238 01d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19239 01d8 1A46     		mov	r2, r3
 19240 01da 41F65833 		movw	r3, #7000
 19241 01de 9340     		lsls	r3, r3, r2
 19242 01e0 154A     		ldr	r2, .L764
 19243 01e2 C2F8A032 		str	r3, [r2, #672]
2990:..\src/command_processing.c **** 	g_mem.SH.rest_delay = 10;
 19244              		.loc 1 2990 0
 19245 01e6 144B     		ldr	r3, .L764
 19246 01e8 0A22     		movs	r2, #10
 19247 01ea C3F8A422 		str	r2, [r3, #676]
2991:..\src/command_processing.c ****     g_mem.SH.rest_vel = 10000;
 19248              		.loc 1 2991 0
 19249 01ee 124B     		ldr	r3, .L764
 19250 01f0 42F21072 		movw	r2, #10000
 19251 01f4 C3F8A822 		str	r2, [r3, #680]
2992:..\src/command_processing.c **** 	
2993:..\src/command_processing.c ****     g_mem.imu.read_imu_flag = FALSE;
 19252              		.loc 1 2993 0
 19253 01f8 0F4B     		ldr	r3, .L764
 19254 01fa 0022     		movs	r2, #0
 19255 01fc 83F80022 		strb	r2, [r3, #512]
2994:..\src/command_processing.c ****     g_mem.exp.read_exp_port_flag = EXP_NONE;       // 0 - None
 19256              		.loc 1 2994 0
 19257 0200 0D4B     		ldr	r3, .L764
 19258 0202 0022     		movs	r2, #0
 19259 0204 83F82622 		strb	r2, [r3, #550]
2995:..\src/command_processing.c ****     g_mem.exp.record_EMG_history_on_SD = FALSE;
 19260              		.loc 1 2995 0
 19261 0208 0B4B     		ldr	r3, .L764
 19262 020a 0022     		movs	r2, #0
 19263 020c 83F83422 		strb	r2, [r3, #564]
2996:..\src/command_processing.c ****     strcpy(g_mem.user[g_mem.dev.user_id].user_code_string, "USR001");
 19264              		.loc 1 2996 0
 19265 0210 094B     		ldr	r3, .L764
 19266 0212 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 19267 0216 1233     		adds	r3, r3, #18
 19268 0218 5B01     		lsls	r3, r3, #5
 19269 021a 074A     		ldr	r2, .L764
 19270 021c 1344     		add	r3, r3, r2
 19271 021e 074A     		ldr	r2, .L764+4
 19272 0220 1068     		ldr	r0, [r2]	@ unaligned
 19273 0222 1860     		str	r0, [r3]	@ unaligned
 19274 0224 9188     		ldrh	r1, [r2, #4]	@ unaligned
 19275 0226 9279     		ldrb	r2, [r2, #6]
 19276 0228 9980     		strh	r1, [r3, #4]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 433


 19277 022a 9A71     		strb	r2, [r3, #6]
2997:..\src/command_processing.c **** }
 19278              		.loc 1 2997 0
 19279 022c 00BF     		nop
 19280 022e 0C37     		adds	r7, r7, #12
 19281              		.cfi_def_cfa_offset 4
 19282 0230 BD46     		mov	sp, r7
 19283              		.cfi_def_cfa_register 13
 19284              		@ sp needed
 19285 0232 80BC     		pop	{r7}
 19286              		.cfi_restore 7
 19287              		.cfi_def_cfa_offset 0
 19288 0234 7047     		bx	lr
 19289              	.L765:
 19290 0236 00BF     		.align	2
 19291              	.L764:
 19292 0238 00000000 		.word	g_mem
 19293 023c 441F0000 		.word	.LC296
 19294              		.cfi_endproc
 19295              	.LFE89:
 19296              		.size	memInit_SoftHandPro, .-memInit_SoftHandPro
 19297              		.section	.text.memInit_Master,"ax",%progbits
 19298              		.align	2
 19299              		.global	memInit_Master
 19300              		.thumb
 19301              		.thumb_func
 19302              		.type	memInit_Master, %function
 19303              	memInit_Master:
 19304              	.LFB90:
2998:..\src/command_processing.c **** 
2999:..\src/command_processing.c **** //==============================================================================
3000:..\src/command_processing.c **** //                                                            MEMORY INIT MASTER
3001:..\src/command_processing.c **** //==============================================================================
3002:..\src/command_processing.c **** void memInit_Master(void)
3003:..\src/command_processing.c **** {
 19305              		.loc 1 3003 0
 19306              		.cfi_startproc
 19307              		@ args = 0, pretend = 0, frame = 0
 19308              		@ frame_needed = 1, uses_anonymous_args = 0
 19309              		@ link register save eliminated.
 19310 0000 80B4     		push	{r7}
 19311              		.cfi_def_cfa_offset 4
 19312              		.cfi_offset 7, -4
 19313 0002 00AF     		add	r7, sp, #0
 19314              		.cfi_def_cfa_register 7
3004:..\src/command_processing.c ****     g_mem.dev.id                = 2;
 19315              		.loc 1 3004 0
 19316 0004 074B     		ldr	r3, .L767
 19317 0006 0222     		movs	r2, #2
 19318 0008 83F8A020 		strb	r2, [r3, #160]
3005:..\src/command_processing.c ****     
3006:..\src/command_processing.c ****     // MS STRUCT
3007:..\src/command_processing.c ****     g_mem.MS.slave_ID = 1;
 19319              		.loc 1 3007 0
 19320 000c 054B     		ldr	r3, .L767
 19321 000e 0122     		movs	r2, #1
 19322 0010 83F8C122 		strb	r2, [r3, #705]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 434


3008:..\src/command_processing.c ****     g_mem.MS.slave_comm_active = FALSE;
 19323              		.loc 1 3008 0
 19324 0014 034B     		ldr	r3, .L767
 19325 0016 0022     		movs	r2, #0
 19326 0018 83F8C022 		strb	r2, [r3, #704]
3009:..\src/command_processing.c **** }
 19327              		.loc 1 3009 0
 19328 001c 00BF     		nop
 19329 001e BD46     		mov	sp, r7
 19330              		.cfi_def_cfa_register 13
 19331              		@ sp needed
 19332 0020 80BC     		pop	{r7}
 19333              		.cfi_restore 7
 19334              		.cfi_def_cfa_offset 0
 19335 0022 7047     		bx	lr
 19336              	.L768:
 19337              		.align	2
 19338              	.L767:
 19339 0024 00000000 		.word	g_mem
 19340              		.cfi_endproc
 19341              	.LFE90:
 19342              		.size	memInit_Master, .-memInit_Master
 19343              		.section	.text.memInit_AirChambersFb,"ax",%progbits
 19344              		.align	2
 19345              		.global	memInit_AirChambersFb
 19346              		.thumb
 19347              		.thumb_func
 19348              		.type	memInit_AirChambersFb, %function
 19349              	memInit_AirChambersFb:
 19350              	.LFB91:
3010:..\src/command_processing.c **** 
3011:..\src/command_processing.c **** //==============================================================================
3012:..\src/command_processing.c **** //                                                   MEMORY INIT AIR CHAMBERS FB
3013:..\src/command_processing.c **** //==============================================================================
3014:..\src/command_processing.c **** void memInit_AirChambersFb(void)
3015:..\src/command_processing.c **** {
 19351              		.loc 1 3015 0
 19352              		.cfi_startproc
 19353              		@ args = 0, pretend = 0, frame = 0
 19354              		@ frame_needed = 1, uses_anonymous_args = 0
 19355              		@ link register save eliminated.
 19356 0000 80B4     		push	{r7}
 19357              		.cfi_def_cfa_offset 4
 19358              		.cfi_offset 7, -4
 19359 0002 00AF     		add	r7, sp, #0
 19360              		.cfi_def_cfa_register 7
3016:..\src/command_processing.c ****     // Default configuration with Air Chambers Haptic feedback
3017:..\src/command_processing.c ****     g_mem.dev.dev_type          = AIR_CHAMBERS_FB;
 19361              		.loc 1 3017 0
 19362 0004 1A4B     		ldr	r3, .L770
 19363 0006 0222     		movs	r2, #2
 19364 0008 83F8AC20 		strb	r2, [r3, #172]
3018:..\src/command_processing.c ****     
3019:..\src/command_processing.c ****     g_mem.motor[0].control_mode  = CONTROL_PWM;
 19365              		.loc 1 3019 0
 19366 000c 184B     		ldr	r3, .L770
 19367 000e 0122     		movs	r2, #1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 435


 19368 0010 83F80F21 		strb	r2, [r3, #271]
3020:..\src/command_processing.c ****     
3021:..\src/command_processing.c ****     // Drive slave with reference generated on second motor index
3022:..\src/command_processing.c ****     // Default slave configuration for haptic feedback with SoftHand 2.0.3            
3023:..\src/command_processing.c ****     g_mem.motor[1].input_mode = INPUT_MODE_EMG_FCFS;
 19369              		.loc 1 3023 0
 19370 0014 164B     		ldr	r3, .L770
 19371 0016 0422     		movs	r2, #4
 19372 0018 83F87E21 		strb	r2, [r3, #382]
3024:..\src/command_processing.c ****     g_mem.motor[1].pos_lim_inf = 0;
 19373              		.loc 1 3024 0
 19374 001c 144B     		ldr	r3, .L770
 19375 001e 0022     		movs	r2, #0
 19376 0020 C3F85421 		str	r2, [r3, #340]
3025:..\src/command_processing.c ****     g_mem.motor[1].pos_lim_sup = (int32)22000 << g_mem.enc[g_mem.motor[1].encoder_line].res[0];
 19377              		.loc 1 3025 0
 19378 0024 124B     		ldr	r3, .L770
 19379 0026 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 19380 002a 1946     		mov	r1, r3
 19381 002c 104A     		ldr	r2, .L770
 19382 002e 0B46     		mov	r3, r1
 19383 0030 5B00     		lsls	r3, r3, #1
 19384 0032 0B44     		add	r3, r3, r1
 19385 0034 1B01     		lsls	r3, r3, #4
 19386 0036 1344     		add	r3, r3, r2
 19387 0038 03F29513 		addw	r3, r3, #405
 19388 003c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19389 003e 1A46     		mov	r2, r3
 19390 0040 45F2F053 		movw	r3, #22000
 19391 0044 9340     		lsls	r3, r3, r2
 19392 0046 0A4A     		ldr	r2, .L770
 19393 0048 C2F85831 		str	r3, [r2, #344]
3026:..\src/command_processing.c ****     
3027:..\src/command_processing.c ****     // FB STRUCT
3028:..\src/command_processing.c ****     g_mem.FB.max_residual_current = 450;
 19394              		.loc 1 3028 0
 19395 004c 084B     		ldr	r3, .L770
 19396 004e 4FF4E172 		mov	r2, #450
 19397 0052 C3F8D022 		str	r2, [r3, #720]
3029:..\src/command_processing.c ****     g_mem.FB.maximum_pressure_kPa = 25.0;
 19398              		.loc 1 3029 0
 19399 0056 064B     		ldr	r3, .L770
 19400 0058 064A     		ldr	r2, .L770+4
 19401 005a C3F8D422 		str	r2, [r3, #724]	@ float
3030:..\src/command_processing.c ****     g_mem.FB.prop_err_fb_gain = 1.0;
 19402              		.loc 1 3030 0
 19403 005e 044B     		ldr	r3, .L770
 19404 0060 4FF07E52 		mov	r2, #1065353216
 19405 0064 C3F8D822 		str	r2, [r3, #728]	@ float
3031:..\src/command_processing.c **** }
 19406              		.loc 1 3031 0
 19407 0068 00BF     		nop
 19408 006a BD46     		mov	sp, r7
 19409              		.cfi_def_cfa_register 13
 19410              		@ sp needed
 19411 006c 80BC     		pop	{r7}
 19412              		.cfi_restore 7
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 436


 19413              		.cfi_def_cfa_offset 0
 19414 006e 7047     		bx	lr
 19415              	.L771:
 19416              		.align	2
 19417              	.L770:
 19418 0070 00000000 		.word	g_mem
 19419 0074 0000C841 		.word	1103626240
 19420              		.cfi_endproc
 19421              	.LFE91:
 19422              		.size	memInit_AirChambersFb, .-memInit_AirChambersFb
 19423              		.section	.text.memInit_OtbkActWristMs,"ax",%progbits
 19424              		.align	2
 19425              		.global	memInit_OtbkActWristMs
 19426              		.thumb
 19427              		.thumb_func
 19428              		.type	memInit_OtbkActWristMs, %function
 19429              	memInit_OtbkActWristMs:
 19430              	.LFB92:
3032:..\src/command_processing.c **** 
3033:..\src/command_processing.c **** //==============================================================================
3034:..\src/command_processing.c **** //                                   MEMORY INIT OTTOBOCK ACTIVE WRIST MASTER FB
3035:..\src/command_processing.c **** //==============================================================================
3036:..\src/command_processing.c **** void memInit_OtbkActWristMs(void)
3037:..\src/command_processing.c **** {
 19431              		.loc 1 3037 0
 19432              		.cfi_startproc
 19433              		@ args = 0, pretend = 0, frame = 0
 19434              		@ frame_needed = 1, uses_anonymous_args = 0
 19435              		@ link register save eliminated.
 19436 0000 80B4     		push	{r7}
 19437              		.cfi_def_cfa_offset 4
 19438              		.cfi_offset 7, -4
 19439 0002 00AF     		add	r7, sp, #0
 19440              		.cfi_def_cfa_register 7
3038:..\src/command_processing.c ****     // Default configuration with Ottobock Active Wrist feedback
3039:..\src/command_processing.c ****     g_mem.dev.dev_type  = OTBK_ACT_WRIST_MS;
 19441              		.loc 1 3039 0
 19442 0004 294B     		ldr	r3, .L773
 19443 0006 0322     		movs	r2, #3
 19444 0008 83F8AC20 		strb	r2, [r3, #172]
3040:..\src/command_processing.c ****     g_mem.dev.right_left = LEFT_HAND;
 19445              		.loc 1 3040 0
 19446 000c 274B     		ldr	r3, .L773
 19447 000e 0122     		movs	r2, #1
 19448 0010 83F8A720 		strb	r2, [r3, #167]
3041:..\src/command_processing.c ****     
3042:..\src/command_processing.c ****     g_mem.motor[0].control_mode = CONTROL_PWM;
 19449              		.loc 1 3042 0
 19450 0014 254B     		ldr	r3, .L773
 19451 0016 0122     		movs	r2, #1
 19452 0018 83F80F21 		strb	r2, [r3, #271]
3043:..\src/command_processing.c ****     g_mem.motor[0].pwm_rate_limiter = 100;
 19453              		.loc 1 3043 0
 19454 001c 234B     		ldr	r3, .L773
 19455 001e 6422     		movs	r2, #100
 19456 0020 83F81121 		strb	r2, [r3, #273]
3044:..\src/command_processing.c ****     g_mem.motor[0].not_revers_motor_flag = FALSE;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 437


 19457              		.loc 1 3044 0
 19458 0024 214B     		ldr	r3, .L773
 19459 0026 0022     		movs	r2, #0
 19460 0028 83F81221 		strb	r2, [r3, #274]
3045:..\src/command_processing.c ****     
3046:..\src/command_processing.c ****     // Drive slave with reference generated on second motor index
3047:..\src/command_processing.c ****     // Default slave configuration for SoftHand 3.0            
3048:..\src/command_processing.c ****     g_mem.motor[1].input_mode = INPUT_MODE_EMG_FCFS;
 19461              		.loc 1 3048 0
 19462 002c 1F4B     		ldr	r3, .L773
 19463 002e 0422     		movs	r2, #4
 19464 0030 83F87E21 		strb	r2, [r3, #382]
3049:..\src/command_processing.c ****     g_mem.motor[1].encoder_line  = g_mem.dev.right_left;
 19465              		.loc 1 3049 0
 19466 0034 1D4B     		ldr	r3, .L773
 19467 0036 93F8A720 		ldrb	r2, [r3, #167]	@ zero_extendqisi2
 19468 003a 1C4B     		ldr	r3, .L773
 19469 003c 83F88021 		strb	r2, [r3, #384]
3050:..\src/command_processing.c ****     g_mem.motor[1].pwm_rate_limiter = PWM_RATE_LIMITER_MAX;
 19470              		.loc 1 3050 0
 19471 0040 1A4B     		ldr	r3, .L773
 19472 0042 0122     		movs	r2, #1
 19473 0044 83F88121 		strb	r2, [r3, #385]
3051:..\src/command_processing.c ****     g_mem.motor[1].not_revers_motor_flag = FALSE;       // False, because it is important only to c
 19474              		.loc 1 3051 0
 19475 0048 184B     		ldr	r3, .L773
 19476 004a 0022     		movs	r2, #0
 19477 004c 83F88221 		strb	r2, [r3, #386]
3052:..\src/command_processing.c ****     g_mem.motor[1].pos_lim_inf = 0;
 19478              		.loc 1 3052 0
 19479 0050 164B     		ldr	r3, .L773
 19480 0052 0022     		movs	r2, #0
 19481 0054 C3F85421 		str	r2, [r3, #340]
3053:..\src/command_processing.c ****     g_mem.motor[1].pos_lim_sup = (int32)16000 << g_mem.enc[g_mem.motor[1].encoder_line].res[0];
 19482              		.loc 1 3053 0
 19483 0058 144B     		ldr	r3, .L773
 19484 005a 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 19485 005e 1946     		mov	r1, r3
 19486 0060 124A     		ldr	r2, .L773
 19487 0062 0B46     		mov	r3, r1
 19488 0064 5B00     		lsls	r3, r3, #1
 19489 0066 0B44     		add	r3, r3, r1
 19490 0068 1B01     		lsls	r3, r3, #4
 19491 006a 1344     		add	r3, r3, r2
 19492 006c 03F29513 		addw	r3, r3, #405
 19493 0070 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19494 0072 1A46     		mov	r2, r3
 19495 0074 4FF47A53 		mov	r3, #16000
 19496 0078 9340     		lsls	r3, r3, r2
 19497 007a 0C4A     		ldr	r2, .L773
 19498 007c C2F85831 		str	r3, [r2, #344]
3054:..\src/command_processing.c ****     
3055:..\src/command_processing.c ****     // WR STRUCT
3056:..\src/command_processing.c ****     g_mem.WR.activation_mode = 0;                // Default Fast:wrist/syn2, Slow:hand/syn1
 19499              		.loc 1 3056 0
 19500 0080 0A4B     		ldr	r3, .L773
 19501 0082 0022     		movs	r2, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 438


 19502 0084 83F8E022 		strb	r2, [r3, #736]
3057:..\src/command_processing.c ****     g_mem.WR.fast_act_threshold[0] = 800;
 19503              		.loc 1 3057 0
 19504 0088 084B     		ldr	r3, .L773
 19505 008a 4FF44872 		mov	r2, #800
 19506 008e A3F8E222 		strh	r2, [r3, #738]	@ movhi
3058:..\src/command_processing.c ****     g_mem.WR.fast_act_threshold[1] = 800;
 19507              		.loc 1 3058 0
 19508 0092 064B     		ldr	r3, .L773
 19509 0094 4FF44872 		mov	r2, #800
 19510 0098 A3F8E422 		strh	r2, [r3, #740]	@ movhi
3059:..\src/command_processing.c ****     g_mem.WR.wrist_direction_association = 0;   // Default Close:CW, Open:CCW
 19511              		.loc 1 3059 0
 19512 009c 034B     		ldr	r3, .L773
 19513 009e 0022     		movs	r2, #0
 19514 00a0 83F8E622 		strb	r2, [r3, #742]
3060:..\src/command_processing.c **** }
 19515              		.loc 1 3060 0
 19516 00a4 00BF     		nop
 19517 00a6 BD46     		mov	sp, r7
 19518              		.cfi_def_cfa_register 13
 19519              		@ sp needed
 19520 00a8 80BC     		pop	{r7}
 19521              		.cfi_restore 7
 19522              		.cfi_def_cfa_offset 0
 19523 00aa 7047     		bx	lr
 19524              	.L774:
 19525              		.align	2
 19526              	.L773:
 19527 00ac 00000000 		.word	g_mem
 19528              		.cfi_endproc
 19529              	.LFE92:
 19530              		.size	memInit_OtbkActWristMs, .-memInit_OtbkActWristMs
 19531              		.section	.text.cmd_get_measurements,"ax",%progbits
 19532              		.align	2
 19533              		.global	cmd_get_measurements
 19534              		.thumb
 19535              		.thumb_func
 19536              		.type	cmd_get_measurements, %function
 19537              	cmd_get_measurements:
 19538              	.LFB93:
3061:..\src/command_processing.c **** 
3062:..\src/command_processing.c **** //==============================================================================
3063:..\src/command_processing.c **** //                                                    ROUTINE INTERRUPT FUNCTION
3064:..\src/command_processing.c **** //==============================================================================
3065:..\src/command_processing.c **** /**
3066:..\src/command_processing.c **** * Bunch of functions used on request from UART communication
3067:..\src/command_processing.c **** **/
3068:..\src/command_processing.c **** 
3069:..\src/command_processing.c **** void cmd_get_measurements(){
 19539              		.loc 1 3069 0
 19540              		.cfi_startproc
 19541              		@ args = 0, pretend = 0, frame = 16
 19542              		@ frame_needed = 1, uses_anonymous_args = 0
 19543 0000 90B5     		push	{r4, r7, lr}
 19544              		.cfi_def_cfa_offset 12
 19545              		.cfi_offset 4, -12
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 439


 19546              		.cfi_offset 7, -8
 19547              		.cfi_offset 14, -4
 19548 0002 85B0     		sub	sp, sp, #20
 19549              		.cfi_def_cfa_offset 32
 19550 0004 00AF     		add	r7, sp, #0
 19551              		.cfi_def_cfa_register 7
3070:..\src/command_processing.c ****  
3071:..\src/command_processing.c ****     uint8 CYDATA index;
3072:..\src/command_processing.c ****     int16 aux_int16;
3073:..\src/command_processing.c ****     // Packet: header + measure(int16) + crc
3074:..\src/command_processing.c ****     
3075:..\src/command_processing.c ****     uint8 packet_data[8]; 
3076:..\src/command_processing.c ****     
3077:..\src/command_processing.c ****     //Header package
3078:..\src/command_processing.c ****     packet_data[0] = CMD_GET_MEASUREMENTS;   
 19552              		.loc 1 3078 0
 19553 0006 8423     		movs	r3, #132
 19554 0008 3B71     		strb	r3, [r7, #4]
3079:..\src/command_processing.c ****     
3080:..\src/command_processing.c ****     for (index = NUM_OF_SENSORS; index--;) {
 19555              		.loc 1 3080 0
 19556 000a 0323     		movs	r3, #3
 19557 000c FB73     		strb	r3, [r7, #15]
 19558 000e 38E0     		b	.L776
 19559              	.L777:
3081:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].pos[index] >> g_mem.enc[g_mem.mo
 19560              		.loc 1 3081 0
 19561 0010 434B     		ldr	r3, .L779
 19562 0012 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 19563 0016 1A46     		mov	r2, r3
 19564 0018 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 19565 001a 4248     		ldr	r0, .L779+4
 19566 001c 1346     		mov	r3, r2
 19567 001e 5B00     		lsls	r3, r3, #1
 19568 0020 1344     		add	r3, r3, r2
 19569 0022 9B00     		lsls	r3, r3, #2
 19570 0024 1344     		add	r3, r3, r2
 19571 0026 0B44     		add	r3, r3, r1
 19572 0028 50F82320 		ldr	r2, [r0, r3, lsl #2]
 19573 002c 3C4B     		ldr	r3, .L779
 19574 002e 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 19575 0032 1C46     		mov	r4, r3
 19576 0034 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 19577 0036 3A48     		ldr	r0, .L779
 19578 0038 2346     		mov	r3, r4
 19579 003a 5B00     		lsls	r3, r3, #1
 19580 003c 2344     		add	r3, r3, r4
 19581 003e 1B01     		lsls	r3, r3, #4
 19582 0040 0344     		add	r3, r3, r0
 19583 0042 0B44     		add	r3, r3, r1
 19584 0044 03F29513 		addw	r3, r3, #405
 19585 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19586 004a 42FA03F3 		asr	r3, r2, r3
 19587 004e 1BB2     		sxth	r3, r3
 19588 0050 BB81     		strh	r3, [r7, #12]	@ movhi
3082:..\src/command_processing.c ****         packet_data[(index << 1) + 2] = ((char*)(&aux_int16))[0];
 19589              		.loc 1 3082 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 440


 19590 0052 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 19591 0054 5B00     		lsls	r3, r3, #1
 19592 0056 0233     		adds	r3, r3, #2
 19593 0058 07F10C02 		add	r2, r7, #12
 19594 005c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 19595 005e 07F11001 		add	r1, r7, #16
 19596 0062 0B44     		add	r3, r3, r1
 19597 0064 03F80C2C 		strb	r2, [r3, #-12]
3083:..\src/command_processing.c ****         packet_data[(index << 1) + 1] = ((char*)(&aux_int16))[1];
 19598              		.loc 1 3083 0
 19599 0068 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 19600 006a 5B00     		lsls	r3, r3, #1
 19601 006c 5A1C     		adds	r2, r3, #1
 19602 006e 07F10C03 		add	r3, r7, #12
 19603 0072 0133     		adds	r3, r3, #1
 19604 0074 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 19605 0076 07F11003 		add	r3, r7, #16
 19606 007a 1344     		add	r3, r3, r2
 19607 007c 0A46     		mov	r2, r1
 19608 007e 03F80C2C 		strb	r2, [r3, #-12]
 19609              	.L776:
3080:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].pos[index] >> g_mem.enc[g_mem.mo
 19610              		.loc 1 3080 0 discriminator 1
 19611 0082 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 19612 0084 5A1E     		subs	r2, r3, #1
 19613 0086 FA73     		strb	r2, [r7, #15]
 19614 0088 002B     		cmp	r3, #0
 19615 008a C1D1     		bne	.L777
3084:..\src/command_processing.c ****     }
3085:..\src/command_processing.c **** 
3086:..\src/command_processing.c ****     if (g_mem.dev.use_2nd_motor_flag == TRUE){
 19616              		.loc 1 3086 0
 19617 008c 244B     		ldr	r3, .L779
 19618 008e 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 19619 0092 012B     		cmp	r3, #1
 19620 0094 34D1     		bne	.L778
3087:..\src/command_processing.c ****         //Overwrite only second measure with first encoder on second motor line (just to have a mea
3088:..\src/command_processing.c ****         index = 1;
 19621              		.loc 1 3088 0
 19622 0096 0123     		movs	r3, #1
 19623 0098 FB73     		strb	r3, [r7, #15]
3089:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[1].encoder_line].pos[0] >> g_mem.enc[g_mem.motor[
 19624              		.loc 1 3089 0
 19625 009a 214B     		ldr	r3, .L779
 19626 009c 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 19627 00a0 1946     		mov	r1, r3
 19628 00a2 204A     		ldr	r2, .L779+4
 19629 00a4 3423     		movs	r3, #52
 19630 00a6 03FB01F3 		mul	r3, r3, r1
 19631 00aa 1344     		add	r3, r3, r2
 19632 00ac 1A68     		ldr	r2, [r3]
 19633 00ae 1C4B     		ldr	r3, .L779
 19634 00b0 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 19635 00b4 1846     		mov	r0, r3
 19636 00b6 1A49     		ldr	r1, .L779
 19637 00b8 0346     		mov	r3, r0
 19638 00ba 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 441


 19639 00bc 0344     		add	r3, r3, r0
 19640 00be 1B01     		lsls	r3, r3, #4
 19641 00c0 0B44     		add	r3, r3, r1
 19642 00c2 03F29513 		addw	r3, r3, #405
 19643 00c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19644 00c8 42FA03F3 		asr	r3, r2, r3
 19645 00cc 1BB2     		sxth	r3, r3
 19646 00ce BB81     		strh	r3, [r7, #12]	@ movhi
3090:..\src/command_processing.c ****         packet_data[(index << 1) + 2] = ((char*)(&aux_int16))[0];
 19647              		.loc 1 3090 0
 19648 00d0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 19649 00d2 5B00     		lsls	r3, r3, #1
 19650 00d4 0233     		adds	r3, r3, #2
 19651 00d6 07F10C02 		add	r2, r7, #12
 19652 00da 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 19653 00dc 07F11001 		add	r1, r7, #16
 19654 00e0 0B44     		add	r3, r3, r1
 19655 00e2 03F80C2C 		strb	r2, [r3, #-12]
3091:..\src/command_processing.c ****         packet_data[(index << 1) + 1] = ((char*)(&aux_int16))[1];
 19656              		.loc 1 3091 0
 19657 00e6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 19658 00e8 5B00     		lsls	r3, r3, #1
 19659 00ea 5A1C     		adds	r2, r3, #1
 19660 00ec 07F10C03 		add	r3, r7, #12
 19661 00f0 0133     		adds	r3, r3, #1
 19662 00f2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 19663 00f4 07F11003 		add	r3, r7, #16
 19664 00f8 1344     		add	r3, r3, r2
 19665 00fa 0A46     		mov	r2, r1
 19666 00fc 03F80C2C 		strb	r2, [r3, #-12]
 19667              	.L778:
3092:..\src/command_processing.c ****     }
3093:..\src/command_processing.c ****     
3094:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3095:..\src/command_processing.c **** 
3096:..\src/command_processing.c ****     packet_data[7] = LCRChecksum (packet_data, 7);
 19668              		.loc 1 3096 0
 19669 0100 3B1D     		adds	r3, r7, #4
 19670 0102 0721     		movs	r1, #7
 19671 0104 1846     		mov	r0, r3
 19672 0106 FFF7FEFF 		bl	LCRChecksum
 19673 010a 0346     		mov	r3, r0
 19674 010c FB72     		strb	r3, [r7, #11]
3097:..\src/command_processing.c **** 
3098:..\src/command_processing.c ****     commWrite(packet_data, 8);
 19675              		.loc 1 3098 0
 19676 010e 3B1D     		adds	r3, r7, #4
 19677 0110 0821     		movs	r1, #8
 19678 0112 1846     		mov	r0, r3
 19679 0114 FFF7FEFF 		bl	commWrite
3099:..\src/command_processing.c ****    
3100:..\src/command_processing.c **** }
 19680              		.loc 1 3100 0
 19681 0118 00BF     		nop
 19682 011a 1437     		adds	r7, r7, #20
 19683              		.cfi_def_cfa_offset 12
 19684 011c BD46     		mov	sp, r7
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 442


 19685              		.cfi_def_cfa_register 13
 19686              		@ sp needed
 19687 011e 90BD     		pop	{r4, r7, pc}
 19688              	.L780:
 19689              		.align	2
 19690              	.L779:
 19691 0120 00000000 		.word	g_mem
 19692 0124 00000000 		.word	g_measOld
 19693              		.cfi_endproc
 19694              	.LFE93:
 19695              		.size	cmd_get_measurements, .-cmd_get_measurements
 19696              		.section	.text.cmd_get_velocities,"ax",%progbits
 19697              		.align	2
 19698              		.global	cmd_get_velocities
 19699              		.thumb
 19700              		.thumb_func
 19701              		.type	cmd_get_velocities, %function
 19702              	cmd_get_velocities:
 19703              	.LFB94:
3101:..\src/command_processing.c **** 
3102:..\src/command_processing.c **** void cmd_get_velocities(){
 19704              		.loc 1 3102 0
 19705              		.cfi_startproc
 19706              		@ args = 0, pretend = 0, frame = 16
 19707              		@ frame_needed = 1, uses_anonymous_args = 0
 19708 0000 90B5     		push	{r4, r7, lr}
 19709              		.cfi_def_cfa_offset 12
 19710              		.cfi_offset 4, -12
 19711              		.cfi_offset 7, -8
 19712              		.cfi_offset 14, -4
 19713 0002 85B0     		sub	sp, sp, #20
 19714              		.cfi_def_cfa_offset 32
 19715 0004 00AF     		add	r7, sp, #0
 19716              		.cfi_def_cfa_register 7
3103:..\src/command_processing.c ****  
3104:..\src/command_processing.c ****     uint8 CYDATA index;
3105:..\src/command_processing.c ****     int16 aux_int16;
3106:..\src/command_processing.c ****    
3107:..\src/command_processing.c ****     // Packet: header + measure(int16) + crc
3108:..\src/command_processing.c ****     
3109:..\src/command_processing.c ****     uint8 packet_data[8]; 
3110:..\src/command_processing.c ****     
3111:..\src/command_processing.c ****     //Header package
3112:..\src/command_processing.c ****     packet_data[0] = CMD_GET_VELOCITIES;
 19717              		.loc 1 3112 0
 19718 0006 8923     		movs	r3, #137
 19719 0008 3B71     		strb	r3, [r7, #4]
3113:..\src/command_processing.c ****     
3114:..\src/command_processing.c ****     for (index = NUM_OF_SENSORS; index--;) {
 19720              		.loc 1 3114 0
 19721 000a 0323     		movs	r3, #3
 19722 000c FB73     		strb	r3, [r7, #15]
 19723 000e 3AE0     		b	.L782
 19724              	.L783:
3115:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].vel[index] >> g_mem.enc[g_mem.mo
 19725              		.loc 1 3115 0
 19726 0010 274B     		ldr	r3, .L784
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 443


 19727 0012 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 19728 0016 1A46     		mov	r2, r3
 19729 0018 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 19730 001a 2648     		ldr	r0, .L784+4
 19731 001c 1346     		mov	r3, r2
 19732 001e 5B00     		lsls	r3, r3, #1
 19733 0020 1344     		add	r3, r3, r2
 19734 0022 9B00     		lsls	r3, r3, #2
 19735 0024 1344     		add	r3, r3, r2
 19736 0026 0B44     		add	r3, r3, r1
 19737 0028 0633     		adds	r3, r3, #6
 19738 002a 9B00     		lsls	r3, r3, #2
 19739 002c 0344     		add	r3, r3, r0
 19740 002e 5A68     		ldr	r2, [r3, #4]
 19741 0030 1F4B     		ldr	r3, .L784
 19742 0032 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 19743 0036 1C46     		mov	r4, r3
 19744 0038 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 19745 003a 1D48     		ldr	r0, .L784
 19746 003c 2346     		mov	r3, r4
 19747 003e 5B00     		lsls	r3, r3, #1
 19748 0040 2344     		add	r3, r3, r4
 19749 0042 1B01     		lsls	r3, r3, #4
 19750 0044 0344     		add	r3, r3, r0
 19751 0046 0B44     		add	r3, r3, r1
 19752 0048 03F29513 		addw	r3, r3, #405
 19753 004c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19754 004e 42FA03F3 		asr	r3, r2, r3
 19755 0052 1BB2     		sxth	r3, r3
 19756 0054 BB81     		strh	r3, [r7, #12]	@ movhi
3116:..\src/command_processing.c ****         packet_data[(index << 1) + 2] = ((char*)(&aux_int16))[0];
 19757              		.loc 1 3116 0
 19758 0056 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 19759 0058 5B00     		lsls	r3, r3, #1
 19760 005a 0233     		adds	r3, r3, #2
 19761 005c 07F10C02 		add	r2, r7, #12
 19762 0060 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 19763 0062 07F11001 		add	r1, r7, #16
 19764 0066 0B44     		add	r3, r3, r1
 19765 0068 03F80C2C 		strb	r2, [r3, #-12]
3117:..\src/command_processing.c ****         packet_data[(index << 1) + 1] = ((char*)(&aux_int16))[1];
 19766              		.loc 1 3117 0
 19767 006c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 19768 006e 5B00     		lsls	r3, r3, #1
 19769 0070 5A1C     		adds	r2, r3, #1
 19770 0072 07F10C03 		add	r3, r7, #12
 19771 0076 0133     		adds	r3, r3, #1
 19772 0078 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 19773 007a 07F11003 		add	r3, r7, #16
 19774 007e 1344     		add	r3, r3, r2
 19775 0080 0A46     		mov	r2, r1
 19776 0082 03F80C2C 		strb	r2, [r3, #-12]
 19777              	.L782:
3114:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].vel[index] >> g_mem.enc[g_mem.mo
 19778              		.loc 1 3114 0 discriminator 1
 19779 0086 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 19780 0088 5A1E     		subs	r2, r3, #1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 444


 19781 008a FA73     		strb	r2, [r7, #15]
 19782 008c 002B     		cmp	r3, #0
 19783 008e BFD1     		bne	.L783
3118:..\src/command_processing.c ****     }
3119:..\src/command_processing.c ****             
3120:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3121:..\src/command_processing.c **** 
3122:..\src/command_processing.c ****     packet_data[7] = LCRChecksum (packet_data, 7);
 19784              		.loc 1 3122 0
 19785 0090 3B1D     		adds	r3, r7, #4
 19786 0092 0721     		movs	r1, #7
 19787 0094 1846     		mov	r0, r3
 19788 0096 FFF7FEFF 		bl	LCRChecksum
 19789 009a 0346     		mov	r3, r0
 19790 009c FB72     		strb	r3, [r7, #11]
3123:..\src/command_processing.c **** 
3124:..\src/command_processing.c ****     commWrite(packet_data, 8); 
 19791              		.loc 1 3124 0
 19792 009e 3B1D     		adds	r3, r7, #4
 19793 00a0 0821     		movs	r1, #8
 19794 00a2 1846     		mov	r0, r3
 19795 00a4 FFF7FEFF 		bl	commWrite
3125:..\src/command_processing.c **** }
 19796              		.loc 1 3125 0
 19797 00a8 00BF     		nop
 19798 00aa 1437     		adds	r7, r7, #20
 19799              		.cfi_def_cfa_offset 12
 19800 00ac BD46     		mov	sp, r7
 19801              		.cfi_def_cfa_register 13
 19802              		@ sp needed
 19803 00ae 90BD     		pop	{r4, r7, pc}
 19804              	.L785:
 19805              		.align	2
 19806              	.L784:
 19807 00b0 00000000 		.word	g_mem
 19808 00b4 00000000 		.word	g_measOld
 19809              		.cfi_endproc
 19810              	.LFE94:
 19811              		.size	cmd_get_velocities, .-cmd_get_velocities
 19812              		.section	.text.cmd_get_accelerations,"ax",%progbits
 19813              		.align	2
 19814              		.global	cmd_get_accelerations
 19815              		.thumb
 19816              		.thumb_func
 19817              		.type	cmd_get_accelerations, %function
 19818              	cmd_get_accelerations:
 19819              	.LFB95:
3126:..\src/command_processing.c **** 
3127:..\src/command_processing.c **** void cmd_get_accelerations(){
 19820              		.loc 1 3127 0
 19821              		.cfi_startproc
 19822              		@ args = 0, pretend = 0, frame = 16
 19823              		@ frame_needed = 1, uses_anonymous_args = 0
 19824 0000 90B5     		push	{r4, r7, lr}
 19825              		.cfi_def_cfa_offset 12
 19826              		.cfi_offset 4, -12
 19827              		.cfi_offset 7, -8
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 445


 19828              		.cfi_offset 14, -4
 19829 0002 85B0     		sub	sp, sp, #20
 19830              		.cfi_def_cfa_offset 32
 19831 0004 00AF     		add	r7, sp, #0
 19832              		.cfi_def_cfa_register 7
3128:..\src/command_processing.c ****  
3129:..\src/command_processing.c ****     uint8 CYDATA index;
3130:..\src/command_processing.c ****     int16 aux_int16;
3131:..\src/command_processing.c ****     
3132:..\src/command_processing.c ****     // Packet: header + measure(int16) + crc
3133:..\src/command_processing.c ****     
3134:..\src/command_processing.c ****     uint8 packet_data[8]; 
3135:..\src/command_processing.c ****     
3136:..\src/command_processing.c ****     //Header package
3137:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ACCEL;   
 19833              		.loc 1 3137 0
 19834 0006 8B23     		movs	r3, #139
 19835 0008 3B71     		strb	r3, [r7, #4]
3138:..\src/command_processing.c ****     
3139:..\src/command_processing.c ****     for (index = NUM_OF_SENSORS; index--;) {
 19836              		.loc 1 3139 0
 19837 000a 0323     		movs	r3, #3
 19838 000c FB73     		strb	r3, [r7, #15]
 19839 000e 39E0     		b	.L787
 19840              	.L788:
3140:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].acc[index] >> g_mem.enc[g_mem.mo
 19841              		.loc 1 3140 0
 19842 0010 274B     		ldr	r3, .L789
 19843 0012 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 19844 0016 1A46     		mov	r2, r3
 19845 0018 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 19846 001a 2648     		ldr	r0, .L789+4
 19847 001c 1346     		mov	r3, r2
 19848 001e 5B00     		lsls	r3, r3, #1
 19849 0020 1344     		add	r3, r3, r2
 19850 0022 9B00     		lsls	r3, r3, #2
 19851 0024 1344     		add	r3, r3, r2
 19852 0026 0B44     		add	r3, r3, r1
 19853 0028 0A33     		adds	r3, r3, #10
 19854 002a 50F82320 		ldr	r2, [r0, r3, lsl #2]
 19855 002e 204B     		ldr	r3, .L789
 19856 0030 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 19857 0034 1C46     		mov	r4, r3
 19858 0036 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 19859 0038 1D48     		ldr	r0, .L789
 19860 003a 2346     		mov	r3, r4
 19861 003c 5B00     		lsls	r3, r3, #1
 19862 003e 2344     		add	r3, r3, r4
 19863 0040 1B01     		lsls	r3, r3, #4
 19864 0042 0344     		add	r3, r3, r0
 19865 0044 0B44     		add	r3, r3, r1
 19866 0046 03F29513 		addw	r3, r3, #405
 19867 004a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19868 004c 42FA03F3 		asr	r3, r2, r3
 19869 0050 1BB2     		sxth	r3, r3
 19870 0052 BB81     		strh	r3, [r7, #12]	@ movhi
3141:..\src/command_processing.c ****         packet_data[(index << 1) + 2] = ((char*)(&aux_int16))[0];
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 446


 19871              		.loc 1 3141 0
 19872 0054 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 19873 0056 5B00     		lsls	r3, r3, #1
 19874 0058 0233     		adds	r3, r3, #2
 19875 005a 07F10C02 		add	r2, r7, #12
 19876 005e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 19877 0060 07F11001 		add	r1, r7, #16
 19878 0064 0B44     		add	r3, r3, r1
 19879 0066 03F80C2C 		strb	r2, [r3, #-12]
3142:..\src/command_processing.c ****         packet_data[(index << 1) + 1] = ((char*)(&aux_int16))[1];
 19880              		.loc 1 3142 0
 19881 006a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 19882 006c 5B00     		lsls	r3, r3, #1
 19883 006e 5A1C     		adds	r2, r3, #1
 19884 0070 07F10C03 		add	r3, r7, #12
 19885 0074 0133     		adds	r3, r3, #1
 19886 0076 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 19887 0078 07F11003 		add	r3, r7, #16
 19888 007c 1344     		add	r3, r3, r2
 19889 007e 0A46     		mov	r2, r1
 19890 0080 03F80C2C 		strb	r2, [r3, #-12]
 19891              	.L787:
3139:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].acc[index] >> g_mem.enc[g_mem.mo
 19892              		.loc 1 3139 0 discriminator 1
 19893 0084 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 19894 0086 5A1E     		subs	r2, r3, #1
 19895 0088 FA73     		strb	r2, [r7, #15]
 19896 008a 002B     		cmp	r3, #0
 19897 008c C0D1     		bne	.L788
3143:..\src/command_processing.c ****     }
3144:..\src/command_processing.c ****     
3145:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3146:..\src/command_processing.c **** 
3147:..\src/command_processing.c ****     packet_data[7] = LCRChecksum (packet_data, 7);
 19898              		.loc 1 3147 0
 19899 008e 3B1D     		adds	r3, r7, #4
 19900 0090 0721     		movs	r1, #7
 19901 0092 1846     		mov	r0, r3
 19902 0094 FFF7FEFF 		bl	LCRChecksum
 19903 0098 0346     		mov	r3, r0
 19904 009a FB72     		strb	r3, [r7, #11]
3148:..\src/command_processing.c **** 
3149:..\src/command_processing.c ****     commWrite(packet_data, 8); 
 19905              		.loc 1 3149 0
 19906 009c 3B1D     		adds	r3, r7, #4
 19907 009e 0821     		movs	r1, #8
 19908 00a0 1846     		mov	r0, r3
 19909 00a2 FFF7FEFF 		bl	commWrite
3150:..\src/command_processing.c **** }
 19910              		.loc 1 3150 0
 19911 00a6 00BF     		nop
 19912 00a8 1437     		adds	r7, r7, #20
 19913              		.cfi_def_cfa_offset 12
 19914 00aa BD46     		mov	sp, r7
 19915              		.cfi_def_cfa_register 13
 19916              		@ sp needed
 19917 00ac 90BD     		pop	{r4, r7, pc}
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 447


 19918              	.L790:
 19919 00ae 00BF     		.align	2
 19920              	.L789:
 19921 00b0 00000000 		.word	g_mem
 19922 00b4 00000000 		.word	g_measOld
 19923              		.cfi_endproc
 19924              	.LFE95:
 19925              		.size	cmd_get_accelerations, .-cmd_get_accelerations
 19926              		.section	.text.cmd_get_joystick,"ax",%progbits
 19927              		.align	2
 19928              		.global	cmd_get_joystick
 19929              		.thumb
 19930              		.thumb_func
 19931              		.type	cmd_get_joystick, %function
 19932              	cmd_get_joystick:
 19933              	.LFB96:
3151:..\src/command_processing.c **** 
3152:..\src/command_processing.c **** void cmd_get_joystick() {
 19934              		.loc 1 3152 0
 19935              		.cfi_startproc
 19936              		@ args = 0, pretend = 0, frame = 8
 19937              		@ frame_needed = 1, uses_anonymous_args = 0
 19938 0000 80B5     		push	{r7, lr}
 19939              		.cfi_def_cfa_offset 8
 19940              		.cfi_offset 7, -8
 19941              		.cfi_offset 14, -4
 19942 0002 82B0     		sub	sp, sp, #8
 19943              		.cfi_def_cfa_offset 16
 19944 0004 00AF     		add	r7, sp, #0
 19945              		.cfi_def_cfa_register 7
3153:..\src/command_processing.c ****  
3154:..\src/command_processing.c ****     int16 aux_int16;
3155:..\src/command_processing.c ****     
3156:..\src/command_processing.c ****     // Packet: header + measure(int16) + crc
3157:..\src/command_processing.c ****     
3158:..\src/command_processing.c ****     uint8 packet_data[6];
3159:..\src/command_processing.c ****     
3160:..\src/command_processing.c ****     // Header        
3161:..\src/command_processing.c ****     packet_data[0] = CMD_GET_JOYSTICK;
 19946              		.loc 1 3161 0
 19947 0006 9223     		movs	r3, #146
 19948 0008 3B70     		strb	r3, [r7]
3162:..\src/command_processing.c ****     
3163:..\src/command_processing.c ****     aux_int16 = (int16) g_adc_measOld.joystick[0];
 19949              		.loc 1 3163 0
 19950 000a 134B     		ldr	r3, .L792
 19951 000c 1B6A     		ldr	r3, [r3, #32]
 19952 000e 1BB2     		sxth	r3, r3
 19953 0010 FB80     		strh	r3, [r7, #6]	@ movhi
3164:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 19954              		.loc 1 3164 0
 19955 0012 BB1D     		adds	r3, r7, #6
 19956 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19957 0016 BB70     		strb	r3, [r7, #2]
3165:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 19958              		.loc 1 3165 0
 19959 0018 BB1D     		adds	r3, r7, #6
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 448


 19960 001a 0133     		adds	r3, r3, #1
 19961 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19962 001e 7B70     		strb	r3, [r7, #1]
3166:..\src/command_processing.c ****     
3167:..\src/command_processing.c ****     aux_int16 = (int16) g_adc_measOld.joystick[1];
 19963              		.loc 1 3167 0
 19964 0020 0D4B     		ldr	r3, .L792
 19965 0022 5B6A     		ldr	r3, [r3, #36]
 19966 0024 1BB2     		sxth	r3, r3
 19967 0026 FB80     		strh	r3, [r7, #6]	@ movhi
3168:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
 19968              		.loc 1 3168 0
 19969 0028 BB1D     		adds	r3, r7, #6
 19970 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19971 002c 3B71     		strb	r3, [r7, #4]
3169:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
 19972              		.loc 1 3169 0
 19973 002e BB1D     		adds	r3, r7, #6
 19974 0030 0133     		adds	r3, r3, #1
 19975 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19976 0034 FB70     		strb	r3, [r7, #3]
3170:..\src/command_processing.c **** 
3171:..\src/command_processing.c ****     packet_data[5] = LCRChecksum (packet_data, 5);
 19977              		.loc 1 3171 0
 19978 0036 3B46     		mov	r3, r7
 19979 0038 0521     		movs	r1, #5
 19980 003a 1846     		mov	r0, r3
 19981 003c FFF7FEFF 		bl	LCRChecksum
 19982 0040 0346     		mov	r3, r0
 19983 0042 7B71     		strb	r3, [r7, #5]
3172:..\src/command_processing.c **** 
3173:..\src/command_processing.c ****     commWrite(packet_data, 6);
 19984              		.loc 1 3173 0
 19985 0044 3B46     		mov	r3, r7
 19986 0046 0621     		movs	r1, #6
 19987 0048 1846     		mov	r0, r3
 19988 004a FFF7FEFF 		bl	commWrite
3174:..\src/command_processing.c **** }
 19989              		.loc 1 3174 0
 19990 004e 00BF     		nop
 19991 0050 0837     		adds	r7, r7, #8
 19992              		.cfi_def_cfa_offset 8
 19993 0052 BD46     		mov	sp, r7
 19994              		.cfi_def_cfa_register 13
 19995              		@ sp needed
 19996 0054 80BD     		pop	{r7, pc}
 19997              	.L793:
 19998 0056 00BF     		.align	2
 19999              	.L792:
 20000 0058 00000000 		.word	g_adc_measOld
 20001              		.cfi_endproc
 20002              	.LFE96:
 20003              		.size	cmd_get_joystick, .-cmd_get_joystick
 20004              		.section	.text.cmd_set_inputs,"ax",%progbits
 20005              		.align	2
 20006              		.global	cmd_set_inputs
 20007              		.thumb
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 449


 20008              		.thumb_func
 20009              		.type	cmd_set_inputs, %function
 20010              	cmd_set_inputs:
 20011              	.LFB97:
3175:..\src/command_processing.c **** 
3176:..\src/command_processing.c **** void cmd_set_inputs(){
 20012              		.loc 1 3176 0
 20013              		.cfi_startproc
 20014              		@ args = 0, pretend = 0, frame = 8
 20015              		@ frame_needed = 1, uses_anonymous_args = 0
 20016 0000 80B5     		push	{r7, lr}
 20017              		.cfi_def_cfa_offset 8
 20018              		.cfi_offset 7, -8
 20019              		.cfi_offset 14, -4
 20020 0002 82B0     		sub	sp, sp, #8
 20021              		.cfi_def_cfa_offset 16
 20022 0004 00AF     		add	r7, sp, #0
 20023              		.cfi_def_cfa_register 7
3177:..\src/command_processing.c ****     
3178:..\src/command_processing.c ****     // Store position setted in right variables
3179:..\src/command_processing.c ****     int16 aux_int16[1];
3180:..\src/command_processing.c ****     static int16 last_aux_int16[1];
3181:..\src/command_processing.c ****     
3182:..\src/command_processing.c ****     aux_int16[0] = (int16)(g_rx.buffer[1]<<8 | g_rx.buffer[2]);
 20024              		.loc 1 3182 0
 20025 0006 0C4B     		ldr	r3, .L795
 20026 0008 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 20027 000a 1B02     		lsls	r3, r3, #8
 20028 000c 1AB2     		sxth	r2, r3
 20029 000e 0A4B     		ldr	r3, .L795
 20030 0010 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 20031 0012 1BB2     		sxth	r3, r3
 20032 0014 1343     		orrs	r3, r3, r2
 20033 0016 1BB2     		sxth	r3, r3
 20034 0018 BB80     		strh	r3, [r7, #4]	@ movhi
3183:..\src/command_processing.c ****     PWM_MOTORS_WriteCompare1(aux_int16[0]);
 20035              		.loc 1 3183 0
 20036 001a B7F90430 		ldrsh	r3, [r7, #4]
 20037 001e DBB2     		uxtb	r3, r3
 20038 0020 1846     		mov	r0, r3
 20039 0022 FFF7FEFF 		bl	PWM_MOTORS_WriteCompare1
3184:..\src/command_processing.c ****     
3185:..\src/command_processing.c ****     // Check if last command received was the same as this 
3186:..\src/command_processing.c ****     //(Note: last command not last motor reference in g_ref)
3187:..\src/command_processing.c ****          // Update last command
3188:..\src/command_processing.c ****     
3189:..\src/command_processing.c ****     
3190:..\src/command_processing.c ****     // Update g_refNew in case a new command has been received
3191:..\src/command_processing.c ****       g_refNew[0].pwm = aux_int16[0];
 20040              		.loc 1 3191 0
 20041 0026 B7F90430 		ldrsh	r3, [r7, #4]
 20042 002a 1A46     		mov	r2, r3
 20043 002c 034B     		ldr	r3, .L795+4
 20044 002e 9A60     		str	r2, [r3, #8]
3192:..\src/command_processing.c ****                 
3193:..\src/command_processing.c ****             }  
 20045              		.loc 1 3193 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 450


 20046 0030 00BF     		nop
 20047 0032 0837     		adds	r7, r7, #8
 20048              		.cfi_def_cfa_offset 8
 20049 0034 BD46     		mov	sp, r7
 20050              		.cfi_def_cfa_register 13
 20051              		@ sp needed
 20052 0036 80BD     		pop	{r7, pc}
 20053              	.L796:
 20054              		.align	2
 20055              	.L795:
 20056 0038 00000000 		.word	g_rx
 20057 003c 00000000 		.word	g_refNew
 20058              		.cfi_endproc
 20059              	.LFE97:
 20060              		.size	cmd_set_inputs, .-cmd_set_inputs
 20061              		.section	.text.cmd_activate,"ax",%progbits
 20062              		.align	2
 20063              		.global	cmd_activate
 20064              		.thumb
 20065              		.thumb_func
 20066              		.type	cmd_activate, %function
 20067              	cmd_activate:
 20068              	.LFB98:
3194:..\src/command_processing.c ****                
3195:..\src/command_processing.c ****             // Check if the reference is nor higher or lower than the position limits
3196:..\src/command_processing.c ****             
3197:..\src/command_processing.c ****        
3198:..\src/command_processing.c ****    
3199:..\src/command_processing.c **** 
3200:..\src/command_processing.c **** void cmd_activate(){
 20069              		.loc 1 3200 0
 20070              		.cfi_startproc
 20071              		@ args = 0, pretend = 0, frame = 8
 20072              		@ frame_needed = 1, uses_anonymous_args = 0
 20073 0000 80B5     		push	{r7, lr}
 20074              		.cfi_def_cfa_offset 8
 20075              		.cfi_offset 7, -8
 20076              		.cfi_offset 14, -4
 20077 0002 82B0     		sub	sp, sp, #8
 20078              		.cfi_def_cfa_offset 16
 20079 0004 00AF     		add	r7, sp, #0
 20080              		.cfi_def_cfa_register 7
3201:..\src/command_processing.c ****     
3202:..\src/command_processing.c ****     // Store new value reads
3203:..\src/command_processing.c ****     uint8 aux = g_rx.buffer[1];
 20081              		.loc 1 3203 0
 20082 0006 094B     		ldr	r3, .L798
 20083 0008 5B78     		ldrb	r3, [r3, #1]
 20084 000a FB71     		strb	r3, [r7, #7]
3204:..\src/command_processing.c ****     
3205:..\src/command_processing.c ****     // Check type of control mode enabled
3206:..\src/command_processing.c ****       g_refNew[0].onoff = (aux & 0x01);
 20085              		.loc 1 3206 0
 20086 000c FB79     		ldrb	r3, [r7, #7]
 20087 000e 03F00103 		and	r3, r3, #1
 20088 0012 DAB2     		uxtb	r2, r3
 20089 0014 064B     		ldr	r3, .L798+4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 451


 20090 0016 1A73     		strb	r2, [r3, #12]
3207:..\src/command_processing.c ****     
3208:..\src/command_processing.c ****     // Activate/Deactivate motor
3209:..\src/command_processing.c ****     enable_motor(0, g_refNew[0].onoff); 
 20091              		.loc 1 3209 0
 20092 0018 054B     		ldr	r3, .L798+4
 20093 001a 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 20094 001c 1946     		mov	r1, r3
 20095 001e 0020     		movs	r0, #0
 20096 0020 FFF7FEFF 		bl	enable_motor
3210:..\src/command_processing.c ****     
3211:..\src/command_processing.c **** }
 20097              		.loc 1 3211 0
 20098 0024 00BF     		nop
 20099 0026 0837     		adds	r7, r7, #8
 20100              		.cfi_def_cfa_offset 8
 20101 0028 BD46     		mov	sp, r7
 20102              		.cfi_def_cfa_register 13
 20103              		@ sp needed
 20104 002a 80BD     		pop	{r7, pc}
 20105              	.L799:
 20106              		.align	2
 20107              	.L798:
 20108 002c 00000000 		.word	g_rx
 20109 0030 00000000 		.word	g_refNew
 20110              		.cfi_endproc
 20111              	.LFE98:
 20112              		.size	cmd_activate, .-cmd_activate
 20113              		.section	.text.cmd_get_activate,"ax",%progbits
 20114              		.align	2
 20115              		.global	cmd_get_activate
 20116              		.thumb
 20117              		.thumb_func
 20118              		.type	cmd_get_activate, %function
 20119              	cmd_get_activate:
 20120              	.LFB99:
3212:..\src/command_processing.c **** 
3213:..\src/command_processing.c **** void cmd_get_activate(){
 20121              		.loc 1 3213 0
 20122              		.cfi_startproc
 20123              		@ args = 0, pretend = 0, frame = 8
 20124              		@ frame_needed = 1, uses_anonymous_args = 0
 20125 0000 80B5     		push	{r7, lr}
 20126              		.cfi_def_cfa_offset 8
 20127              		.cfi_offset 7, -8
 20128              		.cfi_offset 14, -4
 20129 0002 82B0     		sub	sp, sp, #8
 20130              		.cfi_def_cfa_offset 16
 20131 0004 00AF     		add	r7, sp, #0
 20132              		.cfi_def_cfa_register 7
3214:..\src/command_processing.c ****     
3215:..\src/command_processing.c ****     uint8 packet_data[3];
3216:..\src/command_processing.c **** 
3217:..\src/command_processing.c ****     // Header        
3218:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ACTIVATE;
 20133              		.loc 1 3218 0
 20134 0006 8123     		movs	r3, #129
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 452


 20135 0008 3B71     		strb	r3, [r7, #4]
3219:..\src/command_processing.c ****     
3220:..\src/command_processing.c ****     // Fill payload
3221:..\src/command_processing.c ****    
3222:..\src/command_processing.c ****         packet_data[1] = g_ref[0].onoff;
 20136              		.loc 1 3222 0
 20137 000a 094B     		ldr	r3, .L801
 20138 000c 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 20139 000e 7B71     		strb	r3, [r7, #5]
3223:..\src/command_processing.c ****     
3224:..\src/command_processing.c ****     
3225:..\src/command_processing.c ****     // Calculate checksum
3226:..\src/command_processing.c ****     packet_data[2] = LCRChecksum(packet_data, 2);
 20140              		.loc 1 3226 0
 20141 0010 3B1D     		adds	r3, r7, #4
 20142 0012 0221     		movs	r1, #2
 20143 0014 1846     		mov	r0, r3
 20144 0016 FFF7FEFF 		bl	LCRChecksum
 20145 001a 0346     		mov	r3, r0
 20146 001c BB71     		strb	r3, [r7, #6]
3227:..\src/command_processing.c ****     
3228:..\src/command_processing.c ****     // Send package to UART
3229:..\src/command_processing.c ****     commWrite(packet_data, 3);
 20147              		.loc 1 3229 0
 20148 001e 3B1D     		adds	r3, r7, #4
 20149 0020 0321     		movs	r1, #3
 20150 0022 1846     		mov	r0, r3
 20151 0024 FFF7FEFF 		bl	commWrite
3230:..\src/command_processing.c **** 
3231:..\src/command_processing.c **** }
 20152              		.loc 1 3231 0
 20153 0028 00BF     		nop
 20154 002a 0837     		adds	r7, r7, #8
 20155              		.cfi_def_cfa_offset 8
 20156 002c BD46     		mov	sp, r7
 20157              		.cfi_def_cfa_register 13
 20158              		@ sp needed
 20159 002e 80BD     		pop	{r7, pc}
 20160              	.L802:
 20161              		.align	2
 20162              	.L801:
 20163 0030 00000000 		.word	g_ref
 20164              		.cfi_endproc
 20165              	.LFE99:
 20166              		.size	cmd_get_activate, .-cmd_get_activate
 20167              		.section	.text.cmd_get_curr_and_meas,"ax",%progbits
 20168              		.align	2
 20169              		.global	cmd_get_curr_and_meas
 20170              		.thumb
 20171              		.thumb_func
 20172              		.type	cmd_get_curr_and_meas, %function
 20173              	cmd_get_curr_and_meas:
 20174              	.LFB100:
3232:..\src/command_processing.c **** 
3233:..\src/command_processing.c **** void cmd_get_curr_and_meas(){
 20175              		.loc 1 3233 0
 20176              		.cfi_startproc
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 453


 20177              		@ args = 0, pretend = 0, frame = 16
 20178              		@ frame_needed = 1, uses_anonymous_args = 0
 20179 0000 90B5     		push	{r4, r7, lr}
 20180              		.cfi_def_cfa_offset 12
 20181              		.cfi_offset 4, -12
 20182              		.cfi_offset 7, -8
 20183              		.cfi_offset 14, -4
 20184 0002 85B0     		sub	sp, sp, #20
 20185              		.cfi_def_cfa_offset 32
 20186 0004 00AF     		add	r7, sp, #0
 20187              		.cfi_def_cfa_register 7
3234:..\src/command_processing.c ****     
3235:..\src/command_processing.c ****     uint8 CYDATA index;
3236:..\src/command_processing.c ****     int16 aux_int16;
3237:..\src/command_processing.c ****    
3238:..\src/command_processing.c ****     //Packet: header + curr_meas(int16) + pos_meas(int16) + CRC
3239:..\src/command_processing.c ****     
3240:..\src/command_processing.c ****     uint8 packet_data[12]; 
3241:..\src/command_processing.c **** 
3242:..\src/command_processing.c ****     //Header package
3243:..\src/command_processing.c ****     packet_data[0] = CMD_GET_CURR_AND_MEAS;
 20188              		.loc 1 3243 0
 20189 0006 8623     		movs	r3, #134
 20190 0008 3B70     		strb	r3, [r7]
3244:..\src/command_processing.c **** 
3245:..\src/command_processing.c ****     // Currents
3246:..\src/command_processing.c ****     aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].curr; //Real current motor1
 20191              		.loc 1 3246 0
 20192 000a 484B     		ldr	r3, .L808
 20193 000c 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 20194 0010 1946     		mov	r1, r3
 20195 0012 474A     		ldr	r2, .L808+4
 20196 0014 3423     		movs	r3, #52
 20197 0016 03FB01F3 		mul	r3, r3, r1
 20198 001a 1344     		add	r3, r3, r2
 20199 001c 0C33     		adds	r3, r3, #12
 20200 001e 1B68     		ldr	r3, [r3]
 20201 0020 1BB2     		sxth	r3, r3
 20202 0022 BB81     		strh	r3, [r7, #12]	@ movhi
3247:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 20203              		.loc 1 3247 0
 20204 0024 07F10C03 		add	r3, r7, #12
 20205 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20206 002a BB70     		strb	r3, [r7, #2]
3248:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 20207              		.loc 1 3248 0
 20208 002c 07F10C03 		add	r3, r7, #12
 20209 0030 0133     		adds	r3, r3, #1
 20210 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20211 0034 7B70     		strb	r3, [r7, #1]
3249:..\src/command_processing.c ****     
3250:..\src/command_processing.c ****     if (c_mem.dev.use_2nd_motor_flag == TRUE) {
 20212              		.loc 1 3250 0
 20213 0036 3F4B     		ldr	r3, .L808+8
 20214 0038 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 20215 003c 012B     		cmp	r3, #1
 20216 003e 0DD1     		bne	.L804
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 454


3251:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld[g_mem.motor[1].encoder_line].curr; //Real current motor 2
 20217              		.loc 1 3251 0
 20218 0040 3A4B     		ldr	r3, .L808
 20219 0042 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 20220 0046 1946     		mov	r1, r3
 20221 0048 394A     		ldr	r2, .L808+4
 20222 004a 3423     		movs	r3, #52
 20223 004c 03FB01F3 		mul	r3, r3, r1
 20224 0050 1344     		add	r3, r3, r2
 20225 0052 0C33     		adds	r3, r3, #12
 20226 0054 1B68     		ldr	r3, [r3]
 20227 0056 1BB2     		sxth	r3, r3
 20228 0058 BB81     		strh	r3, [r7, #12]	@ movhi
 20229 005a 0CE0     		b	.L805
 20230              	.L804:
3252:..\src/command_processing.c ****     }
3253:..\src/command_processing.c ****     else {
3254:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].estim_curr; //Estimated current
 20231              		.loc 1 3254 0
 20232 005c 334B     		ldr	r3, .L808
 20233 005e 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 20234 0062 1946     		mov	r1, r3
 20235 0064 324A     		ldr	r2, .L808+4
 20236 0066 3423     		movs	r3, #52
 20237 0068 03FB01F3 		mul	r3, r3, r1
 20238 006c 1344     		add	r3, r3, r2
 20239 006e 1033     		adds	r3, r3, #16
 20240 0070 1B68     		ldr	r3, [r3]
 20241 0072 1BB2     		sxth	r3, r3
 20242 0074 BB81     		strh	r3, [r7, #12]	@ movhi
 20243              	.L805:
3255:..\src/command_processing.c ****     }
3256:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
 20244              		.loc 1 3256 0
 20245 0076 07F10C03 		add	r3, r7, #12
 20246 007a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20247 007c 3B71     		strb	r3, [r7, #4]
3257:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
 20248              		.loc 1 3257 0
 20249 007e 07F10C03 		add	r3, r7, #12
 20250 0082 0133     		adds	r3, r3, #1
 20251 0084 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20252 0086 FB70     		strb	r3, [r7, #3]
3258:..\src/command_processing.c **** 
3259:..\src/command_processing.c ****     // Positions
3260:..\src/command_processing.c ****     for (index = NUM_OF_SENSORS; index--;) {
 20253              		.loc 1 3260 0
 20254 0088 0323     		movs	r3, #3
 20255 008a FB73     		strb	r3, [r7, #15]
 20256 008c 38E0     		b	.L806
 20257              	.L807:
3261:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].pos[index] >> g_mem.enc[g_mem.mo
 20258              		.loc 1 3261 0
 20259 008e 274B     		ldr	r3, .L808
 20260 0090 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 20261 0094 1A46     		mov	r2, r3
 20262 0096 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 455


 20263 0098 2548     		ldr	r0, .L808+4
 20264 009a 1346     		mov	r3, r2
 20265 009c 5B00     		lsls	r3, r3, #1
 20266 009e 1344     		add	r3, r3, r2
 20267 00a0 9B00     		lsls	r3, r3, #2
 20268 00a2 1344     		add	r3, r3, r2
 20269 00a4 0B44     		add	r3, r3, r1
 20270 00a6 50F82320 		ldr	r2, [r0, r3, lsl #2]
 20271 00aa 204B     		ldr	r3, .L808
 20272 00ac 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 20273 00b0 1C46     		mov	r4, r3
 20274 00b2 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 20275 00b4 1D48     		ldr	r0, .L808
 20276 00b6 2346     		mov	r3, r4
 20277 00b8 5B00     		lsls	r3, r3, #1
 20278 00ba 2344     		add	r3, r3, r4
 20279 00bc 1B01     		lsls	r3, r3, #4
 20280 00be 0344     		add	r3, r3, r0
 20281 00c0 0B44     		add	r3, r3, r1
 20282 00c2 03F29513 		addw	r3, r3, #405
 20283 00c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20284 00c8 42FA03F3 		asr	r3, r2, r3
 20285 00cc 1BB2     		sxth	r3, r3
 20286 00ce BB81     		strh	r3, [r7, #12]	@ movhi
3262:..\src/command_processing.c ****         packet_data[(index << 1) + 6] = ((char*)(&aux_int16))[0];
 20287              		.loc 1 3262 0
 20288 00d0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 20289 00d2 5B00     		lsls	r3, r3, #1
 20290 00d4 0633     		adds	r3, r3, #6
 20291 00d6 07F10C02 		add	r2, r7, #12
 20292 00da 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 20293 00dc 07F11001 		add	r1, r7, #16
 20294 00e0 0B44     		add	r3, r3, r1
 20295 00e2 03F8102C 		strb	r2, [r3, #-16]
3263:..\src/command_processing.c ****         packet_data[(index << 1) + 5] = ((char*)(&aux_int16))[1];
 20296              		.loc 1 3263 0
 20297 00e6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 20298 00e8 5B00     		lsls	r3, r3, #1
 20299 00ea 5A1D     		adds	r2, r3, #5
 20300 00ec 07F10C03 		add	r3, r7, #12
 20301 00f0 0133     		adds	r3, r3, #1
 20302 00f2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 20303 00f4 07F11003 		add	r3, r7, #16
 20304 00f8 1344     		add	r3, r3, r2
 20305 00fa 0A46     		mov	r2, r1
 20306 00fc 03F8102C 		strb	r2, [r3, #-16]
 20307              	.L806:
3260:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].pos[index] >> g_mem.enc[g_mem.mo
 20308              		.loc 1 3260 0 discriminator 1
 20309 0100 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 20310 0102 5A1E     		subs	r2, r3, #1
 20311 0104 FA73     		strb	r2, [r7, #15]
 20312 0106 002B     		cmp	r3, #0
 20313 0108 C1D1     		bne	.L807
3264:..\src/command_processing.c ****     }
3265:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3266:..\src/command_processing.c ****         
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 456


3267:..\src/command_processing.c ****     packet_data[11] = LCRChecksum (packet_data, 11);
 20314              		.loc 1 3267 0
 20315 010a 3B46     		mov	r3, r7
 20316 010c 0B21     		movs	r1, #11
 20317 010e 1846     		mov	r0, r3
 20318 0110 FFF7FEFF 		bl	LCRChecksum
 20319 0114 0346     		mov	r3, r0
 20320 0116 FB72     		strb	r3, [r7, #11]
3268:..\src/command_processing.c ****     commWrite(packet_data, 12);
 20321              		.loc 1 3268 0
 20322 0118 3B46     		mov	r3, r7
 20323 011a 0C21     		movs	r1, #12
 20324 011c 1846     		mov	r0, r3
 20325 011e FFF7FEFF 		bl	commWrite
3269:..\src/command_processing.c ****    
3270:..\src/command_processing.c **** }
 20326              		.loc 1 3270 0
 20327 0122 00BF     		nop
 20328 0124 1437     		adds	r7, r7, #20
 20329              		.cfi_def_cfa_offset 12
 20330 0126 BD46     		mov	sp, r7
 20331              		.cfi_def_cfa_register 13
 20332              		@ sp needed
 20333 0128 90BD     		pop	{r4, r7, pc}
 20334              	.L809:
 20335 012a 00BF     		.align	2
 20336              	.L808:
 20337 012c 00000000 		.word	g_mem
 20338 0130 00000000 		.word	g_measOld
 20339 0134 00000000 		.word	c_mem
 20340              		.cfi_endproc
 20341              	.LFE100:
 20342              		.size	cmd_get_curr_and_meas, .-cmd_get_curr_and_meas
 20343              		.global	__aeabi_dmul
 20344              		.global	__aeabi_d2iz
 20345              		.section	.text.cmd_get_currents,"ax",%progbits
 20346              		.align	2
 20347              		.global	cmd_get_currents
 20348              		.thumb
 20349              		.thumb_func
 20350              		.type	cmd_get_currents, %function
 20351              	cmd_get_currents:
 20352              	.LFB101:
3271:..\src/command_processing.c **** 
3272:..\src/command_processing.c **** void cmd_get_currents(){
 20353              		.loc 1 3272 0
 20354              		.cfi_startproc
 20355              		@ args = 0, pretend = 0, frame = 16
 20356              		@ frame_needed = 1, uses_anonymous_args = 0
 20357 0000 90B5     		push	{r4, r7, lr}
 20358              		.cfi_def_cfa_offset 12
 20359              		.cfi_offset 4, -12
 20360              		.cfi_offset 7, -8
 20361              		.cfi_offset 14, -4
 20362 0002 85B0     		sub	sp, sp, #20
 20363              		.cfi_def_cfa_offset 32
 20364 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 457


 20365              		.cfi_def_cfa_register 7
3273:..\src/command_processing.c ****     
3274:..\src/command_processing.c ****     // Packet: header + motor_measure(int16) + crc
3275:..\src/command_processing.c ****     
3276:..\src/command_processing.c ****     uint8 packet_data[6]; 
3277:..\src/command_processing.c ****     int16 aux_int16;
3278:..\src/command_processing.c ****     
3279:..\src/command_processing.c ****     //Header package
3280:..\src/command_processing.c **** 
3281:..\src/command_processing.c ****     packet_data[0] = CMD_GET_CURRENTS;
 20366              		.loc 1 3281 0
 20367 0006 8523     		movs	r3, #133
 20368 0008 3B72     		strb	r3, [r7, #8]
3282:..\src/command_processing.c **** 
3283:..\src/command_processing.c ****     if (c_mem.dev.dev_type != AIR_CHAMBERS_FB){
 20369              		.loc 1 3283 0
 20370 000a 334B     		ldr	r3, .L815
 20371 000c 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 20372 0010 022B     		cmp	r3, #2
 20373 0012 0DD0     		beq	.L811
3284:..\src/command_processing.c ****         // Currents
3285:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].curr; //Real current
 20374              		.loc 1 3285 0
 20375 0014 314B     		ldr	r3, .L815+4
 20376 0016 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 20377 001a 1946     		mov	r1, r3
 20378 001c 304A     		ldr	r2, .L815+8
 20379 001e 3423     		movs	r3, #52
 20380 0020 03FB01F3 		mul	r3, r3, r1
 20381 0024 1344     		add	r3, r3, r2
 20382 0026 0C33     		adds	r3, r3, #12
 20383 0028 1B68     		ldr	r3, [r3]
 20384 002a 1BB2     		sxth	r3, r3
 20385 002c FB80     		strh	r3, [r7, #6]	@ movhi
 20386 002e 12E0     		b	.L812
 20387              	.L811:
3286:..\src/command_processing.c ****     }
3287:..\src/command_processing.c ****     else {
3288:..\src/command_processing.c ****         // Send pressure times 100 here instead of current (Simulink use)
3289:..\src/command_processing.c ****         aux_int16 = (int16)(g_fb_meas.pressure*100.0); //Pressure
 20388              		.loc 1 3289 0
 20389 0030 2C4B     		ldr	r3, .L815+12
 20390 0032 1B68     		ldr	r3, [r3]	@ float
 20391 0034 1846     		mov	r0, r3
 20392 0036 FFF7FEFF 		bl	__aeabi_f2d
 20393 003a 4FF00002 		mov	r2, #0
 20394 003e 2A4B     		ldr	r3, .L815+16
 20395 0040 FFF7FEFF 		bl	__aeabi_dmul
 20396 0044 0346     		mov	r3, r0
 20397 0046 0C46     		mov	r4, r1
 20398 0048 1846     		mov	r0, r3
 20399 004a 2146     		mov	r1, r4
 20400 004c FFF7FEFF 		bl	__aeabi_d2iz
 20401 0050 0346     		mov	r3, r0
 20402 0052 1BB2     		sxth	r3, r3
 20403 0054 FB80     		strh	r3, [r7, #6]	@ movhi
 20404              	.L812:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 458


3290:..\src/command_processing.c ****     }
3291:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 20405              		.loc 1 3291 0
 20406 0056 BB1D     		adds	r3, r7, #6
 20407 0058 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20408 005a BB72     		strb	r3, [r7, #10]
3292:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 20409              		.loc 1 3292 0
 20410 005c BB1D     		adds	r3, r7, #6
 20411 005e 0133     		adds	r3, r3, #1
 20412 0060 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20413 0062 7B72     		strb	r3, [r7, #9]
3293:..\src/command_processing.c ****     
3294:..\src/command_processing.c ****     if (c_mem.dev.use_2nd_motor_flag == TRUE) {
 20414              		.loc 1 3294 0
 20415 0064 1C4B     		ldr	r3, .L815
 20416 0066 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 20417 006a 012B     		cmp	r3, #1
 20418 006c 0DD1     		bne	.L813
3295:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld[g_mem.motor[1].encoder_line].curr; //Real current motor 2
 20419              		.loc 1 3295 0
 20420 006e 1B4B     		ldr	r3, .L815+4
 20421 0070 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 20422 0074 1946     		mov	r1, r3
 20423 0076 1A4A     		ldr	r2, .L815+8
 20424 0078 3423     		movs	r3, #52
 20425 007a 03FB01F3 		mul	r3, r3, r1
 20426 007e 1344     		add	r3, r3, r2
 20427 0080 0C33     		adds	r3, r3, #12
 20428 0082 1B68     		ldr	r3, [r3]
 20429 0084 1BB2     		sxth	r3, r3
 20430 0086 FB80     		strh	r3, [r7, #6]	@ movhi
 20431 0088 0CE0     		b	.L814
 20432              	.L813:
3296:..\src/command_processing.c ****     }
3297:..\src/command_processing.c ****     else {
3298:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].estim_curr; //Estimated current
 20433              		.loc 1 3298 0
 20434 008a 144B     		ldr	r3, .L815+4
 20435 008c 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 20436 0090 1946     		mov	r1, r3
 20437 0092 134A     		ldr	r2, .L815+8
 20438 0094 3423     		movs	r3, #52
 20439 0096 03FB01F3 		mul	r3, r3, r1
 20440 009a 1344     		add	r3, r3, r2
 20441 009c 1033     		adds	r3, r3, #16
 20442 009e 1B68     		ldr	r3, [r3]
 20443 00a0 1BB2     		sxth	r3, r3
 20444 00a2 FB80     		strh	r3, [r7, #6]	@ movhi
 20445              	.L814:
3299:..\src/command_processing.c ****     }
3300:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
 20446              		.loc 1 3300 0
 20447 00a4 BB1D     		adds	r3, r7, #6
 20448 00a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20449 00a8 3B73     		strb	r3, [r7, #12]
3301:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 459


 20450              		.loc 1 3301 0
 20451 00aa BB1D     		adds	r3, r7, #6
 20452 00ac 0133     		adds	r3, r3, #1
 20453 00ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20454 00b0 FB72     		strb	r3, [r7, #11]
3302:..\src/command_processing.c **** 
3303:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3304:..\src/command_processing.c **** 
3305:..\src/command_processing.c ****     packet_data[5] = LCRChecksum (packet_data, 5);
 20455              		.loc 1 3305 0
 20456 00b2 07F10803 		add	r3, r7, #8
 20457 00b6 0521     		movs	r1, #5
 20458 00b8 1846     		mov	r0, r3
 20459 00ba FFF7FEFF 		bl	LCRChecksum
 20460 00be 0346     		mov	r3, r0
 20461 00c0 7B73     		strb	r3, [r7, #13]
3306:..\src/command_processing.c ****     
3307:..\src/command_processing.c ****     commWrite(packet_data, 6);
 20462              		.loc 1 3307 0
 20463 00c2 07F10803 		add	r3, r7, #8
 20464 00c6 0621     		movs	r1, #6
 20465 00c8 1846     		mov	r0, r3
 20466 00ca FFF7FEFF 		bl	commWrite
3308:..\src/command_processing.c **** }
 20467              		.loc 1 3308 0
 20468 00ce 00BF     		nop
 20469 00d0 1437     		adds	r7, r7, #20
 20470              		.cfi_def_cfa_offset 12
 20471 00d2 BD46     		mov	sp, r7
 20472              		.cfi_def_cfa_register 13
 20473              		@ sp needed
 20474 00d4 90BD     		pop	{r4, r7, pc}
 20475              	.L816:
 20476 00d6 00BF     		.align	2
 20477              	.L815:
 20478 00d8 00000000 		.word	c_mem
 20479 00dc 00000000 		.word	g_mem
 20480 00e0 00000000 		.word	g_measOld
 20481 00e4 00000000 		.word	g_fb_meas
 20482 00e8 00005940 		.word	1079574528
 20483              		.cfi_endproc
 20484              	.LFE101:
 20485              		.size	cmd_get_currents, .-cmd_get_currents
 20486              		.section	.text.cmd_get_currents_for_cuff,"ax",%progbits
 20487              		.align	2
 20488              		.global	cmd_get_currents_for_cuff
 20489              		.thumb
 20490              		.thumb_func
 20491              		.type	cmd_get_currents_for_cuff, %function
 20492              	cmd_get_currents_for_cuff:
 20493              	.LFB102:
3309:..\src/command_processing.c **** 
3310:..\src/command_processing.c **** void cmd_get_currents_for_cuff(){
 20494              		.loc 1 3310 0
 20495              		.cfi_startproc
 20496              		@ args = 0, pretend = 0, frame = 8
 20497              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 460


 20498 0000 80B5     		push	{r7, lr}
 20499              		.cfi_def_cfa_offset 8
 20500              		.cfi_offset 7, -8
 20501              		.cfi_offset 14, -4
 20502 0002 82B0     		sub	sp, sp, #8
 20503              		.cfi_def_cfa_offset 16
 20504 0004 00AF     		add	r7, sp, #0
 20505              		.cfi_def_cfa_register 7
3311:..\src/command_processing.c ****     
3312:..\src/command_processing.c ****     // Packet: header + motor_measure(int16) + crc
3313:..\src/command_processing.c ****     
3314:..\src/command_processing.c ****     uint8 packet_data[4]; 
3315:..\src/command_processing.c ****     int16 aux_int16;
3316:..\src/command_processing.c ****     
3317:..\src/command_processing.c ****     //Header package
3318:..\src/command_processing.c **** 
3319:..\src/command_processing.c ****     packet_data[0] = CMD_SET_CUFF_INPUTS;
 20506              		.loc 1 3319 0
 20507 0006 8E23     		movs	r3, #142
 20508 0008 3B71     		strb	r3, [r7, #4]
3320:..\src/command_processing.c **** 
3321:..\src/command_processing.c ****     aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].estim_curr; //Estimated Current
 20509              		.loc 1 3321 0
 20510 000a 144B     		ldr	r3, .L818
 20511 000c 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 20512 0010 1946     		mov	r1, r3
 20513 0012 134A     		ldr	r2, .L818+4
 20514 0014 3423     		movs	r3, #52
 20515 0016 03FB01F3 		mul	r3, r3, r1
 20516 001a 1344     		add	r3, r3, r2
 20517 001c 1033     		adds	r3, r3, #16
 20518 001e 1B68     		ldr	r3, [r3]
 20519 0020 1BB2     		sxth	r3, r3
 20520 0022 7B80     		strh	r3, [r7, #2]	@ movhi
3322:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 20521              		.loc 1 3322 0
 20522 0024 BB1C     		adds	r3, r7, #2
 20523 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20524 0028 BB71     		strb	r3, [r7, #6]
3323:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 20525              		.loc 1 3323 0
 20526 002a BB1C     		adds	r3, r7, #2
 20527 002c 0133     		adds	r3, r3, #1
 20528 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20529 0030 7B71     		strb	r3, [r7, #5]
3324:..\src/command_processing.c **** 
3325:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3326:..\src/command_processing.c **** 
3327:..\src/command_processing.c ****     packet_data[3] = LCRChecksum (packet_data, 3);
 20530              		.loc 1 3327 0
 20531 0032 3B1D     		adds	r3, r7, #4
 20532 0034 0321     		movs	r1, #3
 20533 0036 1846     		mov	r0, r3
 20534 0038 FFF7FEFF 		bl	LCRChecksum
 20535 003c 0346     		mov	r3, r0
 20536 003e FB71     		strb	r3, [r7, #7]
3328:..\src/command_processing.c ****     
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 461


3329:..\src/command_processing.c ****     commWriteID(packet_data, 4, g_mem.dev.id -1);
 20537              		.loc 1 3329 0
 20538 0040 064B     		ldr	r3, .L818
 20539 0042 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 20540 0046 013B     		subs	r3, r3, #1
 20541 0048 DAB2     		uxtb	r2, r3
 20542 004a 3B1D     		adds	r3, r7, #4
 20543 004c 0421     		movs	r1, #4
 20544 004e 1846     		mov	r0, r3
 20545 0050 FFF7FEFF 		bl	commWriteID
3330:..\src/command_processing.c **** }
 20546              		.loc 1 3330 0
 20547 0054 00BF     		nop
 20548 0056 0837     		adds	r7, r7, #8
 20549              		.cfi_def_cfa_offset 8
 20550 0058 BD46     		mov	sp, r7
 20551              		.cfi_def_cfa_register 13
 20552              		@ sp needed
 20553 005a 80BD     		pop	{r7, pc}
 20554              	.L819:
 20555              		.align	2
 20556              	.L818:
 20557 005c 00000000 		.word	g_mem
 20558 0060 00000000 		.word	g_measOld
 20559              		.cfi_endproc
 20560              	.LFE102:
 20561              		.size	cmd_get_currents_for_cuff, .-cmd_get_currents_for_cuff
 20562              		.section	.text.commReadResCurrFromSH,"ax",%progbits
 20563              		.align	2
 20564              		.global	commReadResCurrFromSH
 20565              		.thumb
 20566              		.thumb_func
 20567              		.type	commReadResCurrFromSH, %function
 20568              	commReadResCurrFromSH:
 20569              	.LFB103:
3331:..\src/command_processing.c **** 
3332:..\src/command_processing.c **** //==============================================================================
3333:..\src/command_processing.c **** //                                  READ RESIDUAL CURRENT FUNCTION FROM SOFTHAND
3334:..\src/command_processing.c **** //==============================================================================
3335:..\src/command_processing.c **** 
3336:..\src/command_processing.c **** int16 commReadResCurrFromSH()
3337:..\src/command_processing.c **** {
 20570              		.loc 1 3337 0
 20571              		.cfi_startproc
 20572              		@ args = 0, pretend = 0, frame = 32
 20573              		@ frame_needed = 1, uses_anonymous_args = 0
 20574 0000 80B5     		push	{r7, lr}
 20575              		.cfi_def_cfa_offset 8
 20576              		.cfi_offset 7, -8
 20577              		.cfi_offset 14, -4
 20578 0002 88B0     		sub	sp, sp, #32
 20579              		.cfi_def_cfa_offset 40
 20580 0004 00AF     		add	r7, sp, #0
 20581              		.cfi_def_cfa_register 7
3338:..\src/command_processing.c ****     uint8 packet_data[16];
3339:..\src/command_processing.c ****     uint8 packet_lenght;
3340:..\src/command_processing.c ****     int16 curr_diff = 0;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 462


 20582              		.loc 1 3340 0
 20583 0006 0023     		movs	r3, #0
 20584 0008 FB83     		strh	r3, [r7, #30]	@ movhi
3341:..\src/command_processing.c ****     uint32 t_start, t_end;
3342:..\src/command_processing.c ****     uint8 read_flag = TRUE;
 20585              		.loc 1 3342 0
 20586 000a 0123     		movs	r3, #1
 20587 000c 7B77     		strb	r3, [r7, #29]
3343:..\src/command_processing.c **** 
3344:..\src/command_processing.c ****     packet_lenght = 2;
 20588              		.loc 1 3344 0
 20589 000e 0223     		movs	r3, #2
 20590 0010 3B77     		strb	r3, [r7, #28]
3345:..\src/command_processing.c ****     packet_data[0] = CMD_GET_CURR_DIFF;
 20591              		.loc 1 3345 0
 20592 0012 8C23     		movs	r3, #140
 20593 0014 3B71     		strb	r3, [r7, #4]
3346:..\src/command_processing.c ****     packet_data[1] = CMD_GET_CURR_DIFF;
 20594              		.loc 1 3346 0
 20595 0016 8C23     		movs	r3, #140
 20596 0018 7B71     		strb	r3, [r7, #5]
3347:..\src/command_processing.c ****     commWriteID(packet_data, packet_lenght, c_mem.MS.slave_ID);
 20597              		.loc 1 3347 0
 20598 001a 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 20599 001c 99B2     		uxth	r1, r3
 20600 001e 1D4B     		ldr	r3, .L827
 20601 0020 93F8C122 		ldrb	r2, [r3, #705]	@ zero_extendqisi2
 20602 0024 3B1D     		adds	r3, r7, #4
 20603 0026 1846     		mov	r0, r3
 20604 0028 FFF7FEFF 		bl	commWriteID
3348:..\src/command_processing.c **** 
3349:..\src/command_processing.c ****     t_start = (uint32) MY_TIMER_ReadCounter();
 20605              		.loc 1 3349 0
 20606 002c FFF7FEFF 		bl	MY_TIMER_ReadCounter
 20607 0030 0346     		mov	r3, r0
 20608 0032 BB61     		str	r3, [r7, #24]
3350:..\src/command_processing.c ****     while(g_rx.buffer[0] != CMD_SET_CUFF_INPUTS) {
 20609              		.loc 1 3350 0
 20610 0034 18E0     		b	.L821
 20611              	.L824:
3351:..\src/command_processing.c ****         if (interrupt_flag){
 20612              		.loc 1 3351 0
 20613 0036 184B     		ldr	r3, .L827+4
 20614 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20615 003a 002B     		cmp	r3, #0
 20616 003c 04D0     		beq	.L822
3352:..\src/command_processing.c ****             interrupt_flag = FALSE;
 20617              		.loc 1 3352 0
 20618 003e 164B     		ldr	r3, .L827+4
 20619 0040 0022     		movs	r2, #0
 20620 0042 1A70     		strb	r2, [r3]
3353:..\src/command_processing.c ****             interrupt_manager();
 20621              		.loc 1 3353 0
 20622 0044 FFF7FEFF 		bl	interrupt_manager
 20623              	.L822:
3354:..\src/command_processing.c ****         }
3355:..\src/command_processing.c **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 463


3356:..\src/command_processing.c ****         t_end = (uint32) MY_TIMER_ReadCounter();
 20624              		.loc 1 3356 0
 20625 0048 FFF7FEFF 		bl	MY_TIMER_ReadCounter
 20626 004c 0346     		mov	r3, r0
 20627 004e 7B61     		str	r3, [r7, #20]
3357:..\src/command_processing.c ****         if((t_start - t_end) > 4500000){            // 4.5 s timeout
 20628              		.loc 1 3357 0
 20629 0050 BA69     		ldr	r2, [r7, #24]
 20630 0052 7B69     		ldr	r3, [r7, #20]
 20631 0054 D31A     		subs	r3, r2, r3
 20632 0056 114A     		ldr	r2, .L827+8
 20633 0058 9342     		cmp	r3, r2
 20634 005a 05D9     		bls	.L821
3358:..\src/command_processing.c ****             read_flag = FALSE;
 20635              		.loc 1 3358 0
 20636 005c 0023     		movs	r3, #0
 20637 005e 7B77     		strb	r3, [r7, #29]
3359:..\src/command_processing.c ****             master_mode = 0;                // Exit from master mode
 20638              		.loc 1 3359 0
 20639 0060 0F4B     		ldr	r3, .L827+12
 20640 0062 0022     		movs	r2, #0
 20641 0064 1A70     		strb	r2, [r3]
3360:..\src/command_processing.c ****             break;
 20642              		.loc 1 3360 0
 20643 0066 03E0     		b	.L823
 20644              	.L821:
3350:..\src/command_processing.c ****         if (interrupt_flag){
 20645              		.loc 1 3350 0
 20646 0068 0E4B     		ldr	r3, .L827+16
 20647 006a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20648 006c 8E2B     		cmp	r3, #142
 20649 006e E2D1     		bne	.L824
 20650              	.L823:
3361:..\src/command_processing.c ****         }
3362:..\src/command_processing.c ****     }
3363:..\src/command_processing.c **** 
3364:..\src/command_processing.c ****     if (read_flag) {
 20651              		.loc 1 3364 0
 20652 0070 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 20653 0072 002B     		cmp	r3, #0
 20654 0074 08D0     		beq	.L825
3365:..\src/command_processing.c ****         curr_diff = (int16)(g_rx.buffer[1]<<8 | g_rx.buffer[2]);                        
 20655              		.loc 1 3365 0
 20656 0076 0B4B     		ldr	r3, .L827+16
 20657 0078 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 20658 007a 1B02     		lsls	r3, r3, #8
 20659 007c 1AB2     		sxth	r2, r3
 20660 007e 094B     		ldr	r3, .L827+16
 20661 0080 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 20662 0082 1BB2     		sxth	r3, r3
 20663 0084 1343     		orrs	r3, r3, r2
 20664 0086 FB83     		strh	r3, [r7, #30]	@ movhi
 20665              	.L825:
3366:..\src/command_processing.c ****     }
3367:..\src/command_processing.c ****     
3368:..\src/command_processing.c ****     return curr_diff;
 20666              		.loc 1 3368 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 464


 20667 0088 B7F91E30 		ldrsh	r3, [r7, #30]
3369:..\src/command_processing.c **** }
 20668              		.loc 1 3369 0
 20669 008c 1846     		mov	r0, r3
 20670 008e 2037     		adds	r7, r7, #32
 20671              		.cfi_def_cfa_offset 8
 20672 0090 BD46     		mov	sp, r7
 20673              		.cfi_def_cfa_register 13
 20674              		@ sp needed
 20675 0092 80BD     		pop	{r7, pc}
 20676              	.L828:
 20677              		.align	2
 20678              	.L827:
 20679 0094 00000000 		.word	c_mem
 20680 0098 00000000 		.word	interrupt_flag
 20681 009c 20AA4400 		.word	4500000
 20682 00a0 00000000 		.word	master_mode
 20683 00a4 00000000 		.word	g_rx
 20684              		.cfi_endproc
 20685              	.LFE103:
 20686              		.size	commReadResCurrFromSH, .-commReadResCurrFromSH
 20687              		.section	.text.cmd_set_baudrate,"ax",%progbits
 20688              		.align	2
 20689              		.global	cmd_set_baudrate
 20690              		.thumb
 20691              		.thumb_func
 20692              		.type	cmd_set_baudrate, %function
 20693              	cmd_set_baudrate:
 20694              	.LFB104:
3370:..\src/command_processing.c **** 
3371:..\src/command_processing.c **** void cmd_set_baudrate(){
 20695              		.loc 1 3371 0
 20696              		.cfi_startproc
 20697              		@ args = 0, pretend = 0, frame = 0
 20698              		@ frame_needed = 1, uses_anonymous_args = 0
 20699 0000 80B5     		push	{r7, lr}
 20700              		.cfi_def_cfa_offset 8
 20701              		.cfi_offset 7, -8
 20702              		.cfi_offset 14, -4
 20703 0002 00AF     		add	r7, sp, #0
 20704              		.cfi_def_cfa_register 7
3372:..\src/command_processing.c ****     
3373:..\src/command_processing.c ****     // Set BaudRate
3374:..\src/command_processing.c ****     c_mem.dev.baud_rate = g_rx.buffer[1];
 20705              		.loc 1 3374 0
 20706 0004 094B     		ldr	r3, .L834
 20707 0006 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 20708 0008 094B     		ldr	r3, .L834+4
 20709 000a 83F8AA20 		strb	r2, [r3, #170]
3375:..\src/command_processing.c ****     
3376:..\src/command_processing.c ****     switch(g_rx.buffer[1]){
 20710              		.loc 1 3376 0
 20711 000e 074B     		ldr	r3, .L834
 20712 0010 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 20713 0012 0D2B     		cmp	r3, #13
 20714 0014 04D1     		bne	.L833
3377:..\src/command_processing.c ****         case 13:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 465


3378:..\src/command_processing.c ****             CLOCK_UART_SetDividerValue(13);
 20715              		.loc 1 3378 0
 20716 0016 0121     		movs	r1, #1
 20717 0018 0C20     		movs	r0, #12
 20718 001a FFF7FEFF 		bl	CLOCK_UART_SetDividerRegister
3379:..\src/command_processing.c ****             break;
 20719              		.loc 1 3379 0
 20720 001e 03E0     		b	.L832
 20721              	.L833:
3380:..\src/command_processing.c ****         default:
3381:..\src/command_processing.c ****             CLOCK_UART_SetDividerValue(3);
 20722              		.loc 1 3381 0
 20723 0020 0121     		movs	r1, #1
 20724 0022 0220     		movs	r0, #2
 20725 0024 FFF7FEFF 		bl	CLOCK_UART_SetDividerRegister
 20726              	.L832:
3382:..\src/command_processing.c ****     }
3383:..\src/command_processing.c **** }
 20727              		.loc 1 3383 0
 20728 0028 00BF     		nop
 20729 002a 80BD     		pop	{r7, pc}
 20730              	.L835:
 20731              		.align	2
 20732              	.L834:
 20733 002c 00000000 		.word	g_rx
 20734 0030 00000000 		.word	c_mem
 20735              		.cfi_endproc
 20736              	.LFE104:
 20737              		.size	cmd_set_baudrate, .-cmd_set_baudrate
 20738              		.section	.text.cmd_ping,"ax",%progbits
 20739              		.align	2
 20740              		.global	cmd_ping
 20741              		.thumb
 20742              		.thumb_func
 20743              		.type	cmd_ping, %function
 20744              	cmd_ping:
 20745              	.LFB105:
3384:..\src/command_processing.c **** 
3385:..\src/command_processing.c **** void cmd_ping(){
 20746              		.loc 1 3385 0
 20747              		.cfi_startproc
 20748              		@ args = 0, pretend = 0, frame = 8
 20749              		@ frame_needed = 1, uses_anonymous_args = 0
 20750 0000 80B5     		push	{r7, lr}
 20751              		.cfi_def_cfa_offset 8
 20752              		.cfi_offset 7, -8
 20753              		.cfi_offset 14, -4
 20754 0002 82B0     		sub	sp, sp, #8
 20755              		.cfi_def_cfa_offset 16
 20756 0004 00AF     		add	r7, sp, #0
 20757              		.cfi_def_cfa_register 7
3386:..\src/command_processing.c **** 
3387:..\src/command_processing.c ****     uint8 packet_data[2];
3388:..\src/command_processing.c **** 
3389:..\src/command_processing.c ****     // Header
3390:..\src/command_processing.c ****     packet_data[0] = CMD_PING;
 20758              		.loc 1 3390 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 466


 20759 0006 0023     		movs	r3, #0
 20760 0008 3B71     		strb	r3, [r7, #4]
3391:..\src/command_processing.c ****     
3392:..\src/command_processing.c ****     // Load Payload
3393:..\src/command_processing.c ****     packet_data[1] = CMD_PING;
 20761              		.loc 1 3393 0
 20762 000a 0023     		movs	r3, #0
 20763 000c 7B71     		strb	r3, [r7, #5]
3394:..\src/command_processing.c **** 
3395:..\src/command_processing.c ****     // Send Package to uart
3396:..\src/command_processing.c ****     commWrite(packet_data, 2);
 20764              		.loc 1 3396 0
 20765 000e 3B1D     		adds	r3, r7, #4
 20766 0010 0221     		movs	r1, #2
 20767 0012 1846     		mov	r0, r3
 20768 0014 FFF7FEFF 		bl	commWrite
3397:..\src/command_processing.c **** }
 20769              		.loc 1 3397 0
 20770 0018 00BF     		nop
 20771 001a 0837     		adds	r7, r7, #8
 20772              		.cfi_def_cfa_offset 8
 20773 001c BD46     		mov	sp, r7
 20774              		.cfi_def_cfa_register 13
 20775              		@ sp needed
 20776 001e 80BD     		pop	{r7, pc}
 20777              		.cfi_endproc
 20778              	.LFE105:
 20779              		.size	cmd_ping, .-cmd_ping
 20780              		.section	.text.cmd_get_inputs,"ax",%progbits
 20781              		.align	2
 20782              		.global	cmd_get_inputs
 20783              		.thumb
 20784              		.thumb_func
 20785              		.type	cmd_get_inputs, %function
 20786              	cmd_get_inputs:
 20787              	.LFB106:
3398:..\src/command_processing.c **** 
3399:..\src/command_processing.c **** void cmd_get_inputs(){
 20788              		.loc 1 3399 0
 20789              		.cfi_startproc
 20790              		@ args = 0, pretend = 0, frame = 16
 20791              		@ frame_needed = 1, uses_anonymous_args = 0
 20792 0000 80B5     		push	{r7, lr}
 20793              		.cfi_def_cfa_offset 8
 20794              		.cfi_offset 7, -8
 20795              		.cfi_offset 14, -4
 20796 0002 84B0     		sub	sp, sp, #16
 20797              		.cfi_def_cfa_offset 24
 20798 0004 00AF     		add	r7, sp, #0
 20799              		.cfi_def_cfa_register 7
3400:..\src/command_processing.c **** 
3401:..\src/command_processing.c ****     // Packet: header + motor_measure(int16) + crc
3402:..\src/command_processing.c **** 
3403:..\src/command_processing.c ****     uint8 packet_data[6]; 
3404:..\src/command_processing.c ****     int16 aux_int16;
3405:..\src/command_processing.c ****     
3406:..\src/command_processing.c ****     //Header package
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 467


3407:..\src/command_processing.c **** 
3408:..\src/command_processing.c ****     packet_data[0] = CMD_GET_INPUTS;
 20800              		.loc 1 3408 0
 20801 0006 8323     		movs	r3, #131
 20802 0008 3B72     		strb	r3, [r7, #8]
3409:..\src/command_processing.c ****         
3410:..\src/command_processing.c ****     aux_int16 = (int16)(g_refOld[0].pos >> g_mem.enc[g_mem.motor[0].encoder_line].res[0]);
 20803              		.loc 1 3410 0
 20804 000a 234B     		ldr	r3, .L838
 20805 000c 1A68     		ldr	r2, [r3]
 20806 000e 234B     		ldr	r3, .L838+4
 20807 0010 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 20808 0014 1846     		mov	r0, r3
 20809 0016 2149     		ldr	r1, .L838+4
 20810 0018 0346     		mov	r3, r0
 20811 001a 5B00     		lsls	r3, r3, #1
 20812 001c 0344     		add	r3, r3, r0
 20813 001e 1B01     		lsls	r3, r3, #4
 20814 0020 0B44     		add	r3, r3, r1
 20815 0022 03F29513 		addw	r3, r3, #405
 20816 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20817 0028 42FA03F3 		asr	r3, r2, r3
 20818 002c 1BB2     		sxth	r3, r3
 20819 002e FB80     		strh	r3, [r7, #6]	@ movhi
3411:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 20820              		.loc 1 3411 0
 20821 0030 BB1D     		adds	r3, r7, #6
 20822 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20823 0034 BB72     		strb	r3, [r7, #10]
3412:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 20824              		.loc 1 3412 0
 20825 0036 BB1D     		adds	r3, r7, #6
 20826 0038 0133     		adds	r3, r3, #1
 20827 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20828 003c 7B72     		strb	r3, [r7, #9]
3413:..\src/command_processing.c ****     aux_int16 = (int16)(g_refOld[1].pos >> g_mem.enc[g_mem.motor[1].encoder_line].res[0]);
 20829              		.loc 1 3413 0
 20830 003e 164B     		ldr	r3, .L838
 20831 0040 1A69     		ldr	r2, [r3, #16]
 20832 0042 164B     		ldr	r3, .L838+4
 20833 0044 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 20834 0048 1846     		mov	r0, r3
 20835 004a 1449     		ldr	r1, .L838+4
 20836 004c 0346     		mov	r3, r0
 20837 004e 5B00     		lsls	r3, r3, #1
 20838 0050 0344     		add	r3, r3, r0
 20839 0052 1B01     		lsls	r3, r3, #4
 20840 0054 0B44     		add	r3, r3, r1
 20841 0056 03F29513 		addw	r3, r3, #405
 20842 005a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20843 005c 42FA03F3 		asr	r3, r2, r3
 20844 0060 1BB2     		sxth	r3, r3
 20845 0062 FB80     		strh	r3, [r7, #6]	@ movhi
3414:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
 20846              		.loc 1 3414 0
 20847 0064 BB1D     		adds	r3, r7, #6
 20848 0066 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 468


 20849 0068 3B73     		strb	r3, [r7, #12]
3415:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
 20850              		.loc 1 3415 0
 20851 006a BB1D     		adds	r3, r7, #6
 20852 006c 0133     		adds	r3, r3, #1
 20853 006e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20854 0070 FB72     		strb	r3, [r7, #11]
3416:..\src/command_processing.c ****     
3417:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3418:..\src/command_processing.c **** 
3419:..\src/command_processing.c ****     packet_data[5] = LCRChecksum(packet_data, 5);
 20855              		.loc 1 3419 0
 20856 0072 07F10803 		add	r3, r7, #8
 20857 0076 0521     		movs	r1, #5
 20858 0078 1846     		mov	r0, r3
 20859 007a FFF7FEFF 		bl	LCRChecksum
 20860 007e 0346     		mov	r3, r0
 20861 0080 7B73     		strb	r3, [r7, #13]
3420:..\src/command_processing.c **** 
3421:..\src/command_processing.c ****     commWrite(packet_data, 6);
 20862              		.loc 1 3421 0
 20863 0082 07F10803 		add	r3, r7, #8
 20864 0086 0621     		movs	r1, #6
 20865 0088 1846     		mov	r0, r3
 20866 008a FFF7FEFF 		bl	commWrite
3422:..\src/command_processing.c **** }
 20867              		.loc 1 3422 0
 20868 008e 00BF     		nop
 20869 0090 1037     		adds	r7, r7, #16
 20870              		.cfi_def_cfa_offset 8
 20871 0092 BD46     		mov	sp, r7
 20872              		.cfi_def_cfa_register 13
 20873              		@ sp needed
 20874 0094 80BD     		pop	{r7, pc}
 20875              	.L839:
 20876 0096 00BF     		.align	2
 20877              	.L838:
 20878 0098 00000000 		.word	g_refOld
 20879 009c 00000000 		.word	g_mem
 20880              		.cfi_endproc
 20881              	.LFE106:
 20882              		.size	cmd_get_inputs, .-cmd_get_inputs
 20883              		.global	__aeabi_f2iz
 20884              		.global	__aeabi_fmul
 20885              		.section	.text.cmd_store_params,"ax",%progbits
 20886              		.align	2
 20887              		.global	cmd_store_params
 20888              		.thumb
 20889              		.thumb_func
 20890              		.type	cmd_store_params, %function
 20891              	cmd_store_params:
 20892              	.LFB107:
3423:..\src/command_processing.c **** 
3424:..\src/command_processing.c **** void cmd_store_params(){
 20893              		.loc 1 3424 0
 20894              		.cfi_startproc
 20895              		@ args = 0, pretend = 0, frame = 16
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 469


 20896              		@ frame_needed = 1, uses_anonymous_args = 0
 20897 0000 80B5     		push	{r7, lr}
 20898              		.cfi_def_cfa_offset 8
 20899              		.cfi_offset 7, -8
 20900              		.cfi_offset 14, -4
 20901 0002 84B0     		sub	sp, sp, #16
 20902              		.cfi_def_cfa_offset 24
 20903 0004 00AF     		add	r7, sp, #0
 20904              		.cfi_def_cfa_register 7
3425:..\src/command_processing.c ****     
3426:..\src/command_processing.c ****     // Check input mode enabled
3427:..\src/command_processing.c ****     uint32 off_1;
3428:..\src/command_processing.c ****     float mult_1;
3429:..\src/command_processing.c ****     uint8 CYDATA packet_lenght = 2;
 20905              		.loc 1 3429 0
 20906 0006 0223     		movs	r3, #2
 20907 0008 FB73     		strb	r3, [r7, #15]
3430:..\src/command_processing.c ****     uint8 CYDATA packet_data[2];
3431:..\src/command_processing.c ****     uint8 CYDATA old_id;
3432:..\src/command_processing.c ****     
3433:..\src/command_processing.c ****     if( c_mem.motor[0].input_mode == INPUT_MODE_EXTERNAL ) {
 20908              		.loc 1 3433 0
 20909 000a 674B     		ldr	r3, .L851
 20910 000c 93F80E31 		ldrb	r3, [r3, #270]	@ zero_extendqisi2
 20911 0010 002B     		cmp	r3, #0
 20912 0012 7CD1     		bne	.L841
3434:..\src/command_processing.c ****         off_1 = c_mem.enc[c_mem.motor[0].encoder_line].m_off[0];
 20913              		.loc 1 3434 0
 20914 0014 644B     		ldr	r3, .L851
 20915 0016 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 20916 001a 1946     		mov	r1, r3
 20917 001c 624A     		ldr	r2, .L851
 20918 001e 0B46     		mov	r3, r1
 20919 0020 5B00     		lsls	r3, r3, #1
 20920 0022 0B44     		add	r3, r3, r1
 20921 0024 1B01     		lsls	r3, r3, #4
 20922 0026 1344     		add	r3, r3, r2
 20923 0028 03F5CC73 		add	r3, r3, #408
 20924 002c 1B68     		ldr	r3, [r3]
 20925 002e BB60     		str	r3, [r7, #8]
3435:..\src/command_processing.c ****         mult_1 = c_mem.enc[c_mem.motor[0].encoder_line].m_mult[0];
 20926              		.loc 1 3435 0
 20927 0030 5D4B     		ldr	r3, .L851
 20928 0032 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 20929 0036 1946     		mov	r1, r3
 20930 0038 5B4A     		ldr	r2, .L851
 20931 003a 0B46     		mov	r3, r1
 20932 003c 5B00     		lsls	r3, r3, #1
 20933 003e 0B44     		add	r3, r3, r1
 20934 0040 1B01     		lsls	r3, r3, #4
 20935 0042 1344     		add	r3, r3, r2
 20936 0044 03F5D273 		add	r3, r3, #420
 20937 0048 1B68     		ldr	r3, [r3]	@ float
 20938 004a 7B60     		str	r3, [r7, #4]	@ float
3436:..\src/command_processing.c **** 
3437:..\src/command_processing.c ****         g_refNew[0].pos = (int32)((float)g_refNew[0].pos / mult_1);
 20939              		.loc 1 3437 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 470


 20940 004c 574B     		ldr	r3, .L851+4
 20941 004e 1B68     		ldr	r3, [r3]
 20942 0050 1846     		mov	r0, r3
 20943 0052 FFF7FEFF 		bl	__aeabi_i2f
 20944 0056 0346     		mov	r3, r0
 20945 0058 7968     		ldr	r1, [r7, #4]	@ float
 20946 005a 1846     		mov	r0, r3
 20947 005c FFF7FEFF 		bl	__aeabi_fdiv
 20948 0060 0346     		mov	r3, r0
 20949 0062 1846     		mov	r0, r3
 20950 0064 FFF7FEFF 		bl	__aeabi_f2iz
 20951 0068 0246     		mov	r2, r0
 20952 006a 504B     		ldr	r3, .L851+4
 20953 006c 1A60     		str	r2, [r3]
3438:..\src/command_processing.c **** 
3439:..\src/command_processing.c ****         g_refNew[0].pos = (int32)((float)g_refNew[0].pos * g_mem.enc[c_mem.motor[0].encoder_line].m
 20954              		.loc 1 3439 0
 20955 006e 4F4B     		ldr	r3, .L851+4
 20956 0070 1B68     		ldr	r3, [r3]
 20957 0072 1846     		mov	r0, r3
 20958 0074 FFF7FEFF 		bl	__aeabi_i2f
 20959 0078 4B4B     		ldr	r3, .L851
 20960 007a 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 20961 007e 1946     		mov	r1, r3
 20962 0080 4B4A     		ldr	r2, .L851+8
 20963 0082 0B46     		mov	r3, r1
 20964 0084 5B00     		lsls	r3, r3, #1
 20965 0086 0B44     		add	r3, r3, r1
 20966 0088 1B01     		lsls	r3, r3, #4
 20967 008a 1344     		add	r3, r3, r2
 20968 008c 03F5D273 		add	r3, r3, #420
 20969 0090 1B68     		ldr	r3, [r3]	@ float
 20970 0092 1946     		mov	r1, r3
 20971 0094 FFF7FEFF 		bl	__aeabi_fmul
 20972 0098 0346     		mov	r3, r0
 20973 009a 1846     		mov	r0, r3
 20974 009c FFF7FEFF 		bl	__aeabi_f2iz
 20975 00a0 0246     		mov	r2, r0
 20976 00a2 424B     		ldr	r3, .L851+4
 20977 00a4 1A60     		str	r2, [r3]
3440:..\src/command_processing.c **** 
3441:..\src/command_processing.c ****         g_refNew[0].pos += (g_mem.enc[c_mem.motor[0].encoder_line].m_off[0] - off_1);
 20978              		.loc 1 3441 0
 20979 00a6 414B     		ldr	r3, .L851+4
 20980 00a8 1B68     		ldr	r3, [r3]
 20981 00aa 1846     		mov	r0, r3
 20982 00ac 3E4B     		ldr	r3, .L851
 20983 00ae 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 20984 00b2 1946     		mov	r1, r3
 20985 00b4 3E4A     		ldr	r2, .L851+8
 20986 00b6 0B46     		mov	r3, r1
 20987 00b8 5B00     		lsls	r3, r3, #1
 20988 00ba 0B44     		add	r3, r3, r1
 20989 00bc 1B01     		lsls	r3, r3, #4
 20990 00be 1344     		add	r3, r3, r2
 20991 00c0 03F5CC73 		add	r3, r3, #408
 20992 00c4 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 471


 20993 00c6 1A46     		mov	r2, r3
 20994 00c8 BB68     		ldr	r3, [r7, #8]
 20995 00ca D31A     		subs	r3, r2, r3
 20996 00cc 0344     		add	r3, r3, r0
 20997 00ce 1A46     		mov	r2, r3
 20998 00d0 364B     		ldr	r3, .L851+4
 20999 00d2 1A60     		str	r2, [r3]
3442:..\src/command_processing.c ****         
3443:..\src/command_processing.c ****         // Check position Limits
3444:..\src/command_processing.c **** 
3445:..\src/command_processing.c ****         if (c_mem.motor[0].pos_lim_flag) {                   // position limiting
 21000              		.loc 1 3445 0
 21001 00d4 344B     		ldr	r3, .L851
 21002 00d6 93F8E330 		ldrb	r3, [r3, #227]	@ zero_extendqisi2
 21003 00da 002B     		cmp	r3, #0
 21004 00dc 17D0     		beq	.L841
3446:..\src/command_processing.c ****             if (g_refNew[0].pos < c_mem.motor[0].pos_lim_inf) 
 21005              		.loc 1 3446 0
 21006 00de 334B     		ldr	r3, .L851+4
 21007 00e0 1A68     		ldr	r2, [r3]
 21008 00e2 314B     		ldr	r3, .L851
 21009 00e4 D3F8E430 		ldr	r3, [r3, #228]
 21010 00e8 9A42     		cmp	r2, r3
 21011 00ea 04DA     		bge	.L842
3447:..\src/command_processing.c ****                 g_refNew[0].pos = c_mem.motor[0].pos_lim_inf;
 21012              		.loc 1 3447 0
 21013 00ec 2E4B     		ldr	r3, .L851
 21014 00ee D3F8E430 		ldr	r3, [r3, #228]
 21015 00f2 2E4A     		ldr	r2, .L851+4
 21016 00f4 1360     		str	r3, [r2]
 21017              	.L842:
3448:..\src/command_processing.c **** 
3449:..\src/command_processing.c ****             if (g_refNew[0].pos > c_mem.motor[0].pos_lim_sup) 
 21018              		.loc 1 3449 0
 21019 00f6 2D4B     		ldr	r3, .L851+4
 21020 00f8 1A68     		ldr	r2, [r3]
 21021 00fa 2B4B     		ldr	r3, .L851
 21022 00fc D3F8E830 		ldr	r3, [r3, #232]
 21023 0100 9A42     		cmp	r2, r3
 21024 0102 04DD     		ble	.L841
3450:..\src/command_processing.c ****                 g_refNew[0].pos = c_mem.motor[0].pos_lim_sup;
 21025              		.loc 1 3450 0
 21026 0104 284B     		ldr	r3, .L851
 21027 0106 D3F8E830 		ldr	r3, [r3, #232]
 21028 010a 284A     		ldr	r2, .L851+4
 21029 010c 1360     		str	r3, [r2]
 21030              	.L841:
3451:..\src/command_processing.c ****         }
3452:..\src/command_processing.c ****     }
3453:..\src/command_processing.c ****     
3454:..\src/command_processing.c ****     // If SD is used, create new param and data file
3455:..\src/command_processing.c ****     if (c_mem.exp.read_exp_port_flag == EXP_SD_RTC) {
 21031              		.loc 1 3455 0
 21032 010e 264B     		ldr	r3, .L851
 21033 0110 93F82632 		ldrb	r3, [r3, #550]	@ zero_extendqisi2
 21034 0114 012B     		cmp	r3, #1
 21035 0116 06D1     		bne	.L843
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 472


3456:..\src/command_processing.c ****         FS_FClose(pFile);
 21036              		.loc 1 3456 0
 21037 0118 264B     		ldr	r3, .L851+12
 21038 011a 1B68     		ldr	r3, [r3]
 21039 011c 1846     		mov	r0, r3
 21040 011e FFF7FEFF 		bl	FS_FClose
3457:..\src/command_processing.c ****         
3458:..\src/command_processing.c ****         InitSD_FS();
 21041              		.loc 1 3458 0
 21042 0122 FFF7FEFF 		bl	InitSD_FS
 21043              	.L843:
3459:..\src/command_processing.c ****     }
3460:..\src/command_processing.c ****    
3461:..\src/command_processing.c ****     // Store params 
3462:..\src/command_processing.c **** 
3463:..\src/command_processing.c ****     if (c_mem.dev.id != g_mem.dev.id) {     //If a new id is going to be set we will lose communica
 21044              		.loc 1 3463 0
 21045 0126 204B     		ldr	r3, .L851
 21046 0128 93F8A020 		ldrb	r2, [r3, #160]	@ zero_extendqisi2
 21047 012c 204B     		ldr	r3, .L851+8
 21048 012e 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 21049 0132 9A42     		cmp	r2, r3
 21050 0134 21D0     		beq	.L844
3464:..\src/command_processing.c ****         old_id = c_mem.dev.id;          //after the memstore(0) and the ACK won't be recognised
 21051              		.loc 1 3464 0
 21052 0136 1C4B     		ldr	r3, .L851
 21053 0138 93F8A030 		ldrb	r3, [r3, #160]
 21054 013c FB70     		strb	r3, [r7, #3]
3465:..\src/command_processing.c ****         if(memStore(0)) {
 21055              		.loc 1 3465 0
 21056 013e 0020     		movs	r0, #0
 21057 0140 FFF7FEFF 		bl	memStore
 21058 0144 0346     		mov	r3, r0
 21059 0146 002B     		cmp	r3, #0
 21060 0148 0BD0     		beq	.L845
3466:..\src/command_processing.c ****             packet_data[0] = ACK_OK;
 21061              		.loc 1 3466 0
 21062 014a 0123     		movs	r3, #1
 21063 014c 3B70     		strb	r3, [r7]
3467:..\src/command_processing.c ****             packet_data[1] = ACK_OK;
 21064              		.loc 1 3467 0
 21065 014e 0123     		movs	r3, #1
 21066 0150 7B70     		strb	r3, [r7, #1]
3468:..\src/command_processing.c ****             commWrite_old_id(packet_data, packet_lenght, old_id);
 21067              		.loc 1 3468 0
 21068 0152 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 21069 0154 99B2     		uxth	r1, r3
 21070 0156 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 21071 0158 3B46     		mov	r3, r7
 21072 015a 1846     		mov	r0, r3
 21073 015c FFF7FEFF 		bl	commWrite_old_id
 21074 0160 18E0     		b	.L847
 21075              	.L845:
3469:..\src/command_processing.c ****         }    
3470:..\src/command_processing.c ****         else{
3471:..\src/command_processing.c ****             packet_data[0] = ACK_ERROR;
 21076              		.loc 1 3471 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 473


 21077 0162 0023     		movs	r3, #0
 21078 0164 3B70     		strb	r3, [r7]
3472:..\src/command_processing.c ****             packet_data[1] = ACK_ERROR;
 21079              		.loc 1 3472 0
 21080 0166 0023     		movs	r3, #0
 21081 0168 7B70     		strb	r3, [r7, #1]
3473:..\src/command_processing.c ****             commWrite_old_id(packet_data, packet_lenght, old_id);
 21082              		.loc 1 3473 0
 21083 016a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 21084 016c 99B2     		uxth	r1, r3
 21085 016e FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 21086 0170 3B46     		mov	r3, r7
 21087 0172 1846     		mov	r0, r3
 21088 0174 FFF7FEFF 		bl	commWrite_old_id
 21089 0178 0CE0     		b	.L847
 21090              	.L844:
3474:..\src/command_processing.c ****         }
3475:..\src/command_processing.c ****     }    
3476:..\src/command_processing.c ****     else {
3477:..\src/command_processing.c ****         if(memStore(0))
 21091              		.loc 1 3477 0
 21092 017a 0020     		movs	r0, #0
 21093 017c FFF7FEFF 		bl	memStore
 21094 0180 0346     		mov	r3, r0
 21095 0182 002B     		cmp	r3, #0
 21096 0184 03D0     		beq	.L848
3478:..\src/command_processing.c ****             sendAcknowledgment(ACK_OK);
 21097              		.loc 1 3478 0
 21098 0186 0120     		movs	r0, #1
 21099 0188 FFF7FEFF 		bl	sendAcknowledgment
 21100 018c 02E0     		b	.L847
 21101              	.L848:
3479:..\src/command_processing.c ****         else
3480:..\src/command_processing.c ****             sendAcknowledgment(ACK_ERROR);
 21102              		.loc 1 3480 0
 21103 018e 0020     		movs	r0, #0
 21104 0190 FFF7FEFF 		bl	sendAcknowledgment
 21105              	.L847:
3481:..\src/command_processing.c ****     }
3482:..\src/command_processing.c ****     
3483:..\src/command_processing.c ****     // FW reset (if necessary)
3484:..\src/command_processing.c ****     if (reset_PSoC_flag == TRUE) {
 21106              		.loc 1 3484 0
 21107 0194 084B     		ldr	r3, .L851+16
 21108 0196 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21109 0198 012B     		cmp	r3, #1
 21110 019a 01D1     		bne	.L850
3485:..\src/command_processing.c ****         CySoftwareReset();
 21111              		.loc 1 3485 0
 21112 019c FFF7FEFF 		bl	CySoftwareReset
 21113              	.L850:
3486:..\src/command_processing.c ****     }
3487:..\src/command_processing.c **** }
 21114              		.loc 1 3487 0
 21115 01a0 00BF     		nop
 21116 01a2 1037     		adds	r7, r7, #16
 21117              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 474


 21118 01a4 BD46     		mov	sp, r7
 21119              		.cfi_def_cfa_register 13
 21120              		@ sp needed
 21121 01a6 80BD     		pop	{r7, pc}
 21122              	.L852:
 21123              		.align	2
 21124              	.L851:
 21125 01a8 00000000 		.word	c_mem
 21126 01ac 00000000 		.word	g_refNew
 21127 01b0 00000000 		.word	g_mem
 21128 01b4 00000000 		.word	pFile
 21129 01b8 00000000 		.word	reset_PSoC_flag
 21130              		.cfi_endproc
 21131              	.LFE107:
 21132              		.size	cmd_store_params, .-cmd_store_params
 21133              		.section	.text.cmd_get_emg,"ax",%progbits
 21134              		.align	2
 21135              		.global	cmd_get_emg
 21136              		.thumb
 21137              		.thumb_func
 21138              		.type	cmd_get_emg, %function
 21139              	cmd_get_emg:
 21140              	.LFB108:
3488:..\src/command_processing.c **** 
3489:..\src/command_processing.c **** void cmd_get_emg(){
 21141              		.loc 1 3489 0
 21142              		.cfi_startproc
 21143              		@ args = 0, pretend = 0, frame = 16
 21144              		@ frame_needed = 1, uses_anonymous_args = 0
 21145 0000 80B5     		push	{r7, lr}
 21146              		.cfi_def_cfa_offset 8
 21147              		.cfi_offset 7, -8
 21148              		.cfi_offset 14, -4
 21149 0002 84B0     		sub	sp, sp, #16
 21150              		.cfi_def_cfa_offset 24
 21151 0004 00AF     		add	r7, sp, #0
 21152              		.cfi_def_cfa_register 7
3490:..\src/command_processing.c ****     
3491:..\src/command_processing.c ****     uint8 packet_data[6];
3492:..\src/command_processing.c ****     int16 aux_int16;
3493:..\src/command_processing.c ****     
3494:..\src/command_processing.c ****     // Header        
3495:..\src/command_processing.c ****     packet_data[0] = CMD_GET_EMG;
 21153              		.loc 1 3495 0
 21154 0006 8823     		movs	r3, #136
 21155 0008 3B72     		strb	r3, [r7, #8]
3496:..\src/command_processing.c ****     
3497:..\src/command_processing.c ****     aux_int16 = (int16) g_adc_measOld.emg[0];
 21156              		.loc 1 3497 0
 21157 000a 144B     		ldr	r3, .L854
 21158 000c 1B68     		ldr	r3, [r3]
 21159 000e 1BB2     		sxth	r3, r3
 21160 0010 FB80     		strh	r3, [r7, #6]	@ movhi
3498:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 21161              		.loc 1 3498 0
 21162 0012 BB1D     		adds	r3, r7, #6
 21163 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 475


 21164 0016 BB72     		strb	r3, [r7, #10]
3499:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 21165              		.loc 1 3499 0
 21166 0018 BB1D     		adds	r3, r7, #6
 21167 001a 0133     		adds	r3, r3, #1
 21168 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21169 001e 7B72     		strb	r3, [r7, #9]
3500:..\src/command_processing.c ****     
3501:..\src/command_processing.c ****     aux_int16 = (int16) g_adc_measOld.emg[1];
 21170              		.loc 1 3501 0
 21171 0020 0E4B     		ldr	r3, .L854
 21172 0022 5B68     		ldr	r3, [r3, #4]
 21173 0024 1BB2     		sxth	r3, r3
 21174 0026 FB80     		strh	r3, [r7, #6]	@ movhi
3502:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
 21175              		.loc 1 3502 0
 21176 0028 BB1D     		adds	r3, r7, #6
 21177 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21178 002c 3B73     		strb	r3, [r7, #12]
3503:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
 21179              		.loc 1 3503 0
 21180 002e BB1D     		adds	r3, r7, #6
 21181 0030 0133     		adds	r3, r3, #1
 21182 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21183 0034 FB72     		strb	r3, [r7, #11]
3504:..\src/command_processing.c **** 
3505:..\src/command_processing.c ****     packet_data[5] = LCRChecksum (packet_data, 5);
 21184              		.loc 1 3505 0
 21185 0036 07F10803 		add	r3, r7, #8
 21186 003a 0521     		movs	r1, #5
 21187 003c 1846     		mov	r0, r3
 21188 003e FFF7FEFF 		bl	LCRChecksum
 21189 0042 0346     		mov	r3, r0
 21190 0044 7B73     		strb	r3, [r7, #13]
3506:..\src/command_processing.c **** 
3507:..\src/command_processing.c ****     commWrite(packet_data, 6);
 21191              		.loc 1 3507 0
 21192 0046 07F10803 		add	r3, r7, #8
 21193 004a 0621     		movs	r1, #6
 21194 004c 1846     		mov	r0, r3
 21195 004e FFF7FEFF 		bl	commWrite
3508:..\src/command_processing.c **** 
3509:..\src/command_processing.c **** }
 21196              		.loc 1 3509 0
 21197 0052 00BF     		nop
 21198 0054 1037     		adds	r7, r7, #16
 21199              		.cfi_def_cfa_offset 8
 21200 0056 BD46     		mov	sp, r7
 21201              		.cfi_def_cfa_register 13
 21202              		@ sp needed
 21203 0058 80BD     		pop	{r7, pc}
 21204              	.L855:
 21205 005a 00BF     		.align	2
 21206              	.L854:
 21207 005c 00000000 		.word	g_adc_measOld
 21208              		.cfi_endproc
 21209              	.LFE108:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 476


 21210              		.size	cmd_get_emg, .-cmd_get_emg
 21211              		.section	.text.cmd_get_imu_readings,"ax",%progbits
 21212              		.align	2
 21213              		.global	cmd_get_imu_readings
 21214              		.thumb
 21215              		.thumb_func
 21216              		.type	cmd_get_imu_readings, %function
 21217              	cmd_get_imu_readings:
 21218              	.LFB109:
3510:..\src/command_processing.c **** 
3511:..\src/command_processing.c **** void cmd_get_imu_readings(){
 21219              		.loc 1 3511 0
 21220              		.cfi_startproc
 21221              		@ args = 0, pretend = 0, frame = 400
 21222              		@ frame_needed = 1, uses_anonymous_args = 0
 21223 0000 90B5     		push	{r4, r7, lr}
 21224              		.cfi_def_cfa_offset 12
 21225              		.cfi_offset 4, -12
 21226              		.cfi_offset 7, -8
 21227              		.cfi_offset 14, -4
 21228 0002 E5B0     		sub	sp, sp, #404
 21229              		.cfi_def_cfa_offset 416
 21230 0004 00AF     		add	r7, sp, #0
 21231              		.cfi_def_cfa_register 7
3512:..\src/command_processing.c ****     //Retrieve accelerometers, gyroscopes, magnetometers, quaternions and temperatures readings
3513:..\src/command_processing.c ****     
3514:..\src/command_processing.c ****     uint8 k_imu;
3515:..\src/command_processing.c ****     uint16 c = 1;
 21232              		.loc 1 3515 0
 21233 0006 0123     		movs	r3, #1
 21234 0008 A7F88C31 		strh	r3, [r7, #396]	@ movhi
3516:..\src/command_processing.c ****     uint8 k = 0;
 21235              		.loc 1 3516 0
 21236 000c 0023     		movs	r3, #0
 21237 000e 87F88B31 		strb	r3, [r7, #395]
3517:..\src/command_processing.c ****     uint16 gl_c = 1;
 21238              		.loc 1 3517 0
 21239 0012 0123     		movs	r3, #1
 21240 0014 A7F88831 		strh	r3, [r7, #392]	@ movhi
3518:..\src/command_processing.c ****     int16 aux_int16;
3519:..\src/command_processing.c ****     float aux_float;
3520:..\src/command_processing.c ****     
3521:..\src/command_processing.c ****     // Packet: header + imu id(uint8) + imu flags(uint8) + crc  
3522:..\src/command_processing.c ****     uint8 packet_data[350];
3523:..\src/command_processing.c ****     uint8 single_packet[32];
3524:..\src/command_processing.c ****     
3525:..\src/command_processing.c ****     //Header package 
3526:..\src/command_processing.c ****     packet_data[0] = CMD_GET_IMU_READINGS;
 21241              		.loc 1 3526 0
 21242 0018 07F12003 		add	r3, r7, #32
 21243 001c A122     		movs	r2, #161
 21244 001e 1A70     		strb	r2, [r3]
3527:..\src/command_processing.c ****  
3528:..\src/command_processing.c ****     for (k_imu = 0; k_imu < N_IMU_Connected; k_imu++) 
 21245              		.loc 1 3528 0
 21246 0020 0023     		movs	r3, #0
 21247 0022 87F88F31 		strb	r3, [r7, #399]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 477


 21248 0026 82E2     		b	.L857
 21249              	.L873:
3529:..\src/command_processing.c ****     {	
3530:..\src/command_processing.c ****             
3531:..\src/command_processing.c ****         single_packet[0] = (uint8) 0x3A; //':';
 21250              		.loc 1 3531 0
 21251 0028 3B46     		mov	r3, r7
 21252 002a 3A22     		movs	r2, #58
 21253 002c 1A70     		strb	r2, [r3]
3532:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][0]){
 21254              		.loc 1 3532 0
 21255 002e 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 21256 0032 DB4A     		ldr	r2, .L874
 21257 0034 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 21258 0036 1946     		mov	r1, r3
 21259 0038 DA4A     		ldr	r2, .L874+4
 21260 003a 0B46     		mov	r3, r1
 21261 003c 9B00     		lsls	r3, r3, #2
 21262 003e 0B44     		add	r3, r3, r1
 21263 0040 1344     		add	r3, r3, r2
 21264 0042 03F20223 		addw	r3, r3, #514
 21265 0046 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21266 0048 002B     		cmp	r3, #0
 21267 004a 5DD0     		beq	.L858
3533:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].accel_value[0];
 21268              		.loc 1 3533 0
 21269 004c 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 21270 0050 D549     		ldr	r1, .L874+8
 21271 0052 1346     		mov	r3, r2
 21272 0054 9B00     		lsls	r3, r3, #2
 21273 0056 1344     		add	r3, r3, r2
 21274 0058 DB00     		lsls	r3, r3, #3
 21275 005a 0B44     		add	r3, r3, r1
 21276 005c 0233     		adds	r3, r3, #2
 21277 005e B3F90030 		ldrsh	r3, [r3]
 21278 0062 A7F88631 		strh	r3, [r7, #390]	@ movhi
3534:..\src/command_processing.c ****             single_packet[c + 1] = ((char*)(&aux_int16))[0];
 21279              		.loc 1 3534 0
 21280 0066 B7F88C31 		ldrh	r3, [r7, #396]
 21281 006a 0133     		adds	r3, r3, #1
 21282 006c 07F5C372 		add	r2, r7, #390
 21283 0070 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 21284 0072 3A46     		mov	r2, r7
 21285 0074 D154     		strb	r1, [r2, r3]
3535:..\src/command_processing.c ****             single_packet[c] = ((char*)(&aux_int16))[1];
 21286              		.loc 1 3535 0
 21287 0076 B7F88C21 		ldrh	r2, [r7, #396]
 21288 007a 07F5C373 		add	r3, r7, #390
 21289 007e 0133     		adds	r3, r3, #1
 21290 0080 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 21291 0082 3B46     		mov	r3, r7
 21292 0084 9954     		strb	r1, [r3, r2]
3536:..\src/command_processing.c **** 
3537:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].accel_value[1];
 21293              		.loc 1 3537 0
 21294 0086 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 21295 008a C749     		ldr	r1, .L874+8
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 478


 21296 008c 1346     		mov	r3, r2
 21297 008e 9B00     		lsls	r3, r3, #2
 21298 0090 1344     		add	r3, r3, r2
 21299 0092 DB00     		lsls	r3, r3, #3
 21300 0094 0B44     		add	r3, r3, r1
 21301 0096 0433     		adds	r3, r3, #4
 21302 0098 B3F90030 		ldrsh	r3, [r3]
 21303 009c A7F88631 		strh	r3, [r7, #390]	@ movhi
3538:..\src/command_processing.c ****             single_packet[c + 3] = ((char*)(&aux_int16))[0];
 21304              		.loc 1 3538 0
 21305 00a0 B7F88C31 		ldrh	r3, [r7, #396]
 21306 00a4 0333     		adds	r3, r3, #3
 21307 00a6 07F5C372 		add	r2, r7, #390
 21308 00aa 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 21309 00ac 3A46     		mov	r2, r7
 21310 00ae D154     		strb	r1, [r2, r3]
3539:..\src/command_processing.c ****             single_packet[c + 2] = ((char*)(&aux_int16))[1];
 21311              		.loc 1 3539 0
 21312 00b0 B7F88C31 		ldrh	r3, [r7, #396]
 21313 00b4 9A1C     		adds	r2, r3, #2
 21314 00b6 07F5C373 		add	r3, r7, #390
 21315 00ba 0133     		adds	r3, r3, #1
 21316 00bc 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 21317 00be 3B46     		mov	r3, r7
 21318 00c0 9954     		strb	r1, [r3, r2]
3540:..\src/command_processing.c **** 
3541:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].accel_value[2];
 21319              		.loc 1 3541 0
 21320 00c2 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 21321 00c6 B849     		ldr	r1, .L874+8
 21322 00c8 1346     		mov	r3, r2
 21323 00ca 9B00     		lsls	r3, r3, #2
 21324 00cc 1344     		add	r3, r3, r2
 21325 00ce DB00     		lsls	r3, r3, #3
 21326 00d0 0B44     		add	r3, r3, r1
 21327 00d2 0633     		adds	r3, r3, #6
 21328 00d4 B3F90030 		ldrsh	r3, [r3]
 21329 00d8 A7F88631 		strh	r3, [r7, #390]	@ movhi
3542:..\src/command_processing.c ****             single_packet[c + 5] = ((char*)(&aux_int16))[0];
 21330              		.loc 1 3542 0
 21331 00dc B7F88C31 		ldrh	r3, [r7, #396]
 21332 00e0 0533     		adds	r3, r3, #5
 21333 00e2 07F5C372 		add	r2, r7, #390
 21334 00e6 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 21335 00e8 3A46     		mov	r2, r7
 21336 00ea D154     		strb	r1, [r2, r3]
3543:..\src/command_processing.c ****             single_packet[c + 4] = ((char*)(&aux_int16))[1];
 21337              		.loc 1 3543 0
 21338 00ec B7F88C31 		ldrh	r3, [r7, #396]
 21339 00f0 1A1D     		adds	r2, r3, #4
 21340 00f2 07F5C373 		add	r3, r7, #390
 21341 00f6 0133     		adds	r3, r3, #1
 21342 00f8 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 21343 00fa 3B46     		mov	r3, r7
 21344 00fc 9954     		strb	r1, [r3, r2]
3544:..\src/command_processing.c **** 
3545:..\src/command_processing.c ****             c = c + 6;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 479


 21345              		.loc 1 3545 0
 21346 00fe B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 21347 0102 0633     		adds	r3, r3, #6
 21348 0104 A7F88C31 		strh	r3, [r7, #396]	@ movhi
 21349              	.L858:
3546:..\src/command_processing.c ****         }
3547:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][1]){
 21350              		.loc 1 3547 0
 21351 0108 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 21352 010c A44A     		ldr	r2, .L874
 21353 010e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 21354 0110 1946     		mov	r1, r3
 21355 0112 A44A     		ldr	r2, .L874+4
 21356 0114 0B46     		mov	r3, r1
 21357 0116 9B00     		lsls	r3, r3, #2
 21358 0118 0B44     		add	r3, r3, r1
 21359 011a 1344     		add	r3, r3, r2
 21360 011c 03F20323 		addw	r3, r3, #515
 21361 0120 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21362 0122 002B     		cmp	r3, #0
 21363 0124 5DD0     		beq	.L859
3548:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].gyro_value[0];
 21364              		.loc 1 3548 0
 21365 0126 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 21366 012a 9F49     		ldr	r1, .L874+8
 21367 012c 1346     		mov	r3, r2
 21368 012e 9B00     		lsls	r3, r3, #2
 21369 0130 1344     		add	r3, r3, r2
 21370 0132 DB00     		lsls	r3, r3, #3
 21371 0134 0B44     		add	r3, r3, r1
 21372 0136 0833     		adds	r3, r3, #8
 21373 0138 B3F90030 		ldrsh	r3, [r3]
 21374 013c A7F88631 		strh	r3, [r7, #390]	@ movhi
3549:..\src/command_processing.c ****             single_packet[c + 1] = ((char*)(&aux_int16))[0];
 21375              		.loc 1 3549 0
 21376 0140 B7F88C31 		ldrh	r3, [r7, #396]
 21377 0144 0133     		adds	r3, r3, #1
 21378 0146 07F5C372 		add	r2, r7, #390
 21379 014a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 21380 014c 3A46     		mov	r2, r7
 21381 014e D154     		strb	r1, [r2, r3]
3550:..\src/command_processing.c ****             single_packet[c] = ((char*)(&aux_int16))[1];
 21382              		.loc 1 3550 0
 21383 0150 B7F88C21 		ldrh	r2, [r7, #396]
 21384 0154 07F5C373 		add	r3, r7, #390
 21385 0158 0133     		adds	r3, r3, #1
 21386 015a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 21387 015c 3B46     		mov	r3, r7
 21388 015e 9954     		strb	r1, [r3, r2]
3551:..\src/command_processing.c **** 
3552:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].gyro_value[1];
 21389              		.loc 1 3552 0
 21390 0160 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 21391 0164 9049     		ldr	r1, .L874+8
 21392 0166 1346     		mov	r3, r2
 21393 0168 9B00     		lsls	r3, r3, #2
 21394 016a 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 480


 21395 016c DB00     		lsls	r3, r3, #3
 21396 016e 0B44     		add	r3, r3, r1
 21397 0170 0A33     		adds	r3, r3, #10
 21398 0172 B3F90030 		ldrsh	r3, [r3]
 21399 0176 A7F88631 		strh	r3, [r7, #390]	@ movhi
3553:..\src/command_processing.c ****             single_packet[c + 3] = ((char*)(&aux_int16))[0];
 21400              		.loc 1 3553 0
 21401 017a B7F88C31 		ldrh	r3, [r7, #396]
 21402 017e 0333     		adds	r3, r3, #3
 21403 0180 07F5C372 		add	r2, r7, #390
 21404 0184 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 21405 0186 3A46     		mov	r2, r7
 21406 0188 D154     		strb	r1, [r2, r3]
3554:..\src/command_processing.c ****             single_packet[c + 2] = ((char*)(&aux_int16))[1];
 21407              		.loc 1 3554 0
 21408 018a B7F88C31 		ldrh	r3, [r7, #396]
 21409 018e 9A1C     		adds	r2, r3, #2
 21410 0190 07F5C373 		add	r3, r7, #390
 21411 0194 0133     		adds	r3, r3, #1
 21412 0196 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 21413 0198 3B46     		mov	r3, r7
 21414 019a 9954     		strb	r1, [r3, r2]
3555:..\src/command_processing.c **** 
3556:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].gyro_value[2];
 21415              		.loc 1 3556 0
 21416 019c 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 21417 01a0 8149     		ldr	r1, .L874+8
 21418 01a2 1346     		mov	r3, r2
 21419 01a4 9B00     		lsls	r3, r3, #2
 21420 01a6 1344     		add	r3, r3, r2
 21421 01a8 DB00     		lsls	r3, r3, #3
 21422 01aa 0B44     		add	r3, r3, r1
 21423 01ac 0C33     		adds	r3, r3, #12
 21424 01ae B3F90030 		ldrsh	r3, [r3]
 21425 01b2 A7F88631 		strh	r3, [r7, #390]	@ movhi
3557:..\src/command_processing.c ****             single_packet[c + 5] = ((char*)(&aux_int16))[0];
 21426              		.loc 1 3557 0
 21427 01b6 B7F88C31 		ldrh	r3, [r7, #396]
 21428 01ba 0533     		adds	r3, r3, #5
 21429 01bc 07F5C372 		add	r2, r7, #390
 21430 01c0 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 21431 01c2 3A46     		mov	r2, r7
 21432 01c4 D154     		strb	r1, [r2, r3]
3558:..\src/command_processing.c ****             single_packet[c + 4] = ((char*)(&aux_int16))[1];
 21433              		.loc 1 3558 0
 21434 01c6 B7F88C31 		ldrh	r3, [r7, #396]
 21435 01ca 1A1D     		adds	r2, r3, #4
 21436 01cc 07F5C373 		add	r3, r7, #390
 21437 01d0 0133     		adds	r3, r3, #1
 21438 01d2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 21439 01d4 3B46     		mov	r3, r7
 21440 01d6 9954     		strb	r1, [r3, r2]
3559:..\src/command_processing.c **** 
3560:..\src/command_processing.c ****             c = c + 6;
 21441              		.loc 1 3560 0
 21442 01d8 B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 21443 01dc 0633     		adds	r3, r3, #6
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 481


 21444 01de A7F88C31 		strh	r3, [r7, #396]	@ movhi
 21445              	.L859:
3561:..\src/command_processing.c ****         }
3562:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][2]){
 21446              		.loc 1 3562 0
 21447 01e2 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 21448 01e6 6E4A     		ldr	r2, .L874
 21449 01e8 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 21450 01ea 1946     		mov	r1, r3
 21451 01ec 6D4A     		ldr	r2, .L874+4
 21452 01ee 0B46     		mov	r3, r1
 21453 01f0 9B00     		lsls	r3, r3, #2
 21454 01f2 0B44     		add	r3, r3, r1
 21455 01f4 1344     		add	r3, r3, r2
 21456 01f6 03F50173 		add	r3, r3, #516
 21457 01fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21458 01fc 002B     		cmp	r3, #0
 21459 01fe 5DD0     		beq	.L860
3563:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].mag_value[0];
 21460              		.loc 1 3563 0
 21461 0200 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 21462 0204 6849     		ldr	r1, .L874+8
 21463 0206 1346     		mov	r3, r2
 21464 0208 9B00     		lsls	r3, r3, #2
 21465 020a 1344     		add	r3, r3, r2
 21466 020c DB00     		lsls	r3, r3, #3
 21467 020e 0B44     		add	r3, r3, r1
 21468 0210 0E33     		adds	r3, r3, #14
 21469 0212 B3F90030 		ldrsh	r3, [r3]
 21470 0216 A7F88631 		strh	r3, [r7, #390]	@ movhi
3564:..\src/command_processing.c ****             single_packet[c + 1] = ((char*)(&aux_int16))[0];
 21471              		.loc 1 3564 0
 21472 021a B7F88C31 		ldrh	r3, [r7, #396]
 21473 021e 0133     		adds	r3, r3, #1
 21474 0220 07F5C372 		add	r2, r7, #390
 21475 0224 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 21476 0226 3A46     		mov	r2, r7
 21477 0228 D154     		strb	r1, [r2, r3]
3565:..\src/command_processing.c ****             single_packet[c] = ((char*)(&aux_int16))[1];
 21478              		.loc 1 3565 0
 21479 022a B7F88C21 		ldrh	r2, [r7, #396]
 21480 022e 07F5C373 		add	r3, r7, #390
 21481 0232 0133     		adds	r3, r3, #1
 21482 0234 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 21483 0236 3B46     		mov	r3, r7
 21484 0238 9954     		strb	r1, [r3, r2]
3566:..\src/command_processing.c **** 
3567:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].mag_value[1];
 21485              		.loc 1 3567 0
 21486 023a 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 21487 023e 5A49     		ldr	r1, .L874+8
 21488 0240 1346     		mov	r3, r2
 21489 0242 9B00     		lsls	r3, r3, #2
 21490 0244 1344     		add	r3, r3, r2
 21491 0246 DB00     		lsls	r3, r3, #3
 21492 0248 0B44     		add	r3, r3, r1
 21493 024a 1033     		adds	r3, r3, #16
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 482


 21494 024c B3F90030 		ldrsh	r3, [r3]
 21495 0250 A7F88631 		strh	r3, [r7, #390]	@ movhi
3568:..\src/command_processing.c ****             single_packet[c + 3] = ((char*)(&aux_int16))[0];
 21496              		.loc 1 3568 0
 21497 0254 B7F88C31 		ldrh	r3, [r7, #396]
 21498 0258 0333     		adds	r3, r3, #3
 21499 025a 07F5C372 		add	r2, r7, #390
 21500 025e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 21501 0260 3A46     		mov	r2, r7
 21502 0262 D154     		strb	r1, [r2, r3]
3569:..\src/command_processing.c ****             single_packet[c + 2] = ((char*)(&aux_int16))[1];
 21503              		.loc 1 3569 0
 21504 0264 B7F88C31 		ldrh	r3, [r7, #396]
 21505 0268 9A1C     		adds	r2, r3, #2
 21506 026a 07F5C373 		add	r3, r7, #390
 21507 026e 0133     		adds	r3, r3, #1
 21508 0270 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 21509 0272 3B46     		mov	r3, r7
 21510 0274 9954     		strb	r1, [r3, r2]
3570:..\src/command_processing.c **** 
3571:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].mag_value[2];
 21511              		.loc 1 3571 0
 21512 0276 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 21513 027a 4B49     		ldr	r1, .L874+8
 21514 027c 1346     		mov	r3, r2
 21515 027e 9B00     		lsls	r3, r3, #2
 21516 0280 1344     		add	r3, r3, r2
 21517 0282 DB00     		lsls	r3, r3, #3
 21518 0284 0B44     		add	r3, r3, r1
 21519 0286 1233     		adds	r3, r3, #18
 21520 0288 B3F90030 		ldrsh	r3, [r3]
 21521 028c A7F88631 		strh	r3, [r7, #390]	@ movhi
3572:..\src/command_processing.c ****             single_packet[c + 5] = ((char*)(&aux_int16))[0];
 21522              		.loc 1 3572 0
 21523 0290 B7F88C31 		ldrh	r3, [r7, #396]
 21524 0294 0533     		adds	r3, r3, #5
 21525 0296 07F5C372 		add	r2, r7, #390
 21526 029a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 21527 029c 3A46     		mov	r2, r7
 21528 029e D154     		strb	r1, [r2, r3]
3573:..\src/command_processing.c ****             single_packet[c + 4] = ((char*)(&aux_int16))[1];
 21529              		.loc 1 3573 0
 21530 02a0 B7F88C31 		ldrh	r3, [r7, #396]
 21531 02a4 1A1D     		adds	r2, r3, #4
 21532 02a6 07F5C373 		add	r3, r7, #390
 21533 02aa 0133     		adds	r3, r3, #1
 21534 02ac 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 21535 02ae 3B46     		mov	r3, r7
 21536 02b0 9954     		strb	r1, [r3, r2]
3574:..\src/command_processing.c **** 
3575:..\src/command_processing.c ****             c = c + 6;
 21537              		.loc 1 3575 0
 21538 02b2 B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 21539 02b6 0633     		adds	r3, r3, #6
 21540 02b8 A7F88C31 		strh	r3, [r7, #396]	@ movhi
 21541              	.L860:
3576:..\src/command_processing.c ****         }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 483


3577:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][3]){
 21542              		.loc 1 3577 0
 21543 02bc 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 21544 02c0 374A     		ldr	r2, .L874
 21545 02c2 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 21546 02c4 1946     		mov	r1, r3
 21547 02c6 374A     		ldr	r2, .L874+4
 21548 02c8 0B46     		mov	r3, r1
 21549 02ca 9B00     		lsls	r3, r3, #2
 21550 02cc 0B44     		add	r3, r3, r1
 21551 02ce 1344     		add	r3, r3, r2
 21552 02d0 03F20523 		addw	r3, r3, #517
 21553 02d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21554 02d6 002B     		cmp	r3, #0
 21555 02d8 00F0AF80 		beq	.L861
3578:..\src/command_processing.c ****             aux_float = (float) g_imu[k_imu].quat_value[0];
 21556              		.loc 1 3578 0
 21557 02dc 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 21558 02e0 3149     		ldr	r1, .L874+8
 21559 02e2 1346     		mov	r3, r2
 21560 02e4 9B00     		lsls	r3, r3, #2
 21561 02e6 1344     		add	r3, r3, r2
 21562 02e8 DB00     		lsls	r3, r3, #3
 21563 02ea 0B44     		add	r3, r3, r1
 21564 02ec 1433     		adds	r3, r3, #20
 21565 02ee 1B68     		ldr	r3, [r3]	@ float
 21566 02f0 C7F88031 		str	r3, [r7, #384]	@ float
3579:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 21567              		.loc 1 3579 0
 21568 02f4 0023     		movs	r3, #0
 21569 02f6 87F88B31 		strb	r3, [r7, #395]
 21570 02fa 13E0     		b	.L862
 21571              	.L863:
3580:..\src/command_processing.c ****                 single_packet[c + 4 - k -1] = ((char*)(&aux_float))[k];
 21572              		.loc 1 3580 0 discriminator 3
 21573 02fc B7F88C31 		ldrh	r3, [r7, #396]
 21574 0300 1A1D     		adds	r2, r3, #4
 21575 0302 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 21576 0306 D31A     		subs	r3, r2, r3
 21577 0308 013B     		subs	r3, r3, #1
 21578 030a 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 21579 030e 07F5C071 		add	r1, r7, #384
 21580 0312 0A44     		add	r2, r2, r1
 21581 0314 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 21582 0316 3A46     		mov	r2, r7
 21583 0318 D154     		strb	r1, [r2, r3]
3579:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 21584              		.loc 1 3579 0 discriminator 3
 21585 031a 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 21586 031e 0133     		adds	r3, r3, #1
 21587 0320 87F88B31 		strb	r3, [r7, #395]
 21588              	.L862:
3579:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 21589              		.loc 1 3579 0 is_stmt 0 discriminator 1
 21590 0324 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 21591 0328 032B     		cmp	r3, #3
 21592 032a E7D9     		bls	.L863
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 484


3581:..\src/command_processing.c ****             }
3582:..\src/command_processing.c **** 
3583:..\src/command_processing.c ****             aux_float = (float) g_imu[k_imu].quat_value[1];
 21593              		.loc 1 3583 0 is_stmt 1
 21594 032c 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 21595 0330 1D49     		ldr	r1, .L874+8
 21596 0332 1346     		mov	r3, r2
 21597 0334 9B00     		lsls	r3, r3, #2
 21598 0336 1344     		add	r3, r3, r2
 21599 0338 DB00     		lsls	r3, r3, #3
 21600 033a 0B44     		add	r3, r3, r1
 21601 033c 1833     		adds	r3, r3, #24
 21602 033e 1B68     		ldr	r3, [r3]	@ float
 21603 0340 C7F88031 		str	r3, [r7, #384]	@ float
3584:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 21604              		.loc 1 3584 0
 21605 0344 0023     		movs	r3, #0
 21606 0346 87F88B31 		strb	r3, [r7, #395]
 21607 034a 14E0     		b	.L864
 21608              	.L865:
3585:..\src/command_processing.c ****                 single_packet[c + 8 - k -1] = ((char*)(&aux_float))[k];
 21609              		.loc 1 3585 0 discriminator 3
 21610 034c B7F88C31 		ldrh	r3, [r7, #396]
 21611 0350 03F10802 		add	r2, r3, #8
 21612 0354 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 21613 0358 D31A     		subs	r3, r2, r3
 21614 035a 013B     		subs	r3, r3, #1
 21615 035c 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 21616 0360 07F5C071 		add	r1, r7, #384
 21617 0364 0A44     		add	r2, r2, r1
 21618 0366 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 21619 0368 3A46     		mov	r2, r7
 21620 036a D154     		strb	r1, [r2, r3]
3584:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 21621              		.loc 1 3584 0 discriminator 3
 21622 036c 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 21623 0370 0133     		adds	r3, r3, #1
 21624 0372 87F88B31 		strb	r3, [r7, #395]
 21625              	.L864:
3584:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 21626              		.loc 1 3584 0 is_stmt 0 discriminator 1
 21627 0376 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 21628 037a 032B     		cmp	r3, #3
 21629 037c E6D9     		bls	.L865
3586:..\src/command_processing.c ****             }
3587:..\src/command_processing.c **** 
3588:..\src/command_processing.c ****             aux_float = (float) g_imu[k_imu].quat_value[2];
 21630              		.loc 1 3588 0 is_stmt 1
 21631 037e 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 21632 0382 0949     		ldr	r1, .L874+8
 21633 0384 1346     		mov	r3, r2
 21634 0386 9B00     		lsls	r3, r3, #2
 21635 0388 1344     		add	r3, r3, r2
 21636 038a DB00     		lsls	r3, r3, #3
 21637 038c 0B44     		add	r3, r3, r1
 21638 038e 1C33     		adds	r3, r3, #28
 21639 0390 1B68     		ldr	r3, [r3]	@ float
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 485


 21640 0392 C7F88031 		str	r3, [r7, #384]	@ float
3589:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 21641              		.loc 1 3589 0
 21642 0396 0023     		movs	r3, #0
 21643 0398 87F88B31 		strb	r3, [r7, #395]
 21644 039c 1BE0     		b	.L866
 21645              	.L875:
 21646 039e 00BF     		.align	2
 21647              	.L874:
 21648 03a0 00000000 		.word	IMU_connected
 21649 03a4 00000000 		.word	c_mem
 21650 03a8 00000000 		.word	g_imu
 21651              	.L867:
3590:..\src/command_processing.c ****                 single_packet[c + 12 - k -1] = ((char*)(&aux_float))[k];
 21652              		.loc 1 3590 0 discriminator 3
 21653 03ac B7F88C31 		ldrh	r3, [r7, #396]
 21654 03b0 03F10C02 		add	r2, r3, #12
 21655 03b4 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 21656 03b8 D31A     		subs	r3, r2, r3
 21657 03ba 013B     		subs	r3, r3, #1
 21658 03bc 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 21659 03c0 07F5C071 		add	r1, r7, #384
 21660 03c4 0A44     		add	r2, r2, r1
 21661 03c6 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 21662 03c8 3A46     		mov	r2, r7
 21663 03ca D154     		strb	r1, [r2, r3]
3589:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 21664              		.loc 1 3589 0 discriminator 3
 21665 03cc 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 21666 03d0 0133     		adds	r3, r3, #1
 21667 03d2 87F88B31 		strb	r3, [r7, #395]
 21668              	.L866:
3589:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 21669              		.loc 1 3589 0 is_stmt 0 discriminator 1
 21670 03d6 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 21671 03da 032B     		cmp	r3, #3
 21672 03dc E6D9     		bls	.L867
3591:..\src/command_processing.c ****             }
3592:..\src/command_processing.c **** 
3593:..\src/command_processing.c ****             aux_float = (float) g_imu[k_imu].quat_value[3];
 21673              		.loc 1 3593 0 is_stmt 1
 21674 03de 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 21675 03e2 6749     		ldr	r1, .L876
 21676 03e4 1346     		mov	r3, r2
 21677 03e6 9B00     		lsls	r3, r3, #2
 21678 03e8 1344     		add	r3, r3, r2
 21679 03ea DB00     		lsls	r3, r3, #3
 21680 03ec 0B44     		add	r3, r3, r1
 21681 03ee 2033     		adds	r3, r3, #32
 21682 03f0 1B68     		ldr	r3, [r3]	@ float
 21683 03f2 C7F88031 		str	r3, [r7, #384]	@ float
3594:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 21684              		.loc 1 3594 0
 21685 03f6 0023     		movs	r3, #0
 21686 03f8 87F88B31 		strb	r3, [r7, #395]
 21687 03fc 14E0     		b	.L868
 21688              	.L869:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 486


3595:..\src/command_processing.c ****                 single_packet[c + 16 - k -1] = ((char*)(&aux_float))[k];
 21689              		.loc 1 3595 0 discriminator 3
 21690 03fe B7F88C31 		ldrh	r3, [r7, #396]
 21691 0402 03F11002 		add	r2, r3, #16
 21692 0406 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 21693 040a D31A     		subs	r3, r2, r3
 21694 040c 013B     		subs	r3, r3, #1
 21695 040e 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 21696 0412 07F5C071 		add	r1, r7, #384
 21697 0416 0A44     		add	r2, r2, r1
 21698 0418 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 21699 041a 3A46     		mov	r2, r7
 21700 041c D154     		strb	r1, [r2, r3]
3594:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 21701              		.loc 1 3594 0 discriminator 3
 21702 041e 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 21703 0422 0133     		adds	r3, r3, #1
 21704 0424 87F88B31 		strb	r3, [r7, #395]
 21705              	.L868:
3594:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 21706              		.loc 1 3594 0 is_stmt 0 discriminator 1
 21707 0428 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 21708 042c 032B     		cmp	r3, #3
 21709 042e E6D9     		bls	.L869
3596:..\src/command_processing.c ****             }
3597:..\src/command_processing.c ****             c = c + 16;
 21710              		.loc 1 3597 0 is_stmt 1
 21711 0430 B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 21712 0434 1033     		adds	r3, r3, #16
 21713 0436 A7F88C31 		strh	r3, [r7, #396]	@ movhi
 21714              	.L861:
3598:..\src/command_processing.c ****         }
3599:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][4]){
 21715              		.loc 1 3599 0
 21716 043a 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 21717 043e 514A     		ldr	r2, .L876+4
 21718 0440 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 21719 0442 1946     		mov	r1, r3
 21720 0444 504A     		ldr	r2, .L876+8
 21721 0446 0B46     		mov	r3, r1
 21722 0448 9B00     		lsls	r3, r3, #2
 21723 044a 0B44     		add	r3, r3, r1
 21724 044c 1344     		add	r3, r3, r2
 21725 044e 03F20623 		addw	r3, r3, #518
 21726 0452 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21727 0454 002B     		cmp	r3, #0
 21728 0456 21D0     		beq	.L870
3600:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].temp_value;
 21729              		.loc 1 3600 0
 21730 0458 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 21731 045c 4849     		ldr	r1, .L876
 21732 045e 1346     		mov	r3, r2
 21733 0460 9B00     		lsls	r3, r3, #2
 21734 0462 1344     		add	r3, r3, r2
 21735 0464 DB00     		lsls	r3, r3, #3
 21736 0466 0B44     		add	r3, r3, r1
 21737 0468 2433     		adds	r3, r3, #36
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 487


 21738 046a B3F90030 		ldrsh	r3, [r3]
 21739 046e A7F88631 		strh	r3, [r7, #390]	@ movhi
3601:..\src/command_processing.c ****             single_packet[c + 1] = ((char*)(&aux_int16))[0];
 21740              		.loc 1 3601 0
 21741 0472 B7F88C31 		ldrh	r3, [r7, #396]
 21742 0476 0133     		adds	r3, r3, #1
 21743 0478 07F5C372 		add	r2, r7, #390
 21744 047c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 21745 047e 3A46     		mov	r2, r7
 21746 0480 D154     		strb	r1, [r2, r3]
3602:..\src/command_processing.c ****             single_packet[c] = ((char*)(&aux_int16))[1];
 21747              		.loc 1 3602 0
 21748 0482 B7F88C21 		ldrh	r2, [r7, #396]
 21749 0486 07F5C373 		add	r3, r7, #390
 21750 048a 0133     		adds	r3, r3, #1
 21751 048c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 21752 048e 3B46     		mov	r3, r7
 21753 0490 9954     		strb	r1, [r3, r2]
3603:..\src/command_processing.c ****             c = c + 2;
 21754              		.loc 1 3603 0
 21755 0492 B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 21756 0496 0233     		adds	r3, r3, #2
 21757 0498 A7F88C31 		strh	r3, [r7, #396]	@ movhi
 21758              	.L870:
3604:..\src/command_processing.c ****         }
3605:..\src/command_processing.c ****         single_packet[single_imu_size[IMU_connected[k_imu]] - 1] = (uint8) 0x3A; //':';
 21759              		.loc 1 3605 0
 21760 049c 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 21761 04a0 384A     		ldr	r2, .L876+4
 21762 04a2 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 21763 04a4 1A46     		mov	r2, r3
 21764 04a6 394B     		ldr	r3, .L876+12
 21765 04a8 53F82230 		ldr	r3, [r3, r2, lsl #2]
 21766 04ac 013B     		subs	r3, r3, #1
 21767 04ae 3A46     		mov	r2, r7
 21768 04b0 3A21     		movs	r1, #58
 21769 04b2 D154     		strb	r1, [r2, r3]
3606:..\src/command_processing.c ****         c = 1;
 21770              		.loc 1 3606 0
 21771 04b4 0123     		movs	r3, #1
 21772 04b6 A7F88C31 		strh	r3, [r7, #396]	@ movhi
3607:..\src/command_processing.c ****                
3608:..\src/command_processing.c ****         for(k=0; k < single_imu_size[IMU_connected[k_imu]]; k++) {
 21773              		.loc 1 3608 0
 21774 04ba 0023     		movs	r3, #0
 21775 04bc 87F88B31 		strb	r3, [r7, #395]
 21776 04c0 10E0     		b	.L871
 21777              	.L872:
3609:..\src/command_processing.c ****             packet_data[gl_c + k] = (uint8) single_packet[k]; 
 21778              		.loc 1 3609 0 discriminator 3
 21779 04c2 B7F88821 		ldrh	r2, [r7, #392]
 21780 04c6 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 21781 04ca 1344     		add	r3, r3, r2
 21782 04cc 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 21783 04d0 3946     		mov	r1, r7
 21784 04d2 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 21785 04d4 07F12002 		add	r2, r7, #32
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 488


 21786 04d8 D154     		strb	r1, [r2, r3]
3608:..\src/command_processing.c ****             packet_data[gl_c + k] = (uint8) single_packet[k]; 
 21787              		.loc 1 3608 0 discriminator 3
 21788 04da 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 21789 04de 0133     		adds	r3, r3, #1
 21790 04e0 87F88B31 		strb	r3, [r7, #395]
 21791              	.L871:
3608:..\src/command_processing.c ****             packet_data[gl_c + k] = (uint8) single_packet[k]; 
 21792              		.loc 1 3608 0 is_stmt 0 discriminator 1
 21793 04e4 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 21794 04e8 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 21795 04ec 2549     		ldr	r1, .L876+4
 21796 04ee CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 21797 04f0 1946     		mov	r1, r3
 21798 04f2 264B     		ldr	r3, .L876+12
 21799 04f4 53F82130 		ldr	r3, [r3, r1, lsl #2]
 21800 04f8 9A42     		cmp	r2, r3
 21801 04fa E2DB     		blt	.L872
3610:..\src/command_processing.c ****         }
3611:..\src/command_processing.c ****         gl_c = gl_c + single_imu_size[IMU_connected[k_imu]];  
 21802              		.loc 1 3611 0 is_stmt 1 discriminator 2
 21803 04fc 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 21804 0500 204A     		ldr	r2, .L876+4
 21805 0502 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 21806 0504 1A46     		mov	r2, r3
 21807 0506 214B     		ldr	r3, .L876+12
 21808 0508 53F82230 		ldr	r3, [r3, r2, lsl #2]
 21809 050c 9AB2     		uxth	r2, r3
 21810 050e B7F88831 		ldrh	r3, [r7, #392]	@ movhi
 21811 0512 1344     		add	r3, r3, r2
 21812 0514 A7F88831 		strh	r3, [r7, #392]	@ movhi
3612:..\src/command_processing.c ****         
3613:..\src/command_processing.c ****         memset(&single_packet, 0, sizeof(single_packet));     
 21813              		.loc 1 3613 0 discriminator 2
 21814 0518 3B46     		mov	r3, r7
 21815 051a 2022     		movs	r2, #32
 21816 051c 0021     		movs	r1, #0
 21817 051e 1846     		mov	r0, r3
 21818 0520 FFF7FEFF 		bl	memset
3528:..\src/command_processing.c ****     {	
 21819              		.loc 1 3528 0 discriminator 2
 21820 0524 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 21821 0528 0133     		adds	r3, r3, #1
 21822 052a 87F88F31 		strb	r3, [r7, #399]
 21823              	.L857:
3528:..\src/command_processing.c ****     {	
 21824              		.loc 1 3528 0 is_stmt 0 discriminator 1
 21825 052e 184B     		ldr	r3, .L876+16
 21826 0530 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21827 0532 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 21828 0536 9A42     		cmp	r2, r3
 21829 0538 FFF476AD 		bcc	.L873
3614:..\src/command_processing.c ****         
3615:..\src/command_processing.c ****     }
3616:..\src/command_processing.c **** 
3617:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3618:..\src/command_processing.c ****     packet_data[imus_data_size-1] = LCRChecksum (packet_data, imus_data_size-1);
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 489


 21830              		.loc 1 3618 0 is_stmt 1
 21831 053c 154B     		ldr	r3, .L876+20
 21832 053e 1B68     		ldr	r3, [r3]
 21833 0540 5C1E     		subs	r4, r3, #1
 21834 0542 144B     		ldr	r3, .L876+20
 21835 0544 1B68     		ldr	r3, [r3]
 21836 0546 DBB2     		uxtb	r3, r3
 21837 0548 013B     		subs	r3, r3, #1
 21838 054a DAB2     		uxtb	r2, r3
 21839 054c 07F12003 		add	r3, r7, #32
 21840 0550 1146     		mov	r1, r2
 21841 0552 1846     		mov	r0, r3
 21842 0554 FFF7FEFF 		bl	LCRChecksum
 21843 0558 0346     		mov	r3, r0
 21844 055a 1A46     		mov	r2, r3
 21845 055c 07F12003 		add	r3, r7, #32
 21846 0560 1A55     		strb	r2, [r3, r4]
3619:..\src/command_processing.c ****     commWrite(packet_data, imus_data_size);
 21847              		.loc 1 3619 0
 21848 0562 0C4B     		ldr	r3, .L876+20
 21849 0564 1B68     		ldr	r3, [r3]
 21850 0566 9AB2     		uxth	r2, r3
 21851 0568 07F12003 		add	r3, r7, #32
 21852 056c 1146     		mov	r1, r2
 21853 056e 1846     		mov	r0, r3
 21854 0570 FFF7FEFF 		bl	commWrite
3620:..\src/command_processing.c **** }
 21855              		.loc 1 3620 0
 21856 0574 00BF     		nop
 21857 0576 07F5CA77 		add	r7, r7, #404
 21858              		.cfi_def_cfa_offset 12
 21859 057a BD46     		mov	sp, r7
 21860              		.cfi_def_cfa_register 13
 21861              		@ sp needed
 21862 057c 90BD     		pop	{r4, r7, pc}
 21863              	.L877:
 21864 057e 00BF     		.align	2
 21865              	.L876:
 21866 0580 00000000 		.word	g_imu
 21867 0584 00000000 		.word	IMU_connected
 21868 0588 00000000 		.word	c_mem
 21869 058c 00000000 		.word	single_imu_size
 21870 0590 00000000 		.word	N_IMU_Connected
 21871 0594 00000000 		.word	imus_data_size
 21872              		.cfi_endproc
 21873              	.LFE109:
 21874              		.size	cmd_get_imu_readings, .-cmd_get_imu_readings
 21875              		.section	.text.cmd_get_encoder_map,"ax",%progbits
 21876              		.align	2
 21877              		.global	cmd_get_encoder_map
 21878              		.thumb
 21879              		.thumb_func
 21880              		.type	cmd_get_encoder_map, %function
 21881              	cmd_get_encoder_map:
 21882              	.LFB110:
3621:..\src/command_processing.c **** 
3622:..\src/command_processing.c **** void cmd_get_encoder_map(){
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 490


 21883              		.loc 1 3622 0
 21884              		.cfi_startproc
 21885              		@ args = 0, pretend = 0, frame = 16
 21886              		@ frame_needed = 1, uses_anonymous_args = 0
 21887 0000 90B5     		push	{r4, r7, lr}
 21888              		.cfi_def_cfa_offset 12
 21889              		.cfi_offset 4, -12
 21890              		.cfi_offset 7, -8
 21891              		.cfi_offset 14, -4
 21892 0002 85B0     		sub	sp, sp, #20
 21893              		.cfi_def_cfa_offset 32
 21894 0004 00AF     		add	r7, sp, #0
 21895              		.cfi_def_cfa_register 7
3623:..\src/command_processing.c ****     //Retrieve Encoder map
3624:..\src/command_processing.c ****     
3625:..\src/command_processing.c ****     uint8 packet_data[4+N_ENCODER_LINE_MAX*N_ENCODERS_PER_LINE_MAX];
3626:..\src/command_processing.c ****     uint8 CYDATA i, j;
3627:..\src/command_processing.c ****     
3628:..\src/command_processing.c ****     // Header        
3629:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ENCODER_CONF;
 21896              		.loc 1 3629 0
 21897 0006 A323     		movs	r3, #163
 21898 0008 3B70     		strb	r3, [r7]
3630:..\src/command_processing.c ****     
3631:..\src/command_processing.c ****     // Fill payload
3632:..\src/command_processing.c ****     packet_data[1] = N_ENCODER_LINE_MAX;
 21899              		.loc 1 3632 0
 21900 000a 0223     		movs	r3, #2
 21901 000c 7B70     		strb	r3, [r7, #1]
3633:..\src/command_processing.c ****     packet_data[2] = N_ENCODERS_PER_LINE_MAX;
 21902              		.loc 1 3633 0
 21903 000e 0523     		movs	r3, #5
 21904 0010 BB70     		strb	r3, [r7, #2]
3634:..\src/command_processing.c ****     for (i=0; i<N_ENCODER_LINE_MAX; i++) {
 21905              		.loc 1 3634 0
 21906 0012 0023     		movs	r3, #0
 21907 0014 FB73     		strb	r3, [r7, #15]
 21908 0016 23E0     		b	.L879
 21909              	.L882:
3635:..\src/command_processing.c ****         for (j=0; j < N_ENCODERS_PER_LINE_MAX; j++) {
 21910              		.loc 1 3635 0
 21911 0018 0023     		movs	r3, #0
 21912 001a BB73     		strb	r3, [r7, #14]
 21913 001c 1AE0     		b	.L880
 21914              	.L881:
3636:..\src/command_processing.c ****             packet_data[3 + i*N_ENCODERS_PER_LINE_MAX + j] = c_mem.enc[i].Enc_raw_read_conf[j];
 21915              		.loc 1 3636 0 discriminator 3
 21916 001e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 21917 0020 1346     		mov	r3, r2
 21918 0022 9B00     		lsls	r3, r3, #2
 21919 0024 1344     		add	r3, r3, r2
 21920 0026 DA1C     		adds	r2, r3, #3
 21921 0028 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 21922 002a D118     		adds	r1, r2, r3
 21923 002c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 21924 002e B87B     		ldrb	r0, [r7, #14]	@ zero_extendqisi2
 21925 0030 154C     		ldr	r4, .L883
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 491


 21926 0032 1346     		mov	r3, r2
 21927 0034 5B00     		lsls	r3, r3, #1
 21928 0036 1344     		add	r3, r3, r2
 21929 0038 1B01     		lsls	r3, r3, #4
 21930 003a 2344     		add	r3, r3, r4
 21931 003c 0344     		add	r3, r3, r0
 21932 003e 03F5C873 		add	r3, r3, #400
 21933 0042 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 21934 0044 07F11003 		add	r3, r7, #16
 21935 0048 0B44     		add	r3, r3, r1
 21936 004a 03F8102C 		strb	r2, [r3, #-16]
3635:..\src/command_processing.c ****         for (j=0; j < N_ENCODERS_PER_LINE_MAX; j++) {
 21937              		.loc 1 3635 0 discriminator 3
 21938 004e BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 21939 0050 0133     		adds	r3, r3, #1
 21940 0052 BB73     		strb	r3, [r7, #14]
 21941              	.L880:
3635:..\src/command_processing.c ****         for (j=0; j < N_ENCODERS_PER_LINE_MAX; j++) {
 21942              		.loc 1 3635 0 is_stmt 0 discriminator 1
 21943 0054 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 21944 0056 042B     		cmp	r3, #4
 21945 0058 E1D9     		bls	.L881
3634:..\src/command_processing.c ****     for (i=0; i<N_ENCODER_LINE_MAX; i++) {
 21946              		.loc 1 3634 0 is_stmt 1 discriminator 2
 21947 005a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 21948 005c 0133     		adds	r3, r3, #1
 21949 005e FB73     		strb	r3, [r7, #15]
 21950              	.L879:
3634:..\src/command_processing.c ****     for (i=0; i<N_ENCODER_LINE_MAX; i++) {
 21951              		.loc 1 3634 0 is_stmt 0 discriminator 1
 21952 0060 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 21953 0062 012B     		cmp	r3, #1
 21954 0064 D8D9     		bls	.L882
3637:..\src/command_processing.c ****         }
3638:..\src/command_processing.c ****     }
3639:..\src/command_processing.c ****     
3640:..\src/command_processing.c ****     // Calculate checksum
3641:..\src/command_processing.c ****     packet_data[3+N_ENCODER_LINE_MAX*N_ENCODERS_PER_LINE_MAX] = LCRChecksum(packet_data, 3+N_ENCODE
 21955              		.loc 1 3641 0 is_stmt 1
 21956 0066 3B46     		mov	r3, r7
 21957 0068 0D21     		movs	r1, #13
 21958 006a 1846     		mov	r0, r3
 21959 006c FFF7FEFF 		bl	LCRChecksum
 21960 0070 0346     		mov	r3, r0
 21961 0072 7B73     		strb	r3, [r7, #13]
3642:..\src/command_processing.c ****     
3643:..\src/command_processing.c ****     // Send package to UART
3644:..\src/command_processing.c ****     commWrite(packet_data, 4+N_ENCODER_LINE_MAX*N_ENCODERS_PER_LINE_MAX);
 21962              		.loc 1 3644 0
 21963 0074 3B46     		mov	r3, r7
 21964 0076 0E21     		movs	r1, #14
 21965 0078 1846     		mov	r0, r3
 21966 007a FFF7FEFF 		bl	commWrite
3645:..\src/command_processing.c **** }
 21967              		.loc 1 3645 0
 21968 007e 00BF     		nop
 21969 0080 1437     		adds	r7, r7, #20
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 492


 21970              		.cfi_def_cfa_offset 12
 21971 0082 BD46     		mov	sp, r7
 21972              		.cfi_def_cfa_register 13
 21973              		@ sp needed
 21974 0084 90BD     		pop	{r4, r7, pc}
 21975              	.L884:
 21976 0086 00BF     		.align	2
 21977              	.L883:
 21978 0088 00000000 		.word	c_mem
 21979              		.cfi_endproc
 21980              	.LFE110:
 21981              		.size	cmd_get_encoder_map, .-cmd_get_encoder_map
 21982              		.section	.text.cmd_get_encoder_raw,"ax",%progbits
 21983              		.align	2
 21984              		.global	cmd_get_encoder_raw
 21985              		.thumb
 21986              		.thumb_func
 21987              		.type	cmd_get_encoder_raw, %function
 21988              	cmd_get_encoder_raw:
 21989              	.LFB111:
3646:..\src/command_processing.c **** 
3647:..\src/command_processing.c **** void cmd_get_encoder_raw(){
 21990              		.loc 1 3647 0
 21991              		.cfi_startproc
 21992              		@ args = 0, pretend = 0, frame = 32
 21993              		@ frame_needed = 1, uses_anonymous_args = 0
 21994 0000 90B5     		push	{r4, r7, lr}
 21995              		.cfi_def_cfa_offset 12
 21996              		.cfi_offset 4, -12
 21997              		.cfi_offset 7, -8
 21998              		.cfi_offset 14, -4
 21999 0002 89B0     		sub	sp, sp, #36
 22000              		.cfi_def_cfa_offset 48
 22001 0004 00AF     		add	r7, sp, #0
 22002              		.cfi_def_cfa_register 7
3648:..\src/command_processing.c ****     //Retrieve all Encoders raw values
3649:..\src/command_processing.c ****     
3650:..\src/command_processing.c ****     uint8 packet_data[2+2*N_ENCODER_LINE_MAX*N_ENCODERS_PER_LINE_MAX];
3651:..\src/command_processing.c ****     uint8 i, j, idx;
3652:..\src/command_processing.c ****     uint16 aux_uint16;
3653:..\src/command_processing.c ****     
3654:..\src/command_processing.c ****     //Header package 
3655:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ENCODER_RAW;
 22003              		.loc 1 3655 0
 22004 0006 A423     		movs	r3, #164
 22005 0008 3B71     		strb	r3, [r7, #4]
3656:..\src/command_processing.c ****  
3657:..\src/command_processing.c ****     // Fill payload
3658:..\src/command_processing.c ****     idx = 0;
 22006              		.loc 1 3658 0
 22007 000a 0023     		movs	r3, #0
 22008 000c 7B77     		strb	r3, [r7, #29]
3659:..\src/command_processing.c ****     for (i=0; i<N_ENCODER_LINE_MAX; i++) {
 22009              		.loc 1 3659 0
 22010 000e 0023     		movs	r3, #0
 22011 0010 FB77     		strb	r3, [r7, #31]
 22012 0012 3FE0     		b	.L886
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 493


 22013              	.L890:
3660:..\src/command_processing.c ****         for (j=0; j < N_Encoder_Line_Connected[i]; j++) {
 22014              		.loc 1 3660 0
 22015 0014 0023     		movs	r3, #0
 22016 0016 BB77     		strb	r3, [r7, #30]
 22017 0018 33E0     		b	.L887
 22018              	.L889:
3661:..\src/command_processing.c ****             if (c_mem.enc[i].Enc_raw_read_conf[j] == 1) {
 22019              		.loc 1 3661 0
 22020 001a FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 22021 001c B97F     		ldrb	r1, [r7, #30]	@ zero_extendqisi2
 22022 001e 3048     		ldr	r0, .L891
 22023 0020 1346     		mov	r3, r2
 22024 0022 5B00     		lsls	r3, r3, #1
 22025 0024 1344     		add	r3, r3, r2
 22026 0026 1B01     		lsls	r3, r3, #4
 22027 0028 0344     		add	r3, r3, r0
 22028 002a 0B44     		add	r3, r3, r1
 22029 002c 03F5C873 		add	r3, r3, #400
 22030 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22031 0032 012B     		cmp	r3, #1
 22032 0034 22D1     		bne	.L888
3662:..\src/command_processing.c ****                 aux_uint16 = (uint16)Encoder_Value[i][j];
 22033              		.loc 1 3662 0
 22034 0036 FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 22035 0038 B97F     		ldrb	r1, [r7, #30]	@ zero_extendqisi2
 22036 003a 2A48     		ldr	r0, .L891+4
 22037 003c 1346     		mov	r3, r2
 22038 003e 9B00     		lsls	r3, r3, #2
 22039 0040 1344     		add	r3, r3, r2
 22040 0042 0B44     		add	r3, r3, r1
 22041 0044 30F81330 		ldrh	r3, [r0, r3, lsl #1]
 22042 0048 7B80     		strh	r3, [r7, #2]	@ movhi
3663:..\src/command_processing.c ****                 packet_data[(idx << 1) + 2] = ((char*)(&aux_uint16))[0];
 22043              		.loc 1 3663 0
 22044 004a 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 22045 004c 5B00     		lsls	r3, r3, #1
 22046 004e 0233     		adds	r3, r3, #2
 22047 0050 BA1C     		adds	r2, r7, #2
 22048 0052 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 22049 0054 07F12001 		add	r1, r7, #32
 22050 0058 0B44     		add	r3, r3, r1
 22051 005a 03F81C2C 		strb	r2, [r3, #-28]
3664:..\src/command_processing.c ****                 packet_data[(idx << 1) + 1] = ((char*)(&aux_uint16))[1];
 22052              		.loc 1 3664 0
 22053 005e 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 22054 0060 5B00     		lsls	r3, r3, #1
 22055 0062 5A1C     		adds	r2, r3, #1
 22056 0064 BB1C     		adds	r3, r7, #2
 22057 0066 0133     		adds	r3, r3, #1
 22058 0068 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 22059 006a 07F12003 		add	r3, r7, #32
 22060 006e 1344     		add	r3, r3, r2
 22061 0070 0A46     		mov	r2, r1
 22062 0072 03F81C2C 		strb	r2, [r3, #-28]
3665:..\src/command_processing.c ****                 idx++;
 22063              		.loc 1 3665 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 494


 22064 0076 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 22065 0078 0133     		adds	r3, r3, #1
 22066 007a 7B77     		strb	r3, [r7, #29]
 22067              	.L888:
3660:..\src/command_processing.c ****             if (c_mem.enc[i].Enc_raw_read_conf[j] == 1) {
 22068              		.loc 1 3660 0 discriminator 2
 22069 007c BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 22070 007e 0133     		adds	r3, r3, #1
 22071 0080 BB77     		strb	r3, [r7, #30]
 22072              	.L887:
3660:..\src/command_processing.c ****             if (c_mem.enc[i].Enc_raw_read_conf[j] == 1) {
 22073              		.loc 1 3660 0 is_stmt 0 discriminator 1
 22074 0082 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 22075 0084 184A     		ldr	r2, .L891+8
 22076 0086 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 22077 0088 BA7F     		ldrb	r2, [r7, #30]	@ zero_extendqisi2
 22078 008a 9A42     		cmp	r2, r3
 22079 008c C5D3     		bcc	.L889
3659:..\src/command_processing.c ****         for (j=0; j < N_Encoder_Line_Connected[i]; j++) {
 22080              		.loc 1 3659 0 is_stmt 1 discriminator 2
 22081 008e FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 22082 0090 0133     		adds	r3, r3, #1
 22083 0092 FB77     		strb	r3, [r7, #31]
 22084              	.L886:
3659:..\src/command_processing.c ****         for (j=0; j < N_Encoder_Line_Connected[i]; j++) {
 22085              		.loc 1 3659 0 is_stmt 0 discriminator 1
 22086 0094 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 22087 0096 012B     		cmp	r3, #1
 22088 0098 BCD9     		bls	.L890
3666:..\src/command_processing.c ****             }
3667:..\src/command_processing.c ****         }
3668:..\src/command_processing.c ****     }
3669:..\src/command_processing.c **** 
3670:..\src/command_processing.c ****     // Calculate checksum
3671:..\src/command_processing.c ****     packet_data[1+2*idx] = LCRChecksum(packet_data, 1+2*idx);
 22089              		.loc 1 3671 0 is_stmt 1
 22090 009a 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 22091 009c 5B00     		lsls	r3, r3, #1
 22092 009e 5C1C     		adds	r4, r3, #1
 22093 00a0 7B7F     		ldrb	r3, [r7, #29]
 22094 00a2 5B00     		lsls	r3, r3, #1
 22095 00a4 DBB2     		uxtb	r3, r3
 22096 00a6 0133     		adds	r3, r3, #1
 22097 00a8 DAB2     		uxtb	r2, r3
 22098 00aa 3B1D     		adds	r3, r7, #4
 22099 00ac 1146     		mov	r1, r2
 22100 00ae 1846     		mov	r0, r3
 22101 00b0 FFF7FEFF 		bl	LCRChecksum
 22102 00b4 0346     		mov	r3, r0
 22103 00b6 1A46     		mov	r2, r3
 22104 00b8 07F12003 		add	r3, r7, #32
 22105 00bc 2344     		add	r3, r3, r4
 22106 00be 03F81C2C 		strb	r2, [r3, #-28]
3672:..\src/command_processing.c ****     
3673:..\src/command_processing.c ****     // Send package to UART
3674:..\src/command_processing.c ****     commWrite(packet_data, 2+2*idx);
 22107              		.loc 1 3674 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 495


 22108 00c2 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 22109 00c4 0133     		adds	r3, r3, #1
 22110 00c6 9BB2     		uxth	r3, r3
 22111 00c8 5B00     		lsls	r3, r3, #1
 22112 00ca 9AB2     		uxth	r2, r3
 22113 00cc 3B1D     		adds	r3, r7, #4
 22114 00ce 1146     		mov	r1, r2
 22115 00d0 1846     		mov	r0, r3
 22116 00d2 FFF7FEFF 		bl	commWrite
3675:..\src/command_processing.c **** }
 22117              		.loc 1 3675 0
 22118 00d6 00BF     		nop
 22119 00d8 2437     		adds	r7, r7, #36
 22120              		.cfi_def_cfa_offset 12
 22121 00da BD46     		mov	sp, r7
 22122              		.cfi_def_cfa_register 13
 22123              		@ sp needed
 22124 00dc 90BD     		pop	{r4, r7, pc}
 22125              	.L892:
 22126 00de 00BF     		.align	2
 22127              	.L891:
 22128 00e0 00000000 		.word	c_mem
 22129 00e4 00000000 		.word	Encoder_Value
 22130 00e8 00000000 		.word	N_Encoder_Line_Connected
 22131              		.cfi_endproc
 22132              	.LFE111:
 22133              		.size	cmd_get_encoder_raw, .-cmd_get_encoder_raw
 22134              		.section	.text.cmd_get_ADC_map,"ax",%progbits
 22135              		.align	2
 22136              		.global	cmd_get_ADC_map
 22137              		.thumb
 22138              		.thumb_func
 22139              		.type	cmd_get_ADC_map, %function
 22140              	cmd_get_ADC_map:
 22141              	.LFB112:
3676:..\src/command_processing.c **** 
3677:..\src/command_processing.c **** void cmd_get_ADC_map(){
 22142              		.loc 1 3677 0
 22143              		.cfi_startproc
 22144              		@ args = 0, pretend = 0, frame = 16
 22145              		@ frame_needed = 1, uses_anonymous_args = 0
 22146 0000 80B5     		push	{r7, lr}
 22147              		.cfi_def_cfa_offset 8
 22148              		.cfi_offset 7, -8
 22149              		.cfi_offset 14, -4
 22150 0002 84B0     		sub	sp, sp, #16
 22151              		.cfi_def_cfa_offset 24
 22152 0004 00AF     		add	r7, sp, #0
 22153              		.cfi_def_cfa_register 7
3678:..\src/command_processing.c ****     //Retrieve Encoder map
3679:..\src/command_processing.c ****     
3680:..\src/command_processing.c ****     uint8 packet_data[3+NUM_OF_ADC_CHANNELS_MAX];
3681:..\src/command_processing.c ****     uint8 CYDATA i;
3682:..\src/command_processing.c ****     
3683:..\src/command_processing.c ****     // Header        
3684:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ADC_CONF;
 22154              		.loc 1 3684 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 496


 22155 0006 A523     		movs	r3, #165
 22156 0008 3B70     		strb	r3, [r7]
3685:..\src/command_processing.c ****     
3686:..\src/command_processing.c ****     // Fill payload
3687:..\src/command_processing.c ****     packet_data[1] = NUM_OF_ADC_CHANNELS_MAX;
 22157              		.loc 1 3687 0
 22158 000a 0C23     		movs	r3, #12
 22159 000c 7B70     		strb	r3, [r7, #1]
3688:..\src/command_processing.c ****     for (i=0; i<NUM_OF_ADC_CHANNELS_MAX; i++) {
 22160              		.loc 1 3688 0
 22161 000e 0023     		movs	r3, #0
 22162 0010 FB73     		strb	r3, [r7, #15]
 22163 0012 0EE0     		b	.L894
 22164              	.L895:
3689:..\src/command_processing.c ****         packet_data[2 + i] = c_mem.exp.ADC_conf[i];
 22165              		.loc 1 3689 0 discriminator 3
 22166 0014 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 22167 0016 0233     		adds	r3, r3, #2
 22168 0018 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 22169 001a 0F49     		ldr	r1, .L896
 22170 001c 0A44     		add	r2, r2, r1
 22171 001e 92F82822 		ldrb	r2, [r2, #552]	@ zero_extendqisi2
 22172 0022 07F11001 		add	r1, r7, #16
 22173 0026 0B44     		add	r3, r3, r1
 22174 0028 03F8102C 		strb	r2, [r3, #-16]
3688:..\src/command_processing.c ****     for (i=0; i<NUM_OF_ADC_CHANNELS_MAX; i++) {
 22175              		.loc 1 3688 0 discriminator 3
 22176 002c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 22177 002e 0133     		adds	r3, r3, #1
 22178 0030 FB73     		strb	r3, [r7, #15]
 22179              	.L894:
3688:..\src/command_processing.c ****     for (i=0; i<NUM_OF_ADC_CHANNELS_MAX; i++) {
 22180              		.loc 1 3688 0 is_stmt 0 discriminator 1
 22181 0032 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 22182 0034 0B2B     		cmp	r3, #11
 22183 0036 EDD9     		bls	.L895
3690:..\src/command_processing.c ****     }
3691:..\src/command_processing.c ****     
3692:..\src/command_processing.c ****     // Calculate checksum
3693:..\src/command_processing.c ****     packet_data[2+NUM_OF_ADC_CHANNELS_MAX] = LCRChecksum(packet_data, 2+NUM_OF_ADC_CHANNELS_MAX);
 22184              		.loc 1 3693 0 is_stmt 1
 22185 0038 3B46     		mov	r3, r7
 22186 003a 0E21     		movs	r1, #14
 22187 003c 1846     		mov	r0, r3
 22188 003e FFF7FEFF 		bl	LCRChecksum
 22189 0042 0346     		mov	r3, r0
 22190 0044 BB73     		strb	r3, [r7, #14]
3694:..\src/command_processing.c ****     
3695:..\src/command_processing.c ****     // Send package to UART
3696:..\src/command_processing.c ****     commWrite(packet_data, 3+NUM_OF_ADC_CHANNELS_MAX);
 22191              		.loc 1 3696 0
 22192 0046 3B46     		mov	r3, r7
 22193 0048 0F21     		movs	r1, #15
 22194 004a 1846     		mov	r0, r3
 22195 004c FFF7FEFF 		bl	commWrite
3697:..\src/command_processing.c ****     
3698:..\src/command_processing.c **** }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 497


 22196              		.loc 1 3698 0
 22197 0050 00BF     		nop
 22198 0052 1037     		adds	r7, r7, #16
 22199              		.cfi_def_cfa_offset 8
 22200 0054 BD46     		mov	sp, r7
 22201              		.cfi_def_cfa_register 13
 22202              		@ sp needed
 22203 0056 80BD     		pop	{r7, pc}
 22204              	.L897:
 22205              		.align	2
 22206              	.L896:
 22207 0058 00000000 		.word	c_mem
 22208              		.cfi_endproc
 22209              	.LFE112:
 22210              		.size	cmd_get_ADC_map, .-cmd_get_ADC_map
 22211              		.section	.text.cmd_get_ADC_raw,"ax",%progbits
 22212              		.align	2
 22213              		.global	cmd_get_ADC_raw
 22214              		.thumb
 22215              		.thumb_func
 22216              		.type	cmd_get_ADC_raw, %function
 22217              	cmd_get_ADC_raw:
 22218              	.LFB113:
3699:..\src/command_processing.c **** 
3700:..\src/command_processing.c **** void cmd_get_ADC_raw(){
 22219              		.loc 1 3700 0
 22220              		.cfi_startproc
 22221              		@ args = 0, pretend = 0, frame = 32
 22222              		@ frame_needed = 1, uses_anonymous_args = 0
 22223 0000 90B5     		push	{r4, r7, lr}
 22224              		.cfi_def_cfa_offset 12
 22225              		.cfi_offset 4, -12
 22226              		.cfi_offset 7, -8
 22227              		.cfi_offset 14, -4
 22228 0002 89B0     		sub	sp, sp, #36
 22229              		.cfi_def_cfa_offset 48
 22230 0004 00AF     		add	r7, sp, #0
 22231              		.cfi_def_cfa_register 7
3701:..\src/command_processing.c ****     //Retrieve Additional EMG port raw values
3702:..\src/command_processing.c ****     
3703:..\src/command_processing.c ****     uint8 packet_data[2+2*NUM_OF_ADC_CHANNELS_MAX];
3704:..\src/command_processing.c ****     uint8 CYDATA i, idx = 0;
 22232              		.loc 1 3704 0
 22233 0006 0023     		movs	r3, #0
 22234 0008 BB77     		strb	r3, [r7, #30]
3705:..\src/command_processing.c ****     int16 aux_int16;
3706:..\src/command_processing.c ****     
3707:..\src/command_processing.c ****     // Header        
3708:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ADC_RAW;
 22235              		.loc 1 3708 0
 22236 000a A623     		movs	r3, #166
 22237 000c 3B71     		strb	r3, [r7, #4]
3709:..\src/command_processing.c ****     
3710:..\src/command_processing.c ****     // Fill payload
3711:..\src/command_processing.c ****     for (i = 0; i < NUM_OF_ANALOG_INPUTS; i++) {       
 22238              		.loc 1 3711 0
 22239 000e 0023     		movs	r3, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 498


 22240 0010 FB77     		strb	r3, [r7, #31]
 22241 0012 27E0     		b	.L899
 22242              	.L901:
3712:..\src/command_processing.c ****         if (c_mem.exp.ADC_conf[i] == 1) {
 22243              		.loc 1 3712 0
 22244 0014 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 22245 0016 274A     		ldr	r2, .L902
 22246 0018 1344     		add	r3, r3, r2
 22247 001a 93F82832 		ldrb	r3, [r3, #552]	@ zero_extendqisi2
 22248 001e 012B     		cmp	r3, #1
 22249 0020 1DD1     		bne	.L900
3713:..\src/command_processing.c ****             aux_int16 = (int16) ADC_buf[i];
 22250              		.loc 1 3713 0
 22251 0022 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 22252 0024 244A     		ldr	r2, .L902+4
 22253 0026 32F91330 		ldrsh	r3, [r2, r3, lsl #1]
 22254 002a 7B80     		strh	r3, [r7, #2]	@ movhi
3714:..\src/command_processing.c ****             packet_data[(idx << 1) + 2] = ((char*)(&aux_int16))[0];
 22255              		.loc 1 3714 0
 22256 002c BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 22257 002e 5B00     		lsls	r3, r3, #1
 22258 0030 0233     		adds	r3, r3, #2
 22259 0032 BA1C     		adds	r2, r7, #2
 22260 0034 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 22261 0036 07F12001 		add	r1, r7, #32
 22262 003a 0B44     		add	r3, r3, r1
 22263 003c 03F81C2C 		strb	r2, [r3, #-28]
3715:..\src/command_processing.c ****             packet_data[(idx << 1) + 1] = ((char*)(&aux_int16))[1];
 22264              		.loc 1 3715 0
 22265 0040 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 22266 0042 5B00     		lsls	r3, r3, #1
 22267 0044 5A1C     		adds	r2, r3, #1
 22268 0046 BB1C     		adds	r3, r7, #2
 22269 0048 0133     		adds	r3, r3, #1
 22270 004a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 22271 004c 07F12003 		add	r3, r7, #32
 22272 0050 1344     		add	r3, r3, r2
 22273 0052 0A46     		mov	r2, r1
 22274 0054 03F81C2C 		strb	r2, [r3, #-28]
3716:..\src/command_processing.c ****             idx++;
 22275              		.loc 1 3716 0
 22276 0058 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 22277 005a 0133     		adds	r3, r3, #1
 22278 005c BB77     		strb	r3, [r7, #30]
 22279              	.L900:
3711:..\src/command_processing.c ****         if (c_mem.exp.ADC_conf[i] == 1) {
 22280              		.loc 1 3711 0 discriminator 2
 22281 005e FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 22282 0060 0133     		adds	r3, r3, #1
 22283 0062 FB77     		strb	r3, [r7, #31]
 22284              	.L899:
3711:..\src/command_processing.c ****         if (c_mem.exp.ADC_conf[i] == 1) {
 22285              		.loc 1 3711 0 is_stmt 0 discriminator 1
 22286 0064 154B     		ldr	r3, .L902+8
 22287 0066 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22288 0068 FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 22289 006a 9A42     		cmp	r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 499


 22290 006c D2D3     		bcc	.L901
3717:..\src/command_processing.c ****         }
3718:..\src/command_processing.c ****     }
3719:..\src/command_processing.c **** 
3720:..\src/command_processing.c ****     // Calculate checksum
3721:..\src/command_processing.c ****     packet_data[1+2*idx] = LCRChecksum(packet_data, 1+2*idx);
 22291              		.loc 1 3721 0 is_stmt 1
 22292 006e BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 22293 0070 5B00     		lsls	r3, r3, #1
 22294 0072 5C1C     		adds	r4, r3, #1
 22295 0074 BB7F     		ldrb	r3, [r7, #30]
 22296 0076 5B00     		lsls	r3, r3, #1
 22297 0078 DBB2     		uxtb	r3, r3
 22298 007a 0133     		adds	r3, r3, #1
 22299 007c DAB2     		uxtb	r2, r3
 22300 007e 3B1D     		adds	r3, r7, #4
 22301 0080 1146     		mov	r1, r2
 22302 0082 1846     		mov	r0, r3
 22303 0084 FFF7FEFF 		bl	LCRChecksum
 22304 0088 0346     		mov	r3, r0
 22305 008a 1A46     		mov	r2, r3
 22306 008c 07F12003 		add	r3, r7, #32
 22307 0090 2344     		add	r3, r3, r4
 22308 0092 03F81C2C 		strb	r2, [r3, #-28]
3722:..\src/command_processing.c ****     
3723:..\src/command_processing.c ****     // Send package to UART
3724:..\src/command_processing.c ****     commWrite(packet_data, 2+2*idx);
 22309              		.loc 1 3724 0
 22310 0096 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 22311 0098 0133     		adds	r3, r3, #1
 22312 009a 9BB2     		uxth	r3, r3
 22313 009c 5B00     		lsls	r3, r3, #1
 22314 009e 9AB2     		uxth	r2, r3
 22315 00a0 3B1D     		adds	r3, r7, #4
 22316 00a2 1146     		mov	r1, r2
 22317 00a4 1846     		mov	r0, r3
 22318 00a6 FFF7FEFF 		bl	commWrite
3725:..\src/command_processing.c **** }
 22319              		.loc 1 3725 0
 22320 00aa 00BF     		nop
 22321 00ac 2437     		adds	r7, r7, #36
 22322              		.cfi_def_cfa_offset 12
 22323 00ae BD46     		mov	sp, r7
 22324              		.cfi_def_cfa_register 13
 22325              		@ sp needed
 22326 00b0 90BD     		pop	{r4, r7, pc}
 22327              	.L903:
 22328 00b2 00BF     		.align	2
 22329              	.L902:
 22330 00b4 00000000 		.word	c_mem
 22331 00b8 00000000 		.word	ADC_buf
 22332 00bc 00000000 		.word	NUM_OF_ANALOG_INPUTS
 22333              		.cfi_endproc
 22334              	.LFE113:
 22335              		.size	cmd_get_ADC_raw, .-cmd_get_ADC_raw
 22336              		.section	.rodata
 22337 1f4b 00       		.align	2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 500


 22338              	.LC297:
 22339 1f4c 00       		.ascii	"\000"
 22340              		.section	.text.cmd_get_SD_file,"ax",%progbits
 22341              		.align	2
 22342              		.global	cmd_get_SD_file
 22343              		.thumb
 22344              		.thumb_func
 22345              		.type	cmd_get_SD_file, %function
 22346              	cmd_get_SD_file:
 22347              	.LFB114:
3726:..\src/command_processing.c **** 
3727:..\src/command_processing.c **** void cmd_get_SD_file( uint16 filename_length ){
 22348              		.loc 1 3727 0
 22349              		.cfi_startproc
 22350              		@ args = 0, pretend = 0, frame = 20064
 22351              		@ frame_needed = 1, uses_anonymous_args = 0
 22352 0000 80B5     		push	{r7, lr}
 22353              		.cfi_def_cfa_offset 8
 22354              		.cfi_offset 7, -8
 22355              		.cfi_offset 14, -4
 22356 0002 ADF59C4D 		sub	sp, sp, #19968
 22357              		.cfi_def_cfa_offset 19976
 22358 0006 98B0     		sub	sp, sp, #96
 22359              		.cfi_def_cfa_offset 20072
 22360 0008 00AF     		add	r7, sp, #0
 22361              		.cfi_def_cfa_register 7
 22362 000a 0246     		mov	r2, r0
 22363 000c 07F16003 		add	r3, r7, #96
 22364 0010 5A3B     		subs	r3, r3, #90
 22365 0012 1A80     		strh	r2, [r3]	@ movhi
3728:..\src/command_processing.c ****     
3729:..\src/command_processing.c ****     uint8 i = 0;
 22366              		.loc 1 3729 0
 22367 0014 0023     		movs	r3, #0
 22368 0016 07F59C42 		add	r2, r7, #19968
 22369 001a 02F15F02 		add	r2, r2, #95
 22370 001e 1370     		strb	r3, [r2]
3730:..\src/command_processing.c ****     char CYDATA filename[50] = "";
 22371              		.loc 1 3730 0
 22372 0020 0023     		movs	r3, #0
 22373 0022 07F59C42 		add	r2, r7, #19968
 22374 0026 02F12C02 		add	r2, r2, #44
 22375 002a 1360     		str	r3, [r2]
 22376 002c 07F59C43 		add	r3, r7, #19968
 22377 0030 03F13003 		add	r3, r3, #48
 22378 0034 2E22     		movs	r2, #46
 22379 0036 0021     		movs	r1, #0
 22380 0038 1846     		mov	r0, r3
 22381 003a FFF7FEFF 		bl	memset
3731:..\src/command_processing.c ****     char CYDATA str_sd_data[20000] = "";
 22382              		.loc 1 3731 0
 22383 003e 07F16003 		add	r3, r7, #96
 22384 0042 543B     		subs	r3, r3, #84
 22385 0044 0022     		movs	r2, #0
 22386 0046 1A60     		str	r2, [r3]
 22387 0048 0433     		adds	r3, r3, #4
 22388 004a 44F61C62 		movw	r2, #19996
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 501


 22389 004e 0021     		movs	r1, #0
 22390 0050 1846     		mov	r0, r3
 22391 0052 FFF7FEFF 		bl	memset
3732:..\src/command_processing.c ****     strcpy(filename, "");
 22392              		.loc 1 3732 0
 22393 0056 3C4B     		ldr	r3, .L909
 22394 0058 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22395 005a 07F59C42 		add	r2, r7, #19968
 22396 005e 02F12C02 		add	r2, r2, #44
 22397 0062 1370     		strb	r3, [r2]
3733:..\src/command_processing.c ****     strcpy(str_sd_data, "");
 22398              		.loc 1 3733 0
 22399 0064 384B     		ldr	r3, .L909
 22400 0066 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 22401 0068 07F16003 		add	r3, r7, #96
 22402 006c 543B     		subs	r3, r3, #84
 22403 006e 1A70     		strb	r2, [r3]
3734:..\src/command_processing.c ****     
3735:..\src/command_processing.c ****     for (i=0; i<filename_length; i++){
 22404              		.loc 1 3735 0
 22405 0070 0023     		movs	r3, #0
 22406 0072 07F59C42 		add	r2, r7, #19968
 22407 0076 02F15F02 		add	r2, r2, #95
 22408 007a 1370     		strb	r3, [r2]
 22409 007c 1DE0     		b	.L905
 22410              	.L906:
3736:..\src/command_processing.c ****         *((uint8*)filename + i) = (char)g_rx.buffer[3+i];
 22411              		.loc 1 3736 0 discriminator 3
 22412 007e 07F59C43 		add	r3, r7, #19968
 22413 0082 03F15F03 		add	r3, r3, #95
 22414 0086 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22415 0088 07F59C42 		add	r2, r7, #19968
 22416 008c 02F12C02 		add	r2, r2, #44
 22417 0090 1344     		add	r3, r3, r2
 22418 0092 07F59C42 		add	r2, r7, #19968
 22419 0096 02F15F02 		add	r2, r2, #95
 22420 009a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 22421 009c 0332     		adds	r2, r2, #3
 22422 009e 2B49     		ldr	r1, .L909+4
 22423 00a0 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 22424 00a2 1A70     		strb	r2, [r3]
3735:..\src/command_processing.c ****         *((uint8*)filename + i) = (char)g_rx.buffer[3+i];
 22425              		.loc 1 3735 0 discriminator 3
 22426 00a4 07F59C43 		add	r3, r7, #19968
 22427 00a8 03F15F03 		add	r3, r3, #95
 22428 00ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22429 00ae 0133     		adds	r3, r3, #1
 22430 00b0 07F59C42 		add	r2, r7, #19968
 22431 00b4 02F15F02 		add	r2, r2, #95
 22432 00b8 1370     		strb	r3, [r2]
 22433              	.L905:
3735:..\src/command_processing.c ****         *((uint8*)filename + i) = (char)g_rx.buffer[3+i];
 22434              		.loc 1 3735 0 is_stmt 0 discriminator 1
 22435 00ba 07F59C43 		add	r3, r7, #19968
 22436 00be 03F15F03 		add	r3, r3, #95
 22437 00c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22438 00c4 9AB2     		uxth	r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 502


 22439 00c6 07F16003 		add	r3, r7, #96
 22440 00ca 5A3B     		subs	r3, r3, #90
 22441 00cc 1B88     		ldrh	r3, [r3]
 22442 00ce 9342     		cmp	r3, r2
 22443 00d0 D5D8     		bhi	.L906
3737:..\src/command_processing.c ****     }
3738:..\src/command_processing.c ****     *((uint8*)filename + i) = '\0';
 22444              		.loc 1 3738 0 is_stmt 1
 22445 00d2 07F59C43 		add	r3, r7, #19968
 22446 00d6 03F15F03 		add	r3, r3, #95
 22447 00da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22448 00dc 07F59C42 		add	r2, r7, #19968
 22449 00e0 02F12C02 		add	r2, r2, #44
 22450 00e4 1344     		add	r3, r3, r2
 22451 00e6 0022     		movs	r2, #0
 22452 00e8 1A70     		strb	r2, [r3]
3739:..\src/command_processing.c ****      
3740:..\src/command_processing.c ****     // Check if the file is the one currently opened or not
3741:..\src/command_processing.c ****     if (strcmp(filename, sdFile)){
 22453              		.loc 1 3741 0
 22454 00ea 07F59C43 		add	r3, r7, #19968
 22455 00ee 03F12C03 		add	r3, r3, #44
 22456 00f2 1749     		ldr	r1, .L909+8
 22457 00f4 1846     		mov	r0, r3
 22458 00f6 FFF7FEFF 		bl	strcmp
 22459 00fa 0346     		mov	r3, r0
 22460 00fc 002B     		cmp	r3, #0
 22461 00fe 0CD0     		beq	.L907
3742:..\src/command_processing.c ****         Read_SD_Closed_File(filename, str_sd_data, sizeof(str_sd_data));
 22462              		.loc 1 3742 0
 22463 0100 07F16003 		add	r3, r7, #96
 22464 0104 543B     		subs	r3, r3, #84
 22465 0106 07F59C40 		add	r0, r7, #19968
 22466 010a 00F12C00 		add	r0, r0, #44
 22467 010e 44F62062 		movw	r2, #20000
 22468 0112 1946     		mov	r1, r3
 22469 0114 FFF7FEFF 		bl	Read_SD_Closed_File
 22470 0118 07E0     		b	.L908
 22471              	.L907:
3743:..\src/command_processing.c ****     }
3744:..\src/command_processing.c ****     else {
3745:..\src/command_processing.c ****         //It is the currently open working file
3746:..\src/command_processing.c ****         Read_SD_Current_Data(str_sd_data, sizeof(str_sd_data));
 22472              		.loc 1 3746 0
 22473 011a 07F16003 		add	r3, r7, #96
 22474 011e 543B     		subs	r3, r3, #84
 22475 0120 44F62061 		movw	r1, #20000
 22476 0124 1846     		mov	r0, r3
 22477 0126 FFF7FEFF 		bl	Read_SD_Current_Data
 22478              	.L908:
3747:..\src/command_processing.c ****     }
3748:..\src/command_processing.c **** 
3749:..\src/command_processing.c ****     //itoa(filename_length, filename, 10);
3750:..\src/command_processing.c ****     // Send the file to API that receives packet as a ping string
3751:..\src/command_processing.c ****     UART_RS485_ClearTxBuffer();
 22479              		.loc 1 3751 0
 22480 012a FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 503


3752:..\src/command_processing.c ****     UART_RS485_PutString(str_sd_data);
 22481              		.loc 1 3752 0
 22482 012e 07F16003 		add	r3, r7, #96
 22483 0132 543B     		subs	r3, r3, #84
 22484 0134 1846     		mov	r0, r3
 22485 0136 FFF7FEFF 		bl	UART_RS485_PutString
3753:..\src/command_processing.c **** }
 22486              		.loc 1 3753 0
 22487 013a 00BF     		nop
 22488 013c 07F59C47 		add	r7, r7, #19968
 22489 0140 6037     		adds	r7, r7, #96
 22490              		.cfi_def_cfa_offset 8
 22491 0142 BD46     		mov	sp, r7
 22492              		.cfi_def_cfa_register 13
 22493              		@ sp needed
 22494 0144 80BD     		pop	{r7, pc}
 22495              	.L910:
 22496 0146 00BF     		.align	2
 22497              	.L909:
 22498 0148 4C1F0000 		.word	.LC297
 22499 014c 00000000 		.word	g_rx
 22500 0150 00000000 		.word	sdFile
 22501              		.cfi_endproc
 22502              	.LFE114:
 22503              		.size	cmd_get_SD_file, .-cmd_get_SD_file
 22504              		.section	.text.cmd_remove_SD_file,"ax",%progbits
 22505              		.align	2
 22506              		.global	cmd_remove_SD_file
 22507              		.thumb
 22508              		.thumb_func
 22509              		.type	cmd_remove_SD_file, %function
 22510              	cmd_remove_SD_file:
 22511              	.LFB115:
3754:..\src/command_processing.c **** 
3755:..\src/command_processing.c **** void cmd_remove_SD_file( uint16 filename_length ){
 22512              		.loc 1 3755 0
 22513              		.cfi_startproc
 22514              		@ args = 0, pretend = 0, frame = 64
 22515              		@ frame_needed = 1, uses_anonymous_args = 0
 22516 0000 80B5     		push	{r7, lr}
 22517              		.cfi_def_cfa_offset 8
 22518              		.cfi_offset 7, -8
 22519              		.cfi_offset 14, -4
 22520 0002 90B0     		sub	sp, sp, #64
 22521              		.cfi_def_cfa_offset 72
 22522 0004 00AF     		add	r7, sp, #0
 22523              		.cfi_def_cfa_register 7
 22524 0006 0346     		mov	r3, r0
 22525 0008 FB80     		strh	r3, [r7, #6]	@ movhi
3756:..\src/command_processing.c ****     
3757:..\src/command_processing.c ****     uint8 i = 0;
 22526              		.loc 1 3757 0
 22527 000a 0023     		movs	r3, #0
 22528 000c 87F83F30 		strb	r3, [r7, #63]
3758:..\src/command_processing.c ****     char CYDATA filename[50] = "";
 22529              		.loc 1 3758 0
 22530 0010 0023     		movs	r3, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 504


 22531 0012 FB60     		str	r3, [r7, #12]
 22532 0014 07F11003 		add	r3, r7, #16
 22533 0018 2E22     		movs	r2, #46
 22534 001a 0021     		movs	r1, #0
 22535 001c 1846     		mov	r0, r3
 22536 001e FFF7FEFF 		bl	memset
3759:..\src/command_processing.c ****     strcpy(filename, "");
 22537              		.loc 1 3759 0
 22538 0022 214B     		ldr	r3, .L914
 22539 0024 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22540 0026 3B73     		strb	r3, [r7, #12]
3760:..\src/command_processing.c ****     
3761:..\src/command_processing.c ****     for (i=0; i<filename_length; i++){
 22541              		.loc 1 3761 0
 22542 0028 0023     		movs	r3, #0
 22543 002a 87F83F30 		strb	r3, [r7, #63]
 22544 002e 0FE0     		b	.L912
 22545              	.L913:
3762:..\src/command_processing.c ****         *((uint8*)filename + i) = (char)g_rx.buffer[3+i];
 22546              		.loc 1 3762 0 discriminator 3
 22547 0030 97F83F30 		ldrb	r3, [r7, #63]	@ zero_extendqisi2
 22548 0034 07F10C02 		add	r2, r7, #12
 22549 0038 1344     		add	r3, r3, r2
 22550 003a 97F83F20 		ldrb	r2, [r7, #63]	@ zero_extendqisi2
 22551 003e 0332     		adds	r2, r2, #3
 22552 0040 1A49     		ldr	r1, .L914+4
 22553 0042 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 22554 0044 1A70     		strb	r2, [r3]
3761:..\src/command_processing.c ****         *((uint8*)filename + i) = (char)g_rx.buffer[3+i];
 22555              		.loc 1 3761 0 discriminator 3
 22556 0046 97F83F30 		ldrb	r3, [r7, #63]	@ zero_extendqisi2
 22557 004a 0133     		adds	r3, r3, #1
 22558 004c 87F83F30 		strb	r3, [r7, #63]
 22559              	.L912:
3761:..\src/command_processing.c ****         *((uint8*)filename + i) = (char)g_rx.buffer[3+i];
 22560              		.loc 1 3761 0 is_stmt 0 discriminator 1
 22561 0050 97F83F30 		ldrb	r3, [r7, #63]	@ zero_extendqisi2
 22562 0054 9BB2     		uxth	r3, r3
 22563 0056 FA88     		ldrh	r2, [r7, #6]
 22564 0058 9A42     		cmp	r2, r3
 22565 005a E9D8     		bhi	.L913
3763:..\src/command_processing.c ****     }
3764:..\src/command_processing.c ****     *((uint8*)filename + i) = '\0';
 22566              		.loc 1 3764 0 is_stmt 1
 22567 005c 97F83F30 		ldrb	r3, [r7, #63]	@ zero_extendqisi2
 22568 0060 07F10C02 		add	r2, r7, #12
 22569 0064 1344     		add	r3, r3, r2
 22570 0066 0022     		movs	r2, #0
 22571 0068 1A70     		strb	r2, [r3]
3765:..\src/command_processing.c ****      
3766:..\src/command_processing.c ****     // Check if the file is the one currently opened or not
3767:..\src/command_processing.c ****     uint8 res = Remove_SD_File(filename);
 22572              		.loc 1 3767 0
 22573 006a 07F10C03 		add	r3, r7, #12
 22574 006e 1846     		mov	r0, r3
 22575 0070 FFF7FEFF 		bl	Remove_SD_File
 22576 0074 0346     		mov	r3, r0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 505


 22577 0076 87F83E30 		strb	r3, [r7, #62]
3768:..\src/command_processing.c ****   
3769:..\src/command_processing.c ****     
3770:..\src/command_processing.c ****     uint8 packet_data[3]; 
3771:..\src/command_processing.c ****     
3772:..\src/command_processing.c ****     //Header package
3773:..\src/command_processing.c **** 
3774:..\src/command_processing.c ****     packet_data[0] = CMD_REMOVE_SD_SINGLE_FILE;
 22578              		.loc 1 3774 0
 22579 007a A823     		movs	r3, #168
 22580 007c 3B72     		strb	r3, [r7, #8]
3775:..\src/command_processing.c ****     packet_data[1] = res;
 22581              		.loc 1 3775 0
 22582 007e 97F83E30 		ldrb	r3, [r7, #62]
 22583 0082 7B72     		strb	r3, [r7, #9]
3776:..\src/command_processing.c **** 
3777:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3778:..\src/command_processing.c ****     packet_data[2] = LCRChecksum (packet_data, 2);
 22584              		.loc 1 3778 0
 22585 0084 07F10803 		add	r3, r7, #8
 22586 0088 0221     		movs	r1, #2
 22587 008a 1846     		mov	r0, r3
 22588 008c FFF7FEFF 		bl	LCRChecksum
 22589 0090 0346     		mov	r3, r0
 22590 0092 BB72     		strb	r3, [r7, #10]
3779:..\src/command_processing.c ****     
3780:..\src/command_processing.c ****     commWrite(packet_data, 3);
 22591              		.loc 1 3780 0
 22592 0094 07F10803 		add	r3, r7, #8
 22593 0098 0321     		movs	r1, #3
 22594 009a 1846     		mov	r0, r3
 22595 009c FFF7FEFF 		bl	commWrite
3781:..\src/command_processing.c **** }
 22596              		.loc 1 3781 0
 22597 00a0 00BF     		nop
 22598 00a2 4037     		adds	r7, r7, #64
 22599              		.cfi_def_cfa_offset 8
 22600 00a4 BD46     		mov	sp, r7
 22601              		.cfi_def_cfa_register 13
 22602              		@ sp needed
 22603 00a6 80BD     		pop	{r7, pc}
 22604              	.L915:
 22605              		.align	2
 22606              	.L914:
 22607 00a8 4C1F0000 		.word	.LC297
 22608 00ac 00000000 		.word	g_rx
 22609              		.cfi_endproc
 22610              	.LFE115:
 22611              		.size	cmd_remove_SD_file, .-cmd_remove_SD_file
 22612              		.bss
 22613              		.align	2
 22614              	h_time.10531:
 22615 0000 00000000 		.space	4
 22616              		.align	1
 22617              	i.10572:
 22618 0004 0000     		.space	2
 22619 0006 0000     		.align	2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 506


 22620              	last_aux_int16.10703:
 22621 0008 0000     		.space	2
 22622              		.text
 22623              	.Letext0:
 22624              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 22625              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 22626              		.file 5 "Generated_Source\\PSoC5/cytypes.h"
 22627              		.file 6 "..\\src\\commands.h"
 22628              		.file 7 "..\\src\\emFile_V322c\\Code\\Include\\PSoC5/FS_Types.h"
 22629              		.file 8 "..\\src\\globals.h"
 22630              		.file 9 "Generated_Source\\PSoC5/core_cm3.h"
 22631              		.section	.debug_info,"",%progbits
 22632              	.Ldebug_info0:
 22633 0000 21250000 		.4byte	0x2521
 22634 0004 0400     		.2byte	0x4
 22635 0006 00000000 		.4byte	.Ldebug_abbrev0
 22636 000a 04       		.byte	0x4
 22637 000b 01       		.uleb128 0x1
 22638 000c 0D090000 		.4byte	.LASF390
 22639 0010 0C       		.byte	0xc
 22640 0011 8B140000 		.4byte	.LASF391
 22641 0015 850A0000 		.4byte	.LASF392
 22642 0019 00000000 		.4byte	.Ldebug_ranges0+0
 22643 001d 00000000 		.4byte	0
 22644 0021 00000000 		.4byte	.Ldebug_line0
 22645 0025 02       		.uleb128 0x2
 22646 0026 01       		.byte	0x1
 22647 0027 06       		.byte	0x6
 22648 0028 28040000 		.4byte	.LASF0
 22649 002c 02       		.uleb128 0x2
 22650 002d 01       		.byte	0x1
 22651 002e 08       		.byte	0x8
 22652 002f 98040000 		.4byte	.LASF1
 22653 0033 02       		.uleb128 0x2
 22654 0034 02       		.byte	0x2
 22655 0035 05       		.byte	0x5
 22656 0036 F4100000 		.4byte	.LASF2
 22657 003a 02       		.uleb128 0x2
 22658 003b 02       		.byte	0x2
 22659 003c 07       		.byte	0x7
 22660 003d 7D130000 		.4byte	.LASF3
 22661 0041 03       		.uleb128 0x3
 22662 0042 49140000 		.4byte	.LASF5
 22663 0046 03       		.byte	0x3
 22664 0047 3F       		.byte	0x3f
 22665 0048 4C000000 		.4byte	0x4c
 22666 004c 02       		.uleb128 0x2
 22667 004d 04       		.byte	0x4
 22668 004e 05       		.byte	0x5
 22669 004f 0D030000 		.4byte	.LASF4
 22670 0053 03       		.uleb128 0x3
 22671 0054 D8090000 		.4byte	.LASF6
 22672 0058 03       		.byte	0x3
 22673 0059 41       		.byte	0x41
 22674 005a 5E000000 		.4byte	0x5e
 22675 005e 02       		.uleb128 0x2
 22676 005f 04       		.byte	0x4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 507


 22677 0060 07       		.byte	0x7
 22678 0061 C7070000 		.4byte	.LASF7
 22679 0065 02       		.uleb128 0x2
 22680 0066 08       		.byte	0x8
 22681 0067 05       		.byte	0x5
 22682 0068 E3090000 		.4byte	.LASF8
 22683 006c 02       		.uleb128 0x2
 22684 006d 08       		.byte	0x8
 22685 006e 07       		.byte	0x7
 22686 006f EE0D0000 		.4byte	.LASF9
 22687 0073 04       		.uleb128 0x4
 22688 0074 04       		.byte	0x4
 22689 0075 05       		.byte	0x5
 22690 0076 696E7400 		.ascii	"int\000"
 22691 007a 02       		.uleb128 0x2
 22692 007b 04       		.byte	0x4
 22693 007c 07       		.byte	0x7
 22694 007d 460B0000 		.4byte	.LASF10
 22695 0081 03       		.uleb128 0x3
 22696 0082 A7000000 		.4byte	.LASF11
 22697 0086 04       		.byte	0x4
 22698 0087 2C       		.byte	0x2c
 22699 0088 41000000 		.4byte	0x41
 22700 008c 03       		.uleb128 0x3
 22701 008d EB120000 		.4byte	.LASF12
 22702 0091 04       		.byte	0x4
 22703 0092 30       		.byte	0x30
 22704 0093 53000000 		.4byte	0x53
 22705 0097 05       		.uleb128 0x5
 22706 0098 D6100000 		.4byte	.LASF13
 22707 009c 05       		.byte	0x5
 22708 009d E401     		.2byte	0x1e4
 22709 009f 2C000000 		.4byte	0x2c
 22710 00a3 05       		.uleb128 0x5
 22711 00a4 EE140000 		.4byte	.LASF14
 22712 00a8 05       		.byte	0x5
 22713 00a9 E501     		.2byte	0x1e5
 22714 00ab 3A000000 		.4byte	0x3a
 22715 00af 05       		.uleb128 0x5
 22716 00b0 DD000000 		.4byte	.LASF15
 22717 00b4 05       		.byte	0x5
 22718 00b5 E601     		.2byte	0x1e6
 22719 00b7 5E000000 		.4byte	0x5e
 22720 00bb 05       		.uleb128 0x5
 22721 00bc D6010000 		.4byte	.LASF16
 22722 00c0 05       		.byte	0x5
 22723 00c1 E701     		.2byte	0x1e7
 22724 00c3 25000000 		.4byte	0x25
 22725 00c7 05       		.uleb128 0x5
 22726 00c8 4B120000 		.4byte	.LASF17
 22727 00cc 05       		.byte	0x5
 22728 00cd E801     		.2byte	0x1e8
 22729 00cf 33000000 		.4byte	0x33
 22730 00d3 05       		.uleb128 0x5
 22731 00d4 D7130000 		.4byte	.LASF18
 22732 00d8 05       		.byte	0x5
 22733 00d9 E901     		.2byte	0x1e9
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 508


 22734 00db 4C000000 		.4byte	0x4c
 22735 00df 05       		.uleb128 0x5
 22736 00e0 8A030000 		.4byte	.LASF19
 22737 00e4 05       		.byte	0x5
 22738 00e5 EA01     		.2byte	0x1ea
 22739 00e7 EB000000 		.4byte	0xeb
 22740 00eb 02       		.uleb128 0x2
 22741 00ec 04       		.byte	0x4
 22742 00ed 04       		.byte	0x4
 22743 00ee EF0A0000 		.4byte	.LASF20
 22744 00f2 02       		.uleb128 0x2
 22745 00f3 08       		.byte	0x8
 22746 00f4 04       		.byte	0x4
 22747 00f5 270A0000 		.4byte	.LASF21
 22748 00f9 02       		.uleb128 0x2
 22749 00fa 01       		.byte	0x1
 22750 00fb 08       		.byte	0x8
 22751 00fc 3C050000 		.4byte	.LASF22
 22752 0100 05       		.uleb128 0x5
 22753 0101 E30E0000 		.4byte	.LASF23
 22754 0105 05       		.byte	0x5
 22755 0106 8E02     		.2byte	0x28e
 22756 0108 0C010000 		.4byte	0x10c
 22757 010c 06       		.uleb128 0x6
 22758 010d 97000000 		.4byte	0x97
 22759 0111 02       		.uleb128 0x2
 22760 0112 08       		.byte	0x8
 22761 0113 04       		.byte	0x4
 22762 0114 F00C0000 		.4byte	.LASF24
 22763 0118 02       		.uleb128 0x2
 22764 0119 04       		.byte	0x4
 22765 011a 07       		.byte	0x7
 22766 011b 39000000 		.4byte	.LASF25
 22767 011f 07       		.uleb128 0x7
 22768 0120 04       		.byte	0x4
 22769 0121 F9000000 		.4byte	0xf9
 22770 0125 07       		.uleb128 0x7
 22771 0126 04       		.byte	0x4
 22772 0127 2B010000 		.4byte	0x12b
 22773 012b 08       		.uleb128 0x8
 22774 012c F9000000 		.4byte	0xf9
 22775 0130 09       		.uleb128 0x9
 22776 0131 F9000000 		.4byte	0xf9
 22777 0135 40010000 		.4byte	0x140
 22778 0139 0A       		.uleb128 0xa
 22779 013a 18010000 		.4byte	0x118
 22780 013e 19       		.byte	0x19
 22781 013f 00       		.byte	0
 22782 0140 09       		.uleb128 0x9
 22783 0141 F9000000 		.4byte	0xf9
 22784 0145 50010000 		.4byte	0x150
 22785 0149 0A       		.uleb128 0xa
 22786 014a 18010000 		.4byte	0x118
 22787 014e 07       		.byte	0x7
 22788 014f 00       		.byte	0
 22789 0150 0B       		.uleb128 0xb
 22790 0151 9C0B0000 		.4byte	.LASF58
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 509


 22791 0155 01       		.byte	0x1
 22792 0156 2C000000 		.4byte	0x2c
 22793 015a 06       		.byte	0x6
 22794 015b 42       		.byte	0x42
 22795 015c 21020000 		.4byte	0x221
 22796 0160 0C       		.uleb128 0xc
 22797 0161 08150000 		.4byte	.LASF26
 22798 0165 00       		.byte	0
 22799 0166 0C       		.uleb128 0xc
 22800 0167 85110000 		.4byte	.LASF27
 22801 016b 01       		.byte	0x1
 22802 016c 0C       		.uleb128 0xc
 22803 016d A3070000 		.4byte	.LASF28
 22804 0171 03       		.byte	0x3
 22805 0172 0C       		.uleb128 0xc
 22806 0173 D0040000 		.4byte	.LASF29
 22807 0177 04       		.byte	0x4
 22808 0178 0C       		.uleb128 0xc
 22809 0179 1C0F0000 		.4byte	.LASF30
 22810 017d 05       		.byte	0x5
 22811 017e 0C       		.uleb128 0xc
 22812 017f B5080000 		.4byte	.LASF31
 22813 0183 06       		.byte	0x6
 22814 0184 0C       		.uleb128 0xc
 22815 0185 D9070000 		.4byte	.LASF32
 22816 0189 09       		.byte	0x9
 22817 018a 0C       		.uleb128 0xc
 22818 018b 4F000000 		.4byte	.LASF33
 22819 018f 0A       		.byte	0xa
 22820 0190 0C       		.uleb128 0xc
 22821 0191 2D120000 		.4byte	.LASF34
 22822 0195 0C       		.byte	0xc
 22823 0196 0C       		.uleb128 0xc
 22824 0197 500D0000 		.4byte	.LASF35
 22825 019b 0D       		.byte	0xd
 22826 019c 0C       		.uleb128 0xc
 22827 019d 95000000 		.4byte	.LASF36
 22828 01a1 80       		.byte	0x80
 22829 01a2 0C       		.uleb128 0xc
 22830 01a3 2B050000 		.4byte	.LASF37
 22831 01a7 81       		.byte	0x81
 22832 01a8 0C       		.uleb128 0xc
 22833 01a9 44060000 		.4byte	.LASF38
 22834 01ad 82       		.byte	0x82
 22835 01ae 0C       		.uleb128 0xc
 22836 01af 4F110000 		.4byte	.LASF39
 22837 01b3 83       		.byte	0x83
 22838 01b4 0C       		.uleb128 0xc
 22839 01b5 9F100000 		.4byte	.LASF40
 22840 01b9 84       		.byte	0x84
 22841 01ba 0C       		.uleb128 0xc
 22842 01bb A2030000 		.4byte	.LASF41
 22843 01bf 85       		.byte	0x85
 22844 01c0 0C       		.uleb128 0xc
 22845 01c1 F7080000 		.4byte	.LASF42
 22846 01c5 86       		.byte	0x86
 22847 01c6 0C       		.uleb128 0xc
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 510


 22848 01c7 95080000 		.4byte	.LASF43
 22849 01cb 88       		.byte	0x88
 22850 01cc 0C       		.uleb128 0xc
 22851 01cd 0E120000 		.4byte	.LASF44
 22852 01d1 89       		.byte	0x89
 22853 01d2 0C       		.uleb128 0xc
 22854 01d3 4C0E0000 		.4byte	.LASF45
 22855 01d7 8B       		.byte	0x8b
 22856 01d8 0C       		.uleb128 0xc
 22857 01d9 AE0C0000 		.4byte	.LASF46
 22858 01dd 8C       		.byte	0x8c
 22859 01de 0C       		.uleb128 0xc
 22860 01df B3090000 		.4byte	.LASF47
 22861 01e3 8E       		.byte	0x8e
 22862 01e4 0C       		.uleb128 0xc
 22863 01e5 840E0000 		.4byte	.LASF48
 22864 01e9 90       		.byte	0x90
 22865 01ea 0C       		.uleb128 0xc
 22866 01eb 78020000 		.4byte	.LASF49
 22867 01ef 92       		.byte	0x92
 22868 01f0 0C       		.uleb128 0xc
 22869 01f1 4C130000 		.4byte	.LASF50
 22870 01f5 A1       		.byte	0xa1
 22871 01f6 0C       		.uleb128 0xc
 22872 01f7 58100000 		.4byte	.LASF51
 22873 01fb A2       		.byte	0xa2
 22874 01fc 0C       		.uleb128 0xc
 22875 01fd FA0B0000 		.4byte	.LASF52
 22876 0201 A3       		.byte	0xa3
 22877 0202 0C       		.uleb128 0xc
 22878 0203 74100000 		.4byte	.LASF53
 22879 0207 A4       		.byte	0xa4
 22880 0208 0C       		.uleb128 0xc
 22881 0209 74110000 		.4byte	.LASF54
 22882 020d A5       		.byte	0xa5
 22883 020e 0C       		.uleb128 0xc
 22884 020f 0C100000 		.4byte	.LASF55
 22885 0213 A6       		.byte	0xa6
 22886 0214 0C       		.uleb128 0xc
 22887 0215 2E0A0000 		.4byte	.LASF56
 22888 0219 A7       		.byte	0xa7
 22889 021a 0C       		.uleb128 0xc
 22890 021b FE0A0000 		.4byte	.LASF57
 22891 021f A8       		.byte	0xa8
 22892 0220 00       		.byte	0
 22893 0221 0B       		.uleb128 0xb
 22894 0222 B5140000 		.4byte	.LASF59
 22895 0226 01       		.byte	0x1
 22896 0227 2C000000 		.4byte	0x2c
 22897 022b 06       		.byte	0x6
 22898 022c 8F       		.byte	0x8f
 22899 022d 62020000 		.4byte	0x262
 22900 0231 0C       		.uleb128 0xc
 22901 0232 C2060000 		.4byte	.LASF60
 22902 0236 00       		.byte	0
 22903 0237 0C       		.uleb128 0xc
 22904 0238 DA0B0000 		.4byte	.LASF61
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 511


 22905 023c 01       		.byte	0x1
 22906 023d 0C       		.uleb128 0xc
 22907 023e 89020000 		.4byte	.LASF62
 22908 0242 02       		.byte	0x2
 22909 0243 0C       		.uleb128 0xc
 22910 0244 B2010000 		.4byte	.LASF63
 22911 0248 03       		.byte	0x3
 22912 0249 0C       		.uleb128 0xc
 22913 024a 56010000 		.4byte	.LASF64
 22914 024e 04       		.byte	0x4
 22915 024f 0C       		.uleb128 0xc
 22916 0250 7D000000 		.4byte	.LASF65
 22917 0254 05       		.byte	0x5
 22918 0255 0C       		.uleb128 0xc
 22919 0256 01080000 		.4byte	.LASF66
 22920 025a 06       		.byte	0x6
 22921 025b 0C       		.uleb128 0xc
 22922 025c 39100000 		.4byte	.LASF67
 22923 0260 07       		.byte	0x7
 22924 0261 00       		.byte	0
 22925 0262 0B       		.uleb128 0xb
 22926 0263 F1090000 		.4byte	.LASF68
 22927 0267 01       		.byte	0x1
 22928 0268 2C000000 		.4byte	0x2c
 22929 026c 06       		.byte	0x6
 22930 026d A3       		.byte	0xa3
 22931 026e 8B020000 		.4byte	0x28b
 22932 0272 0C       		.uleb128 0xc
 22933 0273 2E140000 		.4byte	.LASF69
 22934 0277 00       		.byte	0
 22935 0278 0C       		.uleb128 0xc
 22936 0279 89080000 		.4byte	.LASF70
 22937 027d 01       		.byte	0x1
 22938 027e 0C       		.uleb128 0xc
 22939 027f E00C0000 		.4byte	.LASF71
 22940 0283 02       		.byte	0x2
 22941 0284 0C       		.uleb128 0xc
 22942 0285 8E070000 		.4byte	.LASF72
 22943 0289 03       		.byte	0x3
 22944 028a 00       		.byte	0
 22945 028b 0B       		.uleb128 0xb
 22946 028c 60040000 		.4byte	.LASF73
 22947 0290 01       		.byte	0x1
 22948 0291 2C000000 		.4byte	0x2c
 22949 0295 06       		.byte	0x6
 22950 0296 AD       		.byte	0xad
 22951 0297 A8020000 		.4byte	0x2a8
 22952 029b 0C       		.uleb128 0xc
 22953 029c 2F100000 		.4byte	.LASF74
 22954 02a0 00       		.byte	0
 22955 02a1 0C       		.uleb128 0xc
 22956 02a2 1D0A0000 		.4byte	.LASF75
 22957 02a6 01       		.byte	0x1
 22958 02a7 00       		.byte	0
 22959 02a8 0B       		.uleb128 0xb
 22960 02a9 9D0D0000 		.4byte	.LASF76
 22961 02ad 01       		.byte	0x1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 512


 22962 02ae 2C000000 		.4byte	0x2c
 22963 02b2 06       		.byte	0x6
 22964 02b3 B2       		.byte	0xb2
 22965 02b4 C5020000 		.4byte	0x2c5
 22966 02b8 0C       		.uleb128 0xc
 22967 02b9 A7060000 		.4byte	.LASF77
 22968 02bd 00       		.byte	0
 22969 02be 0C       		.uleb128 0xc
 22970 02bf 46080000 		.4byte	.LASF78
 22971 02c3 01       		.byte	0x1
 22972 02c4 00       		.byte	0
 22973 02c5 0B       		.uleb128 0xb
 22974 02c6 40120000 		.4byte	.LASF79
 22975 02ca 01       		.byte	0x1
 22976 02cb 2C000000 		.4byte	0x2c
 22977 02cf 06       		.byte	0x6
 22978 02d0 BA       		.byte	0xba
 22979 02d1 12030000 		.4byte	0x312
 22980 02d5 0C       		.uleb128 0xc
 22981 02d6 4D080000 		.4byte	.LASF80
 22982 02da 00       		.byte	0
 22983 02db 0C       		.uleb128 0xc
 22984 02dc C3140000 		.4byte	.LASF81
 22985 02e0 01       		.byte	0x1
 22986 02e1 0C       		.uleb128 0xc
 22987 02e2 010A0000 		.4byte	.LASF82
 22988 02e6 02       		.byte	0x2
 22989 02e7 0C       		.uleb128 0xc
 22990 02e8 8A0C0000 		.4byte	.LASF83
 22991 02ec 03       		.byte	0x3
 22992 02ed 0C       		.uleb128 0xc
 22993 02ee A70B0000 		.4byte	.LASF84
 22994 02f2 04       		.byte	0x4
 22995 02f3 0C       		.uleb128 0xc
 22996 02f4 050E0000 		.4byte	.LASF85
 22997 02f8 05       		.byte	0x5
 22998 02f9 0C       		.uleb128 0xc
 22999 02fa FC0C0000 		.4byte	.LASF86
 23000 02fe 06       		.byte	0x6
 23001 02ff 0C       		.uleb128 0xc
 23002 0300 350C0000 		.4byte	.LASF87
 23003 0304 07       		.byte	0x7
 23004 0305 0C       		.uleb128 0xc
 23005 0306 85060000 		.4byte	.LASF88
 23006 030a 08       		.byte	0x8
 23007 030b 0C       		.uleb128 0xc
 23008 030c 82070000 		.4byte	.LASF89
 23009 0310 09       		.byte	0x9
 23010 0311 00       		.byte	0
 23011 0312 03       		.uleb128 0x3
 23012 0313 0F140000 		.4byte	.LASF90
 23013 0317 07       		.byte	0x7
 23014 0318 7E       		.byte	0x7e
 23015 0319 1D030000 		.4byte	0x31d
 23016 031d 0D       		.uleb128 0xd
 23017 031e 0F140000 		.4byte	.LASF90
 23018 0322 07       		.uleb128 0x7
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 513


 23019 0323 04       		.byte	0x4
 23020 0324 12030000 		.4byte	0x312
 23021 0328 0E       		.uleb128 0xe
 23022 0329 9B090000 		.4byte	.LASF93
 23023 032d 10       		.byte	0x10
 23024 032e 08       		.byte	0x8
 23025 032f E5       		.byte	0xe5
 23026 0330 65030000 		.4byte	0x365
 23027 0334 0F       		.uleb128 0xf
 23028 0335 706F7300 		.ascii	"pos\000"
 23029 0339 08       		.byte	0x8
 23030 033a E6       		.byte	0xe6
 23031 033b D3000000 		.4byte	0xd3
 23032 033f 00       		.byte	0
 23033 0340 10       		.uleb128 0x10
 23034 0341 79080000 		.4byte	.LASF91
 23035 0345 08       		.byte	0x8
 23036 0346 E7       		.byte	0xe7
 23037 0347 D3000000 		.4byte	0xd3
 23038 034b 04       		.byte	0x4
 23039 034c 0F       		.uleb128 0xf
 23040 034d 70776D00 		.ascii	"pwm\000"
 23041 0351 08       		.byte	0x8
 23042 0352 E8       		.byte	0xe8
 23043 0353 D3000000 		.4byte	0xd3
 23044 0357 08       		.byte	0x8
 23045 0358 10       		.uleb128 0x10
 23046 0359 460E0000 		.4byte	.LASF92
 23047 035d 08       		.byte	0x8
 23048 035e E9       		.byte	0xe9
 23049 035f 97000000 		.4byte	0x97
 23050 0363 0C       		.byte	0xc
 23051 0364 00       		.byte	0
 23052 0365 0E       		.uleb128 0xe
 23053 0366 04100000 		.4byte	.LASF94
 23054 036a 34       		.byte	0x34
 23055 036b 08       		.byte	0x8
 23056 036c F0       		.byte	0xf0
 23057 036d C6030000 		.4byte	0x3c6
 23058 0371 0F       		.uleb128 0xf
 23059 0372 706F7300 		.ascii	"pos\000"
 23060 0376 08       		.byte	0x8
 23061 0377 F1       		.byte	0xf1
 23062 0378 C6030000 		.4byte	0x3c6
 23063 037c 00       		.byte	0
 23064 037d 10       		.uleb128 0x10
 23065 037e 79080000 		.4byte	.LASF91
 23066 0382 08       		.byte	0x8
 23067 0383 F2       		.byte	0xf2
 23068 0384 D3000000 		.4byte	0xd3
 23069 0388 0C       		.byte	0xc
 23070 0389 10       		.uleb128 0x10
 23071 038a 8D120000 		.4byte	.LASF95
 23072 038e 08       		.byte	0x8
 23073 038f F3       		.byte	0xf3
 23074 0390 D3000000 		.4byte	0xd3
 23075 0394 10       		.byte	0x10
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 514


 23076 0395 10       		.uleb128 0x10
 23077 0396 F7070000 		.4byte	.LASF96
 23078 039a 08       		.byte	0x8
 23079 039b F4       		.byte	0xf4
 23080 039c D3000000 		.4byte	0xd3
 23081 03a0 14       		.byte	0x14
 23082 03a1 0F       		.uleb128 0xf
 23083 03a2 726F7400 		.ascii	"rot\000"
 23084 03a6 08       		.byte	0x8
 23085 03a7 F5       		.byte	0xf5
 23086 03a8 D6030000 		.4byte	0x3d6
 23087 03ac 18       		.byte	0x18
 23088 03ad 0F       		.uleb128 0xf
 23089 03ae 76656C00 		.ascii	"vel\000"
 23090 03b2 08       		.byte	0x8
 23091 03b3 F6       		.byte	0xf6
 23092 03b4 C6030000 		.4byte	0x3c6
 23093 03b8 1C       		.byte	0x1c
 23094 03b9 0F       		.uleb128 0xf
 23095 03ba 61636300 		.ascii	"acc\000"
 23096 03be 08       		.byte	0x8
 23097 03bf F7       		.byte	0xf7
 23098 03c0 C6030000 		.4byte	0x3c6
 23099 03c4 28       		.byte	0x28
 23100 03c5 00       		.byte	0
 23101 03c6 09       		.uleb128 0x9
 23102 03c7 D3000000 		.4byte	0xd3
 23103 03cb D6030000 		.4byte	0x3d6
 23104 03cf 0A       		.uleb128 0xa
 23105 03d0 18010000 		.4byte	0x118
 23106 03d4 02       		.byte	0x2
 23107 03d5 00       		.byte	0
 23108 03d6 09       		.uleb128 0x9
 23109 03d7 BB000000 		.4byte	0xbb
 23110 03db E6030000 		.4byte	0x3e6
 23111 03df 0A       		.uleb128 0xa
 23112 03e0 18010000 		.4byte	0x118
 23113 03e4 02       		.byte	0x2
 23114 03e5 00       		.byte	0
 23115 03e6 0E       		.uleb128 0xe
 23116 03e7 220B0000 		.4byte	.LASF97
 23117 03eb 28       		.byte	0x28
 23118 03ec 08       		.byte	0x8
 23119 03ed FA       		.byte	0xfa
 23120 03ee 17040000 		.4byte	0x417
 23121 03f2 0F       		.uleb128 0xf
 23122 03f3 656D6700 		.ascii	"emg\000"
 23123 03f7 08       		.byte	0x8
 23124 03f8 FB       		.byte	0xfb
 23125 03f9 17040000 		.4byte	0x417
 23126 03fd 00       		.byte	0
 23127 03fe 10       		.uleb128 0x10
 23128 03ff 820C0000 		.4byte	.LASF98
 23129 0403 08       		.byte	0x8
 23130 0404 FC       		.byte	0xfc
 23131 0405 27040000 		.4byte	0x427
 23132 0409 08       		.byte	0x8
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 515


 23133 040a 10       		.uleb128 0x10
 23134 040b 30110000 		.4byte	.LASF99
 23135 040f 08       		.byte	0x8
 23136 0410 FD       		.byte	0xfd
 23137 0411 17040000 		.4byte	0x417
 23138 0415 20       		.byte	0x20
 23139 0416 00       		.byte	0
 23140 0417 09       		.uleb128 0x9
 23141 0418 D3000000 		.4byte	0xd3
 23142 041c 27040000 		.4byte	0x427
 23143 0420 0A       		.uleb128 0xa
 23144 0421 18010000 		.4byte	0x118
 23145 0425 01       		.byte	0x1
 23146 0426 00       		.byte	0
 23147 0427 09       		.uleb128 0x9
 23148 0428 D3000000 		.4byte	0xd3
 23149 042c 37040000 		.4byte	0x437
 23150 0430 0A       		.uleb128 0xa
 23151 0431 18010000 		.4byte	0x118
 23152 0435 05       		.byte	0x5
 23153 0436 00       		.byte	0
 23154 0437 11       		.uleb128 0x11
 23155 0438 9A050000 		.4byte	.LASF100
 23156 043c 04       		.byte	0x4
 23157 043d 08       		.byte	0x8
 23158 043e 0001     		.2byte	0x100
 23159 0440 52040000 		.4byte	0x452
 23160 0444 12       		.uleb128 0x12
 23161 0445 22050000 		.4byte	.LASF101
 23162 0449 08       		.byte	0x8
 23163 044a 0101     		.2byte	0x101
 23164 044c EB000000 		.4byte	0xeb
 23165 0450 00       		.byte	0
 23166 0451 00       		.byte	0
 23167 0452 11       		.uleb128 0x11
 23168 0453 B4000000 		.4byte	.LASF102
 23169 0457 86       		.byte	0x86
 23170 0458 08       		.byte	0x8
 23171 0459 0801     		.2byte	0x108
 23172 045b 94040000 		.4byte	0x494
 23173 045f 12       		.uleb128 0x12
 23174 0460 53060000 		.4byte	.LASF103
 23175 0464 08       		.byte	0x8
 23176 0465 0901     		.2byte	0x109
 23177 0467 94040000 		.4byte	0x494
 23178 046b 00       		.byte	0
 23179 046c 12       		.uleb128 0x12
 23180 046d 1B0E0000 		.4byte	.LASF104
 23181 0471 08       		.byte	0x8
 23182 0472 0A01     		.2byte	0x10a
 23183 0474 C7000000 		.4byte	0xc7
 23184 0478 80       		.byte	0x80
 23185 0479 13       		.uleb128 0x13
 23186 047a 696E6400 		.ascii	"ind\000"
 23187 047e 08       		.byte	0x8
 23188 047f 0B01     		.2byte	0x10b
 23189 0481 C7000000 		.4byte	0xc7
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 516


 23190 0485 82       		.byte	0x82
 23191 0486 12       		.uleb128 0x12
 23192 0487 5A020000 		.4byte	.LASF105
 23193 048b 08       		.byte	0x8
 23194 048c 0C01     		.2byte	0x10c
 23195 048e 97000000 		.4byte	0x97
 23196 0492 84       		.byte	0x84
 23197 0493 00       		.byte	0
 23198 0494 09       		.uleb128 0x9
 23199 0495 97000000 		.4byte	0x97
 23200 0499 A4040000 		.4byte	0x4a4
 23201 049d 0A       		.uleb128 0xa
 23202 049e 18010000 		.4byte	0x118
 23203 04a2 7F       		.byte	0x7f
 23204 04a3 00       		.byte	0
 23205 04a4 11       		.uleb128 0x11
 23206 04a5 78030000 		.4byte	.LASF106
 23207 04a9 70       		.byte	0x70
 23208 04aa 08       		.byte	0x8
 23209 04ab 1501     		.2byte	0x115
 23210 04ad 41050000 		.4byte	0x541
 23211 04b1 12       		.uleb128 0x12
 23212 04b2 09000000 		.4byte	.LASF107
 23213 04b6 08       		.byte	0x8
 23214 04b7 1601     		.2byte	0x116
 23215 04b9 41050000 		.4byte	0x541
 23216 04bd 00       		.byte	0
 23217 04be 12       		.uleb128 0x12
 23218 04bf 13020000 		.4byte	.LASF108
 23219 04c3 08       		.byte	0x8
 23220 04c4 1701     		.2byte	0x117
 23221 04c6 51050000 		.4byte	0x551
 23222 04ca 08       		.byte	0x8
 23223 04cb 12       		.uleb128 0x12
 23224 04cc D30C0000 		.4byte	.LASF109
 23225 04d0 08       		.byte	0x8
 23226 04d1 1801     		.2byte	0x118
 23227 04d3 61050000 		.4byte	0x561
 23228 04d7 30       		.byte	0x30
 23229 04d8 12       		.uleb128 0x12
 23230 04d9 76010000 		.4byte	.LASF110
 23231 04dd 08       		.byte	0x8
 23232 04de 1901     		.2byte	0x119
 23233 04e0 AF000000 		.4byte	0xaf
 23234 04e4 40       		.byte	0x40
 23235 04e5 12       		.uleb128 0x12
 23236 04e6 62140000 		.4byte	.LASF111
 23237 04ea 08       		.byte	0x8
 23238 04eb 1A01     		.2byte	0x11a
 23239 04ed AF000000 		.4byte	0xaf
 23240 04f1 44       		.byte	0x44
 23241 04f2 12       		.uleb128 0x12
 23242 04f3 CF000000 		.4byte	.LASF112
 23243 04f7 08       		.byte	0x8
 23244 04f8 1B01     		.2byte	0x11b
 23245 04fa AF000000 		.4byte	0xaf
 23246 04fe 48       		.byte	0x48
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 517


 23247 04ff 12       		.uleb128 0x12
 23248 0500 15080000 		.4byte	.LASF113
 23249 0504 08       		.byte	0x8
 23250 0505 1C01     		.2byte	0x11c
 23251 0507 AF000000 		.4byte	0xaf
 23252 050b 4C       		.byte	0x4c
 23253 050c 12       		.uleb128 0x12
 23254 050d 42000000 		.4byte	.LASF114
 23255 0511 08       		.byte	0x8
 23256 0512 1D01     		.2byte	0x11d
 23257 0514 AF000000 		.4byte	0xaf
 23258 0518 50       		.byte	0x50
 23259 0519 12       		.uleb128 0x12
 23260 051a C0020000 		.4byte	.LASF115
 23261 051e 08       		.byte	0x8
 23262 051f 1E01     		.2byte	0x11e
 23263 0521 41050000 		.4byte	0x541
 23264 0525 54       		.byte	0x54
 23265 0526 12       		.uleb128 0x12
 23266 0527 2F0D0000 		.4byte	.LASF116
 23267 052b 08       		.byte	0x8
 23268 052c 1F01     		.2byte	0x11f
 23269 052e 41050000 		.4byte	0x541
 23270 0532 5C       		.byte	0x5c
 23271 0533 12       		.uleb128 0x12
 23272 0534 55030000 		.4byte	.LASF117
 23273 0538 08       		.byte	0x8
 23274 0539 2001     		.2byte	0x120
 23275 053b 71050000 		.4byte	0x571
 23276 053f 64       		.byte	0x64
 23277 0540 00       		.byte	0
 23278 0541 09       		.uleb128 0x9
 23279 0542 AF000000 		.4byte	0xaf
 23280 0546 51050000 		.4byte	0x551
 23281 054a 0A       		.uleb128 0xa
 23282 054b 18010000 		.4byte	0x118
 23283 054f 01       		.byte	0x1
 23284 0550 00       		.byte	0
 23285 0551 09       		.uleb128 0x9
 23286 0552 AF000000 		.4byte	0xaf
 23287 0556 61050000 		.4byte	0x561
 23288 055a 0A       		.uleb128 0xa
 23289 055b 18010000 		.4byte	0x118
 23290 055f 09       		.byte	0x9
 23291 0560 00       		.byte	0
 23292 0561 09       		.uleb128 0x9
 23293 0562 AF000000 		.4byte	0xaf
 23294 0566 71050000 		.4byte	0x571
 23295 056a 0A       		.uleb128 0xa
 23296 056b 18010000 		.4byte	0x118
 23297 056f 03       		.byte	0x3
 23298 0570 00       		.byte	0
 23299 0571 09       		.uleb128 0x9
 23300 0572 97000000 		.4byte	0x97
 23301 0576 81050000 		.4byte	0x581
 23302 057a 0A       		.uleb128 0xa
 23303 057b 18010000 		.4byte	0x118
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 518


 23304 057f 0B       		.byte	0xb
 23305 0580 00       		.byte	0
 23306 0581 11       		.uleb128 0x11
 23307 0582 0C060000 		.4byte	.LASF118
 23308 0586 10       		.byte	0x10
 23309 0587 08       		.byte	0x8
 23310 0588 2701     		.2byte	0x127
 23311 058a 10060000 		.4byte	0x610
 23312 058e 13       		.uleb128 0x13
 23313 058f 696400   		.ascii	"id\000"
 23314 0592 08       		.byte	0x8
 23315 0593 2801     		.2byte	0x128
 23316 0595 97000000 		.4byte	0x97
 23317 0599 00       		.byte	0
 23318 059a 12       		.uleb128 0x12
 23319 059b 5E110000 		.4byte	.LASF119
 23320 059f 08       		.byte	0x8
 23321 05a0 2901     		.2byte	0x129
 23322 05a2 10060000 		.4byte	0x610
 23323 05a6 01       		.byte	0x1
 23324 05a7 12       		.uleb128 0x12
 23325 05a8 DA110000 		.4byte	.LASF120
 23326 05ac 08       		.byte	0x8
 23327 05ad 2A01     		.2byte	0x12a
 23328 05af 10060000 		.4byte	0x610
 23329 05b3 04       		.byte	0x4
 23330 05b4 12       		.uleb128 0x12
 23331 05b5 C5040000 		.4byte	.LASF121
 23332 05b9 08       		.byte	0x8
 23333 05ba 2B01     		.2byte	0x12b
 23334 05bc 97000000 		.4byte	0x97
 23335 05c0 07       		.byte	0x7
 23336 05c1 12       		.uleb128 0x12
 23337 05c2 24030000 		.4byte	.LASF122
 23338 05c6 08       		.byte	0x8
 23339 05c7 2C01     		.2byte	0x12c
 23340 05c9 97000000 		.4byte	0x97
 23341 05cd 08       		.byte	0x8
 23342 05ce 12       		.uleb128 0x12
 23343 05cf A5020000 		.4byte	.LASF123
 23344 05d3 08       		.byte	0x8
 23345 05d4 2D01     		.2byte	0x12d
 23346 05d6 97000000 		.4byte	0x97
 23347 05da 09       		.byte	0x9
 23348 05db 12       		.uleb128 0x12
 23349 05dc 1F130000 		.4byte	.LASF124
 23350 05e0 08       		.byte	0x8
 23351 05e1 2E01     		.2byte	0x12e
 23352 05e3 97000000 		.4byte	0x97
 23353 05e7 0A       		.byte	0xa
 23354 05e8 12       		.uleb128 0x12
 23355 05e9 E3120000 		.4byte	.LASF125
 23356 05ed 08       		.byte	0x8
 23357 05ee 2F01     		.2byte	0x12f
 23358 05f0 97000000 		.4byte	0x97
 23359 05f4 0B       		.byte	0xb
 23360 05f5 12       		.uleb128 0x12
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 519


 23361 05f6 AE0F0000 		.4byte	.LASF126
 23362 05fa 08       		.byte	0x8
 23363 05fb 3001     		.2byte	0x130
 23364 05fd 97000000 		.4byte	0x97
 23365 0601 0C       		.byte	0xc
 23366 0602 12       		.uleb128 0x12
 23367 0603 55030000 		.4byte	.LASF117
 23368 0607 08       		.byte	0x8
 23369 0608 3101     		.2byte	0x131
 23370 060a 10060000 		.4byte	0x610
 23371 060e 0D       		.byte	0xd
 23372 060f 00       		.byte	0
 23373 0610 09       		.uleb128 0x9
 23374 0611 97000000 		.4byte	0x97
 23375 0615 20060000 		.4byte	0x620
 23376 0619 0A       		.uleb128 0xa
 23377 061a 18010000 		.4byte	0x118
 23378 061e 02       		.byte	0x2
 23379 061f 00       		.byte	0
 23380 0620 11       		.uleb128 0x11
 23381 0621 FA130000 		.4byte	.LASF127
 23382 0625 70       		.byte	0x70
 23383 0626 08       		.byte	0x8
 23384 0627 3801     		.2byte	0x138
 23385 0629 9A070000 		.4byte	0x79a
 23386 062d 13       		.uleb128 0x13
 23387 062e 6B5F7000 		.ascii	"k_p\000"
 23388 0632 08       		.byte	0x8
 23389 0633 3901     		.2byte	0x139
 23390 0635 D3000000 		.4byte	0xd3
 23391 0639 00       		.byte	0
 23392 063a 13       		.uleb128 0x13
 23393 063b 6B5F6900 		.ascii	"k_i\000"
 23394 063f 08       		.byte	0x8
 23395 0640 3A01     		.2byte	0x13a
 23396 0642 D3000000 		.4byte	0xd3
 23397 0646 04       		.byte	0x4
 23398 0647 13       		.uleb128 0x13
 23399 0648 6B5F6400 		.ascii	"k_d\000"
 23400 064c 08       		.byte	0x8
 23401 064d 3B01     		.2byte	0x13b
 23402 064f D3000000 		.4byte	0xd3
 23403 0653 08       		.byte	0x8
 23404 0654 12       		.uleb128 0x12
 23405 0655 950E0000 		.4byte	.LASF128
 23406 0659 08       		.byte	0x8
 23407 065a 3C01     		.2byte	0x13c
 23408 065c D3000000 		.4byte	0xd3
 23409 0660 0C       		.byte	0xc
 23410 0661 12       		.uleb128 0x12
 23411 0662 BA050000 		.4byte	.LASF129
 23412 0666 08       		.byte	0x8
 23413 0667 3D01     		.2byte	0x13d
 23414 0669 D3000000 		.4byte	0xd3
 23415 066d 10       		.byte	0x10
 23416 066e 12       		.uleb128 0x12
 23417 066f 94050000 		.4byte	.LASF130
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 520


 23418 0673 08       		.byte	0x8
 23419 0674 3E01     		.2byte	0x13e
 23420 0676 D3000000 		.4byte	0xd3
 23421 067a 14       		.byte	0x14
 23422 067b 12       		.uleb128 0x12
 23423 067c 86120000 		.4byte	.LASF131
 23424 0680 08       		.byte	0x8
 23425 0681 3F01     		.2byte	0x13f
 23426 0683 D3000000 		.4byte	0xd3
 23427 0687 18       		.byte	0x18
 23428 0688 12       		.uleb128 0x12
 23429 0689 3D060000 		.4byte	.LASF132
 23430 068d 08       		.byte	0x8
 23431 068e 4001     		.2byte	0x140
 23432 0690 D3000000 		.4byte	0xd3
 23433 0694 1C       		.byte	0x1c
 23434 0695 12       		.uleb128 0x12
 23435 0696 20110000 		.4byte	.LASF133
 23436 069a 08       		.byte	0x8
 23437 069b 4101     		.2byte	0x141
 23438 069d D3000000 		.4byte	0xd3
 23439 06a1 20       		.byte	0x20
 23440 06a2 12       		.uleb128 0x12
 23441 06a3 5A060000 		.4byte	.LASF134
 23442 06a7 08       		.byte	0x8
 23443 06a8 4201     		.2byte	0x142
 23444 06aa D3000000 		.4byte	0xd3
 23445 06ae 24       		.byte	0x24
 23446 06af 12       		.uleb128 0x12
 23447 06b0 2B070000 		.4byte	.LASF135
 23448 06b4 08       		.byte	0x8
 23449 06b5 4301     		.2byte	0x143
 23450 06b7 D3000000 		.4byte	0xd3
 23451 06bb 28       		.byte	0x28
 23452 06bc 12       		.uleb128 0x12
 23453 06bd 11150000 		.4byte	.LASF136
 23454 06c1 08       		.byte	0x8
 23455 06c2 4401     		.2byte	0x144
 23456 06c4 D3000000 		.4byte	0xd3
 23457 06c8 2C       		.byte	0x2c
 23458 06c9 12       		.uleb128 0x12
 23459 06ca 31080000 		.4byte	.LASF137
 23460 06ce 08       		.byte	0x8
 23461 06cf 4501     		.2byte	0x145
 23462 06d1 97000000 		.4byte	0x97
 23463 06d5 30       		.byte	0x30
 23464 06d6 12       		.uleb128 0x12
 23465 06d7 6F120000 		.4byte	.LASF138
 23466 06db 08       		.byte	0x8
 23467 06dc 4601     		.2byte	0x146
 23468 06de 97000000 		.4byte	0x97
 23469 06e2 31       		.byte	0x31
 23470 06e3 12       		.uleb128 0x12
 23471 06e4 B50E0000 		.4byte	.LASF139
 23472 06e8 08       		.byte	0x8
 23473 06e9 4701     		.2byte	0x147
 23474 06eb 97000000 		.4byte	0x97
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 521


 23475 06ef 32       		.byte	0x32
 23476 06f0 12       		.uleb128 0x12
 23477 06f1 17140000 		.4byte	.LASF140
 23478 06f5 08       		.byte	0x8
 23479 06f6 4801     		.2byte	0x148
 23480 06f8 97000000 		.4byte	0x97
 23481 06fc 33       		.byte	0x33
 23482 06fd 12       		.uleb128 0x12
 23483 06fe 2A010000 		.4byte	.LASF141
 23484 0702 08       		.byte	0x8
 23485 0703 4901     		.2byte	0x149
 23486 0705 D3000000 		.4byte	0xd3
 23487 0709 34       		.byte	0x34
 23488 070a 12       		.uleb128 0x12
 23489 070b D9050000 		.4byte	.LASF142
 23490 070f 08       		.byte	0x8
 23491 0710 4A01     		.2byte	0x14a
 23492 0712 D3000000 		.4byte	0xd3
 23493 0716 38       		.byte	0x38
 23494 0717 12       		.uleb128 0x12
 23495 0718 630A0000 		.4byte	.LASF143
 23496 071c 08       		.byte	0x8
 23497 071d 4B01     		.2byte	0x14b
 23498 071f D3000000 		.4byte	0xd3
 23499 0723 3C       		.byte	0x3c
 23500 0724 12       		.uleb128 0x12
 23501 0725 41050000 		.4byte	.LASF144
 23502 0729 08       		.byte	0x8
 23503 072a 4C01     		.2byte	0x14c
 23504 072c D3000000 		.4byte	0xd3
 23505 0730 40       		.byte	0x40
 23506 0731 12       		.uleb128 0x12
 23507 0732 6A010000 		.4byte	.LASF145
 23508 0736 08       		.byte	0x8
 23509 0737 4D01     		.2byte	0x14d
 23510 0739 9A070000 		.4byte	0x79a
 23511 073d 44       		.byte	0x44
 23512 073e 12       		.uleb128 0x12
 23513 073f A7140000 		.4byte	.LASF146
 23514 0743 08       		.byte	0x8
 23515 0744 4E01     		.2byte	0x14e
 23516 0746 C7000000 		.4byte	0xc7
 23517 074a 5C       		.byte	0x5c
 23518 074b 12       		.uleb128 0x12
 23519 074c 7E080000 		.4byte	.LASF147
 23520 0750 08       		.byte	0x8
 23521 0751 4F01     		.2byte	0x14f
 23522 0753 97000000 		.4byte	0x97
 23523 0757 5E       		.byte	0x5e
 23524 0758 12       		.uleb128 0x12
 23525 0759 C70B0000 		.4byte	.LASF148
 23526 075d 08       		.byte	0x8
 23527 075e 5001     		.2byte	0x150
 23528 0760 97000000 		.4byte	0x97
 23529 0764 5F       		.byte	0x5f
 23530 0765 12       		.uleb128 0x12
 23531 0766 E9040000 		.4byte	.LASF149
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 522


 23532 076a 08       		.byte	0x8
 23533 076b 5101     		.2byte	0x151
 23534 076d 97000000 		.4byte	0x97
 23535 0771 60       		.byte	0x60
 23536 0772 12       		.uleb128 0x12
 23537 0773 83050000 		.4byte	.LASF150
 23538 0777 08       		.byte	0x8
 23539 0778 5201     		.2byte	0x152
 23540 077a 97000000 		.4byte	0x97
 23541 077e 61       		.byte	0x61
 23542 077f 12       		.uleb128 0x12
 23543 0780 A6040000 		.4byte	.LASF151
 23544 0784 08       		.byte	0x8
 23545 0785 5301     		.2byte	0x153
 23546 0787 97000000 		.4byte	0x97
 23547 078b 62       		.byte	0x62
 23548 078c 12       		.uleb128 0x12
 23549 078d 55030000 		.4byte	.LASF117
 23550 0791 08       		.byte	0x8
 23551 0792 5401     		.2byte	0x154
 23552 0794 AA070000 		.4byte	0x7aa
 23553 0798 63       		.byte	0x63
 23554 0799 00       		.byte	0
 23555 079a 09       		.uleb128 0x9
 23556 079b EB000000 		.4byte	0xeb
 23557 079f AA070000 		.4byte	0x7aa
 23558 07a3 0A       		.uleb128 0xa
 23559 07a4 18010000 		.4byte	0x118
 23560 07a8 05       		.byte	0x5
 23561 07a9 00       		.byte	0
 23562 07aa 09       		.uleb128 0x9
 23563 07ab 97000000 		.4byte	0x97
 23564 07af BA070000 		.4byte	0x7ba
 23565 07b3 0A       		.uleb128 0xa
 23566 07b4 18010000 		.4byte	0x118
 23567 07b8 0C       		.byte	0xc
 23568 07b9 00       		.byte	0
 23569 07ba 11       		.uleb128 0x11
 23570 07bb 90130000 		.4byte	.LASF152
 23571 07bf 30       		.byte	0x30
 23572 07c0 08       		.byte	0x8
 23573 07c1 5B01     		.2byte	0x15b
 23574 07c3 3D080000 		.4byte	0x83d
 23575 07c7 12       		.uleb128 0x12
 23576 07c8 450A0000 		.4byte	.LASF153
 23577 07cc 08       		.byte	0x8
 23578 07cd 5C01     		.2byte	0x15c
 23579 07cf 3D080000 		.4byte	0x83d
 23580 07d3 00       		.byte	0
 23581 07d4 13       		.uleb128 0x13
 23582 07d5 72657300 		.ascii	"res\000"
 23583 07d9 08       		.byte	0x8
 23584 07da 5D01     		.2byte	0x15d
 23585 07dc 10060000 		.4byte	0x610
 23586 07e0 05       		.byte	0x5
 23587 07e1 12       		.uleb128 0x12
 23588 07e2 40080000 		.4byte	.LASF154
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 523


 23589 07e6 08       		.byte	0x8
 23590 07e7 5E01     		.2byte	0x15e
 23591 07e9 C6030000 		.4byte	0x3c6
 23592 07ed 08       		.byte	0x8
 23593 07ee 12       		.uleb128 0x12
 23594 07ef B3050000 		.4byte	.LASF155
 23595 07f3 08       		.byte	0x8
 23596 07f4 5F01     		.2byte	0x15f
 23597 07f6 4D080000 		.4byte	0x84d
 23598 07fa 14       		.byte	0x14
 23599 07fb 12       		.uleb128 0x12
 23600 07fc 780D0000 		.4byte	.LASF156
 23601 0800 08       		.byte	0x8
 23602 0801 6001     		.2byte	0x160
 23603 0803 97000000 		.4byte	0x97
 23604 0807 20       		.byte	0x20
 23605 0808 12       		.uleb128 0x12
 23606 0809 60020000 		.4byte	.LASF157
 23607 080d 08       		.byte	0x8
 23608 080e 6101     		.2byte	0x161
 23609 0810 10060000 		.4byte	0x610
 23610 0814 21       		.byte	0x21
 23611 0815 12       		.uleb128 0x12
 23612 0816 C00C0000 		.4byte	.LASF158
 23613 081a 08       		.byte	0x8
 23614 081b 6201     		.2byte	0x162
 23615 081d BB000000 		.4byte	0xbb
 23616 0821 24       		.byte	0x24
 23617 0822 12       		.uleb128 0x12
 23618 0823 D50F0000 		.4byte	.LASF159
 23619 0827 08       		.byte	0x8
 23620 0828 6301     		.2byte	0x163
 23621 082a D6030000 		.4byte	0x3d6
 23622 082e 25       		.byte	0x25
 23623 082f 12       		.uleb128 0x12
 23624 0830 55030000 		.4byte	.LASF117
 23625 0834 08       		.byte	0x8
 23626 0835 6401     		.2byte	0x164
 23627 0837 5D080000 		.4byte	0x85d
 23628 083b 28       		.byte	0x28
 23629 083c 00       		.byte	0
 23630 083d 09       		.uleb128 0x9
 23631 083e 97000000 		.4byte	0x97
 23632 0842 4D080000 		.4byte	0x84d
 23633 0846 0A       		.uleb128 0xa
 23634 0847 18010000 		.4byte	0x118
 23635 084b 04       		.byte	0x4
 23636 084c 00       		.byte	0
 23637 084d 09       		.uleb128 0x9
 23638 084e DF000000 		.4byte	0xdf
 23639 0852 5D080000 		.4byte	0x85d
 23640 0856 0A       		.uleb128 0xa
 23641 0857 18010000 		.4byte	0x118
 23642 085b 02       		.byte	0x2
 23643 085c 00       		.byte	0
 23644 085d 09       		.uleb128 0x9
 23645 085e 97000000 		.4byte	0x97
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 524


 23646 0862 6D080000 		.4byte	0x86d
 23647 0866 0A       		.uleb128 0xa
 23648 0867 18010000 		.4byte	0x118
 23649 086b 07       		.byte	0x7
 23650 086c 00       		.byte	0
 23651 086d 11       		.uleb128 0x11
 23652 086e 0C020000 		.4byte	.LASF160
 23653 0872 10       		.byte	0x10
 23654 0873 08       		.byte	0x8
 23655 0874 6B01     		.2byte	0x16b
 23656 0876 BC080000 		.4byte	0x8bc
 23657 087a 12       		.uleb128 0x12
 23658 087b A00C0000 		.4byte	.LASF161
 23659 087f 08       		.byte	0x8
 23660 0880 6C01     		.2byte	0x16c
 23661 0882 BC080000 		.4byte	0x8bc
 23662 0886 00       		.byte	0
 23663 0887 12       		.uleb128 0x12
 23664 0888 6C140000 		.4byte	.LASF162
 23665 088c 08       		.byte	0x8
 23666 088d 6D01     		.2byte	0x16d
 23667 088f 41050000 		.4byte	0x541
 23668 0893 04       		.byte	0x4
 23669 0894 12       		.uleb128 0x12
 23670 0895 ED050000 		.4byte	.LASF163
 23671 0899 08       		.byte	0x8
 23672 089a 6E01     		.2byte	0x16e
 23673 089c CC080000 		.4byte	0x8cc
 23674 08a0 0C       		.byte	0xc
 23675 08a1 12       		.uleb128 0x12
 23676 08a2 EF0F0000 		.4byte	.LASF164
 23677 08a6 08       		.byte	0x8
 23678 08a7 6F01     		.2byte	0x16f
 23679 08a9 97000000 		.4byte	0x97
 23680 08ad 0E       		.byte	0xe
 23681 08ae 12       		.uleb128 0x12
 23682 08af 64120000 		.4byte	.LASF165
 23683 08b3 08       		.byte	0x8
 23684 08b4 7001     		.2byte	0x170
 23685 08b6 97000000 		.4byte	0x97
 23686 08ba 0F       		.byte	0xf
 23687 08bb 00       		.byte	0
 23688 08bc 09       		.uleb128 0x9
 23689 08bd A3000000 		.4byte	0xa3
 23690 08c1 CC080000 		.4byte	0x8cc
 23691 08c5 0A       		.uleb128 0xa
 23692 08c6 18010000 		.4byte	0x118
 23693 08ca 01       		.byte	0x1
 23694 08cb 00       		.byte	0
 23695 08cc 09       		.uleb128 0x9
 23696 08cd 97000000 		.4byte	0x97
 23697 08d1 DC080000 		.4byte	0x8dc
 23698 08d5 0A       		.uleb128 0xa
 23699 08d6 18010000 		.4byte	0x118
 23700 08da 01       		.byte	0x1
 23701 08db 00       		.byte	0
 23702 08dc 11       		.uleb128 0x11
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 525


 23703 08dd 0F0C0000 		.4byte	.LASF166
 23704 08e1 20       		.byte	0x20
 23705 08e2 08       		.byte	0x8
 23706 08e3 7701     		.2byte	0x177
 23707 08e5 1E090000 		.4byte	0x91e
 23708 08e9 12       		.uleb128 0x12
 23709 08ea DA020000 		.4byte	.LASF167
 23710 08ee 08       		.byte	0x8
 23711 08ef 7801     		.2byte	0x178
 23712 08f1 97000000 		.4byte	0x97
 23713 08f5 00       		.byte	0
 23714 08f6 12       		.uleb128 0x12
 23715 08f7 8E0D0000 		.4byte	.LASF168
 23716 08fb 08       		.byte	0x8
 23717 08fc 7901     		.2byte	0x179
 23718 08fe 97000000 		.4byte	0x97
 23719 0902 01       		.byte	0x1
 23720 0903 12       		.uleb128 0x12
 23721 0904 F50A0000 		.4byte	.LASF169
 23722 0908 08       		.byte	0x8
 23723 0909 7A01     		.2byte	0x17a
 23724 090b 1E090000 		.4byte	0x91e
 23725 090f 02       		.byte	0x2
 23726 0910 12       		.uleb128 0x12
 23727 0911 55030000 		.4byte	.LASF117
 23728 0915 08       		.byte	0x8
 23729 0916 7B01     		.2byte	0x17b
 23730 0918 3D080000 		.4byte	0x83d
 23731 091c 1B       		.byte	0x1b
 23732 091d 00       		.byte	0
 23733 091e 09       		.uleb128 0x9
 23734 091f 97000000 		.4byte	0x97
 23735 0923 34090000 		.4byte	0x934
 23736 0927 0A       		.uleb128 0xa
 23737 0928 18010000 		.4byte	0x118
 23738 092c 04       		.byte	0x4
 23739 092d 0A       		.uleb128 0xa
 23740 092e 18010000 		.4byte	0x118
 23741 0932 04       		.byte	0x4
 23742 0933 00       		.byte	0
 23743 0934 11       		.uleb128 0x11
 23744 0935 E20F0000 		.4byte	.LASF170
 23745 0939 20       		.byte	0x20
 23746 093a 08       		.byte	0x8
 23747 093b 8201     		.2byte	0x182
 23748 093d 90090000 		.4byte	0x990
 23749 0941 12       		.uleb128 0x12
 23750 0942 6E0D0000 		.4byte	.LASF171
 23751 0946 08       		.byte	0x8
 23752 0947 8301     		.2byte	0x183
 23753 0949 90090000 		.4byte	0x990
 23754 094d 00       		.byte	0
 23755 094e 12       		.uleb128 0x12
 23756 094f 51120000 		.4byte	.LASF172
 23757 0953 08       		.byte	0x8
 23758 0954 8401     		.2byte	0x184
 23759 0956 97000000 		.4byte	0x97
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 526


 23760 095a 06       		.byte	0x6
 23761 095b 12       		.uleb128 0x12
 23762 095c A6120000 		.4byte	.LASF173
 23763 0960 08       		.byte	0x8
 23764 0961 8501     		.2byte	0x185
 23765 0963 97000000 		.4byte	0x97
 23766 0967 07       		.byte	0x7
 23767 0968 12       		.uleb128 0x12
 23768 0969 1C060000 		.4byte	.LASF174
 23769 096d 08       		.byte	0x8
 23770 096e 8601     		.2byte	0x186
 23771 0970 71050000 		.4byte	0x571
 23772 0974 08       		.byte	0x8
 23773 0975 12       		.uleb128 0x12
 23774 0976 E8020000 		.4byte	.LASF175
 23775 097a 08       		.byte	0x8
 23776 097b 8701     		.2byte	0x187
 23777 097d 97000000 		.4byte	0x97
 23778 0981 14       		.byte	0x14
 23779 0982 12       		.uleb128 0x12
 23780 0983 55030000 		.4byte	.LASF117
 23781 0987 08       		.byte	0x8
 23782 0988 8801     		.2byte	0x188
 23783 098a A0090000 		.4byte	0x9a0
 23784 098e 15       		.byte	0x15
 23785 098f 00       		.byte	0
 23786 0990 09       		.uleb128 0x9
 23787 0991 97000000 		.4byte	0x97
 23788 0995 A0090000 		.4byte	0x9a0
 23789 0999 0A       		.uleb128 0xa
 23790 099a 18010000 		.4byte	0x118
 23791 099e 05       		.byte	0x5
 23792 099f 00       		.byte	0
 23793 09a0 09       		.uleb128 0x9
 23794 09a1 97000000 		.4byte	0x97
 23795 09a5 B0090000 		.4byte	0x9b0
 23796 09a9 0A       		.uleb128 0xa
 23797 09aa 18010000 		.4byte	0x118
 23798 09ae 0A       		.byte	0xa
 23799 09af 00       		.byte	0
 23800 09b0 11       		.uleb128 0x11
 23801 09b1 B70F0000 		.4byte	.LASF176
 23802 09b5 20       		.byte	0x20
 23803 09b6 08       		.byte	0x8
 23804 09b7 8F01     		.2byte	0x18f
 23805 09b9 E5090000 		.4byte	0x9e5
 23806 09bd 12       		.uleb128 0x12
 23807 09be 34040000 		.4byte	.LASF177
 23808 09c2 08       		.byte	0x8
 23809 09c3 9001     		.2byte	0x190
 23810 09c5 40010000 		.4byte	0x140
 23811 09c9 00       		.byte	0
 23812 09ca 12       		.uleb128 0x12
 23813 09cb 33030000 		.4byte	.LASF178
 23814 09cf 08       		.byte	0x8
 23815 09d0 9101     		.2byte	0x191
 23816 09d2 6D080000 		.4byte	0x86d
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 527


 23817 09d6 08       		.byte	0x8
 23818 09d7 12       		.uleb128 0x12
 23819 09d8 55030000 		.4byte	.LASF117
 23820 09dc 08       		.byte	0x8
 23821 09dd 9201     		.2byte	0x192
 23822 09df 5D080000 		.4byte	0x85d
 23823 09e3 18       		.byte	0x18
 23824 09e4 00       		.byte	0
 23825 09e5 11       		.uleb128 0x11
 23826 09e6 C7090000 		.4byte	.LASF179
 23827 09ea 10       		.byte	0x10
 23828 09eb 08       		.byte	0x8
 23829 09ec 9901     		.2byte	0x199
 23830 09ee 340A0000 		.4byte	0xa34
 23831 09f2 12       		.uleb128 0x12
 23832 09f3 70080000 		.4byte	.LASF180
 23833 09f7 08       		.byte	0x8
 23834 09f8 9A01     		.2byte	0x19a
 23835 09fa D3000000 		.4byte	0xd3
 23836 09fe 00       		.byte	0
 23837 09ff 12       		.uleb128 0x12
 23838 0a00 F5140000 		.4byte	.LASF181
 23839 0a04 08       		.byte	0x8
 23840 0a05 9B01     		.2byte	0x19b
 23841 0a07 D3000000 		.4byte	0xd3
 23842 0a0b 04       		.byte	0x4
 23843 0a0c 12       		.uleb128 0x12
 23844 0a0d F7050000 		.4byte	.LASF182
 23845 0a11 08       		.byte	0x8
 23846 0a12 9C01     		.2byte	0x19c
 23847 0a14 D3000000 		.4byte	0xd3
 23848 0a18 08       		.byte	0x8
 23849 0a19 12       		.uleb128 0x12
 23850 0a1a F1060000 		.4byte	.LASF183
 23851 0a1e 08       		.byte	0x8
 23852 0a1f 9D01     		.2byte	0x19d
 23853 0a21 97000000 		.4byte	0x97
 23854 0a25 0C       		.byte	0xc
 23855 0a26 12       		.uleb128 0x12
 23856 0a27 55030000 		.4byte	.LASF117
 23857 0a2b 08       		.byte	0x8
 23858 0a2c 9E01     		.2byte	0x19e
 23859 0a2e 10060000 		.4byte	0x610
 23860 0a32 0D       		.byte	0xd
 23861 0a33 00       		.byte	0
 23862 0a34 11       		.uleb128 0x11
 23863 0a35 E8100000 		.4byte	.LASF184
 23864 0a39 10       		.byte	0x10
 23865 0a3a 08       		.byte	0x8
 23866 0a3b A501     		.2byte	0x1a5
 23867 0a3d 760A0000 		.4byte	0xa76
 23868 0a41 12       		.uleb128 0x12
 23869 0a42 04070000 		.4byte	.LASF185
 23870 0a46 08       		.byte	0x8
 23871 0a47 A601     		.2byte	0x1a6
 23872 0a49 A3000000 		.4byte	0xa3
 23873 0a4d 00       		.byte	0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 528


 23874 0a4e 12       		.uleb128 0x12
 23875 0a4f 1C100000 		.4byte	.LASF186
 23876 0a53 08       		.byte	0x8
 23877 0a54 A701     		.2byte	0x1a7
 23878 0a56 C7000000 		.4byte	0xc7
 23879 0a5a 02       		.byte	0x2
 23880 0a5b 12       		.uleb128 0x12
 23881 0a5c E8070000 		.4byte	.LASF187
 23882 0a60 08       		.byte	0x8
 23883 0a61 A801     		.2byte	0x1a8
 23884 0a63 BC080000 		.4byte	0x8bc
 23885 0a67 04       		.byte	0x4
 23886 0a68 12       		.uleb128 0x12
 23887 0a69 55030000 		.4byte	.LASF117
 23888 0a6d 08       		.byte	0x8
 23889 0a6e A901     		.2byte	0x1a9
 23890 0a70 5D080000 		.4byte	0x85d
 23891 0a74 08       		.byte	0x8
 23892 0a75 00       		.byte	0
 23893 0a76 11       		.uleb128 0x11
 23894 0a77 98010000 		.4byte	.LASF188
 23895 0a7b 10       		.byte	0x10
 23896 0a7c 08       		.byte	0x8
 23897 0a7d B001     		.2byte	0x1b0
 23898 0a7f AB0A0000 		.4byte	0xaab
 23899 0a83 12       		.uleb128 0x12
 23900 0a84 560F0000 		.4byte	.LASF189
 23901 0a88 08       		.byte	0x8
 23902 0a89 B101     		.2byte	0x1b1
 23903 0a8b 97000000 		.4byte	0x97
 23904 0a8f 00       		.byte	0
 23905 0a90 12       		.uleb128 0x12
 23906 0a91 BF0A0000 		.4byte	.LASF190
 23907 0a95 08       		.byte	0x8
 23908 0a96 B201     		.2byte	0x1b2
 23909 0a98 97000000 		.4byte	0x97
 23910 0a9c 01       		.byte	0x1
 23911 0a9d 12       		.uleb128 0x12
 23912 0a9e 55030000 		.4byte	.LASF117
 23913 0aa2 08       		.byte	0x8
 23914 0aa3 B301     		.2byte	0x1b3
 23915 0aa5 AB0A0000 		.4byte	0xaab
 23916 0aa9 02       		.byte	0x2
 23917 0aaa 00       		.byte	0
 23918 0aab 09       		.uleb128 0x9
 23919 0aac 97000000 		.4byte	0x97
 23920 0ab0 BB0A0000 		.4byte	0xabb
 23921 0ab4 0A       		.uleb128 0xa
 23922 0ab5 18010000 		.4byte	0x118
 23923 0ab9 0D       		.byte	0xd
 23924 0aba 00       		.byte	0
 23925 0abb 11       		.uleb128 0x11
 23926 0abc 080D0000 		.4byte	.LASF191
 23927 0ac0 10       		.byte	0x10
 23928 0ac1 08       		.byte	0x8
 23929 0ac2 BA01     		.2byte	0x1ba
 23930 0ac4 FD0A0000 		.4byte	0xafd
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 529


 23931 0ac8 12       		.uleb128 0x12
 23932 0ac9 A6130000 		.4byte	.LASF192
 23933 0acd 08       		.byte	0x8
 23934 0ace BB01     		.2byte	0x1bb
 23935 0ad0 D3000000 		.4byte	0xd3
 23936 0ad4 00       		.byte	0
 23937 0ad5 12       		.uleb128 0x12
 23938 0ad6 DC060000 		.4byte	.LASF193
 23939 0ada 08       		.byte	0x8
 23940 0adb BC01     		.2byte	0x1bc
 23941 0add EB000000 		.4byte	0xeb
 23942 0ae1 04       		.byte	0x4
 23943 0ae2 12       		.uleb128 0x12
 23944 0ae3 E80E0000 		.4byte	.LASF194
 23945 0ae7 08       		.byte	0x8
 23946 0ae8 BD01     		.2byte	0x1bd
 23947 0aea EB000000 		.4byte	0xeb
 23948 0aee 08       		.byte	0x8
 23949 0aef 12       		.uleb128 0x12
 23950 0af0 55030000 		.4byte	.LASF117
 23951 0af4 08       		.byte	0x8
 23952 0af5 BE01     		.2byte	0x1be
 23953 0af7 FD0A0000 		.4byte	0xafd
 23954 0afb 0C       		.byte	0xc
 23955 0afc 00       		.byte	0
 23956 0afd 09       		.uleb128 0x9
 23957 0afe 97000000 		.4byte	0x97
 23958 0b02 0D0B0000 		.4byte	0xb0d
 23959 0b06 0A       		.uleb128 0xa
 23960 0b07 18010000 		.4byte	0x118
 23961 0b0b 03       		.byte	0x3
 23962 0b0c 00       		.byte	0
 23963 0b0d 11       		.uleb128 0x11
 23964 0b0e 4F020000 		.4byte	.LASF195
 23965 0b12 12       		.byte	0x12
 23966 0b13 08       		.byte	0x8
 23967 0b14 C501     		.2byte	0x1c5
 23968 0b16 4F0B0000 		.4byte	0xb4f
 23969 0b1a 12       		.uleb128 0x12
 23970 0b1b CD140000 		.4byte	.LASF196
 23971 0b1f 08       		.byte	0x8
 23972 0b20 C601     		.2byte	0x1c6
 23973 0b22 97000000 		.4byte	0x97
 23974 0b26 00       		.byte	0
 23975 0b27 12       		.uleb128 0x12
 23976 0b28 2F130000 		.4byte	.LASF197
 23977 0b2c 08       		.byte	0x8
 23978 0b2d C701     		.2byte	0x1c7
 23979 0b2f BC080000 		.4byte	0x8bc
 23980 0b33 02       		.byte	0x2
 23981 0b34 12       		.uleb128 0x12
 23982 0b35 61000000 		.4byte	.LASF198
 23983 0b39 08       		.byte	0x8
 23984 0b3a C801     		.2byte	0x1c8
 23985 0b3c 97000000 		.4byte	0x97
 23986 0b40 06       		.byte	0x6
 23987 0b41 12       		.uleb128 0x12
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 530


 23988 0b42 55030000 		.4byte	.LASF117
 23989 0b46 08       		.byte	0x8
 23990 0b47 C901     		.2byte	0x1c9
 23991 0b49 4F0B0000 		.4byte	0xb4f
 23992 0b4d 07       		.byte	0x7
 23993 0b4e 00       		.byte	0
 23994 0b4f 09       		.uleb128 0x9
 23995 0b50 97000000 		.4byte	0x97
 23996 0b54 5F0B0000 		.4byte	0xb5f
 23997 0b58 0A       		.uleb128 0xa
 23998 0b59 18010000 		.4byte	0x118
 23999 0b5d 09       		.byte	0x9
 24000 0b5e 00       		.byte	0
 24001 0b5f 14       		.uleb128 0x14
 24002 0b60 C1130000 		.4byte	.LASF199
 24003 0b64 F402     		.2byte	0x2f4
 24004 0b66 08       		.byte	0x8
 24005 0b67 D201     		.2byte	0x1d2
 24006 0b69 440C0000 		.4byte	0xc44
 24007 0b6d 12       		.uleb128 0x12
 24008 0b6e B30B0000 		.4byte	.LASF200
 24009 0b72 08       		.byte	0x8
 24010 0b73 D401     		.2byte	0x1d4
 24011 0b75 97000000 		.4byte	0x97
 24012 0b79 00       		.byte	0
 24013 0b7a 12       		.uleb128 0x12
 24014 0b7b 55030000 		.4byte	.LASF117
 24015 0b7f 08       		.byte	0x8
 24016 0b80 D501     		.2byte	0x1d5
 24017 0b82 440C0000 		.4byte	0xc44
 24018 0b86 01       		.byte	0x1
 24019 0b87 13       		.uleb128 0x13
 24020 0b88 636E7400 		.ascii	"cnt\000"
 24021 0b8c 08       		.byte	0x8
 24022 0b8d D601     		.2byte	0x1d6
 24023 0b8f A4040000 		.4byte	0x4a4
 24024 0b93 10       		.byte	0x10
 24025 0b94 12       		.uleb128 0x12
 24026 0b95 16030000 		.4byte	.LASF201
 24027 0b99 08       		.byte	0x8
 24028 0b9a D701     		.2byte	0x1d7
 24029 0b9c 540C0000 		.4byte	0xc54
 24030 0ba0 80       		.byte	0x80
 24031 0ba1 13       		.uleb128 0x13
 24032 0ba2 64657600 		.ascii	"dev\000"
 24033 0ba6 08       		.byte	0x8
 24034 0ba7 D801     		.2byte	0x1d8
 24035 0ba9 81050000 		.4byte	0x581
 24036 0bad A0       		.byte	0xa0
 24037 0bae 12       		.uleb128 0x12
 24038 0baf 39110000 		.4byte	.LASF202
 24039 0bb3 08       		.byte	0x8
 24040 0bb4 D901     		.2byte	0x1d9
 24041 0bb6 640C0000 		.4byte	0xc64
 24042 0bba B0       		.byte	0xb0
 24043 0bbb 15       		.uleb128 0x15
 24044 0bbc 656E6300 		.ascii	"enc\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 531


 24045 0bc0 08       		.byte	0x8
 24046 0bc1 DA01     		.2byte	0x1da
 24047 0bc3 740C0000 		.4byte	0xc74
 24048 0bc7 9001     		.2byte	0x190
 24049 0bc9 15       		.uleb128 0x15
 24050 0bca 656D6700 		.ascii	"emg\000"
 24051 0bce 08       		.byte	0x8
 24052 0bcf DB01     		.2byte	0x1db
 24053 0bd1 6D080000 		.4byte	0x86d
 24054 0bd5 F001     		.2byte	0x1f0
 24055 0bd7 15       		.uleb128 0x15
 24056 0bd8 696D7500 		.ascii	"imu\000"
 24057 0bdc 08       		.byte	0x8
 24058 0bdd DC01     		.2byte	0x1dc
 24059 0bdf DC080000 		.4byte	0x8dc
 24060 0be3 0002     		.2byte	0x200
 24061 0be5 15       		.uleb128 0x15
 24062 0be6 65787000 		.ascii	"exp\000"
 24063 0bea 08       		.byte	0x8
 24064 0beb DD01     		.2byte	0x1dd
 24065 0bed 34090000 		.4byte	0x934
 24066 0bf1 2002     		.2byte	0x220
 24067 0bf3 16       		.uleb128 0x16
 24068 0bf4 A2000000 		.4byte	.LASF203
 24069 0bf8 08       		.byte	0x8
 24070 0bf9 DE01     		.2byte	0x1de
 24071 0bfb 840C0000 		.4byte	0xc84
 24072 0bff 4002     		.2byte	0x240
 24073 0c01 15       		.uleb128 0x15
 24074 0c02 534800   		.ascii	"SH\000"
 24075 0c05 08       		.byte	0x8
 24076 0c06 E001     		.2byte	0x1e0
 24077 0c08 E5090000 		.4byte	0x9e5
 24078 0c0c A002     		.2byte	0x2a0
 24079 0c0e 16       		.uleb128 0x16
 24080 0c0f 0C010000 		.4byte	.LASF204
 24081 0c13 08       		.byte	0x8
 24082 0c14 E101     		.2byte	0x1e1
 24083 0c16 340A0000 		.4byte	0xa34
 24084 0c1a B002     		.2byte	0x2b0
 24085 0c1c 15       		.uleb128 0x15
 24086 0c1d 4D5300   		.ascii	"MS\000"
 24087 0c20 08       		.byte	0x8
 24088 0c21 E201     		.2byte	0x1e2
 24089 0c23 760A0000 		.4byte	0xa76
 24090 0c27 C002     		.2byte	0x2c0
 24091 0c29 15       		.uleb128 0x15
 24092 0c2a 464200   		.ascii	"FB\000"
 24093 0c2d 08       		.byte	0x8
 24094 0c2e E301     		.2byte	0x1e3
 24095 0c30 BB0A0000 		.4byte	0xabb
 24096 0c34 D002     		.2byte	0x2d0
 24097 0c36 15       		.uleb128 0x15
 24098 0c37 575200   		.ascii	"WR\000"
 24099 0c3a 08       		.byte	0x8
 24100 0c3b E401     		.2byte	0x1e4
 24101 0c3d 0D0B0000 		.4byte	0xb0d
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 532


 24102 0c41 E002     		.2byte	0x2e0
 24103 0c43 00       		.byte	0
 24104 0c44 09       		.uleb128 0x9
 24105 0c45 97000000 		.4byte	0x97
 24106 0c49 540C0000 		.4byte	0xc54
 24107 0c4d 0A       		.uleb128 0xa
 24108 0c4e 18010000 		.4byte	0x118
 24109 0c52 0E       		.byte	0xe
 24110 0c53 00       		.byte	0
 24111 0c54 09       		.uleb128 0x9
 24112 0c55 97000000 		.4byte	0x97
 24113 0c59 640C0000 		.4byte	0xc64
 24114 0c5d 0A       		.uleb128 0xa
 24115 0c5e 18010000 		.4byte	0x118
 24116 0c62 1F       		.byte	0x1f
 24117 0c63 00       		.byte	0
 24118 0c64 09       		.uleb128 0x9
 24119 0c65 20060000 		.4byte	0x620
 24120 0c69 740C0000 		.4byte	0xc74
 24121 0c6d 0A       		.uleb128 0xa
 24122 0c6e 18010000 		.4byte	0x118
 24123 0c72 01       		.byte	0x1
 24124 0c73 00       		.byte	0
 24125 0c74 09       		.uleb128 0x9
 24126 0c75 BA070000 		.4byte	0x7ba
 24127 0c79 840C0000 		.4byte	0xc84
 24128 0c7d 0A       		.uleb128 0xa
 24129 0c7e 18010000 		.4byte	0x118
 24130 0c82 01       		.byte	0x1
 24131 0c83 00       		.byte	0
 24132 0c84 09       		.uleb128 0x9
 24133 0c85 B0090000 		.4byte	0x9b0
 24134 0c89 940C0000 		.4byte	0xc94
 24135 0c8d 0A       		.uleb128 0xa
 24136 0c8e 18010000 		.4byte	0x118
 24137 0c92 02       		.byte	0x2
 24138 0c93 00       		.byte	0
 24139 0c94 11       		.uleb128 0x11
 24140 0c95 300E0000 		.4byte	.LASF205
 24141 0c99 28       		.byte	0x28
 24142 0c9a 08       		.byte	0x8
 24143 0c9b EF01     		.2byte	0x1ef
 24144 0c9d F00C0000 		.4byte	0xcf0
 24145 0ca1 12       		.uleb128 0x12
 24146 0ca2 1C050000 		.4byte	.LASF206
 24147 0ca6 08       		.byte	0x8
 24148 0ca7 F001     		.2byte	0x1f0
 24149 0ca9 97000000 		.4byte	0x97
 24150 0cad 00       		.byte	0
 24151 0cae 12       		.uleb128 0x12
 24152 0caf 62030000 		.4byte	.LASF207
 24153 0cb3 08       		.byte	0x8
 24154 0cb4 F101     		.2byte	0x1f1
 24155 0cb6 F00C0000 		.4byte	0xcf0
 24156 0cba 02       		.byte	0x2
 24157 0cbb 12       		.uleb128 0x12
 24158 0cbc 630D0000 		.4byte	.LASF208
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 533


 24159 0cc0 08       		.byte	0x8
 24160 0cc1 F201     		.2byte	0x1f2
 24161 0cc3 F00C0000 		.4byte	0xcf0
 24162 0cc7 08       		.byte	0x8
 24163 0cc8 12       		.uleb128 0x12
 24164 0cc9 3C0E0000 		.4byte	.LASF209
 24165 0ccd 08       		.byte	0x8
 24166 0cce F301     		.2byte	0x1f3
 24167 0cd0 F00C0000 		.4byte	0xcf0
 24168 0cd4 0E       		.byte	0xe
 24169 0cd5 12       		.uleb128 0x12
 24170 0cd6 57080000 		.4byte	.LASF210
 24171 0cda 08       		.byte	0x8
 24172 0cdb F401     		.2byte	0x1f4
 24173 0cdd 000D0000 		.4byte	0xd00
 24174 0ce1 14       		.byte	0x14
 24175 0ce2 12       		.uleb128 0x12
 24176 0ce3 21020000 		.4byte	.LASF211
 24177 0ce7 08       		.byte	0x8
 24178 0ce8 F501     		.2byte	0x1f5
 24179 0cea C7000000 		.4byte	0xc7
 24180 0cee 24       		.byte	0x24
 24181 0cef 00       		.byte	0
 24182 0cf0 09       		.uleb128 0x9
 24183 0cf1 C7000000 		.4byte	0xc7
 24184 0cf5 000D0000 		.4byte	0xd00
 24185 0cf9 0A       		.uleb128 0xa
 24186 0cfa 18010000 		.4byte	0x118
 24187 0cfe 02       		.byte	0x2
 24188 0cff 00       		.byte	0
 24189 0d00 09       		.uleb128 0x9
 24190 0d01 EB000000 		.4byte	0xeb
 24191 0d05 100D0000 		.4byte	0xd10
 24192 0d09 0A       		.uleb128 0xa
 24193 0d0a 18010000 		.4byte	0x118
 24194 0d0e 03       		.byte	0x3
 24195 0d0f 00       		.byte	0
 24196 0d10 11       		.uleb128 0x11
 24197 0d11 45040000 		.4byte	.LASF212
 24198 0d15 06       		.byte	0x6
 24199 0d16 08       		.byte	0x8
 24200 0d17 0502     		.2byte	0x205
 24201 0d19 520D0000 		.4byte	0xd52
 24202 0d1d 12       		.uleb128 0x12
 24203 0d1e BF070000 		.4byte	.LASF213
 24204 0d22 08       		.byte	0x8
 24205 0d23 0602     		.2byte	0x206
 24206 0d25 97000000 		.4byte	0x97
 24207 0d29 00       		.byte	0
 24208 0d2a 12       		.uleb128 0x12
 24209 0d2b 1A150000 		.4byte	.LASF214
 24210 0d2f 08       		.byte	0x8
 24211 0d30 0702     		.2byte	0x207
 24212 0d32 97000000 		.4byte	0x97
 24213 0d36 01       		.byte	0x1
 24214 0d37 12       		.uleb128 0x12
 24215 0d38 78060000 		.4byte	.LASF215
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 534


 24216 0d3c 08       		.byte	0x8
 24217 0d3d 0802     		.2byte	0x208
 24218 0d3f C7000000 		.4byte	0xc7
 24219 0d43 02       		.byte	0x2
 24220 0d44 12       		.uleb128 0x12
 24221 0d45 570A0000 		.4byte	.LASF216
 24222 0d49 08       		.byte	0x8
 24223 0d4a 0902     		.2byte	0x209
 24224 0d4c C7000000 		.4byte	0xc7
 24225 0d50 04       		.byte	0x4
 24226 0d51 00       		.byte	0
 24227 0d52 17       		.uleb128 0x17
 24228 0d53 8D0F0000 		.4byte	.LASF393
 24229 0d57 02       		.byte	0x2
 24230 0d58 1403     		.2byte	0x314
 24231 0d5a 8C000000 		.4byte	0x8c
 24232 0d5e 03       		.byte	0x3
 24233 0d5f 7C0D0000 		.4byte	0xd7c
 24234 0d63 18       		.uleb128 0x18
 24235 0d64 16050000 		.4byte	.LASF301
 24236 0d68 02       		.byte	0x2
 24237 0d69 1403     		.2byte	0x314
 24238 0d6b 8C000000 		.4byte	0x8c
 24239 0d6f 19       		.uleb128 0x19
 24240 0d70 35020000 		.4byte	.LASF394
 24241 0d74 02       		.byte	0x2
 24242 0d75 1603     		.2byte	0x316
 24243 0d77 8C000000 		.4byte	0x8c
 24244 0d7b 00       		.byte	0
 24245 0d7c 1A       		.uleb128 0x1a
 24246 0d7d DC100000 		.4byte	.LASF217
 24247 0d81 01       		.byte	0x1
 24248 0d82 3D       		.byte	0x3d
 24249 0d83 00000000 		.4byte	.LFB64
 24250 0d87 1C050000 		.4byte	.LFE64-.LFB64
 24251 0d8b 01       		.uleb128 0x1
 24252 0d8c 9C       		.byte	0x9c
 24253 0d8d 850E0000 		.4byte	0xe85
 24254 0d91 1B       		.uleb128 0x1b
 24255 0d92 7E060000 		.4byte	.LASF219
 24256 0d96 01       		.byte	0x1
 24257 0d97 3F       		.byte	0x3f
 24258 0d98 97000000 		.4byte	0x97
 24259 0d9c 02       		.uleb128 0x2
 24260 0d9d 91       		.byte	0x91
 24261 0d9e 77       		.sleb128 -9
 24262 0d9f 1C       		.uleb128 0x1c
 24263 0da0 520D0000 		.4byte	0xd52
 24264 0da4 48030000 		.4byte	.LBB12
 24265 0da8 08000000 		.4byte	.LBE12-.LBB12
 24266 0dac 01       		.byte	0x1
 24267 0dad 9C       		.byte	0x9c
 24268 0dae CD0D0000 		.4byte	0xdcd
 24269 0db2 1D       		.uleb128 0x1d
 24270 0db3 630D0000 		.4byte	0xd63
 24271 0db7 02       		.uleb128 0x2
 24272 0db8 91       		.byte	0x91
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 535


 24273 0db9 60       		.sleb128 -32
 24274 0dba 1E       		.uleb128 0x1e
 24275 0dbb 48030000 		.4byte	.LBB13
 24276 0dbf 08000000 		.4byte	.LBE13-.LBB13
 24277 0dc3 1F       		.uleb128 0x1f
 24278 0dc4 6F0D0000 		.4byte	0xd6f
 24279 0dc8 02       		.uleb128 0x2
 24280 0dc9 91       		.byte	0x91
 24281 0dca 5C       		.sleb128 -36
 24282 0dcb 00       		.byte	0
 24283 0dcc 00       		.byte	0
 24284 0dcd 1C       		.uleb128 0x1c
 24285 0dce 520D0000 		.4byte	0xd52
 24286 0dd2 66030000 		.4byte	.LBB14
 24287 0dd6 08000000 		.4byte	.LBE14-.LBB14
 24288 0dda 01       		.byte	0x1
 24289 0ddb A8       		.byte	0xa8
 24290 0ddc FB0D0000 		.4byte	0xdfb
 24291 0de0 1D       		.uleb128 0x1d
 24292 0de1 630D0000 		.4byte	0xd63
 24293 0de5 02       		.uleb128 0x2
 24294 0de6 91       		.byte	0x91
 24295 0de7 70       		.sleb128 -16
 24296 0de8 1E       		.uleb128 0x1e
 24297 0de9 66030000 		.4byte	.LBB15
 24298 0ded 08000000 		.4byte	.LBE15-.LBB15
 24299 0df1 1F       		.uleb128 0x1f
 24300 0df2 6F0D0000 		.4byte	0xd6f
 24301 0df6 02       		.uleb128 0x2
 24302 0df7 91       		.byte	0x91
 24303 0df8 58       		.sleb128 -40
 24304 0df9 00       		.byte	0
 24305 0dfa 00       		.byte	0
 24306 0dfb 20       		.uleb128 0x20
 24307 0dfc 520D0000 		.4byte	0xd52
 24308 0e00 A8040000 		.4byte	.LBB16
 24309 0e04 08000000 		.4byte	.LBE16-.LBB16
 24310 0e08 01       		.byte	0x1
 24311 0e09 0401     		.2byte	0x104
 24312 0e0b 2A0E0000 		.4byte	0xe2a
 24313 0e0f 1D       		.uleb128 0x1d
 24314 0e10 630D0000 		.4byte	0xd63
 24315 0e14 02       		.uleb128 0x2
 24316 0e15 91       		.byte	0x91
 24317 0e16 6C       		.sleb128 -20
 24318 0e17 1E       		.uleb128 0x1e
 24319 0e18 A8040000 		.4byte	.LBB17
 24320 0e1c 08000000 		.4byte	.LBE17-.LBB17
 24321 0e20 1F       		.uleb128 0x1f
 24322 0e21 6F0D0000 		.4byte	0xd6f
 24323 0e25 02       		.uleb128 0x2
 24324 0e26 91       		.byte	0x91
 24325 0e27 54       		.sleb128 -44
 24326 0e28 00       		.byte	0
 24327 0e29 00       		.byte	0
 24328 0e2a 20       		.uleb128 0x20
 24329 0e2b 520D0000 		.4byte	0xd52
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 536


 24330 0e2f D8040000 		.4byte	.LBB18
 24331 0e33 08000000 		.4byte	.LBE18-.LBB18
 24332 0e37 01       		.byte	0x1
 24333 0e38 2201     		.2byte	0x122
 24334 0e3a 590E0000 		.4byte	0xe59
 24335 0e3e 1D       		.uleb128 0x1d
 24336 0e3f 630D0000 		.4byte	0xd63
 24337 0e43 02       		.uleb128 0x2
 24338 0e44 91       		.byte	0x91
 24339 0e45 68       		.sleb128 -24
 24340 0e46 1E       		.uleb128 0x1e
 24341 0e47 D8040000 		.4byte	.LBB19
 24342 0e4b 08000000 		.4byte	.LBE19-.LBB19
 24343 0e4f 1F       		.uleb128 0x1f
 24344 0e50 6F0D0000 		.4byte	0xd6f
 24345 0e54 02       		.uleb128 0x2
 24346 0e55 91       		.byte	0x91
 24347 0e56 50       		.sleb128 -48
 24348 0e57 00       		.byte	0
 24349 0e58 00       		.byte	0
 24350 0e59 21       		.uleb128 0x21
 24351 0e5a 520D0000 		.4byte	0xd52
 24352 0e5e F0040000 		.4byte	.LBB20
 24353 0e62 08000000 		.4byte	.LBE20-.LBB20
 24354 0e66 01       		.byte	0x1
 24355 0e67 2801     		.2byte	0x128
 24356 0e69 1D       		.uleb128 0x1d
 24357 0e6a 630D0000 		.4byte	0xd63
 24358 0e6e 02       		.uleb128 0x2
 24359 0e6f 91       		.byte	0x91
 24360 0e70 64       		.sleb128 -28
 24361 0e71 1E       		.uleb128 0x1e
 24362 0e72 F0040000 		.4byte	.LBB21
 24363 0e76 08000000 		.4byte	.LBE21-.LBB21
 24364 0e7a 1F       		.uleb128 0x1f
 24365 0e7b 6F0D0000 		.4byte	0xd6f
 24366 0e7f 02       		.uleb128 0x2
 24367 0e80 91       		.byte	0x91
 24368 0e81 4C       		.sleb128 -52
 24369 0e82 00       		.byte	0
 24370 0e83 00       		.byte	0
 24371 0e84 00       		.byte	0
 24372 0e85 22       		.uleb128 0x22
 24373 0e86 00000000 		.4byte	.LASF218
 24374 0e8a 01       		.byte	0x1
 24375 0e8b 3601     		.2byte	0x136
 24376 0e8d 00000000 		.4byte	.LFB65
 24377 0e91 22000000 		.4byte	.LFE65-.LFB65
 24378 0e95 01       		.uleb128 0x1
 24379 0e96 9C       		.byte	0x9c
 24380 0e97 AC0E0000 		.4byte	0xeac
 24381 0e9b 23       		.uleb128 0x23
 24382 0e9c A5050000 		.4byte	.LASF220
 24383 0ea0 01       		.byte	0x1
 24384 0ea1 3701     		.2byte	0x137
 24385 0ea3 AC0E0000 		.4byte	0xeac
 24386 0ea7 03       		.uleb128 0x3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 537


 24387 0ea8 91       		.byte	0x91
 24388 0ea9 9C74     		.sleb128 -1508
 24389 0eab 00       		.byte	0
 24390 0eac 09       		.uleb128 0x9
 24391 0ead F9000000 		.4byte	0xf9
 24392 0eb1 BD0E0000 		.4byte	0xebd
 24393 0eb5 24       		.uleb128 0x24
 24394 0eb6 18010000 		.4byte	0x118
 24395 0eba DB05     		.2byte	0x5db
 24396 0ebc 00       		.byte	0
 24397 0ebd 22       		.uleb128 0x22
 24398 0ebe F2130000 		.4byte	.LASF221
 24399 0ec2 01       		.byte	0x1
 24400 0ec3 4201     		.2byte	0x142
 24401 0ec5 00000000 		.4byte	.LFB66
 24402 0ec9 64010000 		.4byte	.LFE66-.LFB66
 24403 0ecd 01       		.uleb128 0x1
 24404 0ece 9C       		.byte	0x9c
 24405 0ecf 060F0000 		.4byte	0xf06
 24406 0ed3 25       		.uleb128 0x25
 24407 0ed4 42130000 		.4byte	.LASF224
 24408 0ed8 01       		.byte	0x1
 24409 0ed9 4201     		.2byte	0x142
 24410 0edb A3000000 		.4byte	0xa3
 24411 0edf 04       		.uleb128 0x4
 24412 0ee0 91       		.byte	0x91
 24413 0ee1 B6C47E   		.sleb128 -24010
 24414 0ee4 23       		.uleb128 0x23
 24415 0ee5 A5050000 		.4byte	.LASF220
 24416 0ee9 01       		.byte	0x1
 24417 0eea 4301     		.2byte	0x143
 24418 0eec 060F0000 		.4byte	0xf06
 24419 0ef0 03       		.uleb128 0x3
 24420 0ef1 91       		.byte	0x91
 24421 0ef2 D860     		.sleb128 -4008
 24422 0ef4 23       		.uleb128 0x23
 24423 0ef5 25080000 		.4byte	.LASF222
 24424 0ef9 01       		.byte	0x1
 24425 0efa 4401     		.2byte	0x144
 24426 0efc 170F0000 		.4byte	0xf17
 24427 0f00 04       		.uleb128 0x4
 24428 0f01 91       		.byte	0x91
 24429 0f02 B8C47E   		.sleb128 -24008
 24430 0f05 00       		.byte	0
 24431 0f06 09       		.uleb128 0x9
 24432 0f07 F9000000 		.4byte	0xf9
 24433 0f0b 170F0000 		.4byte	0xf17
 24434 0f0f 24       		.uleb128 0x24
 24435 0f10 18010000 		.4byte	0x118
 24436 0f14 9F0F     		.2byte	0xf9f
 24437 0f16 00       		.byte	0
 24438 0f17 09       		.uleb128 0x9
 24439 0f18 F9000000 		.4byte	0xf9
 24440 0f1c 280F0000 		.4byte	0xf28
 24441 0f20 24       		.uleb128 0x24
 24442 0f21 18010000 		.4byte	0x118
 24443 0f25 1F4E     		.2byte	0x4e1f
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 538


 24444 0f27 00       		.byte	0
 24445 0f28 22       		.uleb128 0x22
 24446 0f29 DB010000 		.4byte	.LASF223
 24447 0f2d 01       		.byte	0x1
 24448 0f2e 7401     		.2byte	0x174
 24449 0f30 00000000 		.4byte	.LFB67
 24450 0f34 E4220000 		.4byte	.LFE67-.LFB67
 24451 0f38 01       		.uleb128 0x1
 24452 0f39 9C       		.byte	0x9c
 24453 0f3a CC100000 		.4byte	0x10cc
 24454 0f3e 25       		.uleb128 0x25
 24455 0f3f 130D0000 		.4byte	.LASF225
 24456 0f43 01       		.byte	0x1
 24457 0f44 7401     		.2byte	0x174
 24458 0f46 CC100000 		.4byte	0x10cc
 24459 0f4a 03       		.uleb128 0x3
 24460 0f4b 91       		.byte	0x91
 24461 0f4c 9C67     		.sleb128 -3172
 24462 0f4e 25       		.uleb128 0x25
 24463 0f4f CB130000 		.4byte	.LASF226
 24464 0f53 01       		.byte	0x1
 24465 0f54 7401     		.2byte	0x174
 24466 0f56 D2100000 		.4byte	0x10d2
 24467 0f5a 03       		.uleb128 0x3
 24468 0f5b 91       		.byte	0x91
 24469 0f5c 9867     		.sleb128 -3176
 24470 0f5e 25       		.uleb128 0x25
 24471 0f5f 6E030000 		.4byte	.LASF227
 24472 0f63 01       		.byte	0x1
 24473 0f64 7501     		.2byte	0x175
 24474 0f66 D2100000 		.4byte	0x10d2
 24475 0f6a 03       		.uleb128 0x3
 24476 0f6b 91       		.byte	0x91
 24477 0f6c 9467     		.sleb128 -3180
 24478 0f6e 25       		.uleb128 0x25
 24479 0f6f 560C0000 		.4byte	.LASF228
 24480 0f73 01       		.byte	0x1
 24481 0f74 7501     		.2byte	0x175
 24482 0f76 D2100000 		.4byte	0x10d2
 24483 0f7a 03       		.uleb128 0x3
 24484 0f7b 91       		.byte	0x91
 24485 0f7c 9067     		.sleb128 -3184
 24486 0f7e 25       		.uleb128 0x25
 24487 0f7f 0C130000 		.4byte	.LASF229
 24488 0f83 01       		.byte	0x1
 24489 0f84 7601     		.2byte	0x176
 24490 0f86 D2100000 		.4byte	0x10d2
 24491 0f8a 02       		.uleb128 0x2
 24492 0f8b 91       		.byte	0x91
 24493 0f8c 00       		.sleb128 0
 24494 0f8d 25       		.uleb128 0x25
 24495 0f8e B4070000 		.4byte	.LASF230
 24496 0f92 01       		.byte	0x1
 24497 0f93 7601     		.2byte	0x176
 24498 0f95 D8100000 		.4byte	0x10d8
 24499 0f99 02       		.uleb128 0x2
 24500 0f9a 91       		.byte	0x91
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 539


 24501 0f9b 04       		.sleb128 4
 24502 0f9c 25       		.uleb128 0x25
 24503 0f9d DE0A0000 		.4byte	.LASF231
 24504 0fa1 01       		.byte	0x1
 24505 0fa2 7701     		.2byte	0x177
 24506 0fa4 D2100000 		.4byte	0x10d2
 24507 0fa8 02       		.uleb128 0x2
 24508 0fa9 91       		.byte	0x91
 24509 0faa 08       		.sleb128 8
 24510 0fab 25       		.uleb128 0x25
 24511 0fac 37080000 		.4byte	.LASF232
 24512 0fb0 01       		.byte	0x1
 24513 0fb1 7701     		.2byte	0x177
 24514 0fb3 D8100000 		.4byte	0x10d8
 24515 0fb7 02       		.uleb128 0x2
 24516 0fb8 91       		.byte	0x91
 24517 0fb9 0C       		.sleb128 12
 24518 0fba 23       		.uleb128 0x23
 24519 0fbb 00060000 		.4byte	.LASF233
 24520 0fbf 01       		.byte	0x1
 24521 0fc0 7A01     		.2byte	0x17a
 24522 0fc2 DE100000 		.4byte	0x10de
 24523 0fc6 03       		.uleb128 0x3
 24524 0fc7 91       		.byte	0x91
 24525 0fc8 E867     		.sleb128 -3096
 24526 0fca 23       		.uleb128 0x23
 24527 0fcb 620B0000 		.4byte	.LASF234
 24528 0fcf 01       		.byte	0x1
 24529 0fd0 7B01     		.2byte	0x17b
 24530 0fd2 A3000000 		.4byte	0xa3
 24531 0fd6 02       		.uleb128 0x2
 24532 0fd7 91       		.byte	0x91
 24533 0fd8 60       		.sleb128 -32
 24534 0fd9 26       		.uleb128 0x26
 24535 0fda 6900     		.ascii	"i\000"
 24536 0fdc 01       		.byte	0x1
 24537 0fdd 7E01     		.2byte	0x17e
 24538 0fdf 97000000 		.4byte	0x97
 24539 0fe3 02       		.uleb128 0x2
 24540 0fe4 91       		.byte	0x91
 24541 0fe5 67       		.sleb128 -25
 24542 0fe6 26       		.uleb128 0x26
 24543 0fe7 6A00     		.ascii	"j\000"
 24544 0fe9 01       		.byte	0x1
 24545 0fea 7E01     		.2byte	0x17e
 24546 0fec 97000000 		.4byte	0x97
 24547 0ff0 02       		.uleb128 0x2
 24548 0ff1 91       		.byte	0x91
 24549 0ff2 66       		.sleb128 -26
 24550 0ff3 26       		.uleb128 0x26
 24551 0ff4 69647800 		.ascii	"idx\000"
 24552 0ff8 01       		.byte	0x1
 24553 0ff9 7F01     		.2byte	0x17f
 24554 0ffb 97000000 		.4byte	0x97
 24555 0fff 02       		.uleb128 0x2
 24556 1000 91       		.byte	0x91
 24557 1001 65       		.sleb128 -27
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 540


 24558 1002 23       		.uleb128 0x23
 24559 1003 27110000 		.4byte	.LASF235
 24560 1007 01       		.byte	0x1
 24561 1008 8001     		.2byte	0x180
 24562 100a 97000000 		.4byte	0x97
 24563 100e 02       		.uleb128 0x2
 24564 100f 91       		.byte	0x91
 24565 1010 64       		.sleb128 -28
 24566 1011 26       		.uleb128 0x26
 24567 1012 736F6400 		.ascii	"sod\000"
 24568 1016 01       		.byte	0x1
 24569 1017 8101     		.2byte	0x181
 24570 1019 97000000 		.4byte	0x97
 24571 101d 02       		.uleb128 0x2
 24572 101e 91       		.byte	0x91
 24573 101f 63       		.sleb128 -29
 24574 1020 23       		.uleb128 0x23
 24575 1021 270C0000 		.4byte	.LASF236
 24576 1025 01       		.byte	0x1
 24577 1026 8201     		.2byte	0x182
 24578 1028 97000000 		.4byte	0x97
 24579 102c 02       		.uleb128 0x2
 24580 102d 91       		.byte	0x91
 24581 102e 62       		.sleb128 -30
 24582 102f 23       		.uleb128 0x23
 24583 1030 00150000 		.4byte	.LASF237
 24584 1034 01       		.byte	0x1
 24585 1035 8301     		.2byte	0x183
 24586 1037 EF100000 		.4byte	0x10ef
 24587 103b 03       		.uleb128 0x3
 24588 103c 91       		.byte	0x91
 24589 103d B467     		.sleb128 -3148
 24590 103f 23       		.uleb128 0x23
 24591 1040 F4120000 		.4byte	.LASF238
 24592 1044 01       		.byte	0x1
 24593 1045 8401     		.2byte	0x184
 24594 1047 EB000000 		.4byte	0xeb
 24595 104b 03       		.uleb128 0x3
 24596 104c 91       		.byte	0x91
 24597 104d B067     		.sleb128 -3152
 24598 104f 23       		.uleb128 0x23
 24599 1050 B8110000 		.4byte	.LASF239
 24600 1054 01       		.byte	0x1
 24601 1055 8501     		.2byte	0x185
 24602 1057 C7000000 		.4byte	0xc7
 24603 105b 03       		.uleb128 0x3
 24604 105c 91       		.byte	0x91
 24605 105d AE67     		.sleb128 -3154
 24606 105f 23       		.uleb128 0x23
 24607 1060 950C0000 		.4byte	.LASF240
 24608 1064 01       		.byte	0x1
 24609 1065 8601     		.2byte	0x186
 24610 1067 A3000000 		.4byte	0xa3
 24611 106b 03       		.uleb128 0x3
 24612 106c 91       		.byte	0x91
 24613 106d AC67     		.sleb128 -3156
 24614 106f 23       		.uleb128 0x23
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 541


 24615 1070 15130000 		.4byte	.LASF241
 24616 1074 01       		.byte	0x1
 24617 1075 8701     		.2byte	0x187
 24618 1077 D3000000 		.4byte	0xd3
 24619 107b 03       		.uleb128 0x3
 24620 107c 91       		.byte	0x91
 24621 107d A867     		.sleb128 -3160
 24622 107f 23       		.uleb128 0x23
 24623 1080 100E0000 		.4byte	.LASF242
 24624 1084 01       		.byte	0x1
 24625 1085 8801     		.2byte	0x188
 24626 1087 AF000000 		.4byte	0xaf
 24627 108b 03       		.uleb128 0x3
 24628 108c 91       		.byte	0x91
 24629 108d A467     		.sleb128 -3164
 24630 108f 23       		.uleb128 0x23
 24631 1090 B30D0000 		.4byte	.LASF243
 24632 1094 01       		.byte	0x1
 24633 1095 8A01     		.2byte	0x18a
 24634 1097 97000000 		.4byte	0x97
 24635 109b 02       		.uleb128 0x2
 24636 109c 91       		.byte	0x91
 24637 109d 5F       		.sleb128 -33
 24638 109e 23       		.uleb128 0x23
 24639 109f 36010000 		.4byte	.LASF244
 24640 10a3 01       		.byte	0x1
 24641 10a4 8B01     		.2byte	0x18b
 24642 10a6 97000000 		.4byte	0x97
 24643 10aa 02       		.uleb128 0x2
 24644 10ab 91       		.byte	0x91
 24645 10ac 5E       		.sleb128 -34
 24646 10ad 23       		.uleb128 0x23
 24647 10ae 2E0B0000 		.4byte	.LASF245
 24648 10b2 01       		.byte	0x1
 24649 10b3 8D01     		.2byte	0x18d
 24650 10b5 D2100000 		.4byte	0x10d2
 24651 10b9 02       		.uleb128 0x2
 24652 10ba 91       		.byte	0x91
 24653 10bb 58       		.sleb128 -40
 24654 10bc 23       		.uleb128 0x23
 24655 10bd CA010000 		.4byte	.LASF246
 24656 10c1 01       		.byte	0x1
 24657 10c2 8E01     		.2byte	0x18e
 24658 10c4 D2100000 		.4byte	0x10d2
 24659 10c8 02       		.uleb128 0x2
 24660 10c9 91       		.byte	0x91
 24661 10ca 54       		.sleb128 -44
 24662 10cb 00       		.byte	0
 24663 10cc 07       		.uleb128 0x7
 24664 10cd 04       		.byte	0x4
 24665 10ce D2100000 		.4byte	0x10d2
 24666 10d2 07       		.uleb128 0x7
 24667 10d3 04       		.byte	0x4
 24668 10d4 97000000 		.4byte	0x97
 24669 10d8 07       		.uleb128 0x7
 24670 10d9 04       		.byte	0x4
 24671 10da 25010000 		.4byte	0x125
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 542


 24672 10de 09       		.uleb128 0x9
 24673 10df 97000000 		.4byte	0x97
 24674 10e3 EF100000 		.4byte	0x10ef
 24675 10e7 24       		.uleb128 0x24
 24676 10e8 18010000 		.4byte	0x118
 24677 10ec E90B     		.2byte	0xbe9
 24678 10ee 00       		.byte	0
 24679 10ef 09       		.uleb128 0x9
 24680 10f0 F9000000 		.4byte	0xf9
 24681 10f4 FF100000 		.4byte	0x10ff
 24682 10f8 0A       		.uleb128 0xa
 24683 10f9 18010000 		.4byte	0x118
 24684 10fd 31       		.byte	0x31
 24685 10fe 00       		.byte	0
 24686 10ff 22       		.uleb128 0x22
 24687 1100 0A0F0000 		.4byte	.LASF247
 24688 1104 01       		.byte	0x1
 24689 1105 7C03     		.2byte	0x37c
 24690 1107 00000000 		.4byte	.LFB68
 24691 110b 30190000 		.4byte	.LFE68-.LFB68
 24692 110f 01       		.uleb128 0x1
 24693 1110 9C       		.byte	0x9c
 24694 1111 DD120000 		.4byte	0x12dd
 24695 1115 25       		.uleb128 0x25
 24696 1116 D6060000 		.4byte	.LASF248
 24697 111a 01       		.byte	0x1
 24698 111b 7C03     		.2byte	0x37c
 24699 111d A3000000 		.4byte	0xa3
 24700 1121 03       		.uleb128 0x3
 24701 1122 91       		.byte	0x91
 24702 1123 EE74     		.sleb128 -1426
 24703 1125 26       		.uleb128 0x26
 24704 1126 6900     		.ascii	"i\000"
 24705 1128 01       		.byte	0x1
 24706 1129 7D03     		.2byte	0x37d
 24707 112b 97000000 		.4byte	0x97
 24708 112f 02       		.uleb128 0x2
 24709 1130 91       		.byte	0x91
 24710 1131 6F       		.sleb128 -17
 24711 1132 26       		.uleb128 0x26
 24712 1133 6A00     		.ascii	"j\000"
 24713 1135 01       		.byte	0x1
 24714 1136 7D03     		.2byte	0x37d
 24715 1138 97000000 		.4byte	0x97
 24716 113c 02       		.uleb128 0x2
 24717 113d 91       		.byte	0x91
 24718 113e 6E       		.sleb128 -18
 24719 113f 26       		.uleb128 0x26
 24720 1140 736F6400 		.ascii	"sod\000"
 24721 1144 01       		.byte	0x1
 24722 1145 7E03     		.2byte	0x37e
 24723 1147 97000000 		.4byte	0x97
 24724 114b 02       		.uleb128 0x2
 24725 114c 91       		.byte	0x91
 24726 114d 6D       		.sleb128 -19
 24727 114e 23       		.uleb128 0x23
 24728 114f 180B0000 		.4byte	.LASF249
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 543


 24729 1153 01       		.byte	0x1
 24730 1154 7F03     		.2byte	0x37f
 24731 1156 97000000 		.4byte	0x97
 24732 115a 02       		.uleb128 0x2
 24733 115b 91       		.byte	0x91
 24734 115c 62       		.sleb128 -30
 24735 115d 23       		.uleb128 0x23
 24736 115e B8110000 		.4byte	.LASF239
 24737 1162 01       		.byte	0x1
 24738 1163 8003     		.2byte	0x380
 24739 1165 C7000000 		.4byte	0xc7
 24740 1169 02       		.uleb128 0x2
 24741 116a 91       		.byte	0x91
 24742 116b 60       		.sleb128 -32
 24743 116c 23       		.uleb128 0x23
 24744 116d 950C0000 		.4byte	.LASF240
 24745 1171 01       		.byte	0x1
 24746 1172 8103     		.2byte	0x381
 24747 1174 A3000000 		.4byte	0xa3
 24748 1178 02       		.uleb128 0x2
 24749 1179 91       		.byte	0x91
 24750 117a 5E       		.sleb128 -34
 24751 117b 23       		.uleb128 0x23
 24752 117c 15130000 		.4byte	.LASF241
 24753 1180 01       		.byte	0x1
 24754 1181 8203     		.2byte	0x382
 24755 1183 D3000000 		.4byte	0xd3
 24756 1187 02       		.uleb128 0x2
 24757 1188 91       		.byte	0x91
 24758 1189 58       		.sleb128 -40
 24759 118a 23       		.uleb128 0x23
 24760 118b 100E0000 		.4byte	.LASF242
 24761 118f 01       		.byte	0x1
 24762 1190 8303     		.2byte	0x383
 24763 1192 AF000000 		.4byte	0xaf
 24764 1196 02       		.uleb128 0x2
 24765 1197 91       		.byte	0x91
 24766 1198 54       		.sleb128 -44
 24767 1199 23       		.uleb128 0x23
 24768 119a F4120000 		.4byte	.LASF238
 24769 119e 01       		.byte	0x1
 24770 119f 8403     		.2byte	0x384
 24771 11a1 EB000000 		.4byte	0xeb
 24772 11a5 02       		.uleb128 0x2
 24773 11a6 91       		.byte	0x91
 24774 11a7 50       		.sleb128 -48
 24775 11a8 23       		.uleb128 0x23
 24776 11a9 B30D0000 		.4byte	.LASF243
 24777 11ad 01       		.byte	0x1
 24778 11ae 8603     		.2byte	0x386
 24779 11b0 97000000 		.4byte	0x97
 24780 11b4 02       		.uleb128 0x2
 24781 11b5 91       		.byte	0x91
 24782 11b6 65       		.sleb128 -27
 24783 11b7 23       		.uleb128 0x23
 24784 11b8 36010000 		.4byte	.LASF244
 24785 11bc 01       		.byte	0x1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 544


 24786 11bd 8703     		.2byte	0x387
 24787 11bf 97000000 		.4byte	0x97
 24788 11c3 02       		.uleb128 0x2
 24789 11c4 91       		.byte	0x91
 24790 11c5 64       		.sleb128 -28
 24791 11c6 23       		.uleb128 0x23
 24792 11c7 84030000 		.4byte	.LASF250
 24793 11cb 01       		.byte	0x1
 24794 11cc 8A03     		.2byte	0x38a
 24795 11ce DD120000 		.4byte	0x12dd
 24796 11d2 02       		.uleb128 0x2
 24797 11d3 91       		.byte	0x91
 24798 11d4 68       		.sleb128 -24
 24799 11d5 23       		.uleb128 0x23
 24800 11d6 130D0000 		.4byte	.LASF225
 24801 11da 01       		.byte	0x1
 24802 11db 9203     		.2byte	0x392
 24803 11dd E3120000 		.4byte	0x12e3
 24804 11e1 03       		.uleb128 0x3
 24805 11e2 91       		.byte	0x91
 24806 11e3 847D     		.sleb128 -380
 24807 11e5 23       		.uleb128 0x23
 24808 11e6 CB130000 		.4byte	.LASF226
 24809 11ea 01       		.byte	0x1
 24810 11eb F003     		.2byte	0x3f0
 24811 11ed F3120000 		.4byte	0x12f3
 24812 11f1 03       		.uleb128 0x3
 24813 11f2 91       		.byte	0x91
 24814 11f3 B07C     		.sleb128 -464
 24815 11f5 23       		.uleb128 0x23
 24816 11f6 6E030000 		.4byte	.LASF227
 24817 11fa 01       		.byte	0x1
 24818 11fb 0C04     		.2byte	0x40c
 24819 11fd F3120000 		.4byte	0x12f3
 24820 1201 03       		.uleb128 0x3
 24821 1202 91       		.byte	0x91
 24822 1203 DC7B     		.sleb128 -548
 24823 1205 23       		.uleb128 0x23
 24824 1206 560C0000 		.4byte	.LASF228
 24825 120a 01       		.byte	0x1
 24826 120b 2804     		.2byte	0x428
 24827 120d F3120000 		.4byte	0x12f3
 24828 1211 03       		.uleb128 0x3
 24829 1212 91       		.byte	0x91
 24830 1213 887B     		.sleb128 -632
 24831 1215 23       		.uleb128 0x23
 24832 1216 B4070000 		.4byte	.LASF230
 24833 121a 01       		.byte	0x1
 24834 121b 4504     		.2byte	0x445
 24835 121d 03130000 		.4byte	0x1303
 24836 1221 03       		.uleb128 0x3
 24837 1222 91       		.byte	0x91
 24838 1223 BC78     		.sleb128 -964
 24839 1225 23       		.uleb128 0x23
 24840 1226 53140000 		.4byte	.LASF251
 24841 122a 01       		.byte	0x1
 24842 122b 6204     		.2byte	0x462
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 545


 24843 122d 13130000 		.4byte	0x1313
 24844 1231 03       		.uleb128 0x3
 24845 1232 91       		.byte	0x91
 24846 1233 C477     		.sleb128 -1084
 24847 1235 23       		.uleb128 0x23
 24848 1236 20000000 		.4byte	.LASF252
 24849 123a 01       		.byte	0x1
 24850 123b 6504     		.2byte	0x465
 24851 123d 23130000 		.4byte	0x1323
 24852 1241 03       		.uleb128 0x3
 24853 1242 91       		.byte	0x91
 24854 1243 8C77     		.sleb128 -1140
 24855 1245 23       		.uleb128 0x23
 24856 1246 37080000 		.4byte	.LASF232
 24857 124a 01       		.byte	0x1
 24858 124b 6D04     		.2byte	0x46d
 24859 124d 33130000 		.4byte	0x1333
 24860 1251 03       		.uleb128 0x3
 24861 1252 91       		.byte	0x91
 24862 1253 DC76     		.sleb128 -1188
 24863 1255 23       		.uleb128 0x23
 24864 1256 0C130000 		.4byte	.LASF229
 24865 125a 01       		.byte	0x1
 24866 125b 7C04     		.2byte	0x47c
 24867 125d 540C0000 		.4byte	0xc54
 24868 1261 03       		.uleb128 0x3
 24869 1262 91       		.byte	0x91
 24870 1263 BC76     		.sleb128 -1220
 24871 1265 23       		.uleb128 0x23
 24872 1266 190D0000 		.4byte	.LASF253
 24873 126a 01       		.byte	0x1
 24874 126b 7D04     		.2byte	0x47d
 24875 126d 43130000 		.4byte	0x1343
 24876 1271 03       		.uleb128 0x3
 24877 1272 91       		.byte	0x91
 24878 1273 B076     		.sleb128 -1232
 24879 1275 23       		.uleb128 0x23
 24880 1276 400C0000 		.4byte	.LASF254
 24881 127a 01       		.byte	0x1
 24882 127b 7E04     		.2byte	0x47e
 24883 127d 53130000 		.4byte	0x1353
 24884 1281 03       		.uleb128 0x3
 24885 1282 91       		.byte	0x91
 24886 1283 9C76     		.sleb128 -1252
 24887 1285 23       		.uleb128 0x23
 24888 1286 220E0000 		.4byte	.LASF255
 24889 128a 01       		.byte	0x1
 24890 128b 7F04     		.2byte	0x47f
 24891 128d 97000000 		.4byte	0x97
 24892 1291 02       		.uleb128 0x2
 24893 1292 91       		.byte	0x91
 24894 1293 63       		.sleb128 -29
 24895 1294 23       		.uleb128 0x23
 24896 1295 DE0A0000 		.4byte	.LASF231
 24897 1299 01       		.byte	0x1
 24898 129a 8804     		.2byte	0x488
 24899 129c F3120000 		.4byte	0x12f3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 546


 24900 12a0 03       		.uleb128 0x3
 24901 12a1 91       		.byte	0x91
 24902 12a2 C875     		.sleb128 -1336
 24903 12a4 23       		.uleb128 0x23
 24904 12a5 7A140000 		.4byte	.LASF256
 24905 12a9 01       		.byte	0x1
 24906 12aa 9304     		.2byte	0x493
 24907 12ac F3120000 		.4byte	0x12f3
 24908 12b0 03       		.uleb128 0x3
 24909 12b1 91       		.byte	0x91
 24910 12b2 F474     		.sleb128 -1420
 24911 12b4 1E       		.uleb128 0x1e
 24912 12b5 9A180000 		.4byte	.LBB22
 24913 12b9 86000000 		.4byte	.LBE22-.LBB22
 24914 12bd 26       		.uleb128 0x26
 24915 12be 69647800 		.ascii	"idx\000"
 24916 12c2 01       		.byte	0x1
 24917 12c3 FC04     		.2byte	0x4fc
 24918 12c5 97000000 		.4byte	0x97
 24919 12c9 02       		.uleb128 0x2
 24920 12ca 91       		.byte	0x91
 24921 12cb 67       		.sleb128 -25
 24922 12cc 23       		.uleb128 0x23
 24923 12cd 5C050000 		.4byte	.LASF257
 24924 12d1 01       		.byte	0x1
 24925 12d2 FC04     		.2byte	0x4fc
 24926 12d4 97000000 		.4byte	0x97
 24927 12d8 02       		.uleb128 0x2
 24928 12d9 91       		.byte	0x91
 24929 12da 66       		.sleb128 -26
 24930 12db 00       		.byte	0
 24931 12dc 00       		.byte	0
 24932 12dd 07       		.uleb128 0x7
 24933 12de 04       		.byte	0x4
 24934 12df 5F0B0000 		.4byte	0xb5f
 24935 12e3 09       		.uleb128 0x9
 24936 12e4 D2100000 		.4byte	0x10d2
 24937 12e8 F3120000 		.4byte	0x12f3
 24938 12ec 0A       		.uleb128 0xa
 24939 12ed 18010000 		.4byte	0x118
 24940 12f1 52       		.byte	0x52
 24941 12f2 00       		.byte	0
 24942 12f3 09       		.uleb128 0x9
 24943 12f4 97000000 		.4byte	0x97
 24944 12f8 03130000 		.4byte	0x1303
 24945 12fc 0A       		.uleb128 0xa
 24946 12fd 18010000 		.4byte	0x118
 24947 1301 52       		.byte	0x52
 24948 1302 00       		.byte	0
 24949 1303 09       		.uleb128 0x9
 24950 1304 25010000 		.4byte	0x125
 24951 1308 13130000 		.4byte	0x1313
 24952 130c 0A       		.uleb128 0xa
 24953 130d 18010000 		.4byte	0x118
 24954 1311 52       		.byte	0x52
 24955 1312 00       		.byte	0
 24956 1313 09       		.uleb128 0x9
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 547


 24957 1314 F9000000 		.4byte	0xf9
 24958 1318 23130000 		.4byte	0x1323
 24959 131c 0A       		.uleb128 0xa
 24960 131d 18010000 		.4byte	0x118
 24961 1321 75       		.byte	0x75
 24962 1322 00       		.byte	0
 24963 1323 09       		.uleb128 0x9
 24964 1324 F9000000 		.4byte	0xf9
 24965 1328 33130000 		.4byte	0x1333
 24966 132c 0A       		.uleb128 0xa
 24967 132d 18010000 		.4byte	0x118
 24968 1331 37       		.byte	0x37
 24969 1332 00       		.byte	0
 24970 1333 09       		.uleb128 0x9
 24971 1334 25010000 		.4byte	0x125
 24972 1338 43130000 		.4byte	0x1343
 24973 133c 0A       		.uleb128 0xa
 24974 133d 18010000 		.4byte	0x118
 24975 1341 0B       		.byte	0xb
 24976 1342 00       		.byte	0
 24977 1343 09       		.uleb128 0x9
 24978 1344 97000000 		.4byte	0x97
 24979 1348 53130000 		.4byte	0x1353
 24980 134c 0A       		.uleb128 0xa
 24981 134d 18010000 		.4byte	0x118
 24982 1351 08       		.byte	0x8
 24983 1352 00       		.byte	0
 24984 1353 09       		.uleb128 0x9
 24985 1354 97000000 		.4byte	0x97
 24986 1358 63130000 		.4byte	0x1363
 24987 135c 0A       		.uleb128 0xa
 24988 135d 18010000 		.4byte	0x118
 24989 1361 11       		.byte	0x11
 24990 1362 00       		.byte	0
 24991 1363 22       		.uleb128 0x22
 24992 1364 C2080000 		.4byte	.LASF258
 24993 1368 01       		.byte	0x1
 24994 1369 1005     		.2byte	0x510
 24995 136b 00000000 		.4byte	.LFB69
 24996 136f F40D0000 		.4byte	.LFE69-.LFB69
 24997 1373 01       		.uleb128 0x1
 24998 1374 9C       		.byte	0x9c
 24999 1375 F2140000 		.4byte	0x14f2
 25000 1379 25       		.uleb128 0x25
 25001 137a D6060000 		.4byte	.LASF248
 25002 137e 01       		.byte	0x1
 25003 137f 1005     		.2byte	0x510
 25004 1381 A3000000 		.4byte	0xa3
 25005 1385 03       		.uleb128 0x3
 25006 1386 91       		.byte	0x91
 25007 1387 CE72     		.sleb128 -1714
 25008 1389 23       		.uleb128 0x23
 25009 138a 00060000 		.4byte	.LASF233
 25010 138e 01       		.byte	0x1
 25011 138f 1305     		.2byte	0x513
 25012 1391 F2140000 		.4byte	0x14f2
 25013 1395 03       		.uleb128 0x3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 548


 25014 1396 91       		.byte	0x91
 25015 1397 DC74     		.sleb128 -1444
 25016 1399 23       		.uleb128 0x23
 25017 139a A5110000 		.4byte	.LASF259
 25018 139e 01       		.byte	0x1
 25019 139f 1A05     		.2byte	0x51a
 25020 13a1 A3000000 		.4byte	0xa3
 25021 13a5 02       		.uleb128 0x2
 25022 13a6 91       		.byte	0x91
 25023 13a7 62       		.sleb128 -30
 25024 13a8 23       		.uleb128 0x23
 25025 13a9 70050000 		.4byte	.LASF260
 25026 13ad 01       		.byte	0x1
 25027 13ae 1B05     		.2byte	0x51b
 25028 13b0 A3000000 		.4byte	0xa3
 25029 13b4 02       		.uleb128 0x2
 25030 13b5 91       		.byte	0x91
 25031 13b6 6E       		.sleb128 -18
 25032 13b7 23       		.uleb128 0x23
 25033 13b8 E3080000 		.4byte	.LASF261
 25034 13bc 01       		.byte	0x1
 25035 13bd 1C05     		.2byte	0x51c
 25036 13bf A3000000 		.4byte	0xa3
 25037 13c3 02       		.uleb128 0x2
 25038 13c4 91       		.byte	0x91
 25039 13c5 60       		.sleb128 -32
 25040 13c6 23       		.uleb128 0x23
 25041 13c7 62080000 		.4byte	.LASF262
 25042 13cb 01       		.byte	0x1
 25043 13cc 1D05     		.2byte	0x51d
 25044 13ce A3000000 		.4byte	0xa3
 25045 13d2 02       		.uleb128 0x2
 25046 13d3 91       		.byte	0x91
 25047 13d4 5E       		.sleb128 -34
 25048 13d5 26       		.uleb128 0x26
 25049 13d6 6900     		.ascii	"i\000"
 25050 13d8 01       		.byte	0x1
 25051 13d9 2505     		.2byte	0x525
 25052 13db A3000000 		.4byte	0xa3
 25053 13df 02       		.uleb128 0x2
 25054 13e0 91       		.byte	0x91
 25055 13e1 6C       		.sleb128 -20
 25056 13e2 26       		.uleb128 0x26
 25057 13e3 6A00     		.ascii	"j\000"
 25058 13e5 01       		.byte	0x1
 25059 13e6 2505     		.2byte	0x525
 25060 13e8 A3000000 		.4byte	0xa3
 25061 13ec 02       		.uleb128 0x2
 25062 13ed 91       		.byte	0x91
 25063 13ee 6A       		.sleb128 -22
 25064 13ef 26       		.uleb128 0x26
 25065 13f0 6B00     		.ascii	"k\000"
 25066 13f2 01       		.byte	0x1
 25067 13f3 2505     		.2byte	0x525
 25068 13f5 A3000000 		.4byte	0xa3
 25069 13f9 02       		.uleb128 0x2
 25070 13fa 91       		.byte	0x91
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 549


 25071 13fb 68       		.sleb128 -24
 25072 13fc 26       		.uleb128 0x26
 25073 13fd 6800     		.ascii	"h\000"
 25074 13ff 01       		.byte	0x1
 25075 1400 2505     		.2byte	0x525
 25076 1402 A3000000 		.4byte	0xa3
 25077 1406 02       		.uleb128 0x2
 25078 1407 91       		.byte	0x91
 25079 1408 66       		.sleb128 -26
 25080 1409 23       		.uleb128 0x23
 25081 140a 65050000 		.4byte	.LASF263
 25082 140e 01       		.byte	0x1
 25083 140f 2605     		.2byte	0x526
 25084 1411 A3000000 		.4byte	0xa3
 25085 1415 02       		.uleb128 0x2
 25086 1416 91       		.byte	0x91
 25087 1417 5C       		.sleb128 -36
 25088 1418 23       		.uleb128 0x23
 25089 1419 C80D0000 		.4byte	.LASF264
 25090 141d 01       		.byte	0x1
 25091 141e 2905     		.2byte	0x529
 25092 1420 30010000 		.4byte	0x130
 25093 1424 03       		.uleb128 0x3
 25094 1425 91       		.byte	0x91
 25095 1426 C074     		.sleb128 -1472
 25096 1428 23       		.uleb128 0x23
 25097 1429 6C110000 		.4byte	.LASF265
 25098 142d 01       		.byte	0x1
 25099 142e 2A05     		.2byte	0x52a
 25100 1430 03150000 		.4byte	0x1503
 25101 1434 03       		.uleb128 0x3
 25102 1435 91       		.byte	0x91
 25103 1436 B474     		.sleb128 -1484
 25104 1438 23       		.uleb128 0x23
 25105 1439 64070000 		.4byte	.LASF266
 25106 143d 01       		.byte	0x1
 25107 143e 2B05     		.2byte	0x52b
 25108 1440 13150000 		.4byte	0x1513
 25109 1444 03       		.uleb128 0x3
 25110 1445 91       		.byte	0x91
 25111 1446 A074     		.sleb128 -1504
 25112 1448 23       		.uleb128 0x23
 25113 1449 19000000 		.4byte	.LASF267
 25114 144d 01       		.byte	0x1
 25115 144e 2C05     		.2byte	0x52c
 25116 1450 23150000 		.4byte	0x1523
 25117 1454 03       		.uleb128 0x3
 25118 1455 91       		.byte	0x91
 25119 1456 9074     		.sleb128 -1520
 25120 1458 23       		.uleb128 0x23
 25121 1459 9B0E0000 		.4byte	.LASF268
 25122 145d 01       		.byte	0x1
 25123 145e 2D05     		.2byte	0x52d
 25124 1460 33150000 		.4byte	0x1533
 25125 1464 03       		.uleb128 0x3
 25126 1465 91       		.byte	0x91
 25127 1466 E473     		.sleb128 -1564
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 550


 25128 1468 23       		.uleb128 0x23
 25129 1469 3C020000 		.4byte	.LASF269
 25130 146d 01       		.byte	0x1
 25131 146e 2E05     		.2byte	0x52e
 25132 1470 30010000 		.4byte	0x130
 25133 1474 03       		.uleb128 0x3
 25134 1475 91       		.byte	0x91
 25135 1476 C873     		.sleb128 -1592
 25136 1478 23       		.uleb128 0x23
 25137 1479 A7010000 		.4byte	.LASF270
 25138 147d 01       		.byte	0x1
 25139 147e 3105     		.2byte	0x531
 25140 1480 97000000 		.4byte	0x97
 25141 1484 02       		.uleb128 0x2
 25142 1485 91       		.byte	0x91
 25143 1486 5B       		.sleb128 -37
 25144 1487 23       		.uleb128 0x23
 25145 1488 F6040000 		.4byte	.LASF271
 25146 148c 01       		.byte	0x1
 25147 148d 3205     		.2byte	0x532
 25148 148f 97000000 		.4byte	0x97
 25149 1493 02       		.uleb128 0x2
 25150 1494 91       		.byte	0x91
 25151 1495 5A       		.sleb128 -38
 25152 1496 23       		.uleb128 0x23
 25153 1497 14110000 		.4byte	.LASF272
 25154 149b 01       		.byte	0x1
 25155 149c 3305     		.2byte	0x533
 25156 149e 97000000 		.4byte	0x97
 25157 14a2 02       		.uleb128 0x2
 25158 14a3 91       		.byte	0x91
 25159 14a4 59       		.sleb128 -39
 25160 14a5 23       		.uleb128 0x23
 25161 14a6 93110000 		.4byte	.LASF273
 25162 14aa 01       		.byte	0x1
 25163 14ab 3405     		.2byte	0x534
 25164 14ad 97000000 		.4byte	0x97
 25165 14b1 02       		.uleb128 0x2
 25166 14b2 91       		.byte	0x91
 25167 14b3 58       		.sleb128 -40
 25168 14b4 23       		.uleb128 0x23
 25169 14b5 04050000 		.4byte	.LASF274
 25170 14b9 01       		.byte	0x1
 25171 14ba 3505     		.2byte	0x535
 25172 14bc 97000000 		.4byte	0x97
 25173 14c0 02       		.uleb128 0x2
 25174 14c1 91       		.byte	0x91
 25175 14c2 57       		.sleb128 -41
 25176 14c3 23       		.uleb128 0x23
 25177 14c4 F5000000 		.4byte	.LASF275
 25178 14c8 01       		.byte	0x1
 25179 14c9 3605     		.2byte	0x536
 25180 14cb 97000000 		.4byte	0x97
 25181 14cf 02       		.uleb128 0x2
 25182 14d0 91       		.byte	0x91
 25183 14d1 65       		.sleb128 -27
 25184 14d2 23       		.uleb128 0x23
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 551


 25185 14d3 53140000 		.4byte	.LASF251
 25186 14d7 01       		.byte	0x1
 25187 14d8 3805     		.2byte	0x538
 25188 14da 13130000 		.4byte	0x1313
 25189 14de 03       		.uleb128 0x3
 25190 14df 91       		.byte	0x91
 25191 14e0 D072     		.sleb128 -1712
 25192 14e2 23       		.uleb128 0x23
 25193 14e3 EB030000 		.4byte	.LASF276
 25194 14e7 01       		.byte	0x1
 25195 14e8 3905     		.2byte	0x539
 25196 14ea 97000000 		.4byte	0x97
 25197 14ee 02       		.uleb128 0x2
 25198 14ef 91       		.byte	0x91
 25199 14f0 56       		.sleb128 -42
 25200 14f1 00       		.byte	0
 25201 14f2 09       		.uleb128 0x9
 25202 14f3 97000000 		.4byte	0x97
 25203 14f7 03150000 		.4byte	0x1503
 25204 14fb 24       		.uleb128 0x24
 25205 14fc 18010000 		.4byte	0x118
 25206 1500 7805     		.2byte	0x578
 25207 1502 00       		.byte	0
 25208 1503 09       		.uleb128 0x9
 25209 1504 F9000000 		.4byte	0xf9
 25210 1508 13150000 		.4byte	0x1513
 25211 150c 0A       		.uleb128 0xa
 25212 150d 18010000 		.4byte	0x118
 25213 1511 0A       		.byte	0xa
 25214 1512 00       		.byte	0
 25215 1513 09       		.uleb128 0x9
 25216 1514 F9000000 		.4byte	0xf9
 25217 1518 23150000 		.4byte	0x1523
 25218 151c 0A       		.uleb128 0xa
 25219 151d 18010000 		.4byte	0x118
 25220 1521 13       		.byte	0x13
 25221 1522 00       		.byte	0
 25222 1523 09       		.uleb128 0x9
 25223 1524 F9000000 		.4byte	0xf9
 25224 1528 33150000 		.4byte	0x1533
 25225 152c 0A       		.uleb128 0xa
 25226 152d 18010000 		.4byte	0x118
 25227 1531 0F       		.byte	0xf
 25228 1532 00       		.byte	0
 25229 1533 09       		.uleb128 0x9
 25230 1534 F9000000 		.4byte	0xf9
 25231 1538 43150000 		.4byte	0x1543
 25232 153c 0A       		.uleb128 0xa
 25233 153d 18010000 		.4byte	0x118
 25234 1541 29       		.byte	0x29
 25235 1542 00       		.byte	0
 25236 1543 27       		.uleb128 0x27
 25237 1544 4C030000 		.4byte	.LASF315
 25238 1548 01       		.byte	0x1
 25239 1549 FF05     		.2byte	0x5ff
 25240 154b 00000000 		.4byte	.LFB70
 25241 154f 90000000 		.4byte	.LFE70-.LFB70
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 552


 25242 1553 01       		.uleb128 0x1
 25243 1554 9C       		.byte	0x9c
 25244 1555 74150000 		.4byte	0x1574
 25245 1559 26       		.uleb128 0x26
 25246 155a 6900     		.ascii	"i\000"
 25247 155c 01       		.byte	0x1
 25248 155d 0106     		.2byte	0x601
 25249 155f 97000000 		.4byte	0x97
 25250 1563 02       		.uleb128 0x2
 25251 1564 91       		.byte	0x91
 25252 1565 6F       		.sleb128 -17
 25253 1566 26       		.uleb128 0x26
 25254 1567 6A00     		.ascii	"j\000"
 25255 1569 01       		.byte	0x1
 25256 156a 0106     		.2byte	0x601
 25257 156c 97000000 		.4byte	0x97
 25258 1570 02       		.uleb128 0x2
 25259 1571 91       		.byte	0x91
 25260 1572 6E       		.sleb128 -18
 25261 1573 00       		.byte	0
 25262 1574 22       		.uleb128 0x22
 25263 1575 15010000 		.4byte	.LASF277
 25264 1579 01       		.byte	0x1
 25265 157a 1206     		.2byte	0x612
 25266 157c 00000000 		.4byte	.LFB71
 25267 1580 E81B0000 		.4byte	.LFE71-.LFB71
 25268 1584 01       		.uleb128 0x1
 25269 1585 9C       		.byte	0x9c
 25270 1586 1F160000 		.4byte	0x161f
 25271 158a 25       		.uleb128 0x25
 25272 158b D20D0000 		.4byte	.LASF278
 25273 158f 01       		.byte	0x1
 25274 1590 1206     		.2byte	0x612
 25275 1592 1F010000 		.4byte	0x11f
 25276 1596 03       		.uleb128 0x3
 25277 1597 91       		.byte	0x91
 25278 1598 D47E     		.sleb128 -172
 25279 159a 26       		.uleb128 0x26
 25280 159b 6900     		.ascii	"i\000"
 25281 159d 01       		.byte	0x1
 25282 159e 1406     		.2byte	0x614
 25283 15a0 73000000 		.4byte	0x73
 25284 15a4 02       		.uleb128 0x2
 25285 15a5 91       		.byte	0x91
 25286 15a6 54       		.sleb128 -44
 25287 15a7 23       		.uleb128 0x23
 25288 15a8 84030000 		.4byte	.LASF250
 25289 15ac 01       		.byte	0x1
 25290 15ad 1606     		.2byte	0x616
 25291 15af DD120000 		.4byte	0x12dd
 25292 15b3 02       		.uleb128 0x2
 25293 15b4 91       		.byte	0x91
 25294 15b5 4C       		.sleb128 -52
 25295 15b6 1E       		.uleb128 0x1e
 25296 15b7 1C000000 		.4byte	.LBB23
 25297 15bb 841B0000 		.4byte	.LBE23-.LBB23
 25298 15bf 26       		.uleb128 0x26
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 553


 25299 15c0 73747200 		.ascii	"str\000"
 25300 15c4 01       		.byte	0x1
 25301 15c5 1906     		.2byte	0x619
 25302 15c7 1F160000 		.4byte	0x161f
 25303 15cb 03       		.uleb128 0x3
 25304 15cc 91       		.byte	0x91
 25305 15cd DC7E     		.sleb128 -164
 25306 15cf 1E       		.uleb128 0x1e
 25307 15d0 1C030000 		.4byte	.LBB24
 25308 15d4 FC100000 		.4byte	.LBE24-.LBB24
 25309 15d8 26       		.uleb128 0x26
 25310 15d9 6B00     		.ascii	"k\000"
 25311 15db 01       		.byte	0x1
 25312 15dc 4D06     		.2byte	0x64d
 25313 15de 97000000 		.4byte	0x97
 25314 15e2 02       		.uleb128 0x2
 25315 15e3 91       		.byte	0x91
 25316 15e4 53       		.sleb128 -45
 25317 15e5 1E       		.uleb128 0x1e
 25318 15e6 6C030000 		.4byte	.LBB25
 25319 15ea 90100000 		.4byte	.LBE25-.LBB25
 25320 15ee 23       		.uleb128 0x23
 25321 15ef B30D0000 		.4byte	.LASF243
 25322 15f3 01       		.byte	0x1
 25323 15f4 4F06     		.2byte	0x64f
 25324 15f6 97000000 		.4byte	0x97
 25325 15fa 02       		.uleb128 0x2
 25326 15fb 91       		.byte	0x91
 25327 15fc 4B       		.sleb128 -53
 25328 15fd 26       		.uleb128 0x26
 25329 15fe 4D4F5400 		.ascii	"MOT\000"
 25330 1602 01       		.byte	0x1
 25331 1603 5006     		.2byte	0x650
 25332 1605 2F160000 		.4byte	0x162f
 25333 1609 02       		.uleb128 0x2
 25334 160a 91       		.byte	0x91
 25335 160b 44       		.sleb128 -60
 25336 160c 23       		.uleb128 0x23
 25337 160d BB130000 		.4byte	.LASF279
 25338 1611 01       		.byte	0x1
 25339 1612 5106     		.2byte	0x651
 25340 1614 97000000 		.4byte	0x97
 25341 1618 02       		.uleb128 0x2
 25342 1619 91       		.byte	0x91
 25343 161a 43       		.sleb128 -61
 25344 161b 00       		.byte	0
 25345 161c 00       		.byte	0
 25346 161d 00       		.byte	0
 25347 161e 00       		.byte	0
 25348 161f 09       		.uleb128 0x9
 25349 1620 F9000000 		.4byte	0xf9
 25350 1624 2F160000 		.4byte	0x162f
 25351 1628 0A       		.uleb128 0xa
 25352 1629 18010000 		.4byte	0x118
 25353 162d 63       		.byte	0x63
 25354 162e 00       		.byte	0
 25355 162f 07       		.uleb128 0x7
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 554


 25356 1630 04       		.byte	0x4
 25357 1631 20060000 		.4byte	0x620
 25358 1635 22       		.uleb128 0x22
 25359 1636 CE0E0000 		.4byte	.LASF280
 25360 163a 01       		.byte	0x1
 25361 163b FF07     		.2byte	0x7ff
 25362 163d 00000000 		.4byte	.LFB72
 25363 1641 90040000 		.4byte	.LFE72-.LFB72
 25364 1645 01       		.uleb128 0x1
 25365 1646 9C       		.byte	0x9c
 25366 1647 C5160000 		.4byte	0x16c5
 25367 164b 25       		.uleb128 0x25
 25368 164c D20D0000 		.4byte	.LASF278
 25369 1650 01       		.byte	0x1
 25370 1651 FF07     		.2byte	0x7ff
 25371 1653 1F010000 		.4byte	0x11f
 25372 1657 03       		.uleb128 0x3
 25373 1658 91       		.byte	0x91
 25374 1659 BC7C     		.sleb128 -452
 25375 165b 26       		.uleb128 0x26
 25376 165c 73747200 		.ascii	"str\000"
 25377 1660 01       		.byte	0x1
 25378 1661 0108     		.2byte	0x801
 25379 1663 1F160000 		.4byte	0x161f
 25380 1667 03       		.uleb128 0x3
 25381 1668 91       		.byte	0x91
 25382 1669 F07E     		.sleb128 -144
 25383 166b 26       		.uleb128 0x26
 25384 166c 6900     		.ascii	"i\000"
 25385 166e 01       		.byte	0x1
 25386 166f 0208     		.2byte	0x802
 25387 1671 73000000 		.4byte	0x73
 25388 1675 02       		.uleb128 0x2
 25389 1676 91       		.byte	0x91
 25390 1677 64       		.sleb128 -28
 25391 1678 23       		.uleb128 0x23
 25392 1679 93040000 		.4byte	.LASF281
 25393 167d 01       		.byte	0x1
 25394 167e 0308     		.2byte	0x803
 25395 1680 73000000 		.4byte	0x73
 25396 1684 02       		.uleb128 0x2
 25397 1685 91       		.byte	0x91
 25398 1686 54       		.sleb128 -44
 25399 1687 23       		.uleb128 0x23
 25400 1688 84030000 		.4byte	.LASF250
 25401 168c 01       		.byte	0x1
 25402 168d 0508     		.2byte	0x805
 25403 168f DD120000 		.4byte	0x12dd
 25404 1693 02       		.uleb128 0x2
 25405 1694 91       		.byte	0x91
 25406 1695 60       		.sleb128 -32
 25407 1696 26       		.uleb128 0x26
 25408 1697 4D4F5400 		.ascii	"MOT\000"
 25409 169b 01       		.byte	0x1
 25410 169c 0608     		.2byte	0x806
 25411 169e 2F160000 		.4byte	0x162f
 25412 16a2 02       		.uleb128 0x2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 555


 25413 16a3 91       		.byte	0x91
 25414 16a4 5C       		.sleb128 -36
 25415 16a5 23       		.uleb128 0x23
 25416 16a6 BB130000 		.4byte	.LASF279
 25417 16aa 01       		.byte	0x1
 25418 16ab 0708     		.2byte	0x807
 25419 16ad 97000000 		.4byte	0x97
 25420 16b1 02       		.uleb128 0x2
 25421 16b2 91       		.byte	0x91
 25422 16b3 5B       		.sleb128 -37
 25423 16b4 23       		.uleb128 0x23
 25424 16b5 E5050000 		.4byte	.LASF282
 25425 16b9 01       		.byte	0x1
 25426 16ba 3F08     		.2byte	0x83f
 25427 16bc C5160000 		.4byte	0x16c5
 25428 16c0 03       		.uleb128 0x3
 25429 16c1 91       		.byte	0x91
 25430 16c2 C47C     		.sleb128 -444
 25431 16c4 00       		.byte	0
 25432 16c5 09       		.uleb128 0x9
 25433 16c6 F9000000 		.4byte	0xf9
 25434 16ca D6160000 		.4byte	0x16d6
 25435 16ce 24       		.uleb128 0x24
 25436 16cf 18010000 		.4byte	0x118
 25437 16d3 2B01     		.2byte	0x12b
 25438 16d5 00       		.byte	0
 25439 16d6 22       		.uleb128 0x22
 25440 16d7 710C0000 		.4byte	.LASF283
 25441 16db 01       		.byte	0x1
 25442 16dc 4908     		.2byte	0x849
 25443 16de 00000000 		.4byte	.LFB73
 25444 16e2 5C020000 		.4byte	.LFE73-.LFB73
 25445 16e6 01       		.uleb128 0x1
 25446 16e7 9C       		.byte	0x9c
 25447 16e8 1C170000 		.4byte	0x171c
 25448 16ec 25       		.uleb128 0x25
 25449 16ed D20D0000 		.4byte	.LASF278
 25450 16f1 01       		.byte	0x1
 25451 16f2 4908     		.2byte	0x849
 25452 16f4 1F010000 		.4byte	0x11f
 25453 16f8 03       		.uleb128 0x3
 25454 16f9 91       		.byte	0x91
 25455 16fa CC7E     		.sleb128 -180
 25456 16fc 26       		.uleb128 0x26
 25457 16fd 73747200 		.ascii	"str\000"
 25458 1701 01       		.byte	0x1
 25459 1702 4B08     		.2byte	0x84b
 25460 1704 1C170000 		.4byte	0x171c
 25461 1708 03       		.uleb128 0x3
 25462 1709 91       		.byte	0x91
 25463 170a D47E     		.sleb128 -172
 25464 170c 23       		.uleb128 0x23
 25465 170d 84030000 		.4byte	.LASF250
 25466 1711 01       		.byte	0x1
 25467 1712 4D08     		.2byte	0x84d
 25468 1714 DD120000 		.4byte	0x12dd
 25469 1718 02       		.uleb128 0x2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 556


 25470 1719 91       		.byte	0x91
 25471 171a 6C       		.sleb128 -20
 25472 171b 00       		.byte	0
 25473 171c 09       		.uleb128 0x9
 25474 171d F9000000 		.4byte	0xf9
 25475 1721 2C170000 		.4byte	0x172c
 25476 1725 0A       		.uleb128 0xa
 25477 1726 18010000 		.4byte	0x118
 25478 172a 95       		.byte	0x95
 25479 172b 00       		.byte	0
 25480 172c 22       		.uleb128 0x22
 25481 172d 360F0000 		.4byte	.LASF284
 25482 1731 01       		.byte	0x1
 25483 1732 7608     		.2byte	0x876
 25484 1734 00000000 		.4byte	.LFB74
 25485 1738 80120000 		.4byte	.LFE74-.LFB74
 25486 173c 01       		.uleb128 0x1
 25487 173d 9C       		.byte	0x9c
 25488 173e CD170000 		.4byte	0x17cd
 25489 1742 25       		.uleb128 0x25
 25490 1743 D20D0000 		.4byte	.LASF278
 25491 1747 01       		.byte	0x1
 25492 1748 7608     		.2byte	0x876
 25493 174a 1F010000 		.4byte	0x11f
 25494 174e 03       		.uleb128 0x3
 25495 174f 91       		.byte	0x91
 25496 1750 D47E     		.sleb128 -172
 25497 1752 26       		.uleb128 0x26
 25498 1753 73747200 		.ascii	"str\000"
 25499 1757 01       		.byte	0x1
 25500 1758 7808     		.2byte	0x878
 25501 175a 1F160000 		.4byte	0x161f
 25502 175e 03       		.uleb128 0x3
 25503 175f 91       		.byte	0x91
 25504 1760 DC7E     		.sleb128 -164
 25505 1762 26       		.uleb128 0x26
 25506 1763 6900     		.ascii	"i\000"
 25507 1765 01       		.byte	0x1
 25508 1766 7908     		.2byte	0x879
 25509 1768 73000000 		.4byte	0x73
 25510 176c 02       		.uleb128 0x2
 25511 176d 91       		.byte	0x91
 25512 176e 54       		.sleb128 -44
 25513 176f 23       		.uleb128 0x23
 25514 1770 84030000 		.4byte	.LASF250
 25515 1774 01       		.byte	0x1
 25516 1775 7D08     		.2byte	0x87d
 25517 1777 DD120000 		.4byte	0x12dd
 25518 177b 02       		.uleb128 0x2
 25519 177c 91       		.byte	0x91
 25520 177d 4C       		.sleb128 -52
 25521 177e 1E       		.uleb128 0x1e
 25522 177f 08010000 		.4byte	.LBB26
 25523 1783 D80C0000 		.4byte	.LBE26-.LBB26
 25524 1787 26       		.uleb128 0x26
 25525 1788 6B00     		.ascii	"k\000"
 25526 178a 01       		.byte	0x1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 557


 25527 178b 9208     		.2byte	0x892
 25528 178d 97000000 		.4byte	0x97
 25529 1791 02       		.uleb128 0x2
 25530 1792 91       		.byte	0x91
 25531 1793 53       		.sleb128 -45
 25532 1794 1E       		.uleb128 0x1e
 25533 1795 12010000 		.4byte	.LBB27
 25534 1799 B20C0000 		.4byte	.LBE27-.LBB27
 25535 179d 23       		.uleb128 0x23
 25536 179e B30D0000 		.4byte	.LASF243
 25537 17a2 01       		.byte	0x1
 25538 17a3 9408     		.2byte	0x894
 25539 17a5 97000000 		.4byte	0x97
 25540 17a9 02       		.uleb128 0x2
 25541 17aa 91       		.byte	0x91
 25542 17ab 4B       		.sleb128 -53
 25543 17ac 26       		.uleb128 0x26
 25544 17ad 4D4F5400 		.ascii	"MOT\000"
 25545 17b1 01       		.byte	0x1
 25546 17b2 9508     		.2byte	0x895
 25547 17b4 2F160000 		.4byte	0x162f
 25548 17b8 02       		.uleb128 0x2
 25549 17b9 91       		.byte	0x91
 25550 17ba 44       		.sleb128 -60
 25551 17bb 23       		.uleb128 0x23
 25552 17bc BB130000 		.4byte	.LASF279
 25553 17c0 01       		.byte	0x1
 25554 17c1 9608     		.2byte	0x896
 25555 17c3 97000000 		.4byte	0x97
 25556 17c7 02       		.uleb128 0x2
 25557 17c8 91       		.byte	0x91
 25558 17c9 43       		.sleb128 -61
 25559 17ca 00       		.byte	0
 25560 17cb 00       		.byte	0
 25561 17cc 00       		.byte	0
 25562 17cd 22       		.uleb128 0x22
 25563 17ce 830B0000 		.4byte	.LASF285
 25564 17d2 01       		.byte	0x1
 25565 17d3 7E09     		.2byte	0x97e
 25566 17d5 00000000 		.4byte	.LFB75
 25567 17d9 DC000000 		.4byte	.LFE75-.LFB75
 25568 17dd 01       		.uleb128 0x1
 25569 17de 9C       		.byte	0x9c
 25570 17df 11180000 		.4byte	0x1811
 25571 17e3 25       		.uleb128 0x25
 25572 17e4 D20D0000 		.4byte	.LASF278
 25573 17e8 01       		.byte	0x1
 25574 17e9 7E09     		.2byte	0x97e
 25575 17eb 1F010000 		.4byte	0x11f
 25576 17ef 03       		.uleb128 0x3
 25577 17f0 91       		.byte	0x91
 25578 17f1 DC7E     		.sleb128 -164
 25579 17f3 26       		.uleb128 0x26
 25580 17f4 73747200 		.ascii	"str\000"
 25581 17f8 01       		.byte	0x1
 25582 17f9 8009     		.2byte	0x980
 25583 17fb 11180000 		.4byte	0x1811
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 558


 25584 17ff 03       		.uleb128 0x3
 25585 1800 91       		.byte	0x91
 25586 1801 E07E     		.sleb128 -160
 25587 1803 26       		.uleb128 0x26
 25588 1804 6900     		.ascii	"i\000"
 25589 1806 01       		.byte	0x1
 25590 1807 8109     		.2byte	0x981
 25591 1809 73000000 		.4byte	0x73
 25592 180d 02       		.uleb128 0x2
 25593 180e 91       		.byte	0x91
 25594 180f 6C       		.sleb128 -20
 25595 1810 00       		.byte	0
 25596 1811 09       		.uleb128 0x9
 25597 1812 F9000000 		.4byte	0xf9
 25598 1816 21180000 		.4byte	0x1821
 25599 181a 0A       		.uleb128 0xa
 25600 181b 18010000 		.4byte	0x118
 25601 181f 8B       		.byte	0x8b
 25602 1820 00       		.byte	0
 25603 1821 22       		.uleb128 0x22
 25604 1822 DE0D0000 		.4byte	.LASF286
 25605 1826 01       		.byte	0x1
 25606 1827 9609     		.2byte	0x996
 25607 1829 00000000 		.4byte	.LFB76
 25608 182d 80010000 		.4byte	.LFE76-.LFB76
 25609 1831 01       		.uleb128 0x1
 25610 1832 9C       		.byte	0x9c
 25611 1833 65180000 		.4byte	0x1865
 25612 1837 25       		.uleb128 0x25
 25613 1838 D20D0000 		.4byte	.LASF278
 25614 183c 01       		.byte	0x1
 25615 183d 9609     		.2byte	0x996
 25616 183f 1F010000 		.4byte	0x11f
 25617 1843 03       		.uleb128 0x3
 25618 1844 91       		.byte	0x91
 25619 1845 E47E     		.sleb128 -156
 25620 1847 26       		.uleb128 0x26
 25621 1848 73747200 		.ascii	"str\000"
 25622 184c 01       		.byte	0x1
 25623 184d 9809     		.2byte	0x998
 25624 184f 65180000 		.4byte	0x1865
 25625 1853 03       		.uleb128 0x3
 25626 1854 91       		.byte	0x91
 25627 1855 EC7E     		.sleb128 -148
 25628 1857 26       		.uleb128 0x26
 25629 1858 6900     		.ascii	"i\000"
 25630 185a 01       		.byte	0x1
 25631 185b 9909     		.2byte	0x999
 25632 185d 73000000 		.4byte	0x73
 25633 1861 02       		.uleb128 0x2
 25634 1862 91       		.byte	0x91
 25635 1863 64       		.sleb128 -28
 25636 1864 00       		.byte	0
 25637 1865 09       		.uleb128 0x9
 25638 1866 F9000000 		.4byte	0xf9
 25639 186a 75180000 		.4byte	0x1875
 25640 186e 0A       		.uleb128 0xa
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 559


 25641 186f 18010000 		.4byte	0x118
 25642 1873 77       		.byte	0x77
 25643 1874 00       		.byte	0
 25644 1875 28       		.uleb128 0x28
 25645 1876 680F0000 		.4byte	.LASF287
 25646 187a 01       		.byte	0x1
 25647 187b C209     		.2byte	0x9c2
 25648 187d 00000000 		.4byte	.LFB77
 25649 1881 28000000 		.4byte	.LFE77-.LFB77
 25650 1885 01       		.uleb128 0x1
 25651 1886 9C       		.byte	0x9c
 25652 1887 9B180000 		.4byte	0x189b
 25653 188b 25       		.uleb128 0x25
 25654 188c D20D0000 		.4byte	.LASF278
 25655 1890 01       		.byte	0x1
 25656 1891 C209     		.2byte	0x9c2
 25657 1893 1F010000 		.4byte	0x11f
 25658 1897 02       		.uleb128 0x2
 25659 1898 91       		.byte	0x91
 25660 1899 6C       		.sleb128 -20
 25661 189a 00       		.byte	0
 25662 189b 22       		.uleb128 0x22
 25663 189c B3030000 		.4byte	.LASF288
 25664 18a0 01       		.byte	0x1
 25665 18a1 CD09     		.2byte	0x9cd
 25666 18a3 00000000 		.4byte	.LFB78
 25667 18a7 F0000000 		.4byte	.LFE78-.LFB78
 25668 18ab 01       		.uleb128 0x1
 25669 18ac 9C       		.byte	0x9c
 25670 18ad 0A190000 		.4byte	0x190a
 25671 18b1 25       		.uleb128 0x25
 25672 18b2 D20D0000 		.4byte	.LASF278
 25673 18b6 01       		.byte	0x1
 25674 18b7 CD09     		.2byte	0x9cd
 25675 18b9 1F010000 		.4byte	0x11f
 25676 18bd 03       		.uleb128 0x3
 25677 18be 91       		.byte	0x91
 25678 18bf FC7E     		.sleb128 -132
 25679 18c1 23       		.uleb128 0x23
 25680 18c2 2C020000 		.4byte	.LASF289
 25681 18c6 01       		.byte	0x1
 25682 18c7 CF09     		.2byte	0x9cf
 25683 18c9 1F160000 		.4byte	0x161f
 25684 18cd 03       		.uleb128 0x3
 25685 18ce 91       		.byte	0x91
 25686 18cf 847F     		.sleb128 -124
 25687 18d1 23       		.uleb128 0x23
 25688 18d2 D0010000 		.4byte	.LASF290
 25689 18d6 01       		.byte	0x1
 25690 18d7 D009     		.2byte	0x9d0
 25691 18d9 A3000000 		.4byte	0xa3
 25692 18dd 02       		.uleb128 0x2
 25693 18de 91       		.byte	0x91
 25694 18df 6E       		.sleb128 -18
 25695 18e0 23       		.uleb128 0x23
 25696 18e1 BC000000 		.4byte	.LASF291
 25697 18e5 01       		.byte	0x1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 560


 25698 18e6 D109     		.2byte	0x9d1
 25699 18e8 EB000000 		.4byte	0xeb
 25700 18ec 05       		.uleb128 0x5
 25701 18ed 03       		.byte	0x3
 25702 18ee 00000000 		.4byte	h_time.10531
 25703 18f2 1E       		.uleb128 0x1e
 25704 18f3 26000000 		.4byte	.LBB28
 25705 18f7 A4000000 		.4byte	.LBE28-.LBB28
 25706 18fb 26       		.uleb128 0x26
 25707 18fc 6900     		.ascii	"i\000"
 25708 18fe 01       		.byte	0x1
 25709 18ff D609     		.2byte	0x9d6
 25710 1901 73000000 		.4byte	0x73
 25711 1905 02       		.uleb128 0x2
 25712 1906 91       		.byte	0x91
 25713 1907 68       		.sleb128 -24
 25714 1908 00       		.byte	0
 25715 1909 00       		.byte	0
 25716 190a 22       		.uleb128 0x22
 25717 190b DD140000 		.4byte	.LASF292
 25718 190f 01       		.byte	0x1
 25719 1910 EE09     		.2byte	0x9ee
 25720 1912 00000000 		.4byte	.LFB79
 25721 1916 74030000 		.4byte	.LFE79-.LFB79
 25722 191a 01       		.uleb128 0x1
 25723 191b 9C       		.byte	0x9c
 25724 191c 4E190000 		.4byte	0x194e
 25725 1920 25       		.uleb128 0x25
 25726 1921 D20D0000 		.4byte	.LASF278
 25727 1925 01       		.byte	0x1
 25728 1926 EE09     		.2byte	0x9ee
 25729 1928 1F010000 		.4byte	0x11f
 25730 192c 03       		.uleb128 0x3
 25731 192d 91       		.byte	0x91
 25732 192e AC7D     		.sleb128 -340
 25733 1930 26       		.uleb128 0x26
 25734 1931 73747200 		.ascii	"str\000"
 25735 1935 01       		.byte	0x1
 25736 1936 F009     		.2byte	0x9f0
 25737 1938 C5160000 		.4byte	0x16c5
 25738 193c 03       		.uleb128 0x3
 25739 193d 91       		.byte	0x91
 25740 193e B07D     		.sleb128 -336
 25741 1940 26       		.uleb128 0x26
 25742 1941 6900     		.ascii	"i\000"
 25743 1943 01       		.byte	0x1
 25744 1944 F109     		.2byte	0x9f1
 25745 1946 73000000 		.4byte	0x73
 25746 194a 02       		.uleb128 0x2
 25747 194b 91       		.byte	0x91
 25748 194c 5C       		.sleb128 -36
 25749 194d 00       		.byte	0
 25750 194e 22       		.uleb128 0x22
 25751 194f F90E0000 		.4byte	.LASF293
 25752 1953 01       		.byte	0x1
 25753 1954 190A     		.2byte	0xa19
 25754 1956 00000000 		.4byte	.LFB80
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 561


 25755 195a 84000000 		.4byte	.LFE80-.LFB80
 25756 195e 01       		.uleb128 0x1
 25757 195f 9C       		.byte	0x9c
 25758 1960 A1190000 		.4byte	0x19a1
 25759 1964 25       		.uleb128 0x25
 25760 1965 00060000 		.4byte	.LASF233
 25761 1969 01       		.byte	0x1
 25762 196a 190A     		.2byte	0xa19
 25763 196c D2100000 		.4byte	0x10d2
 25764 1970 02       		.uleb128 0x2
 25765 1971 91       		.byte	0x91
 25766 1972 6C       		.sleb128 -20
 25767 1973 25       		.uleb128 0x25
 25768 1974 620B0000 		.4byte	.LASF234
 25769 1978 01       		.byte	0x1
 25770 1979 190A     		.2byte	0xa19
 25771 197b A3000000 		.4byte	0xa3
 25772 197f 02       		.uleb128 0x2
 25773 1980 91       		.byte	0x91
 25774 1981 6A       		.sleb128 -22
 25775 1982 25       		.uleb128 0x25
 25776 1983 860F0000 		.4byte	.LASF294
 25777 1987 01       		.byte	0x1
 25778 1988 190A     		.2byte	0xa19
 25779 198a 97000000 		.4byte	0x97
 25780 198e 02       		.uleb128 0x2
 25781 198f 91       		.byte	0x91
 25782 1990 69       		.sleb128 -23
 25783 1991 23       		.uleb128 0x23
 25784 1992 D6060000 		.4byte	.LASF248
 25785 1996 01       		.byte	0x1
 25786 1997 1B0A     		.2byte	0xa1b
 25787 1999 A3000000 		.4byte	0xa3
 25788 199d 02       		.uleb128 0x2
 25789 199e 91       		.byte	0x91
 25790 199f 76       		.sleb128 -10
 25791 19a0 00       		.byte	0
 25792 19a1 22       		.uleb128 0x22
 25793 19a2 25060000 		.4byte	.LASF295
 25794 19a6 01       		.byte	0x1
 25795 19a7 350A     		.2byte	0xa35
 25796 19a9 00000000 		.4byte	.LFB81
 25797 19ad 88000000 		.4byte	.LFE81-.LFB81
 25798 19b1 01       		.uleb128 0x1
 25799 19b2 9C       		.byte	0x9c
 25800 19b3 E5190000 		.4byte	0x19e5
 25801 19b7 25       		.uleb128 0x25
 25802 19b8 00060000 		.4byte	.LASF233
 25803 19bc 01       		.byte	0x1
 25804 19bd 350A     		.2byte	0xa35
 25805 19bf D2100000 		.4byte	0x10d2
 25806 19c3 02       		.uleb128 0x2
 25807 19c4 91       		.byte	0x91
 25808 19c5 6C       		.sleb128 -20
 25809 19c6 25       		.uleb128 0x25
 25810 19c7 620B0000 		.4byte	.LASF234
 25811 19cb 01       		.byte	0x1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 562


 25812 19cc 350A     		.2byte	0xa35
 25813 19ce A3000000 		.4byte	0xa3
 25814 19d2 02       		.uleb128 0x2
 25815 19d3 91       		.byte	0x91
 25816 19d4 6A       		.sleb128 -22
 25817 19d5 23       		.uleb128 0x23
 25818 19d6 D6060000 		.4byte	.LASF248
 25819 19da 01       		.byte	0x1
 25820 19db 370A     		.2byte	0xa37
 25821 19dd A3000000 		.4byte	0xa3
 25822 19e1 02       		.uleb128 0x2
 25823 19e2 91       		.byte	0x91
 25824 19e3 76       		.sleb128 -10
 25825 19e4 00       		.byte	0
 25826 19e5 22       		.uleb128 0x22
 25827 19e6 EE0B0000 		.4byte	.LASF296
 25828 19ea 01       		.byte	0x1
 25829 19eb 510A     		.2byte	0xa51
 25830 19ed 00000000 		.4byte	.LFB82
 25831 19f1 A0000000 		.4byte	.LFE82-.LFB82
 25832 19f5 01       		.uleb128 0x1
 25833 19f6 9C       		.byte	0x9c
 25834 19f7 381A0000 		.4byte	0x1a38
 25835 19fb 25       		.uleb128 0x25
 25836 19fc 00060000 		.4byte	.LASF233
 25837 1a00 01       		.byte	0x1
 25838 1a01 510A     		.2byte	0xa51
 25839 1a03 D2100000 		.4byte	0x10d2
 25840 1a07 02       		.uleb128 0x2
 25841 1a08 91       		.byte	0x91
 25842 1a09 74       		.sleb128 -12
 25843 1a0a 25       		.uleb128 0x25
 25844 1a0b 620B0000 		.4byte	.LASF234
 25845 1a0f 01       		.byte	0x1
 25846 1a10 510A     		.2byte	0xa51
 25847 1a12 A3000000 		.4byte	0xa3
 25848 1a16 02       		.uleb128 0x2
 25849 1a17 91       		.byte	0x91
 25850 1a18 72       		.sleb128 -14
 25851 1a19 29       		.uleb128 0x29
 25852 1a1a 696400   		.ascii	"id\000"
 25853 1a1d 01       		.byte	0x1
 25854 1a1e 510A     		.2byte	0xa51
 25855 1a20 97000000 		.4byte	0x97
 25856 1a24 02       		.uleb128 0x2
 25857 1a25 91       		.byte	0x91
 25858 1a26 71       		.sleb128 -15
 25859 1a27 26       		.uleb128 0x26
 25860 1a28 6900     		.ascii	"i\000"
 25861 1a2a 01       		.byte	0x1
 25862 1a2b 530A     		.2byte	0xa53
 25863 1a2d A3000000 		.4byte	0xa3
 25864 1a31 05       		.uleb128 0x5
 25865 1a32 03       		.byte	0x3
 25866 1a33 04000000 		.4byte	i.10572
 25867 1a37 00       		.byte	0
 25868 1a38 2A       		.uleb128 0x2a
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 563


 25869 1a39 6B130000 		.4byte	.LASF302
 25870 1a3d 01       		.byte	0x1
 25871 1a3e 6F0A     		.2byte	0xa6f
 25872 1a40 97000000 		.4byte	0x97
 25873 1a44 00000000 		.4byte	.LFB83
 25874 1a48 3E000000 		.4byte	.LFE83-.LFB83
 25875 1a4c 01       		.uleb128 0x1
 25876 1a4d 9C       		.byte	0x9c
 25877 1a4e 8D1A0000 		.4byte	0x1a8d
 25878 1a52 25       		.uleb128 0x25
 25879 1a53 3B0B0000 		.4byte	.LASF297
 25880 1a57 01       		.byte	0x1
 25881 1a58 6F0A     		.2byte	0xa6f
 25882 1a5a D2100000 		.4byte	0x10d2
 25883 1a5e 02       		.uleb128 0x2
 25884 1a5f 91       		.byte	0x91
 25885 1a60 6C       		.sleb128 -20
 25886 1a61 25       		.uleb128 0x25
 25887 1a62 CD050000 		.4byte	.LASF298
 25888 1a66 01       		.byte	0x1
 25889 1a67 6F0A     		.2byte	0xa6f
 25890 1a69 97000000 		.4byte	0x97
 25891 1a6d 02       		.uleb128 0x2
 25892 1a6e 91       		.byte	0x91
 25893 1a6f 6B       		.sleb128 -21
 25894 1a70 26       		.uleb128 0x26
 25895 1a71 6900     		.ascii	"i\000"
 25896 1a73 01       		.byte	0x1
 25897 1a74 710A     		.2byte	0xa71
 25898 1a76 97000000 		.4byte	0x97
 25899 1a7a 02       		.uleb128 0x2
 25900 1a7b 91       		.byte	0x91
 25901 1a7c 77       		.sleb128 -9
 25902 1a7d 23       		.uleb128 0x23
 25903 1a7e 3E0D0000 		.4byte	.LASF299
 25904 1a82 01       		.byte	0x1
 25905 1a83 720A     		.2byte	0xa72
 25906 1a85 97000000 		.4byte	0x97
 25907 1a89 02       		.uleb128 0x2
 25908 1a8a 91       		.byte	0x91
 25909 1a8b 76       		.sleb128 -10
 25910 1a8c 00       		.byte	0
 25911 1a8d 22       		.uleb128 0x22
 25912 1a8e 700B0000 		.4byte	.LASF300
 25913 1a92 01       		.byte	0x1
 25914 1a93 7F0A     		.2byte	0xa7f
 25915 1a95 00000000 		.4byte	.LFB84
 25916 1a99 2E000000 		.4byte	.LFE84-.LFB84
 25917 1a9d 01       		.uleb128 0x1
 25918 1a9e 9C       		.byte	0x9c
 25919 1a9f D11A0000 		.4byte	0x1ad1
 25920 1aa3 25       		.uleb128 0x25
 25921 1aa4 16050000 		.4byte	.LASF301
 25922 1aa8 01       		.byte	0x1
 25923 1aa9 7F0A     		.2byte	0xa7f
 25924 1aab 97000000 		.4byte	0x97
 25925 1aaf 02       		.uleb128 0x2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 564


 25926 1ab0 91       		.byte	0x91
 25927 1ab1 6F       		.sleb128 -17
 25928 1ab2 23       		.uleb128 0x23
 25929 1ab3 620B0000 		.4byte	.LASF234
 25930 1ab7 01       		.byte	0x1
 25931 1ab8 800A     		.2byte	0xa80
 25932 1aba 73000000 		.4byte	0x73
 25933 1abe 02       		.uleb128 0x2
 25934 1abf 91       		.byte	0x91
 25935 1ac0 74       		.sleb128 -12
 25936 1ac1 23       		.uleb128 0x23
 25937 1ac2 00060000 		.4byte	.LASF233
 25938 1ac6 01       		.byte	0x1
 25939 1ac7 810A     		.2byte	0xa81
 25940 1ac9 CC080000 		.4byte	0x8cc
 25941 1acd 02       		.uleb128 0x2
 25942 1ace 91       		.byte	0x91
 25943 1acf 70       		.sleb128 -16
 25944 1ad0 00       		.byte	0
 25945 1ad1 2B       		.uleb128 0x2b
 25946 1ad2 4E040000 		.4byte	.LASF303
 25947 1ad6 01       		.byte	0x1
 25948 1ad7 8E0A     		.2byte	0xa8e
 25949 1ad9 97000000 		.4byte	0x97
 25950 1add 00000000 		.4byte	.LFB85
 25951 1ae1 98000000 		.4byte	.LFE85-.LFB85
 25952 1ae5 01       		.uleb128 0x1
 25953 1ae6 9C       		.byte	0x9c
 25954 1ae7 351B0000 		.4byte	0x1b35
 25955 1aeb 25       		.uleb128 0x25
 25956 1aec C0050000 		.4byte	.LASF304
 25957 1af0 01       		.byte	0x1
 25958 1af1 8E0A     		.2byte	0xa8e
 25959 1af3 73000000 		.4byte	0x73
 25960 1af7 02       		.uleb128 0x2
 25961 1af8 91       		.byte	0x91
 25962 1af9 64       		.sleb128 -28
 25963 1afa 26       		.uleb128 0x26
 25964 1afb 6900     		.ascii	"i\000"
 25965 1afd 01       		.byte	0x1
 25966 1afe 900A     		.2byte	0xa90
 25967 1b00 73000000 		.4byte	0x73
 25968 1b04 02       		.uleb128 0x2
 25969 1b05 91       		.byte	0x91
 25970 1b06 74       		.sleb128 -12
 25971 1b07 23       		.uleb128 0x23
 25972 1b08 C3000000 		.4byte	.LASF305
 25973 1b0c 01       		.byte	0x1
 25974 1b0d 910A     		.2byte	0xa91
 25975 1b0f 97000000 		.4byte	0x97
 25976 1b13 02       		.uleb128 0x2
 25977 1b14 91       		.byte	0x91
 25978 1b15 6B       		.sleb128 -21
 25979 1b16 23       		.uleb128 0x23
 25980 1b17 2F060000 		.4byte	.LASF306
 25981 1b1b 01       		.byte	0x1
 25982 1b1c 920A     		.2byte	0xa92
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 565


 25983 1b1e 73000000 		.4byte	0x73
 25984 1b22 02       		.uleb128 0x2
 25985 1b23 91       		.byte	0x91
 25986 1b24 6C       		.sleb128 -20
 25987 1b25 23       		.uleb128 0x23
 25988 1b26 54050000 		.4byte	.LASF307
 25989 1b2a 01       		.byte	0x1
 25990 1b2b 930A     		.2byte	0xa93
 25991 1b2d 97000000 		.4byte	0x97
 25992 1b31 02       		.uleb128 0x2
 25993 1b32 91       		.byte	0x91
 25994 1b33 73       		.sleb128 -13
 25995 1b34 00       		.byte	0
 25996 1b35 22       		.uleb128 0x22
 25997 1b36 6D0E0000 		.4byte	.LASF308
 25998 1b3a 01       		.byte	0x1
 25999 1b3b B80A     		.2byte	0xab8
 26000 1b3d 00000000 		.4byte	.LFB86
 26001 1b41 80000000 		.4byte	.LFE86-.LFB86
 26002 1b45 01       		.uleb128 0x1
 26003 1b46 9C       		.byte	0x9c
 26004 1b47 591B0000 		.4byte	0x1b59
 26005 1b4b 26       		.uleb128 0x26
 26006 1b4c 6900     		.ascii	"i\000"
 26007 1b4e 01       		.byte	0x1
 26008 1b4f BA0A     		.2byte	0xaba
 26009 1b51 A3000000 		.4byte	0xa3
 26010 1b55 02       		.uleb128 0x2
 26011 1b56 91       		.byte	0x91
 26012 1b57 76       		.sleb128 -10
 26013 1b58 00       		.byte	0
 26014 1b59 2B       		.uleb128 0x2b
 26015 1b5a BD0D0000 		.4byte	.LASF309
 26016 1b5e 01       		.byte	0x1
 26017 1b5f D10A     		.2byte	0xad1
 26018 1b61 97000000 		.4byte	0x97
 26019 1b65 00000000 		.4byte	.LFB87
 26020 1b69 5C000000 		.4byte	.LFE87-.LFB87
 26021 1b6d 01       		.uleb128 0x1
 26022 1b6e 9C       		.byte	0x9c
 26023 1b6f 811B0000 		.4byte	0x1b81
 26024 1b73 26       		.uleb128 0x26
 26025 1b74 6900     		.ascii	"i\000"
 26026 1b76 01       		.byte	0x1
 26027 1b77 D20A     		.2byte	0xad2
 26028 1b79 A3000000 		.4byte	0xa3
 26029 1b7d 02       		.uleb128 0x2
 26030 1b7e 91       		.byte	0x91
 26031 1b7f 76       		.sleb128 -10
 26032 1b80 00       		.byte	0
 26033 1b81 2B       		.uleb128 0x2b
 26034 1b82 35060000 		.4byte	.LASF310
 26035 1b86 01       		.byte	0x1
 26036 1b87 E40A     		.2byte	0xae4
 26037 1b89 97000000 		.4byte	0x97
 26038 1b8d 00000000 		.4byte	.LFB88
 26039 1b91 28060000 		.4byte	.LFE88-.LFB88
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 566


 26040 1b95 01       		.uleb128 0x1
 26041 1b96 9C       		.byte	0x9c
 26042 1b97 B61B0000 		.4byte	0x1bb6
 26043 1b9b 26       		.uleb128 0x26
 26044 1b9c 6900     		.ascii	"i\000"
 26045 1b9e 01       		.byte	0x1
 26046 1b9f E60A     		.2byte	0xae6
 26047 1ba1 97000000 		.4byte	0x97
 26048 1ba5 02       		.uleb128 0x2
 26049 1ba6 91       		.byte	0x91
 26050 1ba7 77       		.sleb128 -9
 26051 1ba8 26       		.uleb128 0x26
 26052 1ba9 6A00     		.ascii	"j\000"
 26053 1bab 01       		.byte	0x1
 26054 1bac E60A     		.2byte	0xae6
 26055 1bae 97000000 		.4byte	0x97
 26056 1bb2 02       		.uleb128 0x2
 26057 1bb3 91       		.byte	0x91
 26058 1bb4 76       		.sleb128 -10
 26059 1bb5 00       		.byte	0
 26060 1bb6 28       		.uleb128 0x28
 26061 1bb7 A1080000 		.4byte	.LASF311
 26062 1bbb 01       		.byte	0x1
 26063 1bbc 870B     		.2byte	0xb87
 26064 1bbe 00000000 		.4byte	.LFB89
 26065 1bc2 40020000 		.4byte	.LFE89-.LFB89
 26066 1bc6 01       		.uleb128 0x1
 26067 1bc7 9C       		.byte	0x9c
 26068 1bc8 F31B0000 		.4byte	0x1bf3
 26069 1bcc 23       		.uleb128 0x23
 26070 1bcd B30D0000 		.4byte	.LASF243
 26071 1bd1 01       		.byte	0x1
 26072 1bd2 890B     		.2byte	0xb89
 26073 1bd4 97000000 		.4byte	0x97
 26074 1bd8 02       		.uleb128 0x2
 26075 1bd9 91       		.byte	0x91
 26076 1bda 73       		.sleb128 -13
 26077 1bdb 1E       		.uleb128 0x1e
 26078 1bdc FA000000 		.4byte	.LBB29
 26079 1be0 6A000000 		.4byte	.LBE29-.LBB29
 26080 1be4 26       		.uleb128 0x26
 26081 1be5 6900     		.ascii	"i\000"
 26082 1be7 01       		.byte	0x1
 26083 1be8 9A0B     		.2byte	0xb9a
 26084 1bea 73000000 		.4byte	0x73
 26085 1bee 02       		.uleb128 0x2
 26086 1bef 91       		.byte	0x91
 26087 1bf0 74       		.sleb128 -12
 26088 1bf1 00       		.byte	0
 26089 1bf2 00       		.byte	0
 26090 1bf3 2C       		.uleb128 0x2c
 26091 1bf4 530B0000 		.4byte	.LASF312
 26092 1bf8 01       		.byte	0x1
 26093 1bf9 BA0B     		.2byte	0xbba
 26094 1bfb 00000000 		.4byte	.LFB90
 26095 1bff 28000000 		.4byte	.LFE90-.LFB90
 26096 1c03 01       		.uleb128 0x1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 567


 26097 1c04 9C       		.byte	0x9c
 26098 1c05 2C       		.uleb128 0x2c
 26099 1c06 FE100000 		.4byte	.LASF313
 26100 1c0a 01       		.byte	0x1
 26101 1c0b C60B     		.2byte	0xbc6
 26102 1c0d 00000000 		.4byte	.LFB91
 26103 1c11 78000000 		.4byte	.LFE91-.LFB91
 26104 1c15 01       		.uleb128 0x1
 26105 1c16 9C       		.byte	0x9c
 26106 1c17 2C       		.uleb128 0x2c
 26107 1c18 11040000 		.4byte	.LASF314
 26108 1c1c 01       		.byte	0x1
 26109 1c1d DC0B     		.2byte	0xbdc
 26110 1c1f 00000000 		.4byte	.LFB92
 26111 1c23 B0000000 		.4byte	.LFE92-.LFB92
 26112 1c27 01       		.uleb128 0x1
 26113 1c28 9C       		.byte	0x9c
 26114 1c29 27       		.uleb128 0x27
 26115 1c2a 63060000 		.4byte	.LASF316
 26116 1c2e 01       		.byte	0x1
 26117 1c2f FD0B     		.2byte	0xbfd
 26118 1c31 00000000 		.4byte	.LFB93
 26119 1c35 28010000 		.4byte	.LFE93-.LFB93
 26120 1c39 01       		.uleb128 0x1
 26121 1c3a 9C       		.byte	0x9c
 26122 1c3b 6D1C0000 		.4byte	0x1c6d
 26123 1c3f 23       		.uleb128 0x23
 26124 1c40 D6060000 		.4byte	.LASF248
 26125 1c44 01       		.byte	0x1
 26126 1c45 FF0B     		.2byte	0xbff
 26127 1c47 97000000 		.4byte	0x97
 26128 1c4b 02       		.uleb128 0x2
 26129 1c4c 91       		.byte	0x91
 26130 1c4d 6F       		.sleb128 -17
 26131 1c4e 23       		.uleb128 0x23
 26132 1c4f B8110000 		.4byte	.LASF239
 26133 1c53 01       		.byte	0x1
 26134 1c54 000C     		.2byte	0xc00
 26135 1c56 C7000000 		.4byte	0xc7
 26136 1c5a 02       		.uleb128 0x2
 26137 1c5b 91       		.byte	0x91
 26138 1c5c 6C       		.sleb128 -20
 26139 1c5d 23       		.uleb128 0x23
 26140 1c5e 00060000 		.4byte	.LASF233
 26141 1c62 01       		.byte	0x1
 26142 1c63 030C     		.2byte	0xc03
 26143 1c65 5D080000 		.4byte	0x85d
 26144 1c69 02       		.uleb128 0x2
 26145 1c6a 91       		.byte	0x91
 26146 1c6b 64       		.sleb128 -28
 26147 1c6c 00       		.byte	0
 26148 1c6d 27       		.uleb128 0x27
 26149 1c6e 5A0E0000 		.4byte	.LASF317
 26150 1c72 01       		.byte	0x1
 26151 1c73 1E0C     		.2byte	0xc1e
 26152 1c75 00000000 		.4byte	.LFB94
 26153 1c79 B8000000 		.4byte	.LFE94-.LFB94
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 568


 26154 1c7d 01       		.uleb128 0x1
 26155 1c7e 9C       		.byte	0x9c
 26156 1c7f B11C0000 		.4byte	0x1cb1
 26157 1c83 23       		.uleb128 0x23
 26158 1c84 D6060000 		.4byte	.LASF248
 26159 1c88 01       		.byte	0x1
 26160 1c89 200C     		.2byte	0xc20
 26161 1c8b 97000000 		.4byte	0x97
 26162 1c8f 02       		.uleb128 0x2
 26163 1c90 91       		.byte	0x91
 26164 1c91 6F       		.sleb128 -17
 26165 1c92 23       		.uleb128 0x23
 26166 1c93 B8110000 		.4byte	.LASF239
 26167 1c97 01       		.byte	0x1
 26168 1c98 210C     		.2byte	0xc21
 26169 1c9a C7000000 		.4byte	0xc7
 26170 1c9e 02       		.uleb128 0x2
 26171 1c9f 91       		.byte	0x91
 26172 1ca0 6C       		.sleb128 -20
 26173 1ca1 23       		.uleb128 0x23
 26174 1ca2 00060000 		.4byte	.LASF233
 26175 1ca6 01       		.byte	0x1
 26176 1ca7 250C     		.2byte	0xc25
 26177 1ca9 5D080000 		.4byte	0x85d
 26178 1cad 02       		.uleb128 0x2
 26179 1cae 91       		.byte	0x91
 26180 1caf 64       		.sleb128 -28
 26181 1cb0 00       		.byte	0
 26182 1cb1 27       		.uleb128 0x27
 26183 1cb2 EA010000 		.4byte	.LASF318
 26184 1cb6 01       		.byte	0x1
 26185 1cb7 370C     		.2byte	0xc37
 26186 1cb9 00000000 		.4byte	.LFB95
 26187 1cbd B8000000 		.4byte	.LFE95-.LFB95
 26188 1cc1 01       		.uleb128 0x1
 26189 1cc2 9C       		.byte	0x9c
 26190 1cc3 F51C0000 		.4byte	0x1cf5
 26191 1cc7 23       		.uleb128 0x23
 26192 1cc8 D6060000 		.4byte	.LASF248
 26193 1ccc 01       		.byte	0x1
 26194 1ccd 390C     		.2byte	0xc39
 26195 1ccf 97000000 		.4byte	0x97
 26196 1cd3 02       		.uleb128 0x2
 26197 1cd4 91       		.byte	0x91
 26198 1cd5 6F       		.sleb128 -17
 26199 1cd6 23       		.uleb128 0x23
 26200 1cd7 B8110000 		.4byte	.LASF239
 26201 1cdb 01       		.byte	0x1
 26202 1cdc 3A0C     		.2byte	0xc3a
 26203 1cde C7000000 		.4byte	0xc7
 26204 1ce2 02       		.uleb128 0x2
 26205 1ce3 91       		.byte	0x91
 26206 1ce4 6C       		.sleb128 -20
 26207 1ce5 23       		.uleb128 0x23
 26208 1ce6 00060000 		.4byte	.LASF233
 26209 1cea 01       		.byte	0x1
 26210 1ceb 3E0C     		.2byte	0xc3e
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 569


 26211 1ced 5D080000 		.4byte	0x85d
 26212 1cf1 02       		.uleb128 0x2
 26213 1cf2 91       		.byte	0x91
 26214 1cf3 64       		.sleb128 -28
 26215 1cf4 00       		.byte	0
 26216 1cf5 27       		.uleb128 0x27
 26217 1cf6 A2090000 		.4byte	.LASF319
 26218 1cfa 01       		.byte	0x1
 26219 1cfb 500C     		.2byte	0xc50
 26220 1cfd 00000000 		.4byte	.LFB96
 26221 1d01 5C000000 		.4byte	.LFE96-.LFB96
 26222 1d05 01       		.uleb128 0x1
 26223 1d06 9C       		.byte	0x9c
 26224 1d07 2A1D0000 		.4byte	0x1d2a
 26225 1d0b 23       		.uleb128 0x23
 26226 1d0c B8110000 		.4byte	.LASF239
 26227 1d10 01       		.byte	0x1
 26228 1d11 520C     		.2byte	0xc52
 26229 1d13 C7000000 		.4byte	0xc7
 26230 1d17 02       		.uleb128 0x2
 26231 1d18 91       		.byte	0x91
 26232 1d19 76       		.sleb128 -10
 26233 1d1a 23       		.uleb128 0x23
 26234 1d1b 00060000 		.4byte	.LASF233
 26235 1d1f 01       		.byte	0x1
 26236 1d20 560C     		.2byte	0xc56
 26237 1d22 90090000 		.4byte	0x990
 26238 1d26 02       		.uleb128 0x2
 26239 1d27 91       		.byte	0x91
 26240 1d28 70       		.sleb128 -16
 26241 1d29 00       		.byte	0
 26242 1d2a 27       		.uleb128 0x27
 26243 1d2b B80B0000 		.4byte	.LASF320
 26244 1d2f 01       		.byte	0x1
 26245 1d30 680C     		.2byte	0xc68
 26246 1d32 00000000 		.4byte	.LFB97
 26247 1d36 40000000 		.4byte	.LFE97-.LFB97
 26248 1d3a 01       		.uleb128 0x1
 26249 1d3b 9C       		.byte	0x9c
 26250 1d3c 621D0000 		.4byte	0x1d62
 26251 1d40 23       		.uleb128 0x23
 26252 1d41 B8110000 		.4byte	.LASF239
 26253 1d45 01       		.byte	0x1
 26254 1d46 6B0C     		.2byte	0xc6b
 26255 1d48 621D0000 		.4byte	0x1d62
 26256 1d4c 02       		.uleb128 0x2
 26257 1d4d 91       		.byte	0x91
 26258 1d4e 74       		.sleb128 -12
 26259 1d4f 23       		.uleb128 0x23
 26260 1d50 98060000 		.4byte	.LASF321
 26261 1d54 01       		.byte	0x1
 26262 1d55 6C0C     		.2byte	0xc6c
 26263 1d57 621D0000 		.4byte	0x1d62
 26264 1d5b 05       		.uleb128 0x5
 26265 1d5c 03       		.byte	0x3
 26266 1d5d 08000000 		.4byte	last_aux_int16.10703
 26267 1d61 00       		.byte	0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 570


 26268 1d62 09       		.uleb128 0x9
 26269 1d63 C7000000 		.4byte	0xc7
 26270 1d67 721D0000 		.4byte	0x1d72
 26271 1d6b 0A       		.uleb128 0xa
 26272 1d6c 18010000 		.4byte	0x118
 26273 1d70 00       		.byte	0
 26274 1d71 00       		.byte	0
 26275 1d72 27       		.uleb128 0x27
 26276 1d73 3C140000 		.4byte	.LASF322
 26277 1d77 01       		.byte	0x1
 26278 1d78 800C     		.2byte	0xc80
 26279 1d7a 00000000 		.4byte	.LFB98
 26280 1d7e 34000000 		.4byte	.LFE98-.LFB98
 26281 1d82 01       		.uleb128 0x1
 26282 1d83 9C       		.byte	0x9c
 26283 1d84 981D0000 		.4byte	0x1d98
 26284 1d88 26       		.uleb128 0x26
 26285 1d89 61757800 		.ascii	"aux\000"
 26286 1d8d 01       		.byte	0x1
 26287 1d8e 830C     		.2byte	0xc83
 26288 1d90 97000000 		.4byte	0x97
 26289 1d94 02       		.uleb128 0x2
 26290 1d95 91       		.byte	0x91
 26291 1d96 77       		.sleb128 -9
 26292 1d97 00       		.byte	0
 26293 1d98 27       		.uleb128 0x27
 26294 1d99 160C0000 		.4byte	.LASF323
 26295 1d9d 01       		.byte	0x1
 26296 1d9e 8D0C     		.2byte	0xc8d
 26297 1da0 00000000 		.4byte	.LFB99
 26298 1da4 34000000 		.4byte	.LFE99-.LFB99
 26299 1da8 01       		.uleb128 0x1
 26300 1da9 9C       		.byte	0x9c
 26301 1daa BE1D0000 		.4byte	0x1dbe
 26302 1dae 23       		.uleb128 0x23
 26303 1daf 00060000 		.4byte	.LASF233
 26304 1db3 01       		.byte	0x1
 26305 1db4 8F0C     		.2byte	0xc8f
 26306 1db6 10060000 		.4byte	0x610
 26307 1dba 02       		.uleb128 0x2
 26308 1dbb 91       		.byte	0x91
 26309 1dbc 74       		.sleb128 -12
 26310 1dbd 00       		.byte	0
 26311 1dbe 27       		.uleb128 0x27
 26312 1dbf BF0F0000 		.4byte	.LASF324
 26313 1dc3 01       		.byte	0x1
 26314 1dc4 A10C     		.2byte	0xca1
 26315 1dc6 00000000 		.4byte	.LFB100
 26316 1dca 38010000 		.4byte	.LFE100-.LFB100
 26317 1dce 01       		.uleb128 0x1
 26318 1dcf 9C       		.byte	0x9c
 26319 1dd0 021E0000 		.4byte	0x1e02
 26320 1dd4 23       		.uleb128 0x23
 26321 1dd5 D6060000 		.4byte	.LASF248
 26322 1dd9 01       		.byte	0x1
 26323 1dda A30C     		.2byte	0xca3
 26324 1ddc 97000000 		.4byte	0x97
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 571


 26325 1de0 02       		.uleb128 0x2
 26326 1de1 91       		.byte	0x91
 26327 1de2 6F       		.sleb128 -17
 26328 1de3 23       		.uleb128 0x23
 26329 1de4 B8110000 		.4byte	.LASF239
 26330 1de8 01       		.byte	0x1
 26331 1de9 A40C     		.2byte	0xca4
 26332 1deb C7000000 		.4byte	0xc7
 26333 1def 02       		.uleb128 0x2
 26334 1df0 91       		.byte	0x91
 26335 1df1 6C       		.sleb128 -20
 26336 1df2 23       		.uleb128 0x23
 26337 1df3 00060000 		.4byte	.LASF233
 26338 1df7 01       		.byte	0x1
 26339 1df8 A80C     		.2byte	0xca8
 26340 1dfa 71050000 		.4byte	0x571
 26341 1dfe 02       		.uleb128 0x2
 26342 1dff 91       		.byte	0x91
 26343 1e00 60       		.sleb128 -32
 26344 1e01 00       		.byte	0
 26345 1e02 27       		.uleb128 0x27
 26346 1e03 0C0A0000 		.4byte	.LASF325
 26347 1e07 01       		.byte	0x1
 26348 1e08 C80C     		.2byte	0xcc8
 26349 1e0a 00000000 		.4byte	.LFB101
 26350 1e0e EC000000 		.4byte	.LFE101-.LFB101
 26351 1e12 01       		.uleb128 0x1
 26352 1e13 9C       		.byte	0x9c
 26353 1e14 371E0000 		.4byte	0x1e37
 26354 1e18 23       		.uleb128 0x23
 26355 1e19 00060000 		.4byte	.LASF233
 26356 1e1d 01       		.byte	0x1
 26357 1e1e CC0C     		.2byte	0xccc
 26358 1e20 90090000 		.4byte	0x990
 26359 1e24 02       		.uleb128 0x2
 26360 1e25 91       		.byte	0x91
 26361 1e26 68       		.sleb128 -24
 26362 1e27 23       		.uleb128 0x23
 26363 1e28 B8110000 		.4byte	.LASF239
 26364 1e2c 01       		.byte	0x1
 26365 1e2d CD0C     		.2byte	0xccd
 26366 1e2f C7000000 		.4byte	0xc7
 26367 1e33 02       		.uleb128 0x2
 26368 1e34 91       		.byte	0x91
 26369 1e35 66       		.sleb128 -26
 26370 1e36 00       		.byte	0
 26371 1e37 27       		.uleb128 0x27
 26372 1e38 4A070000 		.4byte	.LASF326
 26373 1e3c 01       		.byte	0x1
 26374 1e3d EE0C     		.2byte	0xcee
 26375 1e3f 00000000 		.4byte	.LFB102
 26376 1e43 64000000 		.4byte	.LFE102-.LFB102
 26377 1e47 01       		.uleb128 0x1
 26378 1e48 9C       		.byte	0x9c
 26379 1e49 6C1E0000 		.4byte	0x1e6c
 26380 1e4d 23       		.uleb128 0x23
 26381 1e4e 00060000 		.4byte	.LASF233
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 572


 26382 1e52 01       		.byte	0x1
 26383 1e53 F20C     		.2byte	0xcf2
 26384 1e55 FD0A0000 		.4byte	0xafd
 26385 1e59 02       		.uleb128 0x2
 26386 1e5a 91       		.byte	0x91
 26387 1e5b 74       		.sleb128 -12
 26388 1e5c 23       		.uleb128 0x23
 26389 1e5d B8110000 		.4byte	.LASF239
 26390 1e61 01       		.byte	0x1
 26391 1e62 F30C     		.2byte	0xcf3
 26392 1e64 C7000000 		.4byte	0xc7
 26393 1e68 02       		.uleb128 0x2
 26394 1e69 91       		.byte	0x91
 26395 1e6a 72       		.sleb128 -14
 26396 1e6b 00       		.byte	0
 26397 1e6c 2D       		.uleb128 0x2d
 26398 1e6d 34070000 		.4byte	.LASF327
 26399 1e71 01       		.byte	0x1
 26400 1e72 080D     		.2byte	0xd08
 26401 1e74 C7000000 		.4byte	0xc7
 26402 1e78 00000000 		.4byte	.LFB103
 26403 1e7c A8000000 		.4byte	.LFE103-.LFB103
 26404 1e80 01       		.uleb128 0x1
 26405 1e81 9C       		.byte	0x9c
 26406 1e82 E11E0000 		.4byte	0x1ee1
 26407 1e86 23       		.uleb128 0x23
 26408 1e87 00060000 		.4byte	.LASF233
 26409 1e8b 01       		.byte	0x1
 26410 1e8c 0A0D     		.2byte	0xd0a
 26411 1e8e E11E0000 		.4byte	0x1ee1
 26412 1e92 02       		.uleb128 0x2
 26413 1e93 91       		.byte	0x91
 26414 1e94 5C       		.sleb128 -36
 26415 1e95 23       		.uleb128 0x23
 26416 1e96 620B0000 		.4byte	.LASF234
 26417 1e9a 01       		.byte	0x1
 26418 1e9b 0B0D     		.2byte	0xd0b
 26419 1e9d 97000000 		.4byte	0x97
 26420 1ea1 02       		.uleb128 0x2
 26421 1ea2 91       		.byte	0x91
 26422 1ea3 74       		.sleb128 -12
 26423 1ea4 23       		.uleb128 0x23
 26424 1ea5 4C0F0000 		.4byte	.LASF328
 26425 1ea9 01       		.byte	0x1
 26426 1eaa 0C0D     		.2byte	0xd0c
 26427 1eac C7000000 		.4byte	0xc7
 26428 1eb0 02       		.uleb128 0x2
 26429 1eb1 91       		.byte	0x91
 26430 1eb2 76       		.sleb128 -10
 26431 1eb3 23       		.uleb128 0x23
 26432 1eb4 B8020000 		.4byte	.LASF329
 26433 1eb8 01       		.byte	0x1
 26434 1eb9 0D0D     		.2byte	0xd0d
 26435 1ebb AF000000 		.4byte	0xaf
 26436 1ebf 02       		.uleb128 0x2
 26437 1ec0 91       		.byte	0x91
 26438 1ec1 70       		.sleb128 -16
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 573


 26439 1ec2 23       		.uleb128 0x23
 26440 1ec3 29130000 		.4byte	.LASF330
 26441 1ec7 01       		.byte	0x1
 26442 1ec8 0D0D     		.2byte	0xd0d
 26443 1eca AF000000 		.4byte	0xaf
 26444 1ece 02       		.uleb128 0x2
 26445 1ecf 91       		.byte	0x91
 26446 1ed0 6C       		.sleb128 -20
 26447 1ed1 23       		.uleb128 0x23
 26448 1ed2 72040000 		.4byte	.LASF331
 26449 1ed6 01       		.byte	0x1
 26450 1ed7 0E0D     		.2byte	0xd0e
 26451 1ed9 97000000 		.4byte	0x97
 26452 1edd 02       		.uleb128 0x2
 26453 1ede 91       		.byte	0x91
 26454 1edf 75       		.sleb128 -11
 26455 1ee0 00       		.byte	0
 26456 1ee1 09       		.uleb128 0x9
 26457 1ee2 97000000 		.4byte	0x97
 26458 1ee6 F11E0000 		.4byte	0x1ef1
 26459 1eea 0A       		.uleb128 0xa
 26460 1eeb 18010000 		.4byte	0x118
 26461 1eef 0F       		.byte	0xf
 26462 1ef0 00       		.byte	0
 26463 1ef1 2E       		.uleb128 0x2e
 26464 1ef2 E4000000 		.4byte	.LASF395
 26465 1ef6 01       		.byte	0x1
 26466 1ef7 2B0D     		.2byte	0xd2b
 26467 1ef9 00000000 		.4byte	.LFB104
 26468 1efd 34000000 		.4byte	.LFE104-.LFB104
 26469 1f01 01       		.uleb128 0x1
 26470 1f02 9C       		.byte	0x9c
 26471 1f03 27       		.uleb128 0x27
 26472 1f04 E2030000 		.4byte	.LASF332
 26473 1f08 01       		.byte	0x1
 26474 1f09 390D     		.2byte	0xd39
 26475 1f0b 00000000 		.4byte	.LFB105
 26476 1f0f 20000000 		.4byte	.LFE105-.LFB105
 26477 1f13 01       		.uleb128 0x1
 26478 1f14 9C       		.byte	0x9c
 26479 1f15 291F0000 		.4byte	0x1f29
 26480 1f19 23       		.uleb128 0x23
 26481 1f1a 00060000 		.4byte	.LASF233
 26482 1f1e 01       		.byte	0x1
 26483 1f1f 3B0D     		.2byte	0xd3b
 26484 1f21 CC080000 		.4byte	0x8cc
 26485 1f25 02       		.uleb128 0x2
 26486 1f26 91       		.byte	0x91
 26487 1f27 74       		.sleb128 -12
 26488 1f28 00       		.byte	0
 26489 1f29 27       		.uleb128 0x27
 26490 1f2a 47010000 		.4byte	.LASF333
 26491 1f2e 01       		.byte	0x1
 26492 1f2f 470D     		.2byte	0xd47
 26493 1f31 00000000 		.4byte	.LFB106
 26494 1f35 A0000000 		.4byte	.LFE106-.LFB106
 26495 1f39 01       		.uleb128 0x1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 574


 26496 1f3a 9C       		.byte	0x9c
 26497 1f3b 5E1F0000 		.4byte	0x1f5e
 26498 1f3f 23       		.uleb128 0x23
 26499 1f40 00060000 		.4byte	.LASF233
 26500 1f44 01       		.byte	0x1
 26501 1f45 4B0D     		.2byte	0xd4b
 26502 1f47 90090000 		.4byte	0x990
 26503 1f4b 02       		.uleb128 0x2
 26504 1f4c 91       		.byte	0x91
 26505 1f4d 70       		.sleb128 -16
 26506 1f4e 23       		.uleb128 0x23
 26507 1f4f B8110000 		.4byte	.LASF239
 26508 1f53 01       		.byte	0x1
 26509 1f54 4C0D     		.2byte	0xd4c
 26510 1f56 C7000000 		.4byte	0xc7
 26511 1f5a 02       		.uleb128 0x2
 26512 1f5b 91       		.byte	0x91
 26513 1f5c 6E       		.sleb128 -18
 26514 1f5d 00       		.byte	0
 26515 1f5e 27       		.uleb128 0x27
 26516 1f5f 88100000 		.4byte	.LASF334
 26517 1f63 01       		.byte	0x1
 26518 1f64 600D     		.2byte	0xd60
 26519 1f66 00000000 		.4byte	.LFB107
 26520 1f6a BC010000 		.4byte	.LFE107-.LFB107
 26521 1f6e 01       		.uleb128 0x1
 26522 1f6f 9C       		.byte	0x9c
 26523 1f70 C01F0000 		.4byte	0x1fc0
 26524 1f74 23       		.uleb128 0x23
 26525 1f75 D40B0000 		.4byte	.LASF335
 26526 1f79 01       		.byte	0x1
 26527 1f7a 630D     		.2byte	0xd63
 26528 1f7c AF000000 		.4byte	0xaf
 26529 1f80 02       		.uleb128 0x2
 26530 1f81 91       		.byte	0x91
 26531 1f82 70       		.sleb128 -16
 26532 1f83 23       		.uleb128 0x23
 26533 1f84 C70E0000 		.4byte	.LASF336
 26534 1f88 01       		.byte	0x1
 26535 1f89 640D     		.2byte	0xd64
 26536 1f8b EB000000 		.4byte	0xeb
 26537 1f8f 02       		.uleb128 0x2
 26538 1f90 91       		.byte	0x91
 26539 1f91 6C       		.sleb128 -20
 26540 1f92 23       		.uleb128 0x23
 26541 1f93 620B0000 		.4byte	.LASF234
 26542 1f97 01       		.byte	0x1
 26543 1f98 650D     		.2byte	0xd65
 26544 1f9a 97000000 		.4byte	0x97
 26545 1f9e 02       		.uleb128 0x2
 26546 1f9f 91       		.byte	0x91
 26547 1fa0 77       		.sleb128 -9
 26548 1fa1 23       		.uleb128 0x23
 26549 1fa2 00060000 		.4byte	.LASF233
 26550 1fa6 01       		.byte	0x1
 26551 1fa7 660D     		.2byte	0xd66
 26552 1fa9 CC080000 		.4byte	0x8cc
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 575


 26553 1fad 02       		.uleb128 0x2
 26554 1fae 91       		.byte	0x91
 26555 1faf 68       		.sleb128 -24
 26556 1fb0 23       		.uleb128 0x23
 26557 1fb1 860F0000 		.4byte	.LASF294
 26558 1fb5 01       		.byte	0x1
 26559 1fb6 670D     		.2byte	0xd67
 26560 1fb8 97000000 		.4byte	0x97
 26561 1fbc 02       		.uleb128 0x2
 26562 1fbd 91       		.byte	0x91
 26563 1fbe 6B       		.sleb128 -21
 26564 1fbf 00       		.byte	0
 26565 1fc0 27       		.uleb128 0x27
 26566 1fc1 00020000 		.4byte	.LASF337
 26567 1fc5 01       		.byte	0x1
 26568 1fc6 A10D     		.2byte	0xda1
 26569 1fc8 00000000 		.4byte	.LFB108
 26570 1fcc 60000000 		.4byte	.LFE108-.LFB108
 26571 1fd0 01       		.uleb128 0x1
 26572 1fd1 9C       		.byte	0x9c
 26573 1fd2 F51F0000 		.4byte	0x1ff5
 26574 1fd6 23       		.uleb128 0x23
 26575 1fd7 00060000 		.4byte	.LASF233
 26576 1fdb 01       		.byte	0x1
 26577 1fdc A30D     		.2byte	0xda3
 26578 1fde 90090000 		.4byte	0x990
 26579 1fe2 02       		.uleb128 0x2
 26580 1fe3 91       		.byte	0x91
 26581 1fe4 70       		.sleb128 -16
 26582 1fe5 23       		.uleb128 0x23
 26583 1fe6 B8110000 		.4byte	.LASF239
 26584 1fea 01       		.byte	0x1
 26585 1feb A40D     		.2byte	0xda4
 26586 1fed C7000000 		.4byte	0xc7
 26587 1ff1 02       		.uleb128 0x2
 26588 1ff2 91       		.byte	0x91
 26589 1ff3 6E       		.sleb128 -18
 26590 1ff4 00       		.byte	0
 26591 1ff5 27       		.uleb128 0x27
 26592 1ff6 83010000 		.4byte	.LASF338
 26593 1ffa 01       		.byte	0x1
 26594 1ffb B70D     		.2byte	0xdb7
 26595 1ffd 00000000 		.4byte	.LFB109
 26596 2001 98050000 		.4byte	.LFE109-.LFB109
 26597 2005 01       		.uleb128 0x1
 26598 2006 9C       		.byte	0x9c
 26599 2007 82200000 		.4byte	0x2082
 26600 200b 23       		.uleb128 0x23
 26601 200c 77130000 		.4byte	.LASF339
 26602 2010 01       		.byte	0x1
 26603 2011 BA0D     		.2byte	0xdba
 26604 2013 97000000 		.4byte	0x97
 26605 2017 02       		.uleb128 0x2
 26606 2018 91       		.byte	0x91
 26607 2019 6F       		.sleb128 -17
 26608 201a 26       		.uleb128 0x26
 26609 201b 6300     		.ascii	"c\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 576


 26610 201d 01       		.byte	0x1
 26611 201e BB0D     		.2byte	0xdbb
 26612 2020 A3000000 		.4byte	0xa3
 26613 2024 02       		.uleb128 0x2
 26614 2025 91       		.byte	0x91
 26615 2026 6C       		.sleb128 -20
 26616 2027 26       		.uleb128 0x26
 26617 2028 6B00     		.ascii	"k\000"
 26618 202a 01       		.byte	0x1
 26619 202b BC0D     		.2byte	0xdbc
 26620 202d 97000000 		.4byte	0x97
 26621 2031 02       		.uleb128 0x2
 26622 2032 91       		.byte	0x91
 26623 2033 6B       		.sleb128 -21
 26624 2034 23       		.uleb128 0x23
 26625 2035 5C000000 		.4byte	.LASF340
 26626 2039 01       		.byte	0x1
 26627 203a BD0D     		.2byte	0xdbd
 26628 203c A3000000 		.4byte	0xa3
 26629 2040 02       		.uleb128 0x2
 26630 2041 91       		.byte	0x91
 26631 2042 68       		.sleb128 -24
 26632 2043 23       		.uleb128 0x23
 26633 2044 B8110000 		.4byte	.LASF239
 26634 2048 01       		.byte	0x1
 26635 2049 BE0D     		.2byte	0xdbe
 26636 204b C7000000 		.4byte	0xc7
 26637 204f 02       		.uleb128 0x2
 26638 2050 91       		.byte	0x91
 26639 2051 66       		.sleb128 -26
 26640 2052 23       		.uleb128 0x23
 26641 2053 F4120000 		.4byte	.LASF238
 26642 2057 01       		.byte	0x1
 26643 2058 BF0D     		.2byte	0xdbf
 26644 205a EB000000 		.4byte	0xeb
 26645 205e 02       		.uleb128 0x2
 26646 205f 91       		.byte	0x91
 26647 2060 60       		.sleb128 -32
 26648 2061 23       		.uleb128 0x23
 26649 2062 00060000 		.4byte	.LASF233
 26650 2066 01       		.byte	0x1
 26651 2067 C20D     		.2byte	0xdc2
 26652 2069 82200000 		.4byte	0x2082
 26653 206d 03       		.uleb128 0x3
 26654 206e 91       		.byte	0x91
 26655 206f 807D     		.sleb128 -384
 26656 2071 23       		.uleb128 0x23
 26657 2072 D5080000 		.4byte	.LASF341
 26658 2076 01       		.byte	0x1
 26659 2077 C30D     		.2byte	0xdc3
 26660 2079 540C0000 		.4byte	0xc54
 26661 207d 03       		.uleb128 0x3
 26662 207e 91       		.byte	0x91
 26663 207f E07C     		.sleb128 -416
 26664 2081 00       		.byte	0
 26665 2082 09       		.uleb128 0x9
 26666 2083 97000000 		.4byte	0x97
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 577


 26667 2087 93200000 		.4byte	0x2093
 26668 208b 24       		.uleb128 0x24
 26669 208c 18010000 		.4byte	0x118
 26670 2090 5D01     		.2byte	0x15d
 26671 2092 00       		.byte	0
 26672 2093 27       		.uleb128 0x27
 26673 2094 CF120000 		.4byte	.LASF342
 26674 2098 01       		.byte	0x1
 26675 2099 260E     		.2byte	0xe26
 26676 209b 00000000 		.4byte	.LFB110
 26677 209f 8C000000 		.4byte	.LFE110-.LFB110
 26678 20a3 01       		.uleb128 0x1
 26679 20a4 9C       		.byte	0x9c
 26680 20a5 D3200000 		.4byte	0x20d3
 26681 20a9 23       		.uleb128 0x23
 26682 20aa 00060000 		.4byte	.LASF233
 26683 20ae 01       		.byte	0x1
 26684 20af 290E     		.2byte	0xe29
 26685 20b1 AB0A0000 		.4byte	0xaab
 26686 20b5 02       		.uleb128 0x2
 26687 20b6 91       		.byte	0x91
 26688 20b7 60       		.sleb128 -32
 26689 20b8 26       		.uleb128 0x26
 26690 20b9 6900     		.ascii	"i\000"
 26691 20bb 01       		.byte	0x1
 26692 20bc 2A0E     		.2byte	0xe2a
 26693 20be 97000000 		.4byte	0x97
 26694 20c2 02       		.uleb128 0x2
 26695 20c3 91       		.byte	0x91
 26696 20c4 6F       		.sleb128 -17
 26697 20c5 26       		.uleb128 0x26
 26698 20c6 6A00     		.ascii	"j\000"
 26699 20c8 01       		.byte	0x1
 26700 20c9 2A0E     		.2byte	0xe2a
 26701 20cb 97000000 		.4byte	0x97
 26702 20cf 02       		.uleb128 0x2
 26703 20d0 91       		.byte	0x91
 26704 20d1 6E       		.sleb128 -18
 26705 20d2 00       		.byte	0
 26706 20d3 27       		.uleb128 0x27
 26707 20d4 C2100000 		.4byte	.LASF343
 26708 20d8 01       		.byte	0x1
 26709 20d9 3F0E     		.2byte	0xe3f
 26710 20db 00000000 		.4byte	.LFB111
 26711 20df EC000000 		.4byte	.LFE111-.LFB111
 26712 20e3 01       		.uleb128 0x1
 26713 20e4 9C       		.byte	0x9c
 26714 20e5 31210000 		.4byte	0x2131
 26715 20e9 23       		.uleb128 0x23
 26716 20ea 00060000 		.4byte	.LASF233
 26717 20ee 01       		.byte	0x1
 26718 20ef 420E     		.2byte	0xe42
 26719 20f1 31210000 		.4byte	0x2131
 26720 20f5 02       		.uleb128 0x2
 26721 20f6 91       		.byte	0x91
 26722 20f7 54       		.sleb128 -44
 26723 20f8 26       		.uleb128 0x26
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 578


 26724 20f9 6900     		.ascii	"i\000"
 26725 20fb 01       		.byte	0x1
 26726 20fc 430E     		.2byte	0xe43
 26727 20fe 97000000 		.4byte	0x97
 26728 2102 02       		.uleb128 0x2
 26729 2103 91       		.byte	0x91
 26730 2104 6F       		.sleb128 -17
 26731 2105 26       		.uleb128 0x26
 26732 2106 6A00     		.ascii	"j\000"
 26733 2108 01       		.byte	0x1
 26734 2109 430E     		.2byte	0xe43
 26735 210b 97000000 		.4byte	0x97
 26736 210f 02       		.uleb128 0x2
 26737 2110 91       		.byte	0x91
 26738 2111 6E       		.sleb128 -18
 26739 2112 26       		.uleb128 0x26
 26740 2113 69647800 		.ascii	"idx\000"
 26741 2117 01       		.byte	0x1
 26742 2118 430E     		.2byte	0xe43
 26743 211a 97000000 		.4byte	0x97
 26744 211e 02       		.uleb128 0x2
 26745 211f 91       		.byte	0x91
 26746 2120 6D       		.sleb128 -19
 26747 2121 23       		.uleb128 0x23
 26748 2122 950C0000 		.4byte	.LASF240
 26749 2126 01       		.byte	0x1
 26750 2127 440E     		.2byte	0xe44
 26751 2129 A3000000 		.4byte	0xa3
 26752 212d 02       		.uleb128 0x2
 26753 212e 91       		.byte	0x91
 26754 212f 52       		.sleb128 -46
 26755 2130 00       		.byte	0
 26756 2131 09       		.uleb128 0x9
 26757 2132 97000000 		.4byte	0x97
 26758 2136 41210000 		.4byte	0x2141
 26759 213a 0A       		.uleb128 0xa
 26760 213b 18010000 		.4byte	0x118
 26761 213f 15       		.byte	0x15
 26762 2140 00       		.byte	0
 26763 2141 27       		.uleb128 0x27
 26764 2142 92030000 		.4byte	.LASF344
 26765 2146 01       		.byte	0x1
 26766 2147 5D0E     		.2byte	0xe5d
 26767 2149 00000000 		.4byte	.LFB112
 26768 214d 5C000000 		.4byte	.LFE112-.LFB112
 26769 2151 01       		.uleb128 0x1
 26770 2152 9C       		.byte	0x9c
 26771 2153 74210000 		.4byte	0x2174
 26772 2157 23       		.uleb128 0x23
 26773 2158 00060000 		.4byte	.LASF233
 26774 215c 01       		.byte	0x1
 26775 215d 600E     		.2byte	0xe60
 26776 215f 440C0000 		.4byte	0xc44
 26777 2163 02       		.uleb128 0x2
 26778 2164 91       		.byte	0x91
 26779 2165 68       		.sleb128 -24
 26780 2166 26       		.uleb128 0x26
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 579


 26781 2167 6900     		.ascii	"i\000"
 26782 2169 01       		.byte	0x1
 26783 216a 610E     		.2byte	0xe61
 26784 216c 97000000 		.4byte	0x97
 26785 2170 02       		.uleb128 0x2
 26786 2171 91       		.byte	0x91
 26787 2172 77       		.sleb128 -9
 26788 2173 00       		.byte	0
 26789 2174 27       		.uleb128 0x27
 26790 2175 CA030000 		.4byte	.LASF345
 26791 2179 01       		.byte	0x1
 26792 217a 740E     		.2byte	0xe74
 26793 217c 00000000 		.4byte	.LFB113
 26794 2180 C0000000 		.4byte	.LFE113-.LFB113
 26795 2184 01       		.uleb128 0x1
 26796 2185 9C       		.byte	0x9c
 26797 2186 C5210000 		.4byte	0x21c5
 26798 218a 23       		.uleb128 0x23
 26799 218b 00060000 		.4byte	.LASF233
 26800 218f 01       		.byte	0x1
 26801 2190 770E     		.2byte	0xe77
 26802 2192 C5210000 		.4byte	0x21c5
 26803 2196 02       		.uleb128 0x2
 26804 2197 91       		.byte	0x91
 26805 2198 54       		.sleb128 -44
 26806 2199 26       		.uleb128 0x26
 26807 219a 6900     		.ascii	"i\000"
 26808 219c 01       		.byte	0x1
 26809 219d 780E     		.2byte	0xe78
 26810 219f 97000000 		.4byte	0x97
 26811 21a3 02       		.uleb128 0x2
 26812 21a4 91       		.byte	0x91
 26813 21a5 6F       		.sleb128 -17
 26814 21a6 26       		.uleb128 0x26
 26815 21a7 69647800 		.ascii	"idx\000"
 26816 21ab 01       		.byte	0x1
 26817 21ac 780E     		.2byte	0xe78
 26818 21ae 97000000 		.4byte	0x97
 26819 21b2 02       		.uleb128 0x2
 26820 21b3 91       		.byte	0x91
 26821 21b4 6E       		.sleb128 -18
 26822 21b5 23       		.uleb128 0x23
 26823 21b6 B8110000 		.4byte	.LASF239
 26824 21ba 01       		.byte	0x1
 26825 21bb 790E     		.2byte	0xe79
 26826 21bd C7000000 		.4byte	0xc7
 26827 21c1 02       		.uleb128 0x2
 26828 21c2 91       		.byte	0x91
 26829 21c3 52       		.sleb128 -46
 26830 21c4 00       		.byte	0
 26831 21c5 09       		.uleb128 0x9
 26832 21c6 97000000 		.4byte	0x97
 26833 21ca D5210000 		.4byte	0x21d5
 26834 21ce 0A       		.uleb128 0xa
 26835 21cf 18010000 		.4byte	0x118
 26836 21d3 19       		.byte	0x19
 26837 21d4 00       		.byte	0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 580


 26838 21d5 22       		.uleb128 0x22
 26839 21d6 3C030000 		.4byte	.LASF346
 26840 21da 01       		.byte	0x1
 26841 21db 8F0E     		.2byte	0xe8f
 26842 21dd 00000000 		.4byte	.LFB114
 26843 21e1 54010000 		.4byte	.LFE114-.LFB114
 26844 21e5 01       		.uleb128 0x1
 26845 21e6 9C       		.byte	0x9c
 26846 21e7 2A220000 		.4byte	0x222a
 26847 21eb 25       		.uleb128 0x25
 26848 21ec 1B070000 		.4byte	.LASF347
 26849 21f0 01       		.byte	0x1
 26850 21f1 8F0E     		.2byte	0xe8f
 26851 21f3 A3000000 		.4byte	0xa3
 26852 21f7 04       		.uleb128 0x4
 26853 21f8 91       		.byte	0x91
 26854 21f9 9EE37E   		.sleb128 -20066
 26855 21fc 26       		.uleb128 0x26
 26856 21fd 6900     		.ascii	"i\000"
 26857 21ff 01       		.byte	0x1
 26858 2200 910E     		.2byte	0xe91
 26859 2202 97000000 		.4byte	0x97
 26860 2206 02       		.uleb128 0x2
 26861 2207 91       		.byte	0x91
 26862 2208 77       		.sleb128 -9
 26863 2209 23       		.uleb128 0x23
 26864 220a 57040000 		.4byte	.LASF348
 26865 220e 01       		.byte	0x1
 26866 220f 920E     		.2byte	0xe92
 26867 2211 EF100000 		.4byte	0x10ef
 26868 2215 02       		.uleb128 0x2
 26869 2216 91       		.byte	0x91
 26870 2217 44       		.sleb128 -60
 26871 2218 23       		.uleb128 0x23
 26872 2219 25080000 		.4byte	.LASF222
 26873 221d 01       		.byte	0x1
 26874 221e 930E     		.2byte	0xe93
 26875 2220 170F0000 		.4byte	0xf17
 26876 2224 04       		.uleb128 0x4
 26877 2225 91       		.byte	0x91
 26878 2226 A4E37E   		.sleb128 -20060
 26879 2229 00       		.byte	0
 26880 222a 22       		.uleb128 0x22
 26881 222b FE030000 		.4byte	.LASF349
 26882 222f 01       		.byte	0x1
 26883 2230 AB0E     		.2byte	0xeab
 26884 2232 00000000 		.4byte	.LFB115
 26885 2236 B0000000 		.4byte	.LFE115-.LFB115
 26886 223a 01       		.uleb128 0x1
 26887 223b 9C       		.byte	0x9c
 26888 223c 8B220000 		.4byte	0x228b
 26889 2240 25       		.uleb128 0x25
 26890 2241 1B070000 		.4byte	.LASF347
 26891 2245 01       		.byte	0x1
 26892 2246 AB0E     		.2byte	0xeab
 26893 2248 A3000000 		.4byte	0xa3
 26894 224c 03       		.uleb128 0x3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 581


 26895 224d 91       		.byte	0x91
 26896 224e BE7F     		.sleb128 -66
 26897 2250 26       		.uleb128 0x26
 26898 2251 6900     		.ascii	"i\000"
 26899 2253 01       		.byte	0x1
 26900 2254 AD0E     		.2byte	0xead
 26901 2256 97000000 		.4byte	0x97
 26902 225a 02       		.uleb128 0x2
 26903 225b 91       		.byte	0x91
 26904 225c 77       		.sleb128 -9
 26905 225d 23       		.uleb128 0x23
 26906 225e 57040000 		.4byte	.LASF348
 26907 2262 01       		.byte	0x1
 26908 2263 AE0E     		.2byte	0xeae
 26909 2265 EF100000 		.4byte	0x10ef
 26910 2269 02       		.uleb128 0x2
 26911 226a 91       		.byte	0x91
 26912 226b 44       		.sleb128 -60
 26913 226c 26       		.uleb128 0x26
 26914 226d 72657300 		.ascii	"res\000"
 26915 2271 01       		.byte	0x1
 26916 2272 B70E     		.2byte	0xeb7
 26917 2274 97000000 		.4byte	0x97
 26918 2278 02       		.uleb128 0x2
 26919 2279 91       		.byte	0x91
 26920 227a 76       		.sleb128 -10
 26921 227b 23       		.uleb128 0x23
 26922 227c 00060000 		.4byte	.LASF233
 26923 2280 01       		.byte	0x1
 26924 2281 BA0E     		.2byte	0xeba
 26925 2283 10060000 		.4byte	0x610
 26926 2287 02       		.uleb128 0x2
 26927 2288 91       		.byte	0x91
 26928 2289 40       		.sleb128 -64
 26929 228a 00       		.byte	0
 26930 228b 2F       		.uleb128 0x2f
 26931 228c 01120000 		.4byte	.LASF350
 26932 2290 09       		.byte	0x9
 26933 2291 1207     		.2byte	0x712
 26934 2293 97220000 		.4byte	0x2297
 26935 2297 06       		.uleb128 0x6
 26936 2298 81000000 		.4byte	0x81
 26937 229c 09       		.uleb128 0x9
 26938 229d 28030000 		.4byte	0x328
 26939 22a1 AC220000 		.4byte	0x22ac
 26940 22a5 0A       		.uleb128 0xa
 26941 22a6 18010000 		.4byte	0x118
 26942 22aa 01       		.byte	0x1
 26943 22ab 00       		.byte	0
 26944 22ac 2F       		.uleb128 0x2f
 26945 22ad D1130000 		.4byte	.LASF351
 26946 22b1 08       		.byte	0x8
 26947 22b2 2202     		.2byte	0x222
 26948 22b4 9C220000 		.4byte	0x229c
 26949 22b8 2F       		.uleb128 0x2f
 26950 22b9 BC040000 		.4byte	.LASF352
 26951 22bd 08       		.byte	0x8
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 582


 26952 22be 2202     		.2byte	0x222
 26953 22c0 9C220000 		.4byte	0x229c
 26954 22c4 2F       		.uleb128 0x2f
 26955 22c5 470D0000 		.4byte	.LASF353
 26956 22c9 08       		.byte	0x8
 26957 22ca 2202     		.2byte	0x222
 26958 22cc 9C220000 		.4byte	0x229c
 26959 22d0 09       		.uleb128 0x9
 26960 22d1 65030000 		.4byte	0x365
 26961 22d5 E0220000 		.4byte	0x22e0
 26962 22d9 0A       		.uleb128 0xa
 26963 22da 18010000 		.4byte	0x118
 26964 22de 01       		.byte	0x1
 26965 22df 00       		.byte	0
 26966 22e0 2F       		.uleb128 0x2f
 26967 22e1 91060000 		.4byte	.LASF354
 26968 22e5 08       		.byte	0x8
 26969 22e6 2302     		.2byte	0x223
 26970 22e8 D0220000 		.4byte	0x22d0
 26971 22ec 2F       		.uleb128 0x2f
 26972 22ed 24140000 		.4byte	.LASF355
 26973 22f1 08       		.byte	0x8
 26974 22f2 2302     		.2byte	0x223
 26975 22f4 D0220000 		.4byte	0x22d0
 26976 22f8 2F       		.uleb128 0x2f
 26977 22f9 9B130000 		.4byte	.LASF356
 26978 22fd 08       		.byte	0x8
 26979 22fe 2402     		.2byte	0x224
 26980 2300 E6030000 		.4byte	0x3e6
 26981 2304 2F       		.uleb128 0x2f
 26982 2305 B4100000 		.4byte	.LASF357
 26983 2309 08       		.byte	0x8
 26984 230a 2402     		.2byte	0x224
 26985 230c E6030000 		.4byte	0x3e6
 26986 2310 2F       		.uleb128 0x2f
 26987 2311 6A100000 		.4byte	.LASF358
 26988 2315 08       		.byte	0x8
 26989 2316 2502     		.2byte	0x225
 26990 2318 37040000 		.4byte	0x437
 26991 231c 2F       		.uleb128 0x2f
 26992 231d AF000000 		.4byte	.LASF359
 26993 2321 08       		.byte	0x8
 26994 2322 2602     		.2byte	0x226
 26995 2324 52040000 		.4byte	0x452
 26996 2328 2F       		.uleb128 0x2f
 26997 2329 99100000 		.4byte	.LASF360
 26998 232d 08       		.byte	0x8
 26999 232e 2702     		.2byte	0x227
 27000 2330 5F0B0000 		.4byte	0xb5f
 27001 2334 2F       		.uleb128 0x2f
 27002 2335 350B0000 		.4byte	.LASF361
 27003 2339 08       		.byte	0x8
 27004 233a 2702     		.2byte	0x227
 27005 233c 5F0B0000 		.4byte	0xb5f
 27006 2340 2F       		.uleb128 0x2f
 27007 2341 D2090000 		.4byte	.LASF362
 27008 2345 08       		.byte	0x8
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 583


 27009 2346 2802     		.2byte	0x228
 27010 2348 100D0000 		.4byte	0xd10
 27011 234c 2F       		.uleb128 0x2f
 27012 234d 01030000 		.4byte	.LASF363
 27013 2351 08       		.byte	0x8
 27014 2352 2E02     		.2byte	0x22e
 27015 2354 A3000000 		.4byte	0xa3
 27016 2358 2F       		.uleb128 0x2f
 27017 2359 770E0000 		.4byte	.LASF364
 27018 235d 08       		.byte	0x8
 27019 235e 2F02     		.2byte	0x22f
 27020 2360 A3000000 		.4byte	0xa3
 27021 2364 2F       		.uleb128 0x2f
 27022 2365 A90E0000 		.4byte	.LASF365
 27023 2369 08       		.byte	0x8
 27024 236a 3202     		.2byte	0x232
 27025 236c 17040000 		.4byte	0x417
 27026 2370 2F       		.uleb128 0x2f
 27027 2371 98120000 		.4byte	.LASF366
 27028 2375 08       		.byte	0x8
 27029 2376 3302     		.2byte	0x233
 27030 2378 BC080000 		.4byte	0x8bc
 27031 237c 2F       		.uleb128 0x2f
 27032 237d 21120000 		.4byte	.LASF367
 27033 2381 08       		.byte	0x8
 27034 2382 3602     		.2byte	0x236
 27035 2384 17040000 		.4byte	0x417
 27036 2388 2F       		.uleb128 0x2f
 27037 2389 C80A0000 		.4byte	.LASF368
 27038 238d 08       		.byte	0x8
 27039 238e 4002     		.2byte	0x240
 27040 2390 CC080000 		.4byte	0x8cc
 27041 2394 2F       		.uleb128 0x2f
 27042 2395 84040000 		.4byte	.LASF369
 27043 2399 08       		.byte	0x8
 27044 239a 4202     		.2byte	0x242
 27045 239c 97000000 		.4byte	0x97
 27046 23a0 2F       		.uleb128 0x2f
 27047 23a1 72070000 		.4byte	.LASF370
 27048 23a5 08       		.byte	0x8
 27049 23a6 4A02     		.2byte	0x24a
 27050 23a8 97000000 		.4byte	0x97
 27051 23ac 09       		.uleb128 0x9
 27052 23ad C7000000 		.4byte	0xc7
 27053 23b1 BC230000 		.4byte	0x23bc
 27054 23b5 0A       		.uleb128 0xa
 27055 23b6 18010000 		.4byte	0x118
 27056 23ba 0B       		.byte	0xb
 27057 23bb 00       		.byte	0
 27058 23bc 2F       		.uleb128 0x2f
 27059 23bd 7C040000 		.4byte	.LASF371
 27060 23c1 08       		.byte	0x8
 27061 23c2 4D02     		.2byte	0x24d
 27062 23c4 AC230000 		.4byte	0x23ac
 27063 23c8 2F       		.uleb128 0x2f
 27064 23c9 DD130000 		.4byte	.LASF372
 27065 23cd 08       		.byte	0x8
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 584


 27066 23ce 4E02     		.2byte	0x24e
 27067 23d0 97000000 		.4byte	0x97
 27068 23d4 09       		.uleb128 0x9
 27069 23d5 AF000000 		.4byte	0xaf
 27070 23d9 EA230000 		.4byte	0x23ea
 27071 23dd 0A       		.uleb128 0xa
 27072 23de 18010000 		.4byte	0x118
 27073 23e2 01       		.byte	0x1
 27074 23e3 0A       		.uleb128 0xa
 27075 23e4 18010000 		.4byte	0x118
 27076 23e8 04       		.byte	0x4
 27077 23e9 00       		.byte	0
 27078 23ea 2F       		.uleb128 0x2f
 27079 23eb B1060000 		.4byte	.LASF373
 27080 23ef 08       		.byte	0x8
 27081 23f0 5402     		.2byte	0x254
 27082 23f2 D4230000 		.4byte	0x23d4
 27083 23f6 2F       		.uleb128 0x2f
 27084 23f7 950F0000 		.4byte	.LASF374
 27085 23fb 08       		.byte	0x8
 27086 23fc 5502     		.2byte	0x255
 27087 23fe CC080000 		.4byte	0x8cc
 27088 2402 09       		.uleb128 0x9
 27089 2403 A3000000 		.4byte	0xa3
 27090 2407 18240000 		.4byte	0x2418
 27091 240b 0A       		.uleb128 0xa
 27092 240c 18010000 		.4byte	0x118
 27093 2410 01       		.byte	0x1
 27094 2411 0A       		.uleb128 0xa
 27095 2412 18010000 		.4byte	0x118
 27096 2416 04       		.byte	0x4
 27097 2417 00       		.byte	0
 27098 2418 2F       		.uleb128 0x2f
 27099 2419 C1120000 		.4byte	.LASF375
 27100 241d 08       		.byte	0x8
 27101 241e 5602     		.2byte	0x256
 27102 2420 02240000 		.4byte	0x2402
 27103 2424 2F       		.uleb128 0x2f
 27104 2425 16060000 		.4byte	.LASF376
 27105 2429 08       		.byte	0x8
 27106 242a 5E02     		.2byte	0x25e
 27107 242c 22030000 		.4byte	0x322
 27108 2430 2F       		.uleb128 0x2f
 27109 2431 2F0F0000 		.4byte	.LASF377
 27110 2435 08       		.byte	0x8
 27111 2436 5F02     		.2byte	0x25f
 27112 2438 1F160000 		.4byte	0x161f
 27113 243c 2F       		.uleb128 0x2f
 27114 243d DA030000 		.4byte	.LASF378
 27115 2441 08       		.byte	0x8
 27116 2442 6002     		.2byte	0x260
 27117 2444 1F160000 		.4byte	0x161f
 27118 2448 2F       		.uleb128 0x2f
 27119 2449 61130000 		.4byte	.LASF379
 27120 244d 08       		.byte	0x8
 27121 244e 6302     		.2byte	0x263
 27122 2450 1F160000 		.4byte	0x161f
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 585


 27123 2454 2F       		.uleb128 0x2f
 27124 2455 3F110000 		.4byte	.LASF380
 27125 2459 08       		.byte	0x8
 27126 245a 6602     		.2byte	0x266
 27127 245c 97000000 		.4byte	0x97
 27128 2460 2F       		.uleb128 0x2f
 27129 2461 FE120000 		.4byte	.LASF381
 27130 2465 08       		.byte	0x8
 27131 2466 6702     		.2byte	0x267
 27132 2468 3D080000 		.4byte	0x83d
 27133 246c 2F       		.uleb128 0x2f
 27134 246d F2110000 		.4byte	.LASF382
 27135 2471 08       		.byte	0x8
 27136 2472 6802     		.2byte	0x268
 27137 2474 73000000 		.4byte	0x73
 27138 2478 09       		.uleb128 0x9
 27139 2479 73000000 		.4byte	0x73
 27140 247d 88240000 		.4byte	0x2488
 27141 2481 0A       		.uleb128 0xa
 27142 2482 18010000 		.4byte	0x118
 27143 2486 04       		.byte	0x4
 27144 2487 00       		.byte	0
 27145 2488 2F       		.uleb128 0x2f
 27146 2489 610C0000 		.4byte	.LASF383
 27147 248d 08       		.byte	0x8
 27148 248e 6902     		.2byte	0x269
 27149 2490 78240000 		.4byte	0x2478
 27150 2494 09       		.uleb128 0x9
 27151 2495 940C0000 		.4byte	0xc94
 27152 2499 A4240000 		.4byte	0x24a4
 27153 249d 0A       		.uleb128 0xa
 27154 249e 18010000 		.4byte	0x118
 27155 24a2 04       		.byte	0x4
 27156 24a3 00       		.byte	0
 27157 24a4 2F       		.uleb128 0x2f
 27158 24a5 4E050000 		.4byte	.LASF384
 27159 24a9 08       		.byte	0x8
 27160 24aa 6A02     		.2byte	0x26a
 27161 24ac 94240000 		.4byte	0x2494
 27162 24b0 09       		.uleb128 0x9
 27163 24b1 97000000 		.4byte	0x97
 27164 24b5 C6240000 		.4byte	0x24c6
 27165 24b9 0A       		.uleb128 0xa
 27166 24ba 18010000 		.4byte	0x118
 27167 24be 04       		.byte	0x4
 27168 24bf 0A       		.uleb128 0xa
 27169 24c0 18010000 		.4byte	0x118
 27170 24c4 02       		.byte	0x2
 27171 24c5 00       		.byte	0
 27172 24c6 2F       		.uleb128 0x2f
 27173 24c7 950B0000 		.4byte	.LASF385
 27174 24cb 08       		.byte	0x8
 27175 24cc 6E02     		.2byte	0x26e
 27176 24ce B0240000 		.4byte	0x24b0
 27177 24d2 2F       		.uleb128 0x2f
 27178 24d3 03140000 		.4byte	.LASF386
 27179 24d7 08       		.byte	0x8
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 586


 27180 24d8 7302     		.2byte	0x273
 27181 24da 97000000 		.4byte	0x97
 27182 24de 09       		.uleb128 0x9
 27183 24df A3000000 		.4byte	0xa3
 27184 24e3 F5240000 		.4byte	0x24f5
 27185 24e7 24       		.uleb128 0x24
 27186 24e8 18010000 		.4byte	0x118
 27187 24ec 5702     		.2byte	0x257
 27188 24ee 0A       		.uleb128 0xa
 27189 24ef 18010000 		.4byte	0x118
 27190 24f3 01       		.byte	0x1
 27191 24f4 00       		.byte	0
 27192 24f5 2F       		.uleb128 0x2f
 27193 24f6 C2110000 		.4byte	.LASF387
 27194 24fa 08       		.byte	0x8
 27195 24fb 7602     		.2byte	0x276
 27196 24fd DE240000 		.4byte	0x24de
 27197 2501 2F       		.uleb128 0x2f
 27198 2502 700A0000 		.4byte	.LASF388
 27199 2506 08       		.byte	0x8
 27200 2507 7702     		.2byte	0x277
 27201 2509 AF000000 		.4byte	0xaf
 27202 250d 30       		.uleb128 0x30
 27203 250e CE110000 		.4byte	.LASF389
 27204 2512 01       		.byte	0x1
 27205 2513 33       		.byte	0x33
 27206 2514 1E250000 		.4byte	0x251e
 27207 2518 05       		.uleb128 0x5
 27208 2519 03       		.byte	0x3
 27209 251a 00000000 		.4byte	EEPROM_ADDR
 27210 251e 07       		.uleb128 0x7
 27211 251f 04       		.byte	0x4
 27212 2520 00010000 		.4byte	0x100
 27213 2524 00       		.byte	0
 27214              		.section	.debug_abbrev,"",%progbits
 27215              	.Ldebug_abbrev0:
 27216 0000 01       		.uleb128 0x1
 27217 0001 11       		.uleb128 0x11
 27218 0002 01       		.byte	0x1
 27219 0003 25       		.uleb128 0x25
 27220 0004 0E       		.uleb128 0xe
 27221 0005 13       		.uleb128 0x13
 27222 0006 0B       		.uleb128 0xb
 27223 0007 03       		.uleb128 0x3
 27224 0008 0E       		.uleb128 0xe
 27225 0009 1B       		.uleb128 0x1b
 27226 000a 0E       		.uleb128 0xe
 27227 000b 55       		.uleb128 0x55
 27228 000c 17       		.uleb128 0x17
 27229 000d 11       		.uleb128 0x11
 27230 000e 01       		.uleb128 0x1
 27231 000f 10       		.uleb128 0x10
 27232 0010 17       		.uleb128 0x17
 27233 0011 00       		.byte	0
 27234 0012 00       		.byte	0
 27235 0013 02       		.uleb128 0x2
 27236 0014 24       		.uleb128 0x24
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 587


 27237 0015 00       		.byte	0
 27238 0016 0B       		.uleb128 0xb
 27239 0017 0B       		.uleb128 0xb
 27240 0018 3E       		.uleb128 0x3e
 27241 0019 0B       		.uleb128 0xb
 27242 001a 03       		.uleb128 0x3
 27243 001b 0E       		.uleb128 0xe
 27244 001c 00       		.byte	0
 27245 001d 00       		.byte	0
 27246 001e 03       		.uleb128 0x3
 27247 001f 16       		.uleb128 0x16
 27248 0020 00       		.byte	0
 27249 0021 03       		.uleb128 0x3
 27250 0022 0E       		.uleb128 0xe
 27251 0023 3A       		.uleb128 0x3a
 27252 0024 0B       		.uleb128 0xb
 27253 0025 3B       		.uleb128 0x3b
 27254 0026 0B       		.uleb128 0xb
 27255 0027 49       		.uleb128 0x49
 27256 0028 13       		.uleb128 0x13
 27257 0029 00       		.byte	0
 27258 002a 00       		.byte	0
 27259 002b 04       		.uleb128 0x4
 27260 002c 24       		.uleb128 0x24
 27261 002d 00       		.byte	0
 27262 002e 0B       		.uleb128 0xb
 27263 002f 0B       		.uleb128 0xb
 27264 0030 3E       		.uleb128 0x3e
 27265 0031 0B       		.uleb128 0xb
 27266 0032 03       		.uleb128 0x3
 27267 0033 08       		.uleb128 0x8
 27268 0034 00       		.byte	0
 27269 0035 00       		.byte	0
 27270 0036 05       		.uleb128 0x5
 27271 0037 16       		.uleb128 0x16
 27272 0038 00       		.byte	0
 27273 0039 03       		.uleb128 0x3
 27274 003a 0E       		.uleb128 0xe
 27275 003b 3A       		.uleb128 0x3a
 27276 003c 0B       		.uleb128 0xb
 27277 003d 3B       		.uleb128 0x3b
 27278 003e 05       		.uleb128 0x5
 27279 003f 49       		.uleb128 0x49
 27280 0040 13       		.uleb128 0x13
 27281 0041 00       		.byte	0
 27282 0042 00       		.byte	0
 27283 0043 06       		.uleb128 0x6
 27284 0044 35       		.uleb128 0x35
 27285 0045 00       		.byte	0
 27286 0046 49       		.uleb128 0x49
 27287 0047 13       		.uleb128 0x13
 27288 0048 00       		.byte	0
 27289 0049 00       		.byte	0
 27290 004a 07       		.uleb128 0x7
 27291 004b 0F       		.uleb128 0xf
 27292 004c 00       		.byte	0
 27293 004d 0B       		.uleb128 0xb
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 588


 27294 004e 0B       		.uleb128 0xb
 27295 004f 49       		.uleb128 0x49
 27296 0050 13       		.uleb128 0x13
 27297 0051 00       		.byte	0
 27298 0052 00       		.byte	0
 27299 0053 08       		.uleb128 0x8
 27300 0054 26       		.uleb128 0x26
 27301 0055 00       		.byte	0
 27302 0056 49       		.uleb128 0x49
 27303 0057 13       		.uleb128 0x13
 27304 0058 00       		.byte	0
 27305 0059 00       		.byte	0
 27306 005a 09       		.uleb128 0x9
 27307 005b 01       		.uleb128 0x1
 27308 005c 01       		.byte	0x1
 27309 005d 49       		.uleb128 0x49
 27310 005e 13       		.uleb128 0x13
 27311 005f 01       		.uleb128 0x1
 27312 0060 13       		.uleb128 0x13
 27313 0061 00       		.byte	0
 27314 0062 00       		.byte	0
 27315 0063 0A       		.uleb128 0xa
 27316 0064 21       		.uleb128 0x21
 27317 0065 00       		.byte	0
 27318 0066 49       		.uleb128 0x49
 27319 0067 13       		.uleb128 0x13
 27320 0068 2F       		.uleb128 0x2f
 27321 0069 0B       		.uleb128 0xb
 27322 006a 00       		.byte	0
 27323 006b 00       		.byte	0
 27324 006c 0B       		.uleb128 0xb
 27325 006d 04       		.uleb128 0x4
 27326 006e 01       		.byte	0x1
 27327 006f 03       		.uleb128 0x3
 27328 0070 0E       		.uleb128 0xe
 27329 0071 0B       		.uleb128 0xb
 27330 0072 0B       		.uleb128 0xb
 27331 0073 49       		.uleb128 0x49
 27332 0074 13       		.uleb128 0x13
 27333 0075 3A       		.uleb128 0x3a
 27334 0076 0B       		.uleb128 0xb
 27335 0077 3B       		.uleb128 0x3b
 27336 0078 0B       		.uleb128 0xb
 27337 0079 01       		.uleb128 0x1
 27338 007a 13       		.uleb128 0x13
 27339 007b 00       		.byte	0
 27340 007c 00       		.byte	0
 27341 007d 0C       		.uleb128 0xc
 27342 007e 28       		.uleb128 0x28
 27343 007f 00       		.byte	0
 27344 0080 03       		.uleb128 0x3
 27345 0081 0E       		.uleb128 0xe
 27346 0082 1C       		.uleb128 0x1c
 27347 0083 0B       		.uleb128 0xb
 27348 0084 00       		.byte	0
 27349 0085 00       		.byte	0
 27350 0086 0D       		.uleb128 0xd
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 589


 27351 0087 13       		.uleb128 0x13
 27352 0088 00       		.byte	0
 27353 0089 03       		.uleb128 0x3
 27354 008a 0E       		.uleb128 0xe
 27355 008b 3C       		.uleb128 0x3c
 27356 008c 19       		.uleb128 0x19
 27357 008d 00       		.byte	0
 27358 008e 00       		.byte	0
 27359 008f 0E       		.uleb128 0xe
 27360 0090 13       		.uleb128 0x13
 27361 0091 01       		.byte	0x1
 27362 0092 03       		.uleb128 0x3
 27363 0093 0E       		.uleb128 0xe
 27364 0094 0B       		.uleb128 0xb
 27365 0095 0B       		.uleb128 0xb
 27366 0096 3A       		.uleb128 0x3a
 27367 0097 0B       		.uleb128 0xb
 27368 0098 3B       		.uleb128 0x3b
 27369 0099 0B       		.uleb128 0xb
 27370 009a 01       		.uleb128 0x1
 27371 009b 13       		.uleb128 0x13
 27372 009c 00       		.byte	0
 27373 009d 00       		.byte	0
 27374 009e 0F       		.uleb128 0xf
 27375 009f 0D       		.uleb128 0xd
 27376 00a0 00       		.byte	0
 27377 00a1 03       		.uleb128 0x3
 27378 00a2 08       		.uleb128 0x8
 27379 00a3 3A       		.uleb128 0x3a
 27380 00a4 0B       		.uleb128 0xb
 27381 00a5 3B       		.uleb128 0x3b
 27382 00a6 0B       		.uleb128 0xb
 27383 00a7 49       		.uleb128 0x49
 27384 00a8 13       		.uleb128 0x13
 27385 00a9 38       		.uleb128 0x38
 27386 00aa 0B       		.uleb128 0xb
 27387 00ab 00       		.byte	0
 27388 00ac 00       		.byte	0
 27389 00ad 10       		.uleb128 0x10
 27390 00ae 0D       		.uleb128 0xd
 27391 00af 00       		.byte	0
 27392 00b0 03       		.uleb128 0x3
 27393 00b1 0E       		.uleb128 0xe
 27394 00b2 3A       		.uleb128 0x3a
 27395 00b3 0B       		.uleb128 0xb
 27396 00b4 3B       		.uleb128 0x3b
 27397 00b5 0B       		.uleb128 0xb
 27398 00b6 49       		.uleb128 0x49
 27399 00b7 13       		.uleb128 0x13
 27400 00b8 38       		.uleb128 0x38
 27401 00b9 0B       		.uleb128 0xb
 27402 00ba 00       		.byte	0
 27403 00bb 00       		.byte	0
 27404 00bc 11       		.uleb128 0x11
 27405 00bd 13       		.uleb128 0x13
 27406 00be 01       		.byte	0x1
 27407 00bf 03       		.uleb128 0x3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 590


 27408 00c0 0E       		.uleb128 0xe
 27409 00c1 0B       		.uleb128 0xb
 27410 00c2 0B       		.uleb128 0xb
 27411 00c3 3A       		.uleb128 0x3a
 27412 00c4 0B       		.uleb128 0xb
 27413 00c5 3B       		.uleb128 0x3b
 27414 00c6 05       		.uleb128 0x5
 27415 00c7 01       		.uleb128 0x1
 27416 00c8 13       		.uleb128 0x13
 27417 00c9 00       		.byte	0
 27418 00ca 00       		.byte	0
 27419 00cb 12       		.uleb128 0x12
 27420 00cc 0D       		.uleb128 0xd
 27421 00cd 00       		.byte	0
 27422 00ce 03       		.uleb128 0x3
 27423 00cf 0E       		.uleb128 0xe
 27424 00d0 3A       		.uleb128 0x3a
 27425 00d1 0B       		.uleb128 0xb
 27426 00d2 3B       		.uleb128 0x3b
 27427 00d3 05       		.uleb128 0x5
 27428 00d4 49       		.uleb128 0x49
 27429 00d5 13       		.uleb128 0x13
 27430 00d6 38       		.uleb128 0x38
 27431 00d7 0B       		.uleb128 0xb
 27432 00d8 00       		.byte	0
 27433 00d9 00       		.byte	0
 27434 00da 13       		.uleb128 0x13
 27435 00db 0D       		.uleb128 0xd
 27436 00dc 00       		.byte	0
 27437 00dd 03       		.uleb128 0x3
 27438 00de 08       		.uleb128 0x8
 27439 00df 3A       		.uleb128 0x3a
 27440 00e0 0B       		.uleb128 0xb
 27441 00e1 3B       		.uleb128 0x3b
 27442 00e2 05       		.uleb128 0x5
 27443 00e3 49       		.uleb128 0x49
 27444 00e4 13       		.uleb128 0x13
 27445 00e5 38       		.uleb128 0x38
 27446 00e6 0B       		.uleb128 0xb
 27447 00e7 00       		.byte	0
 27448 00e8 00       		.byte	0
 27449 00e9 14       		.uleb128 0x14
 27450 00ea 13       		.uleb128 0x13
 27451 00eb 01       		.byte	0x1
 27452 00ec 03       		.uleb128 0x3
 27453 00ed 0E       		.uleb128 0xe
 27454 00ee 0B       		.uleb128 0xb
 27455 00ef 05       		.uleb128 0x5
 27456 00f0 3A       		.uleb128 0x3a
 27457 00f1 0B       		.uleb128 0xb
 27458 00f2 3B       		.uleb128 0x3b
 27459 00f3 05       		.uleb128 0x5
 27460 00f4 01       		.uleb128 0x1
 27461 00f5 13       		.uleb128 0x13
 27462 00f6 00       		.byte	0
 27463 00f7 00       		.byte	0
 27464 00f8 15       		.uleb128 0x15
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 591


 27465 00f9 0D       		.uleb128 0xd
 27466 00fa 00       		.byte	0
 27467 00fb 03       		.uleb128 0x3
 27468 00fc 08       		.uleb128 0x8
 27469 00fd 3A       		.uleb128 0x3a
 27470 00fe 0B       		.uleb128 0xb
 27471 00ff 3B       		.uleb128 0x3b
 27472 0100 05       		.uleb128 0x5
 27473 0101 49       		.uleb128 0x49
 27474 0102 13       		.uleb128 0x13
 27475 0103 38       		.uleb128 0x38
 27476 0104 05       		.uleb128 0x5
 27477 0105 00       		.byte	0
 27478 0106 00       		.byte	0
 27479 0107 16       		.uleb128 0x16
 27480 0108 0D       		.uleb128 0xd
 27481 0109 00       		.byte	0
 27482 010a 03       		.uleb128 0x3
 27483 010b 0E       		.uleb128 0xe
 27484 010c 3A       		.uleb128 0x3a
 27485 010d 0B       		.uleb128 0xb
 27486 010e 3B       		.uleb128 0x3b
 27487 010f 05       		.uleb128 0x5
 27488 0110 49       		.uleb128 0x49
 27489 0111 13       		.uleb128 0x13
 27490 0112 38       		.uleb128 0x38
 27491 0113 05       		.uleb128 0x5
 27492 0114 00       		.byte	0
 27493 0115 00       		.byte	0
 27494 0116 17       		.uleb128 0x17
 27495 0117 2E       		.uleb128 0x2e
 27496 0118 01       		.byte	0x1
 27497 0119 03       		.uleb128 0x3
 27498 011a 0E       		.uleb128 0xe
 27499 011b 3A       		.uleb128 0x3a
 27500 011c 0B       		.uleb128 0xb
 27501 011d 3B       		.uleb128 0x3b
 27502 011e 05       		.uleb128 0x5
 27503 011f 27       		.uleb128 0x27
 27504 0120 19       		.uleb128 0x19
 27505 0121 49       		.uleb128 0x49
 27506 0122 13       		.uleb128 0x13
 27507 0123 20       		.uleb128 0x20
 27508 0124 0B       		.uleb128 0xb
 27509 0125 01       		.uleb128 0x1
 27510 0126 13       		.uleb128 0x13
 27511 0127 00       		.byte	0
 27512 0128 00       		.byte	0
 27513 0129 18       		.uleb128 0x18
 27514 012a 05       		.uleb128 0x5
 27515 012b 00       		.byte	0
 27516 012c 03       		.uleb128 0x3
 27517 012d 0E       		.uleb128 0xe
 27518 012e 3A       		.uleb128 0x3a
 27519 012f 0B       		.uleb128 0xb
 27520 0130 3B       		.uleb128 0x3b
 27521 0131 05       		.uleb128 0x5
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 592


 27522 0132 49       		.uleb128 0x49
 27523 0133 13       		.uleb128 0x13
 27524 0134 00       		.byte	0
 27525 0135 00       		.byte	0
 27526 0136 19       		.uleb128 0x19
 27527 0137 34       		.uleb128 0x34
 27528 0138 00       		.byte	0
 27529 0139 03       		.uleb128 0x3
 27530 013a 0E       		.uleb128 0xe
 27531 013b 3A       		.uleb128 0x3a
 27532 013c 0B       		.uleb128 0xb
 27533 013d 3B       		.uleb128 0x3b
 27534 013e 05       		.uleb128 0x5
 27535 013f 49       		.uleb128 0x49
 27536 0140 13       		.uleb128 0x13
 27537 0141 00       		.byte	0
 27538 0142 00       		.byte	0
 27539 0143 1A       		.uleb128 0x1a
 27540 0144 2E       		.uleb128 0x2e
 27541 0145 01       		.byte	0x1
 27542 0146 3F       		.uleb128 0x3f
 27543 0147 19       		.uleb128 0x19
 27544 0148 03       		.uleb128 0x3
 27545 0149 0E       		.uleb128 0xe
 27546 014a 3A       		.uleb128 0x3a
 27547 014b 0B       		.uleb128 0xb
 27548 014c 3B       		.uleb128 0x3b
 27549 014d 0B       		.uleb128 0xb
 27550 014e 27       		.uleb128 0x27
 27551 014f 19       		.uleb128 0x19
 27552 0150 11       		.uleb128 0x11
 27553 0151 01       		.uleb128 0x1
 27554 0152 12       		.uleb128 0x12
 27555 0153 06       		.uleb128 0x6
 27556 0154 40       		.uleb128 0x40
 27557 0155 18       		.uleb128 0x18
 27558 0156 9642     		.uleb128 0x2116
 27559 0158 19       		.uleb128 0x19
 27560 0159 01       		.uleb128 0x1
 27561 015a 13       		.uleb128 0x13
 27562 015b 00       		.byte	0
 27563 015c 00       		.byte	0
 27564 015d 1B       		.uleb128 0x1b
 27565 015e 34       		.uleb128 0x34
 27566 015f 00       		.byte	0
 27567 0160 03       		.uleb128 0x3
 27568 0161 0E       		.uleb128 0xe
 27569 0162 3A       		.uleb128 0x3a
 27570 0163 0B       		.uleb128 0xb
 27571 0164 3B       		.uleb128 0x3b
 27572 0165 0B       		.uleb128 0xb
 27573 0166 49       		.uleb128 0x49
 27574 0167 13       		.uleb128 0x13
 27575 0168 02       		.uleb128 0x2
 27576 0169 18       		.uleb128 0x18
 27577 016a 00       		.byte	0
 27578 016b 00       		.byte	0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 593


 27579 016c 1C       		.uleb128 0x1c
 27580 016d 1D       		.uleb128 0x1d
 27581 016e 01       		.byte	0x1
 27582 016f 31       		.uleb128 0x31
 27583 0170 13       		.uleb128 0x13
 27584 0171 11       		.uleb128 0x11
 27585 0172 01       		.uleb128 0x1
 27586 0173 12       		.uleb128 0x12
 27587 0174 06       		.uleb128 0x6
 27588 0175 58       		.uleb128 0x58
 27589 0176 0B       		.uleb128 0xb
 27590 0177 59       		.uleb128 0x59
 27591 0178 0B       		.uleb128 0xb
 27592 0179 01       		.uleb128 0x1
 27593 017a 13       		.uleb128 0x13
 27594 017b 00       		.byte	0
 27595 017c 00       		.byte	0
 27596 017d 1D       		.uleb128 0x1d
 27597 017e 05       		.uleb128 0x5
 27598 017f 00       		.byte	0
 27599 0180 31       		.uleb128 0x31
 27600 0181 13       		.uleb128 0x13
 27601 0182 02       		.uleb128 0x2
 27602 0183 18       		.uleb128 0x18
 27603 0184 00       		.byte	0
 27604 0185 00       		.byte	0
 27605 0186 1E       		.uleb128 0x1e
 27606 0187 0B       		.uleb128 0xb
 27607 0188 01       		.byte	0x1
 27608 0189 11       		.uleb128 0x11
 27609 018a 01       		.uleb128 0x1
 27610 018b 12       		.uleb128 0x12
 27611 018c 06       		.uleb128 0x6
 27612 018d 00       		.byte	0
 27613 018e 00       		.byte	0
 27614 018f 1F       		.uleb128 0x1f
 27615 0190 34       		.uleb128 0x34
 27616 0191 00       		.byte	0
 27617 0192 31       		.uleb128 0x31
 27618 0193 13       		.uleb128 0x13
 27619 0194 02       		.uleb128 0x2
 27620 0195 18       		.uleb128 0x18
 27621 0196 00       		.byte	0
 27622 0197 00       		.byte	0
 27623 0198 20       		.uleb128 0x20
 27624 0199 1D       		.uleb128 0x1d
 27625 019a 01       		.byte	0x1
 27626 019b 31       		.uleb128 0x31
 27627 019c 13       		.uleb128 0x13
 27628 019d 11       		.uleb128 0x11
 27629 019e 01       		.uleb128 0x1
 27630 019f 12       		.uleb128 0x12
 27631 01a0 06       		.uleb128 0x6
 27632 01a1 58       		.uleb128 0x58
 27633 01a2 0B       		.uleb128 0xb
 27634 01a3 59       		.uleb128 0x59
 27635 01a4 05       		.uleb128 0x5
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 594


 27636 01a5 01       		.uleb128 0x1
 27637 01a6 13       		.uleb128 0x13
 27638 01a7 00       		.byte	0
 27639 01a8 00       		.byte	0
 27640 01a9 21       		.uleb128 0x21
 27641 01aa 1D       		.uleb128 0x1d
 27642 01ab 01       		.byte	0x1
 27643 01ac 31       		.uleb128 0x31
 27644 01ad 13       		.uleb128 0x13
 27645 01ae 11       		.uleb128 0x11
 27646 01af 01       		.uleb128 0x1
 27647 01b0 12       		.uleb128 0x12
 27648 01b1 06       		.uleb128 0x6
 27649 01b2 58       		.uleb128 0x58
 27650 01b3 0B       		.uleb128 0xb
 27651 01b4 59       		.uleb128 0x59
 27652 01b5 05       		.uleb128 0x5
 27653 01b6 00       		.byte	0
 27654 01b7 00       		.byte	0
 27655 01b8 22       		.uleb128 0x22
 27656 01b9 2E       		.uleb128 0x2e
 27657 01ba 01       		.byte	0x1
 27658 01bb 3F       		.uleb128 0x3f
 27659 01bc 19       		.uleb128 0x19
 27660 01bd 03       		.uleb128 0x3
 27661 01be 0E       		.uleb128 0xe
 27662 01bf 3A       		.uleb128 0x3a
 27663 01c0 0B       		.uleb128 0xb
 27664 01c1 3B       		.uleb128 0x3b
 27665 01c2 05       		.uleb128 0x5
 27666 01c3 27       		.uleb128 0x27
 27667 01c4 19       		.uleb128 0x19
 27668 01c5 11       		.uleb128 0x11
 27669 01c6 01       		.uleb128 0x1
 27670 01c7 12       		.uleb128 0x12
 27671 01c8 06       		.uleb128 0x6
 27672 01c9 40       		.uleb128 0x40
 27673 01ca 18       		.uleb128 0x18
 27674 01cb 9642     		.uleb128 0x2116
 27675 01cd 19       		.uleb128 0x19
 27676 01ce 01       		.uleb128 0x1
 27677 01cf 13       		.uleb128 0x13
 27678 01d0 00       		.byte	0
 27679 01d1 00       		.byte	0
 27680 01d2 23       		.uleb128 0x23
 27681 01d3 34       		.uleb128 0x34
 27682 01d4 00       		.byte	0
 27683 01d5 03       		.uleb128 0x3
 27684 01d6 0E       		.uleb128 0xe
 27685 01d7 3A       		.uleb128 0x3a
 27686 01d8 0B       		.uleb128 0xb
 27687 01d9 3B       		.uleb128 0x3b
 27688 01da 05       		.uleb128 0x5
 27689 01db 49       		.uleb128 0x49
 27690 01dc 13       		.uleb128 0x13
 27691 01dd 02       		.uleb128 0x2
 27692 01de 18       		.uleb128 0x18
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 595


 27693 01df 00       		.byte	0
 27694 01e0 00       		.byte	0
 27695 01e1 24       		.uleb128 0x24
 27696 01e2 21       		.uleb128 0x21
 27697 01e3 00       		.byte	0
 27698 01e4 49       		.uleb128 0x49
 27699 01e5 13       		.uleb128 0x13
 27700 01e6 2F       		.uleb128 0x2f
 27701 01e7 05       		.uleb128 0x5
 27702 01e8 00       		.byte	0
 27703 01e9 00       		.byte	0
 27704 01ea 25       		.uleb128 0x25
 27705 01eb 05       		.uleb128 0x5
 27706 01ec 00       		.byte	0
 27707 01ed 03       		.uleb128 0x3
 27708 01ee 0E       		.uleb128 0xe
 27709 01ef 3A       		.uleb128 0x3a
 27710 01f0 0B       		.uleb128 0xb
 27711 01f1 3B       		.uleb128 0x3b
 27712 01f2 05       		.uleb128 0x5
 27713 01f3 49       		.uleb128 0x49
 27714 01f4 13       		.uleb128 0x13
 27715 01f5 02       		.uleb128 0x2
 27716 01f6 18       		.uleb128 0x18
 27717 01f7 00       		.byte	0
 27718 01f8 00       		.byte	0
 27719 01f9 26       		.uleb128 0x26
 27720 01fa 34       		.uleb128 0x34
 27721 01fb 00       		.byte	0
 27722 01fc 03       		.uleb128 0x3
 27723 01fd 08       		.uleb128 0x8
 27724 01fe 3A       		.uleb128 0x3a
 27725 01ff 0B       		.uleb128 0xb
 27726 0200 3B       		.uleb128 0x3b
 27727 0201 05       		.uleb128 0x5
 27728 0202 49       		.uleb128 0x49
 27729 0203 13       		.uleb128 0x13
 27730 0204 02       		.uleb128 0x2
 27731 0205 18       		.uleb128 0x18
 27732 0206 00       		.byte	0
 27733 0207 00       		.byte	0
 27734 0208 27       		.uleb128 0x27
 27735 0209 2E       		.uleb128 0x2e
 27736 020a 01       		.byte	0x1
 27737 020b 3F       		.uleb128 0x3f
 27738 020c 19       		.uleb128 0x19
 27739 020d 03       		.uleb128 0x3
 27740 020e 0E       		.uleb128 0xe
 27741 020f 3A       		.uleb128 0x3a
 27742 0210 0B       		.uleb128 0xb
 27743 0211 3B       		.uleb128 0x3b
 27744 0212 05       		.uleb128 0x5
 27745 0213 11       		.uleb128 0x11
 27746 0214 01       		.uleb128 0x1
 27747 0215 12       		.uleb128 0x12
 27748 0216 06       		.uleb128 0x6
 27749 0217 40       		.uleb128 0x40
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 596


 27750 0218 18       		.uleb128 0x18
 27751 0219 9642     		.uleb128 0x2116
 27752 021b 19       		.uleb128 0x19
 27753 021c 01       		.uleb128 0x1
 27754 021d 13       		.uleb128 0x13
 27755 021e 00       		.byte	0
 27756 021f 00       		.byte	0
 27757 0220 28       		.uleb128 0x28
 27758 0221 2E       		.uleb128 0x2e
 27759 0222 01       		.byte	0x1
 27760 0223 3F       		.uleb128 0x3f
 27761 0224 19       		.uleb128 0x19
 27762 0225 03       		.uleb128 0x3
 27763 0226 0E       		.uleb128 0xe
 27764 0227 3A       		.uleb128 0x3a
 27765 0228 0B       		.uleb128 0xb
 27766 0229 3B       		.uleb128 0x3b
 27767 022a 05       		.uleb128 0x5
 27768 022b 27       		.uleb128 0x27
 27769 022c 19       		.uleb128 0x19
 27770 022d 11       		.uleb128 0x11
 27771 022e 01       		.uleb128 0x1
 27772 022f 12       		.uleb128 0x12
 27773 0230 06       		.uleb128 0x6
 27774 0231 40       		.uleb128 0x40
 27775 0232 18       		.uleb128 0x18
 27776 0233 9742     		.uleb128 0x2117
 27777 0235 19       		.uleb128 0x19
 27778 0236 01       		.uleb128 0x1
 27779 0237 13       		.uleb128 0x13
 27780 0238 00       		.byte	0
 27781 0239 00       		.byte	0
 27782 023a 29       		.uleb128 0x29
 27783 023b 05       		.uleb128 0x5
 27784 023c 00       		.byte	0
 27785 023d 03       		.uleb128 0x3
 27786 023e 08       		.uleb128 0x8
 27787 023f 3A       		.uleb128 0x3a
 27788 0240 0B       		.uleb128 0xb
 27789 0241 3B       		.uleb128 0x3b
 27790 0242 05       		.uleb128 0x5
 27791 0243 49       		.uleb128 0x49
 27792 0244 13       		.uleb128 0x13
 27793 0245 02       		.uleb128 0x2
 27794 0246 18       		.uleb128 0x18
 27795 0247 00       		.byte	0
 27796 0248 00       		.byte	0
 27797 0249 2A       		.uleb128 0x2a
 27798 024a 2E       		.uleb128 0x2e
 27799 024b 01       		.byte	0x1
 27800 024c 3F       		.uleb128 0x3f
 27801 024d 19       		.uleb128 0x19
 27802 024e 03       		.uleb128 0x3
 27803 024f 0E       		.uleb128 0xe
 27804 0250 3A       		.uleb128 0x3a
 27805 0251 0B       		.uleb128 0xb
 27806 0252 3B       		.uleb128 0x3b
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 597


 27807 0253 05       		.uleb128 0x5
 27808 0254 27       		.uleb128 0x27
 27809 0255 19       		.uleb128 0x19
 27810 0256 49       		.uleb128 0x49
 27811 0257 13       		.uleb128 0x13
 27812 0258 11       		.uleb128 0x11
 27813 0259 01       		.uleb128 0x1
 27814 025a 12       		.uleb128 0x12
 27815 025b 06       		.uleb128 0x6
 27816 025c 40       		.uleb128 0x40
 27817 025d 18       		.uleb128 0x18
 27818 025e 9742     		.uleb128 0x2117
 27819 0260 19       		.uleb128 0x19
 27820 0261 01       		.uleb128 0x1
 27821 0262 13       		.uleb128 0x13
 27822 0263 00       		.byte	0
 27823 0264 00       		.byte	0
 27824 0265 2B       		.uleb128 0x2b
 27825 0266 2E       		.uleb128 0x2e
 27826 0267 01       		.byte	0x1
 27827 0268 3F       		.uleb128 0x3f
 27828 0269 19       		.uleb128 0x19
 27829 026a 03       		.uleb128 0x3
 27830 026b 0E       		.uleb128 0xe
 27831 026c 3A       		.uleb128 0x3a
 27832 026d 0B       		.uleb128 0xb
 27833 026e 3B       		.uleb128 0x3b
 27834 026f 05       		.uleb128 0x5
 27835 0270 27       		.uleb128 0x27
 27836 0271 19       		.uleb128 0x19
 27837 0272 49       		.uleb128 0x49
 27838 0273 13       		.uleb128 0x13
 27839 0274 11       		.uleb128 0x11
 27840 0275 01       		.uleb128 0x1
 27841 0276 12       		.uleb128 0x12
 27842 0277 06       		.uleb128 0x6
 27843 0278 40       		.uleb128 0x40
 27844 0279 18       		.uleb128 0x18
 27845 027a 9642     		.uleb128 0x2116
 27846 027c 19       		.uleb128 0x19
 27847 027d 01       		.uleb128 0x1
 27848 027e 13       		.uleb128 0x13
 27849 027f 00       		.byte	0
 27850 0280 00       		.byte	0
 27851 0281 2C       		.uleb128 0x2c
 27852 0282 2E       		.uleb128 0x2e
 27853 0283 00       		.byte	0
 27854 0284 3F       		.uleb128 0x3f
 27855 0285 19       		.uleb128 0x19
 27856 0286 03       		.uleb128 0x3
 27857 0287 0E       		.uleb128 0xe
 27858 0288 3A       		.uleb128 0x3a
 27859 0289 0B       		.uleb128 0xb
 27860 028a 3B       		.uleb128 0x3b
 27861 028b 05       		.uleb128 0x5
 27862 028c 27       		.uleb128 0x27
 27863 028d 19       		.uleb128 0x19
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 598


 27864 028e 11       		.uleb128 0x11
 27865 028f 01       		.uleb128 0x1
 27866 0290 12       		.uleb128 0x12
 27867 0291 06       		.uleb128 0x6
 27868 0292 40       		.uleb128 0x40
 27869 0293 18       		.uleb128 0x18
 27870 0294 9742     		.uleb128 0x2117
 27871 0296 19       		.uleb128 0x19
 27872 0297 00       		.byte	0
 27873 0298 00       		.byte	0
 27874 0299 2D       		.uleb128 0x2d
 27875 029a 2E       		.uleb128 0x2e
 27876 029b 01       		.byte	0x1
 27877 029c 3F       		.uleb128 0x3f
 27878 029d 19       		.uleb128 0x19
 27879 029e 03       		.uleb128 0x3
 27880 029f 0E       		.uleb128 0xe
 27881 02a0 3A       		.uleb128 0x3a
 27882 02a1 0B       		.uleb128 0xb
 27883 02a2 3B       		.uleb128 0x3b
 27884 02a3 05       		.uleb128 0x5
 27885 02a4 49       		.uleb128 0x49
 27886 02a5 13       		.uleb128 0x13
 27887 02a6 11       		.uleb128 0x11
 27888 02a7 01       		.uleb128 0x1
 27889 02a8 12       		.uleb128 0x12
 27890 02a9 06       		.uleb128 0x6
 27891 02aa 40       		.uleb128 0x40
 27892 02ab 18       		.uleb128 0x18
 27893 02ac 9642     		.uleb128 0x2116
 27894 02ae 19       		.uleb128 0x19
 27895 02af 01       		.uleb128 0x1
 27896 02b0 13       		.uleb128 0x13
 27897 02b1 00       		.byte	0
 27898 02b2 00       		.byte	0
 27899 02b3 2E       		.uleb128 0x2e
 27900 02b4 2E       		.uleb128 0x2e
 27901 02b5 00       		.byte	0
 27902 02b6 3F       		.uleb128 0x3f
 27903 02b7 19       		.uleb128 0x19
 27904 02b8 03       		.uleb128 0x3
 27905 02b9 0E       		.uleb128 0xe
 27906 02ba 3A       		.uleb128 0x3a
 27907 02bb 0B       		.uleb128 0xb
 27908 02bc 3B       		.uleb128 0x3b
 27909 02bd 05       		.uleb128 0x5
 27910 02be 11       		.uleb128 0x11
 27911 02bf 01       		.uleb128 0x1
 27912 02c0 12       		.uleb128 0x12
 27913 02c1 06       		.uleb128 0x6
 27914 02c2 40       		.uleb128 0x40
 27915 02c3 18       		.uleb128 0x18
 27916 02c4 9642     		.uleb128 0x2116
 27917 02c6 19       		.uleb128 0x19
 27918 02c7 00       		.byte	0
 27919 02c8 00       		.byte	0
 27920 02c9 2F       		.uleb128 0x2f
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 599


 27921 02ca 34       		.uleb128 0x34
 27922 02cb 00       		.byte	0
 27923 02cc 03       		.uleb128 0x3
 27924 02cd 0E       		.uleb128 0xe
 27925 02ce 3A       		.uleb128 0x3a
 27926 02cf 0B       		.uleb128 0xb
 27927 02d0 3B       		.uleb128 0x3b
 27928 02d1 05       		.uleb128 0x5
 27929 02d2 49       		.uleb128 0x49
 27930 02d3 13       		.uleb128 0x13
 27931 02d4 3F       		.uleb128 0x3f
 27932 02d5 19       		.uleb128 0x19
 27933 02d6 3C       		.uleb128 0x3c
 27934 02d7 19       		.uleb128 0x19
 27935 02d8 00       		.byte	0
 27936 02d9 00       		.byte	0
 27937 02da 30       		.uleb128 0x30
 27938 02db 34       		.uleb128 0x34
 27939 02dc 00       		.byte	0
 27940 02dd 03       		.uleb128 0x3
 27941 02de 0E       		.uleb128 0xe
 27942 02df 3A       		.uleb128 0x3a
 27943 02e0 0B       		.uleb128 0xb
 27944 02e1 3B       		.uleb128 0x3b
 27945 02e2 0B       		.uleb128 0xb
 27946 02e3 49       		.uleb128 0x49
 27947 02e4 13       		.uleb128 0x13
 27948 02e5 3F       		.uleb128 0x3f
 27949 02e6 19       		.uleb128 0x19
 27950 02e7 02       		.uleb128 0x2
 27951 02e8 18       		.uleb128 0x18
 27952 02e9 00       		.byte	0
 27953 02ea 00       		.byte	0
 27954 02eb 00       		.byte	0
 27955              		.section	.debug_aranges,"",%progbits
 27956 0000 B4010000 		.4byte	0x1b4
 27957 0004 0200     		.2byte	0x2
 27958 0006 00000000 		.4byte	.Ldebug_info0
 27959 000a 04       		.byte	0x4
 27960 000b 00       		.byte	0
 27961 000c 0000     		.2byte	0
 27962 000e 0000     		.2byte	0
 27963 0010 00000000 		.4byte	.LFB64
 27964 0014 1C050000 		.4byte	.LFE64-.LFB64
 27965 0018 00000000 		.4byte	.LFB65
 27966 001c 22000000 		.4byte	.LFE65-.LFB65
 27967 0020 00000000 		.4byte	.LFB66
 27968 0024 64010000 		.4byte	.LFE66-.LFB66
 27969 0028 00000000 		.4byte	.LFB67
 27970 002c E4220000 		.4byte	.LFE67-.LFB67
 27971 0030 00000000 		.4byte	.LFB68
 27972 0034 30190000 		.4byte	.LFE68-.LFB68
 27973 0038 00000000 		.4byte	.LFB69
 27974 003c F40D0000 		.4byte	.LFE69-.LFB69
 27975 0040 00000000 		.4byte	.LFB70
 27976 0044 90000000 		.4byte	.LFE70-.LFB70
 27977 0048 00000000 		.4byte	.LFB71
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 600


 27978 004c E81B0000 		.4byte	.LFE71-.LFB71
 27979 0050 00000000 		.4byte	.LFB72
 27980 0054 90040000 		.4byte	.LFE72-.LFB72
 27981 0058 00000000 		.4byte	.LFB73
 27982 005c 5C020000 		.4byte	.LFE73-.LFB73
 27983 0060 00000000 		.4byte	.LFB74
 27984 0064 80120000 		.4byte	.LFE74-.LFB74
 27985 0068 00000000 		.4byte	.LFB75
 27986 006c DC000000 		.4byte	.LFE75-.LFB75
 27987 0070 00000000 		.4byte	.LFB76
 27988 0074 80010000 		.4byte	.LFE76-.LFB76
 27989 0078 00000000 		.4byte	.LFB77
 27990 007c 28000000 		.4byte	.LFE77-.LFB77
 27991 0080 00000000 		.4byte	.LFB78
 27992 0084 F0000000 		.4byte	.LFE78-.LFB78
 27993 0088 00000000 		.4byte	.LFB79
 27994 008c 74030000 		.4byte	.LFE79-.LFB79
 27995 0090 00000000 		.4byte	.LFB80
 27996 0094 84000000 		.4byte	.LFE80-.LFB80
 27997 0098 00000000 		.4byte	.LFB81
 27998 009c 88000000 		.4byte	.LFE81-.LFB81
 27999 00a0 00000000 		.4byte	.LFB82
 28000 00a4 A0000000 		.4byte	.LFE82-.LFB82
 28001 00a8 00000000 		.4byte	.LFB83
 28002 00ac 3E000000 		.4byte	.LFE83-.LFB83
 28003 00b0 00000000 		.4byte	.LFB84
 28004 00b4 2E000000 		.4byte	.LFE84-.LFB84
 28005 00b8 00000000 		.4byte	.LFB85
 28006 00bc 98000000 		.4byte	.LFE85-.LFB85
 28007 00c0 00000000 		.4byte	.LFB86
 28008 00c4 80000000 		.4byte	.LFE86-.LFB86
 28009 00c8 00000000 		.4byte	.LFB87
 28010 00cc 5C000000 		.4byte	.LFE87-.LFB87
 28011 00d0 00000000 		.4byte	.LFB88
 28012 00d4 28060000 		.4byte	.LFE88-.LFB88
 28013 00d8 00000000 		.4byte	.LFB89
 28014 00dc 40020000 		.4byte	.LFE89-.LFB89
 28015 00e0 00000000 		.4byte	.LFB90
 28016 00e4 28000000 		.4byte	.LFE90-.LFB90
 28017 00e8 00000000 		.4byte	.LFB91
 28018 00ec 78000000 		.4byte	.LFE91-.LFB91
 28019 00f0 00000000 		.4byte	.LFB92
 28020 00f4 B0000000 		.4byte	.LFE92-.LFB92
 28021 00f8 00000000 		.4byte	.LFB93
 28022 00fc 28010000 		.4byte	.LFE93-.LFB93
 28023 0100 00000000 		.4byte	.LFB94
 28024 0104 B8000000 		.4byte	.LFE94-.LFB94
 28025 0108 00000000 		.4byte	.LFB95
 28026 010c B8000000 		.4byte	.LFE95-.LFB95
 28027 0110 00000000 		.4byte	.LFB96
 28028 0114 5C000000 		.4byte	.LFE96-.LFB96
 28029 0118 00000000 		.4byte	.LFB97
 28030 011c 40000000 		.4byte	.LFE97-.LFB97
 28031 0120 00000000 		.4byte	.LFB98
 28032 0124 34000000 		.4byte	.LFE98-.LFB98
 28033 0128 00000000 		.4byte	.LFB99
 28034 012c 34000000 		.4byte	.LFE99-.LFB99
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 601


 28035 0130 00000000 		.4byte	.LFB100
 28036 0134 38010000 		.4byte	.LFE100-.LFB100
 28037 0138 00000000 		.4byte	.LFB101
 28038 013c EC000000 		.4byte	.LFE101-.LFB101
 28039 0140 00000000 		.4byte	.LFB102
 28040 0144 64000000 		.4byte	.LFE102-.LFB102
 28041 0148 00000000 		.4byte	.LFB103
 28042 014c A8000000 		.4byte	.LFE103-.LFB103
 28043 0150 00000000 		.4byte	.LFB104
 28044 0154 34000000 		.4byte	.LFE104-.LFB104
 28045 0158 00000000 		.4byte	.LFB105
 28046 015c 20000000 		.4byte	.LFE105-.LFB105
 28047 0160 00000000 		.4byte	.LFB106
 28048 0164 A0000000 		.4byte	.LFE106-.LFB106
 28049 0168 00000000 		.4byte	.LFB107
 28050 016c BC010000 		.4byte	.LFE107-.LFB107
 28051 0170 00000000 		.4byte	.LFB108
 28052 0174 60000000 		.4byte	.LFE108-.LFB108
 28053 0178 00000000 		.4byte	.LFB109
 28054 017c 98050000 		.4byte	.LFE109-.LFB109
 28055 0180 00000000 		.4byte	.LFB110
 28056 0184 8C000000 		.4byte	.LFE110-.LFB110
 28057 0188 00000000 		.4byte	.LFB111
 28058 018c EC000000 		.4byte	.LFE111-.LFB111
 28059 0190 00000000 		.4byte	.LFB112
 28060 0194 5C000000 		.4byte	.LFE112-.LFB112
 28061 0198 00000000 		.4byte	.LFB113
 28062 019c C0000000 		.4byte	.LFE113-.LFB113
 28063 01a0 00000000 		.4byte	.LFB114
 28064 01a4 54010000 		.4byte	.LFE114-.LFB114
 28065 01a8 00000000 		.4byte	.LFB115
 28066 01ac B0000000 		.4byte	.LFE115-.LFB115
 28067 01b0 00000000 		.4byte	0
 28068 01b4 00000000 		.4byte	0
 28069              		.section	.debug_ranges,"",%progbits
 28070              	.Ldebug_ranges0:
 28071 0000 00000000 		.4byte	.LFB64
 28072 0004 1C050000 		.4byte	.LFE64
 28073 0008 00000000 		.4byte	.LFB65
 28074 000c 22000000 		.4byte	.LFE65
 28075 0010 00000000 		.4byte	.LFB66
 28076 0014 64010000 		.4byte	.LFE66
 28077 0018 00000000 		.4byte	.LFB67
 28078 001c E4220000 		.4byte	.LFE67
 28079 0020 00000000 		.4byte	.LFB68
 28080 0024 30190000 		.4byte	.LFE68
 28081 0028 00000000 		.4byte	.LFB69
 28082 002c F40D0000 		.4byte	.LFE69
 28083 0030 00000000 		.4byte	.LFB70
 28084 0034 90000000 		.4byte	.LFE70
 28085 0038 00000000 		.4byte	.LFB71
 28086 003c E81B0000 		.4byte	.LFE71
 28087 0040 00000000 		.4byte	.LFB72
 28088 0044 90040000 		.4byte	.LFE72
 28089 0048 00000000 		.4byte	.LFB73
 28090 004c 5C020000 		.4byte	.LFE73
 28091 0050 00000000 		.4byte	.LFB74
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 602


 28092 0054 80120000 		.4byte	.LFE74
 28093 0058 00000000 		.4byte	.LFB75
 28094 005c DC000000 		.4byte	.LFE75
 28095 0060 00000000 		.4byte	.LFB76
 28096 0064 80010000 		.4byte	.LFE76
 28097 0068 00000000 		.4byte	.LFB77
 28098 006c 28000000 		.4byte	.LFE77
 28099 0070 00000000 		.4byte	.LFB78
 28100 0074 F0000000 		.4byte	.LFE78
 28101 0078 00000000 		.4byte	.LFB79
 28102 007c 74030000 		.4byte	.LFE79
 28103 0080 00000000 		.4byte	.LFB80
 28104 0084 84000000 		.4byte	.LFE80
 28105 0088 00000000 		.4byte	.LFB81
 28106 008c 88000000 		.4byte	.LFE81
 28107 0090 00000000 		.4byte	.LFB82
 28108 0094 A0000000 		.4byte	.LFE82
 28109 0098 00000000 		.4byte	.LFB83
 28110 009c 3E000000 		.4byte	.LFE83
 28111 00a0 00000000 		.4byte	.LFB84
 28112 00a4 2E000000 		.4byte	.LFE84
 28113 00a8 00000000 		.4byte	.LFB85
 28114 00ac 98000000 		.4byte	.LFE85
 28115 00b0 00000000 		.4byte	.LFB86
 28116 00b4 80000000 		.4byte	.LFE86
 28117 00b8 00000000 		.4byte	.LFB87
 28118 00bc 5C000000 		.4byte	.LFE87
 28119 00c0 00000000 		.4byte	.LFB88
 28120 00c4 28060000 		.4byte	.LFE88
 28121 00c8 00000000 		.4byte	.LFB89
 28122 00cc 40020000 		.4byte	.LFE89
 28123 00d0 00000000 		.4byte	.LFB90
 28124 00d4 28000000 		.4byte	.LFE90
 28125 00d8 00000000 		.4byte	.LFB91
 28126 00dc 78000000 		.4byte	.LFE91
 28127 00e0 00000000 		.4byte	.LFB92
 28128 00e4 B0000000 		.4byte	.LFE92
 28129 00e8 00000000 		.4byte	.LFB93
 28130 00ec 28010000 		.4byte	.LFE93
 28131 00f0 00000000 		.4byte	.LFB94
 28132 00f4 B8000000 		.4byte	.LFE94
 28133 00f8 00000000 		.4byte	.LFB95
 28134 00fc B8000000 		.4byte	.LFE95
 28135 0100 00000000 		.4byte	.LFB96
 28136 0104 5C000000 		.4byte	.LFE96
 28137 0108 00000000 		.4byte	.LFB97
 28138 010c 40000000 		.4byte	.LFE97
 28139 0110 00000000 		.4byte	.LFB98
 28140 0114 34000000 		.4byte	.LFE98
 28141 0118 00000000 		.4byte	.LFB99
 28142 011c 34000000 		.4byte	.LFE99
 28143 0120 00000000 		.4byte	.LFB100
 28144 0124 38010000 		.4byte	.LFE100
 28145 0128 00000000 		.4byte	.LFB101
 28146 012c EC000000 		.4byte	.LFE101
 28147 0130 00000000 		.4byte	.LFB102
 28148 0134 64000000 		.4byte	.LFE102
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 603


 28149 0138 00000000 		.4byte	.LFB103
 28150 013c A8000000 		.4byte	.LFE103
 28151 0140 00000000 		.4byte	.LFB104
 28152 0144 34000000 		.4byte	.LFE104
 28153 0148 00000000 		.4byte	.LFB105
 28154 014c 20000000 		.4byte	.LFE105
 28155 0150 00000000 		.4byte	.LFB106
 28156 0154 A0000000 		.4byte	.LFE106
 28157 0158 00000000 		.4byte	.LFB107
 28158 015c BC010000 		.4byte	.LFE107
 28159 0160 00000000 		.4byte	.LFB108
 28160 0164 60000000 		.4byte	.LFE108
 28161 0168 00000000 		.4byte	.LFB109
 28162 016c 98050000 		.4byte	.LFE109
 28163 0170 00000000 		.4byte	.LFB110
 28164 0174 8C000000 		.4byte	.LFE110
 28165 0178 00000000 		.4byte	.LFB111
 28166 017c EC000000 		.4byte	.LFE111
 28167 0180 00000000 		.4byte	.LFB112
 28168 0184 5C000000 		.4byte	.LFE112
 28169 0188 00000000 		.4byte	.LFB113
 28170 018c C0000000 		.4byte	.LFE113
 28171 0190 00000000 		.4byte	.LFB114
 28172 0194 54010000 		.4byte	.LFE114
 28173 0198 00000000 		.4byte	.LFB115
 28174 019c B0000000 		.4byte	.LFE115
 28175 01a0 00000000 		.4byte	0
 28176 01a4 00000000 		.4byte	0
 28177              		.section	.debug_line,"",%progbits
 28178              	.Ldebug_line0:
 28179 0000 5D1A0000 		.section	.debug_str,"MS",%progbits,1
 28179      0200C001 
 28179      00000201 
 28179      FB0E0D00 
 28179      01010101 
 28180              	.LASF218:
 28181 0000 696E666F 		.ascii	"infoSend\000"
 28181      53656E64 
 28181      00
 28182              	.LASF107:
 28183 0009 656D675F 		.ascii	"emg_act_counter\000"
 28183      6163745F 
 28183      636F756E 
 28183      74657200 
 28184              	.LASF267:
 28185 0019 69645F73 		.ascii	"id_str\000"
 28185      747200
 28186              	.LASF252:
 28187 0020 66736D5F 		.ascii	"fsm_activation_mode_menu\000"
 28187      61637469 
 28187      76617469 
 28187      6F6E5F6D 
 28187      6F64655F 
 28188              	.LASF25:
 28189 0039 73697A65 		.ascii	"sizetype\000"
 28189      74797065 
 28189      00
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 604


 28190              	.LASF114:
 28191 0042 706F7765 		.ascii	"power_cycles\000"
 28191      725F6379 
 28191      636C6573 
 28191      00
 28192              	.LASF33:
 28193 004f 434D445F 		.ascii	"CMD_INIT_MEM\000"
 28193      494E4954 
 28193      5F4D454D 
 28193      00
 28194              	.LASF340:
 28195 005c 676C5F63 		.ascii	"gl_c\000"
 28195      00
 28196              	.LASF198:
 28197 0061 77726973 		.ascii	"wrist_direction_association\000"
 28197      745F6469 
 28197      72656374 
 28197      696F6E5F 
 28197      6173736F 
 28198              	.LASF65:
 28199 007d 494E5055 		.ascii	"INPUT_MODE_EMG_FCFS_ADV\000"
 28199      545F4D4F 
 28199      44455F45 
 28199      4D475F46 
 28199      4346535F 
 28200              	.LASF36:
 28201 0095 434D445F 		.ascii	"CMD_ACTIVATE\000"
 28201      41435449 
 28201      56415445 
 28201      00
 28202              	.LASF203:
 28203 00a2 75736572 		.ascii	"user\000"
 28203      00
 28204              	.LASF11:
 28205 00a7 696E7433 		.ascii	"int32_t\000"
 28205      325F7400 
 28206              	.LASF359:
 28207 00af 675F7278 		.ascii	"g_rx\000"
 28207      00
 28208              	.LASF102:
 28209 00b4 73745F64 		.ascii	"st_data\000"
 28209      61746100 
 28210              	.LASF291:
 28211 00bc 685F7469 		.ascii	"h_time\000"
 28211      6D6500
 28212              	.LASF305:
 28213 00c3 77726974 		.ascii	"writeStatus\000"
 28213      65537461 
 28213      74757300 
 28214              	.LASF112:
 28215 00cf 746F7461 		.ascii	"total_runtime\000"
 28215      6C5F7275 
 28215      6E74696D 
 28215      6500
 28216              	.LASF15:
 28217 00dd 75696E74 		.ascii	"uint32\000"
 28217      333200
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 605


 28218              	.LASF395:
 28219 00e4 636D645F 		.ascii	"cmd_set_baudrate\000"
 28219      7365745F 
 28219      62617564 
 28219      72617465 
 28219      00
 28220              	.LASF275:
 28221 00f5 7370695F 		.ascii	"spi_read_delay_str_len\000"
 28221      72656164 
 28221      5F64656C 
 28221      61795F73 
 28221      74725F6C 
 28222              	.LASF204:
 28223 010c 4A4F595F 		.ascii	"JOY_spec\000"
 28223      73706563 
 28223      00
 28224              	.LASF277:
 28225 0115 70726570 		.ascii	"prepare_generic_info\000"
 28225      6172655F 
 28225      67656E65 
 28225      7269635F 
 28225      696E666F 
 28226              	.LASF141:
 28227 012a 706F735F 		.ascii	"pos_lim_inf\000"
 28227      6C696D5F 
 28227      696E6600 
 28228              	.LASF244:
 28229 0136 5345434F 		.ascii	"SECOND_MOTOR_IDX\000"
 28229      4E445F4D 
 28229      4F544F52 
 28229      5F494458 
 28229      00
 28230              	.LASF333:
 28231 0147 636D645F 		.ascii	"cmd_get_inputs\000"
 28231      6765745F 
 28231      696E7075 
 28231      747300
 28232              	.LASF64:
 28233 0156 494E5055 		.ascii	"INPUT_MODE_EMG_FCFS\000"
 28233      545F4D4F 
 28233      44455F45 
 28233      4D475F46 
 28233      43465300 
 28234              	.LASF145:
 28235 016a 63757272 		.ascii	"curr_lookup\000"
 28235      5F6C6F6F 
 28235      6B757000 
 28236              	.LASF110:
 28237 0176 72657374 		.ascii	"rest_counter\000"
 28237      5F636F75 
 28237      6E746572 
 28237      00
 28238              	.LASF338:
 28239 0183 636D645F 		.ascii	"cmd_get_imu_readings\000"
 28239      6765745F 
 28239      696D755F 
 28239      72656164 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 606


 28239      696E6773 
 28240              	.LASF188:
 28241 0198 73745F4D 		.ascii	"st_MASTER_spec\000"
 28241      41535445 
 28241      525F7370 
 28241      656300
 28242              	.LASF270:
 28243 01a7 69645F73 		.ascii	"id_str_len\000"
 28243      74725F6C 
 28243      656E00
 28244              	.LASF63:
 28245 01b2 494E5055 		.ascii	"INPUT_MODE_EMG_INTEGRAL\000"
 28245      545F4D4F 
 28245      44455F45 
 28245      4D475F49 
 28245      4E544547 
 28246              	.LASF246:
 28247 01ca 6D5F746D 		.ascii	"m_tmp\000"
 28247      7000
 28248              	.LASF290:
 28249 01d0 765F6964 		.ascii	"v_idx\000"
 28249      7800
 28250              	.LASF16:
 28251 01d6 696E7438 		.ascii	"int8\000"
 28251      00
 28252              	.LASF223:
 28253 01db 6765745F 		.ascii	"get_param_list\000"
 28253      70617261 
 28253      6D5F6C69 
 28253      737400
 28254              	.LASF318:
 28255 01ea 636D645F 		.ascii	"cmd_get_accelerations\000"
 28255      6765745F 
 28255      61636365 
 28255      6C657261 
 28255      74696F6E 
 28256              	.LASF337:
 28257 0200 636D645F 		.ascii	"cmd_get_emg\000"
 28257      6765745F 
 28257      656D6700 
 28258              	.LASF160:
 28259 020c 73745F65 		.ascii	"st_emg\000"
 28259      6D6700
 28260              	.LASF108:
 28261 0213 706F7369 		.ascii	"position_hist\000"
 28261      74696F6E 
 28261      5F686973 
 28261      7400
 28262              	.LASF211:
 28263 0221 74656D70 		.ascii	"temp_value\000"
 28263      5F76616C 
 28263      756500
 28264              	.LASF289:
 28265 022c 7374725F 		.ascii	"str_data\000"
 28265      64617461 
 28265      00
 28266              	.LASF394:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 607


 28267 0235 72657375 		.ascii	"result\000"
 28267      6C7400
 28268              	.LASF269:
 28269 023c 7370695F 		.ascii	"spi_read_delay_str\000"
 28269      72656164 
 28269      5F64656C 
 28269      61795F73 
 28269      747200
 28270              	.LASF195:
 28271 024f 73745F57 		.ascii	"st_WR_spec\000"
 28271      525F7370 
 28271      656300
 28272              	.LASF105:
 28273 025a 72656164 		.ascii	"ready\000"
 28273      7900
 28274              	.LASF157:
 28275 0260 456E635F 		.ascii	"Enc_idx_use_for_control\000"
 28275      6964785F 
 28275      7573655F 
 28275      666F725F 
 28275      636F6E74 
 28276              	.LASF49:
 28277 0278 434D445F 		.ascii	"CMD_GET_JOYSTICK\000"
 28277      4745545F 
 28277      4A4F5953 
 28277      5449434B 
 28277      00
 28278              	.LASF62:
 28279 0289 494E5055 		.ascii	"INPUT_MODE_EMG_PROPORTIONAL\000"
 28279      545F4D4F 
 28279      44455F45 
 28279      4D475F50 
 28279      524F504F 
 28280              	.LASF123:
 28281 02a5 7573655F 		.ascii	"use_2nd_motor_flag\000"
 28281      326E645F 
 28281      6D6F746F 
 28281      725F666C 
 28281      616700
 28282              	.LASF329:
 28283 02b8 745F7374 		.ascii	"t_start\000"
 28283      61727400 
 28284              	.LASF115:
 28285 02c0 65786365 		.ascii	"excessive_signal_activity\000"
 28285      73736976 
 28285      655F7369 
 28285      676E616C 
 28285      5F616374 
 28286              	.LASF167:
 28287 02da 72656164 		.ascii	"read_imu_flag\000"
 28287      5F696D75 
 28287      5F666C61 
 28287      6700
 28288              	.LASF175:
 28289 02e8 7265636F 		.ascii	"record_EMG_history_on_SD\000"
 28289      72645F45 
 28289      4D475F68 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 608


 28289      6973746F 
 28289      72795F6F 
 28290              	.LASF363:
 28291 0301 74696D65 		.ascii	"timer_value\000"
 28291      725F7661 
 28291      6C756500 
 28292              	.LASF4:
 28293 030d 6C6F6E67 		.ascii	"long int\000"
 28293      20696E74 
 28293      00
 28294              	.LASF201:
 28295 0316 756E7573 		.ascii	"unused_bytes1\000"
 28295      65645F62 
 28295      79746573 
 28295      3100
 28296              	.LASF122:
 28297 0324 72657365 		.ascii	"reset_counters\000"
 28297      745F636F 
 28297      756E7465 
 28297      727300
 28298              	.LASF178:
 28299 0333 75736572 		.ascii	"user_emg\000"
 28299      5F656D67 
 28299      00
 28300              	.LASF346:
 28301 033c 636D645F 		.ascii	"cmd_get_SD_file\000"
 28301      6765745F 
 28301      53445F66 
 28301      696C6500 
 28302              	.LASF315:
 28303 034c 7365745A 		.ascii	"setZeros\000"
 28303      65726F73 
 28303      00
 28304              	.LASF117:
 28305 0355 756E7573 		.ascii	"unused_bytes\000"
 28305      65645F62 
 28305      79746573 
 28305      00
 28306              	.LASF207:
 28307 0362 61636365 		.ascii	"accel_value\000"
 28307      6C5F7661 
 28307      6C756500 
 28308              	.LASF227:
 28309 036e 4E554D5F 		.ascii	"NUM_ITEMS\000"
 28309      4954454D 
 28309      5300
 28310              	.LASF106:
 28311 0378 73745F63 		.ascii	"st_counters\000"
 28311      6F756E74 
 28311      65727300 
 28312              	.LASF250:
 28313 0384 4D454D5F 		.ascii	"MEM_P\000"
 28313      5000
 28314              	.LASF19:
 28315 038a 666C6F61 		.ascii	"float32\000"
 28315      74333200 
 28316              	.LASF344:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 609


 28317 0392 636D645F 		.ascii	"cmd_get_ADC_map\000"
 28317      6765745F 
 28317      4144435F 
 28317      6D617000 
 28318              	.LASF41:
 28319 03a2 434D445F 		.ascii	"CMD_GET_CURRENTS\000"
 28319      4745545F 
 28319      43555252 
 28319      454E5453 
 28319      00
 28320              	.LASF288:
 28321 03b3 70726570 		.ascii	"prepare_SD_EMG_history\000"
 28321      6172655F 
 28321      53445F45 
 28321      4D475F68 
 28321      6973746F 
 28322              	.LASF345:
 28323 03ca 636D645F 		.ascii	"cmd_get_ADC_raw\000"
 28323      6765745F 
 28323      4144435F 
 28323      72617700 
 28324              	.LASF378:
 28325 03da 73645061 		.ascii	"sdParam\000"
 28325      72616D00 
 28326              	.LASF332:
 28327 03e2 636D645F 		.ascii	"cmd_ping\000"
 28327      70696E67 
 28327      00
 28328              	.LASF276:
 28329 03eb 7370695F 		.ascii	"spi_delay_menu_len\000"
 28329      64656C61 
 28329      795F6D65 
 28329      6E755F6C 
 28329      656E00
 28330              	.LASF349:
 28331 03fe 636D645F 		.ascii	"cmd_remove_SD_file\000"
 28331      72656D6F 
 28331      76655F53 
 28331      445F6669 
 28331      6C6500
 28332              	.LASF314:
 28333 0411 6D656D49 		.ascii	"memInit_OtbkActWristMs\000"
 28333      6E69745F 
 28333      4F74626B 
 28333      41637457 
 28333      72697374 
 28334              	.LASF0:
 28335 0428 7369676E 		.ascii	"signed char\000"
 28335      65642063 
 28335      68617200 
 28336              	.LASF177:
 28337 0434 75736572 		.ascii	"user_code_string\000"
 28337      5F636F64 
 28337      655F7374 
 28337      72696E67 
 28337      00
 28338              	.LASF212:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 610


 28339 0445 73745F63 		.ascii	"st_calib\000"
 28339      616C6962 
 28339      00
 28340              	.LASF303:
 28341 044e 6D656D53 		.ascii	"memStore\000"
 28341      746F7265 
 28341      00
 28342              	.LASF348:
 28343 0457 66696C65 		.ascii	"filename\000"
 28343      6E616D65 
 28343      00
 28344              	.LASF73:
 28345 0460 6D6F746F 		.ascii	"motor_supply_type\000"
 28345      725F7375 
 28345      70706C79 
 28345      5F747970 
 28345      6500
 28346              	.LASF331:
 28347 0472 72656164 		.ascii	"read_flag\000"
 28347      5F666C61 
 28347      6700
 28348              	.LASF371:
 28349 047c 4144435F 		.ascii	"ADC_buf\000"
 28349      62756600 
 28350              	.LASF369:
 28351 0484 696E7465 		.ascii	"interrupt_flag\000"
 28351      72727570 
 28351      745F666C 
 28351      616700
 28352              	.LASF281:
 28353 0493 73746570 		.ascii	"step\000"
 28353      00
 28354              	.LASF1:
 28355 0498 756E7369 		.ascii	"unsigned char\000"
 28355      676E6564 
 28355      20636861 
 28355      7200
 28356              	.LASF151:
 28357 04a6 6E6F745F 		.ascii	"not_revers_motor_flag\000"
 28357      72657665 
 28357      72735F6D 
 28357      6F746F72 
 28357      5F666C61 
 28358              	.LASF352:
 28359 04bc 675F7265 		.ascii	"g_refNew\000"
 28359      664E6577 
 28359      00
 28360              	.LASF121:
 28361 04c5 72696768 		.ascii	"right_left\000"
 28361      745F6C65 
 28361      667400
 28362              	.LASF29:
 28363 04d0 434D445F 		.ascii	"CMD_STORE_DEFAULT_PARAMS\000"
 28363      53544F52 
 28363      455F4445 
 28363      4641554C 
 28363      545F5041 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 611


 28364              	.LASF149:
 28365 04e9 656E636F 		.ascii	"encoder_line\000"
 28365      6465725F 
 28365      6C696E65 
 28365      00
 28366              	.LASF271:
 28367 04f6 6E5F696D 		.ascii	"n_imu_str_len\000"
 28367      755F7374 
 28367      725F6C65 
 28367      6E00
 28368              	.LASF274:
 28369 0504 696D755F 		.ascii	"imu_table_str_len\000"
 28369      7461626C 
 28369      655F7374 
 28369      725F6C65 
 28369      6E00
 28370              	.LASF301:
 28371 0516 76616C75 		.ascii	"value\000"
 28371      6500
 28372              	.LASF206:
 28373 051c 666C6167 		.ascii	"flags\000"
 28373      7300
 28374              	.LASF101:
 28375 0522 70726573 		.ascii	"pressure\000"
 28375      73757265 
 28375      00
 28376              	.LASF37:
 28377 052b 434D445F 		.ascii	"CMD_GET_ACTIVATE\000"
 28377      4745545F 
 28377      41435449 
 28377      56415445 
 28377      00
 28378              	.LASF22:
 28379 053c 63686172 		.ascii	"char\000"
 28379      00
 28380              	.LASF144:
 28381 0541 6D61785F 		.ascii	"max_step_pos\000"
 28381      73746570 
 28381      5F706F73 
 28381      00
 28382              	.LASF384:
 28383 054e 675F696D 		.ascii	"g_imu\000"
 28383      7500
 28384              	.LASF307:
 28385 0554 7265745F 		.ascii	"ret_val\000"
 28385      76616C00 
 28386              	.LASF257:
 28387 055c 6D656E75 		.ascii	"menu_idx\000"
 28387      5F696478 
 28387      00
 28388              	.LASF263:
 28389 0565 73746172 		.ascii	"start_byte\000"
 28389      745F6279 
 28389      746500
 28390              	.LASF260:
 28391 0570 6E756D5F 		.ascii	"num_mag_cal_params\000"
 28391      6D61675F 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 612


 28391      63616C5F 
 28391      70617261 
 28391      6D7300
 28392              	.LASF150:
 28393 0583 70776D5F 		.ascii	"pwm_rate_limiter\000"
 28393      72617465 
 28393      5F6C696D 
 28393      69746572 
 28393      00
 28394              	.LASF130:
 28395 0594 6B5F645F 		.ascii	"k_d_c\000"
 28395      6300
 28396              	.LASF100:
 28397 059a 73745F66 		.ascii	"st_fb_meas\000"
 28397      625F6D65 
 28397      617300
 28398              	.LASF220:
 28399 05a5 7061636B 		.ascii	"packet_string\000"
 28399      65745F73 
 28399      7472696E 
 28399      6700
 28400              	.LASF155:
 28401 05b3 6D5F6D75 		.ascii	"m_mult\000"
 28401      6C7400
 28402              	.LASF129:
 28403 05ba 6B5F695F 		.ascii	"k_i_c\000"
 28403      6300
 28404              	.LASF304:
 28405 05c0 64697370 		.ascii	"displacement\000"
 28405      6C616365 
 28405      6D656E74 
 28405      00
 28406              	.LASF298:
 28407 05cd 64617461 		.ascii	"data_length\000"
 28407      5F6C656E 
 28407      67746800 
 28408              	.LASF142:
 28409 05d9 706F735F 		.ascii	"pos_lim_sup\000"
 28409      6C696D5F 
 28409      73757000 
 28410              	.LASF282:
 28411 05e5 5230315F 		.ascii	"R01_str\000"
 28411      73747200 
 28412              	.LASF163:
 28413 05ed 656D675F 		.ascii	"emg_speed\000"
 28413      73706565 
 28413      6400
 28414              	.LASF182:
 28415 05f7 72657374 		.ascii	"rest_vel\000"
 28415      5F76656C 
 28415      00
 28416              	.LASF233:
 28417 0600 7061636B 		.ascii	"packet_data\000"
 28417      65745F64 
 28417      61746100 
 28418              	.LASF118:
 28419 060c 73745F64 		.ascii	"st_device\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 613


 28419      65766963 
 28419      6500
 28420              	.LASF376:
 28421 0616 7046696C 		.ascii	"pFile\000"
 28421      6500
 28422              	.LASF174:
 28423 061c 4144435F 		.ascii	"ADC_conf\000"
 28423      636F6E66 
 28423      00
 28424              	.LASF295:
 28425 0625 636F6D6D 		.ascii	"commWrite\000"
 28425      57726974 
 28425      6500
 28426              	.LASF306:
 28427 062f 70616765 		.ascii	"pages\000"
 28427      7300
 28428              	.LASF310:
 28429 0635 6D656D49 		.ascii	"memInit\000"
 28429      6E697400 
 28430              	.LASF132:
 28431 063d 6B5F695F 		.ascii	"k_i_dl\000"
 28431      646C00
 28432              	.LASF38:
 28433 0644 434D445F 		.ascii	"CMD_SET_INPUTS\000"
 28433      5345545F 
 28433      494E5055 
 28433      545300
 28434              	.LASF103:
 28435 0653 62756666 		.ascii	"buffer\000"
 28435      657200
 28436              	.LASF134:
 28437 065a 6B5F705F 		.ascii	"k_p_c_dl\000"
 28437      635F646C 
 28437      00
 28438              	.LASF316:
 28439 0663 636D645F 		.ascii	"cmd_get_measurements\000"
 28439      6765745F 
 28439      6D656173 
 28439      7572656D 
 28439      656E7473 
 28440              	.LASF215:
 28441 0678 73706565 		.ascii	"speed\000"
 28441      6400
 28442              	.LASF219:
 28443 067e 72785F63 		.ascii	"rx_cmd\000"
 28443      6D6400
 28444              	.LASF88:
 28445 0685 54595045 		.ascii	"TYPE_DOUBLE\000"
 28445      5F444F55 
 28445      424C4500 
 28446              	.LASF354:
 28447 0691 675F6D65 		.ascii	"g_meas\000"
 28447      617300
 28448              	.LASF321:
 28449 0698 6C617374 		.ascii	"last_aux_int16\000"
 28449      5F617578 
 28449      5F696E74 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 614


 28449      313600
 28450              	.LASF77:
 28451 06a7 41434B5F 		.ascii	"ACK_ERROR\000"
 28451      4552524F 
 28451      5200
 28452              	.LASF373:
 28453 06b1 64617461 		.ascii	"data_encoder_raw\000"
 28453      5F656E63 
 28453      6F646572 
 28453      5F726177 
 28453      00
 28454              	.LASF60:
 28455 06c2 494E5055 		.ascii	"INPUT_MODE_EXTERNAL\000"
 28455      545F4D4F 
 28455      44455F45 
 28455      58544552 
 28455      4E414C00 
 28456              	.LASF248:
 28457 06d6 696E6465 		.ascii	"index\000"
 28457      7800
 28458              	.LASF193:
 28459 06dc 6D617869 		.ascii	"maximum_pressure_kPa\000"
 28459      6D756D5F 
 28459      70726573 
 28459      73757265 
 28459      5F6B5061 
 28460              	.LASF183:
 28461 06f1 72657374 		.ascii	"rest_position_flag\000"
 28461      5F706F73 
 28461      6974696F 
 28461      6E5F666C 
 28461      616700
 28462              	.LASF185:
 28463 0704 6A6F7973 		.ascii	"joystick_closure_speed\000"
 28463      7469636B 
 28463      5F636C6F 
 28463      73757265 
 28463      5F737065 
 28464              	.LASF347:
 28465 071b 66696C65 		.ascii	"filename_length\000"
 28465      6E616D65 
 28465      5F6C656E 
 28465      67746800 
 28466              	.LASF135:
 28467 072b 6B5F695F 		.ascii	"k_i_c_dl\000"
 28467      635F646C 
 28467      00
 28468              	.LASF327:
 28469 0734 636F6D6D 		.ascii	"commReadResCurrFromSH\000"
 28469      52656164 
 28469      52657343 
 28469      75727246 
 28469      726F6D53 
 28470              	.LASF326:
 28471 074a 636D645F 		.ascii	"cmd_get_currents_for_cuff\000"
 28471      6765745F 
 28471      63757272 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 615


 28471      656E7473 
 28471      5F666F72 
 28472              	.LASF266:
 28473 0764 6D61675F 		.ascii	"mag_param_str\000"
 28473      70617261 
 28473      6D5F7374 
 28473      7200
 28474              	.LASF370:
 28475 0772 72657365 		.ascii	"reset_PSoC_flag\000"
 28475      745F5053 
 28475      6F435F66 
 28475      6C616700 
 28476              	.LASF89:
 28477 0782 54595045 		.ascii	"TYPE_STRING\000"
 28477      5F535452 
 28477      494E4700 
 28478              	.LASF72:
 28479 078e 43555252 		.ascii	"CURR_AND_POS_CONTROL\000"
 28479      5F414E44 
 28479      5F504F53 
 28479      5F434F4E 
 28479      54524F4C 
 28480              	.LASF28:
 28481 07a3 434D445F 		.ascii	"CMD_STORE_PARAMS\000"
 28481      53544F52 
 28481      455F5041 
 28481      52414D53 
 28481      00
 28482              	.LASF230:
 28483 07b4 50415241 		.ascii	"PARAMS_STR\000"
 28483      4D535F53 
 28483      545200
 28484              	.LASF213:
 28485 07bf 656E6162 		.ascii	"enabled\000"
 28485      6C656400 
 28486              	.LASF7:
 28487 07c7 6C6F6E67 		.ascii	"long unsigned int\000"
 28487      20756E73 
 28487      69676E65 
 28487      6420696E 
 28487      7400
 28488              	.LASF32:
 28489 07d9 434D445F 		.ascii	"CMD_BOOTLOADER\000"
 28489      424F4F54 
 28489      4C4F4144 
 28489      455200
 28490              	.LASF187:
 28491 07e8 6A6F7973 		.ascii	"joystick_gains\000"
 28491      7469636B 
 28491      5F676169 
 28491      6E7300
 28492              	.LASF96:
 28493 07f7 686F6C64 		.ascii	"hold_curr\000"
 28493      5F637572 
 28493      7200
 28494              	.LASF66:
 28495 0801 494E5055 		.ascii	"INPUT_MODE_JOYSTICK\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 616


 28495      545F4D4F 
 28495      44455F4A 
 28495      4F595354 
 28495      49434B00 
 28496              	.LASF113:
 28497 0815 746F7461 		.ascii	"total_time_rest\000"
 28497      6C5F7469 
 28497      6D655F72 
 28497      65737400 
 28498              	.LASF222:
 28499 0825 7374725F 		.ascii	"str_sd_data\000"
 28499      73645F64 
 28499      61746100 
 28500              	.LASF137:
 28501 0831 61637469 		.ascii	"activ\000"
 28501      7600
 28502              	.LASF232:
 28503 0837 4D454E55 		.ascii	"MENU_STR\000"
 28503      5F535452 
 28503      00
 28504              	.LASF154:
 28505 0840 6D5F6F66 		.ascii	"m_off\000"
 28505      6600
 28506              	.LASF78:
 28507 0846 41434B5F 		.ascii	"ACK_OK\000"
 28507      4F4B00
 28508              	.LASF80:
 28509 084d 54595045 		.ascii	"TYPE_FLAG\000"
 28509      5F464C41 
 28509      4700
 28510              	.LASF210:
 28511 0857 71756174 		.ascii	"quat_value\000"
 28511      5F76616C 
 28511      756500
 28512              	.LASF262:
 28513 0862 7061636B 		.ascii	"packet_length\000"
 28513      65745F6C 
 28513      656E6774 
 28513      6800
 28514              	.LASF180:
 28515 0870 72657374 		.ascii	"rest_pos\000"
 28515      5F706F73 
 28515      00
 28516              	.LASF91:
 28517 0879 63757272 		.ascii	"curr\000"
 28517      00
 28518              	.LASF147:
 28519 087e 696E7075 		.ascii	"input_mode\000"
 28519      745F6D6F 
 28519      646500
 28520              	.LASF70:
 28521 0889 434F4E54 		.ascii	"CONTROL_PWM\000"
 28521      524F4C5F 
 28521      50574D00 
 28522              	.LASF43:
 28523 0895 434D445F 		.ascii	"CMD_GET_EMG\000"
 28523      4745545F 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 617


 28523      454D4700 
 28524              	.LASF311:
 28525 08a1 6D656D49 		.ascii	"memInit_SoftHandPro\000"
 28525      6E69745F 
 28525      536F6674 
 28525      48616E64 
 28525      50726F00 
 28526              	.LASF31:
 28527 08b5 434D445F 		.ascii	"CMD_GET_INFO\000"
 28527      4745545F 
 28527      494E464F 
 28527      00
 28528              	.LASF258:
 28529 08c2 6765745F 		.ascii	"get_IMU_param_list\000"
 28529      494D555F 
 28529      70617261 
 28529      6D5F6C69 
 28529      737400
 28530              	.LASF341:
 28531 08d5 73696E67 		.ascii	"single_packet\000"
 28531      6C655F70 
 28531      61636B65 
 28531      7400
 28532              	.LASF261:
 28533 08e3 66697273 		.ascii	"first_imu_parameter\000"
 28533      745F696D 
 28533      755F7061 
 28533      72616D65 
 28533      74657200 
 28534              	.LASF42:
 28535 08f7 434D445F 		.ascii	"CMD_GET_CURR_AND_MEAS\000"
 28535      4745545F 
 28535      43555252 
 28535      5F414E44 
 28535      5F4D4541 
 28536              	.LASF390:
 28537 090d 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 28537      43313120 
 28537      352E342E 
 28537      31203230 
 28537      31363036 
 28538 0940 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 28538      20726576 
 28538      6973696F 
 28538      6E203233 
 28538      37373135 
 28539 0973 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 28539      66756E63 
 28539      74696F6E 
 28539      2D736563 
 28539      74696F6E 
 28540              	.LASF93:
 28541 099b 73745F72 		.ascii	"st_ref\000"
 28541      656600
 28542              	.LASF319:
 28543 09a2 636D645F 		.ascii	"cmd_get_joystick\000"
 28543      6765745F 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 618


 28543      6A6F7973 
 28543      7469636B 
 28543      00
 28544              	.LASF47:
 28545 09b3 434D445F 		.ascii	"CMD_SET_CUFF_INPUTS\000"
 28545      5345545F 
 28545      43554646 
 28545      5F494E50 
 28545      55545300 
 28546              	.LASF179:
 28547 09c7 73745F53 		.ascii	"st_SH_spec\000"
 28547      485F7370 
 28547      656300
 28548              	.LASF362:
 28549 09d2 63616C69 		.ascii	"calib\000"
 28549      6200
 28550              	.LASF6:
 28551 09d8 5F5F7569 		.ascii	"__uint32_t\000"
 28551      6E743332 
 28551      5F7400
 28552              	.LASF8:
 28553 09e3 6C6F6E67 		.ascii	"long long int\000"
 28553      206C6F6E 
 28553      6720696E 
 28553      7400
 28554              	.LASF68:
 28555 09f1 53485F63 		.ascii	"SH_control_mode\000"
 28555      6F6E7472 
 28555      6F6C5F6D 
 28555      6F646500 
 28556              	.LASF82:
 28557 0a01 54595045 		.ascii	"TYPE_UINT8\000"
 28557      5F55494E 
 28557      543800
 28558              	.LASF325:
 28559 0a0c 636D645F 		.ascii	"cmd_get_currents\000"
 28559      6765745F 
 28559      63757272 
 28559      656E7473 
 28559      00
 28560              	.LASF75:
 28561 0a1d 4D41584F 		.ascii	"MAXON_12V\000"
 28561      4E5F3132 
 28561      5600
 28562              	.LASF21:
 28563 0a27 646F7562 		.ascii	"double\000"
 28563      6C6500
 28564              	.LASF56:
 28565 0a2e 434D445F 		.ascii	"CMD_GET_SD_SINGLE_FILE\000"
 28565      4745545F 
 28565      53445F53 
 28565      494E474C 
 28565      455F4649 
 28566              	.LASF153:
 28567 0a45 456E635F 		.ascii	"Enc_raw_read_conf\000"
 28567      7261775F 
 28567      72656164 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 619


 28567      5F636F6E 
 28567      6600
 28568              	.LASF216:
 28569 0a57 72657065 		.ascii	"repetitions\000"
 28569      74697469 
 28569      6F6E7300 
 28570              	.LASF143:
 28571 0a63 6D61785F 		.ascii	"max_step_neg\000"
 28571      73746570 
 28571      5F6E6567 
 28571      00
 28572              	.LASF388:
 28573 0a70 656D675F 		.ascii	"emg_history_next_idx\000"
 28573      68697374 
 28573      6F72795F 
 28573      6E657874 
 28573      5F696478 
 28574              	.LASF392:
 28575 0a85 433A5C55 		.ascii	"C:\\Users\\mgnocco\\Documents\\GitHub\\PSoC5\\Toast"
 28575      73657273 
 28575      5C6D676E 
 28575      6F63636F 
 28575      5C446F63 
 28576 0ab2 5C546F61 		.ascii	"\\Toast.cydsn\000"
 28576      73742E63 
 28576      7964736E 
 28576      00
 28577              	.LASF190:
 28578 0abf 736C6176 		.ascii	"slave_ID\000"
 28578      655F4944 
 28578      00
 28579              	.LASF368:
 28580 0ac8 72657365 		.ascii	"reset_last_value_flag\000"
 28580      745F6C61 
 28580      73745F76 
 28580      616C7565 
 28580      5F666C61 
 28581              	.LASF231:
 28582 0ade 43555354 		.ascii	"CUSTOM_PARAM_GET\000"
 28582      4F4D5F50 
 28582      4152414D 
 28582      5F474554 
 28582      00
 28583              	.LASF20:
 28584 0aef 666C6F61 		.ascii	"float\000"
 28584      7400
 28585              	.LASF169:
 28586 0af5 494D555F 		.ascii	"IMU_conf\000"
 28586      636F6E66 
 28586      00
 28587              	.LASF57:
 28588 0afe 434D445F 		.ascii	"CMD_REMOVE_SD_SINGLE_FILE\000"
 28588      52454D4F 
 28588      56455F53 
 28588      445F5349 
 28588      4E474C45 
 28589              	.LASF249:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 620


 28590 0b18 50415241 		.ascii	"PARAM_IDX\000"
 28590      4D5F4944 
 28590      5800
 28591              	.LASF97:
 28592 0b22 73745F61 		.ascii	"st_adc_meas\000"
 28592      64635F6D 
 28592      65617300 
 28593              	.LASF245:
 28594 0b2e 6D5F6164 		.ascii	"m_addr\000"
 28594      647200
 28595              	.LASF361:
 28596 0b35 635F6D65 		.ascii	"c_mem\000"
 28596      6D00
 28597              	.LASF297:
 28598 0b3b 64617461 		.ascii	"data_array\000"
 28598      5F617272 
 28598      617900
 28599              	.LASF10:
 28600 0b46 756E7369 		.ascii	"unsigned int\000"
 28600      676E6564 
 28600      20696E74 
 28600      00
 28601              	.LASF312:
 28602 0b53 6D656D49 		.ascii	"memInit_Master\000"
 28602      6E69745F 
 28602      4D617374 
 28602      657200
 28603              	.LASF234:
 28604 0b62 7061636B 		.ascii	"packet_lenght\000"
 28604      65745F6C 
 28604      656E6768 
 28604      7400
 28605              	.LASF300:
 28606 0b70 73656E64 		.ascii	"sendAcknowledgment\000"
 28606      41636B6E 
 28606      6F776C65 
 28606      64676D65 
 28606      6E7400
 28607              	.LASF285:
 28608 0b83 70726570 		.ascii	"prepare_SD_legend\000"
 28608      6172655F 
 28608      53445F6C 
 28608      6567656E 
 28608      6400
 28609              	.LASF385:
 28610 0b95 4D616743 		.ascii	"MagCal\000"
 28610      616C00
 28611              	.LASF58:
 28612 0b9c 53485F63 		.ascii	"SH_command\000"
 28612      6F6D6D61 
 28612      6E6400
 28613              	.LASF84:
 28614 0ba7 54595045 		.ascii	"TYPE_UINT16\000"
 28614      5F55494E 
 28614      54313600 
 28615              	.LASF200:
 28616 0bb3 666C6167 		.ascii	"flag\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 621


 28616      00
 28617              	.LASF320:
 28618 0bb8 636D645F 		.ascii	"cmd_set_inputs\000"
 28618      7365745F 
 28618      696E7075 
 28618      747300
 28619              	.LASF148:
 28620 0bc7 636F6E74 		.ascii	"control_mode\000"
 28620      726F6C5F 
 28620      6D6F6465 
 28620      00
 28621              	.LASF335:
 28622 0bd4 6F66665F 		.ascii	"off_1\000"
 28622      3100
 28623              	.LASF61:
 28624 0bda 494E5055 		.ascii	"INPUT_MODE_ENCODER3\000"
 28624      545F4D4F 
 28624      44455F45 
 28624      4E434F44 
 28624      45523300 
 28625              	.LASF296:
 28626 0bee 636F6D6D 		.ascii	"commWriteID\000"
 28626      57726974 
 28626      65494400 
 28627              	.LASF52:
 28628 0bfa 434D445F 		.ascii	"CMD_GET_ENCODER_CONF\000"
 28628      4745545F 
 28628      454E434F 
 28628      4445525F 
 28628      434F4E46 
 28629              	.LASF166:
 28630 0c0f 73745F69 		.ascii	"st_imu\000"
 28630      6D7500
 28631              	.LASF323:
 28632 0c16 636D645F 		.ascii	"cmd_get_activate\000"
 28632      6765745F 
 28632      61637469 
 28632      76617465 
 28632      00
 28633              	.LASF236:
 28634 0c27 73747269 		.ascii	"string_lenght\000"
 28634      6E675F6C 
 28634      656E6768 
 28634      7400
 28635              	.LASF87:
 28636 0c35 54595045 		.ascii	"TYPE_FLOAT\000"
 28636      5F464C4F 
 28636      415400
 28637              	.LASF254:
 28638 0c40 43555354 		.ascii	"CUSTOM_PARAM_SET_LIST\000"
 28638      4F4D5F50 
 28638      4152414D 
 28638      5F534554 
 28638      5F4C4953 
 28639              	.LASF228:
 28640 0c56 4E554D5F 		.ascii	"NUM_STRUCT\000"
 28640      53545255 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 622


 28640      435400
 28641              	.LASF383:
 28642 0c61 73696E67 		.ascii	"single_imu_size\000"
 28642      6C655F69 
 28642      6D755F73 
 28642      697A6500 
 28643              	.LASF283:
 28644 0c71 70726570 		.ascii	"prepare_R01_info\000"
 28644      6172655F 
 28644      5230315F 
 28644      696E666F 
 28644      00
 28645              	.LASF98:
 28646 0c82 6164645F 		.ascii	"add_emg\000"
 28646      656D6700 
 28647              	.LASF83:
 28648 0c8a 54595045 		.ascii	"TYPE_INT16\000"
 28648      5F494E54 
 28648      313600
 28649              	.LASF240:
 28650 0c95 6175785F 		.ascii	"aux_uint16\000"
 28650      75696E74 
 28650      313600
 28651              	.LASF161:
 28652 0ca0 656D675F 		.ascii	"emg_threshold\000"
 28652      74687265 
 28652      73686F6C 
 28652      6400
 28653              	.LASF46:
 28654 0cae 434D445F 		.ascii	"CMD_GET_CURR_DIFF\000"
 28654      4745545F 
 28654      43555252 
 28654      5F444946 
 28654      4600
 28655              	.LASF158:
 28656 0cc0 6D6F746F 		.ascii	"motor_handle_ratio\000"
 28656      725F6861 
 28656      6E646C65 
 28656      5F726174 
 28656      696F00
 28657              	.LASF109:
 28658 0cd3 63757272 		.ascii	"current_hist\000"
 28658      656E745F 
 28658      68697374 
 28658      00
 28659              	.LASF71:
 28660 0ce0 434F4E54 		.ascii	"CONTROL_CURRENT\000"
 28660      524F4C5F 
 28660      43555252 
 28660      454E5400 
 28661              	.LASF24:
 28662 0cf0 6C6F6E67 		.ascii	"long double\000"
 28662      20646F75 
 28662      626C6500 
 28663              	.LASF86:
 28664 0cfc 54595045 		.ascii	"TYPE_UINT32\000"
 28664      5F55494E 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 623


 28664      54333200 
 28665              	.LASF191:
 28666 0d08 73745F46 		.ascii	"st_FB_spec\000"
 28666      425F7370 
 28666      656300
 28667              	.LASF225:
 28668 0d13 5641525F 		.ascii	"VAR_P\000"
 28668      5000
 28669              	.LASF253:
 28670 0d19 43555354 		.ascii	"CUSTOM_PARAM_GET_LIST\000"
 28670      4F4D5F50 
 28670      4152414D 
 28670      5F474554 
 28670      5F4C4953 
 28671              	.LASF116:
 28672 0d2f 6D6F7469 		.ascii	"motion_counter\000"
 28672      6F6E5F63 
 28672      6F756E74 
 28672      657200
 28673              	.LASF299:
 28674 0d3e 63686563 		.ascii	"checksum\000"
 28674      6B73756D 
 28674      00
 28675              	.LASF353:
 28676 0d47 675F7265 		.ascii	"g_refOld\000"
 28676      664F6C64 
 28676      00
 28677              	.LASF35:
 28678 0d50 434D445F 		.ascii	"CMD_HAND_CALIBRATE\000"
 28678      48414E44 
 28678      5F43414C 
 28678      49425241 
 28678      544500
 28679              	.LASF208:
 28680 0d63 6779726F 		.ascii	"gyro_value\000"
 28680      5F76616C 
 28680      756500
 28681              	.LASF171:
 28682 0d6e 63757272 		.ascii	"curr_time\000"
 28682      5F74696D 
 28682      6500
 28683              	.LASF156:
 28684 0d78 646F7562 		.ascii	"double_encoder_on_off\000"
 28684      6C655F65 
 28684      6E636F64 
 28684      65725F6F 
 28684      6E5F6F66 
 28685              	.LASF168:
 28686 0d8e 5350495F 		.ascii	"SPI_read_delay\000"
 28686      72656164 
 28686      5F64656C 
 28686      617900
 28687              	.LASF76:
 28688 0d9d 61636B6E 		.ascii	"acknowledgment_values\000"
 28688      6F776C65 
 28688      64676D65 
 28688      6E745F76 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 624


 28688      616C7565 
 28689              	.LASF243:
 28690 0db3 4D4F544F 		.ascii	"MOTOR_IDX\000"
 28690      525F4944 
 28690      5800
 28691              	.LASF309:
 28692 0dbd 6D656D52 		.ascii	"memRestore\000"
 28692      6573746F 
 28692      726500
 28693              	.LASF264:
 28694 0dc8 6E5F696D 		.ascii	"n_imu_str\000"
 28694      755F7374 
 28694      7200
 28695              	.LASF278:
 28696 0dd2 696E666F 		.ascii	"info_string\000"
 28696      5F737472 
 28696      696E6700 
 28697              	.LASF286:
 28698 0dde 70726570 		.ascii	"prepare_SD_info\000"
 28698      6172655F 
 28698      53445F69 
 28698      6E666F00 
 28699              	.LASF9:
 28700 0dee 6C6F6E67 		.ascii	"long long unsigned int\000"
 28700      206C6F6E 
 28700      6720756E 
 28700      7369676E 
 28700      65642069 
 28701              	.LASF85:
 28702 0e05 54595045 		.ascii	"TYPE_INT32\000"
 28702      5F494E54 
 28702      333200
 28703              	.LASF242:
 28704 0e10 6175785F 		.ascii	"aux_uint32\000"
 28704      75696E74 
 28704      333200
 28705              	.LASF104:
 28706 0e1b 6C656E67 		.ascii	"length\000"
 28706      746800
 28707              	.LASF255:
 28708 0e22 55534552 		.ascii	"USER_ID_PARAM\000"
 28708      5F49445F 
 28708      50415241 
 28708      4D00
 28709              	.LASF205:
 28710 0e30 73745F69 		.ascii	"st_imu_data\000"
 28710      6D755F64 
 28710      61746100 
 28711              	.LASF209:
 28712 0e3c 6D61675F 		.ascii	"mag_value\000"
 28712      76616C75 
 28712      6500
 28713              	.LASF92:
 28714 0e46 6F6E6F66 		.ascii	"onoff\000"
 28714      6600
 28715              	.LASF45:
 28716 0e4c 434D445F 		.ascii	"CMD_GET_ACCEL\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 625


 28716      4745545F 
 28716      41434345 
 28716      4C00
 28717              	.LASF317:
 28718 0e5a 636D645F 		.ascii	"cmd_get_velocities\000"
 28718      6765745F 
 28718      76656C6F 
 28718      63697469 
 28718      657300
 28719              	.LASF308:
 28720 0e6d 6D656D52 		.ascii	"memRecall\000"
 28720      6563616C 
 28720      6C00
 28721              	.LASF364:
 28722 0e77 74696D65 		.ascii	"timer_value0\000"
 28722      725F7661 
 28722      6C756530 
 28722      00
 28723              	.LASF48:
 28724 0e84 434D445F 		.ascii	"CMD_SET_BAUDRATE\000"
 28724      5345545F 
 28724      42415544 
 28724      52415445 
 28724      00
 28725              	.LASF128:
 28726 0e95 6B5F705F 		.ascii	"k_p_c\000"
 28726      6300
 28727              	.LASF268:
 28728 0e9b 696D755F 		.ascii	"imu_table_str\000"
 28728      7461626C 
 28728      655F7374 
 28728      7200
 28729              	.LASF365:
 28730 0ea9 6465765F 		.ascii	"dev_tension\000"
 28730      74656E73 
 28730      696F6E00 
 28731              	.LASF139:
 28732 0eb5 6D6F746F 		.ascii	"motor_driver_type\000"
 28732      725F6472 
 28732      69766572 
 28732      5F747970 
 28732      6500
 28733              	.LASF336:
 28734 0ec7 6D756C74 		.ascii	"mult_1\000"
 28734      5F3100
 28735              	.LASF280:
 28736 0ece 70726570 		.ascii	"prepare_counter_info\000"
 28736      6172655F 
 28736      636F756E 
 28736      7465725F 
 28736      696E666F 
 28737              	.LASF23:
 28738 0ee3 72656738 		.ascii	"reg8\000"
 28738      00
 28739              	.LASF194:
 28740 0ee8 70726F70 		.ascii	"prop_err_fb_gain\000"
 28740      5F657272 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 626


 28740      5F66625F 
 28740      6761696E 
 28740      00
 28741              	.LASF293:
 28742 0ef9 636F6D6D 		.ascii	"commWrite_old_id\000"
 28742      57726974 
 28742      655F6F6C 
 28742      645F6964 
 28742      00
 28743              	.LASF247:
 28744 0f0a 6D616E61 		.ascii	"manage_param_list\000"
 28744      67655F70 
 28744      6172616D 
 28744      5F6C6973 
 28744      7400
 28745              	.LASF30:
 28746 0f1c 434D445F 		.ascii	"CMD_RESTORE_PARAMS\000"
 28746      52455354 
 28746      4F52455F 
 28746      50415241 
 28746      4D5300
 28747              	.LASF377:
 28748 0f2f 73644669 		.ascii	"sdFile\000"
 28748      6C6500
 28749              	.LASF284:
 28750 0f36 70726570 		.ascii	"prepare_SD_param_info\000"
 28750      6172655F 
 28750      53445F70 
 28750      6172616D 
 28750      5F696E66 
 28751              	.LASF328:
 28752 0f4c 63757272 		.ascii	"curr_diff\000"
 28752      5F646966 
 28752      6600
 28753              	.LASF189:
 28754 0f56 736C6176 		.ascii	"slave_comm_active\000"
 28754      655F636F 
 28754      6D6D5F61 
 28754      63746976 
 28754      6500
 28755              	.LASF287:
 28756 0f68 70726570 		.ascii	"prepare_SD_EMG_History_legend\000"
 28756      6172655F 
 28756      53445F45 
 28756      4D475F48 
 28756      6973746F 
 28757              	.LASF294:
 28758 0f86 6F6C645F 		.ascii	"old_id\000"
 28758      696400
 28759              	.LASF393:
 28760 0f8d 5F5F5245 		.ascii	"__REV16\000"
 28760      56313600 
 28761              	.LASF374:
 28762 0f95 4E5F456E 		.ascii	"N_Encoder_Line_Connected\000"
 28762      636F6465 
 28762      725F4C69 
 28762      6E655F43 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 627


 28762      6F6E6E65 
 28763              	.LASF126:
 28764 0fae 6465765F 		.ascii	"dev_type\000"
 28764      74797065 
 28764      00
 28765              	.LASF176:
 28766 0fb7 73745F75 		.ascii	"st_user\000"
 28766      73657200 
 28767              	.LASF324:
 28768 0fbf 636D645F 		.ascii	"cmd_get_curr_and_meas\000"
 28768      6765745F 
 28768      63757272 
 28768      5F616E64 
 28768      5F6D6561 
 28769              	.LASF159:
 28770 0fd5 67656172 		.ascii	"gears_params\000"
 28770      735F7061 
 28770      72616D73 
 28770      00
 28771              	.LASF170:
 28772 0fe2 73745F65 		.ascii	"st_expansion\000"
 28772      7870616E 
 28772      73696F6E 
 28772      00
 28773              	.LASF164:
 28774 0fef 656D675F 		.ascii	"emg_calibration_flag\000"
 28774      63616C69 
 28774      62726174 
 28774      696F6E5F 
 28774      666C6167 
 28775              	.LASF94:
 28776 1004 73745F6D 		.ascii	"st_meas\000"
 28776      65617300 
 28777              	.LASF55:
 28778 100c 434D445F 		.ascii	"CMD_GET_ADC_RAW\000"
 28778      4745545F 
 28778      4144435F 
 28778      52415700 
 28779              	.LASF186:
 28780 101c 6A6F7973 		.ascii	"joystick_threshold\000"
 28780      7469636B 
 28780      5F746872 
 28780      6573686F 
 28780      6C6400
 28781              	.LASF74:
 28782 102f 4D41584F 		.ascii	"MAXON_24V\000"
 28782      4E5F3234 
 28782      5600
 28783              	.LASF67:
 28784 1039 494E5055 		.ascii	"INPUT_MODE_EMG_PROPORTIONAL_NC\000"
 28784      545F4D4F 
 28784      44455F45 
 28784      4D475F50 
 28784      524F504F 
 28785              	.LASF51:
 28786 1058 434D445F 		.ascii	"CMD_GET_IMU_PARAM\000"
 28786      4745545F 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 628


 28786      494D555F 
 28786      50415241 
 28786      4D00
 28787              	.LASF358:
 28788 106a 675F6662 		.ascii	"g_fb_meas\000"
 28788      5F6D6561 
 28788      7300
 28789              	.LASF53:
 28790 1074 434D445F 		.ascii	"CMD_GET_ENCODER_RAW\000"
 28790      4745545F 
 28790      454E434F 
 28790      4445525F 
 28790      52415700 
 28791              	.LASF334:
 28792 1088 636D645F 		.ascii	"cmd_store_params\000"
 28792      73746F72 
 28792      655F7061 
 28792      72616D73 
 28792      00
 28793              	.LASF360:
 28794 1099 675F6D65 		.ascii	"g_mem\000"
 28794      6D00
 28795              	.LASF40:
 28796 109f 434D445F 		.ascii	"CMD_GET_MEASUREMENTS\000"
 28796      4745545F 
 28796      4D454153 
 28796      5552454D 
 28796      454E5453 
 28797              	.LASF357:
 28798 10b4 675F6164 		.ascii	"g_adc_measOld\000"
 28798      635F6D65 
 28798      61734F6C 
 28798      6400
 28799              	.LASF343:
 28800 10c2 636D645F 		.ascii	"cmd_get_encoder_raw\000"
 28800      6765745F 
 28800      656E636F 
 28800      6465725F 
 28800      72617700 
 28801              	.LASF13:
 28802 10d6 75696E74 		.ascii	"uint8\000"
 28802      3800
 28803              	.LASF217:
 28804 10dc 636F6D6D 		.ascii	"commProcess\000"
 28804      50726F63 
 28804      65737300 
 28805              	.LASF184:
 28806 10e8 73745F4A 		.ascii	"st_JOY_spec\000"
 28806      4F595F73 
 28806      70656300 
 28807              	.LASF2:
 28808 10f4 73686F72 		.ascii	"short int\000"
 28808      7420696E 
 28808      7400
 28809              	.LASF313:
 28810 10fe 6D656D49 		.ascii	"memInit_AirChambersFb\000"
 28810      6E69745F 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 629


 28810      41697243 
 28810      68616D62 
 28810      65727346 
 28811              	.LASF272:
 28812 1114 6964735F 		.ascii	"ids_str_len\000"
 28812      7374725F 
 28812      6C656E00 
 28813              	.LASF133:
 28814 1120 6B5F645F 		.ascii	"k_d_dl\000"
 28814      646C00
 28815              	.LASF235:
 28816 1127 6964785F 		.ascii	"idx_menu\000"
 28816      6D656E75 
 28816      00
 28817              	.LASF99:
 28818 1130 6A6F7973 		.ascii	"joystick\000"
 28818      7469636B 
 28818      00
 28819              	.LASF202:
 28820 1139 6D6F746F 		.ascii	"motor\000"
 28820      7200
 28821              	.LASF380:
 28822 113f 4E5F494D 		.ascii	"N_IMU_Connected\000"
 28822      555F436F 
 28822      6E6E6563 
 28822      74656400 
 28823              	.LASF39:
 28824 114f 434D445F 		.ascii	"CMD_GET_INPUTS\000"
 28824      4745545F 
 28824      494E5055 
 28824      545300
 28825              	.LASF119:
 28826 115e 68775F6D 		.ascii	"hw_maint_date\000"
 28826      61696E74 
 28826      5F646174 
 28826      6500
 28827              	.LASF265:
 28828 116c 6964735F 		.ascii	"ids_str\000"
 28828      73747200 
 28829              	.LASF54:
 28830 1174 434D445F 		.ascii	"CMD_GET_ADC_CONF\000"
 28830      4745545F 
 28830      4144435F 
 28830      434F4E46 
 28830      00
 28831              	.LASF27:
 28832 1185 434D445F 		.ascii	"CMD_SET_ZEROS\000"
 28832      5345545F 
 28832      5A45524F 
 28832      5300
 28833              	.LASF273:
 28834 1193 6D61675F 		.ascii	"mag_param_str_len\000"
 28834      70617261 
 28834      6D5F7374 
 28834      725F6C65 
 28834      6E00
 28835              	.LASF259:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 630


 28836 11a5 6E756D5F 		.ascii	"num_imus_id_params\000"
 28836      696D7573 
 28836      5F69645F 
 28836      70617261 
 28836      6D7300
 28837              	.LASF239:
 28838 11b8 6175785F 		.ascii	"aux_int16\000"
 28838      696E7431 
 28838      3600
 28839              	.LASF387:
 28840 11c2 656D675F 		.ascii	"emg_history\000"
 28840      68697374 
 28840      6F727900 
 28841              	.LASF389:
 28842 11ce 45455052 		.ascii	"EEPROM_ADDR\000"
 28842      4F4D5F41 
 28842      44445200 
 28843              	.LASF120:
 28844 11da 73746174 		.ascii	"stats_period_begin_date\000"
 28844      735F7065 
 28844      72696F64 
 28844      5F626567 
 28844      696E5F64 
 28845              	.LASF382:
 28846 11f2 696D7573 		.ascii	"imus_data_size\000"
 28846      5F646174 
 28846      615F7369 
 28846      7A6500
 28847              	.LASF350:
 28848 1201 49544D5F 		.ascii	"ITM_RxBuffer\000"
 28848      52784275 
 28848      66666572 
 28848      00
 28849              	.LASF44:
 28850 120e 434D445F 		.ascii	"CMD_GET_VELOCITIES\000"
 28850      4745545F 
 28850      56454C4F 
 28850      43495449 
 28850      455300
 28851              	.LASF367:
 28852 1221 706F775F 		.ascii	"pow_tension\000"
 28852      74656E73 
 28852      696F6E00 
 28853              	.LASF34:
 28854 122d 434D445F 		.ascii	"CMD_GET_PARAM_LIST\000"
 28854      4745545F 
 28854      50415241 
 28854      4D5F4C49 
 28854      535400
 28855              	.LASF79:
 28856 1240 64617461 		.ascii	"data_types\000"
 28856      5F747970 
 28856      657300
 28857              	.LASF17:
 28858 124b 696E7431 		.ascii	"int16\000"
 28858      3600
 28859              	.LASF172:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 631


 28860 1251 72656164 		.ascii	"read_exp_port_flag\000"
 28860      5F657870 
 28860      5F706F72 
 28860      745F666C 
 28860      616700
 28861              	.LASF165:
 28862 1264 73776974 		.ascii	"switch_emg\000"
 28862      63685F65 
 28862      6D6700
 28863              	.LASF138:
 28864 126f 61637469 		.ascii	"activate_pwm_rescaling\000"
 28864      76617465 
 28864      5F70776D 
 28864      5F726573 
 28864      63616C69 
 28865              	.LASF131:
 28866 1286 6B5F705F 		.ascii	"k_p_dl\000"
 28866      646C00
 28867              	.LASF95:
 28868 128d 65737469 		.ascii	"estim_curr\000"
 28868      6D5F6375 
 28868      727200
 28869              	.LASF366:
 28870 1298 6465765F 		.ascii	"dev_pwm_limit\000"
 28870      70776D5F 
 28870      6C696D69 
 28870      7400
 28871              	.LASF173:
 28872 12a6 72656164 		.ascii	"read_ADC_sensors_port_flag\000"
 28872      5F414443 
 28872      5F73656E 
 28872      736F7273 
 28872      5F706F72 
 28873              	.LASF375:
 28874 12c1 456E636F 		.ascii	"Encoder_Value\000"
 28874      6465725F 
 28874      56616C75 
 28874      6500
 28875              	.LASF342:
 28876 12cf 636D645F 		.ascii	"cmd_get_encoder_map\000"
 28876      6765745F 
 28876      656E636F 
 28876      6465725F 
 28876      6D617000 
 28877              	.LASF125:
 28878 12e3 75736572 		.ascii	"user_id\000"
 28878      5F696400 
 28879              	.LASF12:
 28880 12eb 75696E74 		.ascii	"uint32_t\000"
 28880      33325F74 
 28880      00
 28881              	.LASF238:
 28882 12f4 6175785F 		.ascii	"aux_float\000"
 28882      666C6F61 
 28882      7400
 28883              	.LASF381:
 28884 12fe 494D555F 		.ascii	"IMU_connected\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 632


 28884      636F6E6E 
 28884      65637465 
 28884      6400
 28885              	.LASF229:
 28886 130c 4E554D5F 		.ascii	"NUM_MENU\000"
 28886      4D454E55 
 28886      00
 28887              	.LASF241:
 28888 1315 6175785F 		.ascii	"aux_int32\000"
 28888      696E7433 
 28888      3200
 28889              	.LASF124:
 28890 131f 62617564 		.ascii	"baud_rate\000"
 28890      5F726174 
 28890      6500
 28891              	.LASF330:
 28892 1329 745F656E 		.ascii	"t_end\000"
 28892      6400
 28893              	.LASF197:
 28894 132f 66617374 		.ascii	"fast_act_threshold\000"
 28894      5F616374 
 28894      5F746872 
 28894      6573686F 
 28894      6C6400
 28895              	.LASF224:
 28896 1342 696E666F 		.ascii	"info_type\000"
 28896      5F747970 
 28896      6500
 28897              	.LASF50:
 28898 134c 434D445F 		.ascii	"CMD_GET_IMU_READINGS\000"
 28898      4745545F 
 28898      494D555F 
 28898      52454144 
 28898      494E4753 
 28899              	.LASF379:
 28900 1361 73645230 		.ascii	"sdR01File\000"
 28900      3146696C 
 28900      6500
 28901              	.LASF302:
 28902 136b 4C435243 		.ascii	"LCRChecksum\000"
 28902      6865636B 
 28902      73756D00 
 28903              	.LASF339:
 28904 1377 6B5F696D 		.ascii	"k_imu\000"
 28904      7500
 28905              	.LASF3:
 28906 137d 73686F72 		.ascii	"short unsigned int\000"
 28906      7420756E 
 28906      7369676E 
 28906      65642069 
 28906      6E7400
 28907              	.LASF152:
 28908 1390 73745F65 		.ascii	"st_encoder\000"
 28908      6E636F64 
 28908      657200
 28909              	.LASF356:
 28910 139b 675F6164 		.ascii	"g_adc_meas\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 633


 28910      635F6D65 
 28910      617300
 28911              	.LASF192:
 28912 13a6 6D61785F 		.ascii	"max_residual_current\000"
 28912      72657369 
 28912      6475616C 
 28912      5F637572 
 28912      72656E74 
 28913              	.LASF279:
 28914 13bb 454E435F 		.ascii	"ENC_L\000"
 28914      4C00
 28915              	.LASF199:
 28916 13c1 73745F65 		.ascii	"st_eeprom\000"
 28916      6570726F 
 28916      6D00
 28917              	.LASF226:
 28918 13cb 54595045 		.ascii	"TYPES\000"
 28918      5300
 28919              	.LASF351:
 28920 13d1 675F7265 		.ascii	"g_ref\000"
 28920      6600
 28921              	.LASF18:
 28922 13d7 696E7433 		.ascii	"int32\000"
 28922      3200
 28923              	.LASF372:
 28924 13dd 4E554D5F 		.ascii	"NUM_OF_ANALOG_INPUTS\000"
 28924      4F465F41 
 28924      4E414C4F 
 28924      475F494E 
 28924      50555453 
 28925              	.LASF221:
 28926 13f2 696E666F 		.ascii	"infoGet\000"
 28926      47657400 
 28927              	.LASF127:
 28928 13fa 73745F6D 		.ascii	"st_motor\000"
 28928      6F746F72 
 28928      00
 28929              	.LASF386:
 28930 1403 6D617374 		.ascii	"master_mode\000"
 28930      65725F6D 
 28930      6F646500 
 28931              	.LASF90:
 28932 140f 46535F46 		.ascii	"FS_FILE\000"
 28932      494C4500 
 28933              	.LASF140:
 28934 1417 706F735F 		.ascii	"pos_lim_flag\000"
 28934      6C696D5F 
 28934      666C6167 
 28934      00
 28935              	.LASF355:
 28936 1424 675F6D65 		.ascii	"g_measOld\000"
 28936      61734F6C 
 28936      6400
 28937              	.LASF69:
 28938 142e 434F4E54 		.ascii	"CONTROL_ANGLE\000"
 28938      524F4C5F 
 28938      414E474C 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 634


 28938      4500
 28939              	.LASF322:
 28940 143c 636D645F 		.ascii	"cmd_activate\000"
 28940      61637469 
 28940      76617465 
 28940      00
 28941              	.LASF5:
 28942 1449 5F5F696E 		.ascii	"__int32_t\000"
 28942      7433325F 
 28942      7400
 28943              	.LASF251:
 28944 1453 7370695F 		.ascii	"spi_delay_menu\000"
 28944      64656C61 
 28944      795F6D65 
 28944      6E7500
 28945              	.LASF111:
 28946 1462 77697265 		.ascii	"wire_disp\000"
 28946      5F646973 
 28946      7000
 28947              	.LASF162:
 28948 146c 656D675F 		.ascii	"emg_max_value\000"
 28948      6D61785F 
 28948      76616C75 
 28948      6500
 28949              	.LASF256:
 28950 147a 43555354 		.ascii	"CUSTOM_PARAM_SET\000"
 28950      4F4D5F50 
 28950      4152414D 
 28950      5F534554 
 28950      00
 28951              	.LASF391:
 28952 148b 2E2E5C73 		.ascii	"..\\src\\command_processing.c\000"
 28952      72635C63 
 28952      6F6D6D61 
 28952      6E645F70 
 28952      726F6365 
 28953              	.LASF146:
 28954 14a7 63757272 		.ascii	"current_limit\000"
 28954      656E745F 
 28954      6C696D69 
 28954      7400
 28955              	.LASF59:
 28956 14b5 53485F69 		.ascii	"SH_input_mode\000"
 28956      6E707574 
 28956      5F6D6F64 
 28956      6500
 28957              	.LASF81:
 28958 14c3 54595045 		.ascii	"TYPE_INT8\000"
 28958      5F494E54 
 28958      3800
 28959              	.LASF196:
 28960 14cd 61637469 		.ascii	"activation_mode\000"
 28960      76617469 
 28960      6F6E5F6D 
 28960      6F646500 
 28961              	.LASF292:
 28962 14dd 494D555F 		.ascii	"IMU_reading_info\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccuUvUVw.s 			page 635


 28962      72656164 
 28962      696E675F 
 28962      696E666F 
 28962      00
 28963              	.LASF14:
 28964 14ee 75696E74 		.ascii	"uint16\000"
 28964      313600
 28965              	.LASF181:
 28966 14f5 72657374 		.ascii	"rest_delay\000"
 28966      5F64656C 
 28966      617900
 28967              	.LASF237:
 28968 1500 6175785F 		.ascii	"aux_str\000"
 28968      73747200 
 28969              	.LASF26:
 28970 1508 434D445F 		.ascii	"CMD_PING\000"
 28970      50494E47 
 28970      00
 28971              	.LASF136:
 28972 1511 6B5F645F 		.ascii	"k_d_c_dl\000"
 28972      635F646C 
 28972      00
 28973              	.LASF214:
 28974 151a 64697265 		.ascii	"direction\000"
 28974      6374696F 
 28974      6E00
 28975              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
