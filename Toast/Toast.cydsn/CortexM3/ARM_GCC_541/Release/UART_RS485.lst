ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4OTE74.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"UART_RS485.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	UART_RS485_initVar
  20              		.bss
  21              		.type	UART_RS485_initVar, %object
  22              		.size	UART_RS485_initVar, 1
  23              	UART_RS485_initVar:
  24 0000 00       		.space	1
  25              		.global	UART_RS485_errorStatus
  26              		.type	UART_RS485_errorStatus, %object
  27              		.size	UART_RS485_errorStatus, 1
  28              	UART_RS485_errorStatus:
  29 0001 00       		.space	1
  30              		.comm	UART_RS485_rxBuffer,32,4
  31              		.global	UART_RS485_rxBufferRead
  32              		.type	UART_RS485_rxBufferRead, %object
  33              		.size	UART_RS485_rxBufferRead, 1
  34              	UART_RS485_rxBufferRead:
  35 0002 00       		.space	1
  36              		.global	UART_RS485_rxBufferWrite
  37              		.type	UART_RS485_rxBufferWrite, %object
  38              		.size	UART_RS485_rxBufferWrite, 1
  39              	UART_RS485_rxBufferWrite:
  40 0003 00       		.space	1
  41              		.global	UART_RS485_rxBufferLoopDetect
  42              		.type	UART_RS485_rxBufferLoopDetect, %object
  43              		.size	UART_RS485_rxBufferLoopDetect, 1
  44              	UART_RS485_rxBufferLoopDetect:
  45 0004 00       		.space	1
  46              		.global	UART_RS485_rxBufferOverflow
  47              		.type	UART_RS485_rxBufferOverflow, %object
  48              		.size	UART_RS485_rxBufferOverflow, 1
  49              	UART_RS485_rxBufferOverflow:
  50 0005 00       		.space	1
  51              		.section	.text.UART_RS485_Start,"ax",%progbits
  52              		.align	2
  53              		.global	UART_RS485_Start
  54              		.thumb
  55              		.thumb_func
  56              		.type	UART_RS485_Start, %function
  57              	UART_RS485_Start:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4OTE74.s 			page 2


  58              	.LFB0:
  59              		.file 1 "Generated_Source\\PSoC5\\UART_RS485.c"
   1:Generated_Source\PSoC5/UART_RS485.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/UART_RS485.c **** * File Name: UART_RS485.c
   3:Generated_Source\PSoC5/UART_RS485.c **** * Version 2.50
   4:Generated_Source\PSoC5/UART_RS485.c **** *
   5:Generated_Source\PSoC5/UART_RS485.c **** * Description:
   6:Generated_Source\PSoC5/UART_RS485.c **** *  This file provides all API functionality of the UART component
   7:Generated_Source\PSoC5/UART_RS485.c **** *
   8:Generated_Source\PSoC5/UART_RS485.c **** * Note:
   9:Generated_Source\PSoC5/UART_RS485.c **** *
  10:Generated_Source\PSoC5/UART_RS485.c **** ********************************************************************************
  11:Generated_Source\PSoC5/UART_RS485.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  12:Generated_Source\PSoC5/UART_RS485.c **** * You may use this file only in accordance with the license, terms, conditions,
  13:Generated_Source\PSoC5/UART_RS485.c **** * disclaimers, and limitations in the end user license agreement accompanying
  14:Generated_Source\PSoC5/UART_RS485.c **** * the software package with which this file was provided.
  15:Generated_Source\PSoC5/UART_RS485.c **** *******************************************************************************/
  16:Generated_Source\PSoC5/UART_RS485.c **** 
  17:Generated_Source\PSoC5/UART_RS485.c **** #include "UART_RS485.h"
  18:Generated_Source\PSoC5/UART_RS485.c **** #if (UART_RS485_INTERNAL_CLOCK_USED)
  19:Generated_Source\PSoC5/UART_RS485.c ****     #include "UART_RS485_IntClock.h"
  20:Generated_Source\PSoC5/UART_RS485.c **** #endif /* End UART_RS485_INTERNAL_CLOCK_USED */
  21:Generated_Source\PSoC5/UART_RS485.c **** 
  22:Generated_Source\PSoC5/UART_RS485.c **** 
  23:Generated_Source\PSoC5/UART_RS485.c **** /***************************************
  24:Generated_Source\PSoC5/UART_RS485.c **** * Global data allocation
  25:Generated_Source\PSoC5/UART_RS485.c **** ***************************************/
  26:Generated_Source\PSoC5/UART_RS485.c **** 
  27:Generated_Source\PSoC5/UART_RS485.c **** uint8 UART_RS485_initVar = 0u;
  28:Generated_Source\PSoC5/UART_RS485.c **** 
  29:Generated_Source\PSoC5/UART_RS485.c **** #if (UART_RS485_TX_INTERRUPT_ENABLED && UART_RS485_TX_ENABLED)
  30:Generated_Source\PSoC5/UART_RS485.c ****     volatile uint8 UART_RS485_txBuffer[UART_RS485_TX_BUFFER_SIZE];
  31:Generated_Source\PSoC5/UART_RS485.c ****     volatile uint8 UART_RS485_txBufferRead = 0u;
  32:Generated_Source\PSoC5/UART_RS485.c ****     uint8 UART_RS485_txBufferWrite = 0u;
  33:Generated_Source\PSoC5/UART_RS485.c **** #endif /* (UART_RS485_TX_INTERRUPT_ENABLED && UART_RS485_TX_ENABLED) */
  34:Generated_Source\PSoC5/UART_RS485.c **** 
  35:Generated_Source\PSoC5/UART_RS485.c **** #if (UART_RS485_RX_INTERRUPT_ENABLED && (UART_RS485_RX_ENABLED || UART_RS485_HD_ENABLED))
  36:Generated_Source\PSoC5/UART_RS485.c ****     uint8 UART_RS485_errorStatus = 0u;
  37:Generated_Source\PSoC5/UART_RS485.c ****     volatile uint8 UART_RS485_rxBuffer[UART_RS485_RX_BUFFER_SIZE];
  38:Generated_Source\PSoC5/UART_RS485.c ****     volatile uint8 UART_RS485_rxBufferRead  = 0u;
  39:Generated_Source\PSoC5/UART_RS485.c ****     volatile uint8 UART_RS485_rxBufferWrite = 0u;
  40:Generated_Source\PSoC5/UART_RS485.c ****     volatile uint8 UART_RS485_rxBufferLoopDetect = 0u;
  41:Generated_Source\PSoC5/UART_RS485.c ****     volatile uint8 UART_RS485_rxBufferOverflow   = 0u;
  42:Generated_Source\PSoC5/UART_RS485.c ****     #if (UART_RS485_RXHW_ADDRESS_ENABLED)
  43:Generated_Source\PSoC5/UART_RS485.c ****         volatile uint8 UART_RS485_rxAddressMode = UART_RS485_RX_ADDRESS_MODE;
  44:Generated_Source\PSoC5/UART_RS485.c ****         volatile uint8 UART_RS485_rxAddressDetected = 0u;
  45:Generated_Source\PSoC5/UART_RS485.c ****     #endif /* (UART_RS485_RXHW_ADDRESS_ENABLED) */
  46:Generated_Source\PSoC5/UART_RS485.c **** #endif /* (UART_RS485_RX_INTERRUPT_ENABLED && (UART_RS485_RX_ENABLED || UART_RS485_HD_ENABLED)) */
  47:Generated_Source\PSoC5/UART_RS485.c **** 
  48:Generated_Source\PSoC5/UART_RS485.c **** 
  49:Generated_Source\PSoC5/UART_RS485.c **** /*******************************************************************************
  50:Generated_Source\PSoC5/UART_RS485.c **** * Function Name: UART_RS485_Start
  51:Generated_Source\PSoC5/UART_RS485.c **** ********************************************************************************
  52:Generated_Source\PSoC5/UART_RS485.c **** *
  53:Generated_Source\PSoC5/UART_RS485.c **** * Summary:
  54:Generated_Source\PSoC5/UART_RS485.c **** *  This is the preferred method to begin component operation.
  55:Generated_Source\PSoC5/UART_RS485.c **** *  UART_RS485_Start() sets the initVar variable, calls the
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4OTE74.s 			page 3


  56:Generated_Source\PSoC5/UART_RS485.c **** *  UART_RS485_Init() function, and then calls the
  57:Generated_Source\PSoC5/UART_RS485.c **** *  UART_RS485_Enable() function.
  58:Generated_Source\PSoC5/UART_RS485.c **** *
  59:Generated_Source\PSoC5/UART_RS485.c **** * Parameters:
  60:Generated_Source\PSoC5/UART_RS485.c **** *  None.
  61:Generated_Source\PSoC5/UART_RS485.c **** *
  62:Generated_Source\PSoC5/UART_RS485.c **** * Return:
  63:Generated_Source\PSoC5/UART_RS485.c **** *  None.
  64:Generated_Source\PSoC5/UART_RS485.c **** *
  65:Generated_Source\PSoC5/UART_RS485.c **** * Global variables:
  66:Generated_Source\PSoC5/UART_RS485.c **** *  The UART_RS485_intiVar variable is used to indicate initial
  67:Generated_Source\PSoC5/UART_RS485.c **** *  configuration of this component. The variable is initialized to zero (0u)
  68:Generated_Source\PSoC5/UART_RS485.c **** *  and set to one (1u) the first time UART_RS485_Start() is called. This
  69:Generated_Source\PSoC5/UART_RS485.c **** *  allows for component initialization without re-initialization in all
  70:Generated_Source\PSoC5/UART_RS485.c **** *  subsequent calls to the UART_RS485_Start() routine.
  71:Generated_Source\PSoC5/UART_RS485.c **** *
  72:Generated_Source\PSoC5/UART_RS485.c **** * Reentrant:
  73:Generated_Source\PSoC5/UART_RS485.c **** *  No.
  74:Generated_Source\PSoC5/UART_RS485.c **** *
  75:Generated_Source\PSoC5/UART_RS485.c **** *******************************************************************************/
  76:Generated_Source\PSoC5/UART_RS485.c **** void UART_RS485_Start(void) 
  77:Generated_Source\PSoC5/UART_RS485.c **** {
  60              		.loc 1 77 0
  61              		.cfi_startproc
  62              		@ args = 0, pretend = 0, frame = 0
  63              		@ frame_needed = 1, uses_anonymous_args = 0
  64 0000 80B5     		push	{r7, lr}
  65              		.cfi_def_cfa_offset 8
  66              		.cfi_offset 7, -8
  67              		.cfi_offset 14, -4
  68 0002 00AF     		add	r7, sp, #0
  69              		.cfi_def_cfa_register 7
  78:Generated_Source\PSoC5/UART_RS485.c ****     /* If not initialized then initialize all required hardware and software */
  79:Generated_Source\PSoC5/UART_RS485.c ****     if(UART_RS485_initVar == 0u)
  70              		.loc 1 79 0
  71 0004 064B     		ldr	r3, .L3
  72 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  73 0008 002B     		cmp	r3, #0
  74 000a 04D1     		bne	.L2
  80:Generated_Source\PSoC5/UART_RS485.c ****     {
  81:Generated_Source\PSoC5/UART_RS485.c ****         UART_RS485_Init();
  75              		.loc 1 81 0
  76 000c FFF7FEFF 		bl	UART_RS485_Init
  82:Generated_Source\PSoC5/UART_RS485.c ****         UART_RS485_initVar = 1u;
  77              		.loc 1 82 0
  78 0010 034B     		ldr	r3, .L3
  79 0012 0122     		movs	r2, #1
  80 0014 1A70     		strb	r2, [r3]
  81              	.L2:
  83:Generated_Source\PSoC5/UART_RS485.c ****     }
  84:Generated_Source\PSoC5/UART_RS485.c **** 
  85:Generated_Source\PSoC5/UART_RS485.c ****     UART_RS485_Enable();
  82              		.loc 1 85 0
  83 0016 FFF7FEFF 		bl	UART_RS485_Enable
  86:Generated_Source\PSoC5/UART_RS485.c **** }
  84              		.loc 1 86 0
  85 001a 00BF     		nop
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4OTE74.s 			page 4


  86 001c 80BD     		pop	{r7, pc}
  87              	.L4:
  88 001e 00BF     		.align	2
  89              	.L3:
  90 0020 00000000 		.word	UART_RS485_initVar
  91              		.cfi_endproc
  92              	.LFE0:
  93              		.size	UART_RS485_Start, .-UART_RS485_Start
  94              		.section	.text.UART_RS485_Init,"ax",%progbits
  95              		.align	2
  96              		.global	UART_RS485_Init
  97              		.thumb
  98              		.thumb_func
  99              		.type	UART_RS485_Init, %function
 100              	UART_RS485_Init:
 101              	.LFB1:
  87:Generated_Source\PSoC5/UART_RS485.c **** 
  88:Generated_Source\PSoC5/UART_RS485.c **** 
  89:Generated_Source\PSoC5/UART_RS485.c **** /*******************************************************************************
  90:Generated_Source\PSoC5/UART_RS485.c **** * Function Name: UART_RS485_Init
  91:Generated_Source\PSoC5/UART_RS485.c **** ********************************************************************************
  92:Generated_Source\PSoC5/UART_RS485.c **** *
  93:Generated_Source\PSoC5/UART_RS485.c **** * Summary:
  94:Generated_Source\PSoC5/UART_RS485.c **** *  Initializes or restores the component according to the customizer Configure
  95:Generated_Source\PSoC5/UART_RS485.c **** *  dialog settings. It is not necessary to call UART_RS485_Init() because
  96:Generated_Source\PSoC5/UART_RS485.c **** *  the UART_RS485_Start() API calls this function and is the preferred
  97:Generated_Source\PSoC5/UART_RS485.c **** *  method to begin component operation.
  98:Generated_Source\PSoC5/UART_RS485.c **** *
  99:Generated_Source\PSoC5/UART_RS485.c **** * Parameters:
 100:Generated_Source\PSoC5/UART_RS485.c **** *  None.
 101:Generated_Source\PSoC5/UART_RS485.c **** *
 102:Generated_Source\PSoC5/UART_RS485.c **** * Return:
 103:Generated_Source\PSoC5/UART_RS485.c **** *  None.
 104:Generated_Source\PSoC5/UART_RS485.c **** *
 105:Generated_Source\PSoC5/UART_RS485.c **** *******************************************************************************/
 106:Generated_Source\PSoC5/UART_RS485.c **** void UART_RS485_Init(void) 
 107:Generated_Source\PSoC5/UART_RS485.c **** {
 102              		.loc 1 107 0
 103              		.cfi_startproc
 104              		@ args = 0, pretend = 0, frame = 0
 105              		@ frame_needed = 1, uses_anonymous_args = 0
 106 0000 80B5     		push	{r7, lr}
 107              		.cfi_def_cfa_offset 8
 108              		.cfi_offset 7, -8
 109              		.cfi_offset 14, -4
 110 0002 00AF     		add	r7, sp, #0
 111              		.cfi_def_cfa_register 7
 108:Generated_Source\PSoC5/UART_RS485.c ****     #if(UART_RS485_RX_ENABLED || UART_RS485_HD_ENABLED)
 109:Generated_Source\PSoC5/UART_RS485.c **** 
 110:Generated_Source\PSoC5/UART_RS485.c ****         #if (UART_RS485_RX_INTERRUPT_ENABLED)
 111:Generated_Source\PSoC5/UART_RS485.c ****             /* Set RX interrupt vector and priority */
 112:Generated_Source\PSoC5/UART_RS485.c ****             (void) CyIntSetVector(UART_RS485_RX_VECT_NUM, &UART_RS485_RXISR);
 112              		.loc 1 112 0
 113 0004 0D49     		ldr	r1, .L6
 114 0006 0220     		movs	r0, #2
 115 0008 FFF7FEFF 		bl	CyIntSetVector
 113:Generated_Source\PSoC5/UART_RS485.c ****             CyIntSetPriority(UART_RS485_RX_VECT_NUM, UART_RS485_RX_PRIOR_NUM);
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4OTE74.s 			page 5


 116              		.loc 1 113 0
 117 000c 0721     		movs	r1, #7
 118 000e 0220     		movs	r0, #2
 119 0010 FFF7FEFF 		bl	CyIntSetPriority
 114:Generated_Source\PSoC5/UART_RS485.c ****             UART_RS485_errorStatus = 0u;
 120              		.loc 1 114 0
 121 0014 0A4B     		ldr	r3, .L6+4
 122 0016 0022     		movs	r2, #0
 123 0018 1A70     		strb	r2, [r3]
 115:Generated_Source\PSoC5/UART_RS485.c ****         #endif /* (UART_RS485_RX_INTERRUPT_ENABLED) */
 116:Generated_Source\PSoC5/UART_RS485.c **** 
 117:Generated_Source\PSoC5/UART_RS485.c ****         #if (UART_RS485_RXHW_ADDRESS_ENABLED)
 118:Generated_Source\PSoC5/UART_RS485.c ****             UART_RS485_SetRxAddressMode(UART_RS485_RX_ADDRESS_MODE);
 119:Generated_Source\PSoC5/UART_RS485.c ****             UART_RS485_SetRxAddress1(UART_RS485_RX_HW_ADDRESS1);
 120:Generated_Source\PSoC5/UART_RS485.c ****             UART_RS485_SetRxAddress2(UART_RS485_RX_HW_ADDRESS2);
 121:Generated_Source\PSoC5/UART_RS485.c ****         #endif /* End UART_RS485_RXHW_ADDRESS_ENABLED */
 122:Generated_Source\PSoC5/UART_RS485.c **** 
 123:Generated_Source\PSoC5/UART_RS485.c ****         /* Init Count7 period */
 124:Generated_Source\PSoC5/UART_RS485.c ****         UART_RS485_RXBITCTR_PERIOD_REG = UART_RS485_RXBITCTR_INIT;
 124              		.loc 1 124 0
 125 001a 0A4B     		ldr	r3, .L6+8
 126 001c 6922     		movs	r2, #105
 127 001e 1A70     		strb	r2, [r3]
 125:Generated_Source\PSoC5/UART_RS485.c ****         /* Configure the Initial RX interrupt mask */
 126:Generated_Source\PSoC5/UART_RS485.c ****         UART_RS485_RXSTATUS_MASK_REG  = UART_RS485_INIT_RX_INTERRUPTS_MASK;
 128              		.loc 1 126 0
 129 0020 094B     		ldr	r3, .L6+12
 130 0022 2022     		movs	r2, #32
 131 0024 1A70     		strb	r2, [r3]
 127:Generated_Source\PSoC5/UART_RS485.c ****     #endif /* End UART_RS485_RX_ENABLED || UART_RS485_HD_ENABLED*/
 128:Generated_Source\PSoC5/UART_RS485.c **** 
 129:Generated_Source\PSoC5/UART_RS485.c ****     #if(UART_RS485_TX_ENABLED)
 130:Generated_Source\PSoC5/UART_RS485.c ****         #if (UART_RS485_TX_INTERRUPT_ENABLED)
 131:Generated_Source\PSoC5/UART_RS485.c ****             /* Set TX interrupt vector and priority */
 132:Generated_Source\PSoC5/UART_RS485.c ****             (void) CyIntSetVector(UART_RS485_TX_VECT_NUM, &UART_RS485_TXISR);
 133:Generated_Source\PSoC5/UART_RS485.c ****             CyIntSetPriority(UART_RS485_TX_VECT_NUM, UART_RS485_TX_PRIOR_NUM);
 134:Generated_Source\PSoC5/UART_RS485.c ****         #endif /* (UART_RS485_TX_INTERRUPT_ENABLED) */
 135:Generated_Source\PSoC5/UART_RS485.c **** 
 136:Generated_Source\PSoC5/UART_RS485.c ****         /* Write Counter Value for TX Bit Clk Generator*/
 137:Generated_Source\PSoC5/UART_RS485.c ****         #if (UART_RS485_TXCLKGEN_DP)
 138:Generated_Source\PSoC5/UART_RS485.c ****             UART_RS485_TXBITCLKGEN_CTR_REG = UART_RS485_BIT_CENTER;
 132              		.loc 1 138 0
 133 0026 094B     		ldr	r3, .L6+16
 134 0028 0622     		movs	r2, #6
 135 002a 1A70     		strb	r2, [r3]
 139:Generated_Source\PSoC5/UART_RS485.c ****             UART_RS485_TXBITCLKTX_COMPLETE_REG = ((UART_RS485_NUMBER_OF_DATA_BITS +
 136              		.loc 1 139 0
 137 002c 084B     		ldr	r3, .L6+20
 138 002e 4722     		movs	r2, #71
 139 0030 1A70     		strb	r2, [r3]
 140:Generated_Source\PSoC5/UART_RS485.c ****                         UART_RS485_NUMBER_OF_START_BIT) * UART_RS485_OVER_SAMPLE_COUNT) - 1u;
 141:Generated_Source\PSoC5/UART_RS485.c ****         #else
 142:Generated_Source\PSoC5/UART_RS485.c ****             UART_RS485_TXBITCTR_PERIOD_REG = ((UART_RS485_NUMBER_OF_DATA_BITS +
 143:Generated_Source\PSoC5/UART_RS485.c ****                         UART_RS485_NUMBER_OF_START_BIT) * UART_RS485_OVER_SAMPLE_8) - 1u;
 144:Generated_Source\PSoC5/UART_RS485.c ****         #endif /* End UART_RS485_TXCLKGEN_DP */
 145:Generated_Source\PSoC5/UART_RS485.c **** 
 146:Generated_Source\PSoC5/UART_RS485.c ****         /* Configure the Initial TX interrupt mask */
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4OTE74.s 			page 6


 147:Generated_Source\PSoC5/UART_RS485.c ****         #if (UART_RS485_TX_INTERRUPT_ENABLED)
 148:Generated_Source\PSoC5/UART_RS485.c ****             UART_RS485_TXSTATUS_MASK_REG = UART_RS485_TX_STS_FIFO_EMPTY;
 149:Generated_Source\PSoC5/UART_RS485.c ****         #else
 150:Generated_Source\PSoC5/UART_RS485.c ****             UART_RS485_TXSTATUS_MASK_REG = UART_RS485_INIT_TX_INTERRUPTS_MASK;
 140              		.loc 1 150 0
 141 0032 084B     		ldr	r3, .L6+24
 142 0034 0022     		movs	r2, #0
 143 0036 1A70     		strb	r2, [r3]
 151:Generated_Source\PSoC5/UART_RS485.c ****         #endif /*End UART_RS485_TX_INTERRUPT_ENABLED*/
 152:Generated_Source\PSoC5/UART_RS485.c **** 
 153:Generated_Source\PSoC5/UART_RS485.c ****     #endif /* End UART_RS485_TX_ENABLED */
 154:Generated_Source\PSoC5/UART_RS485.c **** 
 155:Generated_Source\PSoC5/UART_RS485.c ****     #if(UART_RS485_PARITY_TYPE_SW)  /* Write Parity to Control Register */
 156:Generated_Source\PSoC5/UART_RS485.c ****         UART_RS485_WriteControlRegister( \
 157:Generated_Source\PSoC5/UART_RS485.c ****             (UART_RS485_ReadControlRegister() & (uint8)~UART_RS485_CTRL_PARITY_TYPE_MASK) | \
 158:Generated_Source\PSoC5/UART_RS485.c ****             (uint8)(UART_RS485_PARITY_TYPE << UART_RS485_CTRL_PARITY_TYPE0_SHIFT) );
 159:Generated_Source\PSoC5/UART_RS485.c ****     #endif /* End UART_RS485_PARITY_TYPE_SW */
 160:Generated_Source\PSoC5/UART_RS485.c **** }
 144              		.loc 1 160 0
 145 0038 00BF     		nop
 146 003a 80BD     		pop	{r7, pc}
 147              	.L7:
 148              		.align	2
 149              	.L6:
 150 003c 00000000 		.word	UART_RS485_RXISR
 151 0040 00000000 		.word	UART_RS485_errorStatus
 152 0044 82640040 		.word	1073767554
 153 0048 86650040 		.word	1073767814
 154 004c 24640040 		.word	1073767460
 155 0050 34640040 		.word	1073767476
 156 0054 85640040 		.word	1073767557
 157              		.cfi_endproc
 158              	.LFE1:
 159              		.size	UART_RS485_Init, .-UART_RS485_Init
 160              		.section	.text.UART_RS485_Enable,"ax",%progbits
 161              		.align	2
 162              		.global	UART_RS485_Enable
 163              		.thumb
 164              		.thumb_func
 165              		.type	UART_RS485_Enable, %function
 166              	UART_RS485_Enable:
 167              	.LFB2:
 161:Generated_Source\PSoC5/UART_RS485.c **** 
 162:Generated_Source\PSoC5/UART_RS485.c **** 
 163:Generated_Source\PSoC5/UART_RS485.c **** /*******************************************************************************
 164:Generated_Source\PSoC5/UART_RS485.c **** * Function Name: UART_RS485_Enable
 165:Generated_Source\PSoC5/UART_RS485.c **** ********************************************************************************
 166:Generated_Source\PSoC5/UART_RS485.c **** *
 167:Generated_Source\PSoC5/UART_RS485.c **** * Summary:
 168:Generated_Source\PSoC5/UART_RS485.c **** *  Activates the hardware and begins component operation. It is not necessary
 169:Generated_Source\PSoC5/UART_RS485.c **** *  to call UART_RS485_Enable() because the UART_RS485_Start() API
 170:Generated_Source\PSoC5/UART_RS485.c **** *  calls this function, which is the preferred method to begin component
 171:Generated_Source\PSoC5/UART_RS485.c **** *  operation.
 172:Generated_Source\PSoC5/UART_RS485.c **** 
 173:Generated_Source\PSoC5/UART_RS485.c **** * Parameters:
 174:Generated_Source\PSoC5/UART_RS485.c **** *  None.
 175:Generated_Source\PSoC5/UART_RS485.c **** *
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4OTE74.s 			page 7


 176:Generated_Source\PSoC5/UART_RS485.c **** * Return:
 177:Generated_Source\PSoC5/UART_RS485.c **** *  None.
 178:Generated_Source\PSoC5/UART_RS485.c **** *
 179:Generated_Source\PSoC5/UART_RS485.c **** * Global Variables:
 180:Generated_Source\PSoC5/UART_RS485.c **** *  UART_RS485_rxAddressDetected - set to initial state (0).
 181:Generated_Source\PSoC5/UART_RS485.c **** *
 182:Generated_Source\PSoC5/UART_RS485.c **** *******************************************************************************/
 183:Generated_Source\PSoC5/UART_RS485.c **** void UART_RS485_Enable(void) 
 184:Generated_Source\PSoC5/UART_RS485.c **** {
 168              		.loc 1 184 0
 169              		.cfi_startproc
 170              		@ args = 0, pretend = 0, frame = 8
 171              		@ frame_needed = 1, uses_anonymous_args = 0
 172 0000 80B5     		push	{r7, lr}
 173              		.cfi_def_cfa_offset 8
 174              		.cfi_offset 7, -8
 175              		.cfi_offset 14, -4
 176 0002 82B0     		sub	sp, sp, #8
 177              		.cfi_def_cfa_offset 16
 178 0004 00AF     		add	r7, sp, #0
 179              		.cfi_def_cfa_register 7
 185:Generated_Source\PSoC5/UART_RS485.c ****     uint8 enableInterrupts;
 186:Generated_Source\PSoC5/UART_RS485.c ****     enableInterrupts = CyEnterCriticalSection();
 180              		.loc 1 186 0
 181 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 182 000a 0346     		mov	r3, r0
 183 000c FB71     		strb	r3, [r7, #7]
 187:Generated_Source\PSoC5/UART_RS485.c **** 
 188:Generated_Source\PSoC5/UART_RS485.c ****     #if (UART_RS485_RX_ENABLED || UART_RS485_HD_ENABLED)
 189:Generated_Source\PSoC5/UART_RS485.c ****         /* RX Counter (Count7) Enable */
 190:Generated_Source\PSoC5/UART_RS485.c ****         UART_RS485_RXBITCTR_CONTROL_REG |= UART_RS485_CNTR_ENABLE;
 184              		.loc 1 190 0
 185 000e 114A     		ldr	r2, .L9
 186 0010 104B     		ldr	r3, .L9
 187 0012 1B78     		ldrb	r3, [r3]
 188 0014 DBB2     		uxtb	r3, r3
 189 0016 43F02003 		orr	r3, r3, #32
 190 001a DBB2     		uxtb	r3, r3
 191 001c 1370     		strb	r3, [r2]
 191:Generated_Source\PSoC5/UART_RS485.c **** 
 192:Generated_Source\PSoC5/UART_RS485.c ****         /* Enable the RX Interrupt */
 193:Generated_Source\PSoC5/UART_RS485.c ****         UART_RS485_RXSTATUS_ACTL_REG  |= UART_RS485_INT_ENABLE;
 192              		.loc 1 193 0
 193 001e 0E4A     		ldr	r2, .L9+4
 194 0020 0D4B     		ldr	r3, .L9+4
 195 0022 1B78     		ldrb	r3, [r3]
 196 0024 DBB2     		uxtb	r3, r3
 197 0026 43F01003 		orr	r3, r3, #16
 198 002a DBB2     		uxtb	r3, r3
 199 002c 1370     		strb	r3, [r2]
 194:Generated_Source\PSoC5/UART_RS485.c **** 
 195:Generated_Source\PSoC5/UART_RS485.c ****         #if (UART_RS485_RX_INTERRUPT_ENABLED)
 196:Generated_Source\PSoC5/UART_RS485.c ****             UART_RS485_EnableRxInt();
 200              		.loc 1 196 0
 201 002e 0B4B     		ldr	r3, .L9+8
 202 0030 0422     		movs	r2, #4
 203 0032 1A60     		str	r2, [r3]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4OTE74.s 			page 8


 197:Generated_Source\PSoC5/UART_RS485.c **** 
 198:Generated_Source\PSoC5/UART_RS485.c ****             #if (UART_RS485_RXHW_ADDRESS_ENABLED)
 199:Generated_Source\PSoC5/UART_RS485.c ****                 UART_RS485_rxAddressDetected = 0u;
 200:Generated_Source\PSoC5/UART_RS485.c ****             #endif /* (UART_RS485_RXHW_ADDRESS_ENABLED) */
 201:Generated_Source\PSoC5/UART_RS485.c ****         #endif /* (UART_RS485_RX_INTERRUPT_ENABLED) */
 202:Generated_Source\PSoC5/UART_RS485.c ****     #endif /* (UART_RS485_RX_ENABLED || UART_RS485_HD_ENABLED) */
 203:Generated_Source\PSoC5/UART_RS485.c **** 
 204:Generated_Source\PSoC5/UART_RS485.c ****     #if(UART_RS485_TX_ENABLED)
 205:Generated_Source\PSoC5/UART_RS485.c ****         /* TX Counter (DP/Count7) Enable */
 206:Generated_Source\PSoC5/UART_RS485.c ****         #if(!UART_RS485_TXCLKGEN_DP)
 207:Generated_Source\PSoC5/UART_RS485.c ****             UART_RS485_TXBITCTR_CONTROL_REG |= UART_RS485_CNTR_ENABLE;
 208:Generated_Source\PSoC5/UART_RS485.c ****         #endif /* End UART_RS485_TXCLKGEN_DP */
 209:Generated_Source\PSoC5/UART_RS485.c **** 
 210:Generated_Source\PSoC5/UART_RS485.c ****         /* Enable the TX Interrupt */
 211:Generated_Source\PSoC5/UART_RS485.c ****         UART_RS485_TXSTATUS_ACTL_REG |= UART_RS485_INT_ENABLE;
 204              		.loc 1 211 0
 205 0034 0A4A     		ldr	r2, .L9+12
 206 0036 0A4B     		ldr	r3, .L9+12
 207 0038 1B78     		ldrb	r3, [r3]
 208 003a DBB2     		uxtb	r3, r3
 209 003c 43F01003 		orr	r3, r3, #16
 210 0040 DBB2     		uxtb	r3, r3
 211 0042 1370     		strb	r3, [r2]
 212:Generated_Source\PSoC5/UART_RS485.c ****         #if (UART_RS485_TX_INTERRUPT_ENABLED)
 213:Generated_Source\PSoC5/UART_RS485.c ****             UART_RS485_ClearPendingTxInt(); /* Clear history of TX_NOT_EMPTY */
 214:Generated_Source\PSoC5/UART_RS485.c ****             UART_RS485_EnableTxInt();
 215:Generated_Source\PSoC5/UART_RS485.c ****         #endif /* (UART_RS485_TX_INTERRUPT_ENABLED) */
 216:Generated_Source\PSoC5/UART_RS485.c ****      #endif /* (UART_RS485_TX_INTERRUPT_ENABLED) */
 217:Generated_Source\PSoC5/UART_RS485.c **** 
 218:Generated_Source\PSoC5/UART_RS485.c ****     #if (UART_RS485_INTERNAL_CLOCK_USED)
 219:Generated_Source\PSoC5/UART_RS485.c ****         UART_RS485_IntClock_Start();  /* Enable the clock */
 220:Generated_Source\PSoC5/UART_RS485.c ****     #endif /* (UART_RS485_INTERNAL_CLOCK_USED) */
 221:Generated_Source\PSoC5/UART_RS485.c **** 
 222:Generated_Source\PSoC5/UART_RS485.c ****     CyExitCriticalSection(enableInterrupts);
 212              		.loc 1 222 0
 213 0044 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 214 0046 1846     		mov	r0, r3
 215 0048 FFF7FEFF 		bl	CyExitCriticalSection
 223:Generated_Source\PSoC5/UART_RS485.c **** }
 216              		.loc 1 223 0
 217 004c 00BF     		nop
 218 004e 0837     		adds	r7, r7, #8
 219              		.cfi_def_cfa_offset 8
 220 0050 BD46     		mov	sp, r7
 221              		.cfi_def_cfa_register 13
 222              		@ sp needed
 223 0052 80BD     		pop	{r7, pc}
 224              	.L10:
 225              		.align	2
 226              	.L9:
 227 0054 92640040 		.word	1073767570
 228 0058 96650040 		.word	1073767830
 229 005c 00E100E0 		.word	-536813312
 230 0060 95640040 		.word	1073767573
 231              		.cfi_endproc
 232              	.LFE2:
 233              		.size	UART_RS485_Enable, .-UART_RS485_Enable
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4OTE74.s 			page 9


 234              		.section	.text.UART_RS485_Stop,"ax",%progbits
 235              		.align	2
 236              		.global	UART_RS485_Stop
 237              		.thumb
 238              		.thumb_func
 239              		.type	UART_RS485_Stop, %function
 240              	UART_RS485_Stop:
 241              	.LFB3:
 224:Generated_Source\PSoC5/UART_RS485.c **** 
 225:Generated_Source\PSoC5/UART_RS485.c **** 
 226:Generated_Source\PSoC5/UART_RS485.c **** /*******************************************************************************
 227:Generated_Source\PSoC5/UART_RS485.c **** * Function Name: UART_RS485_Stop
 228:Generated_Source\PSoC5/UART_RS485.c **** ********************************************************************************
 229:Generated_Source\PSoC5/UART_RS485.c **** *
 230:Generated_Source\PSoC5/UART_RS485.c **** * Summary:
 231:Generated_Source\PSoC5/UART_RS485.c **** *  Disables the UART operation.
 232:Generated_Source\PSoC5/UART_RS485.c **** *
 233:Generated_Source\PSoC5/UART_RS485.c **** * Parameters:
 234:Generated_Source\PSoC5/UART_RS485.c **** *  None.
 235:Generated_Source\PSoC5/UART_RS485.c **** *
 236:Generated_Source\PSoC5/UART_RS485.c **** * Return:
 237:Generated_Source\PSoC5/UART_RS485.c **** *  None.
 238:Generated_Source\PSoC5/UART_RS485.c **** *
 239:Generated_Source\PSoC5/UART_RS485.c **** *******************************************************************************/
 240:Generated_Source\PSoC5/UART_RS485.c **** void UART_RS485_Stop(void) 
 241:Generated_Source\PSoC5/UART_RS485.c **** {
 242              		.loc 1 241 0
 243              		.cfi_startproc
 244              		@ args = 0, pretend = 0, frame = 8
 245              		@ frame_needed = 1, uses_anonymous_args = 0
 246 0000 80B5     		push	{r7, lr}
 247              		.cfi_def_cfa_offset 8
 248              		.cfi_offset 7, -8
 249              		.cfi_offset 14, -4
 250 0002 82B0     		sub	sp, sp, #8
 251              		.cfi_def_cfa_offset 16
 252 0004 00AF     		add	r7, sp, #0
 253              		.cfi_def_cfa_register 7
 242:Generated_Source\PSoC5/UART_RS485.c ****     uint8 enableInterrupts;
 243:Generated_Source\PSoC5/UART_RS485.c ****     enableInterrupts = CyEnterCriticalSection();
 254              		.loc 1 243 0
 255 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 256 000a 0346     		mov	r3, r0
 257 000c FB71     		strb	r3, [r7, #7]
 244:Generated_Source\PSoC5/UART_RS485.c **** 
 245:Generated_Source\PSoC5/UART_RS485.c ****     /* Write Bit Counter Disable */
 246:Generated_Source\PSoC5/UART_RS485.c ****     #if (UART_RS485_RX_ENABLED || UART_RS485_HD_ENABLED)
 247:Generated_Source\PSoC5/UART_RS485.c ****         UART_RS485_RXBITCTR_CONTROL_REG &= (uint8) ~UART_RS485_CNTR_ENABLE;
 258              		.loc 1 247 0
 259 000e 114A     		ldr	r2, .L12
 260 0010 104B     		ldr	r3, .L12
 261 0012 1B78     		ldrb	r3, [r3]
 262 0014 DBB2     		uxtb	r3, r3
 263 0016 23F02003 		bic	r3, r3, #32
 264 001a DBB2     		uxtb	r3, r3
 265 001c 1370     		strb	r3, [r2]
 248:Generated_Source\PSoC5/UART_RS485.c ****     #endif /* (UART_RS485_RX_ENABLED || UART_RS485_HD_ENABLED) */
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4OTE74.s 			page 10


 249:Generated_Source\PSoC5/UART_RS485.c **** 
 250:Generated_Source\PSoC5/UART_RS485.c ****     #if (UART_RS485_TX_ENABLED)
 251:Generated_Source\PSoC5/UART_RS485.c ****         #if(!UART_RS485_TXCLKGEN_DP)
 252:Generated_Source\PSoC5/UART_RS485.c ****             UART_RS485_TXBITCTR_CONTROL_REG &= (uint8) ~UART_RS485_CNTR_ENABLE;
 253:Generated_Source\PSoC5/UART_RS485.c ****         #endif /* (!UART_RS485_TXCLKGEN_DP) */
 254:Generated_Source\PSoC5/UART_RS485.c ****     #endif /* (UART_RS485_TX_ENABLED) */
 255:Generated_Source\PSoC5/UART_RS485.c **** 
 256:Generated_Source\PSoC5/UART_RS485.c ****     #if (UART_RS485_INTERNAL_CLOCK_USED)
 257:Generated_Source\PSoC5/UART_RS485.c ****         UART_RS485_IntClock_Stop();   /* Disable the clock */
 258:Generated_Source\PSoC5/UART_RS485.c ****     #endif /* (UART_RS485_INTERNAL_CLOCK_USED) */
 259:Generated_Source\PSoC5/UART_RS485.c **** 
 260:Generated_Source\PSoC5/UART_RS485.c ****     /* Disable internal interrupt component */
 261:Generated_Source\PSoC5/UART_RS485.c ****     #if (UART_RS485_RX_ENABLED || UART_RS485_HD_ENABLED)
 262:Generated_Source\PSoC5/UART_RS485.c ****         UART_RS485_RXSTATUS_ACTL_REG  &= (uint8) ~UART_RS485_INT_ENABLE;
 266              		.loc 1 262 0
 267 001e 0E4A     		ldr	r2, .L12+4
 268 0020 0D4B     		ldr	r3, .L12+4
 269 0022 1B78     		ldrb	r3, [r3]
 270 0024 DBB2     		uxtb	r3, r3
 271 0026 23F01003 		bic	r3, r3, #16
 272 002a DBB2     		uxtb	r3, r3
 273 002c 1370     		strb	r3, [r2]
 263:Generated_Source\PSoC5/UART_RS485.c **** 
 264:Generated_Source\PSoC5/UART_RS485.c ****         #if (UART_RS485_RX_INTERRUPT_ENABLED)
 265:Generated_Source\PSoC5/UART_RS485.c ****             UART_RS485_DisableRxInt();
 274              		.loc 1 265 0
 275 002e 0B4B     		ldr	r3, .L12+8
 276 0030 0422     		movs	r2, #4
 277 0032 1A60     		str	r2, [r3]
 266:Generated_Source\PSoC5/UART_RS485.c ****         #endif /* (UART_RS485_RX_INTERRUPT_ENABLED) */
 267:Generated_Source\PSoC5/UART_RS485.c ****     #endif /* (UART_RS485_RX_ENABLED || UART_RS485_HD_ENABLED) */
 268:Generated_Source\PSoC5/UART_RS485.c **** 
 269:Generated_Source\PSoC5/UART_RS485.c ****     #if (UART_RS485_TX_ENABLED)
 270:Generated_Source\PSoC5/UART_RS485.c ****         UART_RS485_TXSTATUS_ACTL_REG &= (uint8) ~UART_RS485_INT_ENABLE;
 278              		.loc 1 270 0
 279 0034 0A4A     		ldr	r2, .L12+12
 280 0036 0A4B     		ldr	r3, .L12+12
 281 0038 1B78     		ldrb	r3, [r3]
 282 003a DBB2     		uxtb	r3, r3
 283 003c 23F01003 		bic	r3, r3, #16
 284 0040 DBB2     		uxtb	r3, r3
 285 0042 1370     		strb	r3, [r2]
 271:Generated_Source\PSoC5/UART_RS485.c **** 
 272:Generated_Source\PSoC5/UART_RS485.c ****         #if (UART_RS485_TX_INTERRUPT_ENABLED)
 273:Generated_Source\PSoC5/UART_RS485.c ****             UART_RS485_DisableTxInt();
 274:Generated_Source\PSoC5/UART_RS485.c ****         #endif /* (UART_RS485_TX_INTERRUPT_ENABLED) */
 275:Generated_Source\PSoC5/UART_RS485.c ****     #endif /* (UART_RS485_TX_ENABLED) */
 276:Generated_Source\PSoC5/UART_RS485.c **** 
 277:Generated_Source\PSoC5/UART_RS485.c ****     CyExitCriticalSection(enableInterrupts);
 286              		.loc 1 277 0
 287 0044 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 288 0046 1846     		mov	r0, r3
 289 0048 FFF7FEFF 		bl	CyExitCriticalSection
 278:Generated_Source\PSoC5/UART_RS485.c **** }
 290              		.loc 1 278 0
 291 004c 00BF     		nop
 292 004e 0837     		adds	r7, r7, #8
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4OTE74.s 			page 11


 293              		.cfi_def_cfa_offset 8
 294 0050 BD46     		mov	sp, r7
 295              		.cfi_def_cfa_register 13
 296              		@ sp needed
 297 0052 80BD     		pop	{r7, pc}
 298              	.L13:
 299              		.align	2
 300              	.L12:
 301 0054 92640040 		.word	1073767570
 302 0058 96650040 		.word	1073767830
 303 005c 80E100E0 		.word	-536813184
 304 0060 95640040 		.word	1073767573
 305              		.cfi_endproc
 306              	.LFE3:
 307              		.size	UART_RS485_Stop, .-UART_RS485_Stop
 308              		.section	.text.UART_RS485_ReadControlRegister,"ax",%progbits
 309              		.align	2
 310              		.global	UART_RS485_ReadControlRegister
 311              		.thumb
 312              		.thumb_func
 313              		.type	UART_RS485_ReadControlRegister, %function
 314              	UART_RS485_ReadControlRegister:
 315              	.LFB4:
 279:Generated_Source\PSoC5/UART_RS485.c **** 
 280:Generated_Source\PSoC5/UART_RS485.c **** 
 281:Generated_Source\PSoC5/UART_RS485.c **** /*******************************************************************************
 282:Generated_Source\PSoC5/UART_RS485.c **** * Function Name: UART_RS485_ReadControlRegister
 283:Generated_Source\PSoC5/UART_RS485.c **** ********************************************************************************
 284:Generated_Source\PSoC5/UART_RS485.c **** *
 285:Generated_Source\PSoC5/UART_RS485.c **** * Summary:
 286:Generated_Source\PSoC5/UART_RS485.c **** *  Returns the current value of the control register.
 287:Generated_Source\PSoC5/UART_RS485.c **** *
 288:Generated_Source\PSoC5/UART_RS485.c **** * Parameters:
 289:Generated_Source\PSoC5/UART_RS485.c **** *  None.
 290:Generated_Source\PSoC5/UART_RS485.c **** *
 291:Generated_Source\PSoC5/UART_RS485.c **** * Return:
 292:Generated_Source\PSoC5/UART_RS485.c **** *  Contents of the control register.
 293:Generated_Source\PSoC5/UART_RS485.c **** *
 294:Generated_Source\PSoC5/UART_RS485.c **** *******************************************************************************/
 295:Generated_Source\PSoC5/UART_RS485.c **** uint8 UART_RS485_ReadControlRegister(void) 
 296:Generated_Source\PSoC5/UART_RS485.c **** {
 316              		.loc 1 296 0
 317              		.cfi_startproc
 318              		@ args = 0, pretend = 0, frame = 0
 319              		@ frame_needed = 1, uses_anonymous_args = 0
 320              		@ link register save eliminated.
 321 0000 80B4     		push	{r7}
 322              		.cfi_def_cfa_offset 4
 323              		.cfi_offset 7, -4
 324 0002 00AF     		add	r7, sp, #0
 325              		.cfi_def_cfa_register 7
 297:Generated_Source\PSoC5/UART_RS485.c ****     #if (UART_RS485_CONTROL_REG_REMOVED)
 298:Generated_Source\PSoC5/UART_RS485.c ****         return(0u);
 326              		.loc 1 298 0
 327 0004 0023     		movs	r3, #0
 299:Generated_Source\PSoC5/UART_RS485.c ****     #else
 300:Generated_Source\PSoC5/UART_RS485.c ****         return(UART_RS485_CONTROL_REG);
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4OTE74.s 			page 12


 301:Generated_Source\PSoC5/UART_RS485.c ****     #endif /* (UART_RS485_CONTROL_REG_REMOVED) */
 302:Generated_Source\PSoC5/UART_RS485.c **** }
 328              		.loc 1 302 0
 329 0006 1846     		mov	r0, r3
 330 0008 BD46     		mov	sp, r7
 331              		.cfi_def_cfa_register 13
 332              		@ sp needed
 333 000a 80BC     		pop	{r7}
 334              		.cfi_restore 7
 335              		.cfi_def_cfa_offset 0
 336 000c 7047     		bx	lr
 337              		.cfi_endproc
 338              	.LFE4:
 339              		.size	UART_RS485_ReadControlRegister, .-UART_RS485_ReadControlRegister
 340 000e 00BF     		.section	.text.UART_RS485_WriteControlRegister,"ax",%progbits
 341              		.align	2
 342              		.global	UART_RS485_WriteControlRegister
 343              		.thumb
 344              		.thumb_func
 345              		.type	UART_RS485_WriteControlRegister, %function
 346              	UART_RS485_WriteControlRegister:
 347              	.LFB5:
 303:Generated_Source\PSoC5/UART_RS485.c **** 
 304:Generated_Source\PSoC5/UART_RS485.c **** 
 305:Generated_Source\PSoC5/UART_RS485.c **** /*******************************************************************************
 306:Generated_Source\PSoC5/UART_RS485.c **** * Function Name: UART_RS485_WriteControlRegister
 307:Generated_Source\PSoC5/UART_RS485.c **** ********************************************************************************
 308:Generated_Source\PSoC5/UART_RS485.c **** *
 309:Generated_Source\PSoC5/UART_RS485.c **** * Summary:
 310:Generated_Source\PSoC5/UART_RS485.c **** *  Writes an 8-bit value into the control register
 311:Generated_Source\PSoC5/UART_RS485.c **** *
 312:Generated_Source\PSoC5/UART_RS485.c **** * Parameters:
 313:Generated_Source\PSoC5/UART_RS485.c **** *  control:  control register value
 314:Generated_Source\PSoC5/UART_RS485.c **** *
 315:Generated_Source\PSoC5/UART_RS485.c **** * Return:
 316:Generated_Source\PSoC5/UART_RS485.c **** *  None.
 317:Generated_Source\PSoC5/UART_RS485.c **** *
 318:Generated_Source\PSoC5/UART_RS485.c **** *******************************************************************************/
 319:Generated_Source\PSoC5/UART_RS485.c **** void  UART_RS485_WriteControlRegister(uint8 control) 
 320:Generated_Source\PSoC5/UART_RS485.c **** {
 348              		.loc 1 320 0
 349              		.cfi_startproc
 350              		@ args = 0, pretend = 0, frame = 8
 351              		@ frame_needed = 1, uses_anonymous_args = 0
 352              		@ link register save eliminated.
 353 0000 80B4     		push	{r7}
 354              		.cfi_def_cfa_offset 4
 355              		.cfi_offset 7, -4
 356 0002 83B0     		sub	sp, sp, #12
 357              		.cfi_def_cfa_offset 16
 358 0004 00AF     		add	r7, sp, #0
 359              		.cfi_def_cfa_register 7
 360 0006 0346     		mov	r3, r0
 361 0008 FB71     		strb	r3, [r7, #7]
 321:Generated_Source\PSoC5/UART_RS485.c ****     #if (UART_RS485_CONTROL_REG_REMOVED)
 322:Generated_Source\PSoC5/UART_RS485.c ****         if(0u != control)
 323:Generated_Source\PSoC5/UART_RS485.c ****         {
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4OTE74.s 			page 13


 324:Generated_Source\PSoC5/UART_RS485.c ****             /* Suppress compiler warning */
 325:Generated_Source\PSoC5/UART_RS485.c ****         }
 326:Generated_Source\PSoC5/UART_RS485.c ****     #else
 327:Generated_Source\PSoC5/UART_RS485.c ****        UART_RS485_CONTROL_REG = control;
 328:Generated_Source\PSoC5/UART_RS485.c ****     #endif /* (UART_RS485_CONTROL_REG_REMOVED) */
 329:Generated_Source\PSoC5/UART_RS485.c **** }
 362              		.loc 1 329 0
 363 000a 00BF     		nop
 364 000c 0C37     		adds	r7, r7, #12
 365              		.cfi_def_cfa_offset 4
 366 000e BD46     		mov	sp, r7
 367              		.cfi_def_cfa_register 13
 368              		@ sp needed
 369 0010 80BC     		pop	{r7}
 370              		.cfi_restore 7
 371              		.cfi_def_cfa_offset 0
 372 0012 7047     		bx	lr
 373              		.cfi_endproc
 374              	.LFE5:
 375              		.size	UART_RS485_WriteControlRegister, .-UART_RS485_WriteControlRegister
 376              		.section	.text.UART_RS485_SetRxInterruptMode,"ax",%progbits
 377              		.align	2
 378              		.global	UART_RS485_SetRxInterruptMode
 379              		.thumb
 380              		.thumb_func
 381              		.type	UART_RS485_SetRxInterruptMode, %function
 382              	UART_RS485_SetRxInterruptMode:
 383              	.LFB6:
 330:Generated_Source\PSoC5/UART_RS485.c **** 
 331:Generated_Source\PSoC5/UART_RS485.c **** 
 332:Generated_Source\PSoC5/UART_RS485.c **** #if(UART_RS485_RX_ENABLED || UART_RS485_HD_ENABLED)
 333:Generated_Source\PSoC5/UART_RS485.c ****     /*******************************************************************************
 334:Generated_Source\PSoC5/UART_RS485.c ****     * Function Name: UART_RS485_SetRxInterruptMode
 335:Generated_Source\PSoC5/UART_RS485.c ****     ********************************************************************************
 336:Generated_Source\PSoC5/UART_RS485.c ****     *
 337:Generated_Source\PSoC5/UART_RS485.c ****     * Summary:
 338:Generated_Source\PSoC5/UART_RS485.c ****     *  Configures the RX interrupt sources enabled.
 339:Generated_Source\PSoC5/UART_RS485.c ****     *
 340:Generated_Source\PSoC5/UART_RS485.c ****     * Parameters:
 341:Generated_Source\PSoC5/UART_RS485.c ****     *  IntSrc:  Bit field containing the RX interrupts to enable. Based on the 
 342:Generated_Source\PSoC5/UART_RS485.c ****     *  bit-field arrangement of the status register. This value must be a 
 343:Generated_Source\PSoC5/UART_RS485.c ****     *  combination of status register bit-masks shown below:
 344:Generated_Source\PSoC5/UART_RS485.c ****     *      UART_RS485_RX_STS_FIFO_NOTEMPTY    Interrupt on byte received.
 345:Generated_Source\PSoC5/UART_RS485.c ****     *      UART_RS485_RX_STS_PAR_ERROR        Interrupt on parity error.
 346:Generated_Source\PSoC5/UART_RS485.c ****     *      UART_RS485_RX_STS_STOP_ERROR       Interrupt on stop error.
 347:Generated_Source\PSoC5/UART_RS485.c ****     *      UART_RS485_RX_STS_BREAK            Interrupt on break.
 348:Generated_Source\PSoC5/UART_RS485.c ****     *      UART_RS485_RX_STS_OVERRUN          Interrupt on overrun error.
 349:Generated_Source\PSoC5/UART_RS485.c ****     *      UART_RS485_RX_STS_ADDR_MATCH       Interrupt on address match.
 350:Generated_Source\PSoC5/UART_RS485.c ****     *      UART_RS485_RX_STS_MRKSPC           Interrupt on address detect.
 351:Generated_Source\PSoC5/UART_RS485.c ****     *
 352:Generated_Source\PSoC5/UART_RS485.c ****     * Return:
 353:Generated_Source\PSoC5/UART_RS485.c ****     *  None.
 354:Generated_Source\PSoC5/UART_RS485.c ****     *
 355:Generated_Source\PSoC5/UART_RS485.c ****     * Theory:
 356:Generated_Source\PSoC5/UART_RS485.c ****     *  Enables the output of specific status bits to the interrupt controller
 357:Generated_Source\PSoC5/UART_RS485.c ****     *
 358:Generated_Source\PSoC5/UART_RS485.c ****     *******************************************************************************/
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4OTE74.s 			page 14


 359:Generated_Source\PSoC5/UART_RS485.c ****     void UART_RS485_SetRxInterruptMode(uint8 intSrc) 
 360:Generated_Source\PSoC5/UART_RS485.c ****     {
 384              		.loc 1 360 0
 385              		.cfi_startproc
 386              		@ args = 0, pretend = 0, frame = 8
 387              		@ frame_needed = 1, uses_anonymous_args = 0
 388              		@ link register save eliminated.
 389 0000 80B4     		push	{r7}
 390              		.cfi_def_cfa_offset 4
 391              		.cfi_offset 7, -4
 392 0002 83B0     		sub	sp, sp, #12
 393              		.cfi_def_cfa_offset 16
 394 0004 00AF     		add	r7, sp, #0
 395              		.cfi_def_cfa_register 7
 396 0006 0346     		mov	r3, r0
 397 0008 FB71     		strb	r3, [r7, #7]
 361:Generated_Source\PSoC5/UART_RS485.c ****         UART_RS485_RXSTATUS_MASK_REG  = intSrc;
 398              		.loc 1 361 0
 399 000a 044A     		ldr	r2, .L18
 400 000c FB79     		ldrb	r3, [r7, #7]
 401 000e 1370     		strb	r3, [r2]
 362:Generated_Source\PSoC5/UART_RS485.c ****     }
 402              		.loc 1 362 0
 403 0010 00BF     		nop
 404 0012 0C37     		adds	r7, r7, #12
 405              		.cfi_def_cfa_offset 4
 406 0014 BD46     		mov	sp, r7
 407              		.cfi_def_cfa_register 13
 408              		@ sp needed
 409 0016 80BC     		pop	{r7}
 410              		.cfi_restore 7
 411              		.cfi_def_cfa_offset 0
 412 0018 7047     		bx	lr
 413              	.L19:
 414 001a 00BF     		.align	2
 415              	.L18:
 416 001c 86650040 		.word	1073767814
 417              		.cfi_endproc
 418              	.LFE6:
 419              		.size	UART_RS485_SetRxInterruptMode, .-UART_RS485_SetRxInterruptMode
 420              		.section	.text.UART_RS485_ReadRxData,"ax",%progbits
 421              		.align	2
 422              		.global	UART_RS485_ReadRxData
 423              		.thumb
 424              		.thumb_func
 425              		.type	UART_RS485_ReadRxData, %function
 426              	UART_RS485_ReadRxData:
 427              	.LFB7:
 363:Generated_Source\PSoC5/UART_RS485.c **** 
 364:Generated_Source\PSoC5/UART_RS485.c **** 
 365:Generated_Source\PSoC5/UART_RS485.c ****     /*******************************************************************************
 366:Generated_Source\PSoC5/UART_RS485.c ****     * Function Name: UART_RS485_ReadRxData
 367:Generated_Source\PSoC5/UART_RS485.c ****     ********************************************************************************
 368:Generated_Source\PSoC5/UART_RS485.c ****     *
 369:Generated_Source\PSoC5/UART_RS485.c ****     * Summary:
 370:Generated_Source\PSoC5/UART_RS485.c ****     *  Returns the next byte of received data. This function returns data without
 371:Generated_Source\PSoC5/UART_RS485.c ****     *  checking the status. You must check the status separately.
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4OTE74.s 			page 15


 372:Generated_Source\PSoC5/UART_RS485.c ****     *
 373:Generated_Source\PSoC5/UART_RS485.c ****     * Parameters:
 374:Generated_Source\PSoC5/UART_RS485.c ****     *  None.
 375:Generated_Source\PSoC5/UART_RS485.c ****     *
 376:Generated_Source\PSoC5/UART_RS485.c ****     * Return:
 377:Generated_Source\PSoC5/UART_RS485.c ****     *  Received data from RX register
 378:Generated_Source\PSoC5/UART_RS485.c ****     *
 379:Generated_Source\PSoC5/UART_RS485.c ****     * Global Variables:
 380:Generated_Source\PSoC5/UART_RS485.c ****     *  UART_RS485_rxBuffer - RAM buffer pointer for save received data.
 381:Generated_Source\PSoC5/UART_RS485.c ****     *  UART_RS485_rxBufferWrite - cyclic index for write to rxBuffer,
 382:Generated_Source\PSoC5/UART_RS485.c ****     *     checked to identify new data.
 383:Generated_Source\PSoC5/UART_RS485.c ****     *  UART_RS485_rxBufferRead - cyclic index for read from rxBuffer,
 384:Generated_Source\PSoC5/UART_RS485.c ****     *     incremented after each byte has been read from buffer.
 385:Generated_Source\PSoC5/UART_RS485.c ****     *  UART_RS485_rxBufferLoopDetect - cleared if loop condition was detected
 386:Generated_Source\PSoC5/UART_RS485.c ****     *     in RX ISR.
 387:Generated_Source\PSoC5/UART_RS485.c ****     *
 388:Generated_Source\PSoC5/UART_RS485.c ****     * Reentrant:
 389:Generated_Source\PSoC5/UART_RS485.c ****     *  No.
 390:Generated_Source\PSoC5/UART_RS485.c ****     *
 391:Generated_Source\PSoC5/UART_RS485.c ****     *******************************************************************************/
 392:Generated_Source\PSoC5/UART_RS485.c ****     uint8 UART_RS485_ReadRxData(void) 
 393:Generated_Source\PSoC5/UART_RS485.c ****     {
 428              		.loc 1 393 0
 429              		.cfi_startproc
 430              		@ args = 0, pretend = 0, frame = 8
 431              		@ frame_needed = 1, uses_anonymous_args = 0
 432              		@ link register save eliminated.
 433 0000 80B4     		push	{r7}
 434              		.cfi_def_cfa_offset 4
 435              		.cfi_offset 7, -4
 436 0002 83B0     		sub	sp, sp, #12
 437              		.cfi_def_cfa_offset 16
 438 0004 00AF     		add	r7, sp, #0
 439              		.cfi_def_cfa_register 7
 394:Generated_Source\PSoC5/UART_RS485.c ****         uint8 rxData;
 395:Generated_Source\PSoC5/UART_RS485.c **** 
 396:Generated_Source\PSoC5/UART_RS485.c ****     #if (UART_RS485_RX_INTERRUPT_ENABLED)
 397:Generated_Source\PSoC5/UART_RS485.c **** 
 398:Generated_Source\PSoC5/UART_RS485.c ****         uint8 locRxBufferRead;
 399:Generated_Source\PSoC5/UART_RS485.c ****         uint8 locRxBufferWrite;
 400:Generated_Source\PSoC5/UART_RS485.c **** 
 401:Generated_Source\PSoC5/UART_RS485.c ****         /* Protect variables that could change on interrupt */
 402:Generated_Source\PSoC5/UART_RS485.c ****         UART_RS485_DisableRxInt();
 440              		.loc 1 402 0
 441 0006 1B4B     		ldr	r3, .L27
 442 0008 0422     		movs	r2, #4
 443 000a 1A60     		str	r2, [r3]
 403:Generated_Source\PSoC5/UART_RS485.c **** 
 404:Generated_Source\PSoC5/UART_RS485.c ****         locRxBufferRead  = UART_RS485_rxBufferRead;
 444              		.loc 1 404 0
 445 000c 1A4B     		ldr	r3, .L27+4
 446 000e 1B78     		ldrb	r3, [r3]
 447 0010 BB71     		strb	r3, [r7, #6]
 405:Generated_Source\PSoC5/UART_RS485.c ****         locRxBufferWrite = UART_RS485_rxBufferWrite;
 448              		.loc 1 405 0
 449 0012 1A4B     		ldr	r3, .L27+8
 450 0014 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4OTE74.s 			page 16


 451 0016 7B71     		strb	r3, [r7, #5]
 406:Generated_Source\PSoC5/UART_RS485.c **** 
 407:Generated_Source\PSoC5/UART_RS485.c ****         if( (UART_RS485_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 452              		.loc 1 407 0
 453 0018 194B     		ldr	r3, .L27+12
 454 001a 1B78     		ldrb	r3, [r3]
 455 001c DBB2     		uxtb	r3, r3
 456 001e 002B     		cmp	r3, #0
 457 0020 03D1     		bne	.L21
 458              		.loc 1 407 0 is_stmt 0 discriminator 1
 459 0022 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 460 0024 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 461 0026 9A42     		cmp	r2, r3
 462 0028 17D0     		beq	.L22
 463              	.L21:
 408:Generated_Source\PSoC5/UART_RS485.c ****         {
 409:Generated_Source\PSoC5/UART_RS485.c ****             rxData = UART_RS485_rxBuffer[locRxBufferRead];
 464              		.loc 1 409 0 is_stmt 1
 465 002a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 466 002c 154A     		ldr	r2, .L27+16
 467 002e D35C     		ldrb	r3, [r2, r3]
 468 0030 FB71     		strb	r3, [r7, #7]
 410:Generated_Source\PSoC5/UART_RS485.c ****             locRxBufferRead++;
 469              		.loc 1 410 0
 470 0032 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 471 0034 0133     		adds	r3, r3, #1
 472 0036 BB71     		strb	r3, [r7, #6]
 411:Generated_Source\PSoC5/UART_RS485.c **** 
 412:Generated_Source\PSoC5/UART_RS485.c ****             if(locRxBufferRead >= UART_RS485_RX_BUFFER_SIZE)
 473              		.loc 1 412 0
 474 0038 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 475 003a 1F2B     		cmp	r3, #31
 476 003c 01D9     		bls	.L23
 413:Generated_Source\PSoC5/UART_RS485.c ****             {
 414:Generated_Source\PSoC5/UART_RS485.c ****                 locRxBufferRead = 0u;
 477              		.loc 1 414 0
 478 003e 0023     		movs	r3, #0
 479 0040 BB71     		strb	r3, [r7, #6]
 480              	.L23:
 415:Generated_Source\PSoC5/UART_RS485.c ****             }
 416:Generated_Source\PSoC5/UART_RS485.c ****             /* Update the real pointer */
 417:Generated_Source\PSoC5/UART_RS485.c ****             UART_RS485_rxBufferRead = locRxBufferRead;
 481              		.loc 1 417 0
 482 0042 0D4A     		ldr	r2, .L27+4
 483 0044 BB79     		ldrb	r3, [r7, #6]
 484 0046 1370     		strb	r3, [r2]
 418:Generated_Source\PSoC5/UART_RS485.c **** 
 419:Generated_Source\PSoC5/UART_RS485.c ****             if(UART_RS485_rxBufferLoopDetect != 0u)
 485              		.loc 1 419 0
 486 0048 0D4B     		ldr	r3, .L27+12
 487 004a 1B78     		ldrb	r3, [r3]
 488 004c DBB2     		uxtb	r3, r3
 489 004e 002B     		cmp	r3, #0
 490 0050 06D0     		beq	.L25
 420:Generated_Source\PSoC5/UART_RS485.c ****             {
 421:Generated_Source\PSoC5/UART_RS485.c ****                 UART_RS485_rxBufferLoopDetect = 0u;
 491              		.loc 1 421 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4OTE74.s 			page 17


 492 0052 0B4B     		ldr	r3, .L27+12
 493 0054 0022     		movs	r2, #0
 494 0056 1A70     		strb	r2, [r3]
 419:Generated_Source\PSoC5/UART_RS485.c ****             {
 495              		.loc 1 419 0
 496 0058 02E0     		b	.L25
 497              	.L22:
 422:Generated_Source\PSoC5/UART_RS485.c ****                 #if ((UART_RS485_RX_INTERRUPT_ENABLED) && (UART_RS485_FLOW_CONTROL != 0u))
 423:Generated_Source\PSoC5/UART_RS485.c ****                     /* When Hardware Flow Control selected - return RX mask */
 424:Generated_Source\PSoC5/UART_RS485.c ****                     #if( UART_RS485_HD_ENABLED )
 425:Generated_Source\PSoC5/UART_RS485.c ****                         if((UART_RS485_CONTROL_REG & UART_RS485_CTRL_HD_SEND) == 0u)
 426:Generated_Source\PSoC5/UART_RS485.c ****                         {   /* In Half duplex mode return RX mask only in RX
 427:Generated_Source\PSoC5/UART_RS485.c ****                             *  configuration set, otherwise
 428:Generated_Source\PSoC5/UART_RS485.c ****                             *  mask will be returned in LoadRxConfig() API.
 429:Generated_Source\PSoC5/UART_RS485.c ****                             */
 430:Generated_Source\PSoC5/UART_RS485.c ****                             UART_RS485_RXSTATUS_MASK_REG  |= UART_RS485_RX_STS_FIFO_NOTEMPTY;
 431:Generated_Source\PSoC5/UART_RS485.c ****                         }
 432:Generated_Source\PSoC5/UART_RS485.c ****                     #else
 433:Generated_Source\PSoC5/UART_RS485.c ****                         UART_RS485_RXSTATUS_MASK_REG  |= UART_RS485_RX_STS_FIFO_NOTEMPTY;
 434:Generated_Source\PSoC5/UART_RS485.c ****                     #endif /* end UART_RS485_HD_ENABLED */
 435:Generated_Source\PSoC5/UART_RS485.c ****                 #endif /* ((UART_RS485_RX_INTERRUPT_ENABLED) && (UART_RS485_FLOW_CONTROL != 0u)) */
 436:Generated_Source\PSoC5/UART_RS485.c ****             }
 437:Generated_Source\PSoC5/UART_RS485.c ****         }
 438:Generated_Source\PSoC5/UART_RS485.c ****         else
 439:Generated_Source\PSoC5/UART_RS485.c ****         {   /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 440:Generated_Source\PSoC5/UART_RS485.c ****             rxData = UART_RS485_RXDATA_REG;
 498              		.loc 1 440 0
 499 005a 0B4B     		ldr	r3, .L27+20
 500 005c 1B78     		ldrb	r3, [r3]
 501 005e FB71     		strb	r3, [r7, #7]
 502              	.L25:
 441:Generated_Source\PSoC5/UART_RS485.c ****         }
 442:Generated_Source\PSoC5/UART_RS485.c **** 
 443:Generated_Source\PSoC5/UART_RS485.c ****         UART_RS485_EnableRxInt();
 503              		.loc 1 443 0
 504 0060 0A4B     		ldr	r3, .L27+24
 505 0062 0422     		movs	r2, #4
 506 0064 1A60     		str	r2, [r3]
 444:Generated_Source\PSoC5/UART_RS485.c **** 
 445:Generated_Source\PSoC5/UART_RS485.c ****     #else
 446:Generated_Source\PSoC5/UART_RS485.c **** 
 447:Generated_Source\PSoC5/UART_RS485.c ****         /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 448:Generated_Source\PSoC5/UART_RS485.c ****         rxData = UART_RS485_RXDATA_REG;
 449:Generated_Source\PSoC5/UART_RS485.c **** 
 450:Generated_Source\PSoC5/UART_RS485.c ****     #endif /* (UART_RS485_RX_INTERRUPT_ENABLED) */
 451:Generated_Source\PSoC5/UART_RS485.c **** 
 452:Generated_Source\PSoC5/UART_RS485.c ****         return(rxData);
 507              		.loc 1 452 0
 508 0066 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 453:Generated_Source\PSoC5/UART_RS485.c ****     }
 509              		.loc 1 453 0
 510 0068 1846     		mov	r0, r3
 511 006a 0C37     		adds	r7, r7, #12
 512              		.cfi_def_cfa_offset 4
 513 006c BD46     		mov	sp, r7
 514              		.cfi_def_cfa_register 13
 515              		@ sp needed
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4OTE74.s 			page 18


 516 006e 80BC     		pop	{r7}
 517              		.cfi_restore 7
 518              		.cfi_def_cfa_offset 0
 519 0070 7047     		bx	lr
 520              	.L28:
 521 0072 00BF     		.align	2
 522              	.L27:
 523 0074 80E100E0 		.word	-536813184
 524 0078 00000000 		.word	UART_RS485_rxBufferRead
 525 007c 00000000 		.word	UART_RS485_rxBufferWrite
 526 0080 00000000 		.word	UART_RS485_rxBufferLoopDetect
 527 0084 00000000 		.word	UART_RS485_rxBuffer
 528 0088 46650040 		.word	1073767750
 529 008c 00E100E0 		.word	-536813312
 530              		.cfi_endproc
 531              	.LFE7:
 532              		.size	UART_RS485_ReadRxData, .-UART_RS485_ReadRxData
 533              		.section	.text.UART_RS485_ReadRxStatus,"ax",%progbits
 534              		.align	2
 535              		.global	UART_RS485_ReadRxStatus
 536              		.thumb
 537              		.thumb_func
 538              		.type	UART_RS485_ReadRxStatus, %function
 539              	UART_RS485_ReadRxStatus:
 540              	.LFB8:
 454:Generated_Source\PSoC5/UART_RS485.c **** 
 455:Generated_Source\PSoC5/UART_RS485.c **** 
 456:Generated_Source\PSoC5/UART_RS485.c ****     /*******************************************************************************
 457:Generated_Source\PSoC5/UART_RS485.c ****     * Function Name: UART_RS485_ReadRxStatus
 458:Generated_Source\PSoC5/UART_RS485.c ****     ********************************************************************************
 459:Generated_Source\PSoC5/UART_RS485.c ****     *
 460:Generated_Source\PSoC5/UART_RS485.c ****     * Summary:
 461:Generated_Source\PSoC5/UART_RS485.c ****     *  Returns the current state of the receiver status register and the software
 462:Generated_Source\PSoC5/UART_RS485.c ****     *  buffer overflow status.
 463:Generated_Source\PSoC5/UART_RS485.c ****     *
 464:Generated_Source\PSoC5/UART_RS485.c ****     * Parameters:
 465:Generated_Source\PSoC5/UART_RS485.c ****     *  None.
 466:Generated_Source\PSoC5/UART_RS485.c ****     *
 467:Generated_Source\PSoC5/UART_RS485.c ****     * Return:
 468:Generated_Source\PSoC5/UART_RS485.c ****     *  Current state of the status register.
 469:Generated_Source\PSoC5/UART_RS485.c ****     *
 470:Generated_Source\PSoC5/UART_RS485.c ****     * Side Effect:
 471:Generated_Source\PSoC5/UART_RS485.c ****     *  All status register bits are clear-on-read except
 472:Generated_Source\PSoC5/UART_RS485.c ****     *  UART_RS485_RX_STS_FIFO_NOTEMPTY.
 473:Generated_Source\PSoC5/UART_RS485.c ****     *  UART_RS485_RX_STS_FIFO_NOTEMPTY clears immediately after RX data
 474:Generated_Source\PSoC5/UART_RS485.c ****     *  register read.
 475:Generated_Source\PSoC5/UART_RS485.c ****     *
 476:Generated_Source\PSoC5/UART_RS485.c ****     * Global Variables:
 477:Generated_Source\PSoC5/UART_RS485.c ****     *  UART_RS485_rxBufferOverflow - used to indicate overload condition.
 478:Generated_Source\PSoC5/UART_RS485.c ****     *   It set to one in RX interrupt when there isn't free space in
 479:Generated_Source\PSoC5/UART_RS485.c ****     *   UART_RS485_rxBufferRead to write new data. This condition returned
 480:Generated_Source\PSoC5/UART_RS485.c ****     *   and cleared to zero by this API as an
 481:Generated_Source\PSoC5/UART_RS485.c ****     *   UART_RS485_RX_STS_SOFT_BUFF_OVER bit along with RX Status register
 482:Generated_Source\PSoC5/UART_RS485.c ****     *   bits.
 483:Generated_Source\PSoC5/UART_RS485.c ****     *
 484:Generated_Source\PSoC5/UART_RS485.c ****     *******************************************************************************/
 485:Generated_Source\PSoC5/UART_RS485.c ****     uint8 UART_RS485_ReadRxStatus(void) 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4OTE74.s 			page 19


 486:Generated_Source\PSoC5/UART_RS485.c ****     {
 541              		.loc 1 486 0
 542              		.cfi_startproc
 543              		@ args = 0, pretend = 0, frame = 8
 544              		@ frame_needed = 1, uses_anonymous_args = 0
 545              		@ link register save eliminated.
 546 0000 80B4     		push	{r7}
 547              		.cfi_def_cfa_offset 4
 548              		.cfi_offset 7, -4
 549 0002 83B0     		sub	sp, sp, #12
 550              		.cfi_def_cfa_offset 16
 551 0004 00AF     		add	r7, sp, #0
 552              		.cfi_def_cfa_register 7
 487:Generated_Source\PSoC5/UART_RS485.c ****         uint8 status;
 488:Generated_Source\PSoC5/UART_RS485.c **** 
 489:Generated_Source\PSoC5/UART_RS485.c ****         status = UART_RS485_RXSTATUS_REG & UART_RS485_RX_HW_MASK;
 553              		.loc 1 489 0
 554 0006 0C4B     		ldr	r3, .L32
 555 0008 1B78     		ldrb	r3, [r3]
 556 000a DBB2     		uxtb	r3, r3
 557 000c 03F07F03 		and	r3, r3, #127
 558 0010 FB71     		strb	r3, [r7, #7]
 490:Generated_Source\PSoC5/UART_RS485.c **** 
 491:Generated_Source\PSoC5/UART_RS485.c ****     #if (UART_RS485_RX_INTERRUPT_ENABLED)
 492:Generated_Source\PSoC5/UART_RS485.c ****         if(UART_RS485_rxBufferOverflow != 0u)
 559              		.loc 1 492 0
 560 0012 0A4B     		ldr	r3, .L32+4
 561 0014 1B78     		ldrb	r3, [r3]
 562 0016 DBB2     		uxtb	r3, r3
 563 0018 002B     		cmp	r3, #0
 564 001a 06D0     		beq	.L30
 493:Generated_Source\PSoC5/UART_RS485.c ****         {
 494:Generated_Source\PSoC5/UART_RS485.c ****             status |= UART_RS485_RX_STS_SOFT_BUFF_OVER;
 565              		.loc 1 494 0
 566 001c FB79     		ldrb	r3, [r7, #7]
 567 001e 63F07F03 		orn	r3, r3, #127
 568 0022 FB71     		strb	r3, [r7, #7]
 495:Generated_Source\PSoC5/UART_RS485.c ****             UART_RS485_rxBufferOverflow = 0u;
 569              		.loc 1 495 0
 570 0024 054B     		ldr	r3, .L32+4
 571 0026 0022     		movs	r2, #0
 572 0028 1A70     		strb	r2, [r3]
 573              	.L30:
 496:Generated_Source\PSoC5/UART_RS485.c ****         }
 497:Generated_Source\PSoC5/UART_RS485.c ****     #endif /* (UART_RS485_RX_INTERRUPT_ENABLED) */
 498:Generated_Source\PSoC5/UART_RS485.c **** 
 499:Generated_Source\PSoC5/UART_RS485.c ****         return(status);
 574              		.loc 1 499 0
 575 002a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 500:Generated_Source\PSoC5/UART_RS485.c ****     }
 576              		.loc 1 500 0
 577 002c 1846     		mov	r0, r3
 578 002e 0C37     		adds	r7, r7, #12
 579              		.cfi_def_cfa_offset 4
 580 0030 BD46     		mov	sp, r7
 581              		.cfi_def_cfa_register 13
 582              		@ sp needed
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4OTE74.s 			page 20


 583 0032 80BC     		pop	{r7}
 584              		.cfi_restore 7
 585              		.cfi_def_cfa_offset 0
 586 0034 7047     		bx	lr
 587              	.L33:
 588 0036 00BF     		.align	2
 589              	.L32:
 590 0038 66650040 		.word	1073767782
 591 003c 00000000 		.word	UART_RS485_rxBufferOverflow
 592              		.cfi_endproc
 593              	.LFE8:
 594              		.size	UART_RS485_ReadRxStatus, .-UART_RS485_ReadRxStatus
 595              		.section	.text.UART_RS485_GetChar,"ax",%progbits
 596              		.align	2
 597              		.global	UART_RS485_GetChar
 598              		.thumb
 599              		.thumb_func
 600              		.type	UART_RS485_GetChar, %function
 601              	UART_RS485_GetChar:
 602              	.LFB9:
 501:Generated_Source\PSoC5/UART_RS485.c **** 
 502:Generated_Source\PSoC5/UART_RS485.c **** 
 503:Generated_Source\PSoC5/UART_RS485.c ****     /*******************************************************************************
 504:Generated_Source\PSoC5/UART_RS485.c ****     * Function Name: UART_RS485_GetChar
 505:Generated_Source\PSoC5/UART_RS485.c ****     ********************************************************************************
 506:Generated_Source\PSoC5/UART_RS485.c ****     *
 507:Generated_Source\PSoC5/UART_RS485.c ****     * Summary:
 508:Generated_Source\PSoC5/UART_RS485.c ****     *  Returns the last received byte of data. UART_RS485_GetChar() is
 509:Generated_Source\PSoC5/UART_RS485.c ****     *  designed for ASCII characters and returns a uint8 where 1 to 255 are values
 510:Generated_Source\PSoC5/UART_RS485.c ****     *  for valid characters and 0 indicates an error occurred or no data is present.
 511:Generated_Source\PSoC5/UART_RS485.c ****     *
 512:Generated_Source\PSoC5/UART_RS485.c ****     * Parameters:
 513:Generated_Source\PSoC5/UART_RS485.c ****     *  None.
 514:Generated_Source\PSoC5/UART_RS485.c ****     *
 515:Generated_Source\PSoC5/UART_RS485.c ****     * Return:
 516:Generated_Source\PSoC5/UART_RS485.c ****     *  Character read from UART RX buffer. ASCII characters from 1 to 255 are valid.
 517:Generated_Source\PSoC5/UART_RS485.c ****     *  A returned zero signifies an error condition or no data available.
 518:Generated_Source\PSoC5/UART_RS485.c ****     *
 519:Generated_Source\PSoC5/UART_RS485.c ****     * Global Variables:
 520:Generated_Source\PSoC5/UART_RS485.c ****     *  UART_RS485_rxBuffer - RAM buffer pointer for save received data.
 521:Generated_Source\PSoC5/UART_RS485.c ****     *  UART_RS485_rxBufferWrite - cyclic index for write to rxBuffer,
 522:Generated_Source\PSoC5/UART_RS485.c ****     *     checked to identify new data.
 523:Generated_Source\PSoC5/UART_RS485.c ****     *  UART_RS485_rxBufferRead - cyclic index for read from rxBuffer,
 524:Generated_Source\PSoC5/UART_RS485.c ****     *     incremented after each byte has been read from buffer.
 525:Generated_Source\PSoC5/UART_RS485.c ****     *  UART_RS485_rxBufferLoopDetect - cleared if loop condition was detected
 526:Generated_Source\PSoC5/UART_RS485.c ****     *     in RX ISR.
 527:Generated_Source\PSoC5/UART_RS485.c ****     *
 528:Generated_Source\PSoC5/UART_RS485.c ****     * Reentrant:
 529:Generated_Source\PSoC5/UART_RS485.c ****     *  No.
 530:Generated_Source\PSoC5/UART_RS485.c ****     *
 531:Generated_Source\PSoC5/UART_RS485.c ****     *******************************************************************************/
 532:Generated_Source\PSoC5/UART_RS485.c ****     uint8 UART_RS485_GetChar(void) 
 533:Generated_Source\PSoC5/UART_RS485.c ****     {
 603              		.loc 1 533 0
 604              		.cfi_startproc
 605              		@ args = 0, pretend = 0, frame = 8
 606              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4OTE74.s 			page 21


 607              		@ link register save eliminated.
 608 0000 80B4     		push	{r7}
 609              		.cfi_def_cfa_offset 4
 610              		.cfi_offset 7, -4
 611 0002 83B0     		sub	sp, sp, #12
 612              		.cfi_def_cfa_offset 16
 613 0004 00AF     		add	r7, sp, #0
 614              		.cfi_def_cfa_register 7
 534:Generated_Source\PSoC5/UART_RS485.c ****         uint8 rxData = 0u;
 615              		.loc 1 534 0
 616 0006 0023     		movs	r3, #0
 617 0008 FB71     		strb	r3, [r7, #7]
 535:Generated_Source\PSoC5/UART_RS485.c ****         uint8 rxStatus;
 536:Generated_Source\PSoC5/UART_RS485.c **** 
 537:Generated_Source\PSoC5/UART_RS485.c ****     #if (UART_RS485_RX_INTERRUPT_ENABLED)
 538:Generated_Source\PSoC5/UART_RS485.c ****         uint8 locRxBufferRead;
 539:Generated_Source\PSoC5/UART_RS485.c ****         uint8 locRxBufferWrite;
 540:Generated_Source\PSoC5/UART_RS485.c **** 
 541:Generated_Source\PSoC5/UART_RS485.c ****         /* Protect variables that could change on interrupt */
 542:Generated_Source\PSoC5/UART_RS485.c ****         UART_RS485_DisableRxInt();
 618              		.loc 1 542 0
 619 000a 224B     		ldr	r3, .L41
 620 000c 0422     		movs	r2, #4
 621 000e 1A60     		str	r2, [r3]
 543:Generated_Source\PSoC5/UART_RS485.c **** 
 544:Generated_Source\PSoC5/UART_RS485.c ****         locRxBufferRead  = UART_RS485_rxBufferRead;
 622              		.loc 1 544 0
 623 0010 214B     		ldr	r3, .L41+4
 624 0012 1B78     		ldrb	r3, [r3]
 625 0014 BB71     		strb	r3, [r7, #6]
 545:Generated_Source\PSoC5/UART_RS485.c ****         locRxBufferWrite = UART_RS485_rxBufferWrite;
 626              		.loc 1 545 0
 627 0016 214B     		ldr	r3, .L41+8
 628 0018 1B78     		ldrb	r3, [r3]
 629 001a 7B71     		strb	r3, [r7, #5]
 546:Generated_Source\PSoC5/UART_RS485.c **** 
 547:Generated_Source\PSoC5/UART_RS485.c ****         if( (UART_RS485_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 630              		.loc 1 547 0
 631 001c 204B     		ldr	r3, .L41+12
 632 001e 1B78     		ldrb	r3, [r3]
 633 0020 DBB2     		uxtb	r3, r3
 634 0022 002B     		cmp	r3, #0
 635 0024 03D1     		bne	.L35
 636              		.loc 1 547 0 is_stmt 0 discriminator 1
 637 0026 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 638 0028 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 639 002a 9A42     		cmp	r2, r3
 640 002c 17D0     		beq	.L36
 641              	.L35:
 548:Generated_Source\PSoC5/UART_RS485.c ****         {
 549:Generated_Source\PSoC5/UART_RS485.c ****             rxData = UART_RS485_rxBuffer[locRxBufferRead];
 642              		.loc 1 549 0 is_stmt 1
 643 002e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 644 0030 1C4A     		ldr	r2, .L41+16
 645 0032 D35C     		ldrb	r3, [r2, r3]
 646 0034 FB71     		strb	r3, [r7, #7]
 550:Generated_Source\PSoC5/UART_RS485.c ****             locRxBufferRead++;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4OTE74.s 			page 22


 647              		.loc 1 550 0
 648 0036 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 649 0038 0133     		adds	r3, r3, #1
 650 003a BB71     		strb	r3, [r7, #6]
 551:Generated_Source\PSoC5/UART_RS485.c ****             if(locRxBufferRead >= UART_RS485_RX_BUFFER_SIZE)
 651              		.loc 1 551 0
 652 003c BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 653 003e 1F2B     		cmp	r3, #31
 654 0040 01D9     		bls	.L37
 552:Generated_Source\PSoC5/UART_RS485.c ****             {
 553:Generated_Source\PSoC5/UART_RS485.c ****                 locRxBufferRead = 0u;
 655              		.loc 1 553 0
 656 0042 0023     		movs	r3, #0
 657 0044 BB71     		strb	r3, [r7, #6]
 658              	.L37:
 554:Generated_Source\PSoC5/UART_RS485.c ****             }
 555:Generated_Source\PSoC5/UART_RS485.c ****             /* Update the real pointer */
 556:Generated_Source\PSoC5/UART_RS485.c ****             UART_RS485_rxBufferRead = locRxBufferRead;
 659              		.loc 1 556 0
 660 0046 144A     		ldr	r2, .L41+4
 661 0048 BB79     		ldrb	r3, [r7, #6]
 662 004a 1370     		strb	r3, [r2]
 557:Generated_Source\PSoC5/UART_RS485.c **** 
 558:Generated_Source\PSoC5/UART_RS485.c ****             if(UART_RS485_rxBufferLoopDetect != 0u)
 663              		.loc 1 558 0
 664 004c 144B     		ldr	r3, .L41+12
 665 004e 1B78     		ldrb	r3, [r3]
 666 0050 DBB2     		uxtb	r3, r3
 667 0052 002B     		cmp	r3, #0
 668 0054 15D0     		beq	.L39
 559:Generated_Source\PSoC5/UART_RS485.c ****             {
 560:Generated_Source\PSoC5/UART_RS485.c ****                 UART_RS485_rxBufferLoopDetect = 0u;
 669              		.loc 1 560 0
 670 0056 124B     		ldr	r3, .L41+12
 671 0058 0022     		movs	r2, #0
 672 005a 1A70     		strb	r2, [r3]
 558:Generated_Source\PSoC5/UART_RS485.c ****             {
 673              		.loc 1 558 0
 674 005c 11E0     		b	.L39
 675              	.L36:
 561:Generated_Source\PSoC5/UART_RS485.c ****                 #if( (UART_RS485_RX_INTERRUPT_ENABLED) && (UART_RS485_FLOW_CONTROL != 0u) )
 562:Generated_Source\PSoC5/UART_RS485.c ****                     /* When Hardware Flow Control selected - return RX mask */
 563:Generated_Source\PSoC5/UART_RS485.c ****                     #if( UART_RS485_HD_ENABLED )
 564:Generated_Source\PSoC5/UART_RS485.c ****                         if((UART_RS485_CONTROL_REG & UART_RS485_CTRL_HD_SEND) == 0u)
 565:Generated_Source\PSoC5/UART_RS485.c ****                         {   /* In Half duplex mode return RX mask only if
 566:Generated_Source\PSoC5/UART_RS485.c ****                             *  RX configuration set, otherwise
 567:Generated_Source\PSoC5/UART_RS485.c ****                             *  mask will be returned in LoadRxConfig() API.
 568:Generated_Source\PSoC5/UART_RS485.c ****                             */
 569:Generated_Source\PSoC5/UART_RS485.c ****                             UART_RS485_RXSTATUS_MASK_REG |= UART_RS485_RX_STS_FIFO_NOTEMPTY;
 570:Generated_Source\PSoC5/UART_RS485.c ****                         }
 571:Generated_Source\PSoC5/UART_RS485.c ****                     #else
 572:Generated_Source\PSoC5/UART_RS485.c ****                         UART_RS485_RXSTATUS_MASK_REG |= UART_RS485_RX_STS_FIFO_NOTEMPTY;
 573:Generated_Source\PSoC5/UART_RS485.c ****                     #endif /* end UART_RS485_HD_ENABLED */
 574:Generated_Source\PSoC5/UART_RS485.c ****                 #endif /* UART_RS485_RX_INTERRUPT_ENABLED and Hardware flow control*/
 575:Generated_Source\PSoC5/UART_RS485.c ****             }
 576:Generated_Source\PSoC5/UART_RS485.c **** 
 577:Generated_Source\PSoC5/UART_RS485.c ****         }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4OTE74.s 			page 23


 578:Generated_Source\PSoC5/UART_RS485.c ****         else
 579:Generated_Source\PSoC5/UART_RS485.c ****         {   rxStatus = UART_RS485_RXSTATUS_REG;
 676              		.loc 1 579 0
 677 005e 124B     		ldr	r3, .L41+20
 678 0060 1B78     		ldrb	r3, [r3]
 679 0062 3B71     		strb	r3, [r7, #4]
 580:Generated_Source\PSoC5/UART_RS485.c ****             if((rxStatus & UART_RS485_RX_STS_FIFO_NOTEMPTY) != 0u)
 680              		.loc 1 580 0
 681 0064 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 682 0066 03F02003 		and	r3, r3, #32
 683 006a 002B     		cmp	r3, #0
 684 006c 09D0     		beq	.L39
 581:Generated_Source\PSoC5/UART_RS485.c ****             {   /* Read received data from FIFO */
 582:Generated_Source\PSoC5/UART_RS485.c ****                 rxData = UART_RS485_RXDATA_REG;
 685              		.loc 1 582 0
 686 006e 0F4B     		ldr	r3, .L41+24
 687 0070 1B78     		ldrb	r3, [r3]
 688 0072 FB71     		strb	r3, [r7, #7]
 583:Generated_Source\PSoC5/UART_RS485.c ****                 /*Check status on error*/
 584:Generated_Source\PSoC5/UART_RS485.c ****                 if((rxStatus & (UART_RS485_RX_STS_BREAK | UART_RS485_RX_STS_PAR_ERROR |
 585:Generated_Source\PSoC5/UART_RS485.c ****                                 UART_RS485_RX_STS_STOP_ERROR | UART_RS485_RX_STS_OVERRUN)) != 0u)
 689              		.loc 1 585 0
 690 0074 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 691 0076 03F01E03 		and	r3, r3, #30
 584:Generated_Source\PSoC5/UART_RS485.c ****                                 UART_RS485_RX_STS_STOP_ERROR | UART_RS485_RX_STS_OVERRUN)) != 0u)
 692              		.loc 1 584 0
 693 007a 002B     		cmp	r3, #0
 694 007c 01D0     		beq	.L39
 586:Generated_Source\PSoC5/UART_RS485.c ****                 {
 587:Generated_Source\PSoC5/UART_RS485.c ****                     rxData = 0u;
 695              		.loc 1 587 0
 696 007e 0023     		movs	r3, #0
 697 0080 FB71     		strb	r3, [r7, #7]
 698              	.L39:
 588:Generated_Source\PSoC5/UART_RS485.c ****                 }
 589:Generated_Source\PSoC5/UART_RS485.c ****             }
 590:Generated_Source\PSoC5/UART_RS485.c ****         }
 591:Generated_Source\PSoC5/UART_RS485.c **** 
 592:Generated_Source\PSoC5/UART_RS485.c ****         UART_RS485_EnableRxInt();
 699              		.loc 1 592 0
 700 0082 0B4B     		ldr	r3, .L41+28
 701 0084 0422     		movs	r2, #4
 702 0086 1A60     		str	r2, [r3]
 593:Generated_Source\PSoC5/UART_RS485.c **** 
 594:Generated_Source\PSoC5/UART_RS485.c ****     #else
 595:Generated_Source\PSoC5/UART_RS485.c **** 
 596:Generated_Source\PSoC5/UART_RS485.c ****         rxStatus =UART_RS485_RXSTATUS_REG;
 597:Generated_Source\PSoC5/UART_RS485.c ****         if((rxStatus & UART_RS485_RX_STS_FIFO_NOTEMPTY) != 0u)
 598:Generated_Source\PSoC5/UART_RS485.c ****         {
 599:Generated_Source\PSoC5/UART_RS485.c ****             /* Read received data from FIFO */
 600:Generated_Source\PSoC5/UART_RS485.c ****             rxData = UART_RS485_RXDATA_REG;
 601:Generated_Source\PSoC5/UART_RS485.c **** 
 602:Generated_Source\PSoC5/UART_RS485.c ****             /*Check status on error*/
 603:Generated_Source\PSoC5/UART_RS485.c ****             if((rxStatus & (UART_RS485_RX_STS_BREAK | UART_RS485_RX_STS_PAR_ERROR |
 604:Generated_Source\PSoC5/UART_RS485.c ****                             UART_RS485_RX_STS_STOP_ERROR | UART_RS485_RX_STS_OVERRUN)) != 0u)
 605:Generated_Source\PSoC5/UART_RS485.c ****             {
 606:Generated_Source\PSoC5/UART_RS485.c ****                 rxData = 0u;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4OTE74.s 			page 24


 607:Generated_Source\PSoC5/UART_RS485.c ****             }
 608:Generated_Source\PSoC5/UART_RS485.c ****         }
 609:Generated_Source\PSoC5/UART_RS485.c ****     #endif /* (UART_RS485_RX_INTERRUPT_ENABLED) */
 610:Generated_Source\PSoC5/UART_RS485.c **** 
 611:Generated_Source\PSoC5/UART_RS485.c ****         return(rxData);
 703              		.loc 1 611 0
 704 0088 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 612:Generated_Source\PSoC5/UART_RS485.c ****     }
 705              		.loc 1 612 0
 706 008a 1846     		mov	r0, r3
 707 008c 0C37     		adds	r7, r7, #12
 708              		.cfi_def_cfa_offset 4
 709 008e BD46     		mov	sp, r7
 710              		.cfi_def_cfa_register 13
 711              		@ sp needed
 712 0090 80BC     		pop	{r7}
 713              		.cfi_restore 7
 714              		.cfi_def_cfa_offset 0
 715 0092 7047     		bx	lr
 716              	.L42:
 717              		.align	2
 718              	.L41:
 719 0094 80E100E0 		.word	-536813184
 720 0098 00000000 		.word	UART_RS485_rxBufferRead
 721 009c 00000000 		.word	UART_RS485_rxBufferWrite
 722 00a0 00000000 		.word	UART_RS485_rxBufferLoopDetect
 723 00a4 00000000 		.word	UART_RS485_rxBuffer
 724 00a8 66650040 		.word	1073767782
 725 00ac 46650040 		.word	1073767750
 726 00b0 00E100E0 		.word	-536813312
 727              		.cfi_endproc
 728              	.LFE9:
 729              		.size	UART_RS485_GetChar, .-UART_RS485_GetChar
 730              		.section	.text.UART_RS485_GetByte,"ax",%progbits
 731              		.align	2
 732              		.global	UART_RS485_GetByte
 733              		.thumb
 734              		.thumb_func
 735              		.type	UART_RS485_GetByte, %function
 736              	UART_RS485_GetByte:
 737              	.LFB10:
 613:Generated_Source\PSoC5/UART_RS485.c **** 
 614:Generated_Source\PSoC5/UART_RS485.c **** 
 615:Generated_Source\PSoC5/UART_RS485.c ****     /*******************************************************************************
 616:Generated_Source\PSoC5/UART_RS485.c ****     * Function Name: UART_RS485_GetByte
 617:Generated_Source\PSoC5/UART_RS485.c ****     ********************************************************************************
 618:Generated_Source\PSoC5/UART_RS485.c ****     *
 619:Generated_Source\PSoC5/UART_RS485.c ****     * Summary:
 620:Generated_Source\PSoC5/UART_RS485.c ****     *  Reads UART RX buffer immediately, returns received character and error
 621:Generated_Source\PSoC5/UART_RS485.c ****     *  condition.
 622:Generated_Source\PSoC5/UART_RS485.c ****     *
 623:Generated_Source\PSoC5/UART_RS485.c ****     * Parameters:
 624:Generated_Source\PSoC5/UART_RS485.c ****     *  None.
 625:Generated_Source\PSoC5/UART_RS485.c ****     *
 626:Generated_Source\PSoC5/UART_RS485.c ****     * Return:
 627:Generated_Source\PSoC5/UART_RS485.c ****     *  MSB contains status and LSB contains UART RX data. If the MSB is nonzero,
 628:Generated_Source\PSoC5/UART_RS485.c ****     *  an error has occurred.
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4OTE74.s 			page 25


 629:Generated_Source\PSoC5/UART_RS485.c ****     *
 630:Generated_Source\PSoC5/UART_RS485.c ****     * Reentrant:
 631:Generated_Source\PSoC5/UART_RS485.c ****     *  No.
 632:Generated_Source\PSoC5/UART_RS485.c ****     *
 633:Generated_Source\PSoC5/UART_RS485.c ****     *******************************************************************************/
 634:Generated_Source\PSoC5/UART_RS485.c ****     uint16 UART_RS485_GetByte(void) 
 635:Generated_Source\PSoC5/UART_RS485.c ****     {
 738              		.loc 1 635 0
 739              		.cfi_startproc
 740              		@ args = 0, pretend = 0, frame = 8
 741              		@ frame_needed = 1, uses_anonymous_args = 0
 742 0000 90B5     		push	{r4, r7, lr}
 743              		.cfi_def_cfa_offset 12
 744              		.cfi_offset 4, -12
 745              		.cfi_offset 7, -8
 746              		.cfi_offset 14, -4
 747 0002 83B0     		sub	sp, sp, #12
 748              		.cfi_def_cfa_offset 24
 749 0004 00AF     		add	r7, sp, #0
 750              		.cfi_def_cfa_register 7
 636:Generated_Source\PSoC5/UART_RS485.c ****         
 637:Generated_Source\PSoC5/UART_RS485.c ****     #if (UART_RS485_RX_INTERRUPT_ENABLED)
 638:Generated_Source\PSoC5/UART_RS485.c ****         uint16 locErrorStatus;
 639:Generated_Source\PSoC5/UART_RS485.c ****         /* Protect variables that could change on interrupt */
 640:Generated_Source\PSoC5/UART_RS485.c ****         UART_RS485_DisableRxInt();
 751              		.loc 1 640 0
 752 0006 0C4B     		ldr	r3, .L45
 753 0008 0422     		movs	r2, #4
 754 000a 1A60     		str	r2, [r3]
 641:Generated_Source\PSoC5/UART_RS485.c ****         locErrorStatus = (uint16)UART_RS485_errorStatus;
 755              		.loc 1 641 0
 756 000c 0B4B     		ldr	r3, .L45+4
 757 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 758 0010 FB80     		strh	r3, [r7, #6]	@ movhi
 642:Generated_Source\PSoC5/UART_RS485.c ****         UART_RS485_errorStatus = 0u;
 759              		.loc 1 642 0
 760 0012 0A4B     		ldr	r3, .L45+4
 761 0014 0022     		movs	r2, #0
 762 0016 1A70     		strb	r2, [r3]
 643:Generated_Source\PSoC5/UART_RS485.c ****         UART_RS485_EnableRxInt();
 763              		.loc 1 643 0
 764 0018 094B     		ldr	r3, .L45+8
 765 001a 0422     		movs	r2, #4
 766 001c 1A60     		str	r2, [r3]
 644:Generated_Source\PSoC5/UART_RS485.c ****         return ( (uint16)(locErrorStatus << 8u) | UART_RS485_ReadRxData() );
 767              		.loc 1 644 0
 768 001e FB88     		ldrh	r3, [r7, #6]	@ movhi
 769 0020 1B02     		lsls	r3, r3, #8
 770 0022 9CB2     		uxth	r4, r3
 771 0024 FFF7FEFF 		bl	UART_RS485_ReadRxData
 772 0028 0346     		mov	r3, r0
 773 002a 9BB2     		uxth	r3, r3
 774 002c 2343     		orrs	r3, r3, r4
 775 002e 9BB2     		uxth	r3, r3
 645:Generated_Source\PSoC5/UART_RS485.c ****     #else
 646:Generated_Source\PSoC5/UART_RS485.c ****         return ( ((uint16)UART_RS485_ReadRxStatus() << 8u) | UART_RS485_ReadRxData() );
 647:Generated_Source\PSoC5/UART_RS485.c ****     #endif /* UART_RS485_RX_INTERRUPT_ENABLED */
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4OTE74.s 			page 26


 648:Generated_Source\PSoC5/UART_RS485.c ****         
 649:Generated_Source\PSoC5/UART_RS485.c ****     }
 776              		.loc 1 649 0
 777 0030 1846     		mov	r0, r3
 778 0032 0C37     		adds	r7, r7, #12
 779              		.cfi_def_cfa_offset 12
 780 0034 BD46     		mov	sp, r7
 781              		.cfi_def_cfa_register 13
 782              		@ sp needed
 783 0036 90BD     		pop	{r4, r7, pc}
 784              	.L46:
 785              		.align	2
 786              	.L45:
 787 0038 80E100E0 		.word	-536813184
 788 003c 00000000 		.word	UART_RS485_errorStatus
 789 0040 00E100E0 		.word	-536813312
 790              		.cfi_endproc
 791              	.LFE10:
 792              		.size	UART_RS485_GetByte, .-UART_RS485_GetByte
 793              		.section	.text.UART_RS485_GetRxBufferSize,"ax",%progbits
 794              		.align	2
 795              		.global	UART_RS485_GetRxBufferSize
 796              		.thumb
 797              		.thumb_func
 798              		.type	UART_RS485_GetRxBufferSize, %function
 799              	UART_RS485_GetRxBufferSize:
 800              	.LFB11:
 650:Generated_Source\PSoC5/UART_RS485.c **** 
 651:Generated_Source\PSoC5/UART_RS485.c **** 
 652:Generated_Source\PSoC5/UART_RS485.c ****     /*******************************************************************************
 653:Generated_Source\PSoC5/UART_RS485.c ****     * Function Name: UART_RS485_GetRxBufferSize
 654:Generated_Source\PSoC5/UART_RS485.c ****     ********************************************************************************
 655:Generated_Source\PSoC5/UART_RS485.c ****     *
 656:Generated_Source\PSoC5/UART_RS485.c ****     * Summary:
 657:Generated_Source\PSoC5/UART_RS485.c ****     *  Returns the number of received bytes available in the RX buffer.
 658:Generated_Source\PSoC5/UART_RS485.c ****     *  * RX software buffer is disabled (RX Buffer Size parameter is equal to 4): 
 659:Generated_Source\PSoC5/UART_RS485.c ****     *    returns 0 for empty RX FIFO or 1 for not empty RX FIFO.
 660:Generated_Source\PSoC5/UART_RS485.c ****     *  * RX software buffer is enabled: returns the number of bytes available in 
 661:Generated_Source\PSoC5/UART_RS485.c ****     *    the RX software buffer. Bytes available in the RX FIFO do not take to 
 662:Generated_Source\PSoC5/UART_RS485.c ****     *    account.
 663:Generated_Source\PSoC5/UART_RS485.c ****     *
 664:Generated_Source\PSoC5/UART_RS485.c ****     * Parameters:
 665:Generated_Source\PSoC5/UART_RS485.c ****     *  None.
 666:Generated_Source\PSoC5/UART_RS485.c ****     *
 667:Generated_Source\PSoC5/UART_RS485.c ****     * Return:
 668:Generated_Source\PSoC5/UART_RS485.c ****     *  uint8: Number of bytes in the RX buffer. 
 669:Generated_Source\PSoC5/UART_RS485.c ****     *    Return value type depends on RX Buffer Size parameter.
 670:Generated_Source\PSoC5/UART_RS485.c ****     *
 671:Generated_Source\PSoC5/UART_RS485.c ****     * Global Variables:
 672:Generated_Source\PSoC5/UART_RS485.c ****     *  UART_RS485_rxBufferWrite - used to calculate left bytes.
 673:Generated_Source\PSoC5/UART_RS485.c ****     *  UART_RS485_rxBufferRead - used to calculate left bytes.
 674:Generated_Source\PSoC5/UART_RS485.c ****     *  UART_RS485_rxBufferLoopDetect - checked to decide left bytes amount.
 675:Generated_Source\PSoC5/UART_RS485.c ****     *
 676:Generated_Source\PSoC5/UART_RS485.c ****     * Reentrant:
 677:Generated_Source\PSoC5/UART_RS485.c ****     *  No.
 678:Generated_Source\PSoC5/UART_RS485.c ****     *
 679:Generated_Source\PSoC5/UART_RS485.c ****     * Theory:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4OTE74.s 			page 27


 680:Generated_Source\PSoC5/UART_RS485.c ****     *  Allows the user to find out how full the RX Buffer is.
 681:Generated_Source\PSoC5/UART_RS485.c ****     *
 682:Generated_Source\PSoC5/UART_RS485.c ****     *******************************************************************************/
 683:Generated_Source\PSoC5/UART_RS485.c ****     uint8 UART_RS485_GetRxBufferSize(void)
 684:Generated_Source\PSoC5/UART_RS485.c ****                                                             
 685:Generated_Source\PSoC5/UART_RS485.c ****     {
 801              		.loc 1 685 0
 802              		.cfi_startproc
 803              		@ args = 0, pretend = 0, frame = 8
 804              		@ frame_needed = 1, uses_anonymous_args = 0
 805              		@ link register save eliminated.
 806 0000 80B4     		push	{r7}
 807              		.cfi_def_cfa_offset 4
 808              		.cfi_offset 7, -4
 809 0002 83B0     		sub	sp, sp, #12
 810              		.cfi_def_cfa_offset 16
 811 0004 00AF     		add	r7, sp, #0
 812              		.cfi_def_cfa_register 7
 686:Generated_Source\PSoC5/UART_RS485.c ****         uint8 size;
 687:Generated_Source\PSoC5/UART_RS485.c **** 
 688:Generated_Source\PSoC5/UART_RS485.c ****     #if (UART_RS485_RX_INTERRUPT_ENABLED)
 689:Generated_Source\PSoC5/UART_RS485.c **** 
 690:Generated_Source\PSoC5/UART_RS485.c ****         /* Protect variables that could change on interrupt */
 691:Generated_Source\PSoC5/UART_RS485.c ****         UART_RS485_DisableRxInt();
 813              		.loc 1 691 0
 814 0006 1D4B     		ldr	r3, .L54
 815 0008 0422     		movs	r2, #4
 816 000a 1A60     		str	r2, [r3]
 692:Generated_Source\PSoC5/UART_RS485.c **** 
 693:Generated_Source\PSoC5/UART_RS485.c ****         if(UART_RS485_rxBufferRead == UART_RS485_rxBufferWrite)
 817              		.loc 1 693 0
 818 000c 1C4B     		ldr	r3, .L54+4
 819 000e 1B78     		ldrb	r3, [r3]
 820 0010 DAB2     		uxtb	r2, r3
 821 0012 1C4B     		ldr	r3, .L54+8
 822 0014 1B78     		ldrb	r3, [r3]
 823 0016 DBB2     		uxtb	r3, r3
 824 0018 9A42     		cmp	r2, r3
 825 001a 0AD1     		bne	.L48
 694:Generated_Source\PSoC5/UART_RS485.c ****         {
 695:Generated_Source\PSoC5/UART_RS485.c ****             if(UART_RS485_rxBufferLoopDetect != 0u)
 826              		.loc 1 695 0
 827 001c 1A4B     		ldr	r3, .L54+12
 828 001e 1B78     		ldrb	r3, [r3]
 829 0020 DBB2     		uxtb	r3, r3
 830 0022 002B     		cmp	r3, #0
 831 0024 02D0     		beq	.L49
 696:Generated_Source\PSoC5/UART_RS485.c ****             {
 697:Generated_Source\PSoC5/UART_RS485.c ****                 size = UART_RS485_RX_BUFFER_SIZE;
 832              		.loc 1 697 0
 833 0026 2023     		movs	r3, #32
 834 0028 FB71     		strb	r3, [r7, #7]
 835 002a 1DE0     		b	.L51
 836              	.L49:
 698:Generated_Source\PSoC5/UART_RS485.c ****             }
 699:Generated_Source\PSoC5/UART_RS485.c ****             else
 700:Generated_Source\PSoC5/UART_RS485.c ****             {
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4OTE74.s 			page 28


 701:Generated_Source\PSoC5/UART_RS485.c ****                 size = 0u;
 837              		.loc 1 701 0
 838 002c 0023     		movs	r3, #0
 839 002e FB71     		strb	r3, [r7, #7]
 840 0030 1AE0     		b	.L51
 841              	.L48:
 702:Generated_Source\PSoC5/UART_RS485.c ****             }
 703:Generated_Source\PSoC5/UART_RS485.c ****         }
 704:Generated_Source\PSoC5/UART_RS485.c ****         else if(UART_RS485_rxBufferRead < UART_RS485_rxBufferWrite)
 842              		.loc 1 704 0
 843 0032 134B     		ldr	r3, .L54+4
 844 0034 1B78     		ldrb	r3, [r3]
 845 0036 DAB2     		uxtb	r2, r3
 846 0038 124B     		ldr	r3, .L54+8
 847 003a 1B78     		ldrb	r3, [r3]
 848 003c DBB2     		uxtb	r3, r3
 849 003e 9A42     		cmp	r2, r3
 850 0040 08D2     		bcs	.L52
 705:Generated_Source\PSoC5/UART_RS485.c ****         {
 706:Generated_Source\PSoC5/UART_RS485.c ****             size = (UART_RS485_rxBufferWrite - UART_RS485_rxBufferRead);
 851              		.loc 1 706 0
 852 0042 104B     		ldr	r3, .L54+8
 853 0044 1B78     		ldrb	r3, [r3]
 854 0046 DAB2     		uxtb	r2, r3
 855 0048 0D4B     		ldr	r3, .L54+4
 856 004a 1B78     		ldrb	r3, [r3]
 857 004c DBB2     		uxtb	r3, r3
 858 004e D31A     		subs	r3, r2, r3
 859 0050 FB71     		strb	r3, [r7, #7]
 860 0052 09E0     		b	.L51
 861              	.L52:
 707:Generated_Source\PSoC5/UART_RS485.c ****         }
 708:Generated_Source\PSoC5/UART_RS485.c ****         else
 709:Generated_Source\PSoC5/UART_RS485.c ****         {
 710:Generated_Source\PSoC5/UART_RS485.c ****             size = (UART_RS485_RX_BUFFER_SIZE - UART_RS485_rxBufferRead) + UART_RS485_rxBufferWrite
 862              		.loc 1 710 0
 863 0054 0B4B     		ldr	r3, .L54+8
 864 0056 1B78     		ldrb	r3, [r3]
 865 0058 DAB2     		uxtb	r2, r3
 866 005a 094B     		ldr	r3, .L54+4
 867 005c 1B78     		ldrb	r3, [r3]
 868 005e DBB2     		uxtb	r3, r3
 869 0060 D31A     		subs	r3, r2, r3
 870 0062 DBB2     		uxtb	r3, r3
 871 0064 2033     		adds	r3, r3, #32
 872 0066 FB71     		strb	r3, [r7, #7]
 873              	.L51:
 711:Generated_Source\PSoC5/UART_RS485.c ****         }
 712:Generated_Source\PSoC5/UART_RS485.c **** 
 713:Generated_Source\PSoC5/UART_RS485.c ****         UART_RS485_EnableRxInt();
 874              		.loc 1 713 0
 875 0068 084B     		ldr	r3, .L54+16
 876 006a 0422     		movs	r2, #4
 877 006c 1A60     		str	r2, [r3]
 714:Generated_Source\PSoC5/UART_RS485.c **** 
 715:Generated_Source\PSoC5/UART_RS485.c ****     #else
 716:Generated_Source\PSoC5/UART_RS485.c **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4OTE74.s 			page 29


 717:Generated_Source\PSoC5/UART_RS485.c ****         /* We can only know if there is data in the fifo. */
 718:Generated_Source\PSoC5/UART_RS485.c ****         size = ((UART_RS485_RXSTATUS_REG & UART_RS485_RX_STS_FIFO_NOTEMPTY) != 0u) ? 1u : 0u;
 719:Generated_Source\PSoC5/UART_RS485.c **** 
 720:Generated_Source\PSoC5/UART_RS485.c ****     #endif /* (UART_RS485_RX_INTERRUPT_ENABLED) */
 721:Generated_Source\PSoC5/UART_RS485.c **** 
 722:Generated_Source\PSoC5/UART_RS485.c ****         return(size);
 878              		.loc 1 722 0
 879 006e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 723:Generated_Source\PSoC5/UART_RS485.c ****     }
 880              		.loc 1 723 0
 881 0070 1846     		mov	r0, r3
 882 0072 0C37     		adds	r7, r7, #12
 883              		.cfi_def_cfa_offset 4
 884 0074 BD46     		mov	sp, r7
 885              		.cfi_def_cfa_register 13
 886              		@ sp needed
 887 0076 80BC     		pop	{r7}
 888              		.cfi_restore 7
 889              		.cfi_def_cfa_offset 0
 890 0078 7047     		bx	lr
 891              	.L55:
 892 007a 00BF     		.align	2
 893              	.L54:
 894 007c 80E100E0 		.word	-536813184
 895 0080 00000000 		.word	UART_RS485_rxBufferRead
 896 0084 00000000 		.word	UART_RS485_rxBufferWrite
 897 0088 00000000 		.word	UART_RS485_rxBufferLoopDetect
 898 008c 00E100E0 		.word	-536813312
 899              		.cfi_endproc
 900              	.LFE11:
 901              		.size	UART_RS485_GetRxBufferSize, .-UART_RS485_GetRxBufferSize
 902              		.section	.text.UART_RS485_ClearRxBuffer,"ax",%progbits
 903              		.align	2
 904              		.global	UART_RS485_ClearRxBuffer
 905              		.thumb
 906              		.thumb_func
 907              		.type	UART_RS485_ClearRxBuffer, %function
 908              	UART_RS485_ClearRxBuffer:
 909              	.LFB12:
 724:Generated_Source\PSoC5/UART_RS485.c **** 
 725:Generated_Source\PSoC5/UART_RS485.c **** 
 726:Generated_Source\PSoC5/UART_RS485.c ****     /*******************************************************************************
 727:Generated_Source\PSoC5/UART_RS485.c ****     * Function Name: UART_RS485_ClearRxBuffer
 728:Generated_Source\PSoC5/UART_RS485.c ****     ********************************************************************************
 729:Generated_Source\PSoC5/UART_RS485.c ****     *
 730:Generated_Source\PSoC5/UART_RS485.c ****     * Summary:
 731:Generated_Source\PSoC5/UART_RS485.c ****     *  Clears the receiver memory buffer and hardware RX FIFO of all received data.
 732:Generated_Source\PSoC5/UART_RS485.c ****     *
 733:Generated_Source\PSoC5/UART_RS485.c ****     * Parameters:
 734:Generated_Source\PSoC5/UART_RS485.c ****     *  None.
 735:Generated_Source\PSoC5/UART_RS485.c ****     *
 736:Generated_Source\PSoC5/UART_RS485.c ****     * Return:
 737:Generated_Source\PSoC5/UART_RS485.c ****     *  None.
 738:Generated_Source\PSoC5/UART_RS485.c ****     *
 739:Generated_Source\PSoC5/UART_RS485.c ****     * Global Variables:
 740:Generated_Source\PSoC5/UART_RS485.c ****     *  UART_RS485_rxBufferWrite - cleared to zero.
 741:Generated_Source\PSoC5/UART_RS485.c ****     *  UART_RS485_rxBufferRead - cleared to zero.
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4OTE74.s 			page 30


 742:Generated_Source\PSoC5/UART_RS485.c ****     *  UART_RS485_rxBufferLoopDetect - cleared to zero.
 743:Generated_Source\PSoC5/UART_RS485.c ****     *  UART_RS485_rxBufferOverflow - cleared to zero.
 744:Generated_Source\PSoC5/UART_RS485.c ****     *
 745:Generated_Source\PSoC5/UART_RS485.c ****     * Reentrant:
 746:Generated_Source\PSoC5/UART_RS485.c ****     *  No.
 747:Generated_Source\PSoC5/UART_RS485.c ****     *
 748:Generated_Source\PSoC5/UART_RS485.c ****     * Theory:
 749:Generated_Source\PSoC5/UART_RS485.c ****     *  Setting the pointers to zero makes the system believe there is no data to
 750:Generated_Source\PSoC5/UART_RS485.c ****     *  read and writing will resume at address 0 overwriting any data that may
 751:Generated_Source\PSoC5/UART_RS485.c ****     *  have remained in the RAM.
 752:Generated_Source\PSoC5/UART_RS485.c ****     *
 753:Generated_Source\PSoC5/UART_RS485.c ****     * Side Effects:
 754:Generated_Source\PSoC5/UART_RS485.c ****     *  Any received data not read from the RAM or FIFO buffer will be lost.
 755:Generated_Source\PSoC5/UART_RS485.c ****     *
 756:Generated_Source\PSoC5/UART_RS485.c ****     *******************************************************************************/
 757:Generated_Source\PSoC5/UART_RS485.c ****     void UART_RS485_ClearRxBuffer(void) 
 758:Generated_Source\PSoC5/UART_RS485.c ****     {
 910              		.loc 1 758 0
 911              		.cfi_startproc
 912              		@ args = 0, pretend = 0, frame = 8
 913              		@ frame_needed = 1, uses_anonymous_args = 0
 914 0000 80B5     		push	{r7, lr}
 915              		.cfi_def_cfa_offset 8
 916              		.cfi_offset 7, -8
 917              		.cfi_offset 14, -4
 918 0002 82B0     		sub	sp, sp, #8
 919              		.cfi_def_cfa_offset 16
 920 0004 00AF     		add	r7, sp, #0
 921              		.cfi_def_cfa_register 7
 759:Generated_Source\PSoC5/UART_RS485.c ****         uint8 enableInterrupts;
 760:Generated_Source\PSoC5/UART_RS485.c **** 
 761:Generated_Source\PSoC5/UART_RS485.c ****         /* Clear the HW FIFO */
 762:Generated_Source\PSoC5/UART_RS485.c ****         enableInterrupts = CyEnterCriticalSection();
 922              		.loc 1 762 0
 923 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 924 000a 0346     		mov	r3, r0
 925 000c FB71     		strb	r3, [r7, #7]
 763:Generated_Source\PSoC5/UART_RS485.c ****         UART_RS485_RXDATA_AUX_CTL_REG |= (uint8)  UART_RS485_RX_FIFO_CLR;
 926              		.loc 1 763 0
 927 000e 154A     		ldr	r2, .L57
 928 0010 144B     		ldr	r3, .L57
 929 0012 1B78     		ldrb	r3, [r3]
 930 0014 DBB2     		uxtb	r3, r3
 931 0016 43F00103 		orr	r3, r3, #1
 932 001a DBB2     		uxtb	r3, r3
 933 001c 1370     		strb	r3, [r2]
 764:Generated_Source\PSoC5/UART_RS485.c ****         UART_RS485_RXDATA_AUX_CTL_REG &= (uint8) ~UART_RS485_RX_FIFO_CLR;
 934              		.loc 1 764 0
 935 001e 114A     		ldr	r2, .L57
 936 0020 104B     		ldr	r3, .L57
 937 0022 1B78     		ldrb	r3, [r3]
 938 0024 DBB2     		uxtb	r3, r3
 939 0026 23F00103 		bic	r3, r3, #1
 940 002a DBB2     		uxtb	r3, r3
 941 002c 1370     		strb	r3, [r2]
 765:Generated_Source\PSoC5/UART_RS485.c ****         CyExitCriticalSection(enableInterrupts);
 942              		.loc 1 765 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4OTE74.s 			page 31


 943 002e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 944 0030 1846     		mov	r0, r3
 945 0032 FFF7FEFF 		bl	CyExitCriticalSection
 766:Generated_Source\PSoC5/UART_RS485.c **** 
 767:Generated_Source\PSoC5/UART_RS485.c ****     #if (UART_RS485_RX_INTERRUPT_ENABLED)
 768:Generated_Source\PSoC5/UART_RS485.c **** 
 769:Generated_Source\PSoC5/UART_RS485.c ****         /* Protect variables that could change on interrupt. */
 770:Generated_Source\PSoC5/UART_RS485.c ****         UART_RS485_DisableRxInt();
 946              		.loc 1 770 0
 947 0036 0C4B     		ldr	r3, .L57+4
 948 0038 0422     		movs	r2, #4
 949 003a 1A60     		str	r2, [r3]
 771:Generated_Source\PSoC5/UART_RS485.c **** 
 772:Generated_Source\PSoC5/UART_RS485.c ****         UART_RS485_rxBufferRead = 0u;
 950              		.loc 1 772 0
 951 003c 0B4B     		ldr	r3, .L57+8
 952 003e 0022     		movs	r2, #0
 953 0040 1A70     		strb	r2, [r3]
 773:Generated_Source\PSoC5/UART_RS485.c ****         UART_RS485_rxBufferWrite = 0u;
 954              		.loc 1 773 0
 955 0042 0B4B     		ldr	r3, .L57+12
 956 0044 0022     		movs	r2, #0
 957 0046 1A70     		strb	r2, [r3]
 774:Generated_Source\PSoC5/UART_RS485.c ****         UART_RS485_rxBufferLoopDetect = 0u;
 958              		.loc 1 774 0
 959 0048 0A4B     		ldr	r3, .L57+16
 960 004a 0022     		movs	r2, #0
 961 004c 1A70     		strb	r2, [r3]
 775:Generated_Source\PSoC5/UART_RS485.c ****         UART_RS485_rxBufferOverflow = 0u;
 962              		.loc 1 775 0
 963 004e 0A4B     		ldr	r3, .L57+20
 964 0050 0022     		movs	r2, #0
 965 0052 1A70     		strb	r2, [r3]
 776:Generated_Source\PSoC5/UART_RS485.c **** 
 777:Generated_Source\PSoC5/UART_RS485.c ****         UART_RS485_EnableRxInt();
 966              		.loc 1 777 0
 967 0054 094B     		ldr	r3, .L57+24
 968 0056 0422     		movs	r2, #4
 969 0058 1A60     		str	r2, [r3]
 778:Generated_Source\PSoC5/UART_RS485.c **** 
 779:Generated_Source\PSoC5/UART_RS485.c ****     #endif /* (UART_RS485_RX_INTERRUPT_ENABLED) */
 780:Generated_Source\PSoC5/UART_RS485.c **** 
 781:Generated_Source\PSoC5/UART_RS485.c ****     }
 970              		.loc 1 781 0
 971 005a 00BF     		nop
 972 005c 0837     		adds	r7, r7, #8
 973              		.cfi_def_cfa_offset 8
 974 005e BD46     		mov	sp, r7
 975              		.cfi_def_cfa_register 13
 976              		@ sp needed
 977 0060 80BD     		pop	{r7, pc}
 978              	.L58:
 979 0062 00BF     		.align	2
 980              	.L57:
 981 0064 96650040 		.word	1073767830
 982 0068 80E100E0 		.word	-536813184
 983 006c 00000000 		.word	UART_RS485_rxBufferRead
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4OTE74.s 			page 32


 984 0070 00000000 		.word	UART_RS485_rxBufferWrite
 985 0074 00000000 		.word	UART_RS485_rxBufferLoopDetect
 986 0078 00000000 		.word	UART_RS485_rxBufferOverflow
 987 007c 00E100E0 		.word	-536813312
 988              		.cfi_endproc
 989              	.LFE12:
 990              		.size	UART_RS485_ClearRxBuffer, .-UART_RS485_ClearRxBuffer
 991              		.section	.text.UART_RS485_SetRxAddressMode,"ax",%progbits
 992              		.align	2
 993              		.global	UART_RS485_SetRxAddressMode
 994              		.thumb
 995              		.thumb_func
 996              		.type	UART_RS485_SetRxAddressMode, %function
 997              	UART_RS485_SetRxAddressMode:
 998              	.LFB13:
 782:Generated_Source\PSoC5/UART_RS485.c **** 
 783:Generated_Source\PSoC5/UART_RS485.c **** 
 784:Generated_Source\PSoC5/UART_RS485.c ****     /*******************************************************************************
 785:Generated_Source\PSoC5/UART_RS485.c ****     * Function Name: UART_RS485_SetRxAddressMode
 786:Generated_Source\PSoC5/UART_RS485.c ****     ********************************************************************************
 787:Generated_Source\PSoC5/UART_RS485.c ****     *
 788:Generated_Source\PSoC5/UART_RS485.c ****     * Summary:
 789:Generated_Source\PSoC5/UART_RS485.c ****     *  Sets the software controlled Addressing mode used by the RX portion of the
 790:Generated_Source\PSoC5/UART_RS485.c ****     *  UART.
 791:Generated_Source\PSoC5/UART_RS485.c ****     *
 792:Generated_Source\PSoC5/UART_RS485.c ****     * Parameters:
 793:Generated_Source\PSoC5/UART_RS485.c ****     *  addressMode: Enumerated value indicating the mode of RX addressing
 794:Generated_Source\PSoC5/UART_RS485.c ****     *  UART_RS485__B_UART__AM_SW_BYTE_BYTE -  Software Byte-by-Byte address
 795:Generated_Source\PSoC5/UART_RS485.c ****     *                                               detection
 796:Generated_Source\PSoC5/UART_RS485.c ****     *  UART_RS485__B_UART__AM_SW_DETECT_TO_BUFFER - Software Detect to Buffer
 797:Generated_Source\PSoC5/UART_RS485.c ****     *                                               address detection
 798:Generated_Source\PSoC5/UART_RS485.c ****     *  UART_RS485__B_UART__AM_HW_BYTE_BY_BYTE - Hardware Byte-by-Byte address
 799:Generated_Source\PSoC5/UART_RS485.c ****     *                                               detection
 800:Generated_Source\PSoC5/UART_RS485.c ****     *  UART_RS485__B_UART__AM_HW_DETECT_TO_BUFFER - Hardware Detect to Buffer
 801:Generated_Source\PSoC5/UART_RS485.c ****     *                                               address detection
 802:Generated_Source\PSoC5/UART_RS485.c ****     *  UART_RS485__B_UART__AM_NONE - No address detection
 803:Generated_Source\PSoC5/UART_RS485.c ****     *
 804:Generated_Source\PSoC5/UART_RS485.c ****     * Return:
 805:Generated_Source\PSoC5/UART_RS485.c ****     *  None.
 806:Generated_Source\PSoC5/UART_RS485.c ****     *
 807:Generated_Source\PSoC5/UART_RS485.c ****     * Global Variables:
 808:Generated_Source\PSoC5/UART_RS485.c ****     *  UART_RS485_rxAddressMode - the parameter stored in this variable for
 809:Generated_Source\PSoC5/UART_RS485.c ****     *   the farther usage in RX ISR.
 810:Generated_Source\PSoC5/UART_RS485.c ****     *  UART_RS485_rxAddressDetected - set to initial state (0).
 811:Generated_Source\PSoC5/UART_RS485.c ****     *
 812:Generated_Source\PSoC5/UART_RS485.c ****     *******************************************************************************/
 813:Generated_Source\PSoC5/UART_RS485.c ****     void UART_RS485_SetRxAddressMode(uint8 addressMode)
 814:Generated_Source\PSoC5/UART_RS485.c ****                                                         
 815:Generated_Source\PSoC5/UART_RS485.c ****     {
 999              		.loc 1 815 0
 1000              		.cfi_startproc
 1001              		@ args = 0, pretend = 0, frame = 8
 1002              		@ frame_needed = 1, uses_anonymous_args = 0
 1003              		@ link register save eliminated.
 1004 0000 80B4     		push	{r7}
 1005              		.cfi_def_cfa_offset 4
 1006              		.cfi_offset 7, -4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4OTE74.s 			page 33


 1007 0002 83B0     		sub	sp, sp, #12
 1008              		.cfi_def_cfa_offset 16
 1009 0004 00AF     		add	r7, sp, #0
 1010              		.cfi_def_cfa_register 7
 1011 0006 0346     		mov	r3, r0
 1012 0008 FB71     		strb	r3, [r7, #7]
 816:Generated_Source\PSoC5/UART_RS485.c ****         #if(UART_RS485_RXHW_ADDRESS_ENABLED)
 817:Generated_Source\PSoC5/UART_RS485.c ****             #if(UART_RS485_CONTROL_REG_REMOVED)
 818:Generated_Source\PSoC5/UART_RS485.c ****                 if(0u != addressMode)
 819:Generated_Source\PSoC5/UART_RS485.c ****                 {
 820:Generated_Source\PSoC5/UART_RS485.c ****                     /* Suppress compiler warning */
 821:Generated_Source\PSoC5/UART_RS485.c ****                 }
 822:Generated_Source\PSoC5/UART_RS485.c ****             #else /* UART_RS485_CONTROL_REG_REMOVED */
 823:Generated_Source\PSoC5/UART_RS485.c ****                 uint8 tmpCtrl;
 824:Generated_Source\PSoC5/UART_RS485.c ****                 tmpCtrl = UART_RS485_CONTROL_REG & (uint8)~UART_RS485_CTRL_RXADDR_MODE_MASK;
 825:Generated_Source\PSoC5/UART_RS485.c ****                 tmpCtrl |= (uint8)(addressMode << UART_RS485_CTRL_RXADDR_MODE0_SHIFT);
 826:Generated_Source\PSoC5/UART_RS485.c ****                 UART_RS485_CONTROL_REG = tmpCtrl;
 827:Generated_Source\PSoC5/UART_RS485.c **** 
 828:Generated_Source\PSoC5/UART_RS485.c ****                 #if(UART_RS485_RX_INTERRUPT_ENABLED && \
 829:Generated_Source\PSoC5/UART_RS485.c ****                    (UART_RS485_RXBUFFERSIZE > UART_RS485_FIFO_LENGTH) )
 830:Generated_Source\PSoC5/UART_RS485.c ****                     UART_RS485_rxAddressMode = addressMode;
 831:Generated_Source\PSoC5/UART_RS485.c ****                     UART_RS485_rxAddressDetected = 0u;
 832:Generated_Source\PSoC5/UART_RS485.c ****                 #endif /* End UART_RS485_RXBUFFERSIZE > UART_RS485_FIFO_LENGTH*/
 833:Generated_Source\PSoC5/UART_RS485.c ****             #endif /* End UART_RS485_CONTROL_REG_REMOVED */
 834:Generated_Source\PSoC5/UART_RS485.c ****         #else /* UART_RS485_RXHW_ADDRESS_ENABLED */
 835:Generated_Source\PSoC5/UART_RS485.c ****             if(0u != addressMode)
 836:Generated_Source\PSoC5/UART_RS485.c ****             {
 837:Generated_Source\PSoC5/UART_RS485.c ****                 /* Suppress compiler warning */
 838:Generated_Source\PSoC5/UART_RS485.c ****             }
 839:Generated_Source\PSoC5/UART_RS485.c ****         #endif /* End UART_RS485_RXHW_ADDRESS_ENABLED */
 840:Generated_Source\PSoC5/UART_RS485.c ****     }
 1013              		.loc 1 840 0
 1014 000a 00BF     		nop
 1015 000c 0C37     		adds	r7, r7, #12
 1016              		.cfi_def_cfa_offset 4
 1017 000e BD46     		mov	sp, r7
 1018              		.cfi_def_cfa_register 13
 1019              		@ sp needed
 1020 0010 80BC     		pop	{r7}
 1021              		.cfi_restore 7
 1022              		.cfi_def_cfa_offset 0
 1023 0012 7047     		bx	lr
 1024              		.cfi_endproc
 1025              	.LFE13:
 1026              		.size	UART_RS485_SetRxAddressMode, .-UART_RS485_SetRxAddressMode
 1027              		.section	.text.UART_RS485_SetRxAddress1,"ax",%progbits
 1028              		.align	2
 1029              		.global	UART_RS485_SetRxAddress1
 1030              		.thumb
 1031              		.thumb_func
 1032              		.type	UART_RS485_SetRxAddress1, %function
 1033              	UART_RS485_SetRxAddress1:
 1034              	.LFB14:
 841:Generated_Source\PSoC5/UART_RS485.c **** 
 842:Generated_Source\PSoC5/UART_RS485.c **** 
 843:Generated_Source\PSoC5/UART_RS485.c ****     /*******************************************************************************
 844:Generated_Source\PSoC5/UART_RS485.c ****     * Function Name: UART_RS485_SetRxAddress1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4OTE74.s 			page 34


 845:Generated_Source\PSoC5/UART_RS485.c ****     ********************************************************************************
 846:Generated_Source\PSoC5/UART_RS485.c ****     *
 847:Generated_Source\PSoC5/UART_RS485.c ****     * Summary:
 848:Generated_Source\PSoC5/UART_RS485.c ****     *  Sets the first of two hardware-detectable receiver addresses.
 849:Generated_Source\PSoC5/UART_RS485.c ****     *
 850:Generated_Source\PSoC5/UART_RS485.c ****     * Parameters:
 851:Generated_Source\PSoC5/UART_RS485.c ****     *  address: Address #1 for hardware address detection.
 852:Generated_Source\PSoC5/UART_RS485.c ****     *
 853:Generated_Source\PSoC5/UART_RS485.c ****     * Return:
 854:Generated_Source\PSoC5/UART_RS485.c ****     *  None.
 855:Generated_Source\PSoC5/UART_RS485.c ****     *
 856:Generated_Source\PSoC5/UART_RS485.c ****     *******************************************************************************/
 857:Generated_Source\PSoC5/UART_RS485.c ****     void UART_RS485_SetRxAddress1(uint8 address) 
 858:Generated_Source\PSoC5/UART_RS485.c ****     {
 1035              		.loc 1 858 0
 1036              		.cfi_startproc
 1037              		@ args = 0, pretend = 0, frame = 8
 1038              		@ frame_needed = 1, uses_anonymous_args = 0
 1039              		@ link register save eliminated.
 1040 0000 80B4     		push	{r7}
 1041              		.cfi_def_cfa_offset 4
 1042              		.cfi_offset 7, -4
 1043 0002 83B0     		sub	sp, sp, #12
 1044              		.cfi_def_cfa_offset 16
 1045 0004 00AF     		add	r7, sp, #0
 1046              		.cfi_def_cfa_register 7
 1047 0006 0346     		mov	r3, r0
 1048 0008 FB71     		strb	r3, [r7, #7]
 859:Generated_Source\PSoC5/UART_RS485.c ****         UART_RS485_RXADDRESS1_REG = address;
 1049              		.loc 1 859 0
 1050 000a 044A     		ldr	r2, .L61
 1051 000c FB79     		ldrb	r3, [r7, #7]
 1052 000e 1370     		strb	r3, [r2]
 860:Generated_Source\PSoC5/UART_RS485.c ****     }
 1053              		.loc 1 860 0
 1054 0010 00BF     		nop
 1055 0012 0C37     		adds	r7, r7, #12
 1056              		.cfi_def_cfa_offset 4
 1057 0014 BD46     		mov	sp, r7
 1058              		.cfi_def_cfa_register 13
 1059              		@ sp needed
 1060 0016 80BC     		pop	{r7}
 1061              		.cfi_restore 7
 1062              		.cfi_def_cfa_offset 0
 1063 0018 7047     		bx	lr
 1064              	.L62:
 1065 001a 00BF     		.align	2
 1066              	.L61:
 1067 001c 26650040 		.word	1073767718
 1068              		.cfi_endproc
 1069              	.LFE14:
 1070              		.size	UART_RS485_SetRxAddress1, .-UART_RS485_SetRxAddress1
 1071              		.section	.text.UART_RS485_SetRxAddress2,"ax",%progbits
 1072              		.align	2
 1073              		.global	UART_RS485_SetRxAddress2
 1074              		.thumb
 1075              		.thumb_func
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4OTE74.s 			page 35


 1076              		.type	UART_RS485_SetRxAddress2, %function
 1077              	UART_RS485_SetRxAddress2:
 1078              	.LFB15:
 861:Generated_Source\PSoC5/UART_RS485.c **** 
 862:Generated_Source\PSoC5/UART_RS485.c **** 
 863:Generated_Source\PSoC5/UART_RS485.c ****     /*******************************************************************************
 864:Generated_Source\PSoC5/UART_RS485.c ****     * Function Name: UART_RS485_SetRxAddress2
 865:Generated_Source\PSoC5/UART_RS485.c ****     ********************************************************************************
 866:Generated_Source\PSoC5/UART_RS485.c ****     *
 867:Generated_Source\PSoC5/UART_RS485.c ****     * Summary:
 868:Generated_Source\PSoC5/UART_RS485.c ****     *  Sets the second of two hardware-detectable receiver addresses.
 869:Generated_Source\PSoC5/UART_RS485.c ****     *
 870:Generated_Source\PSoC5/UART_RS485.c ****     * Parameters:
 871:Generated_Source\PSoC5/UART_RS485.c ****     *  address: Address #2 for hardware address detection.
 872:Generated_Source\PSoC5/UART_RS485.c ****     *
 873:Generated_Source\PSoC5/UART_RS485.c ****     * Return:
 874:Generated_Source\PSoC5/UART_RS485.c ****     *  None.
 875:Generated_Source\PSoC5/UART_RS485.c ****     *
 876:Generated_Source\PSoC5/UART_RS485.c ****     *******************************************************************************/
 877:Generated_Source\PSoC5/UART_RS485.c ****     void UART_RS485_SetRxAddress2(uint8 address) 
 878:Generated_Source\PSoC5/UART_RS485.c ****     {
 1079              		.loc 1 878 0
 1080              		.cfi_startproc
 1081              		@ args = 0, pretend = 0, frame = 8
 1082              		@ frame_needed = 1, uses_anonymous_args = 0
 1083              		@ link register save eliminated.
 1084 0000 80B4     		push	{r7}
 1085              		.cfi_def_cfa_offset 4
 1086              		.cfi_offset 7, -4
 1087 0002 83B0     		sub	sp, sp, #12
 1088              		.cfi_def_cfa_offset 16
 1089 0004 00AF     		add	r7, sp, #0
 1090              		.cfi_def_cfa_register 7
 1091 0006 0346     		mov	r3, r0
 1092 0008 FB71     		strb	r3, [r7, #7]
 879:Generated_Source\PSoC5/UART_RS485.c ****         UART_RS485_RXADDRESS2_REG = address;
 1093              		.loc 1 879 0
 1094 000a 044A     		ldr	r2, .L64
 1095 000c FB79     		ldrb	r3, [r7, #7]
 1096 000e 1370     		strb	r3, [r2]
 880:Generated_Source\PSoC5/UART_RS485.c ****     }
 1097              		.loc 1 880 0
 1098 0010 00BF     		nop
 1099 0012 0C37     		adds	r7, r7, #12
 1100              		.cfi_def_cfa_offset 4
 1101 0014 BD46     		mov	sp, r7
 1102              		.cfi_def_cfa_register 13
 1103              		@ sp needed
 1104 0016 80BC     		pop	{r7}
 1105              		.cfi_restore 7
 1106              		.cfi_def_cfa_offset 0
 1107 0018 7047     		bx	lr
 1108              	.L65:
 1109 001a 00BF     		.align	2
 1110              	.L64:
 1111 001c 36650040 		.word	1073767734
 1112              		.cfi_endproc
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4OTE74.s 			page 36


 1113              	.LFE15:
 1114              		.size	UART_RS485_SetRxAddress2, .-UART_RS485_SetRxAddress2
 1115              		.section	.text.UART_RS485_SetTxInterruptMode,"ax",%progbits
 1116              		.align	2
 1117              		.global	UART_RS485_SetTxInterruptMode
 1118              		.thumb
 1119              		.thumb_func
 1120              		.type	UART_RS485_SetTxInterruptMode, %function
 1121              	UART_RS485_SetTxInterruptMode:
 1122              	.LFB16:
 881:Generated_Source\PSoC5/UART_RS485.c **** 
 882:Generated_Source\PSoC5/UART_RS485.c **** #endif  /* UART_RS485_RX_ENABLED || UART_RS485_HD_ENABLED*/
 883:Generated_Source\PSoC5/UART_RS485.c **** 
 884:Generated_Source\PSoC5/UART_RS485.c **** 
 885:Generated_Source\PSoC5/UART_RS485.c **** #if( (UART_RS485_TX_ENABLED) || (UART_RS485_HD_ENABLED) )
 886:Generated_Source\PSoC5/UART_RS485.c ****     /*******************************************************************************
 887:Generated_Source\PSoC5/UART_RS485.c ****     * Function Name: UART_RS485_SetTxInterruptMode
 888:Generated_Source\PSoC5/UART_RS485.c ****     ********************************************************************************
 889:Generated_Source\PSoC5/UART_RS485.c ****     *
 890:Generated_Source\PSoC5/UART_RS485.c ****     * Summary:
 891:Generated_Source\PSoC5/UART_RS485.c ****     *  Configures the TX interrupt sources to be enabled, but does not enable the
 892:Generated_Source\PSoC5/UART_RS485.c ****     *  interrupt.
 893:Generated_Source\PSoC5/UART_RS485.c ****     *
 894:Generated_Source\PSoC5/UART_RS485.c ****     * Parameters:
 895:Generated_Source\PSoC5/UART_RS485.c ****     *  intSrc: Bit field containing the TX interrupt sources to enable
 896:Generated_Source\PSoC5/UART_RS485.c ****     *   UART_RS485_TX_STS_COMPLETE        Interrupt on TX byte complete
 897:Generated_Source\PSoC5/UART_RS485.c ****     *   UART_RS485_TX_STS_FIFO_EMPTY      Interrupt when TX FIFO is empty
 898:Generated_Source\PSoC5/UART_RS485.c ****     *   UART_RS485_TX_STS_FIFO_FULL       Interrupt when TX FIFO is full
 899:Generated_Source\PSoC5/UART_RS485.c ****     *   UART_RS485_TX_STS_FIFO_NOT_FULL   Interrupt when TX FIFO is not full
 900:Generated_Source\PSoC5/UART_RS485.c ****     *
 901:Generated_Source\PSoC5/UART_RS485.c ****     * Return:
 902:Generated_Source\PSoC5/UART_RS485.c ****     *  None.
 903:Generated_Source\PSoC5/UART_RS485.c ****     *
 904:Generated_Source\PSoC5/UART_RS485.c ****     * Theory:
 905:Generated_Source\PSoC5/UART_RS485.c ****     *  Enables the output of specific status bits to the interrupt controller
 906:Generated_Source\PSoC5/UART_RS485.c ****     *
 907:Generated_Source\PSoC5/UART_RS485.c ****     *******************************************************************************/
 908:Generated_Source\PSoC5/UART_RS485.c ****     void UART_RS485_SetTxInterruptMode(uint8 intSrc) 
 909:Generated_Source\PSoC5/UART_RS485.c ****     {
 1123              		.loc 1 909 0
 1124              		.cfi_startproc
 1125              		@ args = 0, pretend = 0, frame = 8
 1126              		@ frame_needed = 1, uses_anonymous_args = 0
 1127              		@ link register save eliminated.
 1128 0000 80B4     		push	{r7}
 1129              		.cfi_def_cfa_offset 4
 1130              		.cfi_offset 7, -4
 1131 0002 83B0     		sub	sp, sp, #12
 1132              		.cfi_def_cfa_offset 16
 1133 0004 00AF     		add	r7, sp, #0
 1134              		.cfi_def_cfa_register 7
 1135 0006 0346     		mov	r3, r0
 1136 0008 FB71     		strb	r3, [r7, #7]
 910:Generated_Source\PSoC5/UART_RS485.c ****         UART_RS485_TXSTATUS_MASK_REG = intSrc;
 1137              		.loc 1 910 0
 1138 000a 044A     		ldr	r2, .L67
 1139 000c FB79     		ldrb	r3, [r7, #7]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4OTE74.s 			page 37


 1140 000e 1370     		strb	r3, [r2]
 911:Generated_Source\PSoC5/UART_RS485.c ****     }
 1141              		.loc 1 911 0
 1142 0010 00BF     		nop
 1143 0012 0C37     		adds	r7, r7, #12
 1144              		.cfi_def_cfa_offset 4
 1145 0014 BD46     		mov	sp, r7
 1146              		.cfi_def_cfa_register 13
 1147              		@ sp needed
 1148 0016 80BC     		pop	{r7}
 1149              		.cfi_restore 7
 1150              		.cfi_def_cfa_offset 0
 1151 0018 7047     		bx	lr
 1152              	.L68:
 1153 001a 00BF     		.align	2
 1154              	.L67:
 1155 001c 85640040 		.word	1073767557
 1156              		.cfi_endproc
 1157              	.LFE16:
 1158              		.size	UART_RS485_SetTxInterruptMode, .-UART_RS485_SetTxInterruptMode
 1159              		.section	.text.UART_RS485_WriteTxData,"ax",%progbits
 1160              		.align	2
 1161              		.global	UART_RS485_WriteTxData
 1162              		.thumb
 1163              		.thumb_func
 1164              		.type	UART_RS485_WriteTxData, %function
 1165              	UART_RS485_WriteTxData:
 1166              	.LFB17:
 912:Generated_Source\PSoC5/UART_RS485.c **** 
 913:Generated_Source\PSoC5/UART_RS485.c **** 
 914:Generated_Source\PSoC5/UART_RS485.c ****     /*******************************************************************************
 915:Generated_Source\PSoC5/UART_RS485.c ****     * Function Name: UART_RS485_WriteTxData
 916:Generated_Source\PSoC5/UART_RS485.c ****     ********************************************************************************
 917:Generated_Source\PSoC5/UART_RS485.c ****     *
 918:Generated_Source\PSoC5/UART_RS485.c ****     * Summary:
 919:Generated_Source\PSoC5/UART_RS485.c ****     *  Places a byte of data into the transmit buffer to be sent when the bus is
 920:Generated_Source\PSoC5/UART_RS485.c ****     *  available without checking the TX status register. You must check status
 921:Generated_Source\PSoC5/UART_RS485.c ****     *  separately.
 922:Generated_Source\PSoC5/UART_RS485.c ****     *
 923:Generated_Source\PSoC5/UART_RS485.c ****     * Parameters:
 924:Generated_Source\PSoC5/UART_RS485.c ****     *  txDataByte: data byte
 925:Generated_Source\PSoC5/UART_RS485.c ****     *
 926:Generated_Source\PSoC5/UART_RS485.c ****     * Return:
 927:Generated_Source\PSoC5/UART_RS485.c ****     * None.
 928:Generated_Source\PSoC5/UART_RS485.c ****     *
 929:Generated_Source\PSoC5/UART_RS485.c ****     * Global Variables:
 930:Generated_Source\PSoC5/UART_RS485.c ****     *  UART_RS485_txBuffer - RAM buffer pointer for save data for transmission
 931:Generated_Source\PSoC5/UART_RS485.c ****     *  UART_RS485_txBufferWrite - cyclic index for write to txBuffer,
 932:Generated_Source\PSoC5/UART_RS485.c ****     *    incremented after each byte saved to buffer.
 933:Generated_Source\PSoC5/UART_RS485.c ****     *  UART_RS485_txBufferRead - cyclic index for read from txBuffer,
 934:Generated_Source\PSoC5/UART_RS485.c ****     *    checked to identify the condition to write to FIFO directly or to TX buffer
 935:Generated_Source\PSoC5/UART_RS485.c ****     *  UART_RS485_initVar - checked to identify that the component has been
 936:Generated_Source\PSoC5/UART_RS485.c ****     *    initialized.
 937:Generated_Source\PSoC5/UART_RS485.c ****     *
 938:Generated_Source\PSoC5/UART_RS485.c ****     * Reentrant:
 939:Generated_Source\PSoC5/UART_RS485.c ****     *  No.
 940:Generated_Source\PSoC5/UART_RS485.c ****     *
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4OTE74.s 			page 38


 941:Generated_Source\PSoC5/UART_RS485.c ****     *******************************************************************************/
 942:Generated_Source\PSoC5/UART_RS485.c ****     void UART_RS485_WriteTxData(uint8 txDataByte) 
 943:Generated_Source\PSoC5/UART_RS485.c ****     {
 1167              		.loc 1 943 0
 1168              		.cfi_startproc
 1169              		@ args = 0, pretend = 0, frame = 8
 1170              		@ frame_needed = 1, uses_anonymous_args = 0
 1171              		@ link register save eliminated.
 1172 0000 80B4     		push	{r7}
 1173              		.cfi_def_cfa_offset 4
 1174              		.cfi_offset 7, -4
 1175 0002 83B0     		sub	sp, sp, #12
 1176              		.cfi_def_cfa_offset 16
 1177 0004 00AF     		add	r7, sp, #0
 1178              		.cfi_def_cfa_register 7
 1179 0006 0346     		mov	r3, r0
 1180 0008 FB71     		strb	r3, [r7, #7]
 944:Generated_Source\PSoC5/UART_RS485.c ****         /* If not Initialized then skip this function*/
 945:Generated_Source\PSoC5/UART_RS485.c ****         if(UART_RS485_initVar != 0u)
 1181              		.loc 1 945 0
 1182 000a 064B     		ldr	r3, .L72
 1183 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1184 000e 002B     		cmp	r3, #0
 1185 0010 02D0     		beq	.L71
 946:Generated_Source\PSoC5/UART_RS485.c ****         {
 947:Generated_Source\PSoC5/UART_RS485.c ****         #if (UART_RS485_TX_INTERRUPT_ENABLED)
 948:Generated_Source\PSoC5/UART_RS485.c **** 
 949:Generated_Source\PSoC5/UART_RS485.c ****             /* Protect variables that could change on interrupt. */
 950:Generated_Source\PSoC5/UART_RS485.c ****             UART_RS485_DisableTxInt();
 951:Generated_Source\PSoC5/UART_RS485.c **** 
 952:Generated_Source\PSoC5/UART_RS485.c ****             if( (UART_RS485_txBufferRead == UART_RS485_txBufferWrite) &&
 953:Generated_Source\PSoC5/UART_RS485.c ****                 ((UART_RS485_TXSTATUS_REG & UART_RS485_TX_STS_FIFO_FULL) == 0u) )
 954:Generated_Source\PSoC5/UART_RS485.c ****             {
 955:Generated_Source\PSoC5/UART_RS485.c ****                 /* Add directly to the FIFO. */
 956:Generated_Source\PSoC5/UART_RS485.c ****                 UART_RS485_TXDATA_REG = txDataByte;
 957:Generated_Source\PSoC5/UART_RS485.c ****             }
 958:Generated_Source\PSoC5/UART_RS485.c ****             else
 959:Generated_Source\PSoC5/UART_RS485.c ****             {
 960:Generated_Source\PSoC5/UART_RS485.c ****                 if(UART_RS485_txBufferWrite >= UART_RS485_TX_BUFFER_SIZE)
 961:Generated_Source\PSoC5/UART_RS485.c ****                 {
 962:Generated_Source\PSoC5/UART_RS485.c ****                     UART_RS485_txBufferWrite = 0u;
 963:Generated_Source\PSoC5/UART_RS485.c ****                 }
 964:Generated_Source\PSoC5/UART_RS485.c **** 
 965:Generated_Source\PSoC5/UART_RS485.c ****                 UART_RS485_txBuffer[UART_RS485_txBufferWrite] = txDataByte;
 966:Generated_Source\PSoC5/UART_RS485.c **** 
 967:Generated_Source\PSoC5/UART_RS485.c ****                 /* Add to the software buffer. */
 968:Generated_Source\PSoC5/UART_RS485.c ****                 UART_RS485_txBufferWrite++;
 969:Generated_Source\PSoC5/UART_RS485.c ****             }
 970:Generated_Source\PSoC5/UART_RS485.c **** 
 971:Generated_Source\PSoC5/UART_RS485.c ****             UART_RS485_EnableTxInt();
 972:Generated_Source\PSoC5/UART_RS485.c **** 
 973:Generated_Source\PSoC5/UART_RS485.c ****         #else
 974:Generated_Source\PSoC5/UART_RS485.c **** 
 975:Generated_Source\PSoC5/UART_RS485.c ****             /* Add directly to the FIFO. */
 976:Generated_Source\PSoC5/UART_RS485.c ****             UART_RS485_TXDATA_REG = txDataByte;
 1186              		.loc 1 976 0
 1187 0012 054A     		ldr	r2, .L72+4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4OTE74.s 			page 39


 1188 0014 FB79     		ldrb	r3, [r7, #7]
 1189 0016 1370     		strb	r3, [r2]
 1190              	.L71:
 977:Generated_Source\PSoC5/UART_RS485.c **** 
 978:Generated_Source\PSoC5/UART_RS485.c ****         #endif /*(UART_RS485_TX_INTERRUPT_ENABLED) */
 979:Generated_Source\PSoC5/UART_RS485.c ****         }
 980:Generated_Source\PSoC5/UART_RS485.c ****     }
 1191              		.loc 1 980 0
 1192 0018 00BF     		nop
 1193 001a 0C37     		adds	r7, r7, #12
 1194              		.cfi_def_cfa_offset 4
 1195 001c BD46     		mov	sp, r7
 1196              		.cfi_def_cfa_register 13
 1197              		@ sp needed
 1198 001e 80BC     		pop	{r7}
 1199              		.cfi_restore 7
 1200              		.cfi_def_cfa_offset 0
 1201 0020 7047     		bx	lr
 1202              	.L73:
 1203 0022 00BF     		.align	2
 1204              	.L72:
 1205 0024 00000000 		.word	UART_RS485_initVar
 1206 0028 47640040 		.word	1073767495
 1207              		.cfi_endproc
 1208              	.LFE17:
 1209              		.size	UART_RS485_WriteTxData, .-UART_RS485_WriteTxData
 1210              		.section	.text.UART_RS485_ReadTxStatus,"ax",%progbits
 1211              		.align	2
 1212              		.global	UART_RS485_ReadTxStatus
 1213              		.thumb
 1214              		.thumb_func
 1215              		.type	UART_RS485_ReadTxStatus, %function
 1216              	UART_RS485_ReadTxStatus:
 1217              	.LFB18:
 981:Generated_Source\PSoC5/UART_RS485.c **** 
 982:Generated_Source\PSoC5/UART_RS485.c **** 
 983:Generated_Source\PSoC5/UART_RS485.c ****     /*******************************************************************************
 984:Generated_Source\PSoC5/UART_RS485.c ****     * Function Name: UART_RS485_ReadTxStatus
 985:Generated_Source\PSoC5/UART_RS485.c ****     ********************************************************************************
 986:Generated_Source\PSoC5/UART_RS485.c ****     *
 987:Generated_Source\PSoC5/UART_RS485.c ****     * Summary:
 988:Generated_Source\PSoC5/UART_RS485.c ****     *  Reads the status register for the TX portion of the UART.
 989:Generated_Source\PSoC5/UART_RS485.c ****     *
 990:Generated_Source\PSoC5/UART_RS485.c ****     * Parameters:
 991:Generated_Source\PSoC5/UART_RS485.c ****     *  None.
 992:Generated_Source\PSoC5/UART_RS485.c ****     *
 993:Generated_Source\PSoC5/UART_RS485.c ****     * Return:
 994:Generated_Source\PSoC5/UART_RS485.c ****     *  Contents of the status register
 995:Generated_Source\PSoC5/UART_RS485.c ****     *
 996:Generated_Source\PSoC5/UART_RS485.c ****     * Theory:
 997:Generated_Source\PSoC5/UART_RS485.c ****     *  This function reads the TX status register, which is cleared on read.
 998:Generated_Source\PSoC5/UART_RS485.c ****     *  It is up to the user to handle all bits in this return value accordingly,
 999:Generated_Source\PSoC5/UART_RS485.c ****     *  even if the bit was not enabled as an interrupt source the event happened
1000:Generated_Source\PSoC5/UART_RS485.c ****     *  and must be handled accordingly.
1001:Generated_Source\PSoC5/UART_RS485.c ****     *
1002:Generated_Source\PSoC5/UART_RS485.c ****     *******************************************************************************/
1003:Generated_Source\PSoC5/UART_RS485.c ****     uint8 UART_RS485_ReadTxStatus(void) 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4OTE74.s 			page 40


1004:Generated_Source\PSoC5/UART_RS485.c ****     {
 1218              		.loc 1 1004 0
 1219              		.cfi_startproc
 1220              		@ args = 0, pretend = 0, frame = 0
 1221              		@ frame_needed = 1, uses_anonymous_args = 0
 1222              		@ link register save eliminated.
 1223 0000 80B4     		push	{r7}
 1224              		.cfi_def_cfa_offset 4
 1225              		.cfi_offset 7, -4
 1226 0002 00AF     		add	r7, sp, #0
 1227              		.cfi_def_cfa_register 7
1005:Generated_Source\PSoC5/UART_RS485.c ****         return(UART_RS485_TXSTATUS_REG);
 1228              		.loc 1 1005 0
 1229 0004 034B     		ldr	r3, .L76
 1230 0006 1B78     		ldrb	r3, [r3]
 1231 0008 DBB2     		uxtb	r3, r3
1006:Generated_Source\PSoC5/UART_RS485.c ****     }
 1232              		.loc 1 1006 0
 1233 000a 1846     		mov	r0, r3
 1234 000c BD46     		mov	sp, r7
 1235              		.cfi_def_cfa_register 13
 1236              		@ sp needed
 1237 000e 80BC     		pop	{r7}
 1238              		.cfi_restore 7
 1239              		.cfi_def_cfa_offset 0
 1240 0010 7047     		bx	lr
 1241              	.L77:
 1242 0012 00BF     		.align	2
 1243              	.L76:
 1244 0014 65640040 		.word	1073767525
 1245              		.cfi_endproc
 1246              	.LFE18:
 1247              		.size	UART_RS485_ReadTxStatus, .-UART_RS485_ReadTxStatus
 1248              		.section	.text.UART_RS485_PutChar,"ax",%progbits
 1249              		.align	2
 1250              		.global	UART_RS485_PutChar
 1251              		.thumb
 1252              		.thumb_func
 1253              		.type	UART_RS485_PutChar, %function
 1254              	UART_RS485_PutChar:
 1255              	.LFB19:
1007:Generated_Source\PSoC5/UART_RS485.c **** 
1008:Generated_Source\PSoC5/UART_RS485.c **** 
1009:Generated_Source\PSoC5/UART_RS485.c ****     /*******************************************************************************
1010:Generated_Source\PSoC5/UART_RS485.c ****     * Function Name: UART_RS485_PutChar
1011:Generated_Source\PSoC5/UART_RS485.c ****     ********************************************************************************
1012:Generated_Source\PSoC5/UART_RS485.c ****     *
1013:Generated_Source\PSoC5/UART_RS485.c ****     * Summary:
1014:Generated_Source\PSoC5/UART_RS485.c ****     *  Puts a byte of data into the transmit buffer to be sent when the bus is
1015:Generated_Source\PSoC5/UART_RS485.c ****     *  available. This is a blocking API that waits until the TX buffer has room to
1016:Generated_Source\PSoC5/UART_RS485.c ****     *  hold the data.
1017:Generated_Source\PSoC5/UART_RS485.c ****     *
1018:Generated_Source\PSoC5/UART_RS485.c ****     * Parameters:
1019:Generated_Source\PSoC5/UART_RS485.c ****     *  txDataByte: Byte containing the data to transmit
1020:Generated_Source\PSoC5/UART_RS485.c ****     *
1021:Generated_Source\PSoC5/UART_RS485.c ****     * Return:
1022:Generated_Source\PSoC5/UART_RS485.c ****     *  None.
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4OTE74.s 			page 41


1023:Generated_Source\PSoC5/UART_RS485.c ****     *
1024:Generated_Source\PSoC5/UART_RS485.c ****     * Global Variables:
1025:Generated_Source\PSoC5/UART_RS485.c ****     *  UART_RS485_txBuffer - RAM buffer pointer for save data for transmission
1026:Generated_Source\PSoC5/UART_RS485.c ****     *  UART_RS485_txBufferWrite - cyclic index for write to txBuffer,
1027:Generated_Source\PSoC5/UART_RS485.c ****     *     checked to identify free space in txBuffer and incremented after each byte
1028:Generated_Source\PSoC5/UART_RS485.c ****     *     saved to buffer.
1029:Generated_Source\PSoC5/UART_RS485.c ****     *  UART_RS485_txBufferRead - cyclic index for read from txBuffer,
1030:Generated_Source\PSoC5/UART_RS485.c ****     *     checked to identify free space in txBuffer.
1031:Generated_Source\PSoC5/UART_RS485.c ****     *  UART_RS485_initVar - checked to identify that the component has been
1032:Generated_Source\PSoC5/UART_RS485.c ****     *     initialized.
1033:Generated_Source\PSoC5/UART_RS485.c ****     *
1034:Generated_Source\PSoC5/UART_RS485.c ****     * Reentrant:
1035:Generated_Source\PSoC5/UART_RS485.c ****     *  No.
1036:Generated_Source\PSoC5/UART_RS485.c ****     *
1037:Generated_Source\PSoC5/UART_RS485.c ****     * Theory:
1038:Generated_Source\PSoC5/UART_RS485.c ****     *  Allows the user to transmit any byte of data in a single transfer
1039:Generated_Source\PSoC5/UART_RS485.c ****     *
1040:Generated_Source\PSoC5/UART_RS485.c ****     *******************************************************************************/
1041:Generated_Source\PSoC5/UART_RS485.c ****     void UART_RS485_PutChar(uint8 txDataByte) 
1042:Generated_Source\PSoC5/UART_RS485.c ****     {
 1256              		.loc 1 1042 0
 1257              		.cfi_startproc
 1258              		@ args = 0, pretend = 0, frame = 8
 1259              		@ frame_needed = 1, uses_anonymous_args = 0
 1260              		@ link register save eliminated.
 1261 0000 80B4     		push	{r7}
 1262              		.cfi_def_cfa_offset 4
 1263              		.cfi_offset 7, -4
 1264 0002 83B0     		sub	sp, sp, #12
 1265              		.cfi_def_cfa_offset 16
 1266 0004 00AF     		add	r7, sp, #0
 1267              		.cfi_def_cfa_register 7
 1268 0006 0346     		mov	r3, r0
 1269 0008 FB71     		strb	r3, [r7, #7]
1043:Generated_Source\PSoC5/UART_RS485.c ****     #if (UART_RS485_TX_INTERRUPT_ENABLED)
1044:Generated_Source\PSoC5/UART_RS485.c ****         /* The temporary output pointer is used since it takes two instructions
1045:Generated_Source\PSoC5/UART_RS485.c ****         *  to increment with a wrap, and we can't risk doing that with the real
1046:Generated_Source\PSoC5/UART_RS485.c ****         *  pointer and getting an interrupt in between instructions.
1047:Generated_Source\PSoC5/UART_RS485.c ****         */
1048:Generated_Source\PSoC5/UART_RS485.c ****         uint8 locTxBufferWrite;
1049:Generated_Source\PSoC5/UART_RS485.c ****         uint8 locTxBufferRead;
1050:Generated_Source\PSoC5/UART_RS485.c **** 
1051:Generated_Source\PSoC5/UART_RS485.c ****         do
1052:Generated_Source\PSoC5/UART_RS485.c ****         { /* Block if software buffer is full, so we don't overwrite. */
1053:Generated_Source\PSoC5/UART_RS485.c **** 
1054:Generated_Source\PSoC5/UART_RS485.c ****         #if ((UART_RS485_TX_BUFFER_SIZE > UART_RS485_MAX_BYTE_VALUE) && (CY_PSOC3))
1055:Generated_Source\PSoC5/UART_RS485.c ****             /* Disable TX interrupt to protect variables from modification */
1056:Generated_Source\PSoC5/UART_RS485.c ****             UART_RS485_DisableTxInt();
1057:Generated_Source\PSoC5/UART_RS485.c ****         #endif /* (UART_RS485_TX_BUFFER_SIZE > UART_RS485_MAX_BYTE_VALUE) && (CY_PSOC3) */
1058:Generated_Source\PSoC5/UART_RS485.c **** 
1059:Generated_Source\PSoC5/UART_RS485.c ****             locTxBufferWrite = UART_RS485_txBufferWrite;
1060:Generated_Source\PSoC5/UART_RS485.c ****             locTxBufferRead  = UART_RS485_txBufferRead;
1061:Generated_Source\PSoC5/UART_RS485.c **** 
1062:Generated_Source\PSoC5/UART_RS485.c ****         #if ((UART_RS485_TX_BUFFER_SIZE > UART_RS485_MAX_BYTE_VALUE) && (CY_PSOC3))
1063:Generated_Source\PSoC5/UART_RS485.c ****             /* Enable interrupt to continue transmission */
1064:Generated_Source\PSoC5/UART_RS485.c ****             UART_RS485_EnableTxInt();
1065:Generated_Source\PSoC5/UART_RS485.c ****         #endif /* (UART_RS485_TX_BUFFER_SIZE > UART_RS485_MAX_BYTE_VALUE) && (CY_PSOC3) */
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4OTE74.s 			page 42


1066:Generated_Source\PSoC5/UART_RS485.c ****         }
1067:Generated_Source\PSoC5/UART_RS485.c ****         while( (locTxBufferWrite < locTxBufferRead) ? (locTxBufferWrite == (locTxBufferRead - 1u)) 
1068:Generated_Source\PSoC5/UART_RS485.c ****                                 ((locTxBufferWrite - locTxBufferRead) ==
1069:Generated_Source\PSoC5/UART_RS485.c ****                                 (uint8)(UART_RS485_TX_BUFFER_SIZE - 1u)) );
1070:Generated_Source\PSoC5/UART_RS485.c **** 
1071:Generated_Source\PSoC5/UART_RS485.c ****         if( (locTxBufferRead == locTxBufferWrite) &&
1072:Generated_Source\PSoC5/UART_RS485.c ****             ((UART_RS485_TXSTATUS_REG & UART_RS485_TX_STS_FIFO_FULL) == 0u) )
1073:Generated_Source\PSoC5/UART_RS485.c ****         {
1074:Generated_Source\PSoC5/UART_RS485.c ****             /* Add directly to the FIFO */
1075:Generated_Source\PSoC5/UART_RS485.c ****             UART_RS485_TXDATA_REG = txDataByte;
1076:Generated_Source\PSoC5/UART_RS485.c ****         }
1077:Generated_Source\PSoC5/UART_RS485.c ****         else
1078:Generated_Source\PSoC5/UART_RS485.c ****         {
1079:Generated_Source\PSoC5/UART_RS485.c ****             if(locTxBufferWrite >= UART_RS485_TX_BUFFER_SIZE)
1080:Generated_Source\PSoC5/UART_RS485.c ****             {
1081:Generated_Source\PSoC5/UART_RS485.c ****                 locTxBufferWrite = 0u;
1082:Generated_Source\PSoC5/UART_RS485.c ****             }
1083:Generated_Source\PSoC5/UART_RS485.c ****             /* Add to the software buffer. */
1084:Generated_Source\PSoC5/UART_RS485.c ****             UART_RS485_txBuffer[locTxBufferWrite] = txDataByte;
1085:Generated_Source\PSoC5/UART_RS485.c ****             locTxBufferWrite++;
1086:Generated_Source\PSoC5/UART_RS485.c **** 
1087:Generated_Source\PSoC5/UART_RS485.c ****             /* Finally, update the real output pointer */
1088:Generated_Source\PSoC5/UART_RS485.c ****         #if ((UART_RS485_TX_BUFFER_SIZE > UART_RS485_MAX_BYTE_VALUE) && (CY_PSOC3))
1089:Generated_Source\PSoC5/UART_RS485.c ****             UART_RS485_DisableTxInt();
1090:Generated_Source\PSoC5/UART_RS485.c ****         #endif /* (UART_RS485_TX_BUFFER_SIZE > UART_RS485_MAX_BYTE_VALUE) && (CY_PSOC3) */
1091:Generated_Source\PSoC5/UART_RS485.c **** 
1092:Generated_Source\PSoC5/UART_RS485.c ****             UART_RS485_txBufferWrite = locTxBufferWrite;
1093:Generated_Source\PSoC5/UART_RS485.c **** 
1094:Generated_Source\PSoC5/UART_RS485.c ****         #if ((UART_RS485_TX_BUFFER_SIZE > UART_RS485_MAX_BYTE_VALUE) && (CY_PSOC3))
1095:Generated_Source\PSoC5/UART_RS485.c ****             UART_RS485_EnableTxInt();
1096:Generated_Source\PSoC5/UART_RS485.c ****         #endif /* (UART_RS485_TX_BUFFER_SIZE > UART_RS485_MAX_BYTE_VALUE) && (CY_PSOC3) */
1097:Generated_Source\PSoC5/UART_RS485.c **** 
1098:Generated_Source\PSoC5/UART_RS485.c ****             if(0u != (UART_RS485_TXSTATUS_REG & UART_RS485_TX_STS_FIFO_EMPTY))
1099:Generated_Source\PSoC5/UART_RS485.c ****             {
1100:Generated_Source\PSoC5/UART_RS485.c ****                 /* Trigger TX interrupt to send software buffer */
1101:Generated_Source\PSoC5/UART_RS485.c ****                 UART_RS485_SetPendingTxInt();
1102:Generated_Source\PSoC5/UART_RS485.c ****             }
1103:Generated_Source\PSoC5/UART_RS485.c ****         }
1104:Generated_Source\PSoC5/UART_RS485.c **** 
1105:Generated_Source\PSoC5/UART_RS485.c ****     #else
1106:Generated_Source\PSoC5/UART_RS485.c **** 
1107:Generated_Source\PSoC5/UART_RS485.c ****         while((UART_RS485_TXSTATUS_REG & UART_RS485_TX_STS_FIFO_FULL) != 0u)
 1270              		.loc 1 1107 0
 1271 000a 00BF     		nop
 1272              	.L79:
 1273              		.loc 1 1107 0 is_stmt 0 discriminator 1
 1274 000c 074B     		ldr	r3, .L80
 1275 000e 1B78     		ldrb	r3, [r3]
 1276 0010 DBB2     		uxtb	r3, r3
 1277 0012 03F00403 		and	r3, r3, #4
 1278 0016 002B     		cmp	r3, #0
 1279 0018 F8D1     		bne	.L79
1108:Generated_Source\PSoC5/UART_RS485.c ****         {
1109:Generated_Source\PSoC5/UART_RS485.c ****             /* Wait for room in the FIFO */
1110:Generated_Source\PSoC5/UART_RS485.c ****         }
1111:Generated_Source\PSoC5/UART_RS485.c **** 
1112:Generated_Source\PSoC5/UART_RS485.c ****         /* Add directly to the FIFO */
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4OTE74.s 			page 43


1113:Generated_Source\PSoC5/UART_RS485.c ****         UART_RS485_TXDATA_REG = txDataByte;
 1280              		.loc 1 1113 0 is_stmt 1
 1281 001a 054A     		ldr	r2, .L80+4
 1282 001c FB79     		ldrb	r3, [r7, #7]
 1283 001e 1370     		strb	r3, [r2]
1114:Generated_Source\PSoC5/UART_RS485.c **** 
1115:Generated_Source\PSoC5/UART_RS485.c ****     #endif /* UART_RS485_TX_INTERRUPT_ENABLED */
1116:Generated_Source\PSoC5/UART_RS485.c ****     }
 1284              		.loc 1 1116 0
 1285 0020 00BF     		nop
 1286 0022 0C37     		adds	r7, r7, #12
 1287              		.cfi_def_cfa_offset 4
 1288 0024 BD46     		mov	sp, r7
 1289              		.cfi_def_cfa_register 13
 1290              		@ sp needed
 1291 0026 80BC     		pop	{r7}
 1292              		.cfi_restore 7
 1293              		.cfi_def_cfa_offset 0
 1294 0028 7047     		bx	lr
 1295              	.L81:
 1296 002a 00BF     		.align	2
 1297              	.L80:
 1298 002c 65640040 		.word	1073767525
 1299 0030 47640040 		.word	1073767495
 1300              		.cfi_endproc
 1301              	.LFE19:
 1302              		.size	UART_RS485_PutChar, .-UART_RS485_PutChar
 1303              		.section	.text.UART_RS485_PutString,"ax",%progbits
 1304              		.align	2
 1305              		.global	UART_RS485_PutString
 1306              		.thumb
 1307              		.thumb_func
 1308              		.type	UART_RS485_PutString, %function
 1309              	UART_RS485_PutString:
 1310              	.LFB20:
1117:Generated_Source\PSoC5/UART_RS485.c **** 
1118:Generated_Source\PSoC5/UART_RS485.c **** 
1119:Generated_Source\PSoC5/UART_RS485.c ****     /*******************************************************************************
1120:Generated_Source\PSoC5/UART_RS485.c ****     * Function Name: UART_RS485_PutString
1121:Generated_Source\PSoC5/UART_RS485.c ****     ********************************************************************************
1122:Generated_Source\PSoC5/UART_RS485.c ****     *
1123:Generated_Source\PSoC5/UART_RS485.c ****     * Summary:
1124:Generated_Source\PSoC5/UART_RS485.c ****     *  Sends a NULL terminated string to the TX buffer for transmission.
1125:Generated_Source\PSoC5/UART_RS485.c ****     *
1126:Generated_Source\PSoC5/UART_RS485.c ****     * Parameters:
1127:Generated_Source\PSoC5/UART_RS485.c ****     *  string[]: Pointer to the null terminated string array residing in RAM or ROM
1128:Generated_Source\PSoC5/UART_RS485.c ****     *
1129:Generated_Source\PSoC5/UART_RS485.c ****     * Return:
1130:Generated_Source\PSoC5/UART_RS485.c ****     *  None.
1131:Generated_Source\PSoC5/UART_RS485.c ****     *
1132:Generated_Source\PSoC5/UART_RS485.c ****     * Global Variables:
1133:Generated_Source\PSoC5/UART_RS485.c ****     *  UART_RS485_initVar - checked to identify that the component has been
1134:Generated_Source\PSoC5/UART_RS485.c ****     *     initialized.
1135:Generated_Source\PSoC5/UART_RS485.c ****     *
1136:Generated_Source\PSoC5/UART_RS485.c ****     * Reentrant:
1137:Generated_Source\PSoC5/UART_RS485.c ****     *  No.
1138:Generated_Source\PSoC5/UART_RS485.c ****     *
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4OTE74.s 			page 44


1139:Generated_Source\PSoC5/UART_RS485.c ****     * Theory:
1140:Generated_Source\PSoC5/UART_RS485.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1141:Generated_Source\PSoC5/UART_RS485.c ****     *  function blocks until the last character of the string is loaded into the
1142:Generated_Source\PSoC5/UART_RS485.c ****     *  TX buffer.
1143:Generated_Source\PSoC5/UART_RS485.c ****     *
1144:Generated_Source\PSoC5/UART_RS485.c ****     *******************************************************************************/
1145:Generated_Source\PSoC5/UART_RS485.c ****     void UART_RS485_PutString(const char8 string[]) 
1146:Generated_Source\PSoC5/UART_RS485.c ****     {
 1311              		.loc 1 1146 0
 1312              		.cfi_startproc
 1313              		@ args = 0, pretend = 0, frame = 16
 1314              		@ frame_needed = 1, uses_anonymous_args = 0
 1315 0000 80B5     		push	{r7, lr}
 1316              		.cfi_def_cfa_offset 8
 1317              		.cfi_offset 7, -8
 1318              		.cfi_offset 14, -4
 1319 0002 84B0     		sub	sp, sp, #16
 1320              		.cfi_def_cfa_offset 24
 1321 0004 00AF     		add	r7, sp, #0
 1322              		.cfi_def_cfa_register 7
 1323 0006 7860     		str	r0, [r7, #4]
1147:Generated_Source\PSoC5/UART_RS485.c ****         uint16 bufIndex = 0u;
 1324              		.loc 1 1147 0
 1325 0008 0023     		movs	r3, #0
 1326 000a FB81     		strh	r3, [r7, #14]	@ movhi
1148:Generated_Source\PSoC5/UART_RS485.c **** 
1149:Generated_Source\PSoC5/UART_RS485.c ****         /* If not Initialized then skip this function */
1150:Generated_Source\PSoC5/UART_RS485.c ****         if(UART_RS485_initVar != 0u)
 1327              		.loc 1 1150 0
 1328 000c 0C4B     		ldr	r3, .L87
 1329 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1330 0010 002B     		cmp	r3, #0
 1331 0012 10D0     		beq	.L86
1151:Generated_Source\PSoC5/UART_RS485.c ****         {
1152:Generated_Source\PSoC5/UART_RS485.c ****             /* This is a blocking function, it will not exit until all data is sent */
1153:Generated_Source\PSoC5/UART_RS485.c ****             while(string[bufIndex] != (char8) 0)
 1332              		.loc 1 1153 0
 1333 0014 09E0     		b	.L84
 1334              	.L85:
1154:Generated_Source\PSoC5/UART_RS485.c ****             {
1155:Generated_Source\PSoC5/UART_RS485.c ****                 UART_RS485_PutChar((uint8)string[bufIndex]);
 1335              		.loc 1 1155 0
 1336 0016 FB89     		ldrh	r3, [r7, #14]
 1337 0018 7A68     		ldr	r2, [r7, #4]
 1338 001a 1344     		add	r3, r3, r2
 1339 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1340 001e 1846     		mov	r0, r3
 1341 0020 FFF7FEFF 		bl	UART_RS485_PutChar
1156:Generated_Source\PSoC5/UART_RS485.c ****                 bufIndex++;
 1342              		.loc 1 1156 0
 1343 0024 FB89     		ldrh	r3, [r7, #14]
 1344 0026 0133     		adds	r3, r3, #1
 1345 0028 FB81     		strh	r3, [r7, #14]	@ movhi
 1346              	.L84:
1153:Generated_Source\PSoC5/UART_RS485.c ****             {
 1347              		.loc 1 1153 0
 1348 002a FB89     		ldrh	r3, [r7, #14]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4OTE74.s 			page 45


 1349 002c 7A68     		ldr	r2, [r7, #4]
 1350 002e 1344     		add	r3, r3, r2
 1351 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1352 0032 002B     		cmp	r3, #0
 1353 0034 EFD1     		bne	.L85
 1354              	.L86:
1157:Generated_Source\PSoC5/UART_RS485.c ****             }
1158:Generated_Source\PSoC5/UART_RS485.c ****         }
1159:Generated_Source\PSoC5/UART_RS485.c ****     }
 1355              		.loc 1 1159 0
 1356 0036 00BF     		nop
 1357 0038 1037     		adds	r7, r7, #16
 1358              		.cfi_def_cfa_offset 8
 1359 003a BD46     		mov	sp, r7
 1360              		.cfi_def_cfa_register 13
 1361              		@ sp needed
 1362 003c 80BD     		pop	{r7, pc}
 1363              	.L88:
 1364 003e 00BF     		.align	2
 1365              	.L87:
 1366 0040 00000000 		.word	UART_RS485_initVar
 1367              		.cfi_endproc
 1368              	.LFE20:
 1369              		.size	UART_RS485_PutString, .-UART_RS485_PutString
 1370              		.section	.text.UART_RS485_PutArray,"ax",%progbits
 1371              		.align	2
 1372              		.global	UART_RS485_PutArray
 1373              		.thumb
 1374              		.thumb_func
 1375              		.type	UART_RS485_PutArray, %function
 1376              	UART_RS485_PutArray:
 1377              	.LFB21:
1160:Generated_Source\PSoC5/UART_RS485.c **** 
1161:Generated_Source\PSoC5/UART_RS485.c **** 
1162:Generated_Source\PSoC5/UART_RS485.c ****     /*******************************************************************************
1163:Generated_Source\PSoC5/UART_RS485.c ****     * Function Name: UART_RS485_PutArray
1164:Generated_Source\PSoC5/UART_RS485.c ****     ********************************************************************************
1165:Generated_Source\PSoC5/UART_RS485.c ****     *
1166:Generated_Source\PSoC5/UART_RS485.c ****     * Summary:
1167:Generated_Source\PSoC5/UART_RS485.c ****     *  Places N bytes of data from a memory array into the TX buffer for
1168:Generated_Source\PSoC5/UART_RS485.c ****     *  transmission.
1169:Generated_Source\PSoC5/UART_RS485.c ****     *
1170:Generated_Source\PSoC5/UART_RS485.c ****     * Parameters:
1171:Generated_Source\PSoC5/UART_RS485.c ****     *  string[]: Address of the memory array residing in RAM or ROM.
1172:Generated_Source\PSoC5/UART_RS485.c ****     *  byteCount: Number of bytes to be transmitted. The type depends on TX Buffer
1173:Generated_Source\PSoC5/UART_RS485.c ****     *             Size parameter.
1174:Generated_Source\PSoC5/UART_RS485.c ****     *
1175:Generated_Source\PSoC5/UART_RS485.c ****     * Return:
1176:Generated_Source\PSoC5/UART_RS485.c ****     *  None.
1177:Generated_Source\PSoC5/UART_RS485.c ****     *
1178:Generated_Source\PSoC5/UART_RS485.c ****     * Global Variables:
1179:Generated_Source\PSoC5/UART_RS485.c ****     *  UART_RS485_initVar - checked to identify that the component has been
1180:Generated_Source\PSoC5/UART_RS485.c ****     *     initialized.
1181:Generated_Source\PSoC5/UART_RS485.c ****     *
1182:Generated_Source\PSoC5/UART_RS485.c ****     * Reentrant:
1183:Generated_Source\PSoC5/UART_RS485.c ****     *  No.
1184:Generated_Source\PSoC5/UART_RS485.c ****     *
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4OTE74.s 			page 46


1185:Generated_Source\PSoC5/UART_RS485.c ****     * Theory:
1186:Generated_Source\PSoC5/UART_RS485.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1187:Generated_Source\PSoC5/UART_RS485.c ****     *  function blocks until the last character of the string is loaded into the
1188:Generated_Source\PSoC5/UART_RS485.c ****     *  TX buffer.
1189:Generated_Source\PSoC5/UART_RS485.c ****     *
1190:Generated_Source\PSoC5/UART_RS485.c ****     *******************************************************************************/
1191:Generated_Source\PSoC5/UART_RS485.c ****     void UART_RS485_PutArray(const uint8 string[], uint8 byteCount)
1192:Generated_Source\PSoC5/UART_RS485.c ****                                                                     
1193:Generated_Source\PSoC5/UART_RS485.c ****     {
 1378              		.loc 1 1193 0
 1379              		.cfi_startproc
 1380              		@ args = 0, pretend = 0, frame = 16
 1381              		@ frame_needed = 1, uses_anonymous_args = 0
 1382 0000 80B5     		push	{r7, lr}
 1383              		.cfi_def_cfa_offset 8
 1384              		.cfi_offset 7, -8
 1385              		.cfi_offset 14, -4
 1386 0002 84B0     		sub	sp, sp, #16
 1387              		.cfi_def_cfa_offset 24
 1388 0004 00AF     		add	r7, sp, #0
 1389              		.cfi_def_cfa_register 7
 1390 0006 7860     		str	r0, [r7, #4]
 1391 0008 0B46     		mov	r3, r1
 1392 000a FB70     		strb	r3, [r7, #3]
1194:Generated_Source\PSoC5/UART_RS485.c ****         uint8 bufIndex = 0u;
 1393              		.loc 1 1194 0
 1394 000c 0023     		movs	r3, #0
 1395 000e FB73     		strb	r3, [r7, #15]
1195:Generated_Source\PSoC5/UART_RS485.c **** 
1196:Generated_Source\PSoC5/UART_RS485.c ****         /* If not Initialized then skip this function */
1197:Generated_Source\PSoC5/UART_RS485.c ****         if(UART_RS485_initVar != 0u)
 1396              		.loc 1 1197 0
 1397 0010 0B4B     		ldr	r3, .L94
 1398 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1399 0014 002B     		cmp	r3, #0
 1400 0016 0ED0     		beq	.L93
1198:Generated_Source\PSoC5/UART_RS485.c ****         {
1199:Generated_Source\PSoC5/UART_RS485.c ****             while(bufIndex < byteCount)
 1401              		.loc 1 1199 0
 1402 0018 09E0     		b	.L91
 1403              	.L92:
1200:Generated_Source\PSoC5/UART_RS485.c ****             {
1201:Generated_Source\PSoC5/UART_RS485.c ****                 UART_RS485_PutChar(string[bufIndex]);
 1404              		.loc 1 1201 0
 1405 001a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1406 001c 7A68     		ldr	r2, [r7, #4]
 1407 001e 1344     		add	r3, r3, r2
 1408 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1409 0022 1846     		mov	r0, r3
 1410 0024 FFF7FEFF 		bl	UART_RS485_PutChar
1202:Generated_Source\PSoC5/UART_RS485.c ****                 bufIndex++;
 1411              		.loc 1 1202 0
 1412 0028 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1413 002a 0133     		adds	r3, r3, #1
 1414 002c FB73     		strb	r3, [r7, #15]
 1415              	.L91:
1199:Generated_Source\PSoC5/UART_RS485.c ****             {
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4OTE74.s 			page 47


 1416              		.loc 1 1199 0
 1417 002e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1418 0030 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1419 0032 9A42     		cmp	r2, r3
 1420 0034 F1D3     		bcc	.L92
 1421              	.L93:
1203:Generated_Source\PSoC5/UART_RS485.c ****             }
1204:Generated_Source\PSoC5/UART_RS485.c ****         }
1205:Generated_Source\PSoC5/UART_RS485.c ****     }
 1422              		.loc 1 1205 0
 1423 0036 00BF     		nop
 1424 0038 1037     		adds	r7, r7, #16
 1425              		.cfi_def_cfa_offset 8
 1426 003a BD46     		mov	sp, r7
 1427              		.cfi_def_cfa_register 13
 1428              		@ sp needed
 1429 003c 80BD     		pop	{r7, pc}
 1430              	.L95:
 1431 003e 00BF     		.align	2
 1432              	.L94:
 1433 0040 00000000 		.word	UART_RS485_initVar
 1434              		.cfi_endproc
 1435              	.LFE21:
 1436              		.size	UART_RS485_PutArray, .-UART_RS485_PutArray
 1437              		.section	.text.UART_RS485_PutCRLF,"ax",%progbits
 1438              		.align	2
 1439              		.global	UART_RS485_PutCRLF
 1440              		.thumb
 1441              		.thumb_func
 1442              		.type	UART_RS485_PutCRLF, %function
 1443              	UART_RS485_PutCRLF:
 1444              	.LFB22:
1206:Generated_Source\PSoC5/UART_RS485.c **** 
1207:Generated_Source\PSoC5/UART_RS485.c **** 
1208:Generated_Source\PSoC5/UART_RS485.c ****     /*******************************************************************************
1209:Generated_Source\PSoC5/UART_RS485.c ****     * Function Name: UART_RS485_PutCRLF
1210:Generated_Source\PSoC5/UART_RS485.c ****     ********************************************************************************
1211:Generated_Source\PSoC5/UART_RS485.c ****     *
1212:Generated_Source\PSoC5/UART_RS485.c ****     * Summary:
1213:Generated_Source\PSoC5/UART_RS485.c ****     *  Writes a byte of data followed by a carriage return (0x0D) and line feed
1214:Generated_Source\PSoC5/UART_RS485.c ****     *  (0x0A) to the transmit buffer.
1215:Generated_Source\PSoC5/UART_RS485.c ****     *
1216:Generated_Source\PSoC5/UART_RS485.c ****     * Parameters:
1217:Generated_Source\PSoC5/UART_RS485.c ****     *  txDataByte: Data byte to transmit before the carriage return and line feed.
1218:Generated_Source\PSoC5/UART_RS485.c ****     *
1219:Generated_Source\PSoC5/UART_RS485.c ****     * Return:
1220:Generated_Source\PSoC5/UART_RS485.c ****     *  None.
1221:Generated_Source\PSoC5/UART_RS485.c ****     *
1222:Generated_Source\PSoC5/UART_RS485.c ****     * Global Variables:
1223:Generated_Source\PSoC5/UART_RS485.c ****     *  UART_RS485_initVar - checked to identify that the component has been
1224:Generated_Source\PSoC5/UART_RS485.c ****     *     initialized.
1225:Generated_Source\PSoC5/UART_RS485.c ****     *
1226:Generated_Source\PSoC5/UART_RS485.c ****     * Reentrant:
1227:Generated_Source\PSoC5/UART_RS485.c ****     *  No.
1228:Generated_Source\PSoC5/UART_RS485.c ****     *
1229:Generated_Source\PSoC5/UART_RS485.c ****     *******************************************************************************/
1230:Generated_Source\PSoC5/UART_RS485.c ****     void UART_RS485_PutCRLF(uint8 txDataByte) 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4OTE74.s 			page 48


1231:Generated_Source\PSoC5/UART_RS485.c ****     {
 1445              		.loc 1 1231 0
 1446              		.cfi_startproc
 1447              		@ args = 0, pretend = 0, frame = 8
 1448              		@ frame_needed = 1, uses_anonymous_args = 0
 1449 0000 80B5     		push	{r7, lr}
 1450              		.cfi_def_cfa_offset 8
 1451              		.cfi_offset 7, -8
 1452              		.cfi_offset 14, -4
 1453 0002 82B0     		sub	sp, sp, #8
 1454              		.cfi_def_cfa_offset 16
 1455 0004 00AF     		add	r7, sp, #0
 1456              		.cfi_def_cfa_register 7
 1457 0006 0346     		mov	r3, r0
 1458 0008 FB71     		strb	r3, [r7, #7]
1232:Generated_Source\PSoC5/UART_RS485.c ****         /* If not Initialized then skip this function */
1233:Generated_Source\PSoC5/UART_RS485.c ****         if(UART_RS485_initVar != 0u)
 1459              		.loc 1 1233 0
 1460 000a 094B     		ldr	r3, .L99
 1461 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1462 000e 002B     		cmp	r3, #0
 1463 0010 09D0     		beq	.L98
1234:Generated_Source\PSoC5/UART_RS485.c ****         {
1235:Generated_Source\PSoC5/UART_RS485.c ****             UART_RS485_PutChar(txDataByte);
 1464              		.loc 1 1235 0
 1465 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1466 0014 1846     		mov	r0, r3
 1467 0016 FFF7FEFF 		bl	UART_RS485_PutChar
1236:Generated_Source\PSoC5/UART_RS485.c ****             UART_RS485_PutChar(0x0Du);
 1468              		.loc 1 1236 0
 1469 001a 0D20     		movs	r0, #13
 1470 001c FFF7FEFF 		bl	UART_RS485_PutChar
1237:Generated_Source\PSoC5/UART_RS485.c ****             UART_RS485_PutChar(0x0Au);
 1471              		.loc 1 1237 0
 1472 0020 0A20     		movs	r0, #10
 1473 0022 FFF7FEFF 		bl	UART_RS485_PutChar
 1474              	.L98:
1238:Generated_Source\PSoC5/UART_RS485.c ****         }
1239:Generated_Source\PSoC5/UART_RS485.c ****     }
 1475              		.loc 1 1239 0
 1476 0026 00BF     		nop
 1477 0028 0837     		adds	r7, r7, #8
 1478              		.cfi_def_cfa_offset 8
 1479 002a BD46     		mov	sp, r7
 1480              		.cfi_def_cfa_register 13
 1481              		@ sp needed
 1482 002c 80BD     		pop	{r7, pc}
 1483              	.L100:
 1484 002e 00BF     		.align	2
 1485              	.L99:
 1486 0030 00000000 		.word	UART_RS485_initVar
 1487              		.cfi_endproc
 1488              	.LFE22:
 1489              		.size	UART_RS485_PutCRLF, .-UART_RS485_PutCRLF
 1490              		.section	.text.UART_RS485_GetTxBufferSize,"ax",%progbits
 1491              		.align	2
 1492              		.global	UART_RS485_GetTxBufferSize
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4OTE74.s 			page 49


 1493              		.thumb
 1494              		.thumb_func
 1495              		.type	UART_RS485_GetTxBufferSize, %function
 1496              	UART_RS485_GetTxBufferSize:
 1497              	.LFB23:
1240:Generated_Source\PSoC5/UART_RS485.c **** 
1241:Generated_Source\PSoC5/UART_RS485.c **** 
1242:Generated_Source\PSoC5/UART_RS485.c ****     /*******************************************************************************
1243:Generated_Source\PSoC5/UART_RS485.c ****     * Function Name: UART_RS485_GetTxBufferSize
1244:Generated_Source\PSoC5/UART_RS485.c ****     ********************************************************************************
1245:Generated_Source\PSoC5/UART_RS485.c ****     *
1246:Generated_Source\PSoC5/UART_RS485.c ****     * Summary:
1247:Generated_Source\PSoC5/UART_RS485.c ****     *  Returns the number of bytes in the TX buffer which are waiting to be 
1248:Generated_Source\PSoC5/UART_RS485.c ****     *  transmitted.
1249:Generated_Source\PSoC5/UART_RS485.c ****     *  * TX software buffer is disabled (TX Buffer Size parameter is equal to 4): 
1250:Generated_Source\PSoC5/UART_RS485.c ****     *    returns 0 for empty TX FIFO, 1 for not full TX FIFO or 4 for full TX FIFO.
1251:Generated_Source\PSoC5/UART_RS485.c ****     *  * TX software buffer is enabled: returns the number of bytes in the TX 
1252:Generated_Source\PSoC5/UART_RS485.c ****     *    software buffer which are waiting to be transmitted. Bytes available in the
1253:Generated_Source\PSoC5/UART_RS485.c ****     *    TX FIFO do not count.
1254:Generated_Source\PSoC5/UART_RS485.c ****     *
1255:Generated_Source\PSoC5/UART_RS485.c ****     * Parameters:
1256:Generated_Source\PSoC5/UART_RS485.c ****     *  None.
1257:Generated_Source\PSoC5/UART_RS485.c ****     *
1258:Generated_Source\PSoC5/UART_RS485.c ****     * Return:
1259:Generated_Source\PSoC5/UART_RS485.c ****     *  Number of bytes used in the TX buffer. Return value type depends on the TX 
1260:Generated_Source\PSoC5/UART_RS485.c ****     *  Buffer Size parameter.
1261:Generated_Source\PSoC5/UART_RS485.c ****     *
1262:Generated_Source\PSoC5/UART_RS485.c ****     * Global Variables:
1263:Generated_Source\PSoC5/UART_RS485.c ****     *  UART_RS485_txBufferWrite - used to calculate left space.
1264:Generated_Source\PSoC5/UART_RS485.c ****     *  UART_RS485_txBufferRead - used to calculate left space.
1265:Generated_Source\PSoC5/UART_RS485.c ****     *
1266:Generated_Source\PSoC5/UART_RS485.c ****     * Reentrant:
1267:Generated_Source\PSoC5/UART_RS485.c ****     *  No.
1268:Generated_Source\PSoC5/UART_RS485.c ****     *
1269:Generated_Source\PSoC5/UART_RS485.c ****     * Theory:
1270:Generated_Source\PSoC5/UART_RS485.c ****     *  Allows the user to find out how full the TX Buffer is.
1271:Generated_Source\PSoC5/UART_RS485.c ****     *
1272:Generated_Source\PSoC5/UART_RS485.c ****     *******************************************************************************/
1273:Generated_Source\PSoC5/UART_RS485.c ****     uint8 UART_RS485_GetTxBufferSize(void)
1274:Generated_Source\PSoC5/UART_RS485.c ****                                                             
1275:Generated_Source\PSoC5/UART_RS485.c ****     {
 1498              		.loc 1 1275 0
 1499              		.cfi_startproc
 1500              		@ args = 0, pretend = 0, frame = 8
 1501              		@ frame_needed = 1, uses_anonymous_args = 0
 1502              		@ link register save eliminated.
 1503 0000 80B4     		push	{r7}
 1504              		.cfi_def_cfa_offset 4
 1505              		.cfi_offset 7, -4
 1506 0002 83B0     		sub	sp, sp, #12
 1507              		.cfi_def_cfa_offset 16
 1508 0004 00AF     		add	r7, sp, #0
 1509              		.cfi_def_cfa_register 7
1276:Generated_Source\PSoC5/UART_RS485.c ****         uint8 size;
1277:Generated_Source\PSoC5/UART_RS485.c **** 
1278:Generated_Source\PSoC5/UART_RS485.c ****     #if (UART_RS485_TX_INTERRUPT_ENABLED)
1279:Generated_Source\PSoC5/UART_RS485.c **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4OTE74.s 			page 50


1280:Generated_Source\PSoC5/UART_RS485.c ****         /* Protect variables that could change on interrupt. */
1281:Generated_Source\PSoC5/UART_RS485.c ****         UART_RS485_DisableTxInt();
1282:Generated_Source\PSoC5/UART_RS485.c **** 
1283:Generated_Source\PSoC5/UART_RS485.c ****         if(UART_RS485_txBufferRead == UART_RS485_txBufferWrite)
1284:Generated_Source\PSoC5/UART_RS485.c ****         {
1285:Generated_Source\PSoC5/UART_RS485.c ****             size = 0u;
1286:Generated_Source\PSoC5/UART_RS485.c ****         }
1287:Generated_Source\PSoC5/UART_RS485.c ****         else if(UART_RS485_txBufferRead < UART_RS485_txBufferWrite)
1288:Generated_Source\PSoC5/UART_RS485.c ****         {
1289:Generated_Source\PSoC5/UART_RS485.c ****             size = (UART_RS485_txBufferWrite - UART_RS485_txBufferRead);
1290:Generated_Source\PSoC5/UART_RS485.c ****         }
1291:Generated_Source\PSoC5/UART_RS485.c ****         else
1292:Generated_Source\PSoC5/UART_RS485.c ****         {
1293:Generated_Source\PSoC5/UART_RS485.c ****             size = (UART_RS485_TX_BUFFER_SIZE - UART_RS485_txBufferRead) +
1294:Generated_Source\PSoC5/UART_RS485.c ****                     UART_RS485_txBufferWrite;
1295:Generated_Source\PSoC5/UART_RS485.c ****         }
1296:Generated_Source\PSoC5/UART_RS485.c **** 
1297:Generated_Source\PSoC5/UART_RS485.c ****         UART_RS485_EnableTxInt();
1298:Generated_Source\PSoC5/UART_RS485.c **** 
1299:Generated_Source\PSoC5/UART_RS485.c ****     #else
1300:Generated_Source\PSoC5/UART_RS485.c **** 
1301:Generated_Source\PSoC5/UART_RS485.c ****         size = UART_RS485_TXSTATUS_REG;
 1510              		.loc 1 1301 0
 1511 0006 0D4B     		ldr	r3, .L106
 1512 0008 1B78     		ldrb	r3, [r3]
 1513 000a FB71     		strb	r3, [r7, #7]
1302:Generated_Source\PSoC5/UART_RS485.c **** 
1303:Generated_Source\PSoC5/UART_RS485.c ****         /* Is the fifo is full. */
1304:Generated_Source\PSoC5/UART_RS485.c ****         if((size & UART_RS485_TX_STS_FIFO_FULL) != 0u)
 1514              		.loc 1 1304 0
 1515 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1516 000e 03F00403 		and	r3, r3, #4
 1517 0012 002B     		cmp	r3, #0
 1518 0014 02D0     		beq	.L102
1305:Generated_Source\PSoC5/UART_RS485.c ****         {
1306:Generated_Source\PSoC5/UART_RS485.c ****             size = UART_RS485_FIFO_LENGTH;
 1519              		.loc 1 1306 0
 1520 0016 0423     		movs	r3, #4
 1521 0018 FB71     		strb	r3, [r7, #7]
 1522 001a 09E0     		b	.L103
 1523              	.L102:
1307:Generated_Source\PSoC5/UART_RS485.c ****         }
1308:Generated_Source\PSoC5/UART_RS485.c ****         else if((size & UART_RS485_TX_STS_FIFO_EMPTY) != 0u)
 1524              		.loc 1 1308 0
 1525 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1526 001e 03F00203 		and	r3, r3, #2
 1527 0022 002B     		cmp	r3, #0
 1528 0024 02D0     		beq	.L104
1309:Generated_Source\PSoC5/UART_RS485.c ****         {
1310:Generated_Source\PSoC5/UART_RS485.c ****             size = 0u;
 1529              		.loc 1 1310 0
 1530 0026 0023     		movs	r3, #0
 1531 0028 FB71     		strb	r3, [r7, #7]
 1532 002a 01E0     		b	.L103
 1533              	.L104:
1311:Generated_Source\PSoC5/UART_RS485.c ****         }
1312:Generated_Source\PSoC5/UART_RS485.c ****         else
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4OTE74.s 			page 51


1313:Generated_Source\PSoC5/UART_RS485.c ****         {
1314:Generated_Source\PSoC5/UART_RS485.c ****             /* We only know there is data in the fifo. */
1315:Generated_Source\PSoC5/UART_RS485.c ****             size = 1u;
 1534              		.loc 1 1315 0
 1535 002c 0123     		movs	r3, #1
 1536 002e FB71     		strb	r3, [r7, #7]
 1537              	.L103:
1316:Generated_Source\PSoC5/UART_RS485.c ****         }
1317:Generated_Source\PSoC5/UART_RS485.c **** 
1318:Generated_Source\PSoC5/UART_RS485.c ****     #endif /* (UART_RS485_TX_INTERRUPT_ENABLED) */
1319:Generated_Source\PSoC5/UART_RS485.c **** 
1320:Generated_Source\PSoC5/UART_RS485.c ****     return(size);
 1538              		.loc 1 1320 0
 1539 0030 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
1321:Generated_Source\PSoC5/UART_RS485.c ****     }
 1540              		.loc 1 1321 0
 1541 0032 1846     		mov	r0, r3
 1542 0034 0C37     		adds	r7, r7, #12
 1543              		.cfi_def_cfa_offset 4
 1544 0036 BD46     		mov	sp, r7
 1545              		.cfi_def_cfa_register 13
 1546              		@ sp needed
 1547 0038 80BC     		pop	{r7}
 1548              		.cfi_restore 7
 1549              		.cfi_def_cfa_offset 0
 1550 003a 7047     		bx	lr
 1551              	.L107:
 1552              		.align	2
 1553              	.L106:
 1554 003c 65640040 		.word	1073767525
 1555              		.cfi_endproc
 1556              	.LFE23:
 1557              		.size	UART_RS485_GetTxBufferSize, .-UART_RS485_GetTxBufferSize
 1558              		.section	.text.UART_RS485_ClearTxBuffer,"ax",%progbits
 1559              		.align	2
 1560              		.global	UART_RS485_ClearTxBuffer
 1561              		.thumb
 1562              		.thumb_func
 1563              		.type	UART_RS485_ClearTxBuffer, %function
 1564              	UART_RS485_ClearTxBuffer:
 1565              	.LFB24:
1322:Generated_Source\PSoC5/UART_RS485.c **** 
1323:Generated_Source\PSoC5/UART_RS485.c **** 
1324:Generated_Source\PSoC5/UART_RS485.c ****     /*******************************************************************************
1325:Generated_Source\PSoC5/UART_RS485.c ****     * Function Name: UART_RS485_ClearTxBuffer
1326:Generated_Source\PSoC5/UART_RS485.c ****     ********************************************************************************
1327:Generated_Source\PSoC5/UART_RS485.c ****     *
1328:Generated_Source\PSoC5/UART_RS485.c ****     * Summary:
1329:Generated_Source\PSoC5/UART_RS485.c ****     *  Clears all data from the TX buffer and hardware TX FIFO.
1330:Generated_Source\PSoC5/UART_RS485.c ****     *
1331:Generated_Source\PSoC5/UART_RS485.c ****     * Parameters:
1332:Generated_Source\PSoC5/UART_RS485.c ****     *  None.
1333:Generated_Source\PSoC5/UART_RS485.c ****     *
1334:Generated_Source\PSoC5/UART_RS485.c ****     * Return:
1335:Generated_Source\PSoC5/UART_RS485.c ****     *  None.
1336:Generated_Source\PSoC5/UART_RS485.c ****     *
1337:Generated_Source\PSoC5/UART_RS485.c ****     * Global Variables:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4OTE74.s 			page 52


1338:Generated_Source\PSoC5/UART_RS485.c ****     *  UART_RS485_txBufferWrite - cleared to zero.
1339:Generated_Source\PSoC5/UART_RS485.c ****     *  UART_RS485_txBufferRead - cleared to zero.
1340:Generated_Source\PSoC5/UART_RS485.c ****     *
1341:Generated_Source\PSoC5/UART_RS485.c ****     * Reentrant:
1342:Generated_Source\PSoC5/UART_RS485.c ****     *  No.
1343:Generated_Source\PSoC5/UART_RS485.c ****     *
1344:Generated_Source\PSoC5/UART_RS485.c ****     * Theory:
1345:Generated_Source\PSoC5/UART_RS485.c ****     *  Setting the pointers to zero makes the system believe there is no data to
1346:Generated_Source\PSoC5/UART_RS485.c ****     *  read and writing will resume at address 0 overwriting any data that may have
1347:Generated_Source\PSoC5/UART_RS485.c ****     *  remained in the RAM.
1348:Generated_Source\PSoC5/UART_RS485.c ****     *
1349:Generated_Source\PSoC5/UART_RS485.c ****     * Side Effects:
1350:Generated_Source\PSoC5/UART_RS485.c ****     *  Data waiting in the transmit buffer is not sent; a byte that is currently
1351:Generated_Source\PSoC5/UART_RS485.c ****     *  transmitting finishes transmitting.
1352:Generated_Source\PSoC5/UART_RS485.c ****     *
1353:Generated_Source\PSoC5/UART_RS485.c ****     *******************************************************************************/
1354:Generated_Source\PSoC5/UART_RS485.c ****     void UART_RS485_ClearTxBuffer(void) 
1355:Generated_Source\PSoC5/UART_RS485.c ****     {
 1566              		.loc 1 1355 0
 1567              		.cfi_startproc
 1568              		@ args = 0, pretend = 0, frame = 8
 1569              		@ frame_needed = 1, uses_anonymous_args = 0
 1570 0000 80B5     		push	{r7, lr}
 1571              		.cfi_def_cfa_offset 8
 1572              		.cfi_offset 7, -8
 1573              		.cfi_offset 14, -4
 1574 0002 82B0     		sub	sp, sp, #8
 1575              		.cfi_def_cfa_offset 16
 1576 0004 00AF     		add	r7, sp, #0
 1577              		.cfi_def_cfa_register 7
1356:Generated_Source\PSoC5/UART_RS485.c ****         uint8 enableInterrupts;
1357:Generated_Source\PSoC5/UART_RS485.c **** 
1358:Generated_Source\PSoC5/UART_RS485.c ****         enableInterrupts = CyEnterCriticalSection();
 1578              		.loc 1 1358 0
 1579 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 1580 000a 0346     		mov	r3, r0
 1581 000c FB71     		strb	r3, [r7, #7]
1359:Generated_Source\PSoC5/UART_RS485.c ****         /* Clear the HW FIFO */
1360:Generated_Source\PSoC5/UART_RS485.c ****         UART_RS485_TXDATA_AUX_CTL_REG |= (uint8)  UART_RS485_TX_FIFO_CLR;
 1582              		.loc 1 1360 0
 1583 000e 0C4A     		ldr	r2, .L109
 1584 0010 0B4B     		ldr	r3, .L109
 1585 0012 1B78     		ldrb	r3, [r3]
 1586 0014 DBB2     		uxtb	r3, r3
 1587 0016 43F00103 		orr	r3, r3, #1
 1588 001a DBB2     		uxtb	r3, r3
 1589 001c 1370     		strb	r3, [r2]
1361:Generated_Source\PSoC5/UART_RS485.c ****         UART_RS485_TXDATA_AUX_CTL_REG &= (uint8) ~UART_RS485_TX_FIFO_CLR;
 1590              		.loc 1 1361 0
 1591 001e 084A     		ldr	r2, .L109
 1592 0020 074B     		ldr	r3, .L109
 1593 0022 1B78     		ldrb	r3, [r3]
 1594 0024 DBB2     		uxtb	r3, r3
 1595 0026 23F00103 		bic	r3, r3, #1
 1596 002a DBB2     		uxtb	r3, r3
 1597 002c 1370     		strb	r3, [r2]
1362:Generated_Source\PSoC5/UART_RS485.c ****         CyExitCriticalSection(enableInterrupts);
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4OTE74.s 			page 53


 1598              		.loc 1 1362 0
 1599 002e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1600 0030 1846     		mov	r0, r3
 1601 0032 FFF7FEFF 		bl	CyExitCriticalSection
1363:Generated_Source\PSoC5/UART_RS485.c **** 
1364:Generated_Source\PSoC5/UART_RS485.c ****     #if (UART_RS485_TX_INTERRUPT_ENABLED)
1365:Generated_Source\PSoC5/UART_RS485.c **** 
1366:Generated_Source\PSoC5/UART_RS485.c ****         /* Protect variables that could change on interrupt. */
1367:Generated_Source\PSoC5/UART_RS485.c ****         UART_RS485_DisableTxInt();
1368:Generated_Source\PSoC5/UART_RS485.c **** 
1369:Generated_Source\PSoC5/UART_RS485.c ****         UART_RS485_txBufferRead = 0u;
1370:Generated_Source\PSoC5/UART_RS485.c ****         UART_RS485_txBufferWrite = 0u;
1371:Generated_Source\PSoC5/UART_RS485.c **** 
1372:Generated_Source\PSoC5/UART_RS485.c ****         /* Enable Tx interrupt. */
1373:Generated_Source\PSoC5/UART_RS485.c ****         UART_RS485_EnableTxInt();
1374:Generated_Source\PSoC5/UART_RS485.c **** 
1375:Generated_Source\PSoC5/UART_RS485.c ****     #endif /* (UART_RS485_TX_INTERRUPT_ENABLED) */
1376:Generated_Source\PSoC5/UART_RS485.c ****     }
 1602              		.loc 1 1376 0
 1603 0036 00BF     		nop
 1604 0038 0837     		adds	r7, r7, #8
 1605              		.cfi_def_cfa_offset 8
 1606 003a BD46     		mov	sp, r7
 1607              		.cfi_def_cfa_register 13
 1608              		@ sp needed
 1609 003c 80BD     		pop	{r7, pc}
 1610              	.L110:
 1611 003e 00BF     		.align	2
 1612              	.L109:
 1613 0040 97640040 		.word	1073767575
 1614              		.cfi_endproc
 1615              	.LFE24:
 1616              		.size	UART_RS485_ClearTxBuffer, .-UART_RS485_ClearTxBuffer
 1617              		.section	.text.UART_RS485_SendBreak,"ax",%progbits
 1618              		.align	2
 1619              		.global	UART_RS485_SendBreak
 1620              		.thumb
 1621              		.thumb_func
 1622              		.type	UART_RS485_SendBreak, %function
 1623              	UART_RS485_SendBreak:
 1624              	.LFB25:
1377:Generated_Source\PSoC5/UART_RS485.c **** 
1378:Generated_Source\PSoC5/UART_RS485.c **** 
1379:Generated_Source\PSoC5/UART_RS485.c ****     /*******************************************************************************
1380:Generated_Source\PSoC5/UART_RS485.c ****     * Function Name: UART_RS485_SendBreak
1381:Generated_Source\PSoC5/UART_RS485.c ****     ********************************************************************************
1382:Generated_Source\PSoC5/UART_RS485.c ****     *
1383:Generated_Source\PSoC5/UART_RS485.c ****     * Summary:
1384:Generated_Source\PSoC5/UART_RS485.c ****     *  Transmits a break signal on the bus.
1385:Generated_Source\PSoC5/UART_RS485.c ****     *
1386:Generated_Source\PSoC5/UART_RS485.c ****     * Parameters:
1387:Generated_Source\PSoC5/UART_RS485.c ****     *  uint8 retMode:  Send Break return mode. See the following table for options.
1388:Generated_Source\PSoC5/UART_RS485.c ****     *   UART_RS485_SEND_BREAK - Initialize registers for break, send the Break
1389:Generated_Source\PSoC5/UART_RS485.c ****     *       signal and return immediately.
1390:Generated_Source\PSoC5/UART_RS485.c ****     *   UART_RS485_WAIT_FOR_COMPLETE_REINIT - Wait until break transmission is
1391:Generated_Source\PSoC5/UART_RS485.c ****     *       complete, reinitialize registers to normal transmission mode then return
1392:Generated_Source\PSoC5/UART_RS485.c ****     *   UART_RS485_REINIT - Reinitialize registers to normal transmission mode
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4OTE74.s 			page 54


1393:Generated_Source\PSoC5/UART_RS485.c ****     *       then return.
1394:Generated_Source\PSoC5/UART_RS485.c ****     *   UART_RS485_SEND_WAIT_REINIT - Performs both options: 
1395:Generated_Source\PSoC5/UART_RS485.c ****     *      UART_RS485_SEND_BREAK and UART_RS485_WAIT_FOR_COMPLETE_REINIT.
1396:Generated_Source\PSoC5/UART_RS485.c ****     *      This option is recommended for most cases.
1397:Generated_Source\PSoC5/UART_RS485.c ****     *
1398:Generated_Source\PSoC5/UART_RS485.c ****     * Return:
1399:Generated_Source\PSoC5/UART_RS485.c ****     *  None.
1400:Generated_Source\PSoC5/UART_RS485.c ****     *
1401:Generated_Source\PSoC5/UART_RS485.c ****     * Global Variables:
1402:Generated_Source\PSoC5/UART_RS485.c ****     *  UART_RS485_initVar - checked to identify that the component has been
1403:Generated_Source\PSoC5/UART_RS485.c ****     *     initialized.
1404:Generated_Source\PSoC5/UART_RS485.c ****     *  txPeriod - static variable, used for keeping TX period configuration.
1405:Generated_Source\PSoC5/UART_RS485.c ****     *
1406:Generated_Source\PSoC5/UART_RS485.c ****     * Reentrant:
1407:Generated_Source\PSoC5/UART_RS485.c ****     *  No.
1408:Generated_Source\PSoC5/UART_RS485.c ****     *
1409:Generated_Source\PSoC5/UART_RS485.c ****     * Theory:
1410:Generated_Source\PSoC5/UART_RS485.c ****     *  SendBreak function initializes registers to send 13-bit break signal. It is
1411:Generated_Source\PSoC5/UART_RS485.c ****     *  important to return the registers configuration to normal for continue 8-bit
1412:Generated_Source\PSoC5/UART_RS485.c ****     *  operation.
1413:Generated_Source\PSoC5/UART_RS485.c ****     *  There are 3 variants for this API usage:
1414:Generated_Source\PSoC5/UART_RS485.c ****     *  1) SendBreak(3) - function will send the Break signal and take care on the
1415:Generated_Source\PSoC5/UART_RS485.c ****     *     configuration returning. Function will block CPU until transmission
1416:Generated_Source\PSoC5/UART_RS485.c ****     *     complete.
1417:Generated_Source\PSoC5/UART_RS485.c ****     *  2) User may want to use blocking time if UART configured to the low speed
1418:Generated_Source\PSoC5/UART_RS485.c ****     *     operation
1419:Generated_Source\PSoC5/UART_RS485.c ****     *     Example for this case:
1420:Generated_Source\PSoC5/UART_RS485.c ****     *     SendBreak(0);     - initialize Break signal transmission
1421:Generated_Source\PSoC5/UART_RS485.c ****     *         Add your code here to use CPU time
1422:Generated_Source\PSoC5/UART_RS485.c ****     *     SendBreak(1);     - complete Break operation
1423:Generated_Source\PSoC5/UART_RS485.c ****     *  3) Same to 2) but user may want to initialize and use the interrupt to
1424:Generated_Source\PSoC5/UART_RS485.c ****     *     complete break operation.
1425:Generated_Source\PSoC5/UART_RS485.c ****     *     Example for this case:
1426:Generated_Source\PSoC5/UART_RS485.c ****     *     Initialize TX interrupt with "TX - On TX Complete" parameter
1427:Generated_Source\PSoC5/UART_RS485.c ****     *     SendBreak(0);     - initialize Break signal transmission
1428:Generated_Source\PSoC5/UART_RS485.c ****     *         Add your code here to use CPU time
1429:Generated_Source\PSoC5/UART_RS485.c ****     *     When interrupt appear with UART_RS485_TX_STS_COMPLETE status:
1430:Generated_Source\PSoC5/UART_RS485.c ****     *     SendBreak(2);     - complete Break operation
1431:Generated_Source\PSoC5/UART_RS485.c ****     *
1432:Generated_Source\PSoC5/UART_RS485.c ****     * Side Effects:
1433:Generated_Source\PSoC5/UART_RS485.c ****     *  The UART_RS485_SendBreak() function initializes registers to send a
1434:Generated_Source\PSoC5/UART_RS485.c ****     *  break signal.
1435:Generated_Source\PSoC5/UART_RS485.c ****     *  Break signal length depends on the break signal bits configuration.
1436:Generated_Source\PSoC5/UART_RS485.c ****     *  The register configuration should be reinitialized before normal 8-bit
1437:Generated_Source\PSoC5/UART_RS485.c ****     *  communication can continue.
1438:Generated_Source\PSoC5/UART_RS485.c ****     *
1439:Generated_Source\PSoC5/UART_RS485.c ****     *******************************************************************************/
1440:Generated_Source\PSoC5/UART_RS485.c ****     void UART_RS485_SendBreak(uint8 retMode) 
1441:Generated_Source\PSoC5/UART_RS485.c ****     {
 1625              		.loc 1 1441 0
 1626              		.cfi_startproc
 1627              		@ args = 0, pretend = 0, frame = 16
 1628              		@ frame_needed = 1, uses_anonymous_args = 0
 1629              		@ link register save eliminated.
 1630 0000 80B4     		push	{r7}
 1631              		.cfi_def_cfa_offset 4
 1632              		.cfi_offset 7, -4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4OTE74.s 			page 55


 1633 0002 85B0     		sub	sp, sp, #20
 1634              		.cfi_def_cfa_offset 24
 1635 0004 00AF     		add	r7, sp, #0
 1636              		.cfi_def_cfa_register 7
 1637 0006 0346     		mov	r3, r0
 1638 0008 FB71     		strb	r3, [r7, #7]
1442:Generated_Source\PSoC5/UART_RS485.c **** 
1443:Generated_Source\PSoC5/UART_RS485.c ****         /* If not Initialized then skip this function*/
1444:Generated_Source\PSoC5/UART_RS485.c ****         if(UART_RS485_initVar != 0u)
 1639              		.loc 1 1444 0
 1640 000a 1F4B     		ldr	r3, .L120
 1641 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1642 000e 002B     		cmp	r3, #0
 1643 0010 35D0     		beq	.L119
 1644              	.LBB2:
1445:Generated_Source\PSoC5/UART_RS485.c ****         {
1446:Generated_Source\PSoC5/UART_RS485.c ****             /* Set the Counter to 13-bits and transmit a 00 byte */
1447:Generated_Source\PSoC5/UART_RS485.c ****             /* When that is done then reset the counter value back */
1448:Generated_Source\PSoC5/UART_RS485.c ****             uint8 tmpStat;
1449:Generated_Source\PSoC5/UART_RS485.c **** 
1450:Generated_Source\PSoC5/UART_RS485.c ****         #if(UART_RS485_HD_ENABLED) /* Half Duplex mode*/
1451:Generated_Source\PSoC5/UART_RS485.c **** 
1452:Generated_Source\PSoC5/UART_RS485.c ****             if( (retMode == UART_RS485_SEND_BREAK) ||
1453:Generated_Source\PSoC5/UART_RS485.c ****                 (retMode == UART_RS485_SEND_WAIT_REINIT ) )
1454:Generated_Source\PSoC5/UART_RS485.c ****             {
1455:Generated_Source\PSoC5/UART_RS485.c ****                 /* CTRL_HD_SEND_BREAK - sends break bits in HD mode */
1456:Generated_Source\PSoC5/UART_RS485.c ****                 UART_RS485_WriteControlRegister(UART_RS485_ReadControlRegister() |
1457:Generated_Source\PSoC5/UART_RS485.c ****                                                       UART_RS485_CTRL_HD_SEND_BREAK);
1458:Generated_Source\PSoC5/UART_RS485.c ****                 /* Send zeros */
1459:Generated_Source\PSoC5/UART_RS485.c ****                 UART_RS485_TXDATA_REG = 0u;
1460:Generated_Source\PSoC5/UART_RS485.c **** 
1461:Generated_Source\PSoC5/UART_RS485.c ****                 do /* Wait until transmit starts */
1462:Generated_Source\PSoC5/UART_RS485.c ****                 {
1463:Generated_Source\PSoC5/UART_RS485.c ****                     tmpStat = UART_RS485_TXSTATUS_REG;
1464:Generated_Source\PSoC5/UART_RS485.c ****                 }
1465:Generated_Source\PSoC5/UART_RS485.c ****                 while((tmpStat & UART_RS485_TX_STS_FIFO_EMPTY) != 0u);
1466:Generated_Source\PSoC5/UART_RS485.c ****             }
1467:Generated_Source\PSoC5/UART_RS485.c **** 
1468:Generated_Source\PSoC5/UART_RS485.c ****             if( (retMode == UART_RS485_WAIT_FOR_COMPLETE_REINIT) ||
1469:Generated_Source\PSoC5/UART_RS485.c ****                 (retMode == UART_RS485_SEND_WAIT_REINIT) )
1470:Generated_Source\PSoC5/UART_RS485.c ****             {
1471:Generated_Source\PSoC5/UART_RS485.c ****                 do /* Wait until transmit complete */
1472:Generated_Source\PSoC5/UART_RS485.c ****                 {
1473:Generated_Source\PSoC5/UART_RS485.c ****                     tmpStat = UART_RS485_TXSTATUS_REG;
1474:Generated_Source\PSoC5/UART_RS485.c ****                 }
1475:Generated_Source\PSoC5/UART_RS485.c ****                 while(((uint8)~tmpStat & UART_RS485_TX_STS_COMPLETE) != 0u);
1476:Generated_Source\PSoC5/UART_RS485.c ****             }
1477:Generated_Source\PSoC5/UART_RS485.c **** 
1478:Generated_Source\PSoC5/UART_RS485.c ****             if( (retMode == UART_RS485_WAIT_FOR_COMPLETE_REINIT) ||
1479:Generated_Source\PSoC5/UART_RS485.c ****                 (retMode == UART_RS485_REINIT) ||
1480:Generated_Source\PSoC5/UART_RS485.c ****                 (retMode == UART_RS485_SEND_WAIT_REINIT) )
1481:Generated_Source\PSoC5/UART_RS485.c ****             {
1482:Generated_Source\PSoC5/UART_RS485.c ****                 UART_RS485_WriteControlRegister(UART_RS485_ReadControlRegister() &
1483:Generated_Source\PSoC5/UART_RS485.c ****                                               (uint8)~UART_RS485_CTRL_HD_SEND_BREAK);
1484:Generated_Source\PSoC5/UART_RS485.c ****             }
1485:Generated_Source\PSoC5/UART_RS485.c **** 
1486:Generated_Source\PSoC5/UART_RS485.c ****         #else /* UART_RS485_HD_ENABLED Full Duplex mode */
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4OTE74.s 			page 56


1487:Generated_Source\PSoC5/UART_RS485.c **** 
1488:Generated_Source\PSoC5/UART_RS485.c ****             static uint8 txPeriod;
1489:Generated_Source\PSoC5/UART_RS485.c **** 
1490:Generated_Source\PSoC5/UART_RS485.c ****             if( (retMode == UART_RS485_SEND_BREAK) ||
 1645              		.loc 1 1490 0
 1646 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1647 0014 002B     		cmp	r3, #0
 1648 0016 02D0     		beq	.L113
 1649              		.loc 1 1490 0 is_stmt 0 discriminator 1
 1650 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1651 001a 032B     		cmp	r3, #3
 1652 001c 12D1     		bne	.L114
 1653              	.L113:
1491:Generated_Source\PSoC5/UART_RS485.c ****                 (retMode == UART_RS485_SEND_WAIT_REINIT) )
1492:Generated_Source\PSoC5/UART_RS485.c ****             {
1493:Generated_Source\PSoC5/UART_RS485.c ****                 /* CTRL_HD_SEND_BREAK - skip to send parity bit at Break signal in Full Duplex mode
1494:Generated_Source\PSoC5/UART_RS485.c ****                 #if( (UART_RS485_PARITY_TYPE != UART_RS485__B_UART__NONE_REVB) || \
1495:Generated_Source\PSoC5/UART_RS485.c ****                                     (UART_RS485_PARITY_TYPE_SW != 0u) )
1496:Generated_Source\PSoC5/UART_RS485.c ****                     UART_RS485_WriteControlRegister(UART_RS485_ReadControlRegister() |
1497:Generated_Source\PSoC5/UART_RS485.c ****                                                           UART_RS485_CTRL_HD_SEND_BREAK);
1498:Generated_Source\PSoC5/UART_RS485.c ****                 #endif /* End UART_RS485_PARITY_TYPE != UART_RS485__B_UART__NONE_REVB  */
1499:Generated_Source\PSoC5/UART_RS485.c **** 
1500:Generated_Source\PSoC5/UART_RS485.c ****                 #if(UART_RS485_TXCLKGEN_DP)
1501:Generated_Source\PSoC5/UART_RS485.c ****                     txPeriod = UART_RS485_TXBITCLKTX_COMPLETE_REG;
 1654              		.loc 1 1501 0 is_stmt 1
 1655 001e 1B4B     		ldr	r3, .L120+4
 1656 0020 1B78     		ldrb	r3, [r3]
 1657 0022 DAB2     		uxtb	r2, r3
 1658 0024 1A4B     		ldr	r3, .L120+8
 1659 0026 1A70     		strb	r2, [r3]
1502:Generated_Source\PSoC5/UART_RS485.c ****                     UART_RS485_TXBITCLKTX_COMPLETE_REG = UART_RS485_TXBITCTR_BREAKBITS;
 1660              		.loc 1 1502 0
 1661 0028 184B     		ldr	r3, .L120+4
 1662 002a 5F22     		movs	r2, #95
 1663 002c 1A70     		strb	r2, [r3]
1503:Generated_Source\PSoC5/UART_RS485.c ****                 #else
1504:Generated_Source\PSoC5/UART_RS485.c ****                     txPeriod = UART_RS485_TXBITCTR_PERIOD_REG;
1505:Generated_Source\PSoC5/UART_RS485.c ****                     UART_RS485_TXBITCTR_PERIOD_REG = UART_RS485_TXBITCTR_BREAKBITS8X;
1506:Generated_Source\PSoC5/UART_RS485.c ****                 #endif /* End UART_RS485_TXCLKGEN_DP */
1507:Generated_Source\PSoC5/UART_RS485.c **** 
1508:Generated_Source\PSoC5/UART_RS485.c ****                 /* Send zeros */
1509:Generated_Source\PSoC5/UART_RS485.c ****                 UART_RS485_TXDATA_REG = 0u;
 1664              		.loc 1 1509 0
 1665 002e 194B     		ldr	r3, .L120+12
 1666 0030 0022     		movs	r2, #0
 1667 0032 1A70     		strb	r2, [r3]
 1668              	.L115:
1510:Generated_Source\PSoC5/UART_RS485.c **** 
1511:Generated_Source\PSoC5/UART_RS485.c ****                 do /* Wait until transmit starts */
1512:Generated_Source\PSoC5/UART_RS485.c ****                 {
1513:Generated_Source\PSoC5/UART_RS485.c ****                     tmpStat = UART_RS485_TXSTATUS_REG;
 1669              		.loc 1 1513 0 discriminator 1
 1670 0034 184B     		ldr	r3, .L120+16
 1671 0036 1B78     		ldrb	r3, [r3]
 1672 0038 FB73     		strb	r3, [r7, #15]
1514:Generated_Source\PSoC5/UART_RS485.c ****                 }
1515:Generated_Source\PSoC5/UART_RS485.c ****                 while((tmpStat & UART_RS485_TX_STS_FIFO_EMPTY) != 0u);
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4OTE74.s 			page 57


 1673              		.loc 1 1515 0 discriminator 1
 1674 003a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1675 003c 03F00203 		and	r3, r3, #2
 1676 0040 002B     		cmp	r3, #0
 1677 0042 F7D1     		bne	.L115
 1678              	.L114:
1516:Generated_Source\PSoC5/UART_RS485.c ****             }
1517:Generated_Source\PSoC5/UART_RS485.c **** 
1518:Generated_Source\PSoC5/UART_RS485.c ****             if( (retMode == UART_RS485_WAIT_FOR_COMPLETE_REINIT) ||
 1679              		.loc 1 1518 0
 1680 0044 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1681 0046 012B     		cmp	r3, #1
 1682 0048 02D0     		beq	.L116
 1683              		.loc 1 1518 0 is_stmt 0 discriminator 1
 1684 004a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1685 004c 032B     		cmp	r3, #3
 1686 004e 09D1     		bne	.L117
 1687              	.L116:
1519:Generated_Source\PSoC5/UART_RS485.c ****                 (retMode == UART_RS485_SEND_WAIT_REINIT) )
1520:Generated_Source\PSoC5/UART_RS485.c ****             {
1521:Generated_Source\PSoC5/UART_RS485.c ****                 do /* Wait until transmit complete */
1522:Generated_Source\PSoC5/UART_RS485.c ****                 {
1523:Generated_Source\PSoC5/UART_RS485.c ****                     tmpStat = UART_RS485_TXSTATUS_REG;
 1688              		.loc 1 1523 0 is_stmt 1 discriminator 1
 1689 0050 114B     		ldr	r3, .L120+16
 1690 0052 1B78     		ldrb	r3, [r3]
 1691 0054 FB73     		strb	r3, [r7, #15]
1524:Generated_Source\PSoC5/UART_RS485.c ****                 }
1525:Generated_Source\PSoC5/UART_RS485.c ****                 while(((uint8)~tmpStat & UART_RS485_TX_STS_COMPLETE) != 0u);
 1692              		.loc 1 1525 0 discriminator 1
 1693 0056 FB7B     		ldrb	r3, [r7, #15]
 1694 0058 DB43     		mvns	r3, r3
 1695 005a DBB2     		uxtb	r3, r3
 1696 005c 03F00103 		and	r3, r3, #1
 1697 0060 002B     		cmp	r3, #0
 1698 0062 F5D1     		bne	.L116
 1699              	.L117:
1526:Generated_Source\PSoC5/UART_RS485.c ****             }
1527:Generated_Source\PSoC5/UART_RS485.c **** 
1528:Generated_Source\PSoC5/UART_RS485.c ****             if( (retMode == UART_RS485_WAIT_FOR_COMPLETE_REINIT) ||
 1700              		.loc 1 1528 0
 1701 0064 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1702 0066 012B     		cmp	r3, #1
 1703 0068 05D0     		beq	.L118
 1704              		.loc 1 1528 0 is_stmt 0 discriminator 1
 1705 006a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1706 006c 022B     		cmp	r3, #2
 1707 006e 02D0     		beq	.L118
1529:Generated_Source\PSoC5/UART_RS485.c ****                 (retMode == UART_RS485_REINIT) ||
 1708              		.loc 1 1529 0 is_stmt 1
 1709 0070 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1710 0072 032B     		cmp	r3, #3
 1711 0074 03D1     		bne	.L119
 1712              	.L118:
1530:Generated_Source\PSoC5/UART_RS485.c ****                 (retMode == UART_RS485_SEND_WAIT_REINIT) )
1531:Generated_Source\PSoC5/UART_RS485.c ****             {
1532:Generated_Source\PSoC5/UART_RS485.c **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4OTE74.s 			page 58


1533:Generated_Source\PSoC5/UART_RS485.c ****             #if(UART_RS485_TXCLKGEN_DP)
1534:Generated_Source\PSoC5/UART_RS485.c ****                 UART_RS485_TXBITCLKTX_COMPLETE_REG = txPeriod;
 1713              		.loc 1 1534 0
 1714 0076 054B     		ldr	r3, .L120+4
 1715 0078 054A     		ldr	r2, .L120+8
 1716 007a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1717 007c 1A70     		strb	r2, [r3]
 1718              	.L119:
 1719              	.LBE2:
1535:Generated_Source\PSoC5/UART_RS485.c ****             #else
1536:Generated_Source\PSoC5/UART_RS485.c ****                 UART_RS485_TXBITCTR_PERIOD_REG = txPeriod;
1537:Generated_Source\PSoC5/UART_RS485.c ****             #endif /* End UART_RS485_TXCLKGEN_DP */
1538:Generated_Source\PSoC5/UART_RS485.c **** 
1539:Generated_Source\PSoC5/UART_RS485.c ****             #if( (UART_RS485_PARITY_TYPE != UART_RS485__B_UART__NONE_REVB) || \
1540:Generated_Source\PSoC5/UART_RS485.c ****                  (UART_RS485_PARITY_TYPE_SW != 0u) )
1541:Generated_Source\PSoC5/UART_RS485.c ****                 UART_RS485_WriteControlRegister(UART_RS485_ReadControlRegister() &
1542:Generated_Source\PSoC5/UART_RS485.c ****                                                       (uint8) ~UART_RS485_CTRL_HD_SEND_BREAK);
1543:Generated_Source\PSoC5/UART_RS485.c ****             #endif /* End UART_RS485_PARITY_TYPE != NONE */
1544:Generated_Source\PSoC5/UART_RS485.c ****             }
1545:Generated_Source\PSoC5/UART_RS485.c ****         #endif    /* End UART_RS485_HD_ENABLED */
1546:Generated_Source\PSoC5/UART_RS485.c ****         }
1547:Generated_Source\PSoC5/UART_RS485.c ****     }
 1720              		.loc 1 1547 0
 1721 007e 00BF     		nop
 1722 0080 1437     		adds	r7, r7, #20
 1723              		.cfi_def_cfa_offset 4
 1724 0082 BD46     		mov	sp, r7
 1725              		.cfi_def_cfa_register 13
 1726              		@ sp needed
 1727 0084 80BC     		pop	{r7}
 1728              		.cfi_restore 7
 1729              		.cfi_def_cfa_offset 0
 1730 0086 7047     		bx	lr
 1731              	.L121:
 1732              		.align	2
 1733              	.L120:
 1734 0088 00000000 		.word	UART_RS485_initVar
 1735 008c 34640040 		.word	1073767476
 1736 0090 06000000 		.word	txPeriod.5118
 1737 0094 47640040 		.word	1073767495
 1738 0098 65640040 		.word	1073767525
 1739              		.cfi_endproc
 1740              	.LFE25:
 1741              		.size	UART_RS485_SendBreak, .-UART_RS485_SendBreak
 1742              		.section	.text.UART_RS485_SetTxAddressMode,"ax",%progbits
 1743              		.align	2
 1744              		.global	UART_RS485_SetTxAddressMode
 1745              		.thumb
 1746              		.thumb_func
 1747              		.type	UART_RS485_SetTxAddressMode, %function
 1748              	UART_RS485_SetTxAddressMode:
 1749              	.LFB26:
1548:Generated_Source\PSoC5/UART_RS485.c **** 
1549:Generated_Source\PSoC5/UART_RS485.c **** 
1550:Generated_Source\PSoC5/UART_RS485.c ****     /*******************************************************************************
1551:Generated_Source\PSoC5/UART_RS485.c ****     * Function Name: UART_RS485_SetTxAddressMode
1552:Generated_Source\PSoC5/UART_RS485.c ****     ********************************************************************************
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4OTE74.s 			page 59


1553:Generated_Source\PSoC5/UART_RS485.c ****     *
1554:Generated_Source\PSoC5/UART_RS485.c ****     * Summary:
1555:Generated_Source\PSoC5/UART_RS485.c ****     *  Configures the transmitter to signal the next bytes is address or data.
1556:Generated_Source\PSoC5/UART_RS485.c ****     *
1557:Generated_Source\PSoC5/UART_RS485.c ****     * Parameters:
1558:Generated_Source\PSoC5/UART_RS485.c ****     *  addressMode: 
1559:Generated_Source\PSoC5/UART_RS485.c ****     *       UART_RS485_SET_SPACE - Configure the transmitter to send the next
1560:Generated_Source\PSoC5/UART_RS485.c ****     *                                    byte as a data.
1561:Generated_Source\PSoC5/UART_RS485.c ****     *       UART_RS485_SET_MARK  - Configure the transmitter to send the next
1562:Generated_Source\PSoC5/UART_RS485.c ****     *                                    byte as an address.
1563:Generated_Source\PSoC5/UART_RS485.c ****     *
1564:Generated_Source\PSoC5/UART_RS485.c ****     * Return:
1565:Generated_Source\PSoC5/UART_RS485.c ****     *  None.
1566:Generated_Source\PSoC5/UART_RS485.c ****     *
1567:Generated_Source\PSoC5/UART_RS485.c ****     * Side Effects:
1568:Generated_Source\PSoC5/UART_RS485.c ****     *  This function sets and clears UART_RS485_CTRL_MARK bit in the Control
1569:Generated_Source\PSoC5/UART_RS485.c ****     *  register.
1570:Generated_Source\PSoC5/UART_RS485.c ****     *
1571:Generated_Source\PSoC5/UART_RS485.c ****     *******************************************************************************/
1572:Generated_Source\PSoC5/UART_RS485.c ****     void UART_RS485_SetTxAddressMode(uint8 addressMode) 
1573:Generated_Source\PSoC5/UART_RS485.c ****     {
 1750              		.loc 1 1573 0
 1751              		.cfi_startproc
 1752              		@ args = 0, pretend = 0, frame = 8
 1753              		@ frame_needed = 1, uses_anonymous_args = 0
 1754              		@ link register save eliminated.
 1755 0000 80B4     		push	{r7}
 1756              		.cfi_def_cfa_offset 4
 1757              		.cfi_offset 7, -4
 1758 0002 83B0     		sub	sp, sp, #12
 1759              		.cfi_def_cfa_offset 16
 1760 0004 00AF     		add	r7, sp, #0
 1761              		.cfi_def_cfa_register 7
 1762 0006 0346     		mov	r3, r0
 1763 0008 FB71     		strb	r3, [r7, #7]
1574:Generated_Source\PSoC5/UART_RS485.c ****         /* Mark/Space sending enable */
1575:Generated_Source\PSoC5/UART_RS485.c ****         if(addressMode != 0u)
1576:Generated_Source\PSoC5/UART_RS485.c ****         {
1577:Generated_Source\PSoC5/UART_RS485.c ****         #if( UART_RS485_CONTROL_REG_REMOVED == 0u )
1578:Generated_Source\PSoC5/UART_RS485.c ****             UART_RS485_WriteControlRegister(UART_RS485_ReadControlRegister() |
1579:Generated_Source\PSoC5/UART_RS485.c ****                                                   UART_RS485_CTRL_MARK);
1580:Generated_Source\PSoC5/UART_RS485.c ****         #endif /* End UART_RS485_CONTROL_REG_REMOVED == 0u */
1581:Generated_Source\PSoC5/UART_RS485.c ****         }
1582:Generated_Source\PSoC5/UART_RS485.c ****         else
1583:Generated_Source\PSoC5/UART_RS485.c ****         {
1584:Generated_Source\PSoC5/UART_RS485.c ****         #if( UART_RS485_CONTROL_REG_REMOVED == 0u )
1585:Generated_Source\PSoC5/UART_RS485.c ****             UART_RS485_WriteControlRegister(UART_RS485_ReadControlRegister() &
1586:Generated_Source\PSoC5/UART_RS485.c ****                                                   (uint8) ~UART_RS485_CTRL_MARK);
1587:Generated_Source\PSoC5/UART_RS485.c ****         #endif /* End UART_RS485_CONTROL_REG_REMOVED == 0u */
1588:Generated_Source\PSoC5/UART_RS485.c ****         }
1589:Generated_Source\PSoC5/UART_RS485.c ****     }
 1764              		.loc 1 1589 0
 1765 000a 00BF     		nop
 1766 000c 0C37     		adds	r7, r7, #12
 1767              		.cfi_def_cfa_offset 4
 1768 000e BD46     		mov	sp, r7
 1769              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4OTE74.s 			page 60


 1770              		@ sp needed
 1771 0010 80BC     		pop	{r7}
 1772              		.cfi_restore 7
 1773              		.cfi_def_cfa_offset 0
 1774 0012 7047     		bx	lr
 1775              		.cfi_endproc
 1776              	.LFE26:
 1777              		.size	UART_RS485_SetTxAddressMode, .-UART_RS485_SetTxAddressMode
 1778              		.bss
 1779              	txPeriod.5118:
 1780 0006 00       		.space	1
 1781              		.text
 1782              	.Letext0:
 1783              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 1784              		.section	.debug_info,"",%progbits
 1785              	.Ldebug_info0:
 1786 0000 EE050000 		.4byte	0x5ee
 1787 0004 0400     		.2byte	0x4
 1788 0006 00000000 		.4byte	.Ldebug_abbrev0
 1789 000a 04       		.byte	0x4
 1790 000b 01       		.uleb128 0x1
 1791 000c 35000000 		.4byte	.LASF73
 1792 0010 0C       		.byte	0xc
 1793 0011 0F050000 		.4byte	.LASF74
 1794 0015 47050000 		.4byte	.LASF75
 1795 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1796 001d 00000000 		.4byte	0
 1797 0021 00000000 		.4byte	.Ldebug_line0
 1798 0025 02       		.uleb128 0x2
 1799 0026 01       		.byte	0x1
 1800 0027 06       		.byte	0x6
 1801 0028 47010000 		.4byte	.LASF0
 1802 002c 02       		.uleb128 0x2
 1803 002d 01       		.byte	0x1
 1804 002e 08       		.byte	0x8
 1805 002f 04040000 		.4byte	.LASF1
 1806 0033 02       		.uleb128 0x2
 1807 0034 02       		.byte	0x2
 1808 0035 05       		.byte	0x5
 1809 0036 12040000 		.4byte	.LASF2
 1810 003a 02       		.uleb128 0x2
 1811 003b 02       		.byte	0x2
 1812 003c 07       		.byte	0x7
 1813 003d A7020000 		.4byte	.LASF3
 1814 0041 02       		.uleb128 0x2
 1815 0042 04       		.byte	0x4
 1816 0043 05       		.byte	0x5
 1817 0044 6F010000 		.4byte	.LASF4
 1818 0048 02       		.uleb128 0x2
 1819 0049 04       		.byte	0x4
 1820 004a 07       		.byte	0x7
 1821 004b 4C020000 		.4byte	.LASF5
 1822 004f 02       		.uleb128 0x2
 1823 0050 08       		.byte	0x8
 1824 0051 05       		.byte	0x5
 1825 0052 39010000 		.4byte	.LASF6
 1826 0056 02       		.uleb128 0x2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4OTE74.s 			page 61


 1827 0057 08       		.byte	0x8
 1828 0058 07       		.byte	0x7
 1829 0059 D5000000 		.4byte	.LASF7
 1830 005d 03       		.uleb128 0x3
 1831 005e 04       		.byte	0x4
 1832 005f 05       		.byte	0x5
 1833 0060 696E7400 		.ascii	"int\000"
 1834 0064 02       		.uleb128 0x2
 1835 0065 04       		.byte	0x4
 1836 0066 07       		.byte	0x7
 1837 0067 19020000 		.4byte	.LASF8
 1838 006b 04       		.uleb128 0x4
 1839 006c 8B010000 		.4byte	.LASF9
 1840 0070 02       		.byte	0x2
 1841 0071 E401     		.2byte	0x1e4
 1842 0073 2C000000 		.4byte	0x2c
 1843 0077 04       		.uleb128 0x4
 1844 0078 00000000 		.4byte	.LASF10
 1845 007c 02       		.byte	0x2
 1846 007d E501     		.2byte	0x1e5
 1847 007f 3A000000 		.4byte	0x3a
 1848 0083 04       		.uleb128 0x4
 1849 0084 B9010000 		.4byte	.LASF11
 1850 0088 02       		.byte	0x2
 1851 0089 E601     		.2byte	0x1e6
 1852 008b 48000000 		.4byte	0x48
 1853 008f 02       		.uleb128 0x2
 1854 0090 04       		.byte	0x4
 1855 0091 04       		.byte	0x4
 1856 0092 E1030000 		.4byte	.LASF12
 1857 0096 02       		.uleb128 0x2
 1858 0097 08       		.byte	0x8
 1859 0098 04       		.byte	0x4
 1860 0099 91010000 		.4byte	.LASF13
 1861 009d 04       		.uleb128 0x4
 1862 009e A6040000 		.4byte	.LASF14
 1863 00a2 02       		.byte	0x2
 1864 00a3 F501     		.2byte	0x1f5
 1865 00a5 A9000000 		.4byte	0xa9
 1866 00a9 02       		.uleb128 0x2
 1867 00aa 01       		.byte	0x1
 1868 00ab 08       		.byte	0x8
 1869 00ac 91040000 		.4byte	.LASF15
 1870 00b0 04       		.uleb128 0x4
 1871 00b1 FF030000 		.4byte	.LASF16
 1872 00b5 02       		.byte	0x2
 1873 00b6 8E02     		.2byte	0x28e
 1874 00b8 BC000000 		.4byte	0xbc
 1875 00bc 05       		.uleb128 0x5
 1876 00bd 6B000000 		.4byte	0x6b
 1877 00c1 04       		.uleb128 0x4
 1878 00c2 15030000 		.4byte	.LASF17
 1879 00c6 02       		.byte	0x2
 1880 00c7 9002     		.2byte	0x290
 1881 00c9 CD000000 		.4byte	0xcd
 1882 00cd 05       		.uleb128 0x5
 1883 00ce 83000000 		.4byte	0x83
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4OTE74.s 			page 62


 1884 00d2 02       		.uleb128 0x2
 1885 00d3 08       		.byte	0x8
 1886 00d4 04       		.byte	0x4
 1887 00d5 5D030000 		.4byte	.LASF18
 1888 00d9 02       		.uleb128 0x2
 1889 00da 04       		.byte	0x4
 1890 00db 07       		.byte	0x7
 1891 00dc 38030000 		.4byte	.LASF19
 1892 00e0 06       		.uleb128 0x6
 1893 00e1 D0030000 		.4byte	.LASF20
 1894 00e5 01       		.byte	0x1
 1895 00e6 4C       		.byte	0x4c
 1896 00e7 00000000 		.4byte	.LFB0
 1897 00eb 24000000 		.4byte	.LFE0-.LFB0
 1898 00ef 01       		.uleb128 0x1
 1899 00f0 9C       		.byte	0x9c
 1900 00f1 06       		.uleb128 0x6
 1901 00f2 96040000 		.4byte	.LASF21
 1902 00f6 01       		.byte	0x1
 1903 00f7 6A       		.byte	0x6a
 1904 00f8 00000000 		.4byte	.LFB1
 1905 00fc 58000000 		.4byte	.LFE1-.LFB1
 1906 0100 01       		.uleb128 0x1
 1907 0101 9C       		.byte	0x9c
 1908 0102 07       		.uleb128 0x7
 1909 0103 C3000000 		.4byte	.LASF22
 1910 0107 01       		.byte	0x1
 1911 0108 B7       		.byte	0xb7
 1912 0109 00000000 		.4byte	.LFB2
 1913 010d 64000000 		.4byte	.LFE2-.LFB2
 1914 0111 01       		.uleb128 0x1
 1915 0112 9C       		.byte	0x9c
 1916 0113 26010000 		.4byte	0x126
 1917 0117 08       		.uleb128 0x8
 1918 0118 F7040000 		.4byte	.LASF24
 1919 011c 01       		.byte	0x1
 1920 011d B9       		.byte	0xb9
 1921 011e 6B000000 		.4byte	0x6b
 1922 0122 02       		.uleb128 0x2
 1923 0123 91       		.byte	0x91
 1924 0124 77       		.sleb128 -9
 1925 0125 00       		.byte	0
 1926 0126 07       		.uleb128 0x7
 1927 0127 92020000 		.4byte	.LASF23
 1928 012b 01       		.byte	0x1
 1929 012c F0       		.byte	0xf0
 1930 012d 00000000 		.4byte	.LFB3
 1931 0131 64000000 		.4byte	.LFE3-.LFB3
 1932 0135 01       		.uleb128 0x1
 1933 0136 9C       		.byte	0x9c
 1934 0137 4A010000 		.4byte	0x14a
 1935 013b 08       		.uleb128 0x8
 1936 013c F7040000 		.4byte	.LASF24
 1937 0140 01       		.byte	0x1
 1938 0141 F2       		.byte	0xf2
 1939 0142 6B000000 		.4byte	0x6b
 1940 0146 02       		.uleb128 0x2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4OTE74.s 			page 63


 1941 0147 91       		.byte	0x91
 1942 0148 77       		.sleb128 -9
 1943 0149 00       		.byte	0
 1944 014a 09       		.uleb128 0x9
 1945 014b C8040000 		.4byte	.LASF50
 1946 014f 01       		.byte	0x1
 1947 0150 2701     		.2byte	0x127
 1948 0152 6B000000 		.4byte	0x6b
 1949 0156 00000000 		.4byte	.LFB4
 1950 015a 0E000000 		.4byte	.LFE4-.LFB4
 1951 015e 01       		.uleb128 0x1
 1952 015f 9C       		.byte	0x9c
 1953 0160 0A       		.uleb128 0xa
 1954 0161 6A040000 		.4byte	.LASF25
 1955 0165 01       		.byte	0x1
 1956 0166 3F01     		.2byte	0x13f
 1957 0168 00000000 		.4byte	.LFB5
 1958 016c 14000000 		.4byte	.LFE5-.LFB5
 1959 0170 01       		.uleb128 0x1
 1960 0171 9C       		.byte	0x9c
 1961 0172 86010000 		.4byte	0x186
 1962 0176 0B       		.uleb128 0xb
 1963 0177 C0010000 		.4byte	.LASF27
 1964 017b 01       		.byte	0x1
 1965 017c 3F01     		.2byte	0x13f
 1966 017e 6B000000 		.4byte	0x6b
 1967 0182 02       		.uleb128 0x2
 1968 0183 91       		.byte	0x91
 1969 0184 77       		.sleb128 -9
 1970 0185 00       		.byte	0
 1971 0186 0A       		.uleb128 0xa
 1972 0187 1B010000 		.4byte	.LASF26
 1973 018b 01       		.byte	0x1
 1974 018c 6701     		.2byte	0x167
 1975 018e 00000000 		.4byte	.LFB6
 1976 0192 20000000 		.4byte	.LFE6-.LFB6
 1977 0196 01       		.uleb128 0x1
 1978 0197 9C       		.byte	0x9c
 1979 0198 AC010000 		.4byte	0x1ac
 1980 019c 0B       		.uleb128 0xb
 1981 019d 0E030000 		.4byte	.LASF28
 1982 01a1 01       		.byte	0x1
 1983 01a2 6701     		.2byte	0x167
 1984 01a4 6B000000 		.4byte	0x6b
 1985 01a8 02       		.uleb128 0x2
 1986 01a9 91       		.byte	0x91
 1987 01aa 77       		.sleb128 -9
 1988 01ab 00       		.byte	0
 1989 01ac 0C       		.uleb128 0xc
 1990 01ad DA020000 		.4byte	.LASF32
 1991 01b1 01       		.byte	0x1
 1992 01b2 8801     		.2byte	0x188
 1993 01b4 6B000000 		.4byte	0x6b
 1994 01b8 00000000 		.4byte	.LFB7
 1995 01bc 90000000 		.4byte	.LFE7-.LFB7
 1996 01c0 01       		.uleb128 0x1
 1997 01c1 9C       		.byte	0x9c
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4OTE74.s 			page 64


 1998 01c2 F4010000 		.4byte	0x1f4
 1999 01c6 0D       		.uleb128 0xd
 2000 01c7 8A040000 		.4byte	.LASF29
 2001 01cb 01       		.byte	0x1
 2002 01cc 8A01     		.2byte	0x18a
 2003 01ce 6B000000 		.4byte	0x6b
 2004 01d2 02       		.uleb128 0x2
 2005 01d3 91       		.byte	0x91
 2006 01d4 77       		.sleb128 -9
 2007 01d5 0D       		.uleb128 0xd
 2008 01d6 E7040000 		.4byte	.LASF30
 2009 01da 01       		.byte	0x1
 2010 01db 8E01     		.2byte	0x18e
 2011 01dd 6B000000 		.4byte	0x6b
 2012 01e1 02       		.uleb128 0x2
 2013 01e2 91       		.byte	0x91
 2014 01e3 76       		.sleb128 -10
 2015 01e4 0D       		.uleb128 0xd
 2016 01e5 B6030000 		.4byte	.LASF31
 2017 01e9 01       		.byte	0x1
 2018 01ea 8F01     		.2byte	0x18f
 2019 01ec 6B000000 		.4byte	0x6b
 2020 01f0 02       		.uleb128 0x2
 2021 01f1 91       		.byte	0x91
 2022 01f2 75       		.sleb128 -11
 2023 01f3 00       		.byte	0
 2024 01f4 0C       		.uleb128 0xc
 2025 01f5 E7030000 		.4byte	.LASF33
 2026 01f9 01       		.byte	0x1
 2027 01fa E501     		.2byte	0x1e5
 2028 01fc 6B000000 		.4byte	0x6b
 2029 0200 00000000 		.4byte	.LFB8
 2030 0204 40000000 		.4byte	.LFE8-.LFB8
 2031 0208 01       		.uleb128 0x1
 2032 0209 9C       		.byte	0x9c
 2033 020a 1E020000 		.4byte	0x21e
 2034 020e 0D       		.uleb128 0xd
 2035 020f 08050000 		.4byte	.LASF34
 2036 0213 01       		.byte	0x1
 2037 0214 E701     		.2byte	0x1e7
 2038 0216 6B000000 		.4byte	0x6b
 2039 021a 02       		.uleb128 0x2
 2040 021b 91       		.byte	0x91
 2041 021c 77       		.sleb128 -9
 2042 021d 00       		.byte	0
 2043 021e 0C       		.uleb128 0xc
 2044 021f 5C010000 		.4byte	.LASF35
 2045 0223 01       		.byte	0x1
 2046 0224 1402     		.2byte	0x214
 2047 0226 6B000000 		.4byte	0x6b
 2048 022a 00000000 		.4byte	.LFB9
 2049 022e B4000000 		.4byte	.LFE9-.LFB9
 2050 0232 01       		.uleb128 0x1
 2051 0233 9C       		.byte	0x9c
 2052 0234 75020000 		.4byte	0x275
 2053 0238 0D       		.uleb128 0xd
 2054 0239 8A040000 		.4byte	.LASF29
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4OTE74.s 			page 65


 2055 023d 01       		.byte	0x1
 2056 023e 1602     		.2byte	0x216
 2057 0240 6B000000 		.4byte	0x6b
 2058 0244 02       		.uleb128 0x2
 2059 0245 91       		.byte	0x91
 2060 0246 77       		.sleb128 -9
 2061 0247 0D       		.uleb128 0xd
 2062 0248 C7030000 		.4byte	.LASF36
 2063 024c 01       		.byte	0x1
 2064 024d 1702     		.2byte	0x217
 2065 024f 6B000000 		.4byte	0x6b
 2066 0253 02       		.uleb128 0x2
 2067 0254 91       		.byte	0x91
 2068 0255 74       		.sleb128 -12
 2069 0256 0D       		.uleb128 0xd
 2070 0257 E7040000 		.4byte	.LASF30
 2071 025b 01       		.byte	0x1
 2072 025c 1A02     		.2byte	0x21a
 2073 025e 6B000000 		.4byte	0x6b
 2074 0262 02       		.uleb128 0x2
 2075 0263 91       		.byte	0x91
 2076 0264 76       		.sleb128 -10
 2077 0265 0D       		.uleb128 0xd
 2078 0266 B6030000 		.4byte	.LASF31
 2079 026a 01       		.byte	0x1
 2080 026b 1B02     		.2byte	0x21b
 2081 026d 6B000000 		.4byte	0x6b
 2082 0271 02       		.uleb128 0x2
 2083 0272 91       		.byte	0x91
 2084 0273 75       		.sleb128 -11
 2085 0274 00       		.byte	0
 2086 0275 0E       		.uleb128 0xe
 2087 0276 1C040000 		.4byte	.LASF37
 2088 027a 01       		.byte	0x1
 2089 027b 7A02     		.2byte	0x27a
 2090 027d 77000000 		.4byte	0x77
 2091 0281 00000000 		.4byte	.LFB10
 2092 0285 44000000 		.4byte	.LFE10-.LFB10
 2093 0289 01       		.uleb128 0x1
 2094 028a 9C       		.byte	0x9c
 2095 028b 9F020000 		.4byte	0x29f
 2096 028f 0D       		.uleb128 0xd
 2097 0290 3D020000 		.4byte	.LASF38
 2098 0294 01       		.byte	0x1
 2099 0295 7E02     		.2byte	0x27e
 2100 0297 77000000 		.4byte	0x77
 2101 029b 02       		.uleb128 0x2
 2102 029c 91       		.byte	0x91
 2103 029d 6E       		.sleb128 -18
 2104 029e 00       		.byte	0
 2105 029f 0C       		.uleb128 0xc
 2106 02a0 77020000 		.4byte	.LASF39
 2107 02a4 01       		.byte	0x1
 2108 02a5 AB02     		.2byte	0x2ab
 2109 02a7 6B000000 		.4byte	0x6b
 2110 02ab 00000000 		.4byte	.LFB11
 2111 02af 90000000 		.4byte	.LFE11-.LFB11
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4OTE74.s 			page 66


 2112 02b3 01       		.uleb128 0x1
 2113 02b4 9C       		.byte	0x9c
 2114 02b5 C9020000 		.4byte	0x2c9
 2115 02b9 0D       		.uleb128 0xd
 2116 02ba A2020000 		.4byte	.LASF40
 2117 02be 01       		.byte	0x1
 2118 02bf AE02     		.2byte	0x2ae
 2119 02c1 6B000000 		.4byte	0x6b
 2120 02c5 02       		.uleb128 0x2
 2121 02c6 91       		.byte	0x91
 2122 02c7 77       		.sleb128 -9
 2123 02c8 00       		.byte	0
 2124 02c9 0F       		.uleb128 0xf
 2125 02ca 81050000 		.4byte	.LASF41
 2126 02ce 01       		.byte	0x1
 2127 02cf F502     		.2byte	0x2f5
 2128 02d1 00000000 		.4byte	.LFB12
 2129 02d5 80000000 		.4byte	.LFE12-.LFB12
 2130 02d9 01       		.uleb128 0x1
 2131 02da 9C       		.byte	0x9c
 2132 02db EF020000 		.4byte	0x2ef
 2133 02df 0D       		.uleb128 0xd
 2134 02e0 F7040000 		.4byte	.LASF24
 2135 02e4 01       		.byte	0x1
 2136 02e5 F702     		.2byte	0x2f7
 2137 02e7 6B000000 		.4byte	0x6b
 2138 02eb 02       		.uleb128 0x2
 2139 02ec 91       		.byte	0x91
 2140 02ed 77       		.sleb128 -9
 2141 02ee 00       		.byte	0
 2142 02ef 0A       		.uleb128 0xa
 2143 02f0 07000000 		.4byte	.LASF42
 2144 02f4 01       		.byte	0x1
 2145 02f5 2D03     		.2byte	0x32d
 2146 02f7 00000000 		.4byte	.LFB13
 2147 02fb 14000000 		.4byte	.LFE13-.LFB13
 2148 02ff 01       		.uleb128 0x1
 2149 0300 9C       		.byte	0x9c
 2150 0301 15030000 		.4byte	0x315
 2151 0305 0B       		.uleb128 0xb
 2152 0306 98010000 		.4byte	.LASF43
 2153 030a 01       		.byte	0x1
 2154 030b 2D03     		.2byte	0x32d
 2155 030d 6B000000 		.4byte	0x6b
 2156 0311 02       		.uleb128 0x2
 2157 0312 91       		.byte	0x91
 2158 0313 77       		.sleb128 -9
 2159 0314 00       		.byte	0
 2160 0315 0A       		.uleb128 0xa
 2161 0316 71030000 		.4byte	.LASF44
 2162 031a 01       		.byte	0x1
 2163 031b 5903     		.2byte	0x359
 2164 031d 00000000 		.4byte	.LFB14
 2165 0321 20000000 		.4byte	.LFE14-.LFB14
 2166 0325 01       		.uleb128 0x1
 2167 0326 9C       		.byte	0x9c
 2168 0327 3B030000 		.4byte	0x33b
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4OTE74.s 			page 67


 2169 032b 0B       		.uleb128 0xb
 2170 032c 69030000 		.4byte	.LASF45
 2171 0330 01       		.byte	0x1
 2172 0331 5903     		.2byte	0x359
 2173 0333 6B000000 		.4byte	0x6b
 2174 0337 02       		.uleb128 0x2
 2175 0338 91       		.byte	0x91
 2176 0339 77       		.sleb128 -9
 2177 033a 00       		.byte	0
 2178 033b 0A       		.uleb128 0xa
 2179 033c 8A030000 		.4byte	.LASF46
 2180 0340 01       		.byte	0x1
 2181 0341 6D03     		.2byte	0x36d
 2182 0343 00000000 		.4byte	.LFB15
 2183 0347 20000000 		.4byte	.LFE15-.LFB15
 2184 034b 01       		.uleb128 0x1
 2185 034c 9C       		.byte	0x9c
 2186 034d 61030000 		.4byte	0x361
 2187 0351 0B       		.uleb128 0xb
 2188 0352 69030000 		.4byte	.LASF45
 2189 0356 01       		.byte	0x1
 2190 0357 6D03     		.2byte	0x36d
 2191 0359 6B000000 		.4byte	0x6b
 2192 035d 02       		.uleb128 0x2
 2193 035e 91       		.byte	0x91
 2194 035f 77       		.sleb128 -9
 2195 0360 00       		.byte	0
 2196 0361 0A       		.uleb128 0xa
 2197 0362 F0020000 		.4byte	.LASF47
 2198 0366 01       		.byte	0x1
 2199 0367 8C03     		.2byte	0x38c
 2200 0369 00000000 		.4byte	.LFB16
 2201 036d 20000000 		.4byte	.LFE16-.LFB16
 2202 0371 01       		.uleb128 0x1
 2203 0372 9C       		.byte	0x9c
 2204 0373 87030000 		.4byte	0x387
 2205 0377 0B       		.uleb128 0xb
 2206 0378 0E030000 		.4byte	.LASF28
 2207 037c 01       		.byte	0x1
 2208 037d 8C03     		.2byte	0x38c
 2209 037f 6B000000 		.4byte	0x6b
 2210 0383 02       		.uleb128 0x2
 2211 0384 91       		.byte	0x91
 2212 0385 77       		.sleb128 -9
 2213 0386 00       		.byte	0
 2214 0387 0A       		.uleb128 0xa
 2215 0388 BA020000 		.4byte	.LASF48
 2216 038c 01       		.byte	0x1
 2217 038d AE03     		.2byte	0x3ae
 2218 038f 00000000 		.4byte	.LFB17
 2219 0393 2C000000 		.4byte	.LFE17-.LFB17
 2220 0397 01       		.uleb128 0x1
 2221 0398 9C       		.byte	0x9c
 2222 0399 AD030000 		.4byte	0x3ad
 2223 039d 0B       		.uleb128 0xb
 2224 039e 23000000 		.4byte	.LASF49
 2225 03a2 01       		.byte	0x1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4OTE74.s 			page 68


 2226 03a3 AE03     		.2byte	0x3ae
 2227 03a5 6B000000 		.4byte	0x6b
 2228 03a9 02       		.uleb128 0x2
 2229 03aa 91       		.byte	0x91
 2230 03ab 77       		.sleb128 -9
 2231 03ac 00       		.byte	0
 2232 03ad 09       		.uleb128 0x9
 2233 03ae F9010000 		.4byte	.LASF51
 2234 03b2 01       		.byte	0x1
 2235 03b3 EB03     		.2byte	0x3eb
 2236 03b5 6B000000 		.4byte	0x6b
 2237 03b9 00000000 		.4byte	.LFB18
 2238 03bd 18000000 		.4byte	.LFE18-.LFB18
 2239 03c1 01       		.uleb128 0x1
 2240 03c2 9C       		.byte	0x9c
 2241 03c3 0A       		.uleb128 0xa
 2242 03c4 A3030000 		.4byte	.LASF52
 2243 03c8 01       		.byte	0x1
 2244 03c9 1104     		.2byte	0x411
 2245 03cb 00000000 		.4byte	.LFB19
 2246 03cf 34000000 		.4byte	.LFE19-.LFB19
 2247 03d3 01       		.uleb128 0x1
 2248 03d4 9C       		.byte	0x9c
 2249 03d5 E9030000 		.4byte	0x3e9
 2250 03d9 0B       		.uleb128 0xb
 2251 03da 23000000 		.4byte	.LASF49
 2252 03de 01       		.byte	0x1
 2253 03df 1104     		.2byte	0x411
 2254 03e1 6B000000 		.4byte	0x6b
 2255 03e5 02       		.uleb128 0x2
 2256 03e6 91       		.byte	0x91
 2257 03e7 77       		.sleb128 -9
 2258 03e8 00       		.byte	0
 2259 03e9 0F       		.uleb128 0xf
 2260 03ea 23030000 		.4byte	.LASF53
 2261 03ee 01       		.byte	0x1
 2262 03ef 7904     		.2byte	0x479
 2263 03f1 00000000 		.4byte	.LFB20
 2264 03f5 44000000 		.4byte	.LFE20-.LFB20
 2265 03f9 01       		.uleb128 0x1
 2266 03fa 9C       		.byte	0x9c
 2267 03fb 1E040000 		.4byte	0x41e
 2268 03ff 0B       		.uleb128 0xb
 2269 0400 2E000000 		.4byte	.LASF54
 2270 0404 01       		.byte	0x1
 2271 0405 7904     		.2byte	0x479
 2272 0407 1E040000 		.4byte	0x41e
 2273 040b 02       		.uleb128 0x2
 2274 040c 91       		.byte	0x91
 2275 040d 6C       		.sleb128 -20
 2276 040e 0D       		.uleb128 0xd
 2277 040f D1020000 		.4byte	.LASF55
 2278 0413 01       		.byte	0x1
 2279 0414 7B04     		.2byte	0x47b
 2280 0416 77000000 		.4byte	0x77
 2281 041a 02       		.uleb128 0x2
 2282 041b 91       		.byte	0x91
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4OTE74.s 			page 69


 2283 041c 76       		.sleb128 -10
 2284 041d 00       		.byte	0
 2285 041e 10       		.uleb128 0x10
 2286 041f 04       		.byte	0x4
 2287 0420 24040000 		.4byte	0x424
 2288 0424 11       		.uleb128 0x11
 2289 0425 9D000000 		.4byte	0x9d
 2290 0429 0F       		.uleb128 0xf
 2291 042a 33050000 		.4byte	.LASF56
 2292 042e 01       		.byte	0x1
 2293 042f A704     		.2byte	0x4a7
 2294 0431 00000000 		.4byte	.LFB21
 2295 0435 44000000 		.4byte	.LFE21-.LFB21
 2296 0439 01       		.uleb128 0x1
 2297 043a 9C       		.byte	0x9c
 2298 043b 6D040000 		.4byte	0x46d
 2299 043f 0B       		.uleb128 0xb
 2300 0440 2E000000 		.4byte	.LASF54
 2301 0444 01       		.byte	0x1
 2302 0445 A704     		.2byte	0x4a7
 2303 0447 6D040000 		.4byte	0x46d
 2304 044b 02       		.uleb128 0x2
 2305 044c 91       		.byte	0x91
 2306 044d 6C       		.sleb128 -20
 2307 044e 0B       		.uleb128 0xb
 2308 044f 60040000 		.4byte	.LASF57
 2309 0453 01       		.byte	0x1
 2310 0454 A704     		.2byte	0x4a7
 2311 0456 6B000000 		.4byte	0x6b
 2312 045a 02       		.uleb128 0x2
 2313 045b 91       		.byte	0x91
 2314 045c 6B       		.sleb128 -21
 2315 045d 0D       		.uleb128 0xd
 2316 045e D1020000 		.4byte	.LASF55
 2317 0462 01       		.byte	0x1
 2318 0463 AA04     		.2byte	0x4aa
 2319 0465 6B000000 		.4byte	0x6b
 2320 0469 02       		.uleb128 0x2
 2321 046a 91       		.byte	0x91
 2322 046b 77       		.sleb128 -9
 2323 046c 00       		.byte	0
 2324 046d 10       		.uleb128 0x10
 2325 046e 04       		.byte	0x4
 2326 046f 73040000 		.4byte	0x473
 2327 0473 11       		.uleb128 0x11
 2328 0474 6B000000 		.4byte	0x6b
 2329 0478 0F       		.uleb128 0xf
 2330 0479 2F040000 		.4byte	.LASF58
 2331 047d 01       		.byte	0x1
 2332 047e CE04     		.2byte	0x4ce
 2333 0480 00000000 		.4byte	.LFB22
 2334 0484 34000000 		.4byte	.LFE22-.LFB22
 2335 0488 01       		.uleb128 0x1
 2336 0489 9C       		.byte	0x9c
 2337 048a 9E040000 		.4byte	0x49e
 2338 048e 0B       		.uleb128 0xb
 2339 048f 23000000 		.4byte	.LASF49
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4OTE74.s 			page 70


 2340 0493 01       		.byte	0x1
 2341 0494 CE04     		.2byte	0x4ce
 2342 0496 6B000000 		.4byte	0x6b
 2343 049a 02       		.uleb128 0x2
 2344 049b 91       		.byte	0x91
 2345 049c 77       		.sleb128 -9
 2346 049d 00       		.byte	0
 2347 049e 0C       		.uleb128 0xc
 2348 049f EC000000 		.4byte	.LASF59
 2349 04a3 01       		.byte	0x1
 2350 04a4 F904     		.2byte	0x4f9
 2351 04a6 6B000000 		.4byte	0x6b
 2352 04aa 00000000 		.4byte	.LFB23
 2353 04ae 40000000 		.4byte	.LFE23-.LFB23
 2354 04b2 01       		.uleb128 0x1
 2355 04b3 9C       		.byte	0x9c
 2356 04b4 C8040000 		.4byte	0x4c8
 2357 04b8 0D       		.uleb128 0xd
 2358 04b9 A2020000 		.4byte	.LASF40
 2359 04bd 01       		.byte	0x1
 2360 04be FC04     		.2byte	0x4fc
 2361 04c0 6B000000 		.4byte	0x6b
 2362 04c4 02       		.uleb128 0x2
 2363 04c5 91       		.byte	0x91
 2364 04c6 77       		.sleb128 -9
 2365 04c7 00       		.byte	0
 2366 04c8 0F       		.uleb128 0xf
 2367 04c9 5E020000 		.4byte	.LASF60
 2368 04cd 01       		.byte	0x1
 2369 04ce 4A05     		.2byte	0x54a
 2370 04d0 00000000 		.4byte	.LFB24
 2371 04d4 44000000 		.4byte	.LFE24-.LFB24
 2372 04d8 01       		.uleb128 0x1
 2373 04d9 9C       		.byte	0x9c
 2374 04da EE040000 		.4byte	0x4ee
 2375 04de 0D       		.uleb128 0xd
 2376 04df F7040000 		.4byte	.LASF24
 2377 04e3 01       		.byte	0x1
 2378 04e4 4C05     		.2byte	0x54c
 2379 04e6 6B000000 		.4byte	0x6b
 2380 04ea 02       		.uleb128 0x2
 2381 04eb 91       		.byte	0x91
 2382 04ec 77       		.sleb128 -9
 2383 04ed 00       		.byte	0
 2384 04ee 0A       		.uleb128 0xa
 2385 04ef A4010000 		.4byte	.LASF61
 2386 04f3 01       		.byte	0x1
 2387 04f4 A005     		.2byte	0x5a0
 2388 04f6 00000000 		.4byte	.LFB25
 2389 04fa 9C000000 		.4byte	.LFE25-.LFB25
 2390 04fe 01       		.uleb128 0x1
 2391 04ff 9C       		.byte	0x9c
 2392 0500 3F050000 		.4byte	0x53f
 2393 0504 0B       		.uleb128 0xb
 2394 0505 11020000 		.4byte	.LASF62
 2395 0509 01       		.byte	0x1
 2396 050a A005     		.2byte	0x5a0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4OTE74.s 			page 71


 2397 050c 6B000000 		.4byte	0x6b
 2398 0510 02       		.uleb128 0x2
 2399 0511 91       		.byte	0x91
 2400 0512 6F       		.sleb128 -17
 2401 0513 12       		.uleb128 0x12
 2402 0514 12000000 		.4byte	.LBB2
 2403 0518 6C000000 		.4byte	.LBE2-.LBB2
 2404 051c 0D       		.uleb128 0xd
 2405 051d 1B030000 		.4byte	.LASF63
 2406 0521 01       		.byte	0x1
 2407 0522 A805     		.2byte	0x5a8
 2408 0524 6B000000 		.4byte	0x6b
 2409 0528 02       		.uleb128 0x2
 2410 0529 91       		.byte	0x91
 2411 052a 77       		.sleb128 -9
 2412 052b 0D       		.uleb128 0xd
 2413 052c 53010000 		.4byte	.LASF64
 2414 0530 01       		.byte	0x1
 2415 0531 D005     		.2byte	0x5d0
 2416 0533 6B000000 		.4byte	0x6b
 2417 0537 05       		.uleb128 0x5
 2418 0538 03       		.byte	0x3
 2419 0539 06000000 		.4byte	txPeriod.5118
 2420 053d 00       		.byte	0
 2421 053e 00       		.byte	0
 2422 053f 0A       		.uleb128 0xa
 2423 0540 AC040000 		.4byte	.LASF65
 2424 0544 01       		.byte	0x1
 2425 0545 2406     		.2byte	0x624
 2426 0547 00000000 		.4byte	.LFB26
 2427 054b 14000000 		.4byte	.LFE26-.LFB26
 2428 054f 01       		.uleb128 0x1
 2429 0550 9C       		.byte	0x9c
 2430 0551 65050000 		.4byte	0x565
 2431 0555 0B       		.uleb128 0xb
 2432 0556 98010000 		.4byte	.LASF43
 2433 055a 01       		.byte	0x1
 2434 055b 2406     		.2byte	0x624
 2435 055d 6B000000 		.4byte	0x6b
 2436 0561 02       		.uleb128 0x2
 2437 0562 91       		.byte	0x91
 2438 0563 77       		.sleb128 -9
 2439 0564 00       		.byte	0
 2440 0565 13       		.uleb128 0x13
 2441 0566 78010000 		.4byte	.LASF66
 2442 056a 01       		.byte	0x1
 2443 056b 1B       		.byte	0x1b
 2444 056c 6B000000 		.4byte	0x6b
 2445 0570 05       		.uleb128 0x5
 2446 0571 03       		.byte	0x3
 2447 0572 00000000 		.4byte	UART_RS485_initVar
 2448 0576 13       		.uleb128 0x13
 2449 0577 26020000 		.4byte	.LASF67
 2450 057b 01       		.byte	0x1
 2451 057c 24       		.byte	0x24
 2452 057d 6B000000 		.4byte	0x6b
 2453 0581 05       		.uleb128 0x5
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4OTE74.s 			page 72


 2454 0582 03       		.byte	0x3
 2455 0583 00000000 		.4byte	UART_RS485_errorStatus
 2456 0587 14       		.uleb128 0x14
 2457 0588 BC000000 		.4byte	0xbc
 2458 058c 97050000 		.4byte	0x597
 2459 0590 15       		.uleb128 0x15
 2460 0591 D9000000 		.4byte	0xd9
 2461 0595 1F       		.byte	0x1f
 2462 0596 00       		.byte	0
 2463 0597 13       		.uleb128 0x13
 2464 0598 07010000 		.4byte	.LASF68
 2465 059c 01       		.byte	0x1
 2466 059d 25       		.byte	0x25
 2467 059e A8050000 		.4byte	0x5a8
 2468 05a2 05       		.uleb128 0x5
 2469 05a3 03       		.byte	0x3
 2470 05a4 00000000 		.4byte	UART_RS485_rxBuffer
 2471 05a8 05       		.uleb128 0x5
 2472 05a9 87050000 		.4byte	0x587
 2473 05ad 13       		.uleb128 0x13
 2474 05ae E1010000 		.4byte	.LASF69
 2475 05b2 01       		.byte	0x1
 2476 05b3 26       		.byte	0x26
 2477 05b4 BC000000 		.4byte	0xbc
 2478 05b8 05       		.uleb128 0x5
 2479 05b9 03       		.byte	0x3
 2480 05ba 00000000 		.4byte	UART_RS485_rxBufferRead
 2481 05be 13       		.uleb128 0x13
 2482 05bf C8010000 		.4byte	.LASF70
 2483 05c3 01       		.byte	0x1
 2484 05c4 27       		.byte	0x27
 2485 05c5 BC000000 		.4byte	0xbc
 2486 05c9 05       		.uleb128 0x5
 2487 05ca 03       		.byte	0x3
 2488 05cb 00000000 		.4byte	UART_RS485_rxBufferWrite
 2489 05cf 13       		.uleb128 0x13
 2490 05d0 42040000 		.4byte	.LASF71
 2491 05d4 01       		.byte	0x1
 2492 05d5 28       		.byte	0x28
 2493 05d6 BC000000 		.4byte	0xbc
 2494 05da 05       		.uleb128 0x5
 2495 05db 03       		.byte	0x3
 2496 05dc 00000000 		.4byte	UART_RS485_rxBufferLoopDetect
 2497 05e0 13       		.uleb128 0x13
 2498 05e1 41030000 		.4byte	.LASF72
 2499 05e5 01       		.byte	0x1
 2500 05e6 29       		.byte	0x29
 2501 05e7 BC000000 		.4byte	0xbc
 2502 05eb 05       		.uleb128 0x5
 2503 05ec 03       		.byte	0x3
 2504 05ed 00000000 		.4byte	UART_RS485_rxBufferOverflow
 2505 05f1 00       		.byte	0
 2506              		.section	.debug_abbrev,"",%progbits
 2507              	.Ldebug_abbrev0:
 2508 0000 01       		.uleb128 0x1
 2509 0001 11       		.uleb128 0x11
 2510 0002 01       		.byte	0x1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4OTE74.s 			page 73


 2511 0003 25       		.uleb128 0x25
 2512 0004 0E       		.uleb128 0xe
 2513 0005 13       		.uleb128 0x13
 2514 0006 0B       		.uleb128 0xb
 2515 0007 03       		.uleb128 0x3
 2516 0008 0E       		.uleb128 0xe
 2517 0009 1B       		.uleb128 0x1b
 2518 000a 0E       		.uleb128 0xe
 2519 000b 55       		.uleb128 0x55
 2520 000c 17       		.uleb128 0x17
 2521 000d 11       		.uleb128 0x11
 2522 000e 01       		.uleb128 0x1
 2523 000f 10       		.uleb128 0x10
 2524 0010 17       		.uleb128 0x17
 2525 0011 00       		.byte	0
 2526 0012 00       		.byte	0
 2527 0013 02       		.uleb128 0x2
 2528 0014 24       		.uleb128 0x24
 2529 0015 00       		.byte	0
 2530 0016 0B       		.uleb128 0xb
 2531 0017 0B       		.uleb128 0xb
 2532 0018 3E       		.uleb128 0x3e
 2533 0019 0B       		.uleb128 0xb
 2534 001a 03       		.uleb128 0x3
 2535 001b 0E       		.uleb128 0xe
 2536 001c 00       		.byte	0
 2537 001d 00       		.byte	0
 2538 001e 03       		.uleb128 0x3
 2539 001f 24       		.uleb128 0x24
 2540 0020 00       		.byte	0
 2541 0021 0B       		.uleb128 0xb
 2542 0022 0B       		.uleb128 0xb
 2543 0023 3E       		.uleb128 0x3e
 2544 0024 0B       		.uleb128 0xb
 2545 0025 03       		.uleb128 0x3
 2546 0026 08       		.uleb128 0x8
 2547 0027 00       		.byte	0
 2548 0028 00       		.byte	0
 2549 0029 04       		.uleb128 0x4
 2550 002a 16       		.uleb128 0x16
 2551 002b 00       		.byte	0
 2552 002c 03       		.uleb128 0x3
 2553 002d 0E       		.uleb128 0xe
 2554 002e 3A       		.uleb128 0x3a
 2555 002f 0B       		.uleb128 0xb
 2556 0030 3B       		.uleb128 0x3b
 2557 0031 05       		.uleb128 0x5
 2558 0032 49       		.uleb128 0x49
 2559 0033 13       		.uleb128 0x13
 2560 0034 00       		.byte	0
 2561 0035 00       		.byte	0
 2562 0036 05       		.uleb128 0x5
 2563 0037 35       		.uleb128 0x35
 2564 0038 00       		.byte	0
 2565 0039 49       		.uleb128 0x49
 2566 003a 13       		.uleb128 0x13
 2567 003b 00       		.byte	0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4OTE74.s 			page 74


 2568 003c 00       		.byte	0
 2569 003d 06       		.uleb128 0x6
 2570 003e 2E       		.uleb128 0x2e
 2571 003f 00       		.byte	0
 2572 0040 3F       		.uleb128 0x3f
 2573 0041 19       		.uleb128 0x19
 2574 0042 03       		.uleb128 0x3
 2575 0043 0E       		.uleb128 0xe
 2576 0044 3A       		.uleb128 0x3a
 2577 0045 0B       		.uleb128 0xb
 2578 0046 3B       		.uleb128 0x3b
 2579 0047 0B       		.uleb128 0xb
 2580 0048 27       		.uleb128 0x27
 2581 0049 19       		.uleb128 0x19
 2582 004a 11       		.uleb128 0x11
 2583 004b 01       		.uleb128 0x1
 2584 004c 12       		.uleb128 0x12
 2585 004d 06       		.uleb128 0x6
 2586 004e 40       		.uleb128 0x40
 2587 004f 18       		.uleb128 0x18
 2588 0050 9642     		.uleb128 0x2116
 2589 0052 19       		.uleb128 0x19
 2590 0053 00       		.byte	0
 2591 0054 00       		.byte	0
 2592 0055 07       		.uleb128 0x7
 2593 0056 2E       		.uleb128 0x2e
 2594 0057 01       		.byte	0x1
 2595 0058 3F       		.uleb128 0x3f
 2596 0059 19       		.uleb128 0x19
 2597 005a 03       		.uleb128 0x3
 2598 005b 0E       		.uleb128 0xe
 2599 005c 3A       		.uleb128 0x3a
 2600 005d 0B       		.uleb128 0xb
 2601 005e 3B       		.uleb128 0x3b
 2602 005f 0B       		.uleb128 0xb
 2603 0060 27       		.uleb128 0x27
 2604 0061 19       		.uleb128 0x19
 2605 0062 11       		.uleb128 0x11
 2606 0063 01       		.uleb128 0x1
 2607 0064 12       		.uleb128 0x12
 2608 0065 06       		.uleb128 0x6
 2609 0066 40       		.uleb128 0x40
 2610 0067 18       		.uleb128 0x18
 2611 0068 9642     		.uleb128 0x2116
 2612 006a 19       		.uleb128 0x19
 2613 006b 01       		.uleb128 0x1
 2614 006c 13       		.uleb128 0x13
 2615 006d 00       		.byte	0
 2616 006e 00       		.byte	0
 2617 006f 08       		.uleb128 0x8
 2618 0070 34       		.uleb128 0x34
 2619 0071 00       		.byte	0
 2620 0072 03       		.uleb128 0x3
 2621 0073 0E       		.uleb128 0xe
 2622 0074 3A       		.uleb128 0x3a
 2623 0075 0B       		.uleb128 0xb
 2624 0076 3B       		.uleb128 0x3b
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4OTE74.s 			page 75


 2625 0077 0B       		.uleb128 0xb
 2626 0078 49       		.uleb128 0x49
 2627 0079 13       		.uleb128 0x13
 2628 007a 02       		.uleb128 0x2
 2629 007b 18       		.uleb128 0x18
 2630 007c 00       		.byte	0
 2631 007d 00       		.byte	0
 2632 007e 09       		.uleb128 0x9
 2633 007f 2E       		.uleb128 0x2e
 2634 0080 00       		.byte	0
 2635 0081 3F       		.uleb128 0x3f
 2636 0082 19       		.uleb128 0x19
 2637 0083 03       		.uleb128 0x3
 2638 0084 0E       		.uleb128 0xe
 2639 0085 3A       		.uleb128 0x3a
 2640 0086 0B       		.uleb128 0xb
 2641 0087 3B       		.uleb128 0x3b
 2642 0088 05       		.uleb128 0x5
 2643 0089 27       		.uleb128 0x27
 2644 008a 19       		.uleb128 0x19
 2645 008b 49       		.uleb128 0x49
 2646 008c 13       		.uleb128 0x13
 2647 008d 11       		.uleb128 0x11
 2648 008e 01       		.uleb128 0x1
 2649 008f 12       		.uleb128 0x12
 2650 0090 06       		.uleb128 0x6
 2651 0091 40       		.uleb128 0x40
 2652 0092 18       		.uleb128 0x18
 2653 0093 9742     		.uleb128 0x2117
 2654 0095 19       		.uleb128 0x19
 2655 0096 00       		.byte	0
 2656 0097 00       		.byte	0
 2657 0098 0A       		.uleb128 0xa
 2658 0099 2E       		.uleb128 0x2e
 2659 009a 01       		.byte	0x1
 2660 009b 3F       		.uleb128 0x3f
 2661 009c 19       		.uleb128 0x19
 2662 009d 03       		.uleb128 0x3
 2663 009e 0E       		.uleb128 0xe
 2664 009f 3A       		.uleb128 0x3a
 2665 00a0 0B       		.uleb128 0xb
 2666 00a1 3B       		.uleb128 0x3b
 2667 00a2 05       		.uleb128 0x5
 2668 00a3 27       		.uleb128 0x27
 2669 00a4 19       		.uleb128 0x19
 2670 00a5 11       		.uleb128 0x11
 2671 00a6 01       		.uleb128 0x1
 2672 00a7 12       		.uleb128 0x12
 2673 00a8 06       		.uleb128 0x6
 2674 00a9 40       		.uleb128 0x40
 2675 00aa 18       		.uleb128 0x18
 2676 00ab 9742     		.uleb128 0x2117
 2677 00ad 19       		.uleb128 0x19
 2678 00ae 01       		.uleb128 0x1
 2679 00af 13       		.uleb128 0x13
 2680 00b0 00       		.byte	0
 2681 00b1 00       		.byte	0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4OTE74.s 			page 76


 2682 00b2 0B       		.uleb128 0xb
 2683 00b3 05       		.uleb128 0x5
 2684 00b4 00       		.byte	0
 2685 00b5 03       		.uleb128 0x3
 2686 00b6 0E       		.uleb128 0xe
 2687 00b7 3A       		.uleb128 0x3a
 2688 00b8 0B       		.uleb128 0xb
 2689 00b9 3B       		.uleb128 0x3b
 2690 00ba 05       		.uleb128 0x5
 2691 00bb 49       		.uleb128 0x49
 2692 00bc 13       		.uleb128 0x13
 2693 00bd 02       		.uleb128 0x2
 2694 00be 18       		.uleb128 0x18
 2695 00bf 00       		.byte	0
 2696 00c0 00       		.byte	0
 2697 00c1 0C       		.uleb128 0xc
 2698 00c2 2E       		.uleb128 0x2e
 2699 00c3 01       		.byte	0x1
 2700 00c4 3F       		.uleb128 0x3f
 2701 00c5 19       		.uleb128 0x19
 2702 00c6 03       		.uleb128 0x3
 2703 00c7 0E       		.uleb128 0xe
 2704 00c8 3A       		.uleb128 0x3a
 2705 00c9 0B       		.uleb128 0xb
 2706 00ca 3B       		.uleb128 0x3b
 2707 00cb 05       		.uleb128 0x5
 2708 00cc 27       		.uleb128 0x27
 2709 00cd 19       		.uleb128 0x19
 2710 00ce 49       		.uleb128 0x49
 2711 00cf 13       		.uleb128 0x13
 2712 00d0 11       		.uleb128 0x11
 2713 00d1 01       		.uleb128 0x1
 2714 00d2 12       		.uleb128 0x12
 2715 00d3 06       		.uleb128 0x6
 2716 00d4 40       		.uleb128 0x40
 2717 00d5 18       		.uleb128 0x18
 2718 00d6 9742     		.uleb128 0x2117
 2719 00d8 19       		.uleb128 0x19
 2720 00d9 01       		.uleb128 0x1
 2721 00da 13       		.uleb128 0x13
 2722 00db 00       		.byte	0
 2723 00dc 00       		.byte	0
 2724 00dd 0D       		.uleb128 0xd
 2725 00de 34       		.uleb128 0x34
 2726 00df 00       		.byte	0
 2727 00e0 03       		.uleb128 0x3
 2728 00e1 0E       		.uleb128 0xe
 2729 00e2 3A       		.uleb128 0x3a
 2730 00e3 0B       		.uleb128 0xb
 2731 00e4 3B       		.uleb128 0x3b
 2732 00e5 05       		.uleb128 0x5
 2733 00e6 49       		.uleb128 0x49
 2734 00e7 13       		.uleb128 0x13
 2735 00e8 02       		.uleb128 0x2
 2736 00e9 18       		.uleb128 0x18
 2737 00ea 00       		.byte	0
 2738 00eb 00       		.byte	0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4OTE74.s 			page 77


 2739 00ec 0E       		.uleb128 0xe
 2740 00ed 2E       		.uleb128 0x2e
 2741 00ee 01       		.byte	0x1
 2742 00ef 3F       		.uleb128 0x3f
 2743 00f0 19       		.uleb128 0x19
 2744 00f1 03       		.uleb128 0x3
 2745 00f2 0E       		.uleb128 0xe
 2746 00f3 3A       		.uleb128 0x3a
 2747 00f4 0B       		.uleb128 0xb
 2748 00f5 3B       		.uleb128 0x3b
 2749 00f6 05       		.uleb128 0x5
 2750 00f7 27       		.uleb128 0x27
 2751 00f8 19       		.uleb128 0x19
 2752 00f9 49       		.uleb128 0x49
 2753 00fa 13       		.uleb128 0x13
 2754 00fb 11       		.uleb128 0x11
 2755 00fc 01       		.uleb128 0x1
 2756 00fd 12       		.uleb128 0x12
 2757 00fe 06       		.uleb128 0x6
 2758 00ff 40       		.uleb128 0x40
 2759 0100 18       		.uleb128 0x18
 2760 0101 9642     		.uleb128 0x2116
 2761 0103 19       		.uleb128 0x19
 2762 0104 01       		.uleb128 0x1
 2763 0105 13       		.uleb128 0x13
 2764 0106 00       		.byte	0
 2765 0107 00       		.byte	0
 2766 0108 0F       		.uleb128 0xf
 2767 0109 2E       		.uleb128 0x2e
 2768 010a 01       		.byte	0x1
 2769 010b 3F       		.uleb128 0x3f
 2770 010c 19       		.uleb128 0x19
 2771 010d 03       		.uleb128 0x3
 2772 010e 0E       		.uleb128 0xe
 2773 010f 3A       		.uleb128 0x3a
 2774 0110 0B       		.uleb128 0xb
 2775 0111 3B       		.uleb128 0x3b
 2776 0112 05       		.uleb128 0x5
 2777 0113 27       		.uleb128 0x27
 2778 0114 19       		.uleb128 0x19
 2779 0115 11       		.uleb128 0x11
 2780 0116 01       		.uleb128 0x1
 2781 0117 12       		.uleb128 0x12
 2782 0118 06       		.uleb128 0x6
 2783 0119 40       		.uleb128 0x40
 2784 011a 18       		.uleb128 0x18
 2785 011b 9642     		.uleb128 0x2116
 2786 011d 19       		.uleb128 0x19
 2787 011e 01       		.uleb128 0x1
 2788 011f 13       		.uleb128 0x13
 2789 0120 00       		.byte	0
 2790 0121 00       		.byte	0
 2791 0122 10       		.uleb128 0x10
 2792 0123 0F       		.uleb128 0xf
 2793 0124 00       		.byte	0
 2794 0125 0B       		.uleb128 0xb
 2795 0126 0B       		.uleb128 0xb
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4OTE74.s 			page 78


 2796 0127 49       		.uleb128 0x49
 2797 0128 13       		.uleb128 0x13
 2798 0129 00       		.byte	0
 2799 012a 00       		.byte	0
 2800 012b 11       		.uleb128 0x11
 2801 012c 26       		.uleb128 0x26
 2802 012d 00       		.byte	0
 2803 012e 49       		.uleb128 0x49
 2804 012f 13       		.uleb128 0x13
 2805 0130 00       		.byte	0
 2806 0131 00       		.byte	0
 2807 0132 12       		.uleb128 0x12
 2808 0133 0B       		.uleb128 0xb
 2809 0134 01       		.byte	0x1
 2810 0135 11       		.uleb128 0x11
 2811 0136 01       		.uleb128 0x1
 2812 0137 12       		.uleb128 0x12
 2813 0138 06       		.uleb128 0x6
 2814 0139 00       		.byte	0
 2815 013a 00       		.byte	0
 2816 013b 13       		.uleb128 0x13
 2817 013c 34       		.uleb128 0x34
 2818 013d 00       		.byte	0
 2819 013e 03       		.uleb128 0x3
 2820 013f 0E       		.uleb128 0xe
 2821 0140 3A       		.uleb128 0x3a
 2822 0141 0B       		.uleb128 0xb
 2823 0142 3B       		.uleb128 0x3b
 2824 0143 0B       		.uleb128 0xb
 2825 0144 49       		.uleb128 0x49
 2826 0145 13       		.uleb128 0x13
 2827 0146 3F       		.uleb128 0x3f
 2828 0147 19       		.uleb128 0x19
 2829 0148 02       		.uleb128 0x2
 2830 0149 18       		.uleb128 0x18
 2831 014a 00       		.byte	0
 2832 014b 00       		.byte	0
 2833 014c 14       		.uleb128 0x14
 2834 014d 01       		.uleb128 0x1
 2835 014e 01       		.byte	0x1
 2836 014f 49       		.uleb128 0x49
 2837 0150 13       		.uleb128 0x13
 2838 0151 01       		.uleb128 0x1
 2839 0152 13       		.uleb128 0x13
 2840 0153 00       		.byte	0
 2841 0154 00       		.byte	0
 2842 0155 15       		.uleb128 0x15
 2843 0156 21       		.uleb128 0x21
 2844 0157 00       		.byte	0
 2845 0158 49       		.uleb128 0x49
 2846 0159 13       		.uleb128 0x13
 2847 015a 2F       		.uleb128 0x2f
 2848 015b 0B       		.uleb128 0xb
 2849 015c 00       		.byte	0
 2850 015d 00       		.byte	0
 2851 015e 00       		.byte	0
 2852              		.section	.debug_aranges,"",%progbits
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4OTE74.s 			page 79


 2853 0000 EC000000 		.4byte	0xec
 2854 0004 0200     		.2byte	0x2
 2855 0006 00000000 		.4byte	.Ldebug_info0
 2856 000a 04       		.byte	0x4
 2857 000b 00       		.byte	0
 2858 000c 0000     		.2byte	0
 2859 000e 0000     		.2byte	0
 2860 0010 00000000 		.4byte	.LFB0
 2861 0014 24000000 		.4byte	.LFE0-.LFB0
 2862 0018 00000000 		.4byte	.LFB1
 2863 001c 58000000 		.4byte	.LFE1-.LFB1
 2864 0020 00000000 		.4byte	.LFB2
 2865 0024 64000000 		.4byte	.LFE2-.LFB2
 2866 0028 00000000 		.4byte	.LFB3
 2867 002c 64000000 		.4byte	.LFE3-.LFB3
 2868 0030 00000000 		.4byte	.LFB4
 2869 0034 0E000000 		.4byte	.LFE4-.LFB4
 2870 0038 00000000 		.4byte	.LFB5
 2871 003c 14000000 		.4byte	.LFE5-.LFB5
 2872 0040 00000000 		.4byte	.LFB6
 2873 0044 20000000 		.4byte	.LFE6-.LFB6
 2874 0048 00000000 		.4byte	.LFB7
 2875 004c 90000000 		.4byte	.LFE7-.LFB7
 2876 0050 00000000 		.4byte	.LFB8
 2877 0054 40000000 		.4byte	.LFE8-.LFB8
 2878 0058 00000000 		.4byte	.LFB9
 2879 005c B4000000 		.4byte	.LFE9-.LFB9
 2880 0060 00000000 		.4byte	.LFB10
 2881 0064 44000000 		.4byte	.LFE10-.LFB10
 2882 0068 00000000 		.4byte	.LFB11
 2883 006c 90000000 		.4byte	.LFE11-.LFB11
 2884 0070 00000000 		.4byte	.LFB12
 2885 0074 80000000 		.4byte	.LFE12-.LFB12
 2886 0078 00000000 		.4byte	.LFB13
 2887 007c 14000000 		.4byte	.LFE13-.LFB13
 2888 0080 00000000 		.4byte	.LFB14
 2889 0084 20000000 		.4byte	.LFE14-.LFB14
 2890 0088 00000000 		.4byte	.LFB15
 2891 008c 20000000 		.4byte	.LFE15-.LFB15
 2892 0090 00000000 		.4byte	.LFB16
 2893 0094 20000000 		.4byte	.LFE16-.LFB16
 2894 0098 00000000 		.4byte	.LFB17
 2895 009c 2C000000 		.4byte	.LFE17-.LFB17
 2896 00a0 00000000 		.4byte	.LFB18
 2897 00a4 18000000 		.4byte	.LFE18-.LFB18
 2898 00a8 00000000 		.4byte	.LFB19
 2899 00ac 34000000 		.4byte	.LFE19-.LFB19
 2900 00b0 00000000 		.4byte	.LFB20
 2901 00b4 44000000 		.4byte	.LFE20-.LFB20
 2902 00b8 00000000 		.4byte	.LFB21
 2903 00bc 44000000 		.4byte	.LFE21-.LFB21
 2904 00c0 00000000 		.4byte	.LFB22
 2905 00c4 34000000 		.4byte	.LFE22-.LFB22
 2906 00c8 00000000 		.4byte	.LFB23
 2907 00cc 40000000 		.4byte	.LFE23-.LFB23
 2908 00d0 00000000 		.4byte	.LFB24
 2909 00d4 44000000 		.4byte	.LFE24-.LFB24
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4OTE74.s 			page 80


 2910 00d8 00000000 		.4byte	.LFB25
 2911 00dc 9C000000 		.4byte	.LFE25-.LFB25
 2912 00e0 00000000 		.4byte	.LFB26
 2913 00e4 14000000 		.4byte	.LFE26-.LFB26
 2914 00e8 00000000 		.4byte	0
 2915 00ec 00000000 		.4byte	0
 2916              		.section	.debug_ranges,"",%progbits
 2917              	.Ldebug_ranges0:
 2918 0000 00000000 		.4byte	.LFB0
 2919 0004 24000000 		.4byte	.LFE0
 2920 0008 00000000 		.4byte	.LFB1
 2921 000c 58000000 		.4byte	.LFE1
 2922 0010 00000000 		.4byte	.LFB2
 2923 0014 64000000 		.4byte	.LFE2
 2924 0018 00000000 		.4byte	.LFB3
 2925 001c 64000000 		.4byte	.LFE3
 2926 0020 00000000 		.4byte	.LFB4
 2927 0024 0E000000 		.4byte	.LFE4
 2928 0028 00000000 		.4byte	.LFB5
 2929 002c 14000000 		.4byte	.LFE5
 2930 0030 00000000 		.4byte	.LFB6
 2931 0034 20000000 		.4byte	.LFE6
 2932 0038 00000000 		.4byte	.LFB7
 2933 003c 90000000 		.4byte	.LFE7
 2934 0040 00000000 		.4byte	.LFB8
 2935 0044 40000000 		.4byte	.LFE8
 2936 0048 00000000 		.4byte	.LFB9
 2937 004c B4000000 		.4byte	.LFE9
 2938 0050 00000000 		.4byte	.LFB10
 2939 0054 44000000 		.4byte	.LFE10
 2940 0058 00000000 		.4byte	.LFB11
 2941 005c 90000000 		.4byte	.LFE11
 2942 0060 00000000 		.4byte	.LFB12
 2943 0064 80000000 		.4byte	.LFE12
 2944 0068 00000000 		.4byte	.LFB13
 2945 006c 14000000 		.4byte	.LFE13
 2946 0070 00000000 		.4byte	.LFB14
 2947 0074 20000000 		.4byte	.LFE14
 2948 0078 00000000 		.4byte	.LFB15
 2949 007c 20000000 		.4byte	.LFE15
 2950 0080 00000000 		.4byte	.LFB16
 2951 0084 20000000 		.4byte	.LFE16
 2952 0088 00000000 		.4byte	.LFB17
 2953 008c 2C000000 		.4byte	.LFE17
 2954 0090 00000000 		.4byte	.LFB18
 2955 0094 18000000 		.4byte	.LFE18
 2956 0098 00000000 		.4byte	.LFB19
 2957 009c 34000000 		.4byte	.LFE19
 2958 00a0 00000000 		.4byte	.LFB20
 2959 00a4 44000000 		.4byte	.LFE20
 2960 00a8 00000000 		.4byte	.LFB21
 2961 00ac 44000000 		.4byte	.LFE21
 2962 00b0 00000000 		.4byte	.LFB22
 2963 00b4 34000000 		.4byte	.LFE22
 2964 00b8 00000000 		.4byte	.LFB23
 2965 00bc 40000000 		.4byte	.LFE23
 2966 00c0 00000000 		.4byte	.LFB24
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4OTE74.s 			page 81


 2967 00c4 44000000 		.4byte	.LFE24
 2968 00c8 00000000 		.4byte	.LFB25
 2969 00cc 9C000000 		.4byte	.LFE25
 2970 00d0 00000000 		.4byte	.LFB26
 2971 00d4 14000000 		.4byte	.LFE26
 2972 00d8 00000000 		.4byte	0
 2973 00dc 00000000 		.4byte	0
 2974              		.section	.debug_line,"",%progbits
 2975              	.Ldebug_line0:
 2976 0000 0D030000 		.section	.debug_str,"MS",%progbits,1
 2976      02004700 
 2976      00000201 
 2976      FB0E0D00 
 2976      01010101 
 2977              	.LASF10:
 2978 0000 75696E74 		.ascii	"uint16\000"
 2978      313600
 2979              	.LASF42:
 2980 0007 55415254 		.ascii	"UART_RS485_SetRxAddressMode\000"
 2980      5F525334 
 2980      38355F53 
 2980      65745278 
 2980      41646472 
 2981              	.LASF49:
 2982 0023 74784461 		.ascii	"txDataByte\000"
 2982      74614279 
 2982      746500
 2983              	.LASF54:
 2984 002e 73747269 		.ascii	"string\000"
 2984      6E6700
 2985              	.LASF73:
 2986 0035 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2986      43313120 
 2986      352E342E 
 2986      31203230 
 2986      31363036 
 2987 0068 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2987      20726576 
 2987      6973696F 
 2987      6E203233 
 2987      37373135 
 2988 009b 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2988      66756E63 
 2988      74696F6E 
 2988      2D736563 
 2988      74696F6E 
 2989              	.LASF22:
 2990 00c3 55415254 		.ascii	"UART_RS485_Enable\000"
 2990      5F525334 
 2990      38355F45 
 2990      6E61626C 
 2990      6500
 2991              	.LASF7:
 2992 00d5 6C6F6E67 		.ascii	"long long unsigned int\000"
 2992      206C6F6E 
 2992      6720756E 
 2992      7369676E 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4OTE74.s 			page 82


 2992      65642069 
 2993              	.LASF59:
 2994 00ec 55415254 		.ascii	"UART_RS485_GetTxBufferSize\000"
 2994      5F525334 
 2994      38355F47 
 2994      65745478 
 2994      42756666 
 2995              	.LASF68:
 2996 0107 55415254 		.ascii	"UART_RS485_rxBuffer\000"
 2996      5F525334 
 2996      38355F72 
 2996      78427566 
 2996      66657200 
 2997              	.LASF26:
 2998 011b 55415254 		.ascii	"UART_RS485_SetRxInterruptMode\000"
 2998      5F525334 
 2998      38355F53 
 2998      65745278 
 2998      496E7465 
 2999              	.LASF6:
 3000 0139 6C6F6E67 		.ascii	"long long int\000"
 3000      206C6F6E 
 3000      6720696E 
 3000      7400
 3001              	.LASF0:
 3002 0147 7369676E 		.ascii	"signed char\000"
 3002      65642063 
 3002      68617200 
 3003              	.LASF64:
 3004 0153 74785065 		.ascii	"txPeriod\000"
 3004      72696F64 
 3004      00
 3005              	.LASF35:
 3006 015c 55415254 		.ascii	"UART_RS485_GetChar\000"
 3006      5F525334 
 3006      38355F47 
 3006      65744368 
 3006      617200
 3007              	.LASF4:
 3008 016f 6C6F6E67 		.ascii	"long int\000"
 3008      20696E74 
 3008      00
 3009              	.LASF66:
 3010 0178 55415254 		.ascii	"UART_RS485_initVar\000"
 3010      5F525334 
 3010      38355F69 
 3010      6E697456 
 3010      617200
 3011              	.LASF9:
 3012 018b 75696E74 		.ascii	"uint8\000"
 3012      3800
 3013              	.LASF13:
 3014 0191 646F7562 		.ascii	"double\000"
 3014      6C6500
 3015              	.LASF43:
 3016 0198 61646472 		.ascii	"addressMode\000"
 3016      6573734D 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4OTE74.s 			page 83


 3016      6F646500 
 3017              	.LASF61:
 3018 01a4 55415254 		.ascii	"UART_RS485_SendBreak\000"
 3018      5F525334 
 3018      38355F53 
 3018      656E6442 
 3018      7265616B 
 3019              	.LASF11:
 3020 01b9 75696E74 		.ascii	"uint32\000"
 3020      333200
 3021              	.LASF27:
 3022 01c0 636F6E74 		.ascii	"control\000"
 3022      726F6C00 
 3023              	.LASF70:
 3024 01c8 55415254 		.ascii	"UART_RS485_rxBufferWrite\000"
 3024      5F525334 
 3024      38355F72 
 3024      78427566 
 3024      66657257 
 3025              	.LASF69:
 3026 01e1 55415254 		.ascii	"UART_RS485_rxBufferRead\000"
 3026      5F525334 
 3026      38355F72 
 3026      78427566 
 3026      66657252 
 3027              	.LASF51:
 3028 01f9 55415254 		.ascii	"UART_RS485_ReadTxStatus\000"
 3028      5F525334 
 3028      38355F52 
 3028      65616454 
 3028      78537461 
 3029              	.LASF62:
 3030 0211 7265744D 		.ascii	"retMode\000"
 3030      6F646500 
 3031              	.LASF8:
 3032 0219 756E7369 		.ascii	"unsigned int\000"
 3032      676E6564 
 3032      20696E74 
 3032      00
 3033              	.LASF67:
 3034 0226 55415254 		.ascii	"UART_RS485_errorStatus\000"
 3034      5F525334 
 3034      38355F65 
 3034      72726F72 
 3034      53746174 
 3035              	.LASF38:
 3036 023d 6C6F6345 		.ascii	"locErrorStatus\000"
 3036      72726F72 
 3036      53746174 
 3036      757300
 3037              	.LASF5:
 3038 024c 6C6F6E67 		.ascii	"long unsigned int\000"
 3038      20756E73 
 3038      69676E65 
 3038      6420696E 
 3038      7400
 3039              	.LASF60:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4OTE74.s 			page 84


 3040 025e 55415254 		.ascii	"UART_RS485_ClearTxBuffer\000"
 3040      5F525334 
 3040      38355F43 
 3040      6C656172 
 3040      54784275 
 3041              	.LASF39:
 3042 0277 55415254 		.ascii	"UART_RS485_GetRxBufferSize\000"
 3042      5F525334 
 3042      38355F47 
 3042      65745278 
 3042      42756666 
 3043              	.LASF23:
 3044 0292 55415254 		.ascii	"UART_RS485_Stop\000"
 3044      5F525334 
 3044      38355F53 
 3044      746F7000 
 3045              	.LASF40:
 3046 02a2 73697A65 		.ascii	"size\000"
 3046      00
 3047              	.LASF3:
 3048 02a7 73686F72 		.ascii	"short unsigned int\000"
 3048      7420756E 
 3048      7369676E 
 3048      65642069 
 3048      6E7400
 3049              	.LASF48:
 3050 02ba 55415254 		.ascii	"UART_RS485_WriteTxData\000"
 3050      5F525334 
 3050      38355F57 
 3050      72697465 
 3050      54784461 
 3051              	.LASF55:
 3052 02d1 62756649 		.ascii	"bufIndex\000"
 3052      6E646578 
 3052      00
 3053              	.LASF32:
 3054 02da 55415254 		.ascii	"UART_RS485_ReadRxData\000"
 3054      5F525334 
 3054      38355F52 
 3054      65616452 
 3054      78446174 
 3055              	.LASF47:
 3056 02f0 55415254 		.ascii	"UART_RS485_SetTxInterruptMode\000"
 3056      5F525334 
 3056      38355F53 
 3056      65745478 
 3056      496E7465 
 3057              	.LASF28:
 3058 030e 696E7453 		.ascii	"intSrc\000"
 3058      726300
 3059              	.LASF17:
 3060 0315 72656733 		.ascii	"reg32\000"
 3060      3200
 3061              	.LASF63:
 3062 031b 746D7053 		.ascii	"tmpStat\000"
 3062      74617400 
 3063              	.LASF53:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4OTE74.s 			page 85


 3064 0323 55415254 		.ascii	"UART_RS485_PutString\000"
 3064      5F525334 
 3064      38355F50 
 3064      75745374 
 3064      72696E67 
 3065              	.LASF19:
 3066 0338 73697A65 		.ascii	"sizetype\000"
 3066      74797065 
 3066      00
 3067              	.LASF72:
 3068 0341 55415254 		.ascii	"UART_RS485_rxBufferOverflow\000"
 3068      5F525334 
 3068      38355F72 
 3068      78427566 
 3068      6665724F 
 3069              	.LASF18:
 3070 035d 6C6F6E67 		.ascii	"long double\000"
 3070      20646F75 
 3070      626C6500 
 3071              	.LASF45:
 3072 0369 61646472 		.ascii	"address\000"
 3072      65737300 
 3073              	.LASF44:
 3074 0371 55415254 		.ascii	"UART_RS485_SetRxAddress1\000"
 3074      5F525334 
 3074      38355F53 
 3074      65745278 
 3074      41646472 
 3075              	.LASF46:
 3076 038a 55415254 		.ascii	"UART_RS485_SetRxAddress2\000"
 3076      5F525334 
 3076      38355F53 
 3076      65745278 
 3076      41646472 
 3077              	.LASF52:
 3078 03a3 55415254 		.ascii	"UART_RS485_PutChar\000"
 3078      5F525334 
 3078      38355F50 
 3078      75744368 
 3078      617200
 3079              	.LASF31:
 3080 03b6 6C6F6352 		.ascii	"locRxBufferWrite\000"
 3080      78427566 
 3080      66657257 
 3080      72697465 
 3080      00
 3081              	.LASF36:
 3082 03c7 72785374 		.ascii	"rxStatus\000"
 3082      61747573 
 3082      00
 3083              	.LASF20:
 3084 03d0 55415254 		.ascii	"UART_RS485_Start\000"
 3084      5F525334 
 3084      38355F53 
 3084      74617274 
 3084      00
 3085              	.LASF12:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4OTE74.s 			page 86


 3086 03e1 666C6F61 		.ascii	"float\000"
 3086      7400
 3087              	.LASF33:
 3088 03e7 55415254 		.ascii	"UART_RS485_ReadRxStatus\000"
 3088      5F525334 
 3088      38355F52 
 3088      65616452 
 3088      78537461 
 3089              	.LASF16:
 3090 03ff 72656738 		.ascii	"reg8\000"
 3090      00
 3091              	.LASF1:
 3092 0404 756E7369 		.ascii	"unsigned char\000"
 3092      676E6564 
 3092      20636861 
 3092      7200
 3093              	.LASF2:
 3094 0412 73686F72 		.ascii	"short int\000"
 3094      7420696E 
 3094      7400
 3095              	.LASF37:
 3096 041c 55415254 		.ascii	"UART_RS485_GetByte\000"
 3096      5F525334 
 3096      38355F47 
 3096      65744279 
 3096      746500
 3097              	.LASF58:
 3098 042f 55415254 		.ascii	"UART_RS485_PutCRLF\000"
 3098      5F525334 
 3098      38355F50 
 3098      75744352 
 3098      4C4600
 3099              	.LASF71:
 3100 0442 55415254 		.ascii	"UART_RS485_rxBufferLoopDetect\000"
 3100      5F525334 
 3100      38355F72 
 3100      78427566 
 3100      6665724C 
 3101              	.LASF57:
 3102 0460 62797465 		.ascii	"byteCount\000"
 3102      436F756E 
 3102      7400
 3103              	.LASF25:
 3104 046a 55415254 		.ascii	"UART_RS485_WriteControlRegister\000"
 3104      5F525334 
 3104      38355F57 
 3104      72697465 
 3104      436F6E74 
 3105              	.LASF29:
 3106 048a 72784461 		.ascii	"rxData\000"
 3106      746100
 3107              	.LASF15:
 3108 0491 63686172 		.ascii	"char\000"
 3108      00
 3109              	.LASF21:
 3110 0496 55415254 		.ascii	"UART_RS485_Init\000"
 3110      5F525334 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4OTE74.s 			page 87


 3110      38355F49 
 3110      6E697400 
 3111              	.LASF14:
 3112 04a6 63686172 		.ascii	"char8\000"
 3112      3800
 3113              	.LASF65:
 3114 04ac 55415254 		.ascii	"UART_RS485_SetTxAddressMode\000"
 3114      5F525334 
 3114      38355F53 
 3114      65745478 
 3114      41646472 
 3115              	.LASF50:
 3116 04c8 55415254 		.ascii	"UART_RS485_ReadControlRegister\000"
 3116      5F525334 
 3116      38355F52 
 3116      65616443 
 3116      6F6E7472 
 3117              	.LASF30:
 3118 04e7 6C6F6352 		.ascii	"locRxBufferRead\000"
 3118      78427566 
 3118      66657252 
 3118      65616400 
 3119              	.LASF24:
 3120 04f7 656E6162 		.ascii	"enableInterrupts\000"
 3120      6C65496E 
 3120      74657272 
 3120      75707473 
 3120      00
 3121              	.LASF34:
 3122 0508 73746174 		.ascii	"status\000"
 3122      757300
 3123              	.LASF74:
 3124 050f 47656E65 		.ascii	"Generated_Source\\PSoC5\\UART_RS485.c\000"
 3124      72617465 
 3124      645F536F 
 3124      75726365 
 3124      5C50536F 
 3125              	.LASF56:
 3126 0533 55415254 		.ascii	"UART_RS485_PutArray\000"
 3126      5F525334 
 3126      38355F50 
 3126      75744172 
 3126      72617900 
 3127              	.LASF75:
 3128 0547 433A5C55 		.ascii	"C:\\Users\\mgnocco\\Documents\\GitHub\\PSoC5\\Toast"
 3128      73657273 
 3128      5C6D676E 
 3128      6F63636F 
 3128      5C446F63 
 3129 0574 5C546F61 		.ascii	"\\Toast.cydsn\000"
 3129      73742E63 
 3129      7964736E 
 3129      00
 3130              	.LASF41:
 3131 0581 55415254 		.ascii	"UART_RS485_ClearRxBuffer\000"
 3131      5F525334 
 3131      38355F43 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4OTE74.s 			page 88


 3131      6C656172 
 3131      52784275 
 3132              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
