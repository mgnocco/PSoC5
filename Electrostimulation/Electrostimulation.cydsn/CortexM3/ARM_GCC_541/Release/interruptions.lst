ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"interruptions.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.rodata
  20              		.align	2
  21              		.type	pwm_preload_values, %object
  22              		.size	pwm_preload_values, 29
  23              	pwm_preload_values:
  24 0000 64       		.byte	100
  25 0001 53       		.byte	83
  26 0002 4E       		.byte	78
  27 0003 4C       		.byte	76
  28 0004 4A       		.byte	74
  29 0005 48       		.byte	72
  30 0006 46       		.byte	70
  31 0007 44       		.byte	68
  32 0008 43       		.byte	67
  33 0009 41       		.byte	65
  34 000a 40       		.byte	64
  35 000b 3F       		.byte	63
  36 000c 3E       		.byte	62
  37 000d 3D       		.byte	61
  38 000e 3C       		.byte	60
  39 000f 3B       		.byte	59
  40 0010 3A       		.byte	58
  41 0011 39       		.byte	57
  42 0012 38       		.byte	56
  43 0013 38       		.byte	56
  44 0014 37       		.byte	55
  45 0015 36       		.byte	54
  46 0016 36       		.byte	54
  47 0017 35       		.byte	53
  48 0018 34       		.byte	52
  49 0019 34       		.byte	52
  50 001a 34       		.byte	52
  51 001b 33       		.byte	51
  52 001c 33       		.byte	51
  53              		.section	.text.ISR_RS485_RX_ExInterrupt,"ax",%progbits
  54              		.align	2
  55              		.global	ISR_RS485_RX_ExInterrupt
  56              		.thumb
  57              		.thumb_func
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 2


  58              		.type	ISR_RS485_RX_ExInterrupt, %function
  59              	ISR_RS485_RX_ExInterrupt:
  60              	.LFB64:
  61              		.file 1 "..\\src\\interruptions.c"
   1:..\src/interruptions.c **** // ----------------------------------------------------------------------------
   2:..\src/interruptions.c **** // BSD 3-Clause License
   3:..\src/interruptions.c **** 
   4:..\src/interruptions.c **** // Copyright (c) 2016, qbrobotics
   5:..\src/interruptions.c **** // Copyright (c) 2017-2020, Centro "E.Piaggio"
   6:..\src/interruptions.c **** // All rights reserved.
   7:..\src/interruptions.c **** 
   8:..\src/interruptions.c **** // Redistribution and use in source and binary forms, with or without
   9:..\src/interruptions.c **** // modification, are permitted provided that the following conditions are met:
  10:..\src/interruptions.c **** 
  11:..\src/interruptions.c **** // * Redistributions of source code must retain the above copyright notice, this
  12:..\src/interruptions.c **** //   list of conditions and the following disclaimer.
  13:..\src/interruptions.c **** 
  14:..\src/interruptions.c **** // * Redistributions in binary form must reproduce the above copyright notice,
  15:..\src/interruptions.c **** //   this list of conditions and the following disclaimer in the documentation
  16:..\src/interruptions.c **** //   and/or other materials provided with the distribution.
  17:..\src/interruptions.c **** 
  18:..\src/interruptions.c **** // * Neither the name of the copyright holder nor the names of its
  19:..\src/interruptions.c **** //   contributors may be used to endorse or promote products derived from
  20:..\src/interruptions.c **** //   this software without specific prior written permission.
  21:..\src/interruptions.c **** 
  22:..\src/interruptions.c **** // THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  23:..\src/interruptions.c **** // AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  24:..\src/interruptions.c **** // IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  25:..\src/interruptions.c **** // DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  26:..\src/interruptions.c **** // FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  27:..\src/interruptions.c **** // DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  28:..\src/interruptions.c **** // SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:..\src/interruptions.c **** // CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  30:..\src/interruptions.c **** // OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  31:..\src/interruptions.c **** // OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  32:..\src/interruptions.c **** // POSSIBILITY OF SUCH DAMAGE.
  33:..\src/interruptions.c **** // ----------------------------------------------------------------------------
  34:..\src/interruptions.c **** 
  35:..\src/interruptions.c **** /**
  36:..\src/interruptions.c **** * \file         interruptions.c
  37:..\src/interruptions.c **** *
  38:..\src/interruptions.c **** * \brief        Interruption handling and firmware core functions
  39:..\src/interruptions.c **** * \date         March 20th, 2020
  40:..\src/interruptions.c **** * \author       _Centro "E.Piaggio"_
  41:..\src/interruptions.c **** * \copyright    (C) 2012-2016 qbrobotics. All rights reserved.
  42:..\src/interruptions.c **** * \copyright    (C) 2017-2020 Centro "E.Piaggio". All rights reserved.
  43:..\src/interruptions.c **** */
  44:..\src/interruptions.c **** 
  45:..\src/interruptions.c **** 
  46:..\src/interruptions.c **** //=================================================================     includes
  47:..\src/interruptions.c **** #include "interruptions.h"
  48:..\src/interruptions.c **** 
  49:..\src/interruptions.c **** //==============================================================================
  50:..\src/interruptions.c **** //                                                            RS485 RX INTERRUPT
  51:..\src/interruptions.c **** //==============================================================================
  52:..\src/interruptions.c **** // Processing RS-485 data frame:
  53:..\src/interruptions.c **** //
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 3


  54:..\src/interruptions.c **** // - 0:     Waits for beginning characters
  55:..\src/interruptions.c **** // - 1:     Waits for ID;
  56:..\src/interruptions.c **** // - 2:     Data length;
  57:..\src/interruptions.c **** // - 3:     Receive all bytes;
  58:..\src/interruptions.c **** // - 4:     Wait for another device end of transmission;
  59:..\src/interruptions.c **** //
  60:..\src/interruptions.c **** //==============================================================================
  61:..\src/interruptions.c **** 
  62:..\src/interruptions.c **** // PWM values needed to obtain 11.5 V given a certain input tension
  63:..\src/interruptions.c **** // Numbers are sperimentally calculated //[index] (millivolts)
  64:..\src/interruptions.c **** static const uint8 pwm_preload_values[29] = {100,    //0 (11500)
  65:..\src/interruptions.c ****                                               83,
  66:..\src/interruptions.c ****                                               78,
  67:..\src/interruptions.c ****                                               76,
  68:..\src/interruptions.c ****                                               74,
  69:..\src/interruptions.c ****                                               72,    //5 (14000)
  70:..\src/interruptions.c ****                                               70,
  71:..\src/interruptions.c ****                                               68,
  72:..\src/interruptions.c ****                                               67,
  73:..\src/interruptions.c ****                                               65,
  74:..\src/interruptions.c ****                                               64,    //10 (16500)
  75:..\src/interruptions.c ****                                               63,
  76:..\src/interruptions.c ****                                               62,
  77:..\src/interruptions.c ****                                               61,
  78:..\src/interruptions.c ****                                               60,
  79:..\src/interruptions.c ****                                               59,    //15 (19000)
  80:..\src/interruptions.c ****                                               58,
  81:..\src/interruptions.c ****                                               57,
  82:..\src/interruptions.c ****                                               56,
  83:..\src/interruptions.c ****                                               56,
  84:..\src/interruptions.c ****                                               55,    //20 (21500)
  85:..\src/interruptions.c ****                                               54,
  86:..\src/interruptions.c ****                                               54,
  87:..\src/interruptions.c ****                                               53,
  88:..\src/interruptions.c ****                                               52,
  89:..\src/interruptions.c ****                                               52,    //25 (24000)
  90:..\src/interruptions.c ****                                               52,
  91:..\src/interruptions.c ****                                               51,
  92:..\src/interruptions.c ****                                               51};   //28 (25500)
  93:..\src/interruptions.c **** 
  94:..\src/interruptions.c **** //==============================================================================
  95:..\src/interruptions.c **** //                                                            RS485 RX INTERRUPT
  96:..\src/interruptions.c **** //==============================================================================
  97:..\src/interruptions.c **** 
  98:..\src/interruptions.c **** CY_ISR(ISR_RS485_RX_ExInterrupt) {
  62              		.loc 1 98 0
  63              		.cfi_startproc
  64              		@ args = 0, pretend = 0, frame = 0
  65              		@ frame_needed = 1, uses_anonymous_args = 0
  66              		@ link register save eliminated.
  67 0000 80B4     		push	{r7}
  68              		.cfi_def_cfa_offset 4
  69              		.cfi_offset 7, -4
  70 0002 00AF     		add	r7, sp, #0
  71              		.cfi_def_cfa_register 7
  99:..\src/interruptions.c **** 
 100:..\src/interruptions.c ****     // Set RS485 flag
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 4


 101:..\src/interruptions.c ****     
 102:..\src/interruptions.c ****     interrupt_flag = TRUE;
  72              		.loc 1 102 0
  73 0004 034B     		ldr	r3, .L2
  74 0006 0122     		movs	r2, #1
  75 0008 1A70     		strb	r2, [r3]
 103:..\src/interruptions.c ****      
 104:..\src/interruptions.c **** }
  76              		.loc 1 104 0
  77 000a 00BF     		nop
  78 000c BD46     		mov	sp, r7
  79              		.cfi_def_cfa_register 13
  80              		@ sp needed
  81 000e 80BC     		pop	{r7}
  82              		.cfi_restore 7
  83              		.cfi_def_cfa_offset 0
  84 0010 7047     		bx	lr
  85              	.L3:
  86 0012 00BF     		.align	2
  87              	.L2:
  88 0014 00000000 		.word	interrupt_flag
  89              		.cfi_endproc
  90              	.LFE64:
  91              		.size	ISR_RS485_RX_ExInterrupt, .-ISR_RS485_RX_ExInterrupt
  92              		.section	.text.ISR_CYCLES_Handler,"ax",%progbits
  93              		.align	2
  94              		.global	ISR_CYCLES_Handler
  95              		.thumb
  96              		.thumb_func
  97              		.type	ISR_CYCLES_Handler, %function
  98              	ISR_CYCLES_Handler:
  99              	.LFB65:
 105:..\src/interruptions.c **** 
 106:..\src/interruptions.c **** //==============================================================================
 107:..\src/interruptions.c **** //                                                        CYCLES TIMER INTERRUPT
 108:..\src/interruptions.c **** //==============================================================================
 109:..\src/interruptions.c **** CY_ISR(ISR_CYCLES_Handler){
 100              		.loc 1 109 0
 101              		.cfi_startproc
 102              		@ args = 0, pretend = 0, frame = 0
 103              		@ frame_needed = 1, uses_anonymous_args = 0
 104              		@ link register save eliminated.
 105 0000 80B4     		push	{r7}
 106              		.cfi_def_cfa_offset 4
 107              		.cfi_offset 7, -4
 108 0002 00AF     		add	r7, sp, #0
 109              		.cfi_def_cfa_register 7
 110:..\src/interruptions.c **** 
 111:..\src/interruptions.c ****     // Set cycles interrupt flag
 112:..\src/interruptions.c ****     
 113:..\src/interruptions.c ****     cycles_interrupt_flag = TRUE;
 110              		.loc 1 113 0
 111 0004 044B     		ldr	r3, .L5
 112 0006 0122     		movs	r2, #1
 113 0008 1A70     		strb	r2, [r3]
 114:..\src/interruptions.c ****     
 115:..\src/interruptions.c ****     CYCLES_TIMER_STATUS;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 5


 114              		.loc 1 115 0
 115 000a 044B     		ldr	r3, .L5+4
 116 000c 1B78     		ldrb	r3, [r3]
 116:..\src/interruptions.c **** 
 117:..\src/interruptions.c **** }
 117              		.loc 1 117 0
 118 000e 00BF     		nop
 119 0010 BD46     		mov	sp, r7
 120              		.cfi_def_cfa_register 13
 121              		@ sp needed
 122 0012 80BC     		pop	{r7}
 123              		.cfi_restore 7
 124              		.cfi_def_cfa_offset 0
 125 0014 7047     		bx	lr
 126              	.L6:
 127 0016 00BF     		.align	2
 128              	.L5:
 129 0018 00000000 		.word	cycles_interrupt_flag
 130 001c 034F0040 		.word	1073762051
 131              		.cfi_endproc
 132              	.LFE65:
 133              		.size	ISR_CYCLES_Handler, .-ISR_CYCLES_Handler
 134              		.section	.text.interrupt_manager,"ax",%progbits
 135              		.align	2
 136              		.global	interrupt_manager
 137              		.thumb
 138              		.thumb_func
 139              		.type	interrupt_manager, %function
 140              	interrupt_manager:
 141              	.LFB66:
 118:..\src/interruptions.c **** 
 119:..\src/interruptions.c **** //==============================================================================
 120:..\src/interruptions.c **** //                                                             INTERRUPT MANAGER
 121:..\src/interruptions.c **** //==============================================================================
 122:..\src/interruptions.c **** // Manage interrupt from RS485 
 123:..\src/interruptions.c **** //==============================================================================
 124:..\src/interruptions.c **** // Processing RS-485 data frame:
 125:..\src/interruptions.c **** //
 126:..\src/interruptions.c **** // - WAIT_START:    Waits for beginning characters;
 127:..\src/interruptions.c **** // - WAIT_ID:       Waits for ID;
 128:..\src/interruptions.c **** // - WAIT_LENGTH:   Data length;
 129:..\src/interruptions.c **** // - RECEIVE:       Receive all bytes;
 130:..\src/interruptions.c **** // - UNLOAD:        Wait for another device end of transmission;
 131:..\src/interruptions.c **** //
 132:..\src/interruptions.c **** //==============================================================================
 133:..\src/interruptions.c **** 
 134:..\src/interruptions.c **** void interrupt_manager(){
 142              		.loc 1 134 0
 143              		.cfi_startproc
 144              		@ args = 0, pretend = 0, frame = 8
 145              		@ frame_needed = 1, uses_anonymous_args = 0
 146 0000 80B5     		push	{r7, lr}
 147              		.cfi_def_cfa_offset 8
 148              		.cfi_offset 7, -8
 149              		.cfi_offset 14, -4
 150 0002 82B0     		sub	sp, sp, #8
 151              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 6


 152 0004 00AF     		add	r7, sp, #0
 153              		.cfi_def_cfa_register 7
 135:..\src/interruptions.c **** 
 136:..\src/interruptions.c ****     
 137:..\src/interruptions.c ****     //===========================================     local variables definition
 138:..\src/interruptions.c **** 
 139:..\src/interruptions.c ****     static uint8 CYDATA state = WAIT_START;                      // state
 140:..\src/interruptions.c ****     
 141:..\src/interruptions.c ****     //------------------------------------------------- local data packet
 142:..\src/interruptions.c ****     static uint8 CYDATA data_packet_index;
 143:..\src/interruptions.c ****     static uint8 CYDATA data_packet_length;
 144:..\src/interruptions.c ****     static uint8 data_packet_buffer[128];                     
 145:..\src/interruptions.c ****     static uint8 CYDATA rx_queue[3];                    // last 2 bytes received
 146:..\src/interruptions.c ****     //-------------------------------------------------
 147:..\src/interruptions.c **** 
 148:..\src/interruptions.c ****     uint8 CYDATA    rx_data;                            // RS485 UART rx data
 149:..\src/interruptions.c ****     CYBIT           rx_data_type = TRUE;                       // my id?
 154              		.loc 1 149 0
 155 0006 0123     		movs	r3, #1
 156 0008 FB71     		strb	r3, [r7, #7]
 150:..\src/interruptions.c ****     uint8 CYDATA    package_count = 0;                     
 157              		.loc 1 150 0
 158 000a 0023     		movs	r3, #0
 159 000c BB71     		strb	r3, [r7, #6]
 151:..\src/interruptions.c **** 
 152:..\src/interruptions.c ****     //======================================================     receive routine
 153:..\src/interruptions.c ****     
 154:..\src/interruptions.c ****     while(UART_RS485_GetRxBufferSize() && (package_count < 100)){
 160              		.loc 1 154 0
 161 000e D6E0     		b	.L8
 162              	.L28:
 155:..\src/interruptions.c ****         // 100 - estimated maximum number of packets we can read without blocking firmware executio
 156:..\src/interruptions.c **** 
 157:..\src/interruptions.c ****         // Get next char
 158:..\src/interruptions.c ****         rx_data = UART_RS485_GetChar();
 163              		.loc 1 158 0
 164 0010 FFF7FEFF 		bl	UART_RS485_GetChar
 165 0014 0346     		mov	r3, r0
 166 0016 7B71     		strb	r3, [r7, #5]
 159:..\src/interruptions.c ****         
 160:..\src/interruptions.c ****         switch (state) {
 167              		.loc 1 160 0
 168 0018 6F4B     		ldr	r3, .L31
 169 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 170 001c 042B     		cmp	r3, #4
 171 001e 00F2CE80 		bhi	.L8
 172 0022 01A2     		adr	r2, .L10
 173 0024 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 174              		.p2align 2
 175              	.L10:
 176 0028 3D000000 		.word	.L9+1
 177 002c A3000000 		.word	.L11+1
 178 0030 CD000000 		.word	.L12+1
 179 0034 1B010000 		.word	.L13+1
 180 0038 85010000 		.word	.L14+1
 181              		.p2align 1
 182              	.L9:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 7


 161:..\src/interruptions.c ****             //-----     wait for frame start     -------------------------------
 162:..\src/interruptions.c ****             case WAIT_START:
 163:..\src/interruptions.c ****             
 164:..\src/interruptions.c ****                 rx_queue[0] = rx_queue[1];
 183              		.loc 1 164 0
 184 003c 674B     		ldr	r3, .L31+4
 185 003e 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 186 0040 664B     		ldr	r3, .L31+4
 187 0042 1A70     		strb	r2, [r3]
 165:..\src/interruptions.c ****                 rx_queue[1] = rx_queue[2];
 188              		.loc 1 165 0
 189 0044 654B     		ldr	r3, .L31+4
 190 0046 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 191 0048 644B     		ldr	r3, .L31+4
 192 004a 5A70     		strb	r2, [r3, #1]
 166:..\src/interruptions.c ****                 rx_queue[2] = rx_data;
 193              		.loc 1 166 0
 194 004c 634A     		ldr	r2, .L31+4
 195 004e 7B79     		ldrb	r3, [r7, #5]
 196 0050 9370     		strb	r3, [r2, #2]
 167:..\src/interruptions.c ****                 
 168:..\src/interruptions.c ****                 // Check for header configuration package
 169:..\src/interruptions.c ****                 if ((rx_queue[1] == 58) && (rx_queue[2] == 58)) {
 197              		.loc 1 169 0
 198 0052 624B     		ldr	r3, .L31+4
 199 0054 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 200 0056 3A2B     		cmp	r3, #58
 201 0058 10D1     		bne	.L15
 202              		.loc 1 169 0 is_stmt 0 discriminator 1
 203 005a 604B     		ldr	r3, .L31+4
 204 005c 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 205 005e 3A2B     		cmp	r3, #58
 206 0060 0CD1     		bne	.L15
 170:..\src/interruptions.c ****                     rx_queue[0] = 0;
 207              		.loc 1 170 0 is_stmt 1
 208 0062 5E4B     		ldr	r3, .L31+4
 209 0064 0022     		movs	r2, #0
 210 0066 1A70     		strb	r2, [r3]
 171:..\src/interruptions.c ****                     rx_queue[1] = 0;
 211              		.loc 1 171 0
 212 0068 5C4B     		ldr	r3, .L31+4
 213 006a 0022     		movs	r2, #0
 214 006c 5A70     		strb	r2, [r3, #1]
 172:..\src/interruptions.c ****                     rx_queue[2] = 0;
 215              		.loc 1 172 0
 216 006e 5B4B     		ldr	r3, .L31+4
 217 0070 0022     		movs	r2, #0
 218 0072 9A70     		strb	r2, [r3, #2]
 173:..\src/interruptions.c ****                     state       = WAIT_ID;                    
 219              		.loc 1 173 0
 220 0074 584B     		ldr	r3, .L31
 221 0076 0122     		movs	r2, #1
 222 0078 1A70     		strb	r2, [r3]
 223 007a 11E0     		b	.L16
 224              	.L15:
 174:..\src/interruptions.c ****                 }else
 175:..\src/interruptions.c ****                     if ((rx_queue[0] == 63) &&      //ASCII - ?
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 8


 225              		.loc 1 175 0
 226 007c 574B     		ldr	r3, .L31+4
 227 007e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 228 0080 3F2B     		cmp	r3, #63
 229 0082 40F09C80 		bne	.L8
 176:..\src/interruptions.c ****                         (rx_queue[1] == 13) &&      //ASCII - CR
 230              		.loc 1 176 0 discriminator 1
 231 0086 554B     		ldr	r3, .L31+4
 232 0088 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 175:..\src/interruptions.c ****                         (rx_queue[1] == 13) &&      //ASCII - CR
 233              		.loc 1 175 0 discriminator 1
 234 008a 0D2B     		cmp	r3, #13
 235 008c 40F09780 		bne	.L8
 177:..\src/interruptions.c ****                         (rx_queue[2] == 10))        //ASCII - LF)
 236              		.loc 1 177 0
 237 0090 524B     		ldr	r3, .L31+4
 238 0092 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 176:..\src/interruptions.c ****                         (rx_queue[1] == 13) &&      //ASCII - CR
 239              		.loc 1 176 0
 240 0094 0A2B     		cmp	r3, #10
 241 0096 40F09280 		bne	.L8
 178:..\src/interruptions.c ****                         infoGet(INFO_ALL);
 242              		.loc 1 178 0
 243 009a 0020     		movs	r0, #0
 244 009c FFF7FEFF 		bl	infoGet
 245              	.L16:
 179:..\src/interruptions.c ****                 break;
 246              		.loc 1 179 0
 247 00a0 8DE0     		b	.L8
 248              	.L11:
 180:..\src/interruptions.c **** 
 181:..\src/interruptions.c ****             //-----     wait for id     ----------------------------------------
 182:..\src/interruptions.c ****             case  WAIT_ID:
 183:..\src/interruptions.c **** 
 184:..\src/interruptions.c ****                 // packet is for my ID or is broadcast
 185:..\src/interruptions.c **** #ifdef MASTER_FW
 186:..\src/interruptions.c ****                 if (rx_data == c_mem.dev.id || rx_data == 0 || (c_mem.MS.slave_comm_active && rx_da
 187:..\src/interruptions.c ****                    rx_data_type = FALSE;
 188:..\src/interruptions.c ****                 else                //packet is for others
 189:..\src/interruptions.c ****                     rx_data_type = TRUE;
 190:..\src/interruptions.c **** #else
 191:..\src/interruptions.c ****                 if (rx_data == c_mem.dev.id || rx_data == 0)
 249              		.loc 1 191 0
 250 00a2 4F4B     		ldr	r3, .L31+8
 251 00a4 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 252 00a8 7A79     		ldrb	r2, [r7, #5]	@ zero_extendqisi2
 253 00aa 9A42     		cmp	r2, r3
 254 00ac 02D0     		beq	.L17
 255              		.loc 1 191 0 is_stmt 0 discriminator 1
 256 00ae 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 257 00b0 002B     		cmp	r3, #0
 258 00b2 02D1     		bne	.L18
 259              	.L17:
 192:..\src/interruptions.c ****                     rx_data_type = FALSE;
 260              		.loc 1 192 0 is_stmt 1
 261 00b4 0023     		movs	r3, #0
 262 00b6 FB71     		strb	r3, [r7, #7]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 9


 263 00b8 01E0     		b	.L19
 264              	.L18:
 193:..\src/interruptions.c ****                 else                //packet is for others
 194:..\src/interruptions.c ****                     rx_data_type = TRUE;
 265              		.loc 1 194 0
 266 00ba 0123     		movs	r3, #1
 267 00bc FB71     		strb	r3, [r7, #7]
 268              	.L19:
 195:..\src/interruptions.c **** #endif                
 196:..\src/interruptions.c ****                 data_packet_length = 0;
 269              		.loc 1 196 0
 270 00be 494B     		ldr	r3, .L31+12
 271 00c0 0022     		movs	r2, #0
 272 00c2 1A70     		strb	r2, [r3]
 197:..\src/interruptions.c ****                 state = WAIT_LENGTH;
 273              		.loc 1 197 0
 274 00c4 444B     		ldr	r3, .L31
 275 00c6 0222     		movs	r2, #2
 276 00c8 1A70     		strb	r2, [r3]
 198:..\src/interruptions.c ****                 break;
 277              		.loc 1 198 0
 278 00ca 78E0     		b	.L8
 279              	.L12:
 199:..\src/interruptions.c **** 
 200:..\src/interruptions.c ****             //-----     wait for length     ------------------------------------
 201:..\src/interruptions.c ****             case  WAIT_LENGTH:
 202:..\src/interruptions.c **** 
 203:..\src/interruptions.c ****                 data_packet_length = rx_data;
 280              		.loc 1 203 0
 281 00cc 454A     		ldr	r2, .L31+12
 282 00ce 7B79     		ldrb	r3, [r7, #5]
 283 00d0 1370     		strb	r3, [r2]
 204:..\src/interruptions.c ****                 // check validity of pack length
 205:..\src/interruptions.c ****                 if (data_packet_length <= 1) {
 284              		.loc 1 205 0
 285 00d2 444B     		ldr	r3, .L31+12
 286 00d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 287 00d6 012B     		cmp	r3, #1
 288 00d8 06D8     		bhi	.L20
 206:..\src/interruptions.c ****                     data_packet_length = 0;
 289              		.loc 1 206 0
 290 00da 424B     		ldr	r3, .L31+12
 291 00dc 0022     		movs	r2, #0
 292 00de 1A70     		strb	r2, [r3]
 207:..\src/interruptions.c ****                     state = WAIT_START;
 293              		.loc 1 207 0
 294 00e0 3D4B     		ldr	r3, .L31
 295 00e2 0022     		movs	r2, #0
 296 00e4 1A70     		strb	r2, [r3]
 297 00e6 6AE0     		b	.L8
 298              	.L20:
 208:..\src/interruptions.c ****                 } else if (data_packet_length > 128) {
 299              		.loc 1 208 0
 300 00e8 3E4B     		ldr	r3, .L31+12
 301 00ea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 302 00ec 802B     		cmp	r3, #128
 303 00ee 06D9     		bls	.L22
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 10


 209:..\src/interruptions.c ****                     data_packet_length = 0;
 304              		.loc 1 209 0
 305 00f0 3C4B     		ldr	r3, .L31+12
 306 00f2 0022     		movs	r2, #0
 307 00f4 1A70     		strb	r2, [r3]
 210:..\src/interruptions.c ****                     state = WAIT_START;
 308              		.loc 1 210 0
 309 00f6 384B     		ldr	r3, .L31
 310 00f8 0022     		movs	r2, #0
 311 00fa 1A70     		strb	r2, [r3]
 312 00fc 5FE0     		b	.L8
 313              	.L22:
 211:..\src/interruptions.c ****                 } else {
 212:..\src/interruptions.c ****                     data_packet_index = 0;
 314              		.loc 1 212 0
 315 00fe 3A4B     		ldr	r3, .L31+16
 316 0100 0022     		movs	r2, #0
 317 0102 1A70     		strb	r2, [r3]
 213:..\src/interruptions.c ****                     
 214:..\src/interruptions.c ****                     if(rx_data_type == FALSE)
 318              		.loc 1 214 0
 319 0104 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 320 0106 002B     		cmp	r3, #0
 321 0108 03D1     		bne	.L23
 215:..\src/interruptions.c ****                         state = RECEIVE;          // packet for me or broadcast
 322              		.loc 1 215 0
 323 010a 334B     		ldr	r3, .L31
 324 010c 0322     		movs	r2, #3
 325 010e 1A70     		strb	r2, [r3]
 326 0110 55E0     		b	.L8
 327              	.L23:
 216:..\src/interruptions.c ****                     else
 217:..\src/interruptions.c ****                         state = UNLOAD;           // packet for others
 328              		.loc 1 217 0
 329 0112 314B     		ldr	r3, .L31
 330 0114 0422     		movs	r2, #4
 331 0116 1A70     		strb	r2, [r3]
 218:..\src/interruptions.c ****                 }
 219:..\src/interruptions.c ****                 break;
 332              		.loc 1 219 0
 333 0118 51E0     		b	.L8
 334              	.L13:
 220:..\src/interruptions.c **** 
 221:..\src/interruptions.c ****             //-----     receiving     -------------------------------------------
 222:..\src/interruptions.c ****             case RECEIVE:
 223:..\src/interruptions.c **** 
 224:..\src/interruptions.c ****                 data_packet_buffer[data_packet_index] = rx_data;
 335              		.loc 1 224 0
 336 011a 334B     		ldr	r3, .L31+16
 337 011c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 338 011e 1946     		mov	r1, r3
 339 0120 324A     		ldr	r2, .L31+20
 340 0122 7B79     		ldrb	r3, [r7, #5]
 341 0124 5354     		strb	r3, [r2, r1]
 225:..\src/interruptions.c ****                 data_packet_index++;
 342              		.loc 1 225 0
 343 0126 304B     		ldr	r3, .L31+16
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 11


 344 0128 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 345 012a 0133     		adds	r3, r3, #1
 346 012c DAB2     		uxtb	r2, r3
 347 012e 2E4B     		ldr	r3, .L31+16
 348 0130 1A70     		strb	r2, [r3]
 226:..\src/interruptions.c ****                 
 227:..\src/interruptions.c ****                 // check end of transmission
 228:..\src/interruptions.c ****                 if (data_packet_index >= data_packet_length) {
 349              		.loc 1 228 0
 350 0132 2D4B     		ldr	r3, .L31+16
 351 0134 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 352 0136 2B4B     		ldr	r3, .L31+12
 353 0138 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 354 013a 9A42     		cmp	r2, r3
 355 013c 3FD3     		bcc	.L8
 229:..\src/interruptions.c ****                     // verify if frame ID corresponded to the device ID
 230:..\src/interruptions.c ****                     if (rx_data_type == FALSE) {
 356              		.loc 1 230 0
 357 013e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 358 0140 002B     		cmp	r3, #0
 359 0142 12D1     		bne	.L25
 231:..\src/interruptions.c ****                         // copying data from buffer to global packet
 232:..\src/interruptions.c ****                         memcpy(g_rx.buffer, data_packet_buffer, data_packet_length);
 360              		.loc 1 232 0
 361 0144 274B     		ldr	r3, .L31+12
 362 0146 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 363 0148 1A46     		mov	r2, r3
 364 014a 2849     		ldr	r1, .L31+20
 365 014c 2848     		ldr	r0, .L31+24
 366 014e FFF7FEFF 		bl	memcpy
 233:..\src/interruptions.c ****                         g_rx.length = data_packet_length;
 367              		.loc 1 233 0
 368 0152 244B     		ldr	r3, .L31+12
 369 0154 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 370 0156 1AB2     		sxth	r2, r3
 371 0158 254B     		ldr	r3, .L31+24
 372 015a A3F88020 		strh	r2, [r3, #128]	@ movhi
 234:..\src/interruptions.c ****                         g_rx.ready  = 1;
 373              		.loc 1 234 0
 374 015e 244B     		ldr	r3, .L31+24
 375 0160 0122     		movs	r2, #1
 376 0162 83F88420 		strb	r2, [r3, #132]
 235:..\src/interruptions.c ****                         commProcess();
 377              		.loc 1 235 0
 378 0166 FFF7FEFF 		bl	commProcess
 379              	.L25:
 236:..\src/interruptions.c ****                     }
 237:..\src/interruptions.c ****                     
 238:..\src/interruptions.c ****                     data_packet_index  = 0;
 380              		.loc 1 238 0
 381 016a 1F4B     		ldr	r3, .L31+16
 382 016c 0022     		movs	r2, #0
 383 016e 1A70     		strb	r2, [r3]
 239:..\src/interruptions.c ****                     data_packet_length = 0;
 384              		.loc 1 239 0
 385 0170 1C4B     		ldr	r3, .L31+12
 386 0172 0022     		movs	r2, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 12


 387 0174 1A70     		strb	r2, [r3]
 240:..\src/interruptions.c ****                     state              = WAIT_START;
 388              		.loc 1 240 0
 389 0176 184B     		ldr	r3, .L31
 390 0178 0022     		movs	r2, #0
 391 017a 1A70     		strb	r2, [r3]
 241:..\src/interruptions.c ****                     package_count++;
 392              		.loc 1 241 0
 393 017c BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 394 017e 0133     		adds	r3, r3, #1
 395 0180 BB71     		strb	r3, [r7, #6]
 242:..\src/interruptions.c ****                 
 243:..\src/interruptions.c ****                 }
 244:..\src/interruptions.c ****                 break;
 396              		.loc 1 244 0
 397 0182 1CE0     		b	.L8
 398              	.L14:
 245:..\src/interruptions.c **** 
 246:..\src/interruptions.c ****             //-----     other device is receving     ---------------------------
 247:..\src/interruptions.c ****             case UNLOAD:
 248:..\src/interruptions.c ****                 if (!(--data_packet_length)) {
 399              		.loc 1 248 0
 400 0184 174B     		ldr	r3, .L31+12
 401 0186 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 402 0188 013B     		subs	r3, r3, #1
 403 018a DAB2     		uxtb	r2, r3
 404 018c 154B     		ldr	r3, .L31+12
 405 018e 1A70     		strb	r2, [r3]
 406 0190 144B     		ldr	r3, .L31+12
 407 0192 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 408 0194 002B     		cmp	r3, #0
 409 0196 11D1     		bne	.L30
 249:..\src/interruptions.c ****                     data_packet_index  = 0;
 410              		.loc 1 249 0
 411 0198 134B     		ldr	r3, .L31+16
 412 019a 0022     		movs	r2, #0
 413 019c 1A70     		strb	r2, [r3]
 250:..\src/interruptions.c ****                     data_packet_length = 0;
 414              		.loc 1 250 0
 415 019e 114B     		ldr	r3, .L31+12
 416 01a0 0022     		movs	r2, #0
 417 01a2 1A70     		strb	r2, [r3]
 251:..\src/interruptions.c ****                     RS485_CTS_Write(1);
 418              		.loc 1 251 0
 419 01a4 0120     		movs	r0, #1
 420 01a6 FFF7FEFF 		bl	RS485_CTS_Write
 252:..\src/interruptions.c ****                     RS485_CTS_Write(0);
 421              		.loc 1 252 0
 422 01aa 0020     		movs	r0, #0
 423 01ac FFF7FEFF 		bl	RS485_CTS_Write
 253:..\src/interruptions.c ****                     state              = WAIT_START;
 424              		.loc 1 253 0
 425 01b0 094B     		ldr	r3, .L31
 426 01b2 0022     		movs	r2, #0
 427 01b4 1A70     		strb	r2, [r3]
 254:..\src/interruptions.c ****                     package_count++;
 428              		.loc 1 254 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 13


 429 01b6 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 430 01b8 0133     		adds	r3, r3, #1
 431 01ba BB71     		strb	r3, [r7, #6]
 432              	.L30:
 255:..\src/interruptions.c ****                 }
 256:..\src/interruptions.c ****                 break;
 433              		.loc 1 256 0
 434 01bc 00BF     		nop
 435              	.L8:
 154:..\src/interruptions.c ****         // 100 - estimated maximum number of packets we can read without blocking firmware executio
 436              		.loc 1 154 0
 437 01be FFF7FEFF 		bl	UART_RS485_GetRxBufferSize
 438 01c2 0346     		mov	r3, r0
 439 01c4 002B     		cmp	r3, #0
 440 01c6 03D0     		beq	.L29
 154:..\src/interruptions.c ****         // 100 - estimated maximum number of packets we can read without blocking firmware executio
 441              		.loc 1 154 0 is_stmt 0 discriminator 1
 442 01c8 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 443 01ca 632B     		cmp	r3, #99
 444 01cc 7FF620AF 		bls	.L28
 445              	.L29:
 257:..\src/interruptions.c ****         }
 258:..\src/interruptions.c ****     }
 259:..\src/interruptions.c **** }
 446              		.loc 1 259 0 is_stmt 1
 447 01d0 00BF     		nop
 448 01d2 0837     		adds	r7, r7, #8
 449              		.cfi_def_cfa_offset 8
 450 01d4 BD46     		mov	sp, r7
 451              		.cfi_def_cfa_register 13
 452              		@ sp needed
 453 01d6 80BD     		pop	{r7, pc}
 454              	.L32:
 455              		.align	2
 456              	.L31:
 457 01d8 00000000 		.word	state.10437
 458 01dc 04000000 		.word	rx_queue.10441
 459 01e0 00000000 		.word	c_mem
 460 01e4 07000000 		.word	data_packet_length.10439
 461 01e8 08000000 		.word	data_packet_index.10438
 462 01ec 0C000000 		.word	data_packet_buffer.10440
 463 01f0 00000000 		.word	g_rx
 464              		.cfi_endproc
 465              	.LFE66:
 466              		.size	interrupt_manager, .-interrupt_manager
 467              		.section	.rodata
 468 001d 000000   		.align	2
 469              	.LC0:
 470 0020 00       		.ascii	"\000"
 471              		.global	__aeabi_i2f
 472              		.global	__aeabi_fdiv
 473              		.section	.text.function_scheduler,"ax",%progbits
 474              		.align	2
 475              		.global	function_scheduler
 476              		.thumb
 477              		.thumb_func
 478              		.type	function_scheduler, %function
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 14


 479              	function_scheduler:
 480              	.LFB67:
 260:..\src/interruptions.c **** //==============================================================================
 261:..\src/interruptions.c **** //                                                            FUNCTION SCHEDULER
 262:..\src/interruptions.c **** //==============================================================================
 263:..\src/interruptions.c **** // Call all the function with the right frequency
 264:..\src/interruptions.c **** //==============================================================================
 265:..\src/interruptions.c **** // Base frequency 5000 Hz (110 us - max. 200 us cycle time)
 266:..\src/interruptions.c **** //==============================================================================
 267:..\src/interruptions.c **** 
 268:..\src/interruptions.c **** void function_scheduler(void) {
 481              		.loc 1 268 0
 482              		.cfi_startproc
 483              		@ args = 0, pretend = 0, frame = 17504
 484              		@ frame_needed = 1, uses_anonymous_args = 0
 485 0000 B0B5     		push	{r4, r5, r7, lr}
 486              		.cfi_def_cfa_offset 16
 487              		.cfi_offset 4, -16
 488              		.cfi_offset 5, -12
 489              		.cfi_offset 7, -8
 490              		.cfi_offset 14, -4
 491 0002 ADF5884D 		sub	sp, sp, #17408
 492              		.cfi_def_cfa_offset 17424
 493 0006 98B0     		sub	sp, sp, #96
 494              		.cfi_def_cfa_offset 17520
 495 0008 00AF     		add	r7, sp, #0
 496              		.cfi_def_cfa_register 7
 269:..\src/interruptions.c ****  
 270:..\src/interruptions.c ****     static uint16 counter_tension_func = DIV_INIT_VALUE;
 271:..\src/interruptions.c ****     char info_[2500] = "";
 497              		.loc 1 271 0
 498 000a 07F56A53 		add	r3, r7, #14976
 499 000e 03F11803 		add	r3, r3, #24
 500 0012 0022     		movs	r2, #0
 501 0014 1A60     		str	r2, [r3]
 502 0016 0433     		adds	r3, r3, #4
 503 0018 4FF41C62 		mov	r2, #2496
 504 001c 0021     		movs	r1, #0
 505 001e 1846     		mov	r0, r3
 506 0020 FFF7FEFF 		bl	memset
 272:..\src/interruptions.c ****     
 273:..\src/interruptions.c ****     uint8 MOTOR_IDX = 0;
 507              		.loc 1 273 0
 508 0024 0023     		movs	r3, #0
 509 0026 07F58842 		add	r2, r7, #17408
 510 002a 02F15F02 		add	r2, r2, #95
 511 002e 1370     		strb	r3, [r2]
 274:..\src/interruptions.c ****     uint8 SECOND_MOTOR_IDX = 1;
 512              		.loc 1 274 0
 513 0030 0123     		movs	r3, #1
 514 0032 07F58842 		add	r2, r7, #17408
 515 0036 02F15E02 		add	r2, r2, #94
 516 003a 1370     		strb	r3, [r2]
 275:..\src/interruptions.c ****     
 276:..\src/interruptions.c ****     MY_TIMER_REG_Write(0x00);
 517              		.loc 1 276 0
 518 003c 0020     		movs	r0, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 15


 519 003e FFF7FEFF 		bl	MY_TIMER_REG_Write
 277:..\src/interruptions.c ****     timer_value0 = (uint32)MY_TIMER_ReadCounter();
 520              		.loc 1 277 0
 521 0042 FFF7FEFF 		bl	MY_TIMER_ReadCounter
 522 0046 0346     		mov	r3, r0
 523 0048 1A46     		mov	r2, r3
 524 004a A84B     		ldr	r3, .L48
 525 004c 1A80     		strh	r2, [r3]	@ movhi
 278:..\src/interruptions.c **** 
 279:..\src/interruptions.c ****     // Start ADC Conversion, SOC = 1
 280:..\src/interruptions.c **** 
 281:..\src/interruptions.c ****     ADC_SOC_Write(0x01); 
 526              		.loc 1 281 0
 527 004e 0120     		movs	r0, #1
 528 0050 FFF7FEFF 		bl	ADC_SOC_Write
 282:..\src/interruptions.c ****     
 283:..\src/interruptions.c ****     // Check Interrupt 
 284:..\src/interruptions.c **** 
 285:..\src/interruptions.c ****     if (interrupt_flag){
 529              		.loc 1 285 0
 530 0054 A64B     		ldr	r3, .L48+4
 531 0056 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 532 0058 002B     		cmp	r3, #0
 533 005a 04D0     		beq	.L34
 286:..\src/interruptions.c ****         interrupt_flag = FALSE;
 534              		.loc 1 286 0
 535 005c A44B     		ldr	r3, .L48+4
 536 005e 0022     		movs	r2, #0
 537 0060 1A70     		strb	r2, [r3]
 287:..\src/interruptions.c ****         interrupt_manager();
 538              		.loc 1 287 0
 539 0062 FFF7FEFF 		bl	interrupt_manager
 540              	.L34:
 288:..\src/interruptions.c ****     }
 289:..\src/interruptions.c ****        
 290:..\src/interruptions.c ****     //---------------------------------- Control Motor
 291:..\src/interruptions.c ****     // Control MOTOR_IDX motor (always active) according to motor PWM frequency
 292:..\src/interruptions.c ****     motor_control_generic(MOTOR_IDX);
 541              		.loc 1 292 0
 542 0066 07F58843 		add	r3, r7, #17408
 543 006a 03F15F03 		add	r3, r3, #95
 544 006e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 545 0070 1846     		mov	r0, r3
 546 0072 FFF7FEFF 		bl	motor_control_generic
 293:..\src/interruptions.c ****         
 294:..\src/interruptions.c ****     
 295:..\src/interruptions.c ****     // Check Interrupt 
 296:..\src/interruptions.c **** 
 297:..\src/interruptions.c ****     if (interrupt_flag){
 547              		.loc 1 297 0
 548 0076 9E4B     		ldr	r3, .L48+4
 549 0078 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 550 007a 002B     		cmp	r3, #0
 551 007c 04D0     		beq	.L35
 298:..\src/interruptions.c ****         interrupt_flag = FALSE;
 552              		.loc 1 298 0
 553 007e 9C4B     		ldr	r3, .L48+4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 16


 554 0080 0022     		movs	r2, #0
 555 0082 1A70     		strb	r2, [r3]
 299:..\src/interruptions.c ****         interrupt_manager();
 556              		.loc 1 299 0
 557 0084 FFF7FEFF 		bl	interrupt_manager
 558              	.L35:
 300:..\src/interruptions.c ****     }
 301:..\src/interruptions.c ****     
 302:..\src/interruptions.c ****     // Control 2nd motor (if necessary) according to motor PWM frequency
 303:..\src/interruptions.c ****     motor_control_generic(SECOND_MOTOR_IDX);
 559              		.loc 1 303 0
 560 0088 07F58843 		add	r3, r7, #17408
 561 008c 03F15E03 		add	r3, r3, #94
 562 0090 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 563 0092 1846     		mov	r0, r3
 564 0094 FFF7FEFF 		bl	motor_control_generic
 304:..\src/interruptions.c **** 
 305:..\src/interruptions.c ****     // Check Interrupt 
 306:..\src/interruptions.c **** 
 307:..\src/interruptions.c ****     if (interrupt_flag){
 565              		.loc 1 307 0
 566 0098 954B     		ldr	r3, .L48+4
 567 009a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 568 009c 002B     		cmp	r3, #0
 569 009e 04D0     		beq	.L36
 308:..\src/interruptions.c ****         interrupt_flag = FALSE;
 570              		.loc 1 308 0
 571 00a0 934B     		ldr	r3, .L48+4
 572 00a2 0022     		movs	r2, #0
 573 00a4 1A70     		strb	r2, [r3]
 309:..\src/interruptions.c ****         interrupt_manager();
 574              		.loc 1 309 0
 575 00a6 FFF7FEFF 		bl	interrupt_manager
 576              	.L36:
 310:..\src/interruptions.c ****     }
 311:..\src/interruptions.c ****            
 312:..\src/interruptions.c **** 
 313:..\src/interruptions.c ****     //---------------------------------- Read conversion buffer - LOCK function
 314:..\src/interruptions.c **** 
 315:..\src/interruptions.c ****     analog_read_end();
 577              		.loc 1 315 0
 578 00aa FFF7FEFF 		bl	analog_read_end
 316:..\src/interruptions.c **** 
 317:..\src/interruptions.c ****     if (interrupt_flag){
 579              		.loc 1 317 0
 580 00ae 904B     		ldr	r3, .L48+4
 581 00b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 582 00b2 002B     		cmp	r3, #0
 583 00b4 04D0     		beq	.L37
 318:..\src/interruptions.c ****         interrupt_flag = FALSE;
 584              		.loc 1 318 0
 585 00b6 8E4B     		ldr	r3, .L48+4
 586 00b8 0022     		movs	r2, #0
 587 00ba 1A70     		strb	r2, [r3]
 319:..\src/interruptions.c ****         interrupt_manager();
 588              		.loc 1 319 0
 589 00bc FFF7FEFF 		bl	interrupt_manager
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 17


 590              	.L37:
 320:..\src/interruptions.c ****     }
 321:..\src/interruptions.c ****     
 322:..\src/interruptions.c ****      
 323:..\src/interruptions.c ****     //---------------------------------- EMG history Update
 324:..\src/interruptions.c ****     if (c_mem.exp.record_EMG_history_on_SD){
 591              		.loc 1 324 0
 592 00c0 8C4B     		ldr	r3, .L48+8
 593 00c2 93F83432 		ldrb	r3, [r3, #564]	@ zero_extendqisi2
 594 00c6 002B     		cmp	r3, #0
 595 00c8 0AD0     		beq	.L38
 325:..\src/interruptions.c ****         
 326:..\src/interruptions.c ****         update_EMG_history();
 596              		.loc 1 326 0
 597 00ca FFF7FEFF 		bl	update_EMG_history
 327:..\src/interruptions.c **** 
 328:..\src/interruptions.c ****         // Check Interrupt 
 329:..\src/interruptions.c **** 
 330:..\src/interruptions.c ****         if (interrupt_flag){
 598              		.loc 1 330 0
 599 00ce 884B     		ldr	r3, .L48+4
 600 00d0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 601 00d2 002B     		cmp	r3, #0
 602 00d4 04D0     		beq	.L38
 331:..\src/interruptions.c ****             interrupt_flag = FALSE;
 603              		.loc 1 331 0
 604 00d6 864B     		ldr	r3, .L48+4
 605 00d8 0022     		movs	r2, #0
 606 00da 1A70     		strb	r2, [r3]
 332:..\src/interruptions.c ****             interrupt_manager();
 607              		.loc 1 332 0
 608 00dc FFF7FEFF 		bl	interrupt_manager
 609              	.L38:
 333:..\src/interruptions.c ****         }
 334:..\src/interruptions.c ****     }
 335:..\src/interruptions.c **** 
 336:..\src/interruptions.c ****     
 337:..\src/interruptions.c ****     //---------------------------------- Control Cycles Counter
 338:..\src/interruptions.c **** 
 339:..\src/interruptions.c ****     if (pos_reconstruct[c_mem.motor[0].encoder_line]){      // Once Motor 0 encoder line reading is
 610              		.loc 1 339 0
 611 00e0 844B     		ldr	r3, .L48+8
 612 00e2 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 613 00e6 1A46     		mov	r2, r3
 614 00e8 834B     		ldr	r3, .L48+12
 615 00ea 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 616 00ec 002B     		cmp	r3, #0
 617 00ee 01D0     		beq	.L39
 340:..\src/interruptions.c ****         cycles_counter_update();                            // Need at least one encoder to work
 618              		.loc 1 340 0
 619 00f0 FFF7FEFF 		bl	cycles_counter_update
 620              	.L39:
 341:..\src/interruptions.c ****     }
 342:..\src/interruptions.c **** 
 343:..\src/interruptions.c ****     // Check Cycles Interrupt 
 344:..\src/interruptions.c ****     
 345:..\src/interruptions.c ****     if (cycles_interrupt_flag){
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 18


 621              		.loc 1 345 0
 622 00f4 814B     		ldr	r3, .L48+16
 623 00f6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 624 00f8 002B     		cmp	r3, #0
 625 00fa 00F08380 		beq	.L40
 346:..\src/interruptions.c ****         cycles_interrupt_flag = FALSE;
 626              		.loc 1 346 0
 627 00fe 7F4B     		ldr	r3, .L48+16
 628 0100 0022     		movs	r2, #0
 629 0102 1A70     		strb	r2, [r3]
 347:..\src/interruptions.c **** 
 348:..\src/interruptions.c ****         // Cycles are written only every 120 seconds (CYCLES_TIMER interrupt)
 349:..\src/interruptions.c ****         // to save EEPROM writings (1M maximum)
 350:..\src/interruptions.c ****         if(can_write) {
 630              		.loc 1 350 0
 631 0104 7E4B     		ldr	r3, .L48+20
 632 0106 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 633 0108 002B     		cmp	r3, #0
 634 010a 54D0     		beq	.L41
 351:..\src/interruptions.c ****             cycles_status = PREPARE_DATA;
 635              		.loc 1 351 0
 636 010c 7D4B     		ldr	r3, .L48+24
 637 010e 0022     		movs	r2, #0
 638 0110 1A70     		strb	r2, [r3]
 352:..\src/interruptions.c ****             
 353:..\src/interruptions.c ****             //Update time variable
 354:..\src/interruptions.c ****             g_mem.cnt.total_runtime = g_mem.cnt.total_runtime + 120;  // Add 120 seconds.
 639              		.loc 1 354 0
 640 0112 7D4B     		ldr	r3, .L48+28
 641 0114 9B6D     		ldr	r3, [r3, #88]
 642 0116 7833     		adds	r3, r3, #120
 643 0118 7B4A     		ldr	r2, .L48+28
 644 011a 9365     		str	r3, [r2, #88]
 355:..\src/interruptions.c ****             
 356:..\src/interruptions.c ****             if (c_mem.exp.read_exp_port_flag == EXP_SD_RTC) {
 645              		.loc 1 356 0
 646 011c 754B     		ldr	r3, .L48+8
 647 011e 93F82632 		ldrb	r3, [r3, #550]	@ zero_extendqisi2
 648 0122 012B     		cmp	r3, #1
 649 0124 47D1     		bne	.L41
 357:..\src/interruptions.c ****                 
 358:..\src/interruptions.c ****                 store_RTC_current_time();
 650              		.loc 1 358 0
 651 0126 FFF7FEFF 		bl	store_RTC_current_time
 359:..\src/interruptions.c ****                 
 360:..\src/interruptions.c ****                 //Write in SD card
 361:..\src/interruptions.c ****                 prepare_SD_info(info_);
 652              		.loc 1 361 0
 653 012a 07F56A53 		add	r3, r7, #14976
 654 012e 03F11803 		add	r3, r3, #24
 655 0132 1846     		mov	r0, r3
 656 0134 FFF7FEFF 		bl	prepare_SD_info
 362:..\src/interruptions.c ****                 FS_Write(pFile, info_, strlen(info_));
 657              		.loc 1 362 0
 658 0138 744B     		ldr	r3, .L48+32
 659 013a 1C68     		ldr	r4, [r3]
 660 013c 07F56A53 		add	r3, r7, #14976
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 19


 661 0140 03F11803 		add	r3, r3, #24
 662 0144 1846     		mov	r0, r3
 663 0146 FFF7FEFF 		bl	strlen
 664 014a 0246     		mov	r2, r0
 665 014c 07F56A53 		add	r3, r7, #14976
 666 0150 03F11803 		add	r3, r3, #24
 667 0154 1946     		mov	r1, r3
 668 0156 2046     		mov	r0, r4
 669 0158 FFF7FEFF 		bl	FS_Write
 363:..\src/interruptions.c ****                 
 364:..\src/interruptions.c ****                 if (c_mem.exp.record_EMG_history_on_SD){
 670              		.loc 1 364 0
 671 015c 654B     		ldr	r3, .L48+8
 672 015e 93F83432 		ldrb	r3, [r3, #564]	@ zero_extendqisi2
 673 0162 002B     		cmp	r3, #0
 674 0164 27D0     		beq	.L41
 675              	.LBB2:
 365:..\src/interruptions.c ****                     char EMG_history_info_[15000] = "";
 676              		.loc 1 365 0
 677 0166 07F16003 		add	r3, r7, #96
 678 016a 603B     		subs	r3, r3, #96
 679 016c 0022     		movs	r2, #0
 680 016e 1A60     		str	r2, [r3]
 681 0170 0433     		adds	r3, r3, #4
 682 0172 43F69422 		movw	r2, #14996
 683 0176 0021     		movs	r1, #0
 684 0178 1846     		mov	r0, r3
 685 017a FFF7FEFF 		bl	memset
 366:..\src/interruptions.c ****                     strcpy(EMG_history_info_, "");
 686              		.loc 1 366 0
 687 017e 644B     		ldr	r3, .L48+36
 688 0180 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 689 0182 07F16003 		add	r3, r7, #96
 690 0186 603B     		subs	r3, r3, #96
 691 0188 1A70     		strb	r2, [r3]
 367:..\src/interruptions.c ****                     prepare_SD_EMG_history(EMG_history_info_);
 692              		.loc 1 367 0
 693 018a 07F16003 		add	r3, r7, #96
 694 018e 603B     		subs	r3, r3, #96
 695 0190 1846     		mov	r0, r3
 696 0192 FFF7FEFF 		bl	prepare_SD_EMG_history
 368:..\src/interruptions.c ****                     FS_Write(pEMGHFile, EMG_history_info_, strlen(EMG_history_info_));
 697              		.loc 1 368 0
 698 0196 5F4B     		ldr	r3, .L48+40
 699 0198 1C68     		ldr	r4, [r3]
 700 019a 07F16003 		add	r3, r7, #96
 701 019e 603B     		subs	r3, r3, #96
 702 01a0 1846     		mov	r0, r3
 703 01a2 FFF7FEFF 		bl	strlen
 704 01a6 0246     		mov	r2, r0
 705 01a8 07F16003 		add	r3, r7, #96
 706 01ac 603B     		subs	r3, r3, #96
 707 01ae 1946     		mov	r1, r3
 708 01b0 2046     		mov	r0, r4
 709 01b2 FFF7FEFF 		bl	FS_Write
 710              	.L41:
 711              	.LBE2:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 20


 369:..\src/interruptions.c ****                 }
 370:..\src/interruptions.c ****             }
 371:..\src/interruptions.c ****         }
 372:..\src/interruptions.c ****         
 373:..\src/interruptions.c ****         // Deactivate the motor just for the time data are written in the EEPROM
 374:..\src/interruptions.c ****         if (cycles_status == WRITE_CYCLES || cycles_status == WAIT_QUERY){
 712              		.loc 1 374 0
 713 01b6 534B     		ldr	r3, .L48+24
 714 01b8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 715 01ba 012B     		cmp	r3, #1
 716 01bc 03D0     		beq	.L42
 717              		.loc 1 374 0 is_stmt 0 discriminator 1
 718 01be 514B     		ldr	r3, .L48+24
 719 01c0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 720 01c2 022B     		cmp	r3, #2
 721 01c4 0DD1     		bne	.L43
 722              	.L42:
 375:..\src/interruptions.c ****             // Deactivate motors
 376:..\src/interruptions.c ****             enable_motor(0, 0x00); 
 723              		.loc 1 376 0 is_stmt 1
 724 01c6 0021     		movs	r1, #0
 725 01c8 0020     		movs	r0, #0
 726 01ca FFF7FEFF 		bl	enable_motor
 377:..\src/interruptions.c ****             if (g_mem.dev.use_2nd_motor_flag == TRUE) {
 727              		.loc 1 377 0
 728 01ce 4E4B     		ldr	r3, .L48+28
 729 01d0 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 730 01d4 012B     		cmp	r3, #1
 731 01d6 15D1     		bne	.L40
 378:..\src/interruptions.c ****                 enable_motor(1, 0x00); 
 732              		.loc 1 378 0
 733 01d8 0021     		movs	r1, #0
 734 01da 0120     		movs	r0, #1
 735 01dc FFF7FEFF 		bl	enable_motor
 377:..\src/interruptions.c ****             if (g_mem.dev.use_2nd_motor_flag == TRUE) {
 736              		.loc 1 377 0
 737 01e0 10E0     		b	.L40
 738              	.L43:
 379:..\src/interruptions.c ****             }
 380:..\src/interruptions.c ****         }
 381:..\src/interruptions.c ****         else {
 382:..\src/interruptions.c ****             // Activate/Deactivate motors
 383:..\src/interruptions.c ****             enable_motor(0, g_ref[0].onoff); 
 739              		.loc 1 383 0
 740 01e2 4D4B     		ldr	r3, .L48+44
 741 01e4 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 742 01e6 1946     		mov	r1, r3
 743 01e8 0020     		movs	r0, #0
 744 01ea FFF7FEFF 		bl	enable_motor
 384:..\src/interruptions.c ****             if (g_mem.dev.use_2nd_motor_flag == TRUE) {
 745              		.loc 1 384 0
 746 01ee 464B     		ldr	r3, .L48+28
 747 01f0 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 748 01f4 012B     		cmp	r3, #1
 749 01f6 05D1     		bne	.L40
 385:..\src/interruptions.c ****                 enable_motor(1, g_ref[1].onoff); 
 750              		.loc 1 385 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 21


 751 01f8 474B     		ldr	r3, .L48+44
 752 01fa 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 753 01fc 1946     		mov	r1, r3
 754 01fe 0120     		movs	r0, #1
 755 0200 FFF7FEFF 		bl	enable_motor
 756              	.L40:
 386:..\src/interruptions.c ****             }
 387:..\src/interruptions.c ****         }
 388:..\src/interruptions.c ****     }
 389:..\src/interruptions.c ****     
 390:..\src/interruptions.c ****     // Check Interrupt 
 391:..\src/interruptions.c ****     
 392:..\src/interruptions.c ****     if (interrupt_flag){
 757              		.loc 1 392 0
 758 0204 3A4B     		ldr	r3, .L48+4
 759 0206 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 760 0208 002B     		cmp	r3, #0
 761 020a 04D0     		beq	.L45
 393:..\src/interruptions.c ****         interrupt_flag = FALSE;
 762              		.loc 1 393 0
 763 020c 384B     		ldr	r3, .L48+4
 764 020e 0022     		movs	r2, #0
 765 0210 1A70     		strb	r2, [r3]
 394:..\src/interruptions.c ****         interrupt_manager();
 766              		.loc 1 394 0
 767 0212 FFF7FEFF 		bl	interrupt_manager
 768              	.L45:
 395:..\src/interruptions.c ****     }
 396:..\src/interruptions.c ****     
 397:..\src/interruptions.c ****     
 398:..\src/interruptions.c ****     //---------------------------------- Check battery
 399:..\src/interruptions.c **** /*
 400:..\src/interruptions.c ****     // Divider 10, freq = 500 Hz
 401:..\src/interruptions.c ****     if (counter_tension_func == CALIBRATION_DIV) {
 402:..\src/interruptions.c ****         battery_management();   
 403:..\src/interruptions.c ****         counter_tension_func = 0;
 404:..\src/interruptions.c ****     }
 405:..\src/interruptions.c ****     counter_tension_func++;
 406:..\src/interruptions.c **** 
 407:..\src/interruptions.c ****     // Check Interrupt 
 408:..\src/interruptions.c ****     
 409:..\src/interruptions.c ****     if (interrupt_flag){
 410:..\src/interruptions.c ****         interrupt_flag = FALSE;
 411:..\src/interruptions.c ****         interrupt_manager();
 412:..\src/interruptions.c ****     }
 413:..\src/interruptions.c **** */   
 414:..\src/interruptions.c ****     //---------------------------------- Read IMUs
 415:..\src/interruptions.c ****     if (c_mem.imu.read_imu_flag) {
 769              		.loc 1 415 0
 770 0216 374B     		ldr	r3, .L48+8
 771 0218 93F80032 		ldrb	r3, [r3, #512]	@ zero_extendqisi2
 772 021c 002B     		cmp	r3, #0
 773 021e 0AD0     		beq	.L46
 416:..\src/interruptions.c ****         ReadAllIMUs();      // IMU reading is atomic, no RS485 request is handled
 774              		.loc 1 416 0
 775 0220 FFF7FEFF 		bl	ReadAllIMUs
 417:..\src/interruptions.c ****         
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 22


 418:..\src/interruptions.c ****         if (interrupt_flag){
 776              		.loc 1 418 0
 777 0224 324B     		ldr	r3, .L48+4
 778 0226 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 779 0228 002B     		cmp	r3, #0
 780 022a 04D0     		beq	.L46
 419:..\src/interruptions.c ****             interrupt_flag = FALSE;
 781              		.loc 1 419 0
 782 022c 304B     		ldr	r3, .L48+4
 783 022e 0022     		movs	r2, #0
 784 0230 1A70     		strb	r2, [r3]
 420:..\src/interruptions.c ****             interrupt_manager();
 785              		.loc 1 420 0
 786 0232 FFF7FEFF 		bl	interrupt_manager
 787              	.L46:
 421:..\src/interruptions.c ****         }
 422:..\src/interruptions.c ****     }
 423:..\src/interruptions.c ****    
 424:..\src/interruptions.c ****     //---------------------------------- Update States
 425:..\src/interruptions.c ****     
 426:..\src/interruptions.c ****     // Load k-1 state
 427:..\src/interruptions.c ****     memcpy( &g_adc_measOld, &g_adc_meas, sizeof(g_adc_meas) );
 788              		.loc 1 427 0
 789 0236 394A     		ldr	r2, .L48+48
 790 0238 394B     		ldr	r3, .L48+52
 791 023a 1446     		mov	r4, r2
 792 023c 1D46     		mov	r5, r3
 793 023e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 794 0240 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 795 0242 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 796 0244 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 797 0246 95E80300 		ldmia	r5, {r0, r1}
 798 024a 84E80300 		stmia	r4, {r0, r1}
 428:..\src/interruptions.c ****     memcpy( &g_measOld, &g_meas, sizeof(g_meas) );
 799              		.loc 1 428 0
 800 024e 354A     		ldr	r2, .L48+56
 801 0250 354B     		ldr	r3, .L48+60
 802 0252 1046     		mov	r0, r2
 803 0254 1946     		mov	r1, r3
 804 0256 6823     		movs	r3, #104
 805 0258 1A46     		mov	r2, r3
 806 025a FFF7FEFF 		bl	memcpy
 429:..\src/interruptions.c ****     memcpy( &g_refOld, &g_ref, sizeof(g_ref) );
 807              		.loc 1 429 0
 808 025e 334A     		ldr	r2, .L48+64
 809 0260 2D4B     		ldr	r3, .L48+44
 810 0262 1446     		mov	r4, r2
 811 0264 1D46     		mov	r5, r3
 812 0266 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 813 0268 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 814 026a 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 815 026e 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 430:..\src/interruptions.c **** 
 431:..\src/interruptions.c ****     // Load k+1 state        
 432:..\src/interruptions.c ****     memcpy( &g_ref, &g_refNew, sizeof(g_ref) );
 816              		.loc 1 432 0
 817 0272 294A     		ldr	r2, .L48+44
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 23


 818 0274 2E4B     		ldr	r3, .L48+68
 819 0276 1446     		mov	r4, r2
 820 0278 1D46     		mov	r5, r3
 821 027a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 822 027c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 823 027e 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 824 0282 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 433:..\src/interruptions.c ****     memcpy( &g_imu, &g_imuNew, sizeof(g_imu) );
 825              		.loc 1 433 0
 826 0286 2B4A     		ldr	r2, .L48+72
 827 0288 2B4B     		ldr	r3, .L48+76
 828 028a 1046     		mov	r0, r2
 829 028c 1946     		mov	r1, r3
 830 028e C823     		movs	r3, #200
 831 0290 1A46     		mov	r2, r3
 832 0292 FFF7FEFF 		bl	memcpy
 434:..\src/interruptions.c ****                 
 435:..\src/interruptions.c ****     if (interrupt_flag){
 833              		.loc 1 435 0
 834 0296 164B     		ldr	r3, .L48+4
 835 0298 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 836 029a 002B     		cmp	r3, #0
 837 029c 04D0     		beq	.L47
 436:..\src/interruptions.c ****         interrupt_flag = FALSE;
 838              		.loc 1 436 0
 839 029e 144B     		ldr	r3, .L48+4
 840 02a0 0022     		movs	r2, #0
 841 02a2 1A70     		strb	r2, [r3]
 437:..\src/interruptions.c ****         interrupt_manager();
 842              		.loc 1 437 0
 843 02a4 FFF7FEFF 		bl	interrupt_manager
 844              	.L47:
 438:..\src/interruptions.c ****     }
 439:..\src/interruptions.c **** 
 440:..\src/interruptions.c ****     timer_value = (uint16)MY_TIMER_ReadCounter();
 845              		.loc 1 440 0
 846 02a8 FFF7FEFF 		bl	MY_TIMER_ReadCounter
 847 02ac 0346     		mov	r3, r0
 848 02ae 1A46     		mov	r2, r3
 849 02b0 224B     		ldr	r3, .L48+80
 850 02b2 1A80     		strh	r2, [r3]	@ movhi
 441:..\src/interruptions.c ****     cycle_time = ((float)(timer_value0 - timer_value)/1000000.0);
 851              		.loc 1 441 0
 852 02b4 0D4B     		ldr	r3, .L48
 853 02b6 1B88     		ldrh	r3, [r3]
 854 02b8 1A46     		mov	r2, r3
 855 02ba 204B     		ldr	r3, .L48+80
 856 02bc 1B88     		ldrh	r3, [r3]
 857 02be D31A     		subs	r3, r2, r3
 858 02c0 1846     		mov	r0, r3
 859 02c2 FFF7FEFF 		bl	__aeabi_i2f
 860 02c6 0346     		mov	r3, r0
 861 02c8 1D49     		ldr	r1, .L48+84
 862 02ca 1846     		mov	r0, r3
 863 02cc FFF7FEFF 		bl	__aeabi_fdiv
 864 02d0 0346     		mov	r3, r0
 865 02d2 1A46     		mov	r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 24


 866 02d4 1B4B     		ldr	r3, .L48+88
 867 02d6 1A60     		str	r2, [r3]	@ float
 442:..\src/interruptions.c ****     MY_TIMER_REG_Write(0x01);   // reset timer
 868              		.loc 1 442 0
 869 02d8 0120     		movs	r0, #1
 870 02da FFF7FEFF 		bl	MY_TIMER_REG_Write
 443:..\src/interruptions.c **** 
 444:..\src/interruptions.c **** }
 871              		.loc 1 444 0
 872 02de 00BF     		nop
 873 02e0 07F58847 		add	r7, r7, #17408
 874 02e4 6037     		adds	r7, r7, #96
 875              		.cfi_def_cfa_offset 16
 876 02e6 BD46     		mov	sp, r7
 877              		.cfi_def_cfa_register 13
 878              		@ sp needed
 879 02e8 B0BD     		pop	{r4, r5, r7, pc}
 880              	.L49:
 881 02ea 00BF     		.align	2
 882              	.L48:
 883 02ec 00000000 		.word	timer_value0
 884 02f0 00000000 		.word	interrupt_flag
 885 02f4 00000000 		.word	c_mem
 886 02f8 00000000 		.word	pos_reconstruct
 887 02fc 00000000 		.word	cycles_interrupt_flag
 888 0300 00000000 		.word	can_write
 889 0304 00000000 		.word	cycles_status
 890 0308 00000000 		.word	g_mem
 891 030c 00000000 		.word	pFile
 892 0310 20000000 		.word	.LC0
 893 0314 00000000 		.word	pEMGHFile
 894 0318 00000000 		.word	g_ref
 895 031c 00000000 		.word	g_adc_measOld
 896 0320 00000000 		.word	g_adc_meas
 897 0324 00000000 		.word	g_measOld
 898 0328 00000000 		.word	g_meas
 899 032c 00000000 		.word	g_refOld
 900 0330 00000000 		.word	g_refNew
 901 0334 00000000 		.word	g_imu
 902 0338 00000000 		.word	g_imuNew
 903 033c 00000000 		.word	timer_value
 904 0340 00247449 		.word	1232348160
 905 0344 00000000 		.word	cycle_time
 906              		.cfi_endproc
 907              	.LFE67:
 908              		.size	function_scheduler, .-function_scheduler
 909              		.section	.text.compute_reference,"ax",%progbits
 910              		.align	2
 911              		.global	compute_reference
 912              		.thumb
 913              		.thumb_func
 914              		.type	compute_reference, %function
 915              	compute_reference:
 916              	.LFB68:
 445:..\src/interruptions.c **** 
 446:..\src/interruptions.c **** //==============================================================================
 447:..\src/interruptions.c **** //                                                       COMPUTE MOTOR REFERENCE
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 25


 448:..\src/interruptions.c **** //==============================================================================
 449:..\src/interruptions.c **** void compute_reference(uint8 motor_idx, struct st_ref* st_ref_p, struct st_ref* st_refOld_p) {
 917              		.loc 1 449 0
 918              		.cfi_startproc
 919              		@ args = 0, pretend = 0, frame = 40
 920              		@ frame_needed = 1, uses_anonymous_args = 0
 921 0000 80B5     		push	{r7, lr}
 922              		.cfi_def_cfa_offset 8
 923              		.cfi_offset 7, -8
 924              		.cfi_offset 14, -4
 925 0002 8CB0     		sub	sp, sp, #48
 926              		.cfi_def_cfa_offset 56
 927 0004 02AF     		add	r7, sp, #8
 928              		.cfi_def_cfa 7, 48
 929 0006 0346     		mov	r3, r0
 930 0008 B960     		str	r1, [r7, #8]
 931 000a 7A60     		str	r2, [r7, #4]
 932 000c FB73     		strb	r3, [r7, #15]
 450:..\src/interruptions.c ****     
 451:..\src/interruptions.c ****     int32 CYDATA handle_value;
 452:..\src/interruptions.c ****     int32 CYDATA err_emg_1, err_emg_2;
 453:..\src/interruptions.c ****     struct st_motor* MOT = &c_mem.motor[motor_idx];      // SoftHand default motor
 933              		.loc 1 453 0
 934 000e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 935 0010 1346     		mov	r3, r2
 936 0012 DB00     		lsls	r3, r3, #3
 937 0014 9B1A     		subs	r3, r3, r2
 938 0016 1B01     		lsls	r3, r3, #4
 939 0018 B033     		adds	r3, r3, #176
 940 001a A74A     		ldr	r2, .L114
 941 001c 1344     		add	r3, r3, r2
 942 001e 3B62     		str	r3, [r7, #32]
 454:..\src/interruptions.c ****     uint8 ENC_L = MOT->encoder_line;          // Associated encoder line
 943              		.loc 1 454 0
 944 0020 3B6A     		ldr	r3, [r7, #32]
 945 0022 93F86030 		ldrb	r3, [r3, #96]
 946 0026 FB77     		strb	r3, [r7, #31]
 455:..\src/interruptions.c ****     
 456:..\src/interruptions.c ****     static uint8 current_emg[NUM_OF_MOTORS] = {0, 0};   // 0 NONE
 457:..\src/interruptions.c ****                                                         // 1 EMG 1
 458:..\src/interruptions.c ****                                                         // 2 EMG 2
 459:..\src/interruptions.c ****                                                         // wait for both to get down
 460:..\src/interruptions.c ****     
 461:..\src/interruptions.c ****     err_emg_1 = g_adc_meas.emg[0] - c_mem.emg.emg_threshold[0];
 947              		.loc 1 461 0
 948 0028 A44B     		ldr	r3, .L114+4
 949 002a 1B68     		ldr	r3, [r3]
 950 002c A24A     		ldr	r2, .L114
 951 002e B2F8F021 		ldrh	r2, [r2, #496]
 952 0032 9B1A     		subs	r3, r3, r2
 953 0034 BB61     		str	r3, [r7, #24]
 462:..\src/interruptions.c ****     err_emg_2 = g_adc_meas.emg[1] - c_mem.emg.emg_threshold[1];
 954              		.loc 1 462 0
 955 0036 A14B     		ldr	r3, .L114+4
 956 0038 5B68     		ldr	r3, [r3, #4]
 957 003a 9F4A     		ldr	r2, .L114
 958 003c B2F8F221 		ldrh	r2, [r2, #498]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 26


 959 0040 9B1A     		subs	r3, r3, r2
 960 0042 7B61     		str	r3, [r7, #20]
 463:..\src/interruptions.c ****     
 464:..\src/interruptions.c ****      // =========================== POSITION INPUT ==============================            
 465:..\src/interruptions.c ****     switch(MOT->input_mode) {
 961              		.loc 1 465 0
 962 0044 3B6A     		ldr	r3, [r7, #32]
 963 0046 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
 964 004a 013B     		subs	r3, r3, #1
 965 004c 062B     		cmp	r3, #6
 966 004e 00F25182 		bhi	.L106
 967 0052 01A2     		adr	r2, .L53
 968 0054 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 969              		.p2align 2
 970              	.L53:
 971 0058 75000000 		.word	.L52+1
 972 005c 21020000 		.word	.L54+1
 973 0060 C9020000 		.word	.L55+1
 974 0064 31030000 		.word	.L56+1
 975 0068 11040000 		.word	.L57+1
 976 006c 4D010000 		.word	.L58+1
 977 0070 5B020000 		.word	.L59+1
 978              		.p2align 1
 979              	.L52:
 466:..\src/interruptions.c ****         case INPUT_MODE_ENCODER3:
 467:..\src/interruptions.c **** 
 468:..\src/interruptions.c ****             // Calculate handle value based on position of handle in the
 469:..\src/interruptions.c ****             // sensor chain and multiplication factor between handle and motor position
 470:..\src/interruptions.c ****             if (c_mem.enc[ENC_L].double_encoder_on_off) 
 980              		.loc 1 470 0
 981 0074 FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 982 0076 9049     		ldr	r1, .L114
 983 0078 1346     		mov	r3, r2
 984 007a 5B00     		lsls	r3, r3, #1
 985 007c 1344     		add	r3, r3, r2
 986 007e 1B01     		lsls	r3, r3, #4
 987 0080 0B44     		add	r3, r3, r1
 988 0082 03F5D873 		add	r3, r3, #432
 989 0086 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 990 0088 002B     		cmp	r3, #0
 991 008a 19D0     		beq	.L60
 471:..\src/interruptions.c ****                 handle_value = (g_meas[ENC_L].pos[2] * c_mem.enc[ENC_L].motor_handle_ratio) + MOT->
 992              		.loc 1 471 0
 993 008c FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 994 008e 8C4A     		ldr	r2, .L114+8
 995 0090 3421     		movs	r1, #52
 996 0092 01FB03F3 		mul	r3, r1, r3
 997 0096 1344     		add	r3, r3, r2
 998 0098 0833     		adds	r3, r3, #8
 999 009a 1968     		ldr	r1, [r3]
 1000 009c FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 1001 009e 8648     		ldr	r0, .L114
 1002 00a0 1346     		mov	r3, r2
 1003 00a2 5B00     		lsls	r3, r3, #1
 1004 00a4 1344     		add	r3, r3, r2
 1005 00a6 1B01     		lsls	r3, r3, #4
 1006 00a8 0344     		add	r3, r3, r0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 27


 1007 00aa 03F5DA73 		add	r3, r3, #436
 1008 00ae 93F90030 		ldrsb	r3, [r3]
 1009 00b2 03FB01F2 		mul	r2, r3, r1
 1010 00b6 3B6A     		ldr	r3, [r7, #32]
 1011 00b8 5B6B     		ldr	r3, [r3, #52]
 1012 00ba 1344     		add	r3, r3, r2
 1013 00bc 7B62     		str	r3, [r7, #36]
 1014 00be 18E0     		b	.L61
 1015              	.L60:
 472:..\src/interruptions.c ****             else
 473:..\src/interruptions.c ****                 handle_value = (g_meas[ENC_L].pos[1] * c_mem.enc[ENC_L].motor_handle_ratio) + MOT->
 1016              		.loc 1 473 0
 1017 00c0 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 1018 00c2 7F4A     		ldr	r2, .L114+8
 1019 00c4 3421     		movs	r1, #52
 1020 00c6 01FB03F3 		mul	r3, r1, r3
 1021 00ca 1344     		add	r3, r3, r2
 1022 00cc 0433     		adds	r3, r3, #4
 1023 00ce 1968     		ldr	r1, [r3]
 1024 00d0 FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 1025 00d2 7948     		ldr	r0, .L114
 1026 00d4 1346     		mov	r3, r2
 1027 00d6 5B00     		lsls	r3, r3, #1
 1028 00d8 1344     		add	r3, r3, r2
 1029 00da 1B01     		lsls	r3, r3, #4
 1030 00dc 0344     		add	r3, r3, r0
 1031 00de 03F5DA73 		add	r3, r3, #436
 1032 00e2 93F90030 		ldrsb	r3, [r3]
 1033 00e6 03FB01F2 		mul	r2, r3, r1
 1034 00ea 3B6A     		ldr	r3, [r7, #32]
 1035 00ec 5B6B     		ldr	r3, [r3, #52]
 1036 00ee 1344     		add	r3, r3, r2
 1037 00f0 7B62     		str	r3, [r7, #36]
 1038              	.L61:
 474:..\src/interruptions.c ****             
 475:..\src/interruptions.c **** 
 476:..\src/interruptions.c ****             // Read handle and use it as reference for the motor
 477:..\src/interruptions.c ****             if (((handle_value - st_refOld_p->pos) > MOT->max_step_pos) && (MOT->max_step_pos != 0)
 1039              		.loc 1 477 0
 1040 00f2 7B68     		ldr	r3, [r7, #4]
 1041 00f4 1B68     		ldr	r3, [r3]
 1042 00f6 7A6A     		ldr	r2, [r7, #36]
 1043 00f8 D21A     		subs	r2, r2, r3
 1044 00fa 3B6A     		ldr	r3, [r7, #32]
 1045 00fc 1B6C     		ldr	r3, [r3, #64]
 1046 00fe 9A42     		cmp	r2, r3
 1047 0100 0BDD     		ble	.L62
 1048              		.loc 1 477 0 is_stmt 0 discriminator 1
 1049 0102 3B6A     		ldr	r3, [r7, #32]
 1050 0104 1B6C     		ldr	r3, [r3, #64]
 1051 0106 002B     		cmp	r3, #0
 1052 0108 07D0     		beq	.L62
 478:..\src/interruptions.c ****                 st_ref_p->pos += MOT->max_step_pos;
 1053              		.loc 1 478 0 is_stmt 1
 1054 010a BB68     		ldr	r3, [r7, #8]
 1055 010c 1A68     		ldr	r2, [r3]
 1056 010e 3B6A     		ldr	r3, [r7, #32]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 28


 1057 0110 1B6C     		ldr	r3, [r3, #64]
 1058 0112 1A44     		add	r2, r2, r3
 1059 0114 BB68     		ldr	r3, [r7, #8]
 1060 0116 1A60     		str	r2, [r3]
 1061 0118 17E0     		b	.L63
 1062              	.L62:
 479:..\src/interruptions.c ****             else {
 480:..\src/interruptions.c ****                 if (((handle_value - st_refOld_p->pos) < MOT->max_step_neg) && (MOT->max_step_neg !
 1063              		.loc 1 480 0
 1064 011a 7B68     		ldr	r3, [r7, #4]
 1065 011c 1B68     		ldr	r3, [r3]
 1066 011e 7A6A     		ldr	r2, [r7, #36]
 1067 0120 D21A     		subs	r2, r2, r3
 1068 0122 3B6A     		ldr	r3, [r7, #32]
 1069 0124 DB6B     		ldr	r3, [r3, #60]
 1070 0126 9A42     		cmp	r2, r3
 1071 0128 0BDA     		bge	.L64
 1072              		.loc 1 480 0 is_stmt 0 discriminator 1
 1073 012a 3B6A     		ldr	r3, [r7, #32]
 1074 012c DB6B     		ldr	r3, [r3, #60]
 1075 012e 002B     		cmp	r3, #0
 1076 0130 07D0     		beq	.L64
 481:..\src/interruptions.c ****                     st_ref_p->pos += MOT->max_step_neg;
 1077              		.loc 1 481 0 is_stmt 1
 1078 0132 BB68     		ldr	r3, [r7, #8]
 1079 0134 1A68     		ldr	r2, [r3]
 1080 0136 3B6A     		ldr	r3, [r7, #32]
 1081 0138 DB6B     		ldr	r3, [r3, #60]
 1082 013a 1A44     		add	r2, r2, r3
 1083 013c BB68     		ldr	r3, [r7, #8]
 1084 013e 1A60     		str	r2, [r3]
 1085 0140 03E0     		b	.L63
 1086              	.L64:
 482:..\src/interruptions.c ****                 else
 483:..\src/interruptions.c ****                     st_ref_p->pos = handle_value;
 1087              		.loc 1 483 0
 1088 0142 BB68     		ldr	r3, [r7, #8]
 1089 0144 7A6A     		ldr	r2, [r7, #36]
 1090 0146 1A60     		str	r2, [r3]
 484:..\src/interruptions.c ****             }
 485:..\src/interruptions.c ****             break;
 1091              		.loc 1 485 0
 1092 0148 DFE1     		b	.L65
 1093              	.L63:
 1094 014a DEE1     		b	.L65
 1095              	.L58:
 486:..\src/interruptions.c ****         
 487:..\src/interruptions.c ****         case INPUT_MODE_JOYSTICK:
 488:..\src/interruptions.c ****             
 489:..\src/interruptions.c ****             if (c_mem.dev.use_2nd_motor_flag == FALSE){
 1096              		.loc 1 489 0
 1097 014c 5A4B     		ldr	r3, .L114
 1098 014e 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 1099 0152 002B     		cmp	r3, #0
 1100 0154 57D1     		bne	.L66
 490:..\src/interruptions.c ****                 // Code for single motor devices. Use only up/down direction to give speed referenc
 491:..\src/interruptions.c ****                 st_ref_p->pos = st_refOld_p->pos;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 29


 1101              		.loc 1 491 0
 1102 0156 7B68     		ldr	r3, [r7, #4]
 1103 0158 1A68     		ldr	r2, [r3]
 1104 015a BB68     		ldr	r3, [r7, #8]
 1105 015c 1A60     		str	r2, [r3]
 492:..\src/interruptions.c ****                 if(!(g_adc_meas.joystick[0] > 700)) {
 1106              		.loc 1 492 0
 1107 015e 574B     		ldr	r3, .L114+4
 1108 0160 1B6A     		ldr	r3, [r3, #32]
 1109 0162 B3F52F7F 		cmp	r3, #700
 1110 0166 45DC     		bgt	.L67
 1111              	.LBB3:
 493:..\src/interruptions.c ****                     int32 CYDATA err_joy_1 = g_adc_meas.joystick[0] - c_mem.JOY_spec.joystick_thres
 1112              		.loc 1 493 0
 1113 0168 544B     		ldr	r3, .L114+4
 1114 016a 1B6A     		ldr	r3, [r3, #32]
 1115 016c 524A     		ldr	r2, .L114
 1116 016e B2F9B222 		ldrsh	r2, [r2, #690]
 1117 0172 9B1A     		subs	r3, r3, r2
 1118 0174 3B61     		str	r3, [r7, #16]
 494:..\src/interruptions.c **** 
 495:..\src/interruptions.c ****                     if(g_adc_meas.joystick[0] > c_mem.JOY_spec.joystick_threshold) {     //both mot
 1119              		.loc 1 495 0
 1120 0176 514B     		ldr	r3, .L114+4
 1121 0178 1B6A     		ldr	r3, [r3, #32]
 1122 017a 4F4A     		ldr	r2, .L114
 1123 017c B2F9B222 		ldrsh	r2, [r2, #690]
 1124 0180 9342     		cmp	r3, r2
 1125 0182 13DD     		ble	.L68
 496:..\src/interruptions.c ****                         st_ref_p->pos += ((int32) err_joy_1 * c_mem.JOY_spec.joystick_closure_speed
 1126              		.loc 1 496 0
 1127 0184 BB68     		ldr	r3, [r7, #8]
 1128 0186 1A68     		ldr	r2, [r3]
 1129 0188 4B4B     		ldr	r3, .L114
 1130 018a B3F8B032 		ldrh	r3, [r3, #688]
 1131 018e 1946     		mov	r1, r3
 1132 0190 3B69     		ldr	r3, [r7, #16]
 1133 0192 03FB01F1 		mul	r1, r3, r1
 1134 0196 484B     		ldr	r3, .L114
 1135 0198 B3F9B232 		ldrsh	r3, [r3, #690]
 1136 019c C3F58063 		rsb	r3, r3, #1024
 1137 01a0 91FBF3F3 		sdiv	r3, r1, r3
 1138 01a4 1A44     		add	r2, r2, r3
 1139 01a6 BB68     		ldr	r3, [r7, #8]
 1140 01a8 1A60     		str	r2, [r3]
 1141              	.LBE3:
 497:..\src/interruptions.c ****                     }
 498:..\src/interruptions.c ****                     else {
 499:..\src/interruptions.c ****                         err_joy_1 = g_adc_meas.joystick[0] + c_mem.JOY_spec.joystick_threshold;
 500:..\src/interruptions.c ****                         if(g_adc_meas.joystick[0] < -c_mem.JOY_spec.joystick_threshold) {  //both m
 501:..\src/interruptions.c ****                             st_ref_p->pos += ((int32) err_joy_1 * c_mem.JOY_spec.joystick_closure_s
 502:..\src/interruptions.c ****                         }
 503:..\src/interruptions.c ****                     }
 504:..\src/interruptions.c ****                 }
 505:..\src/interruptions.c ****                 else {  //The button is pressed and the motor reference is gradually set to zero 
 506:..\src/interruptions.c ****                     st_ref_p->pos -= (int32) g_mem.JOY_spec.joystick_closure_speed;
 507:..\src/interruptions.c ****                 }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 30


 508:..\src/interruptions.c ****             }
 509:..\src/interruptions.c ****             else {
 510:..\src/interruptions.c ****                 // Code for two motors devices. Use both direction to give speed references
 511:..\src/interruptions.c ****                 if (c_mem.dev.dev_type == SOFTHAND_2_MOTORS){
 512:..\src/interruptions.c ****                     compute_SoftHand_2_motors_joystick_reference(motor_idx, st_ref_p, st_refOld_p);
 513:..\src/interruptions.c ****                 }
 514:..\src/interruptions.c ****             }
 515:..\src/interruptions.c ****             break;
 1142              		.loc 1 515 0
 1143 01aa A5E1     		b	.L107
 1144              	.L68:
 1145              	.LBB4:
 499:..\src/interruptions.c ****                         if(g_adc_meas.joystick[0] < -c_mem.JOY_spec.joystick_threshold) {  //both m
 1146              		.loc 1 499 0
 1147 01ac 434B     		ldr	r3, .L114+4
 1148 01ae 1B6A     		ldr	r3, [r3, #32]
 1149 01b0 414A     		ldr	r2, .L114
 1150 01b2 B2F9B222 		ldrsh	r2, [r2, #690]
 1151 01b6 1344     		add	r3, r3, r2
 1152 01b8 3B61     		str	r3, [r7, #16]
 500:..\src/interruptions.c ****                             st_ref_p->pos += ((int32) err_joy_1 * c_mem.JOY_spec.joystick_closure_s
 1153              		.loc 1 500 0
 1154 01ba 404B     		ldr	r3, .L114+4
 1155 01bc 1A6A     		ldr	r2, [r3, #32]
 1156 01be 3E4B     		ldr	r3, .L114
 1157 01c0 B3F9B232 		ldrsh	r3, [r3, #690]
 1158 01c4 5B42     		negs	r3, r3
 1159 01c6 9A42     		cmp	r2, r3
 1160 01c8 80F29681 		bge	.L107
 501:..\src/interruptions.c ****                         }
 1161              		.loc 1 501 0
 1162 01cc BB68     		ldr	r3, [r7, #8]
 1163 01ce 1A68     		ldr	r2, [r3]
 1164 01d0 394B     		ldr	r3, .L114
 1165 01d2 B3F8B032 		ldrh	r3, [r3, #688]
 1166 01d6 1946     		mov	r1, r3
 1167 01d8 3B69     		ldr	r3, [r7, #16]
 1168 01da 03FB01F1 		mul	r1, r3, r1
 1169 01de 364B     		ldr	r3, .L114
 1170 01e0 B3F9B232 		ldrsh	r3, [r3, #690]
 1171 01e4 C3F58063 		rsb	r3, r3, #1024
 1172 01e8 91FBF3F3 		sdiv	r3, r1, r3
 1173 01ec 1A44     		add	r2, r2, r3
 1174 01ee BB68     		ldr	r3, [r7, #8]
 1175 01f0 1A60     		str	r2, [r3]
 1176              	.LBE4:
 1177              		.loc 1 515 0
 1178 01f2 81E1     		b	.L107
 1179              	.L67:
 506:..\src/interruptions.c ****                 }
 1180              		.loc 1 506 0
 1181 01f4 BB68     		ldr	r3, [r7, #8]
 1182 01f6 1B68     		ldr	r3, [r3]
 1183 01f8 324A     		ldr	r2, .L114+12
 1184 01fa B2F8B022 		ldrh	r2, [r2, #688]
 1185 01fe 9A1A     		subs	r2, r3, r2
 1186 0200 BB68     		ldr	r3, [r7, #8]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 31


 1187 0202 1A60     		str	r2, [r3]
 1188              		.loc 1 515 0
 1189 0204 78E1     		b	.L107
 1190              	.L66:
 511:..\src/interruptions.c ****                     compute_SoftHand_2_motors_joystick_reference(motor_idx, st_ref_p, st_refOld_p);
 1191              		.loc 1 511 0
 1192 0206 2C4B     		ldr	r3, .L114
 1193 0208 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 1194 020c 042B     		cmp	r3, #4
 1195 020e 40F07381 		bne	.L107
 512:..\src/interruptions.c ****                 }
 1196              		.loc 1 512 0
 1197 0212 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1198 0214 7A68     		ldr	r2, [r7, #4]
 1199 0216 B968     		ldr	r1, [r7, #8]
 1200 0218 1846     		mov	r0, r3
 1201 021a FFF7FEFF 		bl	compute_SoftHand_2_motors_joystick_reference
 1202              		.loc 1 515 0
 1203 021e 6BE1     		b	.L107
 1204              	.L54:
 516:..\src/interruptions.c ****             
 517:..\src/interruptions.c ****         case INPUT_MODE_EMG_PROPORTIONAL:
 518:..\src/interruptions.c ****             if (err_emg_1 > 0)
 1205              		.loc 1 518 0
 1206 0220 BB69     		ldr	r3, [r7, #24]
 1207 0222 002B     		cmp	r3, #0
 1208 0224 15DD     		ble	.L72
 519:..\src/interruptions.c ****                 st_ref_p->pos = (err_emg_1 * g_mem.motor[motor_idx].pos_lim_sup) / (1024 - c_mem.em
 1209              		.loc 1 519 0
 1210 0226 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1211 0228 2649     		ldr	r1, .L114+12
 1212 022a 1346     		mov	r3, r2
 1213 022c DB00     		lsls	r3, r3, #3
 1214 022e 9B1A     		subs	r3, r3, r2
 1215 0230 1B01     		lsls	r3, r3, #4
 1216 0232 0B44     		add	r3, r3, r1
 1217 0234 E833     		adds	r3, r3, #232
 1218 0236 1B68     		ldr	r3, [r3]
 1219 0238 BA69     		ldr	r2, [r7, #24]
 1220 023a 02FB03F2 		mul	r2, r2, r3
 1221 023e 1E4B     		ldr	r3, .L114
 1222 0240 B3F8F031 		ldrh	r3, [r3, #496]
 1223 0244 C3F58063 		rsb	r3, r3, #1024
 1224 0248 92FBF3F2 		sdiv	r2, r2, r3
 1225 024c BB68     		ldr	r3, [r7, #8]
 1226 024e 1A60     		str	r2, [r3]
 520:..\src/interruptions.c ****             else
 521:..\src/interruptions.c ****                 st_ref_p->pos = 0;
 522:..\src/interruptions.c ****             break;
 1227              		.loc 1 522 0
 1228 0250 5BE1     		b	.L65
 1229              	.L72:
 521:..\src/interruptions.c ****             break;
 1230              		.loc 1 521 0
 1231 0252 BB68     		ldr	r3, [r7, #8]
 1232 0254 0022     		movs	r2, #0
 1233 0256 1A60     		str	r2, [r3]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 32


 1234              		.loc 1 522 0
 1235 0258 57E1     		b	.L65
 1236              	.L59:
 523:..\src/interruptions.c ****         
 524:..\src/interruptions.c ****         case INPUT_MODE_EMG_PROPORTIONAL_NC:
 525:..\src/interruptions.c ****             if (err_emg_1 > 0)
 1237              		.loc 1 525 0
 1238 025a BB69     		ldr	r3, [r7, #24]
 1239 025c 002B     		cmp	r3, #0
 1240 025e 1FDD     		ble	.L74
 526:..\src/interruptions.c ****                 st_ref_p->pos = g_mem.motor[motor_idx].pos_lim_sup - (err_emg_1 * g_mem.motor[motor
 1241              		.loc 1 526 0
 1242 0260 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1243 0262 1849     		ldr	r1, .L114+12
 1244 0264 1346     		mov	r3, r2
 1245 0266 DB00     		lsls	r3, r3, #3
 1246 0268 9B1A     		subs	r3, r3, r2
 1247 026a 1B01     		lsls	r3, r3, #4
 1248 026c 0B44     		add	r3, r3, r1
 1249 026e E833     		adds	r3, r3, #232
 1250 0270 1968     		ldr	r1, [r3]
 1251 0272 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1252 0274 1348     		ldr	r0, .L114+12
 1253 0276 1346     		mov	r3, r2
 1254 0278 DB00     		lsls	r3, r3, #3
 1255 027a 9B1A     		subs	r3, r3, r2
 1256 027c 1B01     		lsls	r3, r3, #4
 1257 027e 0344     		add	r3, r3, r0
 1258 0280 E833     		adds	r3, r3, #232
 1259 0282 1B68     		ldr	r3, [r3]
 1260 0284 BA69     		ldr	r2, [r7, #24]
 1261 0286 02FB03F2 		mul	r2, r2, r3
 1262 028a 0B4B     		ldr	r3, .L114
 1263 028c B3F8F031 		ldrh	r3, [r3, #496]
 1264 0290 C3F58063 		rsb	r3, r3, #1024
 1265 0294 92FBF3F3 		sdiv	r3, r2, r3
 1266 0298 CA1A     		subs	r2, r1, r3
 1267 029a BB68     		ldr	r3, [r7, #8]
 1268 029c 1A60     		str	r2, [r3]
 527:..\src/interruptions.c ****             else
 528:..\src/interruptions.c ****                 st_ref_p->pos = g_mem.motor[motor_idx].pos_lim_sup;
 529:..\src/interruptions.c ****             break;
 1269              		.loc 1 529 0
 1270 029e 34E1     		b	.L65
 1271              	.L74:
 528:..\src/interruptions.c ****             break;
 1272              		.loc 1 528 0
 1273 02a0 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1274 02a2 0849     		ldr	r1, .L114+12
 1275 02a4 1346     		mov	r3, r2
 1276 02a6 DB00     		lsls	r3, r3, #3
 1277 02a8 9B1A     		subs	r3, r3, r2
 1278 02aa 1B01     		lsls	r3, r3, #4
 1279 02ac 0B44     		add	r3, r3, r1
 1280 02ae E833     		adds	r3, r3, #232
 1281 02b0 1A68     		ldr	r2, [r3]
 1282 02b2 BB68     		ldr	r3, [r7, #8]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 33


 1283 02b4 1A60     		str	r2, [r3]
 1284              		.loc 1 529 0
 1285 02b6 28E1     		b	.L65
 1286              	.L115:
 1287              		.align	2
 1288              	.L114:
 1289 02b8 00000000 		.word	c_mem
 1290 02bc 00000000 		.word	g_adc_meas
 1291 02c0 00000000 		.word	g_meas
 1292 02c4 00000000 		.word	g_mem
 1293              	.L55:
 530:..\src/interruptions.c **** 
 531:..\src/interruptions.c ****         case INPUT_MODE_EMG_INTEGRAL:
 532:..\src/interruptions.c ****             st_ref_p->pos = st_refOld_p->pos;
 1294              		.loc 1 532 0
 1295 02c8 7B68     		ldr	r3, [r7, #4]
 1296 02ca 1A68     		ldr	r2, [r3]
 1297 02cc BB68     		ldr	r3, [r7, #8]
 1298 02ce 1A60     		str	r2, [r3]
 533:..\src/interruptions.c ****             if (err_emg_1 > 0) {
 1299              		.loc 1 533 0
 1300 02d0 BB69     		ldr	r3, [r7, #24]
 1301 02d2 002B     		cmp	r3, #0
 1302 02d4 13DD     		ble	.L76
 534:..\src/interruptions.c ****                 st_ref_p->pos = st_refOld_p->pos + (err_emg_1 * (int)g_mem.emg.emg_speed[0] * 2) / 
 1303              		.loc 1 534 0
 1304 02d6 7B68     		ldr	r3, [r7, #4]
 1305 02d8 1A68     		ldr	r2, [r3]
 1306 02da 884B     		ldr	r3, .L116
 1307 02dc 93F8FC31 		ldrb	r3, [r3, #508]	@ zero_extendqisi2
 1308 02e0 1946     		mov	r1, r3
 1309 02e2 BB69     		ldr	r3, [r7, #24]
 1310 02e4 03FB01F3 		mul	r3, r3, r1
 1311 02e8 5900     		lsls	r1, r3, #1
 1312 02ea 854B     		ldr	r3, .L116+4
 1313 02ec B3F8F031 		ldrh	r3, [r3, #496]
 1314 02f0 C3F58063 		rsb	r3, r3, #1024
 1315 02f4 91FBF3F3 		sdiv	r3, r1, r3
 1316 02f8 1A44     		add	r2, r2, r3
 1317 02fa BB68     		ldr	r3, [r7, #8]
 1318 02fc 1A60     		str	r2, [r3]
 1319              	.L76:
 535:..\src/interruptions.c ****             }
 536:..\src/interruptions.c ****             if (err_emg_2 > 0) {
 1320              		.loc 1 536 0
 1321 02fe 7B69     		ldr	r3, [r7, #20]
 1322 0300 002B     		cmp	r3, #0
 1323 0302 40F30181 		ble	.L108
 537:..\src/interruptions.c ****                 st_ref_p->pos = st_refOld_p->pos - (err_emg_2 * (int)g_mem.emg.emg_speed[1] * 2) / 
 1324              		.loc 1 537 0
 1325 0306 7B68     		ldr	r3, [r7, #4]
 1326 0308 1A68     		ldr	r2, [r3]
 1327 030a 7C4B     		ldr	r3, .L116
 1328 030c 93F8FD31 		ldrb	r3, [r3, #509]	@ zero_extendqisi2
 1329 0310 1946     		mov	r1, r3
 1330 0312 7B69     		ldr	r3, [r7, #20]
 1331 0314 03FB01F3 		mul	r3, r3, r1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 34


 1332 0318 5900     		lsls	r1, r3, #1
 1333 031a 794B     		ldr	r3, .L116+4
 1334 031c B3F8F231 		ldrh	r3, [r3, #498]
 1335 0320 C3F58063 		rsb	r3, r3, #1024
 1336 0324 91FBF3F3 		sdiv	r3, r1, r3
 1337 0328 D21A     		subs	r2, r2, r3
 1338 032a BB68     		ldr	r3, [r7, #8]
 1339 032c 1A60     		str	r2, [r3]
 538:..\src/interruptions.c ****             }
 539:..\src/interruptions.c ****             break;
 1340              		.loc 1 539 0
 1341 032e EBE0     		b	.L108
 1342              	.L56:
 540:..\src/interruptions.c **** 
 541:..\src/interruptions.c ****         case INPUT_MODE_EMG_FCFS:
 542:..\src/interruptions.c ****             st_ref_p->pos = st_refOld_p->pos;
 1343              		.loc 1 542 0
 1344 0330 7B68     		ldr	r3, [r7, #4]
 1345 0332 1A68     		ldr	r2, [r3]
 1346 0334 BB68     		ldr	r3, [r7, #8]
 1347 0336 1A60     		str	r2, [r3]
 543:..\src/interruptions.c ****             if (c_mem.dev.dev_type != SOFTHAND_2_MOTORS){
 1348              		.loc 1 543 0
 1349 0338 714B     		ldr	r3, .L116+4
 1350 033a 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 1351 033e 042B     		cmp	r3, #4
 1352 0340 5BD0     		beq	.L78
 544:..\src/interruptions.c ****                 switch (current_emg[motor_idx]) {
 1353              		.loc 1 544 0
 1354 0342 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1355 0344 6F4A     		ldr	r2, .L116+8
 1356 0346 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1357 0348 012B     		cmp	r3, #1
 1358 034a 1CD0     		beq	.L80
 1359 034c 022B     		cmp	r3, #2
 1360 034e 37D0     		beq	.L81
 1361 0350 002B     		cmp	r3, #0
 1362 0352 00D0     		beq	.L82
 545:..\src/interruptions.c ****                     case 0:
 546:..\src/interruptions.c ****                         // Look for the first EMG passing the threshold
 547:..\src/interruptions.c ****                         if (err_emg_1 > 0 && err_emg_1 > err_emg_2) {
 548:..\src/interruptions.c ****                             current_emg[motor_idx] = 1;
 549:..\src/interruptions.c ****                             break;
 550:..\src/interruptions.c ****                         }
 551:..\src/interruptions.c ****                         if (err_emg_2 > 0 && err_emg_2 > err_emg_1) {
 552:..\src/interruptions.c ****                             current_emg[motor_idx] = 2;
 553:..\src/interruptions.c ****                             break;
 554:..\src/interruptions.c ****                         }
 555:..\src/interruptions.c ****                         break;
 556:..\src/interruptions.c **** 
 557:..\src/interruptions.c ****                     case 1:
 558:..\src/interruptions.c ****                         // EMG 1 is first
 559:..\src/interruptions.c ****                         if (err_emg_1 < 0) {
 560:..\src/interruptions.c ****                             current_emg[motor_idx] = 0;
 561:..\src/interruptions.c ****                             break;
 562:..\src/interruptions.c ****                         }
 563:..\src/interruptions.c ****                         st_ref_p->pos = st_refOld_p->pos + (err_emg_1 * g_mem.emg.emg_speed[0] << 2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 35


 564:..\src/interruptions.c ****                         break;
 565:..\src/interruptions.c **** 
 566:..\src/interruptions.c ****                     case 2:
 567:..\src/interruptions.c ****                         // EMG 2 is first
 568:..\src/interruptions.c ****                         if (err_emg_2 < 0) {
 569:..\src/interruptions.c ****                             current_emg[motor_idx] = 0;
 570:..\src/interruptions.c ****                             break;
 571:..\src/interruptions.c ****                         }
 572:..\src/interruptions.c ****                         st_ref_p->pos = st_refOld_p->pos - (err_emg_2 * g_mem.emg.emg_speed[1] << 2
 573:..\src/interruptions.c ****                         break;
 574:..\src/interruptions.c **** 
 575:..\src/interruptions.c ****                     default:
 576:..\src/interruptions.c ****                         break;
 1363              		.loc 1 576 0
 1364 0354 5BE0     		b	.L88
 1365              	.L82:
 547:..\src/interruptions.c ****                             current_emg[motor_idx] = 1;
 1366              		.loc 1 547 0
 1367 0356 BB69     		ldr	r3, [r7, #24]
 1368 0358 002B     		cmp	r3, #0
 1369 035a 08DD     		ble	.L83
 547:..\src/interruptions.c ****                             current_emg[motor_idx] = 1;
 1370              		.loc 1 547 0 is_stmt 0 discriminator 1
 1371 035c BA69     		ldr	r2, [r7, #24]
 1372 035e 7B69     		ldr	r3, [r7, #20]
 1373 0360 9A42     		cmp	r2, r3
 1374 0362 04DD     		ble	.L83
 548:..\src/interruptions.c ****                             break;
 1375              		.loc 1 548 0 is_stmt 1
 1376 0364 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1377 0366 674A     		ldr	r2, .L116+8
 1378 0368 0121     		movs	r1, #1
 1379 036a D154     		strb	r1, [r2, r3]
 549:..\src/interruptions.c ****                         }
 1380              		.loc 1 549 0
 1381 036c 4FE0     		b	.L88
 1382              	.L83:
 551:..\src/interruptions.c ****                             current_emg[motor_idx] = 2;
 1383              		.loc 1 551 0
 1384 036e 7B69     		ldr	r3, [r7, #20]
 1385 0370 002B     		cmp	r3, #0
 1386 0372 4BDD     		ble	.L109
 551:..\src/interruptions.c ****                             current_emg[motor_idx] = 2;
 1387              		.loc 1 551 0 is_stmt 0 discriminator 1
 1388 0374 7A69     		ldr	r2, [r7, #20]
 1389 0376 BB69     		ldr	r3, [r7, #24]
 1390 0378 9A42     		cmp	r2, r3
 1391 037a 47DD     		ble	.L109
 552:..\src/interruptions.c ****                             break;
 1392              		.loc 1 552 0 is_stmt 1
 1393 037c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1394 037e 614A     		ldr	r2, .L116+8
 1395 0380 0221     		movs	r1, #2
 1396 0382 D154     		strb	r1, [r2, r3]
 553:..\src/interruptions.c ****                         }
 1397              		.loc 1 553 0
 1398 0384 43E0     		b	.L88
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 36


 1399              	.L80:
 559:..\src/interruptions.c ****                             current_emg[motor_idx] = 0;
 1400              		.loc 1 559 0
 1401 0386 BB69     		ldr	r3, [r7, #24]
 1402 0388 002B     		cmp	r3, #0
 1403 038a 04DA     		bge	.L86
 560:..\src/interruptions.c ****                             break;
 1404              		.loc 1 560 0
 1405 038c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1406 038e 5D4A     		ldr	r2, .L116+8
 1407 0390 0021     		movs	r1, #0
 1408 0392 D154     		strb	r1, [r2, r3]
 561:..\src/interruptions.c ****                         }
 1409              		.loc 1 561 0
 1410 0394 3BE0     		b	.L88
 1411              	.L86:
 563:..\src/interruptions.c ****                         break;
 1412              		.loc 1 563 0
 1413 0396 7B68     		ldr	r3, [r7, #4]
 1414 0398 1A68     		ldr	r2, [r3]
 1415 039a 584B     		ldr	r3, .L116
 1416 039c 93F8FC31 		ldrb	r3, [r3, #508]	@ zero_extendqisi2
 1417 03a0 1946     		mov	r1, r3
 1418 03a2 BB69     		ldr	r3, [r7, #24]
 1419 03a4 03FB01F3 		mul	r3, r3, r1
 1420 03a8 9900     		lsls	r1, r3, #2
 1421 03aa 554B     		ldr	r3, .L116+4
 1422 03ac B3F8F031 		ldrh	r3, [r3, #496]
 1423 03b0 C3F58063 		rsb	r3, r3, #1024
 1424 03b4 91FBF3F3 		sdiv	r3, r1, r3
 1425 03b8 1A44     		add	r2, r2, r3
 1426 03ba BB68     		ldr	r3, [r7, #8]
 1427 03bc 1A60     		str	r2, [r3]
 564:..\src/interruptions.c **** 
 1428              		.loc 1 564 0
 1429 03be 26E0     		b	.L88
 1430              	.L81:
 568:..\src/interruptions.c ****                             current_emg[motor_idx] = 0;
 1431              		.loc 1 568 0
 1432 03c0 7B69     		ldr	r3, [r7, #20]
 1433 03c2 002B     		cmp	r3, #0
 1434 03c4 04DA     		bge	.L87
 569:..\src/interruptions.c ****                             break;
 1435              		.loc 1 569 0
 1436 03c6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1437 03c8 4E4A     		ldr	r2, .L116+8
 1438 03ca 0021     		movs	r1, #0
 1439 03cc D154     		strb	r1, [r2, r3]
 570:..\src/interruptions.c ****                         }
 1440              		.loc 1 570 0
 1441 03ce 1EE0     		b	.L88
 1442              	.L87:
 572:..\src/interruptions.c ****                         break;
 1443              		.loc 1 572 0
 1444 03d0 7B68     		ldr	r3, [r7, #4]
 1445 03d2 1A68     		ldr	r2, [r3]
 1446 03d4 494B     		ldr	r3, .L116
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 37


 1447 03d6 93F8FD31 		ldrb	r3, [r3, #509]	@ zero_extendqisi2
 1448 03da 1946     		mov	r1, r3
 1449 03dc 7B69     		ldr	r3, [r7, #20]
 1450 03de 03FB01F3 		mul	r3, r3, r1
 1451 03e2 9900     		lsls	r1, r3, #2
 1452 03e4 464B     		ldr	r3, .L116+4
 1453 03e6 B3F8F231 		ldrh	r3, [r3, #498]
 1454 03ea C3F58063 		rsb	r3, r3, #1024
 1455 03ee 91FBF3F3 		sdiv	r3, r1, r3
 1456 03f2 D21A     		subs	r2, r2, r3
 1457 03f4 BB68     		ldr	r3, [r7, #8]
 1458 03f6 1A60     		str	r2, [r3]
 573:..\src/interruptions.c **** 
 1459              		.loc 1 573 0
 1460 03f8 09E0     		b	.L88
 1461              	.L78:
 577:..\src/interruptions.c ****                 }
 578:..\src/interruptions.c ****             }
 579:..\src/interruptions.c ****             else{ // case SOFTHAND_2_MOTORS
 580:..\src/interruptions.c ****                 //compute reference using a FSM for choosing the right sinergy to activate
 581:..\src/interruptions.c ****                 compute_SoftHand_2_motors_emg_reference(motor_idx, st_ref_p, st_refOld_p, err_emg_1
 1462              		.loc 1 581 0
 1463 03fa F87B     		ldrb	r0, [r7, #15]	@ zero_extendqisi2
 1464 03fc 7B69     		ldr	r3, [r7, #20]
 1465 03fe 0093     		str	r3, [sp]
 1466 0400 BB69     		ldr	r3, [r7, #24]
 1467 0402 7A68     		ldr	r2, [r7, #4]
 1468 0404 B968     		ldr	r1, [r7, #8]
 1469 0406 FFF7FEFF 		bl	compute_SoftHand_2_motors_emg_reference
 582:..\src/interruptions.c ****             }
 583:..\src/interruptions.c ****             break;
 1470              		.loc 1 583 0
 1471 040a 7EE0     		b	.L65
 1472              	.L109:
 555:..\src/interruptions.c **** 
 1473              		.loc 1 555 0
 1474 040c 00BF     		nop
 1475              	.L88:
 1476              		.loc 1 583 0 discriminator 5
 1477 040e 7CE0     		b	.L65
 1478              	.L57:
 584:..\src/interruptions.c **** 
 585:..\src/interruptions.c ****         case INPUT_MODE_EMG_FCFS_ADV:
 586:..\src/interruptions.c ****             st_ref_p->pos = st_refOld_p->pos;
 1479              		.loc 1 586 0
 1480 0410 7B68     		ldr	r3, [r7, #4]
 1481 0412 1A68     		ldr	r2, [r3]
 1482 0414 BB68     		ldr	r3, [r7, #8]
 1483 0416 1A60     		str	r2, [r3]
 587:..\src/interruptions.c ****             switch (current_emg[motor_idx]) {
 1484              		.loc 1 587 0
 1485 0418 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1486 041a 3A4A     		ldr	r2, .L116+8
 1487 041c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1488 041e 012B     		cmp	r3, #1
 1489 0420 1CD0     		beq	.L90
 1490 0422 022B     		cmp	r3, #2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 38


 1491 0424 3DD0     		beq	.L91
 1492 0426 002B     		cmp	r3, #0
 1493 0428 00D0     		beq	.L92
 588:..\src/interruptions.c ****                 // Look for the first EMG passing the threshold
 589:..\src/interruptions.c ****                 case 0:
 590:..\src/interruptions.c ****                     if (err_emg_1 > 0 && err_emg_1 > err_emg_2) {
 591:..\src/interruptions.c ****                         current_emg[motor_idx] = 1;
 592:..\src/interruptions.c ****                         break;
 593:..\src/interruptions.c ****                     }
 594:..\src/interruptions.c ****                     if (err_emg_2 > 0 && err_emg_2 > err_emg_1) {
 595:..\src/interruptions.c ****                         current_emg[motor_idx] = 2;
 596:..\src/interruptions.c ****                         break;
 597:..\src/interruptions.c ****                     }
 598:..\src/interruptions.c ****                     break;
 599:..\src/interruptions.c **** 
 600:..\src/interruptions.c ****                 // EMG 1 is first
 601:..\src/interruptions.c ****                 case 1:
 602:..\src/interruptions.c ****                     // If both signals are under threshold go back to status 0
 603:..\src/interruptions.c ****                     if ((err_emg_1 < 0) && (err_emg_2 < 0)) {
 604:..\src/interruptions.c ****                         current_emg[motor_idx] = 0;
 605:..\src/interruptions.c ****                         break;
 606:..\src/interruptions.c ****                     }
 607:..\src/interruptions.c ****                     // but if the current signal come back over threshold, continue using it
 608:..\src/interruptions.c ****                     if (err_emg_1 > 0) 
 609:..\src/interruptions.c ****                         st_ref_p->pos = st_refOld_p->pos + (err_emg_1 * g_mem.emg.emg_speed[0] << 2
 610:..\src/interruptions.c ****                     
 611:..\src/interruptions.c ****                     break;
 612:..\src/interruptions.c **** 
 613:..\src/interruptions.c ****                 // EMG 2 is first
 614:..\src/interruptions.c ****                 case 2:
 615:..\src/interruptions.c ****                     // If both signals are under threshold go back to status 0
 616:..\src/interruptions.c ****                     if ((err_emg_1 < 0) && (err_emg_2 < 0)) {
 617:..\src/interruptions.c ****                         current_emg[motor_idx] = 0;
 618:..\src/interruptions.c ****                         break;
 619:..\src/interruptions.c ****                     }
 620:..\src/interruptions.c ****                     // but if the current signal come back over threshold, continue using it
 621:..\src/interruptions.c ****                     if (err_emg_2 > 0) {
 622:..\src/interruptions.c ****                         st_ref_p->pos = st_refOld_p->pos - (err_emg_2 * c_mem.emg.emg_speed[1] << 2
 623:..\src/interruptions.c ****                     }
 624:..\src/interruptions.c ****                     break;
 625:..\src/interruptions.c **** 
 626:..\src/interruptions.c ****                 default:
 627:..\src/interruptions.c ****                     break;
 1494              		.loc 1 627 0
 1495 042a 62E0     		b	.L94
 1496              	.L92:
 590:..\src/interruptions.c ****                         current_emg[motor_idx] = 1;
 1497              		.loc 1 590 0
 1498 042c BB69     		ldr	r3, [r7, #24]
 1499 042e 002B     		cmp	r3, #0
 1500 0430 08DD     		ble	.L93
 590:..\src/interruptions.c ****                         current_emg[motor_idx] = 1;
 1501              		.loc 1 590 0 is_stmt 0 discriminator 1
 1502 0432 BA69     		ldr	r2, [r7, #24]
 1503 0434 7B69     		ldr	r3, [r7, #20]
 1504 0436 9A42     		cmp	r2, r3
 1505 0438 04DD     		ble	.L93
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 39


 591:..\src/interruptions.c ****                         break;
 1506              		.loc 1 591 0 is_stmt 1
 1507 043a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1508 043c 314A     		ldr	r2, .L116+8
 1509 043e 0121     		movs	r1, #1
 1510 0440 D154     		strb	r1, [r2, r3]
 592:..\src/interruptions.c ****                     }
 1511              		.loc 1 592 0
 1512 0442 56E0     		b	.L94
 1513              	.L93:
 594:..\src/interruptions.c ****                         current_emg[motor_idx] = 2;
 1514              		.loc 1 594 0
 1515 0444 7B69     		ldr	r3, [r7, #20]
 1516 0446 002B     		cmp	r3, #0
 1517 0448 4EDD     		ble	.L110
 594:..\src/interruptions.c ****                         current_emg[motor_idx] = 2;
 1518              		.loc 1 594 0 is_stmt 0 discriminator 1
 1519 044a 7A69     		ldr	r2, [r7, #20]
 1520 044c BB69     		ldr	r3, [r7, #24]
 1521 044e 9A42     		cmp	r2, r3
 1522 0450 4ADD     		ble	.L110
 595:..\src/interruptions.c ****                         break;
 1523              		.loc 1 595 0 is_stmt 1
 1524 0452 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1525 0454 2B4A     		ldr	r2, .L116+8
 1526 0456 0221     		movs	r1, #2
 1527 0458 D154     		strb	r1, [r2, r3]
 596:..\src/interruptions.c ****                     }
 1528              		.loc 1 596 0
 1529 045a 4AE0     		b	.L94
 1530              	.L90:
 603:..\src/interruptions.c ****                         current_emg[motor_idx] = 0;
 1531              		.loc 1 603 0
 1532 045c BB69     		ldr	r3, [r7, #24]
 1533 045e 002B     		cmp	r3, #0
 1534 0460 07DA     		bge	.L96
 603:..\src/interruptions.c ****                         current_emg[motor_idx] = 0;
 1535              		.loc 1 603 0 is_stmt 0 discriminator 1
 1536 0462 7B69     		ldr	r3, [r7, #20]
 1537 0464 002B     		cmp	r3, #0
 1538 0466 04DA     		bge	.L96
 604:..\src/interruptions.c ****                         break;
 1539              		.loc 1 604 0 is_stmt 1
 1540 0468 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1541 046a 264A     		ldr	r2, .L116+8
 1542 046c 0021     		movs	r1, #0
 1543 046e D154     		strb	r1, [r2, r3]
 605:..\src/interruptions.c ****                     }
 1544              		.loc 1 605 0
 1545 0470 3FE0     		b	.L94
 1546              	.L96:
 608:..\src/interruptions.c ****                         st_ref_p->pos = st_refOld_p->pos + (err_emg_1 * g_mem.emg.emg_speed[0] << 2
 1547              		.loc 1 608 0
 1548 0472 BB69     		ldr	r3, [r7, #24]
 1549 0474 002B     		cmp	r3, #0
 1550 0476 39DD     		ble	.L111
 609:..\src/interruptions.c ****                     
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 40


 1551              		.loc 1 609 0
 1552 0478 7B68     		ldr	r3, [r7, #4]
 1553 047a 1A68     		ldr	r2, [r3]
 1554 047c 1F4B     		ldr	r3, .L116
 1555 047e 93F8FC31 		ldrb	r3, [r3, #508]	@ zero_extendqisi2
 1556 0482 1946     		mov	r1, r3
 1557 0484 BB69     		ldr	r3, [r7, #24]
 1558 0486 03FB01F3 		mul	r3, r3, r1
 1559 048a 9900     		lsls	r1, r3, #2
 1560 048c 1C4B     		ldr	r3, .L116+4
 1561 048e B3F8F031 		ldrh	r3, [r3, #496]
 1562 0492 C3F58063 		rsb	r3, r3, #1024
 1563 0496 91FBF3F3 		sdiv	r3, r1, r3
 1564 049a 1A44     		add	r2, r2, r3
 1565 049c BB68     		ldr	r3, [r7, #8]
 1566 049e 1A60     		str	r2, [r3]
 611:..\src/interruptions.c **** 
 1567              		.loc 1 611 0
 1568 04a0 24E0     		b	.L111
 1569              	.L91:
 616:..\src/interruptions.c ****                         current_emg[motor_idx] = 0;
 1570              		.loc 1 616 0
 1571 04a2 BB69     		ldr	r3, [r7, #24]
 1572 04a4 002B     		cmp	r3, #0
 1573 04a6 07DA     		bge	.L98
 616:..\src/interruptions.c ****                         current_emg[motor_idx] = 0;
 1574              		.loc 1 616 0 is_stmt 0 discriminator 1
 1575 04a8 7B69     		ldr	r3, [r7, #20]
 1576 04aa 002B     		cmp	r3, #0
 1577 04ac 04DA     		bge	.L98
 617:..\src/interruptions.c ****                         break;
 1578              		.loc 1 617 0 is_stmt 1
 1579 04ae FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1580 04b0 144A     		ldr	r2, .L116+8
 1581 04b2 0021     		movs	r1, #0
 1582 04b4 D154     		strb	r1, [r2, r3]
 618:..\src/interruptions.c ****                     }
 1583              		.loc 1 618 0
 1584 04b6 1CE0     		b	.L94
 1585              	.L98:
 621:..\src/interruptions.c ****                         st_ref_p->pos = st_refOld_p->pos - (err_emg_2 * c_mem.emg.emg_speed[1] << 2
 1586              		.loc 1 621 0
 1587 04b8 7B69     		ldr	r3, [r7, #20]
 1588 04ba 002B     		cmp	r3, #0
 1589 04bc 18DD     		ble	.L112
 622:..\src/interruptions.c ****                     }
 1590              		.loc 1 622 0
 1591 04be 7B68     		ldr	r3, [r7, #4]
 1592 04c0 1A68     		ldr	r2, [r3]
 1593 04c2 0F4B     		ldr	r3, .L116+4
 1594 04c4 93F8FD31 		ldrb	r3, [r3, #509]	@ zero_extendqisi2
 1595 04c8 1946     		mov	r1, r3
 1596 04ca 7B69     		ldr	r3, [r7, #20]
 1597 04cc 03FB01F3 		mul	r3, r3, r1
 1598 04d0 9900     		lsls	r1, r3, #2
 1599 04d2 0B4B     		ldr	r3, .L116+4
 1600 04d4 B3F8F231 		ldrh	r3, [r3, #498]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 41


 1601 04d8 C3F58063 		rsb	r3, r3, #1024
 1602 04dc 91FBF3F3 		sdiv	r3, r1, r3
 1603 04e0 D21A     		subs	r2, r2, r3
 1604 04e2 BB68     		ldr	r3, [r7, #8]
 1605 04e4 1A60     		str	r2, [r3]
 624:..\src/interruptions.c **** 
 1606              		.loc 1 624 0
 1607 04e6 03E0     		b	.L112
 1608              	.L110:
 598:..\src/interruptions.c **** 
 1609              		.loc 1 598 0
 1610 04e8 00BF     		nop
 1611 04ea 0EE0     		b	.L65
 1612              	.L111:
 611:..\src/interruptions.c **** 
 1613              		.loc 1 611 0
 1614 04ec 00BF     		nop
 1615 04ee 0CE0     		b	.L65
 1616              	.L112:
 624:..\src/interruptions.c **** 
 1617              		.loc 1 624 0
 1618 04f0 00BF     		nop
 1619              	.L94:
 628:..\src/interruptions.c ****             }
 629:..\src/interruptions.c ****             break;
 1620              		.loc 1 629 0 discriminator 6
 1621 04f2 0AE0     		b	.L65
 1622              	.L106:
 630:..\src/interruptions.c **** 
 631:..\src/interruptions.c ****         default:
 632:..\src/interruptions.c ****             break;
 1623              		.loc 1 632 0
 1624 04f4 00BF     		nop
 1625 04f6 08E0     		b	.L65
 1626              	.L107:
 515:..\src/interruptions.c ****             
 1627              		.loc 1 515 0
 1628 04f8 00BF     		nop
 1629 04fa 06E0     		b	.L65
 1630              	.L117:
 1631              		.align	2
 1632              	.L116:
 1633 04fc 00000000 		.word	g_mem
 1634 0500 00000000 		.word	c_mem
 1635 0504 8C000000 		.word	current_emg.10472
 1636              	.L108:
 539:..\src/interruptions.c **** 
 1637              		.loc 1 539 0
 1638 0508 00BF     		nop
 1639              	.L65:
 633:..\src/interruptions.c ****     }
 634:..\src/interruptions.c **** 
 635:..\src/interruptions.c ****     // Position limit saturation
 636:..\src/interruptions.c ****     if (MOT->pos_lim_flag) {
 1640              		.loc 1 636 0
 1641 050a 3B6A     		ldr	r3, [r7, #32]
 1642 050c 93F83330 		ldrb	r3, [r3, #51]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 42


 1643 0510 002B     		cmp	r3, #0
 1644 0512 13D0     		beq	.L100
 637:..\src/interruptions.c ****         if (st_ref_p->pos < MOT->pos_lim_inf) 
 1645              		.loc 1 637 0
 1646 0514 BB68     		ldr	r3, [r7, #8]
 1647 0516 1A68     		ldr	r2, [r3]
 1648 0518 3B6A     		ldr	r3, [r7, #32]
 1649 051a 5B6B     		ldr	r3, [r3, #52]
 1650 051c 9A42     		cmp	r2, r3
 1651 051e 03DA     		bge	.L101
 638:..\src/interruptions.c ****             st_ref_p->pos = MOT->pos_lim_inf;
 1652              		.loc 1 638 0
 1653 0520 3B6A     		ldr	r3, [r7, #32]
 1654 0522 5A6B     		ldr	r2, [r3, #52]
 1655 0524 BB68     		ldr	r3, [r7, #8]
 1656 0526 1A60     		str	r2, [r3]
 1657              	.L101:
 639:..\src/interruptions.c ****         if (st_ref_p->pos > MOT->pos_lim_sup) 
 1658              		.loc 1 639 0
 1659 0528 BB68     		ldr	r3, [r7, #8]
 1660 052a 1A68     		ldr	r2, [r3]
 1661 052c 3B6A     		ldr	r3, [r7, #32]
 1662 052e 9B6B     		ldr	r3, [r3, #56]
 1663 0530 9A42     		cmp	r2, r3
 1664 0532 03DD     		ble	.L100
 640:..\src/interruptions.c ****             st_ref_p->pos = MOT->pos_lim_sup;
 1665              		.loc 1 640 0
 1666 0534 3B6A     		ldr	r3, [r7, #32]
 1667 0536 9A6B     		ldr	r2, [r3, #56]
 1668 0538 BB68     		ldr	r3, [r7, #8]
 1669 053a 1A60     		str	r2, [r3]
 1670              	.L100:
 641:..\src/interruptions.c ****     }
 642:..\src/interruptions.c ****     
 643:..\src/interruptions.c ****     // SAFETY
 644:..\src/interruptions.c ****     if (battery_low_SoC == TRUE) {
 1671              		.loc 1 644 0
 1672 053c 1D4B     		ldr	r3, .L118
 1673 053e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1674 0540 012B     		cmp	r3, #1
 1675 0542 02D1     		bne	.L102
 645:..\src/interruptions.c ****         //Reopen the terminal device before disabling motor
 646:..\src/interruptions.c ****         st_ref_p->pos = 0;
 1676              		.loc 1 646 0
 1677 0544 BB68     		ldr	r3, [r7, #8]
 1678 0546 0022     		movs	r2, #0
 1679 0548 1A60     		str	r2, [r3]
 1680              	.L102:
 647:..\src/interruptions.c ****     }      
 648:..\src/interruptions.c ****     
 649:..\src/interruptions.c ****        
 650:..\src/interruptions.c ****     if (c_mem.SH.rest_position_flag == TRUE) {
 1681              		.loc 1 650 0
 1682 054a 1B4B     		ldr	r3, .L118+4
 1683 054c 93F8AC32 		ldrb	r3, [r3, #684]	@ zero_extendqisi2
 1684 0550 012B     		cmp	r3, #1
 1685 0552 2AD1     		bne	.L113
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 43


 651:..\src/interruptions.c ****         if (rest_enabled == 1){
 1686              		.loc 1 651 0
 1687 0554 194B     		ldr	r3, .L118+8
 1688 0556 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1689 0558 012B     		cmp	r3, #1
 1690 055a 03D1     		bne	.L104
 652:..\src/interruptions.c ****             // Change position reference to drive motor to rest position smoothly
 653:..\src/interruptions.c ****             st_ref_p->pos = rest_pos_curr_ref;
 1691              		.loc 1 653 0
 1692 055c 184B     		ldr	r3, .L118+12
 1693 055e 1A68     		ldr	r2, [r3]
 1694 0560 BB68     		ldr	r3, [r7, #8]
 1695 0562 1A60     		str	r2, [r3]
 1696              	.L104:
 654:..\src/interruptions.c ****         }
 655:..\src/interruptions.c ****         
 656:..\src/interruptions.c ****         if (forced_open == 1) {
 1697              		.loc 1 656 0
 1698 0564 174B     		ldr	r3, .L118+16
 1699 0566 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1700 0568 012B     		cmp	r3, #1
 1701 056a 1ED1     		bne	.L113
 657:..\src/interruptions.c ****             // Open the SoftHand as EMG PROPORTIONAL input mode 
 658:..\src/interruptions.c ****             if (err_emg_2 > 0)
 1702              		.loc 1 658 0
 1703 056c 7B69     		ldr	r3, [r7, #20]
 1704 056e 002B     		cmp	r3, #0
 1705 0570 13DD     		ble	.L105
 659:..\src/interruptions.c ****                 st_ref_p->pos = g_mem.SH.rest_pos - (err_emg_2 * g_mem.SH.rest_pos) / (1024 - c_mem
 1706              		.loc 1 659 0
 1707 0572 154B     		ldr	r3, .L118+20
 1708 0574 D3F8A022 		ldr	r2, [r3, #672]
 1709 0578 134B     		ldr	r3, .L118+20
 1710 057a D3F8A032 		ldr	r3, [r3, #672]
 1711 057e 7969     		ldr	r1, [r7, #20]
 1712 0580 01FB03F1 		mul	r1, r1, r3
 1713 0584 0C4B     		ldr	r3, .L118+4
 1714 0586 B3F8F231 		ldrh	r3, [r3, #498]
 1715 058a C3F58063 		rsb	r3, r3, #1024
 1716 058e 91FBF3F3 		sdiv	r3, r1, r3
 1717 0592 D21A     		subs	r2, r2, r3
 1718 0594 BB68     		ldr	r3, [r7, #8]
 1719 0596 1A60     		str	r2, [r3]
 660:..\src/interruptions.c ****             else {
 661:..\src/interruptions.c ****                 st_ref_p->pos = g_mem.SH.rest_pos;
 662:..\src/interruptions.c ****                 forced_open = 0;
 663:..\src/interruptions.c ****             }
 664:..\src/interruptions.c ****         }
 665:..\src/interruptions.c ****     }
 666:..\src/interruptions.c **** }
 1720              		.loc 1 666 0
 1721 0598 07E0     		b	.L113
 1722              	.L105:
 661:..\src/interruptions.c ****                 forced_open = 0;
 1723              		.loc 1 661 0
 1724 059a 0B4B     		ldr	r3, .L118+20
 1725 059c D3F8A022 		ldr	r2, [r3, #672]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 44


 1726 05a0 BB68     		ldr	r3, [r7, #8]
 1727 05a2 1A60     		str	r2, [r3]
 662:..\src/interruptions.c ****             }
 1728              		.loc 1 662 0
 1729 05a4 074B     		ldr	r3, .L118+16
 1730 05a6 0022     		movs	r2, #0
 1731 05a8 1A70     		strb	r2, [r3]
 1732              	.L113:
 1733              		.loc 1 666 0
 1734 05aa 00BF     		nop
 1735 05ac 2837     		adds	r7, r7, #40
 1736              		.cfi_def_cfa_offset 8
 1737 05ae BD46     		mov	sp, r7
 1738              		.cfi_def_cfa_register 13
 1739              		@ sp needed
 1740 05b0 80BD     		pop	{r7, pc}
 1741              	.L119:
 1742 05b2 00BF     		.align	2
 1743              	.L118:
 1744 05b4 00000000 		.word	battery_low_SoC
 1745 05b8 00000000 		.word	c_mem
 1746 05bc 00000000 		.word	rest_enabled
 1747 05c0 00000000 		.word	rest_pos_curr_ref
 1748 05c4 00000000 		.word	forced_open
 1749 05c8 00000000 		.word	g_mem
 1750              		.cfi_endproc
 1751              	.LFE68:
 1752              		.size	compute_reference, .-compute_reference
 1753              		.section	.text.compute_SoftHand_2_motors_joystick_reference,"ax",%progbits
 1754              		.align	2
 1755              		.global	compute_SoftHand_2_motors_joystick_reference
 1756              		.thumb
 1757              		.thumb_func
 1758              		.type	compute_SoftHand_2_motors_joystick_reference, %function
 1759              	compute_SoftHand_2_motors_joystick_reference:
 1760              	.LFB69:
 667:..\src/interruptions.c **** 
 668:..\src/interruptions.c **** 
 669:..\src/interruptions.c **** //==============================================================================
 670:..\src/interruptions.c **** //                                  COMPUTE SOFTHAND 2 MOTORS JOYSTICK REFERENCE
 671:..\src/interruptions.c **** //==============================================================================
 672:..\src/interruptions.c **** void compute_SoftHand_2_motors_joystick_reference(uint8 motor_idx, struct st_ref* st_ref_p, struct 
 1761              		.loc 1 672 0
 1762              		.cfi_startproc
 1763              		@ args = 0, pretend = 0, frame = 32
 1764              		@ frame_needed = 1, uses_anonymous_args = 0
 1765              		@ link register save eliminated.
 1766 0000 80B4     		push	{r7}
 1767              		.cfi_def_cfa_offset 4
 1768              		.cfi_offset 7, -4
 1769 0002 89B0     		sub	sp, sp, #36
 1770              		.cfi_def_cfa_offset 40
 1771 0004 00AF     		add	r7, sp, #0
 1772              		.cfi_def_cfa_register 7
 1773 0006 0346     		mov	r3, r0
 1774 0008 B960     		str	r1, [r7, #8]
 1775 000a 7A60     		str	r2, [r7, #4]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 45


 1776 000c FB73     		strb	r3, [r7, #15]
 673:..\src/interruptions.c ****     
 674:..\src/interruptions.c ****     if (c_mem.motor[0].input_mode == INPUT_MODE_JOYSTICK && c_mem.motor[1].input_mode == INPUT_MODE
 1777              		.loc 1 674 0
 1778 000e B04B     		ldr	r3, .L141
 1779 0010 93F80E31 		ldrb	r3, [r3, #270]	@ zero_extendqisi2
 1780 0014 062B     		cmp	r3, #6
 1781 0016 40F08581 		bne	.L139
 1782              		.loc 1 674 0 is_stmt 0 discriminator 1
 1783 001a AD4B     		ldr	r3, .L141
 1784 001c 93F87E31 		ldrb	r3, [r3, #382]	@ zero_extendqisi2
 1785 0020 062B     		cmp	r3, #6
 1786 0022 40F07F81 		bne	.L139
 675:..\src/interruptions.c ****         st_ref_p->pos = st_refOld_p->pos;
 1787              		.loc 1 675 0 is_stmt 1
 1788 0026 7B68     		ldr	r3, [r7, #4]
 1789 0028 1A68     		ldr	r2, [r3]
 1790 002a BB68     		ldr	r3, [r7, #8]
 1791 002c 1A60     		str	r2, [r3]
 676:..\src/interruptions.c ****     
 677:..\src/interruptions.c ****         if(!(g_adc_meas.joystick[0] > 700)) {
 1792              		.loc 1 677 0
 1793 002e A94B     		ldr	r3, .L141+4
 1794 0030 1B6A     		ldr	r3, [r3, #32]
 1795 0032 B3F52F7F 		cmp	r3, #700
 1796 0036 00F3C280 		bgt	.L122
 1797              	.LBB5:
 678:..\src/interruptions.c ****              
 679:..\src/interruptions.c ****             int32 CYDATA err_joy_1 = 0;
 1798              		.loc 1 679 0
 1799 003a 0023     		movs	r3, #0
 1800 003c FB61     		str	r3, [r7, #28]
 680:..\src/interruptions.c ****             int32 CYDATA err_joy_2 = 0;
 1801              		.loc 1 680 0
 1802 003e 0023     		movs	r3, #0
 1803 0040 BB61     		str	r3, [r7, #24]
 681:..\src/interruptions.c ****         
 682:..\src/interruptions.c ****             if(g_adc_meas.joystick[0] > c_mem.JOY_spec.joystick_threshold) {     //both motors wind
 1804              		.loc 1 682 0
 1805 0042 A44B     		ldr	r3, .L141+4
 1806 0044 1B6A     		ldr	r3, [r3, #32]
 1807 0046 A24A     		ldr	r2, .L141
 1808 0048 B2F9B222 		ldrsh	r2, [r2, #690]
 1809 004c 9342     		cmp	r3, r2
 1810 004e 1ADD     		ble	.L123
 683:..\src/interruptions.c ****                 err_joy_1 = g_adc_meas.joystick[0] - c_mem.JOY_spec.joystick_threshold;
 1811              		.loc 1 683 0
 1812 0050 A04B     		ldr	r3, .L141+4
 1813 0052 1B6A     		ldr	r3, [r3, #32]
 1814 0054 9E4A     		ldr	r2, .L141
 1815 0056 B2F9B222 		ldrsh	r2, [r2, #690]
 1816 005a 9B1A     		subs	r3, r3, r2
 1817 005c FB61     		str	r3, [r7, #28]
 684:..\src/interruptions.c ****                 st_ref_p->pos += ((int32) err_joy_1 * c_mem.JOY_spec.joystick_closure_speed) / (102
 1818              		.loc 1 684 0
 1819 005e BB68     		ldr	r3, [r7, #8]
 1820 0060 1A68     		ldr	r2, [r3]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 46


 1821 0062 9B4B     		ldr	r3, .L141
 1822 0064 B3F8B032 		ldrh	r3, [r3, #688]
 1823 0068 1946     		mov	r1, r3
 1824 006a FB69     		ldr	r3, [r7, #28]
 1825 006c 03FB01F1 		mul	r1, r3, r1
 1826 0070 974B     		ldr	r3, .L141
 1827 0072 B3F9B232 		ldrsh	r3, [r3, #690]
 1828 0076 C3F58063 		rsb	r3, r3, #1024
 1829 007a 91FBF3F3 		sdiv	r3, r1, r3
 1830 007e 1A44     		add	r2, r2, r3
 1831 0080 BB68     		ldr	r3, [r7, #8]
 1832 0082 1A60     		str	r2, [r3]
 1833 0084 21E0     		b	.L124
 1834              	.L123:
 685:..\src/interruptions.c ****             }
 686:..\src/interruptions.c ****             else {
 687:..\src/interruptions.c ****                 if(g_adc_meas.joystick[0] < -c_mem.JOY_spec.joystick_threshold) {  //both motors un
 1835              		.loc 1 687 0
 1836 0086 934B     		ldr	r3, .L141+4
 1837 0088 1A6A     		ldr	r2, [r3, #32]
 1838 008a 914B     		ldr	r3, .L141
 1839 008c B3F9B232 		ldrsh	r3, [r3, #690]
 1840 0090 5B42     		negs	r3, r3
 1841 0092 9A42     		cmp	r2, r3
 1842 0094 19DA     		bge	.L124
 688:..\src/interruptions.c ****                     err_joy_1 = g_adc_meas.joystick[0] + c_mem.JOY_spec.joystick_threshold;
 1843              		.loc 1 688 0
 1844 0096 8F4B     		ldr	r3, .L141+4
 1845 0098 1B6A     		ldr	r3, [r3, #32]
 1846 009a 8D4A     		ldr	r2, .L141
 1847 009c B2F9B222 		ldrsh	r2, [r2, #690]
 1848 00a0 1344     		add	r3, r3, r2
 1849 00a2 FB61     		str	r3, [r7, #28]
 689:..\src/interruptions.c ****                     st_ref_p->pos += ((int32) err_joy_1 * c_mem.JOY_spec.joystick_closure_speed) / 
 1850              		.loc 1 689 0
 1851 00a4 BB68     		ldr	r3, [r7, #8]
 1852 00a6 1A68     		ldr	r2, [r3]
 1853 00a8 894B     		ldr	r3, .L141
 1854 00aa B3F8B032 		ldrh	r3, [r3, #688]
 1855 00ae 1946     		mov	r1, r3
 1856 00b0 FB69     		ldr	r3, [r7, #28]
 1857 00b2 03FB01F1 		mul	r1, r3, r1
 1858 00b6 864B     		ldr	r3, .L141
 1859 00b8 B3F9B232 		ldrsh	r3, [r3, #690]
 1860 00bc C3F58063 		rsb	r3, r3, #1024
 1861 00c0 91FBF3F3 		sdiv	r3, r1, r3
 1862 00c4 1A44     		add	r2, r2, r3
 1863 00c6 BB68     		ldr	r3, [r7, #8]
 1864 00c8 1A60     		str	r2, [r3]
 1865              	.L124:
 690:..\src/interruptions.c ****                 }
 691:..\src/interruptions.c ****             }
 692:..\src/interruptions.c **** 
 693:..\src/interruptions.c ****             if(g_adc_meas.joystick[1] > c_mem.JOY_spec.joystick_threshold) {    //The wire is winde
 1866              		.loc 1 693 0
 1867 00ca 824B     		ldr	r3, .L141+4
 1868 00cc 5B6A     		ldr	r3, [r3, #36]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 47


 1869 00ce 804A     		ldr	r2, .L141
 1870 00d0 B2F9B222 		ldrsh	r2, [r2, #690]
 1871 00d4 9342     		cmp	r3, r2
 1872 00d6 34DD     		ble	.L125
 694:..\src/interruptions.c ****                 err_joy_2 = g_adc_meas.joystick[1] - c_mem.JOY_spec.joystick_threshold;
 1873              		.loc 1 694 0
 1874 00d8 7E4B     		ldr	r3, .L141+4
 1875 00da 5B6A     		ldr	r3, [r3, #36]
 1876 00dc 7C4A     		ldr	r2, .L141
 1877 00de B2F9B222 		ldrsh	r2, [r2, #690]
 1878 00e2 9B1A     		subs	r3, r3, r2
 1879 00e4 BB61     		str	r3, [r7, #24]
 695:..\src/interruptions.c ****                 if (motor_idx == 0){
 1880              		.loc 1 695 0
 1881 00e6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1882 00e8 002B     		cmp	r3, #0
 1883 00ea 12D1     		bne	.L126
 696:..\src/interruptions.c ****                     st_ref_p->pos += ((int32) err_joy_2 * c_mem.JOY_spec.joystick_closure_speed) / 
 1884              		.loc 1 696 0
 1885 00ec BB68     		ldr	r3, [r7, #8]
 1886 00ee 1A68     		ldr	r2, [r3]
 1887 00f0 774B     		ldr	r3, .L141
 1888 00f2 B3F8B032 		ldrh	r3, [r3, #688]
 1889 00f6 1946     		mov	r1, r3
 1890 00f8 BB69     		ldr	r3, [r7, #24]
 1891 00fa 03FB01F1 		mul	r1, r3, r1
 1892 00fe 744B     		ldr	r3, .L141
 1893 0100 B3F9B232 		ldrsh	r3, [r3, #690]
 1894 0104 C3F58063 		rsb	r3, r3, #1024
 1895 0108 91FBF3F3 		sdiv	r3, r1, r3
 1896 010c 1A44     		add	r2, r2, r3
 1897 010e BB68     		ldr	r3, [r7, #8]
 1898 0110 1A60     		str	r2, [r3]
 1899              	.L126:
 697:..\src/interruptions.c ****                 }
 698:..\src/interruptions.c ****                 if (motor_idx == 1){
 1900              		.loc 1 698 0
 1901 0112 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1902 0114 012B     		cmp	r3, #1
 1903 0116 40F00581 		bne	.L139
 699:..\src/interruptions.c ****                     st_ref_p->pos -= ((int32) err_joy_2 * c_mem.JOY_spec.joystick_closure_speed) / 
 1904              		.loc 1 699 0
 1905 011a BB68     		ldr	r3, [r7, #8]
 1906 011c 1A68     		ldr	r2, [r3]
 1907 011e 6C4B     		ldr	r3, .L141
 1908 0120 B3F8B032 		ldrh	r3, [r3, #688]
 1909 0124 1946     		mov	r1, r3
 1910 0126 BB69     		ldr	r3, [r7, #24]
 1911 0128 03FB01F1 		mul	r1, r3, r1
 1912 012c 684B     		ldr	r3, .L141
 1913 012e B3F9B232 		ldrsh	r3, [r3, #690]
 1914 0132 C3F58063 		rsb	r3, r3, #1024
 1915 0136 91FBF3F3 		sdiv	r3, r1, r3
 1916 013a D21A     		subs	r2, r2, r3
 1917 013c BB68     		ldr	r3, [r7, #8]
 1918 013e 1A60     		str	r2, [r3]
 1919              	.LBE5:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 48


 700:..\src/interruptions.c ****                 }          
 701:..\src/interruptions.c ****             }
 702:..\src/interruptions.c ****             else {
 703:..\src/interruptions.c ****                 if(g_adc_meas.joystick[1] < -c_mem.JOY_spec.joystick_threshold) {  //The wire is un
 704:..\src/interruptions.c ****                     
 705:..\src/interruptions.c ****                     err_joy_2 = g_adc_meas.joystick[1] + c_mem.JOY_spec.joystick_threshold;
 706:..\src/interruptions.c ****                     if (motor_idx == 0){
 707:..\src/interruptions.c ****                         st_ref_p->pos += ((int32) err_joy_2 * c_mem.JOY_spec.joystick_closure_speed
 708:..\src/interruptions.c ****                     }
 709:..\src/interruptions.c ****                     if (motor_idx == 1){
 710:..\src/interruptions.c ****                         st_ref_p->pos -= ((int32) err_joy_2 * c_mem.JOY_spec.joystick_closure_speed
 711:..\src/interruptions.c ****                     }
 712:..\src/interruptions.c ****                 }
 713:..\src/interruptions.c ****             }
 714:..\src/interruptions.c ****         }
 715:..\src/interruptions.c ****         else {  //The button is pressed and the hand is opened firstly making the position differen
 716:..\src/interruptions.c ****                 //equal to zero, then the position sum is gradually set to zero 
 717:..\src/interruptions.c ****             int32 pos_diff = (g_meas[c_mem.motor[0].encoder_line].pos[0] - g_meas[c_mem.motor[0].en
 718:..\src/interruptions.c ****             int32 pos_sum = (g_meas[c_mem.motor[0].encoder_line].pos[0] + g_meas[c_mem.motor[0].enc
 719:..\src/interruptions.c **** 
 720:..\src/interruptions.c ****             if(pos_diff > 500 || pos_diff < -500) {
 721:..\src/interruptions.c ****                 if(SIGN(pos_diff) == 1) {
 722:..\src/interruptions.c ****                     if (motor_idx == 1){
 723:..\src/interruptions.c ****                         st_ref_p->pos += c_mem.JOY_spec.joystick_closure_speed;
 724:..\src/interruptions.c ****                     }
 725:..\src/interruptions.c ****                     if (motor_idx == 0){
 726:..\src/interruptions.c ****                         st_ref_p->pos -= c_mem.JOY_spec.joystick_closure_speed / 2;
 727:..\src/interruptions.c ****                     }                    
 728:..\src/interruptions.c ****                 }
 729:..\src/interruptions.c ****                 else {
 730:..\src/interruptions.c ****                     if (motor_idx == 0){
 731:..\src/interruptions.c ****                         st_ref_p->pos += c_mem.JOY_spec.joystick_closure_speed;
 732:..\src/interruptions.c ****                     }
 733:..\src/interruptions.c ****                     if (motor_idx == 1){
 734:..\src/interruptions.c ****                         st_ref_p->pos -= c_mem.JOY_spec.joystick_closure_speed / 2;
 735:..\src/interruptions.c ****                     }
 736:..\src/interruptions.c ****                 }
 737:..\src/interruptions.c ****                 
 738:..\src/interruptions.c ****             }
 739:..\src/interruptions.c ****             else {
 740:..\src/interruptions.c ****                 if(pos_sum > 0) {
 741:..\src/interruptions.c ****                     if (motor_idx == 0){
 742:..\src/interruptions.c ****                         st_ref_p->pos -= c_mem.JOY_spec.joystick_closure_speed * 2;
 743:..\src/interruptions.c ****                     }
 744:..\src/interruptions.c ****                     if (motor_idx == 1){
 745:..\src/interruptions.c ****                         st_ref_p->pos -= c_mem.JOY_spec.joystick_closure_speed * 2;
 746:..\src/interruptions.c ****                     }
 747:..\src/interruptions.c ****                     
 748:..\src/interruptions.c ****                     if (st_ref_p->pos < 0){
 749:..\src/interruptions.c ****                         st_ref_p->pos = 0;
 750:..\src/interruptions.c ****                     }
 751:..\src/interruptions.c ****                 }
 752:..\src/interruptions.c ****             }
 753:..\src/interruptions.c ****         }
 754:..\src/interruptions.c ****     }           
 755:..\src/interruptions.c **** }
 1920              		.loc 1 755 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 49


 1921 0140 F0E0     		b	.L139
 1922              	.L125:
 1923              	.LBB6:
 703:..\src/interruptions.c ****                     
 1924              		.loc 1 703 0
 1925 0142 644B     		ldr	r3, .L141+4
 1926 0144 5A6A     		ldr	r2, [r3, #36]
 1927 0146 624B     		ldr	r3, .L141
 1928 0148 B3F9B232 		ldrsh	r3, [r3, #690]
 1929 014c 5B42     		negs	r3, r3
 1930 014e 9A42     		cmp	r2, r3
 1931 0150 80F2E880 		bge	.L139
 705:..\src/interruptions.c ****                     if (motor_idx == 0){
 1932              		.loc 1 705 0
 1933 0154 5F4B     		ldr	r3, .L141+4
 1934 0156 5B6A     		ldr	r3, [r3, #36]
 1935 0158 5D4A     		ldr	r2, .L141
 1936 015a B2F9B222 		ldrsh	r2, [r2, #690]
 1937 015e 1344     		add	r3, r3, r2
 1938 0160 BB61     		str	r3, [r7, #24]
 706:..\src/interruptions.c ****                         st_ref_p->pos += ((int32) err_joy_2 * c_mem.JOY_spec.joystick_closure_speed
 1939              		.loc 1 706 0
 1940 0162 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1941 0164 002B     		cmp	r3, #0
 1942 0166 12D1     		bne	.L129
 707:..\src/interruptions.c ****                     }
 1943              		.loc 1 707 0
 1944 0168 BB68     		ldr	r3, [r7, #8]
 1945 016a 1A68     		ldr	r2, [r3]
 1946 016c 584B     		ldr	r3, .L141
 1947 016e B3F8B032 		ldrh	r3, [r3, #688]
 1948 0172 1946     		mov	r1, r3
 1949 0174 BB69     		ldr	r3, [r7, #24]
 1950 0176 03FB01F1 		mul	r1, r3, r1
 1951 017a 554B     		ldr	r3, .L141
 1952 017c B3F9B232 		ldrsh	r3, [r3, #690]
 1953 0180 C3F58063 		rsb	r3, r3, #1024
 1954 0184 91FBF3F3 		sdiv	r3, r1, r3
 1955 0188 1A44     		add	r2, r2, r3
 1956 018a BB68     		ldr	r3, [r7, #8]
 1957 018c 1A60     		str	r2, [r3]
 1958              	.L129:
 709:..\src/interruptions.c ****                         st_ref_p->pos -= ((int32) err_joy_2 * c_mem.JOY_spec.joystick_closure_speed
 1959              		.loc 1 709 0
 1960 018e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1961 0190 012B     		cmp	r3, #1
 1962 0192 40F0C780 		bne	.L139
 710:..\src/interruptions.c ****                     }
 1963              		.loc 1 710 0
 1964 0196 BB68     		ldr	r3, [r7, #8]
 1965 0198 1A68     		ldr	r2, [r3]
 1966 019a 4D4B     		ldr	r3, .L141
 1967 019c B3F8B032 		ldrh	r3, [r3, #688]
 1968 01a0 1946     		mov	r1, r3
 1969 01a2 BB69     		ldr	r3, [r7, #24]
 1970 01a4 03FB01F1 		mul	r1, r3, r1
 1971 01a8 494B     		ldr	r3, .L141
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 50


 1972 01aa B3F9B232 		ldrsh	r3, [r3, #690]
 1973 01ae C3F58063 		rsb	r3, r3, #1024
 1974 01b2 91FBF3F3 		sdiv	r3, r1, r3
 1975 01b6 D21A     		subs	r2, r2, r3
 1976 01b8 BB68     		ldr	r3, [r7, #8]
 1977 01ba 1A60     		str	r2, [r3]
 1978              	.LBE6:
 1979              		.loc 1 755 0
 1980 01bc B2E0     		b	.L139
 1981              	.L122:
 1982              	.LBB7:
 717:..\src/interruptions.c ****             int32 pos_sum = (g_meas[c_mem.motor[0].encoder_line].pos[0] + g_meas[c_mem.motor[0].enc
 1983              		.loc 1 717 0
 1984 01be 444B     		ldr	r3, .L141
 1985 01c0 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 1986 01c4 1946     		mov	r1, r3
 1987 01c6 444A     		ldr	r2, .L141+8
 1988 01c8 3423     		movs	r3, #52
 1989 01ca 03FB01F3 		mul	r3, r3, r1
 1990 01ce 1344     		add	r3, r3, r2
 1991 01d0 1A68     		ldr	r2, [r3]
 1992 01d2 3F4B     		ldr	r3, .L141
 1993 01d4 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 1994 01d8 1846     		mov	r0, r3
 1995 01da 3F49     		ldr	r1, .L141+8
 1996 01dc 3423     		movs	r3, #52
 1997 01de 03FB00F3 		mul	r3, r3, r0
 1998 01e2 0B44     		add	r3, r3, r1
 1999 01e4 0433     		adds	r3, r3, #4
 2000 01e6 1B68     		ldr	r3, [r3]
 2001 01e8 D21A     		subs	r2, r2, r3
 2002 01ea 394B     		ldr	r3, .L141
 2003 01ec 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 2004 01f0 1846     		mov	r0, r3
 2005 01f2 3749     		ldr	r1, .L141
 2006 01f4 0346     		mov	r3, r0
 2007 01f6 5B00     		lsls	r3, r3, #1
 2008 01f8 0344     		add	r3, r3, r0
 2009 01fa 1B01     		lsls	r3, r3, #4
 2010 01fc 0B44     		add	r3, r3, r1
 2011 01fe 03F29513 		addw	r3, r3, #405
 2012 0202 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2013 0204 42FA03F3 		asr	r3, r2, r3
 2014 0208 7B61     		str	r3, [r7, #20]
 718:..\src/interruptions.c **** 
 2015              		.loc 1 718 0
 2016 020a 314B     		ldr	r3, .L141
 2017 020c 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 2018 0210 1946     		mov	r1, r3
 2019 0212 314A     		ldr	r2, .L141+8
 2020 0214 3423     		movs	r3, #52
 2021 0216 03FB01F3 		mul	r3, r3, r1
 2022 021a 1344     		add	r3, r3, r2
 2023 021c 1A68     		ldr	r2, [r3]
 2024 021e 2C4B     		ldr	r3, .L141
 2025 0220 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 2026 0224 1846     		mov	r0, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 51


 2027 0226 2C49     		ldr	r1, .L141+8
 2028 0228 3423     		movs	r3, #52
 2029 022a 03FB00F3 		mul	r3, r3, r0
 2030 022e 0B44     		add	r3, r3, r1
 2031 0230 0433     		adds	r3, r3, #4
 2032 0232 1B68     		ldr	r3, [r3]
 2033 0234 1A44     		add	r2, r2, r3
 2034 0236 264B     		ldr	r3, .L141
 2035 0238 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 2036 023c 1846     		mov	r0, r3
 2037 023e 2449     		ldr	r1, .L141
 2038 0240 0346     		mov	r3, r0
 2039 0242 5B00     		lsls	r3, r3, #1
 2040 0244 0344     		add	r3, r3, r0
 2041 0246 1B01     		lsls	r3, r3, #4
 2042 0248 0B44     		add	r3, r3, r1
 2043 024a 03F29513 		addw	r3, r3, #405
 2044 024e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2045 0250 42FA03F3 		asr	r3, r2, r3
 2046 0254 3B61     		str	r3, [r7, #16]
 720:..\src/interruptions.c ****                 if(SIGN(pos_diff) == 1) {
 2047              		.loc 1 720 0
 2048 0256 7B69     		ldr	r3, [r7, #20]
 2049 0258 B3F5FA7F 		cmp	r3, #500
 2050 025c 03DC     		bgt	.L130
 720:..\src/interruptions.c ****                 if(SIGN(pos_diff) == 1) {
 2051              		.loc 1 720 0 is_stmt 0 discriminator 1
 2052 025e 7B69     		ldr	r3, [r7, #20]
 2053 0260 13F5FA7F 		cmn	r3, #500
 2054 0264 3ADA     		bge	.L131
 2055              	.L130:
 721:..\src/interruptions.c ****                     if (motor_idx == 1){
 2056              		.loc 1 721 0 is_stmt 1
 2057 0266 7B69     		ldr	r3, [r7, #20]
 2058 0268 002B     		cmp	r3, #0
 2059 026a 18DB     		blt	.L132
 722:..\src/interruptions.c ****                         st_ref_p->pos += c_mem.JOY_spec.joystick_closure_speed;
 2060              		.loc 1 722 0
 2061 026c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2062 026e 012B     		cmp	r3, #1
 2063 0270 07D1     		bne	.L133
 723:..\src/interruptions.c ****                     }
 2064              		.loc 1 723 0
 2065 0272 BB68     		ldr	r3, [r7, #8]
 2066 0274 1B68     		ldr	r3, [r3]
 2067 0276 164A     		ldr	r2, .L141
 2068 0278 B2F8B022 		ldrh	r2, [r2, #688]
 2069 027c 1A44     		add	r2, r2, r3
 2070 027e BB68     		ldr	r3, [r7, #8]
 2071 0280 1A60     		str	r2, [r3]
 2072              	.L133:
 725:..\src/interruptions.c ****                         st_ref_p->pos -= c_mem.JOY_spec.joystick_closure_speed / 2;
 2073              		.loc 1 725 0
 2074 0282 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2075 0284 002B     		cmp	r3, #0
 2076 0286 4CD1     		bne	.L140
 726:..\src/interruptions.c ****                     }                    
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 52


 2077              		.loc 1 726 0
 2078 0288 BB68     		ldr	r3, [r7, #8]
 2079 028a 1B68     		ldr	r3, [r3]
 2080 028c 104A     		ldr	r2, .L141
 2081 028e B2F8B022 		ldrh	r2, [r2, #688]
 2082 0292 5208     		lsrs	r2, r2, #1
 2083 0294 92B2     		uxth	r2, r2
 2084 0296 9A1A     		subs	r2, r3, r2
 2085 0298 BB68     		ldr	r3, [r7, #8]
 2086 029a 1A60     		str	r2, [r3]
 721:..\src/interruptions.c ****                     if (motor_idx == 1){
 2087              		.loc 1 721 0
 2088 029c 41E0     		b	.L140
 2089              	.L132:
 730:..\src/interruptions.c ****                         st_ref_p->pos += c_mem.JOY_spec.joystick_closure_speed;
 2090              		.loc 1 730 0
 2091 029e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2092 02a0 002B     		cmp	r3, #0
 2093 02a2 07D1     		bne	.L136
 731:..\src/interruptions.c ****                     }
 2094              		.loc 1 731 0
 2095 02a4 BB68     		ldr	r3, [r7, #8]
 2096 02a6 1B68     		ldr	r3, [r3]
 2097 02a8 094A     		ldr	r2, .L141
 2098 02aa B2F8B022 		ldrh	r2, [r2, #688]
 2099 02ae 1A44     		add	r2, r2, r3
 2100 02b0 BB68     		ldr	r3, [r7, #8]
 2101 02b2 1A60     		str	r2, [r3]
 2102              	.L136:
 733:..\src/interruptions.c ****                         st_ref_p->pos -= c_mem.JOY_spec.joystick_closure_speed / 2;
 2103              		.loc 1 733 0
 2104 02b4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2105 02b6 012B     		cmp	r3, #1
 2106 02b8 33D1     		bne	.L140
 734:..\src/interruptions.c ****                     }
 2107              		.loc 1 734 0
 2108 02ba BB68     		ldr	r3, [r7, #8]
 2109 02bc 1B68     		ldr	r3, [r3]
 2110 02be 044A     		ldr	r2, .L141
 2111 02c0 B2F8B022 		ldrh	r2, [r2, #688]
 2112 02c4 5208     		lsrs	r2, r2, #1
 2113 02c6 92B2     		uxth	r2, r2
 2114 02c8 9A1A     		subs	r2, r3, r2
 2115 02ca BB68     		ldr	r3, [r7, #8]
 2116 02cc 1A60     		str	r2, [r3]
 721:..\src/interruptions.c ****                     if (motor_idx == 1){
 2117              		.loc 1 721 0
 2118 02ce 28E0     		b	.L140
 2119              	.L142:
 2120              		.align	2
 2121              	.L141:
 2122 02d0 00000000 		.word	c_mem
 2123 02d4 00000000 		.word	g_adc_meas
 2124 02d8 00000000 		.word	g_meas
 2125              	.L131:
 740:..\src/interruptions.c ****                     if (motor_idx == 0){
 2126              		.loc 1 740 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 53


 2127 02dc 3B69     		ldr	r3, [r7, #16]
 2128 02de 002B     		cmp	r3, #0
 2129 02e0 20DD     		ble	.L139
 741:..\src/interruptions.c ****                         st_ref_p->pos -= c_mem.JOY_spec.joystick_closure_speed * 2;
 2130              		.loc 1 741 0
 2131 02e2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2132 02e4 002B     		cmp	r3, #0
 2133 02e6 08D1     		bne	.L137
 742:..\src/interruptions.c ****                     }
 2134              		.loc 1 742 0
 2135 02e8 BB68     		ldr	r3, [r7, #8]
 2136 02ea 1A68     		ldr	r2, [r3]
 2137 02ec 104B     		ldr	r3, .L143
 2138 02ee B3F8B032 		ldrh	r3, [r3, #688]
 2139 02f2 5B00     		lsls	r3, r3, #1
 2140 02f4 D21A     		subs	r2, r2, r3
 2141 02f6 BB68     		ldr	r3, [r7, #8]
 2142 02f8 1A60     		str	r2, [r3]
 2143              	.L137:
 744:..\src/interruptions.c ****                         st_ref_p->pos -= c_mem.JOY_spec.joystick_closure_speed * 2;
 2144              		.loc 1 744 0
 2145 02fa FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2146 02fc 012B     		cmp	r3, #1
 2147 02fe 08D1     		bne	.L138
 745:..\src/interruptions.c ****                     }
 2148              		.loc 1 745 0
 2149 0300 BB68     		ldr	r3, [r7, #8]
 2150 0302 1A68     		ldr	r2, [r3]
 2151 0304 0A4B     		ldr	r3, .L143
 2152 0306 B3F8B032 		ldrh	r3, [r3, #688]
 2153 030a 5B00     		lsls	r3, r3, #1
 2154 030c D21A     		subs	r2, r2, r3
 2155 030e BB68     		ldr	r3, [r7, #8]
 2156 0310 1A60     		str	r2, [r3]
 2157              	.L138:
 748:..\src/interruptions.c ****                         st_ref_p->pos = 0;
 2158              		.loc 1 748 0
 2159 0312 BB68     		ldr	r3, [r7, #8]
 2160 0314 1B68     		ldr	r3, [r3]
 2161 0316 002B     		cmp	r3, #0
 2162 0318 04DA     		bge	.L139
 749:..\src/interruptions.c ****                     }
 2163              		.loc 1 749 0
 2164 031a BB68     		ldr	r3, [r7, #8]
 2165 031c 0022     		movs	r2, #0
 2166 031e 1A60     		str	r2, [r3]
 2167              	.LBE7:
 2168              		.loc 1 755 0
 2169 0320 00E0     		b	.L139
 2170              	.L140:
 2171              	.LBB8:
 721:..\src/interruptions.c ****                     if (motor_idx == 1){
 2172              		.loc 1 721 0
 2173 0322 00BF     		nop
 2174              	.L139:
 2175              	.LBE8:
 2176              		.loc 1 755 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 54


 2177 0324 00BF     		nop
 2178 0326 2437     		adds	r7, r7, #36
 2179              		.cfi_def_cfa_offset 4
 2180 0328 BD46     		mov	sp, r7
 2181              		.cfi_def_cfa_register 13
 2182              		@ sp needed
 2183 032a 80BC     		pop	{r7}
 2184              		.cfi_restore 7
 2185              		.cfi_def_cfa_offset 0
 2186 032c 7047     		bx	lr
 2187              	.L144:
 2188 032e 00BF     		.align	2
 2189              	.L143:
 2190 0330 00000000 		.word	c_mem
 2191              		.cfi_endproc
 2192              	.LFE69:
 2193              		.size	compute_SoftHand_2_motors_joystick_reference, .-compute_SoftHand_2_motors_joystick_reference
 2194              		.section	.text.compute_SoftHand_2_motors_emg_reference,"ax",%progbits
 2195              		.align	2
 2196              		.global	compute_SoftHand_2_motors_emg_reference
 2197              		.thumb
 2198              		.thumb_func
 2199              		.type	compute_SoftHand_2_motors_emg_reference, %function
 2200              	compute_SoftHand_2_motors_emg_reference:
 2201              	.LFB70:
 756:..\src/interruptions.c **** 
 757:..\src/interruptions.c **** 
 758:..\src/interruptions.c **** //==============================================================================
 759:..\src/interruptions.c **** //                                       COMPUTE SOFTHAND 2 MOTORS EMG REFERENCE
 760:..\src/interruptions.c **** //==============================================================================
 761:..\src/interruptions.c **** void compute_SoftHand_2_motors_emg_reference(uint8 motor_idx, struct st_ref* st_ref_p, struct st_re
 762:..\src/interruptions.c ****     int32 err_emg_1, int32 err_emg_2) {
 2202              		.loc 1 762 0
 2203              		.cfi_startproc
 2204              		@ args = 4, pretend = 0, frame = 16
 2205              		@ frame_needed = 1, uses_anonymous_args = 0
 2206 0000 80B5     		push	{r7, lr}
 2207              		.cfi_def_cfa_offset 8
 2208              		.cfi_offset 7, -8
 2209              		.cfi_offset 14, -4
 2210 0002 84B0     		sub	sp, sp, #16
 2211              		.cfi_def_cfa_offset 24
 2212 0004 00AF     		add	r7, sp, #0
 2213              		.cfi_def_cfa_register 7
 2214 0006 B960     		str	r1, [r7, #8]
 2215 0008 7A60     		str	r2, [r7, #4]
 2216 000a 3B60     		str	r3, [r7]
 2217 000c 0346     		mov	r3, r0
 2218 000e FB73     		strb	r3, [r7, #15]
 763:..\src/interruptions.c ****     
 764:..\src/interruptions.c ****     //Compute reference using a FSM for choosing the right sinergy to activate (call this routine o
 765:..\src/interruptions.c ****     static uint8 fsm_state;     
 766:..\src/interruptions.c ****     if (motor_idx == 0){        //update the fsm only at motor 0 compute reference call and hold th
 2219              		.loc 1 766 0
 2220 0010 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2221 0012 002B     		cmp	r3, #0
 2222 0014 05D1     		bne	.L146
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 55


 767:..\src/interruptions.c ****         fsm_state = emg_activation_velocity_fsm();
 2223              		.loc 1 767 0
 2224 0016 FFF7FEFF 		bl	emg_activation_velocity_fsm
 2225 001a 0346     		mov	r3, r0
 2226 001c 1A46     		mov	r2, r3
 2227 001e 614B     		ldr	r3, .L161
 2228 0020 1A70     		strb	r2, [r3]
 2229              	.L146:
 768:..\src/interruptions.c ****     }
 769:..\src/interruptions.c ****        
 770:..\src/interruptions.c ****     switch (fsm_state){
 2230              		.loc 1 770 0
 2231 0022 604B     		ldr	r3, .L161
 2232 0024 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2233 0026 032B     		cmp	r3, #3
 2234 0028 00F2B780 		bhi	.L158
 2235 002c 01A2     		adr	r2, .L149
 2236 002e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2237 0032 00BF     		.p2align 2
 2238              	.L149:
 2239 0034 45000000 		.word	.L148+1
 2240 0038 45000000 		.word	.L148+1
 2241 003c BF000000 		.word	.L150+1
 2242 0040 4F000000 		.word	.L151+1
 2243              		.p2align 1
 2244              	.L148:
 771:..\src/interruptions.c ****         case RELAX_STATE: case TIMER_STATE:
 772:..\src/interruptions.c ****              
 773:..\src/interruptions.c ****             st_ref_p->pos = st_refOld_p->pos;
 2245              		.loc 1 773 0
 2246 0044 7B68     		ldr	r3, [r7, #4]
 2247 0046 1A68     		ldr	r2, [r3]
 2248 0048 BB68     		ldr	r3, [r7, #8]
 2249 004a 1A60     		str	r2, [r3]
 774:..\src/interruptions.c ****     
 775:..\src/interruptions.c ****             break;
 2250              		.loc 1 775 0
 2251 004c A5E0     		b	.L147
 2252              	.L151:
 776:..\src/interruptions.c ****         
 777:..\src/interruptions.c ****         case MOVE_SLOW_ACT: // First sinergy movement (related to default slow activation)
 778:..\src/interruptions.c **** 
 779:..\src/interruptions.c ****             if (err_emg_1 > 0 && err_emg_1 > err_emg_2) {   //both motors wind the wire around the 
 2253              		.loc 1 779 0
 2254 004e 3B68     		ldr	r3, [r7]
 2255 0050 002B     		cmp	r3, #0
 2256 0052 17DD     		ble	.L152
 2257              		.loc 1 779 0 is_stmt 0 discriminator 1
 2258 0054 3A68     		ldr	r2, [r7]
 2259 0056 BB69     		ldr	r3, [r7, #24]
 2260 0058 9A42     		cmp	r2, r3
 2261 005a 13DD     		ble	.L152
 780:..\src/interruptions.c ****                st_ref_p->pos = st_refOld_p->pos + (err_emg_1 * g_mem.emg.emg_speed[0] << 2) / (1024
 2262              		.loc 1 780 0 is_stmt 1
 2263 005c 7B68     		ldr	r3, [r7, #4]
 2264 005e 1A68     		ldr	r2, [r3]
 2265 0060 514B     		ldr	r3, .L161+4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 56


 2266 0062 93F8FC31 		ldrb	r3, [r3, #508]	@ zero_extendqisi2
 2267 0066 1946     		mov	r1, r3
 2268 0068 3B68     		ldr	r3, [r7]
 2269 006a 03FB01F3 		mul	r3, r3, r1
 2270 006e 9900     		lsls	r1, r3, #2
 2271 0070 4E4B     		ldr	r3, .L161+8
 2272 0072 B3F8F031 		ldrh	r3, [r3, #496]
 2273 0076 C3F58063 		rsb	r3, r3, #1024
 2274 007a 91FBF3F3 		sdiv	r3, r1, r3
 2275 007e 1A44     		add	r2, r2, r3
 2276 0080 BB68     		ldr	r3, [r7, #8]
 2277 0082 1A60     		str	r2, [r3]
 2278              	.L152:
 781:..\src/interruptions.c ****             }
 782:..\src/interruptions.c ****             if (err_emg_2 > 0 && err_emg_2 > err_emg_1) {   //both motors unroll the wire around th
 2279              		.loc 1 782 0
 2280 0084 BB69     		ldr	r3, [r7, #24]
 2281 0086 002B     		cmp	r3, #0
 2282 0088 40F38480 		ble	.L159
 2283              		.loc 1 782 0 is_stmt 0 discriminator 1
 2284 008c BA69     		ldr	r2, [r7, #24]
 2285 008e 3B68     		ldr	r3, [r7]
 2286 0090 9A42     		cmp	r2, r3
 2287 0092 7FDD     		ble	.L159
 783:..\src/interruptions.c ****                st_ref_p->pos = st_refOld_p->pos - (err_emg_2 * g_mem.emg.emg_speed[1] << 2) / (1024
 2288              		.loc 1 783 0 is_stmt 1
 2289 0094 7B68     		ldr	r3, [r7, #4]
 2290 0096 1A68     		ldr	r2, [r3]
 2291 0098 434B     		ldr	r3, .L161+4
 2292 009a 93F8FD31 		ldrb	r3, [r3, #509]	@ zero_extendqisi2
 2293 009e 1946     		mov	r1, r3
 2294 00a0 BB69     		ldr	r3, [r7, #24]
 2295 00a2 03FB01F3 		mul	r3, r3, r1
 2296 00a6 9900     		lsls	r1, r3, #2
 2297 00a8 404B     		ldr	r3, .L161+8
 2298 00aa B3F8F231 		ldrh	r3, [r3, #498]
 2299 00ae C3F58063 		rsb	r3, r3, #1024
 2300 00b2 91FBF3F3 		sdiv	r3, r1, r3
 2301 00b6 D21A     		subs	r2, r2, r3
 2302 00b8 BB68     		ldr	r3, [r7, #8]
 2303 00ba 1A60     		str	r2, [r3]
 784:..\src/interruptions.c ****             }
 785:..\src/interruptions.c ****             
 786:..\src/interruptions.c ****             break;
 2304              		.loc 1 786 0
 2305 00bc 6AE0     		b	.L159
 2306              	.L150:
 787:..\src/interruptions.c ****             
 788:..\src/interruptions.c ****         case MOVE_FAST_ACT: // Second sinergy movement (related to default fast activation)
 789:..\src/interruptions.c ****             
 790:..\src/interruptions.c ****             if (err_emg_1 > 0 && err_emg_1 > err_emg_2) {   //(Pinch) The wire is winded around the
 2307              		.loc 1 790 0
 2308 00be 3B68     		ldr	r3, [r7]
 2309 00c0 002B     		cmp	r3, #0
 2310 00c2 31DD     		ble	.L154
 2311              		.loc 1 790 0 is_stmt 0 discriminator 1
 2312 00c4 3A68     		ldr	r2, [r7]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 57


 2313 00c6 BB69     		ldr	r3, [r7, #24]
 2314 00c8 9A42     		cmp	r2, r3
 2315 00ca 2DDD     		ble	.L154
 791:..\src/interruptions.c ****                 if (motor_idx == 0){
 2316              		.loc 1 791 0 is_stmt 1
 2317 00cc FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2318 00ce 002B     		cmp	r3, #0
 2319 00d0 13D1     		bne	.L155
 792:..\src/interruptions.c ****                     st_ref_p->pos = st_refOld_p->pos + (err_emg_1 * g_mem.emg.emg_speed[0] << 2) / 
 2320              		.loc 1 792 0
 2321 00d2 7B68     		ldr	r3, [r7, #4]
 2322 00d4 1A68     		ldr	r2, [r3]
 2323 00d6 344B     		ldr	r3, .L161+4
 2324 00d8 93F8FC31 		ldrb	r3, [r3, #508]	@ zero_extendqisi2
 2325 00dc 1946     		mov	r1, r3
 2326 00de 3B68     		ldr	r3, [r7]
 2327 00e0 03FB01F3 		mul	r3, r3, r1
 2328 00e4 9900     		lsls	r1, r3, #2
 2329 00e6 314B     		ldr	r3, .L161+8
 2330 00e8 B3F8F031 		ldrh	r3, [r3, #496]
 2331 00ec C3F58063 		rsb	r3, r3, #1024
 2332 00f0 91FBF3F3 		sdiv	r3, r1, r3
 2333 00f4 1A44     		add	r2, r2, r3
 2334 00f6 BB68     		ldr	r3, [r7, #8]
 2335 00f8 1A60     		str	r2, [r3]
 2336              	.L155:
 793:..\src/interruptions.c ****                 }
 794:..\src/interruptions.c ****                 if (motor_idx == 1){
 2337              		.loc 1 794 0
 2338 00fa FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2339 00fc 012B     		cmp	r3, #1
 2340 00fe 13D1     		bne	.L154
 795:..\src/interruptions.c ****                     st_ref_p->pos = st_refOld_p->pos - (err_emg_1 * g_mem.emg.emg_speed[0] << 2) / 
 2341              		.loc 1 795 0
 2342 0100 7B68     		ldr	r3, [r7, #4]
 2343 0102 1A68     		ldr	r2, [r3]
 2344 0104 284B     		ldr	r3, .L161+4
 2345 0106 93F8FC31 		ldrb	r3, [r3, #508]	@ zero_extendqisi2
 2346 010a 1946     		mov	r1, r3
 2347 010c 3B68     		ldr	r3, [r7]
 2348 010e 03FB01F3 		mul	r3, r3, r1
 2349 0112 9900     		lsls	r1, r3, #2
 2350 0114 254B     		ldr	r3, .L161+8
 2351 0116 B3F8F031 		ldrh	r3, [r3, #496]
 2352 011a C3F58063 		rsb	r3, r3, #1024
 2353 011e 91FBF3F3 		sdiv	r3, r1, r3
 2354 0122 D21A     		subs	r2, r2, r3
 2355 0124 BB68     		ldr	r3, [r7, #8]
 2356 0126 1A60     		str	r2, [r3]
 2357              	.L154:
 796:..\src/interruptions.c ****                 }   
 797:..\src/interruptions.c ****             }
 798:..\src/interruptions.c ****             if (err_emg_2 > 0 && err_emg_2 > err_emg_1) {   //(Index point) The wire is unwinded fr
 2358              		.loc 1 798 0
 2359 0128 BB69     		ldr	r3, [r7, #24]
 2360 012a 002B     		cmp	r3, #0
 2361 012c 34DD     		ble	.L160
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 58


 2362              		.loc 1 798 0 is_stmt 0 discriminator 1
 2363 012e BA69     		ldr	r2, [r7, #24]
 2364 0130 3B68     		ldr	r3, [r7]
 2365 0132 9A42     		cmp	r2, r3
 2366 0134 30DD     		ble	.L160
 799:..\src/interruptions.c ****                 if (motor_idx == 0){
 2367              		.loc 1 799 0 is_stmt 1
 2368 0136 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2369 0138 002B     		cmp	r3, #0
 2370 013a 13D1     		bne	.L157
 800:..\src/interruptions.c ****                     st_ref_p->pos = st_refOld_p->pos - (err_emg_2 * g_mem.emg.emg_speed[1] << 2) / 
 2371              		.loc 1 800 0
 2372 013c 7B68     		ldr	r3, [r7, #4]
 2373 013e 1A68     		ldr	r2, [r3]
 2374 0140 194B     		ldr	r3, .L161+4
 2375 0142 93F8FD31 		ldrb	r3, [r3, #509]	@ zero_extendqisi2
 2376 0146 1946     		mov	r1, r3
 2377 0148 BB69     		ldr	r3, [r7, #24]
 2378 014a 03FB01F3 		mul	r3, r3, r1
 2379 014e 9900     		lsls	r1, r3, #2
 2380 0150 164B     		ldr	r3, .L161+8
 2381 0152 B3F8F231 		ldrh	r3, [r3, #498]
 2382 0156 C3F58063 		rsb	r3, r3, #1024
 2383 015a 91FBF3F3 		sdiv	r3, r1, r3
 2384 015e D21A     		subs	r2, r2, r3
 2385 0160 BB68     		ldr	r3, [r7, #8]
 2386 0162 1A60     		str	r2, [r3]
 2387              	.L157:
 801:..\src/interruptions.c ****                 }
 802:..\src/interruptions.c ****                 if (motor_idx == 1){
 2388              		.loc 1 802 0
 2389 0164 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2390 0166 012B     		cmp	r3, #1
 2391 0168 16D1     		bne	.L160
 803:..\src/interruptions.c ****                     st_ref_p->pos = st_refOld_p->pos + (err_emg_2 * g_mem.emg.emg_speed[1] << 2) / 
 2392              		.loc 1 803 0
 2393 016a 7B68     		ldr	r3, [r7, #4]
 2394 016c 1A68     		ldr	r2, [r3]
 2395 016e 0E4B     		ldr	r3, .L161+4
 2396 0170 93F8FD31 		ldrb	r3, [r3, #509]	@ zero_extendqisi2
 2397 0174 1946     		mov	r1, r3
 2398 0176 BB69     		ldr	r3, [r7, #24]
 2399 0178 03FB01F3 		mul	r3, r3, r1
 2400 017c 9900     		lsls	r1, r3, #2
 2401 017e 0B4B     		ldr	r3, .L161+8
 2402 0180 B3F8F231 		ldrh	r3, [r3, #498]
 2403 0184 C3F58063 		rsb	r3, r3, #1024
 2404 0188 91FBF3F3 		sdiv	r3, r1, r3
 2405 018c 1A44     		add	r2, r2, r3
 2406 018e BB68     		ldr	r3, [r7, #8]
 2407 0190 1A60     		str	r2, [r3]
 804:..\src/interruptions.c ****                 }
 805:..\src/interruptions.c ****             }
 806:..\src/interruptions.c ****             
 807:..\src/interruptions.c ****             break;
 2408              		.loc 1 807 0
 2409 0192 01E0     		b	.L160
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 59


 2410              	.L159:
 786:..\src/interruptions.c ****             
 2411              		.loc 1 786 0
 2412 0194 00BF     		nop
 2413 0196 00E0     		b	.L158
 2414              	.L160:
 2415              		.loc 1 807 0
 2416 0198 00BF     		nop
 2417              	.L147:
 2418              	.L158:
 808:..\src/interruptions.c ****     }
 809:..\src/interruptions.c ****  
 810:..\src/interruptions.c **** }
 2419              		.loc 1 810 0
 2420 019a 00BF     		nop
 2421 019c 1037     		adds	r7, r7, #16
 2422              		.cfi_def_cfa_offset 8
 2423 019e BD46     		mov	sp, r7
 2424              		.cfi_def_cfa_register 13
 2425              		@ sp needed
 2426 01a0 80BD     		pop	{r7, pc}
 2427              	.L162:
 2428 01a2 00BF     		.align	2
 2429              	.L161:
 2430 01a4 8E000000 		.word	fsm_state.10509
 2431 01a8 00000000 		.word	g_mem
 2432 01ac 00000000 		.word	c_mem
 2433              		.cfi_endproc
 2434              	.LFE70:
 2435              		.size	compute_SoftHand_2_motors_emg_reference, .-compute_SoftHand_2_motors_emg_reference
 2436              		.section	.text.motor_control_generic,"ax",%progbits
 2437              		.align	2
 2438              		.global	motor_control_generic
 2439              		.thumb
 2440              		.thumb_func
 2441              		.type	motor_control_generic, %function
 2442              	motor_control_generic:
 2443              	.LFB71:
 811:..\src/interruptions.c **** 
 812:..\src/interruptions.c **** //==============================================================================
 813:..\src/interruptions.c **** //                                                         MOTOR CONTROL GENERIC
 814:..\src/interruptions.c **** //==============================================================================
 815:..\src/interruptions.c **** void motor_control_generic(uint8 idx) {
 2444              		.loc 1 815 0
 2445              		.cfi_startproc
 2446              		@ args = 0, pretend = 0, frame = 16
 2447              		@ frame_needed = 1, uses_anonymous_args = 0
 2448 0000 80B5     		push	{r7, lr}
 2449              		.cfi_def_cfa_offset 8
 2450              		.cfi_offset 7, -8
 2451              		.cfi_offset 14, -4
 2452 0002 84B0     		sub	sp, sp, #16
 2453              		.cfi_def_cfa_offset 24
 2454 0004 00AF     		add	r7, sp, #0
 2455              		.cfi_def_cfa_register 7
 2456 0006 0346     		mov	r3, r0
 2457 0008 FB71     		strb	r3, [r7, #7]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 60


 816:..\src/interruptions.c ****     
 817:..\src/interruptions.c ****     int32 CYDATA pwm_input = 0;
 2458              		.loc 1 817 0
 2459 000a 0023     		movs	r3, #0
 2460 000c FB60     		str	r3, [r7, #12]
 818:..\src/interruptions.c ****     
 819:..\src/interruptions.c ****     struct st_motor* MOT = &c_mem.motor[idx]; // Motor struct
 2461              		.loc 1 819 0
 2462 000e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 2463 0010 1346     		mov	r3, r2
 2464 0012 DB00     		lsls	r3, r3, #3
 2465 0014 9B1A     		subs	r3, r3, r2
 2466 0016 1B01     		lsls	r3, r3, #4
 2467 0018 B033     		adds	r3, r3, #176
 2468 001a 314A     		ldr	r2, .L184
 2469 001c 1344     		add	r3, r3, r2
 2470 001e BB60     		str	r3, [r7, #8]
 820:..\src/interruptions.c ****     
 821:..\src/interruptions.c ****     // ======================= UPDATE MOTOR REFERENCE ==========================            
 822:..\src/interruptions.c ****     //NOT NEEDED compute_reference(idx, &g_ref[idx], &g_refOld[idx]);
 823:..\src/interruptions.c ****     
 824:..\src/interruptions.c ****    
 825:..\src/interruptions.c ****     switch(MOT->control_mode) {
 2471              		.loc 1 825 0
 2472 0020 BB68     		ldr	r3, [r7, #8]
 2473 0022 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 2474 0026 032B     		cmp	r3, #3
 2475 0028 3DD8     		bhi	.L164
 2476 002a 01A2     		adr	r2, .L166
 2477 002c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2478              		.p2align 2
 2479              	.L166:
 2480 0030 A7000000 		.word	.L164+1
 2481 0034 41000000 		.word	.L167+1
 2482 0038 A7000000 		.word	.L164+1
 2483 003c A7000000 		.word	.L164+1
 2484              		.p2align 1
 2485              	.L167:
 826:..\src/interruptions.c ****         // ======================= CURRENT AND POSITION CONTROL =======================
 827:..\src/interruptions.c ****         case CURR_AND_POS_CONTROL:
 828:..\src/interruptions.c ****         break;
 829:..\src/interruptions.c ****         // ============================== POSITION CONTROL =====================
 830:..\src/interruptions.c ****         case CONTROL_ANGLE:
 831:..\src/interruptions.c ****         break;    
 832:..\src/interruptions.c ****         // ========================== CURRENT CONTROL ==========================
 833:..\src/interruptions.c ****         case CONTROL_CURRENT:    
 834:..\src/interruptions.c ****         break;
 835:..\src/interruptions.c ****         
 836:..\src/interruptions.c ****         // ================= DIRECT PWM CONTROL ================================
 837:..\src/interruptions.c ****         case CONTROL_PWM:
 838:..\src/interruptions.c **** 
 839:..\src/interruptions.c ****             pwm_input = g_ref[idx].pwm;
 2486              		.loc 1 839 0
 2487 0040 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2488 0042 284A     		ldr	r2, .L184+4
 2489 0044 1B01     		lsls	r3, r3, #4
 2490 0046 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 61


 2491 0048 0833     		adds	r3, r3, #8
 2492 004a 1B68     		ldr	r3, [r3]
 2493 004c FB60     		str	r3, [r7, #12]
 840:..\src/interruptions.c **** 
 841:..\src/interruptions.c ****             if (pwm_input != 0){
 2494              		.loc 1 841 0
 2495 004e FB68     		ldr	r3, [r7, #12]
 2496 0050 002B     		cmp	r3, #0
 2497 0052 24D0     		beq	.L170
 842:..\src/interruptions.c ****                 // PWM duty cycle is always fixed to 50%
 843:..\src/interruptions.c ****                 switch(MOT->motor_pwm_frequency){
 2498              		.loc 1 843 0
 2499 0054 BB68     		ldr	r3, [r7, #8]
 2500 0056 93F83230 		ldrb	r3, [r3, #50]	@ zero_extendqisi2
 2501 005a 042B     		cmp	r3, #4
 2502 005c 22D8     		bhi	.L183
 2503 005e 01A2     		adr	r2, .L173
 2504 0060 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2505              		.p2align 2
 2506              	.L173:
 2507 0064 79000000 		.word	.L172+1
 2508 0068 81000000 		.word	.L174+1
 2509 006c 89000000 		.word	.L175+1
 2510 0070 91000000 		.word	.L176+1
 2511 0074 97000000 		.word	.L177+1
 2512              		.p2align 1
 2513              	.L172:
 844:..\src/interruptions.c ****                     case FREQ_30HZ:
 845:..\src/interruptions.c ****                         pwm_input = 4999;   //period 9999
 2514              		.loc 1 845 0
 2515 0078 41F28733 		movw	r3, #4999
 2516 007c FB60     		str	r3, [r7, #12]
 846:..\src/interruptions.c ****                     break;
 2517              		.loc 1 846 0
 2518 007e 11E0     		b	.L178
 2519              	.L174:
 847:..\src/interruptions.c ****                     case FREQ_100HZ:
 848:..\src/interruptions.c ****                         pwm_input = 1499;   //period 2999
 2520              		.loc 1 848 0
 2521 0080 40F2DB53 		movw	r3, #1499
 2522 0084 FB60     		str	r3, [r7, #12]
 849:..\src/interruptions.c ****                     break;
 2523              		.loc 1 849 0
 2524 0086 0DE0     		b	.L178
 2525              	.L175:
 850:..\src/interruptions.c ****                     case FREQ_300HZ:
 851:..\src/interruptions.c ****                         pwm_input = 499;    //period 999
 2526              		.loc 1 851 0
 2527 0088 40F2F313 		movw	r3, #499
 2528 008c FB60     		str	r3, [r7, #12]
 852:..\src/interruptions.c ****                     break;
 2529              		.loc 1 852 0
 2530 008e 09E0     		b	.L178
 2531              	.L176:
 853:..\src/interruptions.c ****                     case FREQ_1000HZ:
 854:..\src/interruptions.c ****                         pwm_input = 149;    //period 299
 2532              		.loc 1 854 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 62


 2533 0090 9523     		movs	r3, #149
 2534 0092 FB60     		str	r3, [r7, #12]
 855:..\src/interruptions.c ****                     break;
 2535              		.loc 1 855 0
 2536 0094 06E0     		b	.L178
 2537              	.L177:
 856:..\src/interruptions.c ****                     case FREQ_3000HZ:
 857:..\src/interruptions.c ****                         pwm_input = 49;     //period 99
 2538              		.loc 1 857 0
 2539 0096 3123     		movs	r3, #49
 2540 0098 FB60     		str	r3, [r7, #12]
 858:..\src/interruptions.c ****                     break;
 2541              		.loc 1 858 0
 2542 009a 00BF     		nop
 2543 009c 02E0     		b	.L178
 2544              	.L170:
 859:..\src/interruptions.c ****                 }
 860:..\src/interruptions.c ****             }
 861:..\src/interruptions.c ****             else {
 862:..\src/interruptions.c ****                 pwm_input = 0;
 2545              		.loc 1 862 0
 2546 009e 0023     		movs	r3, #0
 2547 00a0 FB60     		str	r3, [r7, #12]
 863:..\src/interruptions.c ****             }
 864:..\src/interruptions.c ****             
 865:..\src/interruptions.c ****         break;
 2548              		.loc 1 865 0
 2549 00a2 FFE7     		b	.L183
 2550              	.L178:
 2551              	.L183:
 2552 00a4 00BF     		nop
 2553              	.L164:
 866:..\src/interruptions.c ****             
 867:..\src/interruptions.c ****     }
 868:..\src/interruptions.c **** 
 869:..\src/interruptions.c ****     // Set motor direction and write pwm value
 870:..\src/interruptions.c ****     switch (idx) {
 2554              		.loc 1 870 0
 2555 00a6 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2556 00a8 002B     		cmp	r3, #0
 2557 00aa 02D0     		beq	.L180
 2558 00ac 012B     		cmp	r3, #1
 2559 00ae 09D0     		beq	.L181
 871:..\src/interruptions.c ****         case 0:         // Motor 1
 872:..\src/interruptions.c ****             // DRIVER_MC33887 standard
 873:..\src/interruptions.c ****             PWM_MOTORS_WriteCompare1(abs(pwm_input));    
 874:..\src/interruptions.c ****             break;
 875:..\src/interruptions.c ****         case 1:         // Motor 2
 876:..\src/interruptions.c ****             
 877:..\src/interruptions.c ****             // DRIVER_MC33887 standard
 878:..\src/interruptions.c ****             PWM_MOTORS_WriteCompare2(abs(pwm_input)); 
 879:..\src/interruptions.c ****             break;
 880:..\src/interruptions.c ****         default:
 881:..\src/interruptions.c ****             break;
 2560              		.loc 1 881 0
 2561 00b0 11E0     		b	.L182
 2562              	.L180:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 63


 873:..\src/interruptions.c ****             break;
 2563              		.loc 1 873 0
 2564 00b2 FB68     		ldr	r3, [r7, #12]
 2565 00b4 002B     		cmp	r3, #0
 2566 00b6 B8BF     		it	lt
 2567 00b8 5B42     		rsblt	r3, r3, #0
 2568 00ba 9BB2     		uxth	r3, r3
 2569 00bc 1846     		mov	r0, r3
 2570 00be FFF7FEFF 		bl	PWM_MOTORS_WriteCompare1
 874:..\src/interruptions.c ****         case 1:         // Motor 2
 2571              		.loc 1 874 0
 2572 00c2 08E0     		b	.L182
 2573              	.L181:
 878:..\src/interruptions.c ****             break;
 2574              		.loc 1 878 0
 2575 00c4 FB68     		ldr	r3, [r7, #12]
 2576 00c6 002B     		cmp	r3, #0
 2577 00c8 B8BF     		it	lt
 2578 00ca 5B42     		rsblt	r3, r3, #0
 2579 00cc 9BB2     		uxth	r3, r3
 2580 00ce 1846     		mov	r0, r3
 2581 00d0 FFF7FEFF 		bl	PWM_MOTORS_WriteCompare2
 879:..\src/interruptions.c ****         default:
 2582              		.loc 1 879 0
 2583 00d4 00BF     		nop
 2584              	.L182:
 882:..\src/interruptions.c ****     }
 883:..\src/interruptions.c ****     
 884:..\src/interruptions.c **** }
 2585              		.loc 1 884 0
 2586 00d6 00BF     		nop
 2587 00d8 1037     		adds	r7, r7, #16
 2588              		.cfi_def_cfa_offset 8
 2589 00da BD46     		mov	sp, r7
 2590              		.cfi_def_cfa_register 13
 2591              		@ sp needed
 2592 00dc 80BD     		pop	{r7, pc}
 2593              	.L185:
 2594 00de 00BF     		.align	2
 2595              	.L184:
 2596 00e0 00000000 		.word	c_mem
 2597 00e4 00000000 		.word	g_ref
 2598              		.cfi_endproc
 2599              	.LFE71:
 2600              		.size	motor_control_generic, .-motor_control_generic
 2601              		.global	__aeabi_fcmpeq
 2602              		.global	__aeabi_fmul
 2603              		.global	__aeabi_f2iz
 2604              		.global	__aeabi_fcmplt
 2605              		.section	.text.encoder_reading_SPI,"ax",%progbits
 2606              		.align	2
 2607              		.global	encoder_reading_SPI
 2608              		.thumb
 2609              		.thumb_func
 2610              		.type	encoder_reading_SPI, %function
 2611              	encoder_reading_SPI:
 2612              	.LFB72:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 64


 885:..\src/interruptions.c **** 
 886:..\src/interruptions.c **** //==============================================================================
 887:..\src/interruptions.c **** //                                                           ENCODER READING SPI
 888:..\src/interruptions.c **** //==============================================================================
 889:..\src/interruptions.c **** 
 890:..\src/interruptions.c **** void encoder_reading_SPI(uint8 n_line, uint8 assoc_motor) {
 2613              		.loc 1 890 0
 2614              		.cfi_startproc
 2615              		@ args = 0, pretend = 0, frame = 48
 2616              		@ frame_needed = 1, uses_anonymous_args = 0
 2617 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2618              		.cfi_def_cfa_offset 20
 2619              		.cfi_offset 4, -20
 2620              		.cfi_offset 5, -16
 2621              		.cfi_offset 6, -12
 2622              		.cfi_offset 7, -8
 2623              		.cfi_offset 14, -4
 2624 0002 8FB0     		sub	sp, sp, #60
 2625              		.cfi_def_cfa_offset 80
 2626 0004 02AF     		add	r7, sp, #8
 2627              		.cfi_def_cfa 7, 72
 2628 0006 0346     		mov	r3, r0
 2629 0008 0A46     		mov	r2, r1
 2630 000a FB71     		strb	r3, [r7, #7]
 2631 000c 1346     		mov	r3, r2
 2632 000e BB71     		strb	r3, [r7, #6]
 891:..\src/interruptions.c **** 
 892:..\src/interruptions.c ****     uint8 CYDATA index = 0;
 2633              		.loc 1 892 0
 2634 0010 0023     		movs	r3, #0
 2635 0012 87F82F30 		strb	r3, [r7, #47]
 893:..\src/interruptions.c ****     
 894:..\src/interruptions.c ****     // Encoder Variables  
 895:..\src/interruptions.c ****     uint8 jj;
 896:..\src/interruptions.c ****      
 897:..\src/interruptions.c ****     uint32 aux_encoder[NUM_OF_SENSORS];
 898:..\src/interruptions.c ****     int16 tmp_value_encoder;
 899:..\src/interruptions.c ****     int32 tmp_value_encoder_32;
 900:..\src/interruptions.c ****     int32 value_encoder;
 901:..\src/interruptions.c ****     int32 speed_encoder;
 902:..\src/interruptions.c ****     int32 value_diff;
 903:..\src/interruptions.c **** 	int8 init_rot = 0;
 2636              		.loc 1 903 0
 2637 0016 0023     		movs	r3, #0
 2638 0018 87F82730 		strb	r3, [r7, #39]
 904:..\src/interruptions.c **** 
 905:..\src/interruptions.c ****     static int32 last_value_encoder[N_ENCODER_LINE_MAX][NUM_OF_SENSORS];
 906:..\src/interruptions.c ****     static int32 comp_value_encoder[N_ENCODER_LINE_MAX][NUM_OF_SENSORS];
 907:..\src/interruptions.c ****     static uint8 error[N_ENCODER_LINE_MAX][NUM_OF_SENSORS];
 908:..\src/interruptions.c ****     
 909:..\src/interruptions.c ****     static CYBIT only_first_time[N_ENCODER_LINE_MAX] = {TRUE, TRUE};
 910:..\src/interruptions.c ****     static CYBIT safe_startup_motor_activation[N_ENCODER_LINE_MAX] = {FALSE, FALSE};
 911:..\src/interruptions.c ****     static uint8 one_time_execute[N_ENCODER_LINE_MAX] = {0, 0};
 912:..\src/interruptions.c ****     static uint32 count_startup_motor[N_ENCODER_LINE_MAX] = {0, 0};
 913:..\src/interruptions.c **** 
 914:..\src/interruptions.c ****     static int32 v_value[N_ENCODER_LINE_MAX][N_ENCODERS];   //last value for velocity
 915:..\src/interruptions.c ****     static int32 vv_value[N_ENCODER_LINE_MAX][N_ENCODERS];  //last last value for velocity
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 65


 916:..\src/interruptions.c ****     static int32 vvv_value[N_ENCODER_LINE_MAX][N_ENCODERS];  //last last last value for velocity
 917:..\src/interruptions.c ****     
 918:..\src/interruptions.c ****     if (reset_last_value_flag[n_line]) {
 2639              		.loc 1 918 0
 2640 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2641 001e 924A     		ldr	r2, .L223
 2642 0020 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 2643 0022 002B     		cmp	r3, #0
 2644 0024 19D0     		beq	.L187
 919:..\src/interruptions.c ****         for (jj = N_ENCODERS; jj--;) 
 2645              		.loc 1 919 0
 2646 0026 0323     		movs	r3, #3
 2647 0028 87F82E30 		strb	r3, [r7, #46]
 2648 002c 0AE0     		b	.L188
 2649              	.L189:
 920:..\src/interruptions.c ****             last_value_encoder[n_line][jj] = 0;
 2650              		.loc 1 920 0
 2651 002e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 2652 0030 97F82E10 		ldrb	r1, [r7, #46]	@ zero_extendqisi2
 2653 0034 8D48     		ldr	r0, .L223+4
 2654 0036 1346     		mov	r3, r2
 2655 0038 5B00     		lsls	r3, r3, #1
 2656 003a 1344     		add	r3, r3, r2
 2657 003c 0B44     		add	r3, r3, r1
 2658 003e 0022     		movs	r2, #0
 2659 0040 40F82320 		str	r2, [r0, r3, lsl #2]
 2660              	.L188:
 919:..\src/interruptions.c ****         for (jj = N_ENCODERS; jj--;) 
 2661              		.loc 1 919 0 discriminator 1
 2662 0044 97F82E30 		ldrb	r3, [r7, #46]	@ zero_extendqisi2
 2663 0048 5A1E     		subs	r2, r3, #1
 2664 004a 87F82E20 		strb	r2, [r7, #46]
 2665 004e 002B     		cmp	r3, #0
 2666 0050 EDD1     		bne	.L189
 921:..\src/interruptions.c ****         
 922:..\src/interruptions.c ****         reset_last_value_flag[n_line] = 0;
 2667              		.loc 1 922 0
 2668 0052 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2669 0054 844A     		ldr	r2, .L223
 2670 0056 0021     		movs	r1, #0
 2671 0058 D154     		strb	r1, [r2, r3]
 2672              	.L187:
 923:..\src/interruptions.c ****     }
 924:..\src/interruptions.c **** 
 925:..\src/interruptions.c ****     //======================================================     reading sensors
 926:..\src/interruptions.c ****     for (index = 0; index < N_ENCODERS; index++) {
 2673              		.loc 1 926 0
 2674 005a 0023     		movs	r3, #0
 2675 005c 87F82F30 		strb	r3, [r7, #47]
 2676 0060 0DE0     		b	.L190
 2677              	.L191:
 927:..\src/interruptions.c ****         aux_encoder[index] = 0;
 2678              		.loc 1 927 0 discriminator 3
 2679 0062 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 2680 0066 9B00     		lsls	r3, r3, #2
 2681 0068 07F13002 		add	r2, r7, #48
 2682 006c 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 66


 2683 006e 0022     		movs	r2, #0
 2684 0070 43F8282C 		str	r2, [r3, #-40]
 926:..\src/interruptions.c ****         aux_encoder[index] = 0;
 2685              		.loc 1 926 0 discriminator 3
 2686 0074 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 2687 0078 0133     		adds	r3, r3, #1
 2688 007a 87F82F30 		strb	r3, [r7, #47]
 2689              	.L190:
 926:..\src/interruptions.c ****         aux_encoder[index] = 0;
 2690              		.loc 1 926 0 is_stmt 0 discriminator 1
 2691 007e 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 2692 0082 022B     		cmp	r3, #2
 2693 0084 EDD9     		bls	.L191
 928:..\src/interruptions.c ****     }   
 929:..\src/interruptions.c ****     
 930:..\src/interruptions.c ****     ReadEncoderLine(N_Encoder_Line_Connected[n_line] , n_line);         //CS0 for right hand
 2694              		.loc 1 930 0 is_stmt 1
 2695 0086 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2696 0088 794A     		ldr	r2, .L223+8
 2697 008a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 2698 008c 1A46     		mov	r2, r3
 2699 008e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2700 0090 1946     		mov	r1, r3
 2701 0092 1046     		mov	r0, r2
 2702 0094 FFF7FEFF 		bl	ReadEncoderLine
 2703              	.LBB9:
 931:..\src/interruptions.c ****                                                                         //CS1 for left hand
 932:..\src/interruptions.c ****     for (int j = 0; j < N_ENCODERS; j++) {    
 2704              		.loc 1 932 0
 2705 0098 0023     		movs	r3, #0
 2706 009a 3B62     		str	r3, [r7, #32]
 2707 009c 2EE0     		b	.L192
 2708              	.L194:
 933:..\src/interruptions.c ****         
 934:..\src/interruptions.c ****         // As default, index=0 reads SoftHand Pro encoder positioned on screw, while index=1 reads 
 935:..\src/interruptions.c ****         index = c_mem.enc[n_line].Enc_idx_use_for_control[j];       // take encoder idx used for mo
 2709              		.loc 1 935 0
 2710 009e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 2711 00a0 7449     		ldr	r1, .L223+12
 2712 00a2 1346     		mov	r3, r2
 2713 00a4 5B00     		lsls	r3, r3, #1
 2714 00a6 1344     		add	r3, r3, r2
 2715 00a8 1B01     		lsls	r3, r3, #4
 2716 00aa CA18     		adds	r2, r1, r3
 2717 00ac 3B6A     		ldr	r3, [r7, #32]
 2718 00ae 1344     		add	r3, r3, r2
 2719 00b0 03F2B113 		addw	r3, r3, #433
 2720 00b4 1B78     		ldrb	r3, [r3]
 2721 00b6 87F82F30 		strb	r3, [r7, #47]
 936:..\src/interruptions.c ****         
 937:..\src/interruptions.c ****         if (Encoder_Check[n_line][index] > 15){  // check on encoder data
 2722              		.loc 1 937 0
 2723 00ba FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 2724 00bc 97F82F10 		ldrb	r1, [r7, #47]	@ zero_extendqisi2
 2725 00c0 6D48     		ldr	r0, .L223+16
 2726 00c2 1346     		mov	r3, r2
 2727 00c4 9B00     		lsls	r3, r3, #2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 67


 2728 00c6 1344     		add	r3, r3, r2
 2729 00c8 0344     		add	r3, r3, r0
 2730 00ca 0B44     		add	r3, r3, r1
 2731 00cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2732 00ce 0F2B     		cmp	r3, #15
 2733 00d0 11D9     		bls	.L193
 938:..\src/interruptions.c ****             aux_encoder[j] = (uint32)Encoder_Value[n_line][index];     // 00000000000000[20] XXXXXX
 2734              		.loc 1 938 0
 2735 00d2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 2736 00d4 97F82F10 		ldrb	r1, [r7, #47]	@ zero_extendqisi2
 2737 00d8 6848     		ldr	r0, .L223+20
 2738 00da 1346     		mov	r3, r2
 2739 00dc 9B00     		lsls	r3, r3, #2
 2740 00de 1344     		add	r3, r3, r2
 2741 00e0 0B44     		add	r3, r3, r1
 2742 00e2 30F81330 		ldrh	r3, [r0, r3, lsl #1]
 2743 00e6 1A46     		mov	r2, r3
 2744 00e8 3B6A     		ldr	r3, [r7, #32]
 2745 00ea 9B00     		lsls	r3, r3, #2
 2746 00ec 07F13001 		add	r1, r7, #48
 2747 00f0 0B44     		add	r3, r3, r1
 2748 00f2 43F8282C 		str	r2, [r3, #-40]
 2749              	.L193:
 932:..\src/interruptions.c ****         
 2750              		.loc 1 932 0 discriminator 2
 2751 00f6 3B6A     		ldr	r3, [r7, #32]
 2752 00f8 0133     		adds	r3, r3, #1
 2753 00fa 3B62     		str	r3, [r7, #32]
 2754              	.L192:
 932:..\src/interruptions.c ****         
 2755              		.loc 1 932 0 is_stmt 0 discriminator 1
 2756 00fc 3B6A     		ldr	r3, [r7, #32]
 2757 00fe 022B     		cmp	r3, #2
 2758 0100 CDDD     		ble	.L194
 2759              	.LBE9:
 939:..\src/interruptions.c ****         }
 940:..\src/interruptions.c ****     }
 941:..\src/interruptions.c ****     
 942:..\src/interruptions.c ****     // S = SIGN BIT
 943:..\src/interruptions.c ****     // X = ENCODER VALUE BIT
 944:..\src/interruptions.c ****     // 0 = 0 BIT
 945:..\src/interruptions.c ****     // C = CONTROL BIT
 946:..\src/interruptions.c ****     
 947:..\src/interruptions.c ****     for (index = 0; index < N_ENCODERS; index++) {
 2760              		.loc 1 947 0 is_stmt 1
 2761 0102 0023     		movs	r3, #0
 2762 0104 87F82F30 		strb	r3, [r7, #47]
 2763 0108 35E3     		b	.L195
 2764              	.L216:
 948:..\src/interruptions.c ****         
 949:..\src/interruptions.c ****         data_encoder_raw[n_line][index] = aux_encoder[index];
 2765              		.loc 1 949 0
 2766 010a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 2767 010c 97F82F00 		ldrb	r0, [r7, #47]	@ zero_extendqisi2
 2768 0110 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 2769 0114 9B00     		lsls	r3, r3, #2
 2770 0116 07F13001 		add	r1, r7, #48
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 68


 2771 011a 0B44     		add	r3, r3, r1
 2772 011c 53F8281C 		ldr	r1, [r3, #-40]
 2773 0120 574C     		ldr	r4, .L223+24
 2774 0122 1346     		mov	r3, r2
 2775 0124 9B00     		lsls	r3, r3, #2
 2776 0126 1344     		add	r3, r3, r2
 2777 0128 0344     		add	r3, r3, r0
 2778 012a 44F82310 		str	r1, [r4, r3, lsl #2]
 950:..\src/interruptions.c ****         
 951:..\src/interruptions.c ****         tmp_value_encoder = (int16)(aux_encoder[index] - (uint16)g_mem.enc[n_line].m_off[index]);
 2779              		.loc 1 951 0
 2780 012e 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 2781 0132 9B00     		lsls	r3, r3, #2
 2782 0134 07F13002 		add	r2, r7, #48
 2783 0138 1344     		add	r3, r3, r2
 2784 013a 53F8283C 		ldr	r3, [r3, #-40]
 2785 013e 99B2     		uxth	r1, r3
 2786 0140 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 2787 0142 97F82F00 		ldrb	r0, [r7, #47]	@ zero_extendqisi2
 2788 0146 4F4C     		ldr	r4, .L223+28
 2789 0148 1346     		mov	r3, r2
 2790 014a 5B00     		lsls	r3, r3, #1
 2791 014c 1344     		add	r3, r3, r2
 2792 014e 9B00     		lsls	r3, r3, #2
 2793 0150 0344     		add	r3, r3, r0
 2794 0152 6633     		adds	r3, r3, #102
 2795 0154 54F82330 		ldr	r3, [r4, r3, lsl #2]
 2796 0158 9BB2     		uxth	r3, r3
 2797 015a CB1A     		subs	r3, r1, r3
 2798 015c 9BB2     		uxth	r3, r3
 2799 015e BB85     		strh	r3, [r7, #44]	@ movhi
 952:..\src/interruptions.c ****         if (tmp_value_encoder < 0){
 2800              		.loc 1 952 0
 2801 0160 B7F92C30 		ldrsh	r3, [r7, #44]
 2802 0164 002B     		cmp	r3, #0
 2803 0166 04DA     		bge	.L196
 953:..\src/interruptions.c ****             tmp_value_encoder = tmp_value_encoder + 4096;   //SSSS[4] XXXXXXXXXXXX[12] worst case r
 2804              		.loc 1 953 0
 2805 0168 BB8D     		ldrh	r3, [r7, #44]
 2806 016a 03F58053 		add	r3, r3, #4096
 2807 016e 9BB2     		uxth	r3, r3
 2808 0170 BB85     		strh	r3, [r7, #44]	@ movhi
 2809              	.L196:
 954:..\src/interruptions.c ****         }       // Range [0, 4096]
 955:..\src/interruptions.c **** 
 956:..\src/interruptions.c ****         if (tmp_value_encoder >= 2048) {
 2810              		.loc 1 956 0
 2811 0172 B7F92C30 		ldrsh	r3, [r7, #44]
 2812 0176 B3F5006F 		cmp	r3, #2048
 2813 017a 04DB     		blt	.L197
 957:..\src/interruptions.c ****            tmp_value_encoder = tmp_value_encoder - 4096;    //SSSS[4] XXXXXXXXXXXX[12] range [-2048
 2814              		.loc 1 957 0
 2815 017c BB8D     		ldrh	r3, [r7, #44]
 2816 017e A3F58053 		sub	r3, r3, #4096
 2817 0182 9BB2     		uxth	r3, r3
 2818 0184 BB85     		strh	r3, [r7, #44]	@ movhi
 2819              	.L197:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 69


 958:..\src/interruptions.c ****         }       // Range [-2048, 2047]
 959:..\src/interruptions.c **** 
 960:..\src/interruptions.c ****         tmp_value_encoder_32 = (((int32)(tmp_value_encoder)) << 4);     //SSSSSSSSSSSSSSSS[16] XXXX
 2820              		.loc 1 960 0
 2821 0186 B7F92C30 		ldrsh	r3, [r7, #44]
 2822 018a 1B01     		lsls	r3, r3, #4
 2823 018c FB61     		str	r3, [r7, #28]
 961:..\src/interruptions.c ****         comp_value_encoder[n_line][index] = tmp_value_encoder_32;
 2824              		.loc 1 961 0
 2825 018e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 2826 0190 97F82F10 		ldrb	r1, [r7, #47]	@ zero_extendqisi2
 2827 0194 3C48     		ldr	r0, .L223+32
 2828 0196 1346     		mov	r3, r2
 2829 0198 5B00     		lsls	r3, r3, #1
 2830 019a 1344     		add	r3, r3, r2
 2831 019c 0B44     		add	r3, r3, r1
 2832 019e FA69     		ldr	r2, [r7, #28]
 2833 01a0 40F82320 		str	r2, [r0, r3, lsl #2]
 962:..\src/interruptions.c **** 
 963:..\src/interruptions.c ****         // Initialize last_value_encoder
 964:..\src/interruptions.c ****         if (only_first_time[n_line]) {
 2834              		.loc 1 964 0
 2835 01a4 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2836 01a6 394A     		ldr	r2, .L223+36
 2837 01a8 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 2838 01aa 002B     		cmp	r3, #0
 2839 01ac 12D0     		beq	.L198
 965:..\src/interruptions.c ****             last_value_encoder[n_line][index] = tmp_value_encoder_32;
 2840              		.loc 1 965 0
 2841 01ae FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 2842 01b0 97F82F10 		ldrb	r1, [r7, #47]	@ zero_extendqisi2
 2843 01b4 2D48     		ldr	r0, .L223+4
 2844 01b6 1346     		mov	r3, r2
 2845 01b8 5B00     		lsls	r3, r3, #1
 2846 01ba 1344     		add	r3, r3, r2
 2847 01bc 0B44     		add	r3, r3, r1
 2848 01be FA69     		ldr	r2, [r7, #28]
 2849 01c0 40F82320 		str	r2, [r0, r3, lsl #2]
 966:..\src/interruptions.c ****             if (index == 2)
 2850              		.loc 1 966 0
 2851 01c4 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 2852 01c8 022B     		cmp	r3, #2
 2853 01ca 03D1     		bne	.L198
 967:..\src/interruptions.c ****                 only_first_time[n_line] = 0;
 2854              		.loc 1 967 0
 2855 01cc FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2856 01ce 2F4A     		ldr	r2, .L223+36
 2857 01d0 0021     		movs	r1, #0
 2858 01d2 D154     		strb	r1, [r2, r3]
 2859              	.L198:
 968:..\src/interruptions.c ****         }
 969:..\src/interruptions.c **** 
 970:..\src/interruptions.c ****         // Take care of rotations
 971:..\src/interruptions.c ****         value_diff = tmp_value_encoder_32 - last_value_encoder[n_line][index];     // worst case SS
 2860              		.loc 1 971 0
 2861 01d4 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 2862 01d6 97F82F10 		ldrb	r1, [r7, #47]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 70


 2863 01da 2448     		ldr	r0, .L223+4
 2864 01dc 1346     		mov	r3, r2
 2865 01de 5B00     		lsls	r3, r3, #1
 2866 01e0 1344     		add	r3, r3, r2
 2867 01e2 0B44     		add	r3, r3, r1
 2868 01e4 50F82330 		ldr	r3, [r0, r3, lsl #2]
 2869 01e8 FA69     		ldr	r2, [r7, #28]
 2870 01ea D31A     		subs	r3, r2, r3
 2871 01ec BB61     		str	r3, [r7, #24]
 972:..\src/interruptions.c **** 
 973:..\src/interruptions.c ****         // ====================== 1 TURN ======================
 974:..\src/interruptions.c ****         // -32768                    0                    32767 -32768                   0         
 975:..\src/interruptions.c ****         // |-------------------------|-------------------------|-------------------------|---------
 976:..\src/interruptions.c ****         //              |                         |      |           |      |                      
 977:..\src/interruptions.c ****         //           -16384                     16383    |           |   -16384                    
 978:..\src/interruptions.c ****         //                                               |           |
 979:..\src/interruptions.c ****         //                                           24575           -24576
 980:..\src/interruptions.c ****         //                                               |___________|
 981:..\src/interruptions.c ****         //                                                   49152
 982:..\src/interruptions.c **** 
 983:..\src/interruptions.c ****         // if we are in the right interval, take care of rotation
 984:..\src/interruptions.c ****         // and update the variable only if the difference between
 985:..\src/interruptions.c ****         // one measure and another is less than 1/4 of turn
 986:..\src/interruptions.c **** 
 987:..\src/interruptions.c ****         // Considering we are sampling at 1kHz, this means that our shaft needs
 988:..\src/interruptions.c ****         // to go slower than 1/4 turn every ms -> 1 turn every 4ms
 989:..\src/interruptions.c ****         // equal to 250 turn/s -> 15000 RPM
 990:..\src/interruptions.c **** 
 991:..\src/interruptions.c ****         if (value_diff > 49152)
 2872              		.loc 1 991 0
 2873 01ee BB69     		ldr	r3, [r7, #24]
 2874 01f0 B3F5404F 		cmp	r3, #49152
 2875 01f4 19DD     		ble	.L199
 992:..\src/interruptions.c ****             g_meas[n_line].rot[index]--;
 2876              		.loc 1 992 0
 2877 01f6 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 2878 01f8 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 2879 01fc 2448     		ldr	r0, .L223+40
 2880 01fe 3421     		movs	r1, #52
 2881 0200 01FB02F1 		mul	r1, r1, r2
 2882 0204 0144     		add	r1, r1, r0
 2883 0206 1944     		add	r1, r1, r3
 2884 0208 1831     		adds	r1, r1, #24
 2885 020a 91F90010 		ldrsb	r1, [r1]
 2886 020e C9B2     		uxtb	r1, r1
 2887 0210 0139     		subs	r1, r1, #1
 2888 0212 C9B2     		uxtb	r1, r1
 2889 0214 4CB2     		sxtb	r4, r1
 2890 0216 1E49     		ldr	r1, .L223+40
 2891 0218 3420     		movs	r0, #52
 2892 021a 00FB02F2 		mul	r2, r0, r2
 2893 021e 0A44     		add	r2, r2, r1
 2894 0220 1344     		add	r3, r3, r2
 2895 0222 1833     		adds	r3, r3, #24
 2896 0224 2246     		mov	r2, r4
 2897 0226 1A70     		strb	r2, [r3]
 2898 0228 5CE0     		b	.L200
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 71


 2899              	.L199:
 993:..\src/interruptions.c ****         else{ 
 994:..\src/interruptions.c ****             if (value_diff < -49152)
 2900              		.loc 1 994 0
 2901 022a BB69     		ldr	r3, [r7, #24]
 2902 022c 13F5404F 		cmn	r3, #49152
 2903 0230 30DA     		bge	.L201
 995:..\src/interruptions.c ****                 g_meas[n_line].rot[index]++;
 2904              		.loc 1 995 0
 2905 0232 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 2906 0234 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 2907 0238 1548     		ldr	r0, .L223+40
 2908 023a 3421     		movs	r1, #52
 2909 023c 01FB02F1 		mul	r1, r1, r2
 2910 0240 0144     		add	r1, r1, r0
 2911 0242 1944     		add	r1, r1, r3
 2912 0244 1831     		adds	r1, r1, #24
 2913 0246 91F90010 		ldrsb	r1, [r1]
 2914 024a C9B2     		uxtb	r1, r1
 2915 024c 0131     		adds	r1, r1, #1
 2916 024e C9B2     		uxtb	r1, r1
 2917 0250 4CB2     		sxtb	r4, r1
 2918 0252 0F49     		ldr	r1, .L223+40
 2919 0254 3420     		movs	r0, #52
 2920 0256 00FB02F2 		mul	r2, r0, r2
 2921 025a 0A44     		add	r2, r2, r1
 2922 025c 1344     		add	r3, r3, r2
 2923 025e 1833     		adds	r3, r3, #24
 2924 0260 2246     		mov	r2, r4
 2925 0262 1A70     		strb	r2, [r3]
 2926 0264 3EE0     		b	.L200
 2927              	.L224:
 2928 0266 00BF     		.align	2
 2929              	.L223:
 2930 0268 00000000 		.word	reset_last_value_flag
 2931 026c 90000000 		.word	last_value_encoder.10548
 2932 0270 00000000 		.word	N_Encoder_Line_Connected
 2933 0274 00000000 		.word	c_mem
 2934 0278 00000000 		.word	Encoder_Check
 2935 027c 00000000 		.word	Encoder_Value
 2936 0280 00000000 		.word	data_encoder_raw
 2937 0284 00000000 		.word	g_mem
 2938 0288 A8000000 		.word	comp_value_encoder.10549
 2939 028c 04000000 		.word	only_first_time.10551
 2940 0290 00000000 		.word	g_meas
 2941              	.L201:
 996:..\src/interruptions.c ****             else{
 997:..\src/interruptions.c ****                 if (abs(value_diff) > 16384) { // if two measures are too far
 2942              		.loc 1 997 0
 2943 0294 BB69     		ldr	r3, [r7, #24]
 2944 0296 002B     		cmp	r3, #0
 2945 0298 B8BF     		it	lt
 2946 029a 5B42     		rsblt	r3, r3, #0
 2947 029c B3F5804F 		cmp	r3, #16384
 2948 02a0 20DD     		ble	.L200
 998:..\src/interruptions.c ****                     error[n_line][index]++;
 2949              		.loc 1 998 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 72


 2950 02a2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 2951 02a4 97F82F10 		ldrb	r1, [r7, #47]	@ zero_extendqisi2
 2952 02a8 9B48     		ldr	r0, .L225
 2953 02aa 1346     		mov	r3, r2
 2954 02ac 5B00     		lsls	r3, r3, #1
 2955 02ae 1344     		add	r3, r3, r2
 2956 02b0 0344     		add	r3, r3, r0
 2957 02b2 0B44     		add	r3, r3, r1
 2958 02b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2959 02b6 0133     		adds	r3, r3, #1
 2960 02b8 DCB2     		uxtb	r4, r3
 2961 02ba 9748     		ldr	r0, .L225
 2962 02bc 1346     		mov	r3, r2
 2963 02be 5B00     		lsls	r3, r3, #1
 2964 02c0 1344     		add	r3, r3, r2
 2965 02c2 0344     		add	r3, r3, r0
 2966 02c4 0B44     		add	r3, r3, r1
 2967 02c6 2246     		mov	r2, r4
 2968 02c8 1A70     		strb	r2, [r3]
 999:..\src/interruptions.c ****                                 
1000:..\src/interruptions.c ****                     if (error[n_line][index] < 10)
 2969              		.loc 1 1000 0
 2970 02ca FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 2971 02cc 97F82F10 		ldrb	r1, [r7, #47]	@ zero_extendqisi2
 2972 02d0 9148     		ldr	r0, .L225
 2973 02d2 1346     		mov	r3, r2
 2974 02d4 5B00     		lsls	r3, r3, #1
 2975 02d6 1344     		add	r3, r3, r2
 2976 02d8 0344     		add	r3, r3, r0
 2977 02da 0B44     		add	r3, r3, r1
 2978 02dc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2979 02de 092B     		cmp	r3, #9
 2980 02e0 40F28882 		bls	.L222
 2981              	.L200:
1001:..\src/interruptions.c ****                         // Discard
1002:..\src/interruptions.c ****                         return;
1003:..\src/interruptions.c ****                 }
1004:..\src/interruptions.c ****             }
1005:..\src/interruptions.c ****         }
1006:..\src/interruptions.c **** 
1007:..\src/interruptions.c ****         error[n_line][index] = 0;
 2982              		.loc 1 1007 0
 2983 02e4 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 2984 02e6 97F82F10 		ldrb	r1, [r7, #47]	@ zero_extendqisi2
 2985 02ea 8B48     		ldr	r0, .L225
 2986 02ec 1346     		mov	r3, r2
 2987 02ee 5B00     		lsls	r3, r3, #1
 2988 02f0 1344     		add	r3, r3, r2
 2989 02f2 0344     		add	r3, r3, r0
 2990 02f4 0B44     		add	r3, r3, r1
 2991 02f6 0022     		movs	r2, #0
 2992 02f8 1A70     		strb	r2, [r3]
1008:..\src/interruptions.c ****         
1009:..\src/interruptions.c ****         last_value_encoder[n_line][index] = tmp_value_encoder_32;
 2993              		.loc 1 1009 0
 2994 02fa FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 2995 02fc 97F82F10 		ldrb	r1, [r7, #47]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 73


 2996 0300 8648     		ldr	r0, .L225+4
 2997 0302 1346     		mov	r3, r2
 2998 0304 5B00     		lsls	r3, r3, #1
 2999 0306 1344     		add	r3, r3, r2
 3000 0308 0B44     		add	r3, r3, r1
 3001 030a FA69     		ldr	r2, [r7, #28]
 3002 030c 40F82320 		str	r2, [r0, r3, lsl #2]
1010:..\src/interruptions.c **** 
1011:..\src/interruptions.c ****         value_encoder = (int32)tmp_value_encoder_32;   // SSSSSSSSSSSSSSSS[16] XXXXXXXXXXXX[12] 000
 3003              		.loc 1 1011 0
 3004 0310 FB69     		ldr	r3, [r7, #28]
 3005 0312 BB62     		str	r3, [r7, #40]
1012:..\src/interruptions.c **** 
1013:..\src/interruptions.c ****         value_encoder += ((int32)g_meas[n_line].rot[index] << 16);    
 3006              		.loc 1 1013 0
 3007 0314 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 3008 0316 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 3009 031a 8149     		ldr	r1, .L225+8
 3010 031c 3420     		movs	r0, #52
 3011 031e 00FB02F2 		mul	r2, r0, r2
 3012 0322 0A44     		add	r2, r2, r1
 3013 0324 1344     		add	r3, r3, r2
 3014 0326 1833     		adds	r3, r3, #24
 3015 0328 93F90030 		ldrsb	r3, [r3]
 3016 032c 1B04     		lsls	r3, r3, #16
 3017 032e BA6A     		ldr	r2, [r7, #40]
 3018 0330 1344     		add	r3, r3, r2
 3019 0332 BB62     		str	r3, [r7, #40]
1014:..\src/interruptions.c ****         
1015:..\src/interruptions.c ****         if (c_mem.enc[n_line].m_mult[index] != 1.0) {
 3020              		.loc 1 1015 0
 3021 0334 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 3022 0336 97F82F10 		ldrb	r1, [r7, #47]	@ zero_extendqisi2
 3023 033a 7A48     		ldr	r0, .L225+12
 3024 033c 1346     		mov	r3, r2
 3025 033e 5B00     		lsls	r3, r3, #1
 3026 0340 1344     		add	r3, r3, r2
 3027 0342 9B00     		lsls	r3, r3, #2
 3028 0344 0B44     		add	r3, r3, r1
 3029 0346 6833     		adds	r3, r3, #104
 3030 0348 9B00     		lsls	r3, r3, #2
 3031 034a 0344     		add	r3, r3, r0
 3032 034c 5B68     		ldr	r3, [r3, #4]	@ float
 3033 034e 4FF07E51 		mov	r1, #1065353216
 3034 0352 1846     		mov	r0, r3
 3035 0354 FFF7FEFF 		bl	__aeabi_fcmpeq
 3036 0358 0346     		mov	r3, r0
 3037 035a 002B     		cmp	r3, #0
 3038 035c 1AD1     		bne	.L203
1016:..\src/interruptions.c ****             value_encoder *= c_mem.enc[n_line].m_mult[index];
 3039              		.loc 1 1016 0
 3040 035e B86A     		ldr	r0, [r7, #40]
 3041 0360 FFF7FEFF 		bl	__aeabi_i2f
 3042 0364 0446     		mov	r4, r0
 3043 0366 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 3044 0368 97F82F10 		ldrb	r1, [r7, #47]	@ zero_extendqisi2
 3045 036c 6D48     		ldr	r0, .L225+12
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 74


 3046 036e 1346     		mov	r3, r2
 3047 0370 5B00     		lsls	r3, r3, #1
 3048 0372 1344     		add	r3, r3, r2
 3049 0374 9B00     		lsls	r3, r3, #2
 3050 0376 0B44     		add	r3, r3, r1
 3051 0378 6833     		adds	r3, r3, #104
 3052 037a 9B00     		lsls	r3, r3, #2
 3053 037c 0344     		add	r3, r3, r0
 3054 037e 5B68     		ldr	r3, [r3, #4]	@ float
 3055 0380 1946     		mov	r1, r3
 3056 0382 2046     		mov	r0, r4
 3057 0384 FFF7FEFF 		bl	__aeabi_fmul
 3058 0388 0346     		mov	r3, r0
 3059 038a 1846     		mov	r0, r3
 3060 038c FFF7FEFF 		bl	__aeabi_f2iz
 3061 0390 0346     		mov	r3, r0
 3062 0392 BB62     		str	r3, [r7, #40]
 3063              	.L203:
1017:..\src/interruptions.c ****         }
1018:..\src/interruptions.c **** 
1019:..\src/interruptions.c ****         if (c_mem.dev.dev_type == SOFTHAND_PRO) {
 3064              		.loc 1 1019 0
 3065 0394 634B     		ldr	r3, .L225+12
 3066 0396 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 3067 039a 002B     		cmp	r3, #0
 3068 039c 0BD1     		bne	.L205
1020:..\src/interruptions.c ****             // Right / Left hand turn
1021:..\src/interruptions.c ****             if (index == 0) {
 3069              		.loc 1 1021 0
 3070 039e 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 3071 03a2 002B     		cmp	r3, #0
 3072 03a4 07D1     		bne	.L205
1022:..\src/interruptions.c ****                 if (c_mem.dev.right_left == RIGHT_HAND){
 3073              		.loc 1 1022 0
 3074 03a6 5F4B     		ldr	r3, .L225+12
 3075 03a8 93F8A730 		ldrb	r3, [r3, #167]	@ zero_extendqisi2
 3076 03ac 002B     		cmp	r3, #0
 3077 03ae 02D1     		bne	.L205
1023:..\src/interruptions.c ****                     value_encoder *= -1;        
 3078              		.loc 1 1023 0
 3079 03b0 BB6A     		ldr	r3, [r7, #40]
 3080 03b2 5B42     		negs	r3, r3
 3081 03b4 BB62     		str	r3, [r7, #40]
 3082              	.L205:
1024:..\src/interruptions.c ****                 }
1025:..\src/interruptions.c ****             }
1026:..\src/interruptions.c ****         } 
1027:..\src/interruptions.c ****         
1028:..\src/interruptions.c ****         g_meas[n_line].pos[index] = value_encoder;
 3083              		.loc 1 1028 0
 3084 03b6 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 3085 03b8 97F82F10 		ldrb	r1, [r7, #47]	@ zero_extendqisi2
 3086 03bc 5848     		ldr	r0, .L225+8
 3087 03be 1346     		mov	r3, r2
 3088 03c0 5B00     		lsls	r3, r3, #1
 3089 03c2 1344     		add	r3, r3, r2
 3090 03c4 9B00     		lsls	r3, r3, #2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 75


 3091 03c6 1344     		add	r3, r3, r2
 3092 03c8 0B44     		add	r3, r3, r1
 3093 03ca BA6A     		ldr	r2, [r7, #40]
 3094 03cc 40F82320 		str	r2, [r0, r3, lsl #2]
1029:..\src/interruptions.c ****     
1030:..\src/interruptions.c ****         speed_encoder = (int16)filter((11*value_encoder - 18* v_value[n_line][index] + 9 * vv_value
 3095              		.loc 1 1030 0
 3096 03d0 BA6A     		ldr	r2, [r7, #40]
 3097 03d2 1346     		mov	r3, r2
 3098 03d4 9B00     		lsls	r3, r3, #2
 3099 03d6 1344     		add	r3, r3, r2
 3100 03d8 5B00     		lsls	r3, r3, #1
 3101 03da 9918     		adds	r1, r3, r2
 3102 03dc FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 3103 03de 97F82F00 		ldrb	r0, [r7, #47]	@ zero_extendqisi2
 3104 03e2 514C     		ldr	r4, .L225+16
 3105 03e4 1346     		mov	r3, r2
 3106 03e6 5B00     		lsls	r3, r3, #1
 3107 03e8 1344     		add	r3, r3, r2
 3108 03ea 0344     		add	r3, r3, r0
 3109 03ec 54F82330 		ldr	r3, [r4, r3, lsl #2]
 3110 03f0 6FF01102 		mvn	r2, #17
 3111 03f4 02FB03F3 		mul	r3, r2, r3
 3112 03f8 1944     		add	r1, r1, r3
 3113 03fa FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 3114 03fc 97F82F00 		ldrb	r0, [r7, #47]	@ zero_extendqisi2
 3115 0400 4A4C     		ldr	r4, .L225+20
 3116 0402 1346     		mov	r3, r2
 3117 0404 5B00     		lsls	r3, r3, #1
 3118 0406 1344     		add	r3, r3, r2
 3119 0408 0344     		add	r3, r3, r0
 3120 040a 54F82320 		ldr	r2, [r4, r3, lsl #2]
 3121 040e 1346     		mov	r3, r2
 3122 0410 DB00     		lsls	r3, r3, #3
 3123 0412 1344     		add	r3, r3, r2
 3124 0414 1944     		add	r1, r1, r3
 3125 0416 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 3126 0418 97F82F00 		ldrb	r0, [r7, #47]	@ zero_extendqisi2
 3127 041c 444C     		ldr	r4, .L225+24
 3128 041e 1346     		mov	r3, r2
 3129 0420 5B00     		lsls	r3, r3, #1
 3130 0422 1344     		add	r3, r3, r2
 3131 0424 0344     		add	r3, r3, r0
 3132 0426 54F82330 		ldr	r3, [r4, r3, lsl #2]
 3133 042a 5B00     		lsls	r3, r3, #1
 3134 042c C81A     		subs	r0, r1, r3
 3135 042e 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 3136 0432 DB00     		lsls	r3, r3, #3
 3137 0434 3F4A     		ldr	r2, .L225+28
 3138 0436 1344     		add	r3, r3, r2
 3139 0438 1946     		mov	r1, r3
 3140 043a FFF7FEFF 		bl	filter
 3141 043e 0346     		mov	r3, r0
 3142 0440 1BB2     		sxth	r3, r3
 3143 0442 7B61     		str	r3, [r7, #20]
1031:..\src/interruptions.c **** 
1032:..\src/interruptions.c ****         //Update current speed
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 76


1033:..\src/interruptions.c ****         speed_encoder = speed_encoder / (6*cycle_time);
 3144              		.loc 1 1033 0
 3145 0444 7869     		ldr	r0, [r7, #20]
 3146 0446 FFF7FEFF 		bl	__aeabi_i2f
 3147 044a 0446     		mov	r4, r0
 3148 044c 3A4B     		ldr	r3, .L225+32
 3149 044e 1B68     		ldr	r3, [r3]	@ float
 3150 0450 3A49     		ldr	r1, .L225+36
 3151 0452 1846     		mov	r0, r3
 3152 0454 FFF7FEFF 		bl	__aeabi_fmul
 3153 0458 0346     		mov	r3, r0
 3154 045a 1946     		mov	r1, r3
 3155 045c 2046     		mov	r0, r4
 3156 045e FFF7FEFF 		bl	__aeabi_fdiv
 3157 0462 0346     		mov	r3, r0
 3158 0464 1846     		mov	r0, r3
 3159 0466 FFF7FEFF 		bl	__aeabi_f2iz
 3160 046a 0346     		mov	r3, r0
 3161 046c 7B61     		str	r3, [r7, #20]
1034:..\src/interruptions.c ****         g_meas[n_line].vel[index] = speed_encoder;
 3162              		.loc 1 1034 0
 3163 046e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 3164 0470 97F82F10 		ldrb	r1, [r7, #47]	@ zero_extendqisi2
 3165 0474 2A48     		ldr	r0, .L225+8
 3166 0476 1346     		mov	r3, r2
 3167 0478 5B00     		lsls	r3, r3, #1
 3168 047a 1344     		add	r3, r3, r2
 3169 047c 9B00     		lsls	r3, r3, #2
 3170 047e 1344     		add	r3, r3, r2
 3171 0480 0B44     		add	r3, r3, r1
 3172 0482 0633     		adds	r3, r3, #6
 3173 0484 9B00     		lsls	r3, r3, #2
 3174 0486 0344     		add	r3, r3, r0
 3175 0488 7A69     		ldr	r2, [r7, #20]
 3176 048a 5A60     		str	r2, [r3, #4]
1035:..\src/interruptions.c **** 
1036:..\src/interruptions.c ****         // update old velocity and acceleration values
1037:..\src/interruptions.c ****         vvv_value[n_line][index] = vv_value[n_line][index];
 3177              		.loc 1 1037 0
 3178 048c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 3179 048e 97F82F00 		ldrb	r0, [r7, #47]	@ zero_extendqisi2
 3180 0492 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 3181 0494 97F82F40 		ldrb	r4, [r7, #47]	@ zero_extendqisi2
 3182 0498 244D     		ldr	r5, .L225+20
 3183 049a 0B46     		mov	r3, r1
 3184 049c 5B00     		lsls	r3, r3, #1
 3185 049e 0B44     		add	r3, r3, r1
 3186 04a0 2344     		add	r3, r3, r4
 3187 04a2 55F82310 		ldr	r1, [r5, r3, lsl #2]
 3188 04a6 224C     		ldr	r4, .L225+24
 3189 04a8 1346     		mov	r3, r2
 3190 04aa 5B00     		lsls	r3, r3, #1
 3191 04ac 1344     		add	r3, r3, r2
 3192 04ae 0344     		add	r3, r3, r0
 3193 04b0 44F82310 		str	r1, [r4, r3, lsl #2]
1038:..\src/interruptions.c ****         vv_value[n_line][index] = v_value[n_line][index];
 3194              		.loc 1 1038 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 77


 3195 04b4 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 3196 04b6 97F82F00 		ldrb	r0, [r7, #47]	@ zero_extendqisi2
 3197 04ba F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 3198 04bc 97F82F40 		ldrb	r4, [r7, #47]	@ zero_extendqisi2
 3199 04c0 194D     		ldr	r5, .L225+16
 3200 04c2 0B46     		mov	r3, r1
 3201 04c4 5B00     		lsls	r3, r3, #1
 3202 04c6 0B44     		add	r3, r3, r1
 3203 04c8 2344     		add	r3, r3, r4
 3204 04ca 55F82310 		ldr	r1, [r5, r3, lsl #2]
 3205 04ce 174C     		ldr	r4, .L225+20
 3206 04d0 1346     		mov	r3, r2
 3207 04d2 5B00     		lsls	r3, r3, #1
 3208 04d4 1344     		add	r3, r3, r2
 3209 04d6 0344     		add	r3, r3, r0
 3210 04d8 44F82310 		str	r1, [r4, r3, lsl #2]
1039:..\src/interruptions.c ****         v_value[n_line][index] = value_encoder;
 3211              		.loc 1 1039 0
 3212 04dc FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 3213 04de 97F82F10 		ldrb	r1, [r7, #47]	@ zero_extendqisi2
 3214 04e2 1148     		ldr	r0, .L225+16
 3215 04e4 1346     		mov	r3, r2
 3216 04e6 5B00     		lsls	r3, r3, #1
 3217 04e8 1344     		add	r3, r3, r2
 3218 04ea 0B44     		add	r3, r3, r1
 3219 04ec BA6A     		ldr	r2, [r7, #40]
 3220 04ee 40F82320 		str	r2, [r0, r3, lsl #2]
1040:..\src/interruptions.c **** 
1041:..\src/interruptions.c ****         // wait at least 5 * max_num_of_error (10) + 5 = 55 cycles to reconstruct the right turn
1042:..\src/interruptions.c ****         if (pos_reconstruct[n_line] == FALSE){
 3221              		.loc 1 1042 0
 3222 04f2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3223 04f4 124A     		ldr	r2, .L225+40
 3224 04f6 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 3225 04f8 002B     		cmp	r3, #0
 3226 04fa 40F03781 		bne	.L206
1043:..\src/interruptions.c ****             if (one_time_execute[n_line] < 54) 
 3227              		.loc 1 1043 0
 3228 04fe FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3229 0500 104A     		ldr	r2, .L225+44
 3230 0502 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 3231 0504 352B     		cmp	r3, #53
 3232 0506 1FD8     		bhi	.L207
1044:..\src/interruptions.c ****                 one_time_execute[n_line]++;
 3233              		.loc 1 1044 0
 3234 0508 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3235 050a 0E4A     		ldr	r2, .L225+44
 3236 050c D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 3237 050e 0132     		adds	r2, r2, #1
 3238 0510 D1B2     		uxtb	r1, r2
 3239 0512 0C4A     		ldr	r2, .L225+44
 3240 0514 D154     		strb	r1, [r2, r3]
 3241 0516 29E1     		b	.L206
 3242              	.L226:
 3243              		.align	2
 3244              	.L225:
 3245 0518 C0000000 		.word	error.10550
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 78


 3246 051c 90000000 		.word	last_value_encoder.10548
 3247 0520 00000000 		.word	g_meas
 3248 0524 00000000 		.word	c_mem
 3249 0528 C8000000 		.word	v_value.10555
 3250 052c E0000000 		.word	vv_value.10556
 3251 0530 F8000000 		.word	vvv_value.10557
 3252 0534 00000000 		.word	filt_vel
 3253 0538 00000000 		.word	cycle_time
 3254 053c 0000C040 		.word	1086324736
 3255 0540 00000000 		.word	pos_reconstruct
 3256 0544 10010000 		.word	one_time_execute.10553
 3257              	.L207:
1045:..\src/interruptions.c ****             else {
1046:..\src/interruptions.c **** 
1047:..\src/interruptions.c ****                 //Double encoder translation
1048:..\src/interruptions.c ****                 if (c_mem.enc[n_line].double_encoder_on_off){
 3258              		.loc 1 1048 0
 3259 0548 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 3260 054a AC49     		ldr	r1, .L227
 3261 054c 1346     		mov	r3, r2
 3262 054e 5B00     		lsls	r3, r3, #1
 3263 0550 1344     		add	r3, r3, r2
 3264 0552 1B01     		lsls	r3, r3, #4
 3265 0554 0B44     		add	r3, r3, r1
 3266 0556 03F5D873 		add	r3, r3, #432
 3267 055a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3268 055c 002B     		cmp	r3, #0
 3269 055e 5ED0     		beq	.L208
1049:..\src/interruptions.c ****                     init_rot = calc_turns_fcn(comp_value_encoder[n_line][0],comp_value_encoder[n_li
 3270              		.loc 1 1049 0
 3271 0560 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 3272 0562 A749     		ldr	r1, .L227+4
 3273 0564 1346     		mov	r3, r2
 3274 0566 5B00     		lsls	r3, r3, #1
 3275 0568 1344     		add	r3, r3, r2
 3276 056a 9B00     		lsls	r3, r3, #2
 3277 056c 0B44     		add	r3, r3, r1
 3278 056e 1868     		ldr	r0, [r3]
 3279 0570 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 3280 0572 A349     		ldr	r1, .L227+4
 3281 0574 1346     		mov	r3, r2
 3282 0576 5B00     		lsls	r3, r3, #1
 3283 0578 1344     		add	r3, r3, r2
 3284 057a 9B00     		lsls	r3, r3, #2
 3285 057c 0B44     		add	r3, r3, r1
 3286 057e 0433     		adds	r3, r3, #4
 3287 0580 1C68     		ldr	r4, [r3]
1050:..\src/interruptions.c ****                                 c_mem.enc[n_line].gears_params[0], c_mem.enc[n_line].gears_params[1
 3288              		.loc 1 1050 0
 3289 0582 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 3290 0584 9D49     		ldr	r1, .L227
 3291 0586 1346     		mov	r3, r2
 3292 0588 5B00     		lsls	r3, r3, #1
 3293 058a 1344     		add	r3, r3, r2
 3294 058c 1B01     		lsls	r3, r3, #4
 3295 058e 0B44     		add	r3, r3, r1
 3296 0590 03F2B513 		addw	r3, r3, #437
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 79


 3297 0594 93F90030 		ldrsb	r3, [r3]
1049:..\src/interruptions.c ****                     init_rot = calc_turns_fcn(comp_value_encoder[n_line][0],comp_value_encoder[n_li
 3298              		.loc 1 1049 0
 3299 0598 1D46     		mov	r5, r3
 3300              		.loc 1 1050 0
 3301 059a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 3302 059c 9749     		ldr	r1, .L227
 3303 059e 1346     		mov	r3, r2
 3304 05a0 5B00     		lsls	r3, r3, #1
 3305 05a2 1344     		add	r3, r3, r2
 3306 05a4 1B01     		lsls	r3, r3, #4
 3307 05a6 0B44     		add	r3, r3, r1
 3308 05a8 03F5DB73 		add	r3, r3, #438
 3309 05ac 93F90030 		ldrsb	r3, [r3]
1049:..\src/interruptions.c ****                     init_rot = calc_turns_fcn(comp_value_encoder[n_line][0],comp_value_encoder[n_li
 3310              		.loc 1 1049 0
 3311 05b0 1E46     		mov	r6, r3
 3312              		.loc 1 1050 0
 3313 05b2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 3314 05b4 9149     		ldr	r1, .L227
 3315 05b6 1346     		mov	r3, r2
 3316 05b8 5B00     		lsls	r3, r3, #1
 3317 05ba 1344     		add	r3, r3, r2
 3318 05bc 1B01     		lsls	r3, r3, #4
 3319 05be 0B44     		add	r3, r3, r1
 3320 05c0 03F2B713 		addw	r3, r3, #439
 3321 05c4 93F90030 		ldrsb	r3, [r3]
1049:..\src/interruptions.c ****                     init_rot = calc_turns_fcn(comp_value_encoder[n_line][0],comp_value_encoder[n_li
 3322              		.loc 1 1049 0
 3323 05c8 0093     		str	r3, [sp]
 3324 05ca 3346     		mov	r3, r6
 3325 05cc 2A46     		mov	r2, r5
 3326 05ce 2146     		mov	r1, r4
 3327 05d0 FFF7FEFF 		bl	calc_turns_fcn
 3328 05d4 0346     		mov	r3, r0
 3329 05d6 87F82730 		strb	r3, [r7, #39]
1051:..\src/interruptions.c **** 
1052:..\src/interruptions.c **** 
1053:..\src/interruptions.c ****                     if (c_mem.enc[n_line].m_mult[0] < 0)
 3330              		.loc 1 1053 0
 3331 05da FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 3332 05dc 8749     		ldr	r1, .L227
 3333 05de 1346     		mov	r3, r2
 3334 05e0 5B00     		lsls	r3, r3, #1
 3335 05e2 1344     		add	r3, r3, r2
 3336 05e4 1B01     		lsls	r3, r3, #4
 3337 05e6 0B44     		add	r3, r3, r1
 3338 05e8 03F5D273 		add	r3, r3, #420
 3339 05ec 1B68     		ldr	r3, [r3]	@ float
 3340 05ee 4FF00001 		mov	r1, #0
 3341 05f2 1846     		mov	r0, r3
 3342 05f4 FFF7FEFF 		bl	__aeabi_fcmplt
 3343 05f8 0346     		mov	r3, r0
 3344 05fa 002B     		cmp	r3, #0
 3345 05fc 05D0     		beq	.L209
1054:..\src/interruptions.c ****                         init_rot = -init_rot;
 3346              		.loc 1 1054 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 80


 3347 05fe 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 3348 0602 5B42     		negs	r3, r3
 3349 0604 DBB2     		uxtb	r3, r3
 3350 0606 87F82730 		strb	r3, [r7, #39]
 3351              	.L209:
1055:..\src/interruptions.c ****                     
1056:..\src/interruptions.c ****                     g_meas[n_line].rot[0] = (int8)init_rot;
 3352              		.loc 1 1056 0
 3353 060a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3354 060c 7D4A     		ldr	r2, .L227+8
 3355 060e 3421     		movs	r1, #52
 3356 0610 01FB03F3 		mul	r3, r1, r3
 3357 0614 1344     		add	r3, r3, r2
 3358 0616 1833     		adds	r3, r3, #24
 3359 0618 97F82720 		ldrb	r2, [r7, #39]
 3360 061c 1A70     		strb	r2, [r3]
 3361              	.L208:
1057:..\src/interruptions.c ****                 }    
1058:..\src/interruptions.c **** 
1059:..\src/interruptions.c ****                 if (c_mem.enc[n_line].m_mult[0] != 1.0)
 3362              		.loc 1 1059 0
 3363 061e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 3364 0620 7649     		ldr	r1, .L227
 3365 0622 1346     		mov	r3, r2
 3366 0624 5B00     		lsls	r3, r3, #1
 3367 0626 1344     		add	r3, r3, r2
 3368 0628 1B01     		lsls	r3, r3, #4
 3369 062a 0B44     		add	r3, r3, r1
 3370 062c 03F5D273 		add	r3, r3, #420
 3371 0630 1B68     		ldr	r3, [r3]	@ float
 3372 0632 4FF07E51 		mov	r1, #1065353216
 3373 0636 1846     		mov	r0, r3
 3374 0638 FFF7FEFF 		bl	__aeabi_fcmpeq
 3375 063c 0346     		mov	r3, r0
 3376 063e 002B     		cmp	r3, #0
 3377 0640 22D1     		bne	.L211
1060:..\src/interruptions.c ****                     g_meas[n_line].pos[0] /= c_mem.enc[n_line].m_mult[0];
 3378              		.loc 1 1060 0
 3379 0642 FC79     		ldrb	r4, [r7, #7]	@ zero_extendqisi2
 3380 0644 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3381 0646 6F4A     		ldr	r2, .L227+8
 3382 0648 3421     		movs	r1, #52
 3383 064a 01FB03F3 		mul	r3, r1, r3
 3384 064e 1344     		add	r3, r3, r2
 3385 0650 1B68     		ldr	r3, [r3]
 3386 0652 1846     		mov	r0, r3
 3387 0654 FFF7FEFF 		bl	__aeabi_i2f
 3388 0658 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 3389 065a 6849     		ldr	r1, .L227
 3390 065c 1346     		mov	r3, r2
 3391 065e 5B00     		lsls	r3, r3, #1
 3392 0660 1344     		add	r3, r3, r2
 3393 0662 1B01     		lsls	r3, r3, #4
 3394 0664 0B44     		add	r3, r3, r1
 3395 0666 03F5D273 		add	r3, r3, #420
 3396 066a 1B68     		ldr	r3, [r3]	@ float
 3397 066c 1946     		mov	r1, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 81


 3398 066e FFF7FEFF 		bl	__aeabi_fdiv
 3399 0672 0346     		mov	r3, r0
 3400 0674 1846     		mov	r0, r3
 3401 0676 FFF7FEFF 		bl	__aeabi_f2iz
 3402 067a 0146     		mov	r1, r0
 3403 067c 614A     		ldr	r2, .L227+8
 3404 067e 3423     		movs	r3, #52
 3405 0680 03FB04F3 		mul	r3, r3, r4
 3406 0684 1344     		add	r3, r3, r2
 3407 0686 1960     		str	r1, [r3]
 3408              	.L211:
1061:..\src/interruptions.c ****                 
1062:..\src/interruptions.c ****                 value_encoder += ((int32)init_rot << 16); 
 3409              		.loc 1 1062 0
 3410 0688 97F92730 		ldrsb	r3, [r7, #39]
 3411 068c 1B04     		lsls	r3, r3, #16
 3412 068e BA6A     		ldr	r2, [r7, #40]
 3413 0690 1344     		add	r3, r3, r2
 3414 0692 BB62     		str	r3, [r7, #40]
1063:..\src/interruptions.c ****        
1064:..\src/interruptions.c ****                 if (c_mem.enc[n_line].m_mult[0] != 1.0) {
 3415              		.loc 1 1064 0
 3416 0694 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 3417 0696 5949     		ldr	r1, .L227
 3418 0698 1346     		mov	r3, r2
 3419 069a 5B00     		lsls	r3, r3, #1
 3420 069c 1344     		add	r3, r3, r2
 3421 069e 1B01     		lsls	r3, r3, #4
 3422 06a0 0B44     		add	r3, r3, r1
 3423 06a2 03F5D273 		add	r3, r3, #420
 3424 06a6 1B68     		ldr	r3, [r3]	@ float
 3425 06a8 4FF07E51 		mov	r1, #1065353216
 3426 06ac 1846     		mov	r0, r3
 3427 06ae FFF7FEFF 		bl	__aeabi_fcmpeq
 3428 06b2 0346     		mov	r3, r0
 3429 06b4 002B     		cmp	r3, #0
 3430 06b6 15D1     		bne	.L213
1065:..\src/interruptions.c ****                     value_encoder *= c_mem.enc[n_line].m_mult[0];
 3431              		.loc 1 1065 0
 3432 06b8 B86A     		ldr	r0, [r7, #40]
 3433 06ba FFF7FEFF 		bl	__aeabi_i2f
 3434 06be FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 3435 06c0 4E49     		ldr	r1, .L227
 3436 06c2 1346     		mov	r3, r2
 3437 06c4 5B00     		lsls	r3, r3, #1
 3438 06c6 1344     		add	r3, r3, r2
 3439 06c8 1B01     		lsls	r3, r3, #4
 3440 06ca 0B44     		add	r3, r3, r1
 3441 06cc 03F5D273 		add	r3, r3, #420
 3442 06d0 1B68     		ldr	r3, [r3]	@ float
 3443 06d2 1946     		mov	r1, r3
 3444 06d4 FFF7FEFF 		bl	__aeabi_fmul
 3445 06d8 0346     		mov	r3, r0
 3446 06da 1846     		mov	r0, r3
 3447 06dc FFF7FEFF 		bl	__aeabi_f2iz
 3448 06e0 0346     		mov	r3, r0
 3449 06e2 BB62     		str	r3, [r7, #40]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 82


 3450              	.L213:
1066:..\src/interruptions.c ****                 }
1067:..\src/interruptions.c **** 
1068:..\src/interruptions.c ****                 if (c_mem.dev.dev_type == SOFTHAND_PRO) {
 3451              		.loc 1 1068 0
 3452 06e4 454B     		ldr	r3, .L227
 3453 06e6 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 3454 06ea 002B     		cmp	r3, #0
 3455 06ec 07D1     		bne	.L215
1069:..\src/interruptions.c ****                     // Right / Left hand turn
1070:..\src/interruptions.c ****                     if (c_mem.dev.right_left == RIGHT_HAND){
 3456              		.loc 1 1070 0
 3457 06ee 434B     		ldr	r3, .L227
 3458 06f0 93F8A730 		ldrb	r3, [r3, #167]	@ zero_extendqisi2
 3459 06f4 002B     		cmp	r3, #0
 3460 06f6 02D1     		bne	.L215
1071:..\src/interruptions.c ****                         value_encoder *= -1;        
 3461              		.loc 1 1071 0
 3462 06f8 BB6A     		ldr	r3, [r7, #40]
 3463 06fa 5B42     		negs	r3, r3
 3464 06fc BB62     		str	r3, [r7, #40]
 3465              	.L215:
1072:..\src/interruptions.c ****                     }
1073:..\src/interruptions.c ****                 }
1074:..\src/interruptions.c ****          
1075:..\src/interruptions.c ****                 g_meas[n_line].pos[0] = value_encoder;
 3466              		.loc 1 1075 0
 3467 06fe FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3468 0700 404A     		ldr	r2, .L227+8
 3469 0702 3421     		movs	r1, #52
 3470 0704 01FB03F3 		mul	r3, r1, r3
 3471 0708 1344     		add	r3, r3, r2
 3472 070a BA6A     		ldr	r2, [r7, #40]
 3473 070c 1A60     		str	r2, [r3]
1076:..\src/interruptions.c ****                 
1077:..\src/interruptions.c ****                 g_refNew[assoc_motor].pos = g_meas[n_line].pos[0];
 3474              		.loc 1 1077 0
 3475 070e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3476 0710 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 3477 0712 3C49     		ldr	r1, .L227+8
 3478 0714 3420     		movs	r0, #52
 3479 0716 00FB02F2 		mul	r2, r0, r2
 3480 071a 0A44     		add	r2, r2, r1
 3481 071c 1268     		ldr	r2, [r2]
 3482 071e 3A49     		ldr	r1, .L227+12
 3483 0720 1B01     		lsls	r3, r3, #4
 3484 0722 0B44     		add	r3, r3, r1
 3485 0724 1A60     		str	r2, [r3]
1078:..\src/interruptions.c **** 
1079:..\src/interruptions.c ****                 // If necessary activate motor
1080:..\src/interruptions.c ****     			safe_startup_motor_activation[n_line] = TRUE;
 3486              		.loc 1 1080 0
 3487 0726 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3488 0728 384A     		ldr	r2, .L227+16
 3489 072a 0121     		movs	r1, #1
 3490 072c D154     		strb	r1, [r2, r3]
1081:..\src/interruptions.c ****                 // Activate the motor associated to this encoder line
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 83


1082:..\src/interruptions.c ****                 g_refNew[assoc_motor].onoff = c_mem.motor[assoc_motor].activ;
 3491              		.loc 1 1082 0
 3492 072e B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 3493 0730 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 3494 0732 3248     		ldr	r0, .L227
 3495 0734 1346     		mov	r3, r2
 3496 0736 DB00     		lsls	r3, r3, #3
 3497 0738 9B1A     		subs	r3, r3, r2
 3498 073a 1B01     		lsls	r3, r3, #4
 3499 073c 0344     		add	r3, r3, r0
 3500 073e E033     		adds	r3, r3, #224
 3501 0740 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 3502 0742 314A     		ldr	r2, .L227+12
 3503 0744 0B01     		lsls	r3, r1, #4
 3504 0746 1344     		add	r3, r3, r2
 3505 0748 0C33     		adds	r3, r3, #12
 3506 074a 0246     		mov	r2, r0
 3507 074c 1A70     		strb	r2, [r3]
1083:..\src/interruptions.c ****                 enable_motor(assoc_motor, g_refNew[assoc_motor].onoff);                
 3508              		.loc 1 1083 0
 3509 074e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3510 0750 2D4A     		ldr	r2, .L227+12
 3511 0752 1B01     		lsls	r3, r3, #4
 3512 0754 1344     		add	r3, r3, r2
 3513 0756 0C33     		adds	r3, r3, #12
 3514 0758 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3515 075a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3516 075c 1146     		mov	r1, r2
 3517 075e 1846     		mov	r0, r3
 3518 0760 FFF7FEFF 		bl	enable_motor
1084:..\src/interruptions.c ****                 
1085:..\src/interruptions.c ****                 pos_reconstruct[n_line] = TRUE;
 3519              		.loc 1 1085 0
 3520 0764 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3521 0766 2A4A     		ldr	r2, .L227+20
 3522 0768 0121     		movs	r1, #1
 3523 076a D154     		strb	r1, [r2, r3]
 3524              	.L206:
 947:..\src/interruptions.c ****         
 3525              		.loc 1 947 0 discriminator 2
 3526 076c 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 3527 0770 0133     		adds	r3, r3, #1
 3528 0772 87F82F30 		strb	r3, [r7, #47]
 3529              	.L195:
 947:..\src/interruptions.c ****         
 3530              		.loc 1 947 0 is_stmt 0 discriminator 1
 3531 0776 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 3532 077a 022B     		cmp	r3, #2
 3533 077c 7FF6C5AC 		bls	.L216
1086:..\src/interruptions.c ****             }
1087:..\src/interruptions.c ****         }
1088:..\src/interruptions.c ****     } 
1089:..\src/interruptions.c **** 
1090:..\src/interruptions.c **** 	
1091:..\src/interruptions.c **** 	// Wait for 35+SAFE_STARTUP_MOTOR_READINGS cycles before starting motors
1092:..\src/interruptions.c ****     if (safe_startup_motor_activation[n_line]){
 3534              		.loc 1 1092 0 is_stmt 1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 84


 3535 0780 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3536 0782 224A     		ldr	r2, .L227+16
 3537 0784 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 3538 0786 002B     		cmp	r3, #0
 3539 0788 35D0     		beq	.L186
1093:..\src/interruptions.c ****         count_startup_motor[n_line]++;
 3540              		.loc 1 1093 0
 3541 078a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3542 078c 214A     		ldr	r2, .L227+24
 3543 078e 52F82320 		ldr	r2, [r2, r3, lsl #2]
 3544 0792 0132     		adds	r2, r2, #1
 3545 0794 1F49     		ldr	r1, .L227+24
 3546 0796 41F82320 		str	r2, [r1, r3, lsl #2]
1094:..\src/interruptions.c ****         if (count_startup_motor[n_line] >= (uint32)SAFE_STARTUP_MOTOR_READINGS) {                  
 3547              		.loc 1 1094 0
 3548 079a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3549 079c 1D4A     		ldr	r2, .L227+24
 3550 079e 52F82330 		ldr	r3, [r2, r3, lsl #2]
 3551 07a2 B3F5FA5F 		cmp	r3, #8000
 3552 07a6 26D3     		bcc	.L186
1095:..\src/interruptions.c ****             g_refNew[assoc_motor].pos = 0;
 3553              		.loc 1 1095 0
 3554 07a8 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3555 07aa 174A     		ldr	r2, .L227+12
 3556 07ac 1B01     		lsls	r3, r3, #4
 3557 07ae 1344     		add	r3, r3, r2
 3558 07b0 0022     		movs	r2, #0
 3559 07b2 1A60     		str	r2, [r3]
1096:..\src/interruptions.c ****             
1097:..\src/interruptions.c ****             // Activate the motor associated to this encoder line
1098:..\src/interruptions.c ****             g_refNew[assoc_motor].onoff = c_mem.motor[assoc_motor].activ;
 3560              		.loc 1 1098 0
 3561 07b4 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 3562 07b6 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 3563 07b8 1048     		ldr	r0, .L227
 3564 07ba 1346     		mov	r3, r2
 3565 07bc DB00     		lsls	r3, r3, #3
 3566 07be 9B1A     		subs	r3, r3, r2
 3567 07c0 1B01     		lsls	r3, r3, #4
 3568 07c2 0344     		add	r3, r3, r0
 3569 07c4 E033     		adds	r3, r3, #224
 3570 07c6 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 3571 07c8 0F4A     		ldr	r2, .L227+12
 3572 07ca 0B01     		lsls	r3, r1, #4
 3573 07cc 1344     		add	r3, r3, r2
 3574 07ce 0C33     		adds	r3, r3, #12
 3575 07d0 0246     		mov	r2, r0
 3576 07d2 1A70     		strb	r2, [r3]
1099:..\src/interruptions.c ****             enable_motor(assoc_motor, g_refNew[assoc_motor].onoff); 
 3577              		.loc 1 1099 0
 3578 07d4 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3579 07d6 0C4A     		ldr	r2, .L227+12
 3580 07d8 1B01     		lsls	r3, r3, #4
 3581 07da 1344     		add	r3, r3, r2
 3582 07dc 0C33     		adds	r3, r3, #12
 3583 07de 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3584 07e0 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 85


 3585 07e2 1146     		mov	r1, r2
 3586 07e4 1846     		mov	r0, r3
 3587 07e6 FFF7FEFF 		bl	enable_motor
1100:..\src/interruptions.c ****                         
1101:..\src/interruptions.c ****             safe_startup_motor_activation[n_line] = FALSE;
 3588              		.loc 1 1101 0
 3589 07ea FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3590 07ec 074A     		ldr	r2, .L227+16
 3591 07ee 0021     		movs	r1, #0
 3592 07f0 D154     		strb	r1, [r2, r3]
 3593 07f2 00E0     		b	.L186
 3594              	.L222:
1002:..\src/interruptions.c ****                 }
 3595              		.loc 1 1002 0
 3596 07f4 00BF     		nop
 3597              	.L186:
1102:..\src/interruptions.c ****         }
1103:..\src/interruptions.c ****     }
1104:..\src/interruptions.c ****  
1105:..\src/interruptions.c **** }
 3598              		.loc 1 1105 0
 3599 07f6 3437     		adds	r7, r7, #52
 3600              		.cfi_def_cfa_offset 20
 3601 07f8 BD46     		mov	sp, r7
 3602              		.cfi_def_cfa_register 13
 3603              		@ sp needed
 3604 07fa F0BD     		pop	{r4, r5, r6, r7, pc}
 3605              	.L228:
 3606              		.align	2
 3607              	.L227:
 3608 07fc 00000000 		.word	c_mem
 3609 0800 A8000000 		.word	comp_value_encoder.10549
 3610 0804 00000000 		.word	g_meas
 3611 0808 00000000 		.word	g_refNew
 3612 080c 14010000 		.word	safe_startup_motor_activation.10552
 3613 0810 00000000 		.word	pos_reconstruct
 3614 0814 18010000 		.word	count_startup_motor.10554
 3615              		.cfi_endproc
 3616              	.LFE72:
 3617              		.size	encoder_reading_SPI, .-encoder_reading_SPI
 3618              		.section	.text.analog_read_end,"ax",%progbits
 3619              		.align	2
 3620              		.global	analog_read_end
 3621              		.thumb
 3622              		.thumb_func
 3623              		.type	analog_read_end, %function
 3624              	analog_read_end:
 3625              	.LFB73:
1106:..\src/interruptions.c **** 
1107:..\src/interruptions.c **** //==============================================================================
1108:..\src/interruptions.c **** //                                                           ANALOG MEASUREMENTS
1109:..\src/interruptions.c **** //==============================================================================
1110:..\src/interruptions.c **** 
1111:..\src/interruptions.c **** void analog_read_end() {
 3626              		.loc 1 1111 0
 3627              		.cfi_startproc
 3628              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 86


 3629              		@ frame_needed = 1, uses_anonymous_args = 0
 3630 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 3631              		.cfi_def_cfa_offset 20
 3632              		.cfi_offset 4, -20
 3633              		.cfi_offset 5, -16
 3634              		.cfi_offset 6, -12
 3635              		.cfi_offset 7, -8
 3636              		.cfi_offset 14, -4
 3637 0002 83B0     		sub	sp, sp, #12
 3638              		.cfi_def_cfa_offset 32
 3639 0004 00AF     		add	r7, sp, #0
 3640              		.cfi_def_cfa_register 7
1112:..\src/interruptions.c **** 
1113:..\src/interruptions.c ****     /* =========================================================================
1114:..\src/interruptions.c ****     /   Ideal formulation to calculate tension and current
1115:..\src/interruptions.c ****     /
1116:..\src/interruptions.c ****     /   tension = ((read_value_mV - offset) * 101) / gain -> [mV]
1117:..\src/interruptions.c ****     /   current = ((read_value_mV - offset) * 375) / (gain * resistor) -> [mA]
1118:..\src/interruptions.c ****     /
1119:..\src/interruptions.c ****     /   Definition:
1120:..\src/interruptions.c ****     /   read_value_mV = counts_read / 0.819 -> conversion from counts to mV
1121:..\src/interruptions.c ****     /   offset = 2000 -> hardware amplifier bias in mV
1122:..\src/interruptions.c ****     /   gain = 8.086 -> amplifier gain
1123:..\src/interruptions.c ****     /   resistor = 18 -> resistor of voltage divider in KOhm 
1124:..\src/interruptions.c ****     /
1125:..\src/interruptions.c ****     /   Real formulation: tradeoff in good performance and accurancy, ADC_buf[] 
1126:..\src/interruptions.c ****     /   and offset unit of measurement is counts, instead dev_tension and
1127:..\src/interruptions.c ****     /   g_meas.curr[] are converted in properly unit.
1128:..\src/interruptions.c ****     /  =========================================================================
1129:..\src/interruptions.c ****     */
1130:..\src/interruptions.c **** 
1131:..\src/interruptions.c ****     int32 CYDATA i_aux;
1132:..\src/interruptions.c **** 
1133:..\src/interruptions.c ****     static uint16 emg_counter_1 = 0;
1134:..\src/interruptions.c ****     static uint16 emg_counter_2 = 0;
1135:..\src/interruptions.c ****     static uint16 UD_counter = 0;
1136:..\src/interruptions.c ****     static uint16 LR_counter = 0;
1137:..\src/interruptions.c ****     static int32 UD_mean_value;
1138:..\src/interruptions.c ****     static int32 LR_mean_value;
1139:..\src/interruptions.c **** 	static uint8 first_tension_valid = TRUE;
1140:..\src/interruptions.c ****     static int32 detect_power_cycle_prev = -3;
1141:..\src/interruptions.c ****     static uint16 count = 0;
1142:..\src/interruptions.c ****     static uint32 v_count = 0;
1143:..\src/interruptions.c ****     static uint8 idx = 0;
1144:..\src/interruptions.c ****     
1145:..\src/interruptions.c ****     
1146:..\src/interruptions.c ****     // Wait for conversion end
1147:..\src/interruptions.c ****     
1148:..\src/interruptions.c ****     while(!ADC_STATUS_Read()){
 3641              		.loc 1 1148 0
 3642 0006 08E0     		b	.L230
 3643              	.L231:
1149:..\src/interruptions.c ****         
1150:..\src/interruptions.c ****         if (interrupt_flag){
 3644              		.loc 1 1150 0
 3645 0008 AD4B     		ldr	r3, .L380
 3646 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 87


 3647 000c 002B     		cmp	r3, #0
 3648 000e 04D0     		beq	.L230
1151:..\src/interruptions.c ****             interrupt_flag = FALSE;
 3649              		.loc 1 1151 0
 3650 0010 AB4B     		ldr	r3, .L380
 3651 0012 0022     		movs	r2, #0
 3652 0014 1A70     		strb	r2, [r3]
1152:..\src/interruptions.c ****             interrupt_manager();
 3653              		.loc 1 1152 0
 3654 0016 FFF7FEFF 		bl	interrupt_manager
 3655              	.L230:
1148:..\src/interruptions.c ****         
 3656              		.loc 1 1148 0
 3657 001a FFF7FEFF 		bl	ADC_STATUS_Read
 3658 001e 0346     		mov	r3, r0
 3659 0020 002B     		cmp	r3, #0
 3660 0022 F1D0     		beq	.L231
1153:..\src/interruptions.c ****         }
1154:..\src/interruptions.c ****     }
1155:..\src/interruptions.c ****     
1156:..\src/interruptions.c **** #ifdef AIR_CHAMBERS_FB_FW
1157:..\src/interruptions.c ****     if (c_mem.dev.dev_type == AIR_CHAMBERS_FB){
1158:..\src/interruptions.c ****         // Read pressure in any case
1159:..\src/interruptions.c ****         g_fb_meas.pressure  = (int32)(ADC_buf[0] -1540);    //0 - 4096  
1160:..\src/interruptions.c ****         g_fb_meas.pressure = (((float)g_fb_meas.pressure/4096.0)/0.004);       // datasheet transfe
1161:..\src/interruptions.c ****         if (g_fb_meas.pressure < 0) g_fb_meas.pressure = 0;
1162:..\src/interruptions.c ****     }
1163:..\src/interruptions.c **** #endif
1164:..\src/interruptions.c ****  
1165:..\src/interruptions.c ****     // Convert tension read
1166:..\src/interruptions.c ****     if (g_mem.dev.dev_type == AIR_CHAMBERS_FB){
 3661              		.loc 1 1166 0
 3662 0024 A74B     		ldr	r3, .L380+4
 3663 0026 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 3664 002a 022B     		cmp	r3, #2
 3665 002c 04D1     		bne	.L232
1167:..\src/interruptions.c ****         dev_tension[0] = 5000;
 3666              		.loc 1 1167 0
 3667 002e A64B     		ldr	r3, .L380+8
 3668 0030 41F28832 		movw	r2, #5000
 3669 0034 1A60     		str	r2, [r3]
 3670 0036 0BE0     		b	.L233
 3671              	.L232:
1168:..\src/interruptions.c ****     }
1169:..\src/interruptions.c ****     else {
1170:..\src/interruptions.c ****         dev_tension[0] =  ((int32)(ADC_buf[0] - 1621) * 1990) >> 7;
 3672              		.loc 1 1170 0
 3673 0038 A44B     		ldr	r3, .L380+12
 3674 003a B3F90030 		ldrsh	r3, [r3]
 3675 003e A3F25563 		subw	r3, r3, #1621
 3676 0042 40F2C672 		movw	r2, #1990
 3677 0046 02FB03F3 		mul	r3, r2, r3
 3678 004a DB11     		asrs	r3, r3, #7
 3679 004c 9E4A     		ldr	r2, .L380+8
 3680 004e 1360     		str	r3, [r2]
 3681              	.L233:
1171:..\src/interruptions.c ****     }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 88


1172:..\src/interruptions.c ****     
1173:..\src/interruptions.c ****     // Read also 2nd power tension (if necessary)
1174:..\src/interruptions.c ****     if (NUM_OF_ANALOG_INPUTS > 4) {
 3682              		.loc 1 1174 0
 3683 0050 9F4B     		ldr	r3, .L380+16
 3684 0052 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3685 0054 042B     		cmp	r3, #4
 3686 0056 0BD9     		bls	.L234
1175:..\src/interruptions.c ****         dev_tension[1] = ((int32)(ADC_buf[4] - 1621) * 1990) >> 7;
 3687              		.loc 1 1175 0
 3688 0058 9C4B     		ldr	r3, .L380+12
 3689 005a B3F90830 		ldrsh	r3, [r3, #8]
 3690 005e A3F25563 		subw	r3, r3, #1621
 3691 0062 40F2C672 		movw	r2, #1990
 3692 0066 02FB03F3 		mul	r3, r2, r3
 3693 006a DB11     		asrs	r3, r3, #7
 3694 006c 964A     		ldr	r2, .L380+8
 3695 006e 5360     		str	r3, [r2, #4]
 3696              	.L234:
1176:..\src/interruptions.c ****     }
1177:..\src/interruptions.c ****     
1178:..\src/interruptions.c ****     if (interrupt_flag){
 3697              		.loc 1 1178 0
 3698 0070 934B     		ldr	r3, .L380
 3699 0072 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3700 0074 002B     		cmp	r3, #0
 3701 0076 04D0     		beq	.L235
1179:..\src/interruptions.c ****         interrupt_flag = FALSE;                                                                    
 3702              		.loc 1 1179 0
 3703 0078 914B     		ldr	r3, .L380
 3704 007a 0022     		movs	r2, #0
 3705 007c 1A70     		strb	r2, [r3]
1180:..\src/interruptions.c ****         interrupt_manager();
 3706              		.loc 1 1180 0
 3707 007e FFF7FEFF 		bl	interrupt_manager
 3708              	.L235:
1181:..\src/interruptions.c ****     }
1182:..\src/interruptions.c ****     
1183:..\src/interruptions.c ****     // Update cycle power value
1184:..\src/interruptions.c ****     detect_power_cycle = filter(dev_tension[0]/6000, &filt_detect_pc);
 3709              		.loc 1 1184 0
 3710 0082 914B     		ldr	r3, .L380+8
 3711 0084 1B68     		ldr	r3, [r3]
 3712 0086 934A     		ldr	r2, .L380+20
 3713 0088 82FB0312 		smull	r1, r2, r2, r3
 3714 008c D211     		asrs	r2, r2, #7
 3715 008e DB17     		asrs	r3, r3, #31
 3716 0090 D31A     		subs	r3, r2, r3
 3717 0092 9149     		ldr	r1, .L380+24
 3718 0094 1846     		mov	r0, r3
 3719 0096 FFF7FEFF 		bl	filter
 3720 009a 0246     		mov	r2, r0
 3721 009c 8F4B     		ldr	r3, .L380+28
 3722 009e 1A60     		str	r2, [r3]
1185:..\src/interruptions.c ****     if (detect_power_cycle_prev < 0 && detect_power_cycle >= 0){    // Only positive difference is 
 3723              		.loc 1 1185 0
 3724 00a0 8F4B     		ldr	r3, .L380+32
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 89


 3725 00a2 1B68     		ldr	r3, [r3]
 3726 00a4 002B     		cmp	r3, #0
 3727 00a6 08DA     		bge	.L236
 3728              		.loc 1 1185 0 is_stmt 0 discriminator 1
 3729 00a8 8C4B     		ldr	r3, .L380+28
 3730 00aa 1B68     		ldr	r3, [r3]
 3731 00ac 002B     		cmp	r3, #0
 3732 00ae 04DB     		blt	.L236
1186:..\src/interruptions.c ****         g_mem.cnt.power_cycles++;       // New power cycle (update value)   
 3733              		.loc 1 1186 0 is_stmt 1
 3734 00b0 844B     		ldr	r3, .L380+4
 3735 00b2 1B6E     		ldr	r3, [r3, #96]
 3736 00b4 0133     		adds	r3, r3, #1
 3737 00b6 834A     		ldr	r2, .L380+4
 3738 00b8 1366     		str	r3, [r2, #96]
 3739              	.L236:
1187:..\src/interruptions.c ****     }
1188:..\src/interruptions.c ****     detect_power_cycle_prev = detect_power_cycle;
 3740              		.loc 1 1188 0
 3741 00ba 884B     		ldr	r3, .L380+28
 3742 00bc 1B68     		ldr	r3, [r3]
 3743 00be 884A     		ldr	r2, .L380+32
 3744 00c0 1360     		str	r3, [r2]
1189:..\src/interruptions.c ****   
1190:..\src/interruptions.c ****     
1191:..\src/interruptions.c ****     // VOLTAGE READING
1192:..\src/interruptions.c ****     // Once firmware starts, first_tension_valid flag is set to TRUE while tension_valid status is 
1193:..\src/interruptions.c ****     // Step 1) Wait for battery voltage stabilization and filter convergence for 1000 cycles (v_cou
1194:..\src/interruptions.c ****     // Step 2) Wait for another 1000 cycles (count counter) to decide which is full charge power te
1195:..\src/interruptions.c ****     // Low voltage condition) Whenever dev_tension ADC value is under 7000 mV, tension_valid flag i
1196:..\src/interruptions.c ****     
1197:..\src/interruptions.c **** 	if (first_tension_valid && tension_valid) {     // Voltage reading (Step 2)
 3745              		.loc 1 1197 0
 3746 00c2 884B     		ldr	r3, .L380+36
 3747 00c4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3748 00c6 002B     		cmp	r3, #0
 3749 00c8 4DD0     		beq	.L237
 3750              		.loc 1 1197 0 is_stmt 0 discriminator 1
 3751 00ca 874B     		ldr	r3, .L380+40
 3752 00cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3753 00ce 002B     		cmp	r3, #0
 3754 00d0 49D0     		beq	.L237
1198:..\src/interruptions.c ****         count = count + 1;
 3755              		.loc 1 1198 0 is_stmt 1
 3756 00d2 864B     		ldr	r3, .L380+44
 3757 00d4 1B88     		ldrh	r3, [r3]
 3758 00d6 0133     		adds	r3, r3, #1
 3759 00d8 9AB2     		uxth	r2, r3
 3760 00da 844B     		ldr	r3, .L380+44
 3761 00dc 1A80     		strh	r2, [r3]	@ movhi
1199:..\src/interruptions.c ****         
1200:..\src/interruptions.c ****         if (count == 1000){
 3762              		.loc 1 1200 0
 3763 00de 834B     		ldr	r3, .L380+44
 3764 00e0 1B88     		ldrh	r3, [r3]
 3765 00e2 B3F57A7F 		cmp	r3, #1000
 3766 00e6 3ED1     		bne	.L237
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 90


1201:..\src/interruptions.c ****             for (idx = 0; idx < NUM_OF_MOTORS; idx++) {
 3767              		.loc 1 1201 0
 3768 00e8 814B     		ldr	r3, .L380+48
 3769 00ea 0022     		movs	r2, #0
 3770 00ec 1A70     		strb	r2, [r3]
 3771 00ee 33E0     		b	.L238
 3772              	.L242:
1202:..\src/interruptions.c ****                 if (dev_tension[idx] < 9000) {   // 8 V case
 3773              		.loc 1 1202 0
 3774 00f0 7F4B     		ldr	r3, .L380+48
 3775 00f2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3776 00f4 1A46     		mov	r2, r3
 3777 00f6 744B     		ldr	r3, .L380+8
 3778 00f8 53F82230 		ldr	r3, [r3, r2, lsl #2]
 3779 00fc 42F22732 		movw	r2, #8999
 3780 0100 9342     		cmp	r3, r2
 3781 0102 08DC     		bgt	.L239
1203:..\src/interruptions.c ****                     pow_tension[idx] = 8000;
 3782              		.loc 1 1203 0
 3783 0104 7A4B     		ldr	r3, .L380+48
 3784 0106 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3785 0108 1946     		mov	r1, r3
 3786 010a 7A4B     		ldr	r3, .L380+52
 3787 010c 4FF4FA52 		mov	r2, #8000
 3788 0110 43F82120 		str	r2, [r3, r1, lsl #2]
 3789 0114 1AE0     		b	.L240
 3790              	.L239:
1204:..\src/interruptions.c ****                 }
1205:..\src/interruptions.c ****                 else {      // 12 V - 24 V cases
1206:..\src/interruptions.c ****                     if (dev_tension[idx] < 13000) {
 3791              		.loc 1 1206 0
 3792 0116 764B     		ldr	r3, .L380+48
 3793 0118 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3794 011a 1A46     		mov	r2, r3
 3795 011c 6A4B     		ldr	r3, .L380+8
 3796 011e 53F82230 		ldr	r3, [r3, r2, lsl #2]
 3797 0122 43F2C722 		movw	r2, #12999
 3798 0126 9342     		cmp	r3, r2
 3799 0128 08DC     		bgt	.L241
1207:..\src/interruptions.c ****                         pow_tension[idx] = 12000;
 3800              		.loc 1 1207 0
 3801 012a 714B     		ldr	r3, .L380+48
 3802 012c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3803 012e 1946     		mov	r1, r3
 3804 0130 704B     		ldr	r3, .L380+52
 3805 0132 42F6E062 		movw	r2, #12000
 3806 0136 43F82120 		str	r2, [r3, r1, lsl #2]
 3807 013a 07E0     		b	.L240
 3808              	.L241:
1208:..\src/interruptions.c ****                     }
1209:..\src/interruptions.c ****                     else
1210:..\src/interruptions.c ****                         pow_tension[idx] = 24000;
 3809              		.loc 1 1210 0
 3810 013c 6C4B     		ldr	r3, .L380+48
 3811 013e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3812 0140 1946     		mov	r1, r3
 3813 0142 6C4B     		ldr	r3, .L380+52
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 91


 3814 0144 45F6C052 		movw	r2, #24000
 3815 0148 43F82120 		str	r2, [r3, r1, lsl #2]
 3816              	.L240:
1201:..\src/interruptions.c ****                 if (dev_tension[idx] < 9000) {   // 8 V case
 3817              		.loc 1 1201 0 discriminator 2
 3818 014c 684B     		ldr	r3, .L380+48
 3819 014e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3820 0150 0133     		adds	r3, r3, #1
 3821 0152 DAB2     		uxtb	r2, r3
 3822 0154 664B     		ldr	r3, .L380+48
 3823 0156 1A70     		strb	r2, [r3]
 3824              	.L238:
1201:..\src/interruptions.c ****                 if (dev_tension[idx] < 9000) {   // 8 V case
 3825              		.loc 1 1201 0 is_stmt 0 discriminator 1
 3826 0158 654B     		ldr	r3, .L380+48
 3827 015a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3828 015c 012B     		cmp	r3, #1
 3829 015e C7D9     		bls	.L242
1211:..\src/interruptions.c ****                 }
1212:..\src/interruptions.c ****             }
1213:..\src/interruptions.c ****             first_tension_valid = FALSE;
 3830              		.loc 1 1213 0 is_stmt 1
 3831 0160 604B     		ldr	r3, .L380+36
 3832 0162 0022     		movs	r2, #0
 3833 0164 1A70     		strb	r2, [r3]
 3834              	.L237:
1214:..\src/interruptions.c ****         }
1215:..\src/interruptions.c ****     }
1216:..\src/interruptions.c **** 
1217:..\src/interruptions.c ****     // Until there is no valid input tension repeat this measurement
1218:..\src/interruptions.c **** 
1219:..\src/interruptions.c ****     if (dev_tension[0] < 6500 && (NUM_OF_ANALOG_INPUTS<=4 || dev_tension[1] < 6500)) {       // Vol
 3835              		.loc 1 1219 0
 3836 0166 584B     		ldr	r3, .L380+8
 3837 0168 1B68     		ldr	r3, [r3]
 3838 016a 41F66312 		movw	r2, #6499
 3839 016e 9342     		cmp	r3, r2
 3840 0170 00F3F580 		bgt	.L243
 3841              		.loc 1 1219 0 is_stmt 0 discriminator 1
 3842 0174 564B     		ldr	r3, .L380+16
 3843 0176 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3844 0178 042B     		cmp	r3, #4
 3845 017a 06D9     		bls	.L244
 3846              		.loc 1 1219 0 discriminator 2
 3847 017c 524B     		ldr	r3, .L380+8
 3848 017e 5B68     		ldr	r3, [r3, #4]
 3849 0180 41F66312 		movw	r2, #6499
 3850 0184 9342     		cmp	r3, r2
 3851 0186 00F3EA80 		bgt	.L243
 3852              	.L244:
1220:..\src/interruptions.c ****         // PSoC is powered through uUSB
1221:..\src/interruptions.c ****         
1222:..\src/interruptions.c ****         tension_valid = FALSE;
 3853              		.loc 1 1222 0 is_stmt 1
 3854 018a 574B     		ldr	r3, .L380+40
 3855 018c 0022     		movs	r2, #0
 3856 018e 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 92


1223:..\src/interruptions.c ****             
1224:..\src/interruptions.c ****         if (interrupt_flag){
 3857              		.loc 1 1224 0
 3858 0190 4B4B     		ldr	r3, .L380
 3859 0192 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3860 0194 002B     		cmp	r3, #0
 3861 0196 04D0     		beq	.L245
1225:..\src/interruptions.c ****             interrupt_flag = FALSE;
 3862              		.loc 1 1225 0
 3863 0198 494B     		ldr	r3, .L380
 3864 019a 0022     		movs	r2, #0
 3865 019c 1A70     		strb	r2, [r3]
1226:..\src/interruptions.c ****             interrupt_manager();
 3866              		.loc 1 1226 0
 3867 019e FFF7FEFF 		bl	interrupt_manager
 3868              	.L245:
1227:..\src/interruptions.c ****         }
1228:..\src/interruptions.c ****         
1229:..\src/interruptions.c ****         for (idx = 0; idx < NUM_OF_MOTORS; idx++){
 3869              		.loc 1 1229 0
 3870 01a2 534B     		ldr	r3, .L380+48
 3871 01a4 0022     		movs	r2, #0
 3872 01a6 1A70     		strb	r2, [r3]
 3873 01a8 81E0     		b	.L246
 3874              	.L249:
1230:..\src/interruptions.c ****             if (c_mem.emg.emg_calibration_flag) {
 3875              		.loc 1 1230 0
 3876 01aa 534B     		ldr	r3, .L380+56
 3877 01ac 93F8FE31 		ldrb	r3, [r3, #510]	@ zero_extendqisi2
 3878 01b0 002B     		cmp	r3, #0
 3879 01b2 59D0     		beq	.L247
1231:..\src/interruptions.c ****                 if ((c_mem.motor[idx].input_mode == INPUT_MODE_EMG_PROPORTIONAL) ||
 3880              		.loc 1 1231 0
 3881 01b4 4E4B     		ldr	r3, .L380+48
 3882 01b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3883 01b8 1946     		mov	r1, r3
 3884 01ba 4F4A     		ldr	r2, .L380+56
 3885 01bc 0B46     		mov	r3, r1
 3886 01be DB00     		lsls	r3, r3, #3
 3887 01c0 5B1A     		subs	r3, r3, r1
 3888 01c2 1B01     		lsls	r3, r3, #4
 3889 01c4 1344     		add	r3, r3, r2
 3890 01c6 03F58773 		add	r3, r3, #270
 3891 01ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3892 01cc 022B     		cmp	r3, #2
 3893 01ce 37D0     		beq	.L248
1232:..\src/interruptions.c ****                     (c_mem.motor[idx].input_mode == INPUT_MODE_EMG_INTEGRAL) ||
 3894              		.loc 1 1232 0 discriminator 1
 3895 01d0 474B     		ldr	r3, .L380+48
 3896 01d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3897 01d4 1946     		mov	r1, r3
 3898 01d6 484A     		ldr	r2, .L380+56
 3899 01d8 0B46     		mov	r3, r1
 3900 01da DB00     		lsls	r3, r3, #3
 3901 01dc 5B1A     		subs	r3, r3, r1
 3902 01de 1B01     		lsls	r3, r3, #4
 3903 01e0 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 93


 3904 01e2 03F58773 		add	r3, r3, #270
 3905 01e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1231:..\src/interruptions.c ****                 if ((c_mem.motor[idx].input_mode == INPUT_MODE_EMG_PROPORTIONAL) ||
 3906              		.loc 1 1231 0 discriminator 1
 3907 01e8 032B     		cmp	r3, #3
 3908 01ea 29D0     		beq	.L248
1233:..\src/interruptions.c ****                     (c_mem.motor[idx].input_mode == INPUT_MODE_EMG_FCFS) ||
 3909              		.loc 1 1233 0
 3910 01ec 404B     		ldr	r3, .L380+48
 3911 01ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3912 01f0 1946     		mov	r1, r3
 3913 01f2 414A     		ldr	r2, .L380+56
 3914 01f4 0B46     		mov	r3, r1
 3915 01f6 DB00     		lsls	r3, r3, #3
 3916 01f8 5B1A     		subs	r3, r3, r1
 3917 01fa 1B01     		lsls	r3, r3, #4
 3918 01fc 1344     		add	r3, r3, r2
 3919 01fe 03F58773 		add	r3, r3, #270
 3920 0202 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1232:..\src/interruptions.c ****                     (c_mem.motor[idx].input_mode == INPUT_MODE_EMG_INTEGRAL) ||
 3921              		.loc 1 1232 0
 3922 0204 042B     		cmp	r3, #4
 3923 0206 1BD0     		beq	.L248
1234:..\src/interruptions.c ****                     (c_mem.motor[idx].input_mode == INPUT_MODE_EMG_FCFS_ADV) ||
 3924              		.loc 1 1234 0
 3925 0208 394B     		ldr	r3, .L380+48
 3926 020a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3927 020c 1946     		mov	r1, r3
 3928 020e 3A4A     		ldr	r2, .L380+56
 3929 0210 0B46     		mov	r3, r1
 3930 0212 DB00     		lsls	r3, r3, #3
 3931 0214 5B1A     		subs	r3, r3, r1
 3932 0216 1B01     		lsls	r3, r3, #4
 3933 0218 1344     		add	r3, r3, r2
 3934 021a 03F58773 		add	r3, r3, #270
 3935 021e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1233:..\src/interruptions.c ****                     (c_mem.motor[idx].input_mode == INPUT_MODE_EMG_FCFS) ||
 3936              		.loc 1 1233 0
 3937 0220 052B     		cmp	r3, #5
 3938 0222 0DD0     		beq	.L248
1235:..\src/interruptions.c ****                     (c_mem.motor[idx].input_mode == INPUT_MODE_EMG_PROPORTIONAL_NC)) {
 3939              		.loc 1 1235 0
 3940 0224 324B     		ldr	r3, .L380+48
 3941 0226 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3942 0228 1946     		mov	r1, r3
 3943 022a 334A     		ldr	r2, .L380+56
 3944 022c 0B46     		mov	r3, r1
 3945 022e DB00     		lsls	r3, r3, #3
 3946 0230 5B1A     		subs	r3, r3, r1
 3947 0232 1B01     		lsls	r3, r3, #4
 3948 0234 1344     		add	r3, r3, r2
 3949 0236 03F58773 		add	r3, r3, #270
 3950 023a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1234:..\src/interruptions.c ****                     (c_mem.motor[idx].input_mode == INPUT_MODE_EMG_FCFS_ADV) ||
 3951              		.loc 1 1234 0
 3952 023c 072B     		cmp	r3, #7
 3953 023e 13D1     		bne	.L247
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 94


 3954              	.L248:
1236:..\src/interruptions.c ****                     g_ref[idx].onoff = 0x00;
 3955              		.loc 1 1236 0
 3956 0240 2B4B     		ldr	r3, .L380+48
 3957 0242 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3958 0244 2D4A     		ldr	r2, .L380+60
 3959 0246 1B01     		lsls	r3, r3, #4
 3960 0248 1344     		add	r3, r3, r2
 3961 024a 0C33     		adds	r3, r3, #12
 3962 024c 0022     		movs	r2, #0
 3963 024e 1A70     		strb	r2, [r3]
1237:..\src/interruptions.c ****                     enable_motor(idx, g_ref[idx].onoff); 
 3964              		.loc 1 1237 0
 3965 0250 274B     		ldr	r3, .L380+48
 3966 0252 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 3967 0254 264B     		ldr	r3, .L380+48
 3968 0256 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3969 0258 284A     		ldr	r2, .L380+60
 3970 025a 1B01     		lsls	r3, r3, #4
 3971 025c 1344     		add	r3, r3, r2
 3972 025e 0C33     		adds	r3, r3, #12
 3973 0260 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3974 0262 1946     		mov	r1, r3
 3975 0264 FFF7FEFF 		bl	enable_motor
 3976              	.L247:
1238:..\src/interruptions.c ****                     
1239:..\src/interruptions.c ****                 }
1240:..\src/interruptions.c ****             }
1241:..\src/interruptions.c **** 
1242:..\src/interruptions.c ****             // Assign dev_tension and reset current
1243:..\src/interruptions.c ****             dev_tension[idx] = 5000;
 3977              		.loc 1 1243 0 discriminator 2
 3978 0268 214B     		ldr	r3, .L380+48
 3979 026a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3980 026c 1946     		mov	r1, r3
 3981 026e 164B     		ldr	r3, .L380+8
 3982 0270 41F28832 		movw	r2, #5000
 3983 0274 43F82120 		str	r2, [r3, r1, lsl #2]
1244:..\src/interruptions.c ****             g_meas[g_mem.motor[idx].encoder_line].curr = 0;
 3984              		.loc 1 1244 0 discriminator 2
 3985 0278 1D4B     		ldr	r3, .L380+48
 3986 027a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3987 027c 1946     		mov	r1, r3
 3988 027e 114A     		ldr	r2, .L380+4
 3989 0280 0B46     		mov	r3, r1
 3990 0282 DB00     		lsls	r3, r3, #3
 3991 0284 5B1A     		subs	r3, r3, r1
 3992 0286 1B01     		lsls	r3, r3, #4
 3993 0288 1344     		add	r3, r3, r2
 3994 028a 03F58873 		add	r3, r3, #272
 3995 028e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3996 0290 1946     		mov	r1, r3
 3997 0292 1B4A     		ldr	r2, .L380+64
 3998 0294 3423     		movs	r3, #52
 3999 0296 03FB01F3 		mul	r3, r3, r1
 4000 029a 1344     		add	r3, r3, r2
 4001 029c 0C33     		adds	r3, r3, #12
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 95


 4002 029e 0022     		movs	r2, #0
 4003 02a0 1A60     		str	r2, [r3]
1229:..\src/interruptions.c ****             if (c_mem.emg.emg_calibration_flag) {
 4004              		.loc 1 1229 0 discriminator 2
 4005 02a2 134B     		ldr	r3, .L380+48
 4006 02a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4007 02a6 0133     		adds	r3, r3, #1
 4008 02a8 DAB2     		uxtb	r2, r3
 4009 02aa 114B     		ldr	r3, .L380+48
 4010 02ac 1A70     		strb	r2, [r3]
 4011              	.L246:
1229:..\src/interruptions.c ****             if (c_mem.emg.emg_calibration_flag) {
 4012              		.loc 1 1229 0 is_stmt 0 discriminator 1
 4013 02ae 104B     		ldr	r3, .L380+48
 4014 02b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4015 02b2 012B     		cmp	r3, #1
 4016 02b4 7FF679AF 		bls	.L249
1245:..\src/interruptions.c ****         }
1246:..\src/interruptions.c ****         
1247:..\src/interruptions.c ****         // Reset emg
1248:..\src/interruptions.c ****         for (idx = 0; idx < NUM_OF_INPUT_EMGS; idx++){
 4017              		.loc 1 1248 0 is_stmt 1
 4018 02b8 0D4B     		ldr	r3, .L380+48
 4019 02ba 0022     		movs	r2, #0
 4020 02bc 1A70     		strb	r2, [r3]
 4021 02be 2EE0     		b	.L250
 4022              	.L381:
 4023              		.align	2
 4024              	.L380:
 4025 02c0 00000000 		.word	interrupt_flag
 4026 02c4 00000000 		.word	g_mem
 4027 02c8 00000000 		.word	dev_tension
 4028 02cc 00000000 		.word	ADC_buf
 4029 02d0 00000000 		.word	NUM_OF_ANALOG_INPUTS
 4030 02d4 F1197605 		.word	91625969
 4031 02d8 00000000 		.word	filt_detect_pc
 4032 02dc 00000000 		.word	detect_power_cycle
 4033 02e0 08000000 		.word	detect_power_cycle_prev.10581
 4034 02e4 0C000000 		.word	first_tension_valid.10580
 4035 02e8 00000000 		.word	tension_valid
 4036 02ec 20010000 		.word	count.10582
 4037 02f0 22010000 		.word	idx.10584
 4038 02f4 00000000 		.word	pow_tension
 4039 02f8 00000000 		.word	c_mem
 4040 02fc 00000000 		.word	g_ref
 4041 0300 00000000 		.word	g_meas
 4042              	.L251:
1249:..\src/interruptions.c ****             g_adc_meas.emg[idx] = 0;
 4043              		.loc 1 1249 0 discriminator 3
 4044 0304 384B     		ldr	r3, .L382
 4045 0306 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4046 0308 1946     		mov	r1, r3
 4047 030a 384B     		ldr	r3, .L382+4
 4048 030c 0022     		movs	r2, #0
 4049 030e 43F82120 		str	r2, [r3, r1, lsl #2]
1248:..\src/interruptions.c ****             g_adc_meas.emg[idx] = 0;
 4050              		.loc 1 1248 0 discriminator 3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 96


 4051 0312 354B     		ldr	r3, .L382
 4052 0314 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4053 0316 0133     		adds	r3, r3, #1
 4054 0318 DAB2     		uxtb	r2, r3
 4055 031a 334B     		ldr	r3, .L382
 4056 031c 1A70     		strb	r2, [r3]
 4057              	.L250:
1248:..\src/interruptions.c ****             g_adc_meas.emg[idx] = 0;
 4058              		.loc 1 1248 0 is_stmt 0 discriminator 1
 4059 031e 324B     		ldr	r3, .L382
 4060 0320 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4061 0322 012B     		cmp	r3, #1
 4062 0324 EED9     		bls	.L251
1250:..\src/interruptions.c ****         }
1251:..\src/interruptions.c ****         for (idx = 0; c_mem.exp.read_ADC_sensors_port_flag && idx < NUM_OF_ADDITIONAL_EMGS; idx++){
 4063              		.loc 1 1251 0 is_stmt 1
 4064 0326 304B     		ldr	r3, .L382
 4065 0328 0022     		movs	r2, #0
 4066 032a 1A70     		strb	r2, [r3]
 4067 032c 0CE0     		b	.L252
 4068              	.L254:
1252:..\src/interruptions.c ****             g_adc_meas.add_emg[idx] = 0;
 4069              		.loc 1 1252 0 discriminator 4
 4070 032e 2E4B     		ldr	r3, .L382
 4071 0330 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4072 0332 2E4A     		ldr	r2, .L382+4
 4073 0334 0233     		adds	r3, r3, #2
 4074 0336 0021     		movs	r1, #0
 4075 0338 42F82310 		str	r1, [r2, r3, lsl #2]
1251:..\src/interruptions.c ****             g_adc_meas.add_emg[idx] = 0;
 4076              		.loc 1 1251 0 discriminator 4
 4077 033c 2A4B     		ldr	r3, .L382
 4078 033e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4079 0340 0133     		adds	r3, r3, #1
 4080 0342 DAB2     		uxtb	r2, r3
 4081 0344 284B     		ldr	r3, .L382
 4082 0346 1A70     		strb	r2, [r3]
 4083              	.L252:
1251:..\src/interruptions.c ****             g_adc_meas.add_emg[idx] = 0;
 4084              		.loc 1 1251 0 is_stmt 0 discriminator 1
 4085 0348 294B     		ldr	r3, .L382+8
 4086 034a 93F82732 		ldrb	r3, [r3, #551]	@ zero_extendqisi2
 4087 034e 002B     		cmp	r3, #0
 4088 0350 00F08781 		beq	.L362
1251:..\src/interruptions.c ****             g_adc_meas.add_emg[idx] = 0;
 4089              		.loc 1 1251 0 discriminator 3
 4090 0354 244B     		ldr	r3, .L382
 4091 0356 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4092 0358 052B     		cmp	r3, #5
 4093 035a E8D9     		bls	.L254
1219:..\src/interruptions.c ****         // PSoC is powered through uUSB
 4094              		.loc 1 1219 0 is_stmt 1
 4095 035c 81E1     		b	.L362
 4096              	.L243:
1253:..\src/interruptions.c ****         }
1254:..\src/interruptions.c ****         
1255:..\src/interruptions.c ****     }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 97


1256:..\src/interruptions.c ****     else {
1257:..\src/interruptions.c ****         // PSoC is powered through battery or power source
1258:..\src/interruptions.c ****         // (at least > 6.88 V (86% of 8 V) that is minimum charge of smallest battery (2 cells @ 20
1259:..\src/interruptions.c ****         
1260:..\src/interruptions.c ****         // Read ADC sampled value of power source tension and motor current
1261:..\src/interruptions.c ****         
1262:..\src/interruptions.c ****         if (v_count == 1000 && !tension_valid){     // Voltage reading (Step 1)
 4097              		.loc 1 1262 0
 4098 035e 254B     		ldr	r3, .L382+12
 4099 0360 1B68     		ldr	r3, [r3]
 4100 0362 B3F57A7F 		cmp	r3, #1000
 4101 0366 0DD1     		bne	.L256
 4102              		.loc 1 1262 0 is_stmt 0 discriminator 1
 4103 0368 234B     		ldr	r3, .L382+16
 4104 036a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4105 036c 002B     		cmp	r3, #0
 4106 036e 09D1     		bne	.L256
1263:..\src/interruptions.c ****             // After 1000 v_count cycles, dev_tension_f is stable
1264:..\src/interruptions.c ****             tension_valid = TRUE;   
 4107              		.loc 1 1264 0 is_stmt 1
 4108 0370 214B     		ldr	r3, .L382+16
 4109 0372 0122     		movs	r2, #1
 4110 0374 1A70     		strb	r2, [r3]
1265:..\src/interruptions.c ****             count = 0;
 4111              		.loc 1 1265 0
 4112 0376 214B     		ldr	r3, .L382+20
 4113 0378 0022     		movs	r2, #0
 4114 037a 1A80     		strh	r2, [r3]	@ movhi
1266:..\src/interruptions.c ****             v_count = 0;            
 4115              		.loc 1 1266 0
 4116 037c 1D4B     		ldr	r3, .L382+12
 4117 037e 0022     		movs	r2, #0
 4118 0380 1A60     		str	r2, [r3]
 4119 0382 2CE0     		b	.L257
 4120              	.L256:
1267:..\src/interruptions.c ****         }
1268:..\src/interruptions.c ****         else {  
1269:..\src/interruptions.c ****             // wait for battery voltage stabilization
1270:..\src/interruptions.c ****             if (v_count < 1000) {
 4121              		.loc 1 1270 0
 4122 0384 1B4B     		ldr	r3, .L382+12
 4123 0386 1B68     		ldr	r3, [r3]
 4124 0388 B3F57A7F 		cmp	r3, #1000
 4125 038c 04D2     		bcs	.L258
1271:..\src/interruptions.c ****                 v_count = v_count + 1;
 4126              		.loc 1 1271 0
 4127 038e 194B     		ldr	r3, .L382+12
 4128 0390 1B68     		ldr	r3, [r3]
 4129 0392 0133     		adds	r3, r3, #1
 4130 0394 174A     		ldr	r2, .L382+12
 4131 0396 1360     		str	r3, [r2]
 4132              	.L258:
1272:..\src/interruptions.c ****             }
1273:..\src/interruptions.c ****             for(idx = 0; idx < NUM_OF_MOTORS; idx++) {
 4133              		.loc 1 1273 0
 4134 0398 134B     		ldr	r3, .L382
 4135 039a 0022     		movs	r2, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 98


 4136 039c 1A70     		strb	r2, [r3]
 4137 039e 1AE0     		b	.L259
 4138              	.L260:
1274:..\src/interruptions.c ****                 dev_tension_f[idx] = filter(dev_tension[idx], &filt_v[idx]);
 4139              		.loc 1 1274 0 discriminator 3
 4140 03a0 114B     		ldr	r3, .L382
 4141 03a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4142 03a4 1C46     		mov	r4, r3
 4143 03a6 104B     		ldr	r3, .L382
 4144 03a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4145 03aa 1A46     		mov	r2, r3
 4146 03ac 144B     		ldr	r3, .L382+24
 4147 03ae 53F82200 		ldr	r0, [r3, r2, lsl #2]
 4148 03b2 0D4B     		ldr	r3, .L382
 4149 03b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4150 03b6 DB00     		lsls	r3, r3, #3
 4151 03b8 124A     		ldr	r2, .L382+28
 4152 03ba 1344     		add	r3, r3, r2
 4153 03bc 1946     		mov	r1, r3
 4154 03be FFF7FEFF 		bl	filter
 4155 03c2 0246     		mov	r2, r0
 4156 03c4 104B     		ldr	r3, .L382+32
 4157 03c6 43F82420 		str	r2, [r3, r4, lsl #2]
1273:..\src/interruptions.c ****                 dev_tension_f[idx] = filter(dev_tension[idx], &filt_v[idx]);
 4158              		.loc 1 1273 0 discriminator 3
 4159 03ca 074B     		ldr	r3, .L382
 4160 03cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4161 03ce 0133     		adds	r3, r3, #1
 4162 03d0 DAB2     		uxtb	r2, r3
 4163 03d2 054B     		ldr	r3, .L382
 4164 03d4 1A70     		strb	r2, [r3]
 4165              	.L259:
1273:..\src/interruptions.c ****                 dev_tension_f[idx] = filter(dev_tension[idx], &filt_v[idx]);
 4166              		.loc 1 1273 0 is_stmt 0 discriminator 1
 4167 03d6 044B     		ldr	r3, .L382
 4168 03d8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4169 03da 012B     		cmp	r3, #1
 4170 03dc E0D9     		bls	.L260
 4171              	.L257:
1275:..\src/interruptions.c ****             }
1276:..\src/interruptions.c ****         }
1277:..\src/interruptions.c **** 
1278:..\src/interruptions.c ****         for (idx = 0; idx < NUM_OF_MOTORS; idx++){
 4172              		.loc 1 1278 0 is_stmt 1
 4173 03de 024B     		ldr	r3, .L382
 4174 03e0 0022     		movs	r2, #0
 4175 03e2 1A70     		strb	r2, [r3]
 4176 03e4 18E0     		b	.L261
 4177              	.L383:
 4178 03e6 00BF     		.align	2
 4179              	.L382:
 4180 03e8 22010000 		.word	idx.10584
 4181 03ec 00000000 		.word	g_adc_meas
 4182 03f0 00000000 		.word	c_mem
 4183 03f4 24010000 		.word	v_count.10583
 4184 03f8 00000000 		.word	tension_valid
 4185 03fc 20010000 		.word	count.10582
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 99


 4186 0400 00000000 		.word	dev_tension
 4187 0404 00000000 		.word	filt_v
 4188 0408 00000000 		.word	dev_tension_f
 4189              	.L262:
 4190              		.loc 1 1278 0 is_stmt 0 discriminator 3
 4191 040c B04B     		ldr	r3, .L384
 4192 040e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4193 0410 0133     		adds	r3, r3, #1
 4194 0412 DAB2     		uxtb	r2, r3
 4195 0414 AE4B     		ldr	r3, .L384
 4196 0416 1A70     		strb	r2, [r3]
 4197              	.L261:
 4198              		.loc 1 1278 0 discriminator 1
 4199 0418 AD4B     		ldr	r3, .L384
 4200 041a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4201 041c 012B     		cmp	r3, #1
 4202 041e F5D9     		bls	.L262
1279:..\src/interruptions.c ****       //      if(g_mem.motor[idx].activate_pwm_rescaling)        //pwm rescaling is activated
1280:..\src/interruptions.c ****       //          pwm_limit_search(idx);                 //only for 12V motor
1281:..\src/interruptions.c ****         }
1282:..\src/interruptions.c ****         
1283:..\src/interruptions.c ****         // Filter and Set currents
1284:..\src/interruptions.c ****         g_meas[g_mem.motor[0].encoder_line].curr = filter((int16) (((int32)(ADC_buf[1] - 1648) * 22
 4203              		.loc 1 1284 0 is_stmt 1
 4204 0420 AC4B     		ldr	r3, .L384+4
 4205 0422 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 4206 0426 1C46     		mov	r4, r3
 4207 0428 AB4B     		ldr	r3, .L384+8
 4208 042a B3F90230 		ldrsh	r3, [r3, #2]
 4209 042e A3F5CE63 		sub	r3, r3, #1648
 4210 0432 45F66A02 		movw	r2, #22634
 4211 0436 02FB03F3 		mul	r3, r2, r3
 4212 043a 5B13     		asrs	r3, r3, #13
 4213 043c 1BB2     		sxth	r3, r3
 4214 043e 1A46     		mov	r2, r3
 4215 0440 A64B     		ldr	r3, .L384+12
 4216 0442 93F90030 		ldrsb	r3, [r3]
 4217 0446 03FB02F3 		mul	r3, r3, r2
 4218 044a A549     		ldr	r1, .L384+16
 4219 044c 1846     		mov	r0, r3
 4220 044e FFF7FEFF 		bl	filter
 4221 0452 0146     		mov	r1, r0
 4222 0454 A34A     		ldr	r2, .L384+20
 4223 0456 3423     		movs	r3, #52
 4224 0458 03FB04F3 		mul	r3, r3, r4
 4225 045c 1344     		add	r3, r3, r2
 4226 045e 0C33     		adds	r3, r3, #12
 4227 0460 1960     		str	r1, [r3]
1285:..\src/interruptions.c ****         
1286:..\src/interruptions.c **** 
1287:..\src/interruptions.c ****         // Calculate current estimation and put it in the second part of the current measurement ar
1288:..\src/interruptions.c **** 		g_meas[g_mem.motor[0].encoder_line].estim_curr = (int16) filter(((int32) g_meas[g_mem.motor[0].en
 4228              		.loc 1 1288 0
 4229 0462 9C4B     		ldr	r3, .L384+4
 4230 0464 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 4231 0468 1D46     		mov	r5, r3
 4232 046a 9A4B     		ldr	r3, .L384+4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 100


 4233 046c 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 4234 0470 1946     		mov	r1, r3
 4235 0472 9C4A     		ldr	r2, .L384+20
 4236 0474 3423     		movs	r3, #52
 4237 0476 03FB01F3 		mul	r3, r3, r1
 4238 047a 1344     		add	r3, r3, r2
 4239 047c 0C33     		adds	r3, r3, #12
 4240 047e 1C68     		ldr	r4, [r3]
 4241 0480 944B     		ldr	r3, .L384+4
 4242 0482 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 4243 0486 1946     		mov	r1, r3
 4244 0488 964A     		ldr	r2, .L384+20
 4245 048a 3423     		movs	r3, #52
 4246 048c 03FB01F3 		mul	r3, r3, r1
 4247 0490 1344     		add	r3, r3, r2
 4248 0492 1A68     		ldr	r2, [r3]
 4249 0494 8F4B     		ldr	r3, .L384+4
 4250 0496 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 4251 049a 1846     		mov	r0, r3
 4252 049c 8D49     		ldr	r1, .L384+4
 4253 049e 0346     		mov	r3, r0
 4254 04a0 5B00     		lsls	r3, r3, #1
 4255 04a2 0344     		add	r3, r3, r0
 4256 04a4 1B01     		lsls	r3, r3, #4
 4257 04a6 0B44     		add	r3, r3, r1
 4258 04a8 03F29513 		addw	r3, r3, #405
 4259 04ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4260 04ae 42FA03F6 		asr	r6, r2, r3
 4261 04b2 884B     		ldr	r3, .L384+4
 4262 04b4 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 4263 04b8 1946     		mov	r1, r3
 4264 04ba 8A4A     		ldr	r2, .L384+20
 4265 04bc 3423     		movs	r3, #52
 4266 04be 03FB01F3 		mul	r3, r3, r1
 4267 04c2 1344     		add	r3, r3, r2
 4268 04c4 1C33     		adds	r3, r3, #28
 4269 04c6 1A68     		ldr	r2, [r3]
 4270 04c8 824B     		ldr	r3, .L384+4
 4271 04ca 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 4272 04ce 1846     		mov	r0, r3
 4273 04d0 8049     		ldr	r1, .L384+4
 4274 04d2 0346     		mov	r3, r0
 4275 04d4 5B00     		lsls	r3, r3, #1
 4276 04d6 0344     		add	r3, r3, r0
 4277 04d8 1B01     		lsls	r3, r3, #4
 4278 04da 0B44     		add	r3, r3, r1
 4279 04dc 03F29513 		addw	r3, r3, #405
 4280 04e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4281 04e2 42FA03FE 		asr	lr, r2, r3
 4282 04e6 804B     		ldr	r3, .L384+24
 4283 04e8 1A68     		ldr	r2, [r3]
 4284 04ea 7A4B     		ldr	r3, .L384+4
 4285 04ec 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 4286 04f0 1846     		mov	r0, r3
 4287 04f2 7849     		ldr	r1, .L384+4
 4288 04f4 0346     		mov	r3, r0
 4289 04f6 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 101


 4290 04f8 0344     		add	r3, r3, r0
 4291 04fa 1B01     		lsls	r3, r3, #4
 4292 04fc 0B44     		add	r3, r3, r1
 4293 04fe 03F29513 		addw	r3, r3, #405
 4294 0502 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4295 0504 42FA03F3 		asr	r3, r2, r3
 4296 0508 7246     		mov	r2, lr
 4297 050a 3146     		mov	r1, r6
 4298 050c 0020     		movs	r0, #0
 4299 050e FFF7FEFF 		bl	curr_estim
 4300 0512 0346     		mov	r3, r0
 4301 0514 E31A     		subs	r3, r4, r3
 4302 0516 7549     		ldr	r1, .L384+28
 4303 0518 1846     		mov	r0, r3
 4304 051a FFF7FEFF 		bl	filter
 4305 051e 0346     		mov	r3, r0
 4306 0520 1BB2     		sxth	r3, r3
 4307 0522 1946     		mov	r1, r3
 4308 0524 6F4A     		ldr	r2, .L384+20
 4309 0526 3423     		movs	r3, #52
 4310 0528 03FB05F3 		mul	r3, r3, r5
 4311 052c 1344     		add	r3, r3, r2
 4312 052e 1033     		adds	r3, r3, #16
 4313 0530 1960     		str	r1, [r3]
1289:..\src/interruptions.c ****         
1290:..\src/interruptions.c ****         // Read also 2nd power current (if necessary)
1291:..\src/interruptions.c ****         if (NUM_OF_ANALOG_INPUTS > 4) {
 4314              		.loc 1 1291 0
 4315 0532 6F4B     		ldr	r3, .L384+32
 4316 0534 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4317 0536 042B     		cmp	r3, #4
 4318 0538 40F28980 		bls	.L263
1292:..\src/interruptions.c ****             // Filter and Set currents
1293:..\src/interruptions.c ****             g_meas[g_mem.motor[1].encoder_line].curr = filter((int16) (((int32)(ADC_buf[5] - 1648) 
 4319              		.loc 1 1293 0
 4320 053c 654B     		ldr	r3, .L384+4
 4321 053e 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 4322 0542 1C46     		mov	r4, r3
 4323 0544 644B     		ldr	r3, .L384+8
 4324 0546 B3F90A30 		ldrsh	r3, [r3, #10]
 4325 054a A3F5CE63 		sub	r3, r3, #1648
 4326 054e 45F66A02 		movw	r2, #22634
 4327 0552 02FB03F3 		mul	r3, r2, r3
 4328 0556 5B13     		asrs	r3, r3, #13
 4329 0558 1BB2     		sxth	r3, r3
 4330 055a 1A46     		mov	r2, r3
 4331 055c 5F4B     		ldr	r3, .L384+12
 4332 055e 93F90130 		ldrsb	r3, [r3, #1]
 4333 0562 03FB02F3 		mul	r3, r3, r2
 4334 0566 6349     		ldr	r1, .L384+36
 4335 0568 1846     		mov	r0, r3
 4336 056a FFF7FEFF 		bl	filter
 4337 056e 0146     		mov	r1, r0
 4338 0570 5C4A     		ldr	r2, .L384+20
 4339 0572 3423     		movs	r3, #52
 4340 0574 03FB04F3 		mul	r3, r3, r4
 4341 0578 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 102


 4342 057a 0C33     		adds	r3, r3, #12
 4343 057c 1960     		str	r1, [r3]
1294:..\src/interruptions.c ****             
1295:..\src/interruptions.c ****             g_meas[g_mem.motor[1].encoder_line].estim_curr = (int16) filter(((int32) g_meas[g_mem.m
 4344              		.loc 1 1295 0
 4345 057e 554B     		ldr	r3, .L384+4
 4346 0580 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 4347 0584 1D46     		mov	r5, r3
 4348 0586 534B     		ldr	r3, .L384+4
 4349 0588 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 4350 058c 1946     		mov	r1, r3
 4351 058e 554A     		ldr	r2, .L384+20
 4352 0590 3423     		movs	r3, #52
 4353 0592 03FB01F3 		mul	r3, r3, r1
 4354 0596 1344     		add	r3, r3, r2
 4355 0598 0C33     		adds	r3, r3, #12
 4356 059a 1C68     		ldr	r4, [r3]
 4357 059c 4D4B     		ldr	r3, .L384+4
 4358 059e 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 4359 05a2 1946     		mov	r1, r3
 4360 05a4 4F4A     		ldr	r2, .L384+20
 4361 05a6 3423     		movs	r3, #52
 4362 05a8 03FB01F3 		mul	r3, r3, r1
 4363 05ac 1344     		add	r3, r3, r2
 4364 05ae 1A68     		ldr	r2, [r3]
 4365 05b0 484B     		ldr	r3, .L384+4
 4366 05b2 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 4367 05b6 1846     		mov	r0, r3
 4368 05b8 4649     		ldr	r1, .L384+4
 4369 05ba 0346     		mov	r3, r0
 4370 05bc 5B00     		lsls	r3, r3, #1
 4371 05be 0344     		add	r3, r3, r0
 4372 05c0 1B01     		lsls	r3, r3, #4
 4373 05c2 0B44     		add	r3, r3, r1
 4374 05c4 03F29513 		addw	r3, r3, #405
 4375 05c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4376 05ca 42FA03F6 		asr	r6, r2, r3
 4377 05ce 414B     		ldr	r3, .L384+4
 4378 05d0 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 4379 05d4 1946     		mov	r1, r3
 4380 05d6 434A     		ldr	r2, .L384+20
 4381 05d8 3423     		movs	r3, #52
 4382 05da 03FB01F3 		mul	r3, r3, r1
 4383 05de 1344     		add	r3, r3, r2
 4384 05e0 1C33     		adds	r3, r3, #28
 4385 05e2 1A68     		ldr	r2, [r3]
 4386 05e4 3B4B     		ldr	r3, .L384+4
 4387 05e6 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 4388 05ea 1846     		mov	r0, r3
 4389 05ec 3949     		ldr	r1, .L384+4
 4390 05ee 0346     		mov	r3, r0
 4391 05f0 5B00     		lsls	r3, r3, #1
 4392 05f2 0344     		add	r3, r3, r0
 4393 05f4 1B01     		lsls	r3, r3, #4
 4394 05f6 0B44     		add	r3, r3, r1
 4395 05f8 03F29513 		addw	r3, r3, #405
 4396 05fc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 103


 4397 05fe 42FA03FE 		asr	lr, r2, r3
 4398 0602 394B     		ldr	r3, .L384+24
 4399 0604 1A69     		ldr	r2, [r3, #16]
 4400 0606 334B     		ldr	r3, .L384+4
 4401 0608 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 4402 060c 1846     		mov	r0, r3
 4403 060e 3149     		ldr	r1, .L384+4
 4404 0610 0346     		mov	r3, r0
 4405 0612 5B00     		lsls	r3, r3, #1
 4406 0614 0344     		add	r3, r3, r0
 4407 0616 1B01     		lsls	r3, r3, #4
 4408 0618 0B44     		add	r3, r3, r1
 4409 061a 03F29513 		addw	r3, r3, #405
 4410 061e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4411 0620 42FA03F3 		asr	r3, r2, r3
 4412 0624 7246     		mov	r2, lr
 4413 0626 3146     		mov	r1, r6
 4414 0628 0120     		movs	r0, #1
 4415 062a FFF7FEFF 		bl	curr_estim
 4416 062e 0346     		mov	r3, r0
 4417 0630 E31A     		subs	r3, r4, r3
 4418 0632 3149     		ldr	r1, .L384+40
 4419 0634 1846     		mov	r0, r3
 4420 0636 FFF7FEFF 		bl	filter
 4421 063a 0346     		mov	r3, r0
 4422 063c 1BB2     		sxth	r3, r3
 4423 063e 1946     		mov	r1, r3
 4424 0640 284A     		ldr	r2, .L384+20
 4425 0642 3423     		movs	r3, #52
 4426 0644 03FB05F3 		mul	r3, r3, r5
 4427 0648 1344     		add	r3, r3, r2
 4428 064a 1033     		adds	r3, r3, #16
 4429 064c 1960     		str	r1, [r3]
 4430              	.L263:
1296:..\src/interruptions.c ****         }
1297:..\src/interruptions.c ****     
1298:..\src/interruptions.c ****         // Check Interrupt 
1299:..\src/interruptions.c ****     
1300:..\src/interruptions.c ****         if (interrupt_flag){
 4431              		.loc 1 1300 0
 4432 064e 2B4B     		ldr	r3, .L384+44
 4433 0650 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4434 0652 002B     		cmp	r3, #0
 4435 0654 06D0     		beq	.L255
1301:..\src/interruptions.c ****             interrupt_flag = FALSE;
 4436              		.loc 1 1301 0
 4437 0656 294B     		ldr	r3, .L384+44
 4438 0658 0022     		movs	r2, #0
 4439 065a 1A70     		strb	r2, [r3]
1302:..\src/interruptions.c ****             interrupt_manager();
 4440              		.loc 1 1302 0
 4441 065c FFF7FEFF 		bl	interrupt_manager
 4442 0660 00E0     		b	.L255
 4443              	.L362:
1219:..\src/interruptions.c ****         // PSoC is powered through uUSB
 4444              		.loc 1 1219 0
 4445 0662 00BF     		nop
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 104


 4446              	.L255:
1303:..\src/interruptions.c ****         }
1304:..\src/interruptions.c **** 
1305:..\src/interruptions.c ****     }
1306:..\src/interruptions.c ****     
1307:..\src/interruptions.c ****     // Read EMG (always even if the board is not powered)
1308:..\src/interruptions.c ****         
1309:..\src/interruptions.c ****     // if calibration is not needed go to "normal execution"
1310:..\src/interruptions.c ****     if (!c_mem.emg.emg_calibration_flag){
 4447              		.loc 1 1310 0
 4448 0664 264B     		ldr	r3, .L384+48
 4449 0666 93F8FE31 		ldrb	r3, [r3, #510]	@ zero_extendqisi2
 4450 066a 002B     		cmp	r3, #0
 4451 066c 05D1     		bne	.L264
1311:..\src/interruptions.c ****         emg_1_status = NORMAL; // normal execution
 4452              		.loc 1 1311 0
 4453 066e 254B     		ldr	r3, .L384+52
 4454 0670 0022     		movs	r2, #0
 4455 0672 1A70     		strb	r2, [r3]
1312:..\src/interruptions.c ****         emg_2_status = NORMAL; // normal execution
 4456              		.loc 1 1312 0
 4457 0674 244B     		ldr	r3, .L384+56
 4458 0676 0022     		movs	r2, #0
 4459 0678 1A70     		strb	r2, [r3]
 4460              	.L264:
1313:..\src/interruptions.c ****     }
1314:..\src/interruptions.c **** 
1315:..\src/interruptions.c ****     // EMG 1 calibration state machine
1316:..\src/interruptions.c ****    
1317:..\src/interruptions.c ****     // Calibration state machine
1318:..\src/interruptions.c ****     switch(emg_1_status) {
 4461              		.loc 1 1318 0
 4462 067a 224B     		ldr	r3, .L384+52
 4463 067c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4464 067e 032B     		cmp	r3, #3
 4465 0680 00F20181 		bhi	.L363
 4466 0684 01A2     		adr	r2, .L267
 4467 0686 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4468 068a 00BF     		.p2align 2
 4469              	.L267:
 4470 068c 9D060000 		.word	.L266+1
 4471 0690 8B070000 		.word	.L268+1
 4472 0694 A1070000 		.word	.L269+1
 4473 0698 DD070000 		.word	.L270+1
 4474              		.p2align 1
 4475              	.L266:
1319:..\src/interruptions.c ****         case NORMAL: // normal execution
1320:..\src/interruptions.c ****             
1321:..\src/interruptions.c ****             if (g_mem.dev.dev_type != AIR_CHAMBERS_FB && g_mem.dev.dev_type != OTBK_ACT_WRIST_MS){
 4476              		.loc 1 1321 0
 4477 069c 0D4B     		ldr	r3, .L384+4
 4478 069e 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 4479 06a2 022B     		cmp	r3, #2
 4480 06a4 32D0     		beq	.L271
 4481              		.loc 1 1321 0 is_stmt 0 discriminator 1
 4482 06a6 0B4B     		ldr	r3, .L384+4
 4483 06a8 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 105


 4484 06ac 032B     		cmp	r3, #3
 4485 06ae 2DD0     		beq	.L271
1322:..\src/interruptions.c ****                 i_aux = ((int32)(ADC_buf[2 + c_mem.emg.switch_emg] - 1639) * 87) >> 5;  //map range
 4486              		.loc 1 1322 0 is_stmt 1
 4487 06b0 134B     		ldr	r3, .L384+48
 4488 06b2 93F8FF31 		ldrb	r3, [r3, #511]	@ zero_extendqisi2
 4489 06b6 0233     		adds	r3, r3, #2
 4490 06b8 074A     		ldr	r2, .L384+8
 4491 06ba 32F91330 		ldrsh	r3, [r2, r3, lsl #1]
 4492 06be A3F26763 		subw	r3, r3, #1639
 4493 06c2 5722     		movs	r2, #87
 4494 06c4 02FB03F3 		mul	r3, r2, r3
 4495 06c8 5B11     		asrs	r3, r3, #5
 4496 06ca 7B60     		str	r3, [r7, #4]
 4497 06cc 26E0     		b	.L272
 4498              	.L385:
 4499 06ce 00BF     		.align	2
 4500              	.L384:
 4501 06d0 22010000 		.word	idx.10584
 4502 06d4 00000000 		.word	g_mem
 4503 06d8 00000000 		.word	ADC_buf
 4504 06dc 00000000 		.word	pwm_sign
 4505 06e0 00000000 		.word	filt_i
 4506 06e4 00000000 		.word	g_meas
 4507 06e8 00000000 		.word	g_ref
 4508 06ec 00000000 		.word	filt_curr_diff
 4509 06f0 00000000 		.word	NUM_OF_ANALOG_INPUTS
 4510 06f4 08000000 		.word	filt_i+8
 4511 06f8 08000000 		.word	filt_curr_diff+8
 4512 06fc 00000000 		.word	interrupt_flag
 4513 0700 00000000 		.word	c_mem
 4514 0704 00000000 		.word	emg_1_status
 4515 0708 00000000 		.word	emg_2_status
 4516              	.L271:
1323:..\src/interruptions.c ****             }
1324:..\src/interruptions.c ****             else {  // Use additional ADC channels, so the signal does not pass through AVAGO isola
1325:..\src/interruptions.c ****                 i_aux = (int32)(ADC_buf[2 + c_mem.emg.switch_emg]);
 4517              		.loc 1 1325 0
 4518 070c A24B     		ldr	r3, .L386
 4519 070e 93F8FF31 		ldrb	r3, [r3, #511]	@ zero_extendqisi2
 4520 0712 0233     		adds	r3, r3, #2
 4521 0714 A14A     		ldr	r2, .L386+4
 4522 0716 32F91330 		ldrsh	r3, [r2, r3, lsl #1]
 4523 071a 7B60     		str	r3, [r7, #4]
 4524              	.L272:
1326:..\src/interruptions.c ****             }
1327:..\src/interruptions.c ****             
1328:..\src/interruptions.c ****             if (i_aux < 0) 
 4525              		.loc 1 1328 0
 4526 071c 7B68     		ldr	r3, [r7, #4]
 4527 071e 002B     		cmp	r3, #0
 4528 0720 01DA     		bge	.L273
1329:..\src/interruptions.c ****                 i_aux = 0;
 4529              		.loc 1 1329 0
 4530 0722 0023     		movs	r3, #0
 4531 0724 7B60     		str	r3, [r7, #4]
 4532              	.L273:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 106


1330:..\src/interruptions.c ****             i_aux = filter(i_aux, &filt_emg[0]);
 4533              		.loc 1 1330 0
 4534 0726 9E49     		ldr	r1, .L386+8
 4535 0728 7868     		ldr	r0, [r7, #4]
 4536 072a FFF7FEFF 		bl	filter
 4537 072e 7860     		str	r0, [r7, #4]
1331:..\src/interruptions.c ****             i_aux = (i_aux << 10) / g_mem.emg.emg_max_value[0];
 4538              		.loc 1 1331 0
 4539 0730 7B68     		ldr	r3, [r7, #4]
 4540 0732 9B02     		lsls	r3, r3, #10
 4541 0734 1A46     		mov	r2, r3
 4542 0736 9B4B     		ldr	r3, .L386+12
 4543 0738 D3F8F431 		ldr	r3, [r3, #500]
 4544 073c B2FBF3F3 		udiv	r3, r2, r3
 4545 0740 7B60     		str	r3, [r7, #4]
1332:..\src/interruptions.c **** 
1333:..\src/interruptions.c ****             if (interrupt_flag){
 4546              		.loc 1 1333 0
 4547 0742 994B     		ldr	r3, .L386+16
 4548 0744 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4549 0746 002B     		cmp	r3, #0
 4550 0748 04D0     		beq	.L274
1334:..\src/interruptions.c ****                 interrupt_flag = FALSE;
 4551              		.loc 1 1334 0
 4552 074a 974B     		ldr	r3, .L386+16
 4553 074c 0022     		movs	r2, #0
 4554 074e 1A70     		strb	r2, [r3]
1335:..\src/interruptions.c ****                 interrupt_manager();
 4555              		.loc 1 1335 0
 4556 0750 FFF7FEFF 		bl	interrupt_manager
 4557              	.L274:
1336:..\src/interruptions.c ****             }
1337:..\src/interruptions.c ****             //Saturation
1338:..\src/interruptions.c ****             if (i_aux < 0)
 4558              		.loc 1 1338 0
 4559 0754 7B68     		ldr	r3, [r7, #4]
 4560 0756 002B     		cmp	r3, #0
 4561 0758 02DA     		bge	.L275
1339:..\src/interruptions.c ****                 i_aux = 0;
 4562              		.loc 1 1339 0
 4563 075a 0023     		movs	r3, #0
 4564 075c 7B60     		str	r3, [r7, #4]
 4565 075e 06E0     		b	.L276
 4566              	.L275:
1340:..\src/interruptions.c ****             else 
1341:..\src/interruptions.c ****                 if (i_aux > 1024) 
 4567              		.loc 1 1341 0
 4568 0760 7B68     		ldr	r3, [r7, #4]
 4569 0762 B3F5806F 		cmp	r3, #1024
 4570 0766 02DD     		ble	.L276
1342:..\src/interruptions.c ****                     i_aux = 1024;
 4571              		.loc 1 1342 0
 4572 0768 4FF48063 		mov	r3, #1024
 4573 076c 7B60     		str	r3, [r7, #4]
 4574              	.L276:
1343:..\src/interruptions.c ****             
1344:..\src/interruptions.c ****             g_adc_meas.emg[0] = i_aux;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 107


 4575              		.loc 1 1344 0
 4576 076e 8F4A     		ldr	r2, .L386+20
 4577 0770 7B68     		ldr	r3, [r7, #4]
 4578 0772 1360     		str	r3, [r2]
1345:..\src/interruptions.c **** 
1346:..\src/interruptions.c ****             if (interrupt_flag){
 4579              		.loc 1 1346 0
 4580 0774 8C4B     		ldr	r3, .L386+16
 4581 0776 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4582 0778 002B     		cmp	r3, #0
 4583 077a 00F08680 		beq	.L364
1347:..\src/interruptions.c ****                 interrupt_flag = FALSE;
 4584              		.loc 1 1347 0
 4585 077e 8A4B     		ldr	r3, .L386+16
 4586 0780 0022     		movs	r2, #0
 4587 0782 1A70     		strb	r2, [r3]
1348:..\src/interruptions.c ****                 interrupt_manager();
 4588              		.loc 1 1348 0
 4589 0784 FFF7FEFF 		bl	interrupt_manager
1349:..\src/interruptions.c ****             }
1350:..\src/interruptions.c ****             
1351:..\src/interruptions.c ****             break;
 4590              		.loc 1 1351 0
 4591 0788 7FE0     		b	.L364
 4592              	.L268:
1352:..\src/interruptions.c **** 
1353:..\src/interruptions.c ****         case RESET: // reset variables
1354:..\src/interruptions.c ****             emg_counter_1 = 0;
 4593              		.loc 1 1354 0
 4594 078a 894B     		ldr	r3, .L386+24
 4595 078c 0022     		movs	r2, #0
 4596 078e 1A80     		strh	r2, [r3]	@ movhi
1355:..\src/interruptions.c ****             g_mem.emg.emg_max_value[0] = 0;
 4597              		.loc 1 1355 0
 4598 0790 844B     		ldr	r3, .L386+12
 4599 0792 0022     		movs	r2, #0
 4600 0794 C3F8F421 		str	r2, [r3, #500]
1356:..\src/interruptions.c ****             emg_1_status = DISCARD; // goto next status  
 4601              		.loc 1 1356 0
 4602 0798 864B     		ldr	r3, .L386+28
 4603 079a 0222     		movs	r2, #2
 4604 079c 1A70     		strb	r2, [r3]
1357:..\src/interruptions.c ****             break;
 4605              		.loc 1 1357 0
 4606 079e 79E0     		b	.L278
 4607              	.L269:
1358:..\src/interruptions.c **** 
1359:..\src/interruptions.c ****         case DISCARD: // discard first EMG_SAMPLE_TO_DISCARD samples
1360:..\src/interruptions.c ****             emg_counter_1++;
 4608              		.loc 1 1360 0
 4609 07a0 834B     		ldr	r3, .L386+24
 4610 07a2 1B88     		ldrh	r3, [r3]
 4611 07a4 0133     		adds	r3, r3, #1
 4612 07a6 9AB2     		uxth	r2, r3
 4613 07a8 814B     		ldr	r3, .L386+24
 4614 07aa 1A80     		strh	r2, [r3]	@ movhi
1361:..\src/interruptions.c ****             if (emg_counter_1 == EMG_SAMPLE_TO_DISCARD) {
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 108


 4615              		.loc 1 1361 0
 4616 07ac 804B     		ldr	r3, .L386+24
 4617 07ae 1B88     		ldrh	r3, [r3]
 4618 07b0 B3F5FA7F 		cmp	r3, #500
 4619 07b4 6BD1     		bne	.L365
1362:..\src/interruptions.c ****                 emg_counter_1 = 0;          // reset counter
 4620              		.loc 1 1362 0
 4621 07b6 7E4B     		ldr	r3, .L386+24
 4622 07b8 0022     		movs	r2, #0
 4623 07ba 1A80     		strh	r2, [r3]	@ movhi
1363:..\src/interruptions.c ****                 LED_control(1);
 4624              		.loc 1 1363 0
 4625 07bc 0120     		movs	r0, #1
 4626 07be FFF7FEFF 		bl	LED_control
1364:..\src/interruptions.c **** 				
1365:..\src/interruptions.c ****                 if (interrupt_flag){
 4627              		.loc 1 1365 0
 4628 07c2 794B     		ldr	r3, .L386+16
 4629 07c4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4630 07c6 002B     		cmp	r3, #0
 4631 07c8 04D0     		beq	.L280
1366:..\src/interruptions.c ****                     interrupt_flag = FALSE;
 4632              		.loc 1 1366 0
 4633 07ca 774B     		ldr	r3, .L386+16
 4634 07cc 0022     		movs	r2, #0
 4635 07ce 1A70     		strb	r2, [r3]
1367:..\src/interruptions.c ****                     interrupt_manager();
 4636              		.loc 1 1367 0
 4637 07d0 FFF7FEFF 		bl	interrupt_manager
 4638              	.L280:
1368:..\src/interruptions.c ****                 }
1369:..\src/interruptions.c ****                 
1370:..\src/interruptions.c ****                 emg_1_status = SUM_AND_MEAN;    // sum and mean status
 4639              		.loc 1 1370 0
 4640 07d4 774B     		ldr	r3, .L386+28
 4641 07d6 0322     		movs	r2, #3
 4642 07d8 1A70     		strb	r2, [r3]
1371:..\src/interruptions.c ****             }
1372:..\src/interruptions.c ****             break;
 4643              		.loc 1 1372 0
 4644 07da 58E0     		b	.L365
 4645              	.L270:
1373:..\src/interruptions.c **** 
1374:..\src/interruptions.c ****         case SUM_AND_MEAN: // sum first SAMPLES_FOR_EMG_MEAN samples
1375:..\src/interruptions.c ****             // NOTE max(value)*SAMPLES_FOR_EMG_MEAN must fit in 32bit
1376:..\src/interruptions.c ****             emg_counter_1++;
 4646              		.loc 1 1376 0
 4647 07dc 744B     		ldr	r3, .L386+24
 4648 07de 1B88     		ldrh	r3, [r3]
 4649 07e0 0133     		adds	r3, r3, #1
 4650 07e2 9AB2     		uxth	r2, r3
 4651 07e4 724B     		ldr	r3, .L386+24
 4652 07e6 1A80     		strh	r2, [r3]	@ movhi
1377:..\src/interruptions.c ****             if (ADC_buf[2 + c_mem.emg.switch_emg] < 0) 
 4653              		.loc 1 1377 0
 4654 07e8 6B4B     		ldr	r3, .L386
 4655 07ea 93F8FF31 		ldrb	r3, [r3, #511]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 109


 4656 07ee 0233     		adds	r3, r3, #2
 4657 07f0 6A4A     		ldr	r2, .L386+4
 4658 07f2 32F91330 		ldrsh	r3, [r2, r3, lsl #1]
 4659 07f6 002B     		cmp	r3, #0
 4660 07f8 07DA     		bge	.L281
1378:..\src/interruptions.c ****                 ADC_buf[2 + c_mem.emg.switch_emg] = 0;
 4661              		.loc 1 1378 0
 4662 07fa 674B     		ldr	r3, .L386
 4663 07fc 93F8FF31 		ldrb	r3, [r3, #511]	@ zero_extendqisi2
 4664 0800 0233     		adds	r3, r3, #2
 4665 0802 664A     		ldr	r2, .L386+4
 4666 0804 0021     		movs	r1, #0
 4667 0806 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 4668              	.L281:
1379:..\src/interruptions.c ****             g_mem.emg.emg_max_value[0] += filter((int32)ADC_buf[2 + c_mem.emg.switch_emg], &filt_em
 4669              		.loc 1 1379 0
 4670 080a 634B     		ldr	r3, .L386
 4671 080c 93F8FF31 		ldrb	r3, [r3, #511]	@ zero_extendqisi2
 4672 0810 0233     		adds	r3, r3, #2
 4673 0812 624A     		ldr	r2, .L386+4
 4674 0814 32F91330 		ldrsh	r3, [r2, r3, lsl #1]
 4675 0818 6149     		ldr	r1, .L386+8
 4676 081a 1846     		mov	r0, r3
 4677 081c FFF7FEFF 		bl	filter
 4678 0820 0246     		mov	r2, r0
 4679 0822 604B     		ldr	r3, .L386+12
 4680 0824 D3F8F431 		ldr	r3, [r3, #500]
 4681 0828 1344     		add	r3, r3, r2
 4682 082a 5E4A     		ldr	r2, .L386+12
 4683 082c C2F8F431 		str	r3, [r2, #500]
1380:..\src/interruptions.c ****             
1381:..\src/interruptions.c ****             if (interrupt_flag){
 4684              		.loc 1 1381 0
 4685 0830 5D4B     		ldr	r3, .L386+16
 4686 0832 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4687 0834 002B     		cmp	r3, #0
 4688 0836 04D0     		beq	.L282
1382:..\src/interruptions.c ****                 interrupt_flag = FALSE;
 4689              		.loc 1 1382 0
 4690 0838 5B4B     		ldr	r3, .L386+16
 4691 083a 0022     		movs	r2, #0
 4692 083c 1A70     		strb	r2, [r3]
1383:..\src/interruptions.c ****                 interrupt_manager();
 4693              		.loc 1 1383 0
 4694 083e FFF7FEFF 		bl	interrupt_manager
 4695              	.L282:
1384:..\src/interruptions.c ****             }
1385:..\src/interruptions.c ****             
1386:..\src/interruptions.c ****             if (emg_counter_1 == SAMPLES_FOR_EMG_MEAN) {
 4696              		.loc 1 1386 0
 4697 0842 5B4B     		ldr	r3, .L386+24
 4698 0844 1B88     		ldrh	r3, [r3]
 4699 0846 B3F57A7F 		cmp	r3, #1000
 4700 084a 22D1     		bne	.L366
1387:..\src/interruptions.c ****                 g_mem.emg.emg_max_value[0] = g_mem.emg.emg_max_value[0] / SAMPLES_FOR_EMG_MEAN; // 
 4701              		.loc 1 1387 0
 4702 084c 554B     		ldr	r3, .L386+12
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 110


 4703 084e D3F8F431 		ldr	r3, [r3, #500]
 4704 0852 594A     		ldr	r2, .L386+32
 4705 0854 A2FB0323 		umull	r2, r3, r2, r3
 4706 0858 9B09     		lsrs	r3, r3, #6
 4707 085a 524A     		ldr	r2, .L386+12
 4708 085c C2F8F431 		str	r3, [r2, #500]
1388:..\src/interruptions.c **** 
1389:..\src/interruptions.c ****                 if (interrupt_flag){
 4709              		.loc 1 1389 0
 4710 0860 514B     		ldr	r3, .L386+16
 4711 0862 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4712 0864 002B     		cmp	r3, #0
 4713 0866 04D0     		beq	.L284
1390:..\src/interruptions.c ****                     interrupt_flag = FALSE;
 4714              		.loc 1 1390 0
 4715 0868 4F4B     		ldr	r3, .L386+16
 4716 086a 0022     		movs	r2, #0
 4717 086c 1A70     		strb	r2, [r3]
1391:..\src/interruptions.c ****                     interrupt_manager();
 4718              		.loc 1 1391 0
 4719 086e FFF7FEFF 		bl	interrupt_manager
 4720              	.L284:
1392:..\src/interruptions.c ****                 }                    
1393:..\src/interruptions.c ****                 
1394:..\src/interruptions.c ****                 LED_control(0);
 4721              		.loc 1 1394 0
 4722 0872 0020     		movs	r0, #0
 4723 0874 FFF7FEFF 		bl	LED_control
1395:..\src/interruptions.c **** 				
1396:..\src/interruptions.c ****                 emg_counter_1 = 0;          // reset counter
 4724              		.loc 1 1396 0
 4725 0878 4D4B     		ldr	r3, .L386+24
 4726 087a 0022     		movs	r2, #0
 4727 087c 1A80     		strh	r2, [r3]	@ movhi
1397:..\src/interruptions.c **** 
1398:..\src/interruptions.c ****                 emg_1_status = NORMAL;      // goto normal execution
 4728              		.loc 1 1398 0
 4729 087e 4D4B     		ldr	r3, .L386+28
 4730 0880 0022     		movs	r2, #0
 4731 0882 1A70     		strb	r2, [r3]
1399:..\src/interruptions.c ****             }
1400:..\src/interruptions.c ****             break;
 4732              		.loc 1 1400 0
 4733 0884 05E0     		b	.L366
 4734              	.L363:
1401:..\src/interruptions.c **** 
1402:..\src/interruptions.c ****         default:
1403:..\src/interruptions.c ****             break;
 4735              		.loc 1 1403 0
 4736 0886 00BF     		nop
 4737 0888 04E0     		b	.L278
 4738              	.L364:
1351:..\src/interruptions.c **** 
 4739              		.loc 1 1351 0
 4740 088a 00BF     		nop
 4741 088c 02E0     		b	.L278
 4742              	.L365:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 111


1372:..\src/interruptions.c **** 
 4743              		.loc 1 1372 0
 4744 088e 00BF     		nop
 4745 0890 00E0     		b	.L278
 4746              	.L366:
1400:..\src/interruptions.c **** 
 4747              		.loc 1 1400 0
 4748 0892 00BF     		nop
 4749              	.L278:
1404:..\src/interruptions.c ****     }
1405:..\src/interruptions.c **** 
1406:..\src/interruptions.c ****     if (interrupt_flag){
 4750              		.loc 1 1406 0
 4751 0894 444B     		ldr	r3, .L386+16
 4752 0896 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4753 0898 002B     		cmp	r3, #0
 4754 089a 04D0     		beq	.L285
1407:..\src/interruptions.c ****         interrupt_flag = FALSE;
 4755              		.loc 1 1407 0
 4756 089c 424B     		ldr	r3, .L386+16
 4757 089e 0022     		movs	r2, #0
 4758 08a0 1A70     		strb	r2, [r3]
1408:..\src/interruptions.c ****         interrupt_manager();
 4759              		.loc 1 1408 0
 4760 08a2 FFF7FEFF 		bl	interrupt_manager
 4761              	.L285:
1409:..\src/interruptions.c ****     }
1410:..\src/interruptions.c ****     // EMG 2 calibration state machine
1411:..\src/interruptions.c ****     switch(emg_2_status) {
 4762              		.loc 1 1411 0
 4763 08a6 454B     		ldr	r3, .L386+36
 4764 08a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4765 08aa 052B     		cmp	r3, #5
 4766 08ac 00F2C981 		bhi	.L367
 4767 08b0 01A2     		adr	r2, .L288
 4768 08b2 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4769 08b6 00BF     		.p2align 2
 4770              	.L288:
 4771 08b8 D1080000 		.word	.L287+1
 4772 08bc 71090000 		.word	.L289+1
 4773 08c0 C9090000 		.word	.L290+1
 4774 08c4 070A0000 		.word	.L291+1
 4775 08c8 B90A0000 		.word	.L292+1
 4776 08cc CB0A0000 		.word	.L293+1
 4777              		.p2align 1
 4778              	.L287:
1412:..\src/interruptions.c ****         case NORMAL: // normal execution
1413:..\src/interruptions.c ****         
1414:..\src/interruptions.c ****             if (g_mem.dev.dev_type != AIR_CHAMBERS_FB && g_mem.dev.dev_type != OTBK_ACT_WRIST_MS){
 4779              		.loc 1 1414 0
 4780 08d0 344B     		ldr	r3, .L386+12
 4781 08d2 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 4782 08d6 022B     		cmp	r3, #2
 4783 08d8 14D0     		beq	.L294
 4784              		.loc 1 1414 0 is_stmt 0 discriminator 1
 4785 08da 324B     		ldr	r3, .L386+12
 4786 08dc 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 112


 4787 08e0 032B     		cmp	r3, #3
 4788 08e2 0FD0     		beq	.L294
1415:..\src/interruptions.c ****                 i_aux = ((int32)(ADC_buf[3 - c_mem.emg.switch_emg] - 1639) * 87) >> 5;  //map range
 4789              		.loc 1 1415 0 is_stmt 1
 4790 08e4 2C4B     		ldr	r3, .L386
 4791 08e6 93F8FF31 		ldrb	r3, [r3, #511]	@ zero_extendqisi2
 4792 08ea C3F10303 		rsb	r3, r3, #3
 4793 08ee 2B4A     		ldr	r2, .L386+4
 4794 08f0 32F91330 		ldrsh	r3, [r2, r3, lsl #1]
 4795 08f4 A3F26763 		subw	r3, r3, #1639
 4796 08f8 5722     		movs	r2, #87
 4797 08fa 02FB03F3 		mul	r3, r2, r3
 4798 08fe 5B11     		asrs	r3, r3, #5
 4799 0900 7B60     		str	r3, [r7, #4]
 4800 0902 08E0     		b	.L295
 4801              	.L294:
1416:..\src/interruptions.c ****             }
1417:..\src/interruptions.c ****             else {  // Use additional ADC channels, so the signal does not pass through AVAGO isola
1418:..\src/interruptions.c ****                 i_aux = (int32)(ADC_buf[3 - c_mem.emg.switch_emg]);
 4802              		.loc 1 1418 0
 4803 0904 244B     		ldr	r3, .L386
 4804 0906 93F8FF31 		ldrb	r3, [r3, #511]	@ zero_extendqisi2
 4805 090a C3F10303 		rsb	r3, r3, #3
 4806 090e 234A     		ldr	r2, .L386+4
 4807 0910 32F91330 		ldrsh	r3, [r2, r3, lsl #1]
 4808 0914 7B60     		str	r3, [r7, #4]
 4809              	.L295:
1419:..\src/interruptions.c ****             }
1420:..\src/interruptions.c **** 
1421:..\src/interruptions.c ****             if (i_aux < 0)
 4810              		.loc 1 1421 0
 4811 0916 7B68     		ldr	r3, [r7, #4]
 4812 0918 002B     		cmp	r3, #0
 4813 091a 01DA     		bge	.L296
1422:..\src/interruptions.c ****                 i_aux = 0;
 4814              		.loc 1 1422 0
 4815 091c 0023     		movs	r3, #0
 4816 091e 7B60     		str	r3, [r7, #4]
 4817              	.L296:
1423:..\src/interruptions.c ****             i_aux = filter(i_aux, &filt_emg[1]);
 4818              		.loc 1 1423 0
 4819 0920 2749     		ldr	r1, .L386+40
 4820 0922 7868     		ldr	r0, [r7, #4]
 4821 0924 FFF7FEFF 		bl	filter
 4822 0928 7860     		str	r0, [r7, #4]
1424:..\src/interruptions.c ****             i_aux = (i_aux << 10) / g_mem.emg.emg_max_value[1];
 4823              		.loc 1 1424 0
 4824 092a 7B68     		ldr	r3, [r7, #4]
 4825 092c 9B02     		lsls	r3, r3, #10
 4826 092e 1A46     		mov	r2, r3
 4827 0930 1C4B     		ldr	r3, .L386+12
 4828 0932 D3F8F831 		ldr	r3, [r3, #504]
 4829 0936 B2FBF3F3 		udiv	r3, r2, r3
 4830 093a 7B60     		str	r3, [r7, #4]
1425:..\src/interruptions.c **** 
1426:..\src/interruptions.c ****             if (interrupt_flag){
 4831              		.loc 1 1426 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 113


 4832 093c 1A4B     		ldr	r3, .L386+16
 4833 093e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4834 0940 002B     		cmp	r3, #0
 4835 0942 04D0     		beq	.L297
1427:..\src/interruptions.c ****                 interrupt_flag = FALSE;
 4836              		.loc 1 1427 0
 4837 0944 184B     		ldr	r3, .L386+16
 4838 0946 0022     		movs	r2, #0
 4839 0948 1A70     		strb	r2, [r3]
1428:..\src/interruptions.c ****                 interrupt_manager();
 4840              		.loc 1 1428 0
 4841 094a FFF7FEFF 		bl	interrupt_manager
 4842              	.L297:
1429:..\src/interruptions.c ****             }
1430:..\src/interruptions.c ****             
1431:..\src/interruptions.c ****             if (i_aux < 0) 
 4843              		.loc 1 1431 0
 4844 094e 7B68     		ldr	r3, [r7, #4]
 4845 0950 002B     		cmp	r3, #0
 4846 0952 02DA     		bge	.L298
1432:..\src/interruptions.c ****                 i_aux = 0;
 4847              		.loc 1 1432 0
 4848 0954 0023     		movs	r3, #0
 4849 0956 7B60     		str	r3, [r7, #4]
 4850 0958 06E0     		b	.L299
 4851              	.L298:
1433:..\src/interruptions.c ****             else 
1434:..\src/interruptions.c ****                 if (i_aux > 1024)
 4852              		.loc 1 1434 0
 4853 095a 7B68     		ldr	r3, [r7, #4]
 4854 095c B3F5806F 		cmp	r3, #1024
 4855 0960 02DD     		ble	.L299
1435:..\src/interruptions.c ****                     i_aux = 1024;
 4856              		.loc 1 1435 0
 4857 0962 4FF48063 		mov	r3, #1024
 4858 0966 7B60     		str	r3, [r7, #4]
 4859              	.L299:
1436:..\src/interruptions.c ****             
1437:..\src/interruptions.c ****             g_adc_meas.emg[1] = i_aux;
 4860              		.loc 1 1437 0
 4861 0968 104A     		ldr	r2, .L386+20
 4862 096a 7B68     		ldr	r3, [r7, #4]
 4863 096c 5360     		str	r3, [r2, #4]
1438:..\src/interruptions.c **** 
1439:..\src/interruptions.c ****             break;
 4864              		.loc 1 1439 0
 4865 096e 8AE1     		b	.L300
 4866              	.L289:
1440:..\src/interruptions.c **** 
1441:..\src/interruptions.c ****         case RESET: // reset variables
1442:..\src/interruptions.c ****             emg_counter_2 = 0;
 4867              		.loc 1 1442 0
 4868 0970 144B     		ldr	r3, .L386+44
 4869 0972 0022     		movs	r2, #0
 4870 0974 1A80     		strh	r2, [r3]	@ movhi
1443:..\src/interruptions.c ****             g_mem.emg.emg_max_value[1] = 0;
 4871              		.loc 1 1443 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 114


 4872 0976 0B4B     		ldr	r3, .L386+12
 4873 0978 0022     		movs	r2, #0
 4874 097a C3F8F821 		str	r2, [r3, #504]
1444:..\src/interruptions.c **** 
1445:..\src/interruptions.c ****             if (interrupt_flag){
 4875              		.loc 1 1445 0
 4876 097e 0A4B     		ldr	r3, .L386+16
 4877 0980 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4878 0982 002B     		cmp	r3, #0
 4879 0984 04D0     		beq	.L301
1446:..\src/interruptions.c ****                 interrupt_flag = FALSE;
 4880              		.loc 1 1446 0
 4881 0986 084B     		ldr	r3, .L386+16
 4882 0988 0022     		movs	r2, #0
 4883 098a 1A70     		strb	r2, [r3]
1447:..\src/interruptions.c ****                 interrupt_manager();
 4884              		.loc 1 1447 0
 4885 098c FFF7FEFF 		bl	interrupt_manager
 4886              	.L301:
1448:..\src/interruptions.c ****             }
1449:..\src/interruptions.c ****             
1450:..\src/interruptions.c ****             emg_2_status = WAIT; // wait for EMG 1 calibration
 4887              		.loc 1 1450 0
 4888 0990 0A4B     		ldr	r3, .L386+36
 4889 0992 0422     		movs	r2, #4
 4890 0994 1A70     		strb	r2, [r3]
1451:..\src/interruptions.c ****             break;
 4891              		.loc 1 1451 0
 4892 0996 76E1     		b	.L300
 4893              	.L387:
 4894              		.align	2
 4895              	.L386:
 4896 0998 00000000 		.word	c_mem
 4897 099c 00000000 		.word	ADC_buf
 4898 09a0 00000000 		.word	filt_emg
 4899 09a4 00000000 		.word	g_mem
 4900 09a8 00000000 		.word	interrupt_flag
 4901 09ac 00000000 		.word	g_adc_meas
 4902 09b0 28010000 		.word	emg_counter_1.10574
 4903 09b4 00000000 		.word	emg_1_status
 4904 09b8 D34D6210 		.word	274877907
 4905 09bc 00000000 		.word	emg_2_status
 4906 09c0 08000000 		.word	filt_emg+8
 4907 09c4 2A010000 		.word	emg_counter_2.10575
 4908              	.L290:
1452:..\src/interruptions.c **** 
1453:..\src/interruptions.c ****         case DISCARD: // discard first EMG_SAMPLE_TO_DISCARD samples
1454:..\src/interruptions.c ****             emg_counter_2++;
 4909              		.loc 1 1454 0
 4910 09c8 A24B     		ldr	r3, .L388
 4911 09ca 1B88     		ldrh	r3, [r3]
 4912 09cc 0133     		adds	r3, r3, #1
 4913 09ce 9AB2     		uxth	r2, r3
 4914 09d0 A04B     		ldr	r3, .L388
 4915 09d2 1A80     		strh	r2, [r3]	@ movhi
1455:..\src/interruptions.c ****             if (emg_counter_2 == EMG_SAMPLE_TO_DISCARD) {
 4916              		.loc 1 1455 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 115


 4917 09d4 9F4B     		ldr	r3, .L388
 4918 09d6 1B88     		ldrh	r3, [r3]
 4919 09d8 B3F5FA7F 		cmp	r3, #500
 4920 09dc 40F03381 		bne	.L368
1456:..\src/interruptions.c ****                 emg_counter_2 = 0;          // reset counter
 4921              		.loc 1 1456 0
 4922 09e0 9C4B     		ldr	r3, .L388
 4923 09e2 0022     		movs	r2, #0
 4924 09e4 1A80     		strh	r2, [r3]	@ movhi
1457:..\src/interruptions.c ****                 LED_control(1);
 4925              		.loc 1 1457 0
 4926 09e6 0120     		movs	r0, #1
 4927 09e8 FFF7FEFF 		bl	LED_control
1458:..\src/interruptions.c **** 
1459:..\src/interruptions.c ****                 if (interrupt_flag){
 4928              		.loc 1 1459 0
 4929 09ec 9A4B     		ldr	r3, .L388+4
 4930 09ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4931 09f0 002B     		cmp	r3, #0
 4932 09f2 04D0     		beq	.L303
1460:..\src/interruptions.c ****                     interrupt_flag = FALSE;
 4933              		.loc 1 1460 0
 4934 09f4 984B     		ldr	r3, .L388+4
 4935 09f6 0022     		movs	r2, #0
 4936 09f8 1A70     		strb	r2, [r3]
1461:..\src/interruptions.c ****                     interrupt_manager();
 4937              		.loc 1 1461 0
 4938 09fa FFF7FEFF 		bl	interrupt_manager
 4939              	.L303:
1462:..\src/interruptions.c ****                 }
1463:..\src/interruptions.c ****                 
1464:..\src/interruptions.c ****                 emg_2_status = SUM_AND_MEAN;           // sum and mean status
 4940              		.loc 1 1464 0
 4941 09fe 974B     		ldr	r3, .L388+8
 4942 0a00 0322     		movs	r2, #3
 4943 0a02 1A70     		strb	r2, [r3]
1465:..\src/interruptions.c ****             }
1466:..\src/interruptions.c ****             break;
 4944              		.loc 1 1466 0
 4945 0a04 1FE1     		b	.L368
 4946              	.L291:
1467:..\src/interruptions.c **** 
1468:..\src/interruptions.c ****         case SUM_AND_MEAN: // sum first SAMPLES_FOR_EMG_MEAN samples
1469:..\src/interruptions.c ****             // NOTE max(value)*SAMPLES_FOR_EMG_MEAN must fit in 32bit
1470:..\src/interruptions.c ****             emg_counter_2++;
 4947              		.loc 1 1470 0
 4948 0a06 934B     		ldr	r3, .L388
 4949 0a08 1B88     		ldrh	r3, [r3]
 4950 0a0a 0133     		adds	r3, r3, #1
 4951 0a0c 9AB2     		uxth	r2, r3
 4952 0a0e 914B     		ldr	r3, .L388
 4953 0a10 1A80     		strh	r2, [r3]	@ movhi
1471:..\src/interruptions.c ****             if (ADC_buf[3 - c_mem.emg.switch_emg] < 0)
 4954              		.loc 1 1471 0
 4955 0a12 934B     		ldr	r3, .L388+12
 4956 0a14 93F8FF31 		ldrb	r3, [r3, #511]	@ zero_extendqisi2
 4957 0a18 C3F10303 		rsb	r3, r3, #3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 116


 4958 0a1c 914A     		ldr	r2, .L388+16
 4959 0a1e 32F91330 		ldrsh	r3, [r2, r3, lsl #1]
 4960 0a22 002B     		cmp	r3, #0
 4961 0a24 08DA     		bge	.L304
1472:..\src/interruptions.c ****                 ADC_buf[3 - c_mem.emg.switch_emg] = 0;
 4962              		.loc 1 1472 0
 4963 0a26 8E4B     		ldr	r3, .L388+12
 4964 0a28 93F8FF31 		ldrb	r3, [r3, #511]	@ zero_extendqisi2
 4965 0a2c C3F10303 		rsb	r3, r3, #3
 4966 0a30 8C4A     		ldr	r2, .L388+16
 4967 0a32 0021     		movs	r1, #0
 4968 0a34 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 4969              	.L304:
1473:..\src/interruptions.c ****             g_mem.emg.emg_max_value[1] += filter((int32)ADC_buf[3 - c_mem.emg.switch_emg], &filt_em
 4970              		.loc 1 1473 0
 4971 0a38 894B     		ldr	r3, .L388+12
 4972 0a3a 93F8FF31 		ldrb	r3, [r3, #511]	@ zero_extendqisi2
 4973 0a3e C3F10303 		rsb	r3, r3, #3
 4974 0a42 884A     		ldr	r2, .L388+16
 4975 0a44 32F91330 		ldrsh	r3, [r2, r3, lsl #1]
 4976 0a48 8749     		ldr	r1, .L388+20
 4977 0a4a 1846     		mov	r0, r3
 4978 0a4c FFF7FEFF 		bl	filter
 4979 0a50 0246     		mov	r2, r0
 4980 0a52 864B     		ldr	r3, .L388+24
 4981 0a54 D3F8F831 		ldr	r3, [r3, #504]
 4982 0a58 1344     		add	r3, r3, r2
 4983 0a5a 844A     		ldr	r2, .L388+24
 4984 0a5c C2F8F831 		str	r3, [r2, #504]
1474:..\src/interruptions.c **** 
1475:..\src/interruptions.c ****             if (interrupt_flag){
 4985              		.loc 1 1475 0
 4986 0a60 7D4B     		ldr	r3, .L388+4
 4987 0a62 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4988 0a64 002B     		cmp	r3, #0
 4989 0a66 04D0     		beq	.L305
1476:..\src/interruptions.c ****                 interrupt_flag = FALSE;
 4990              		.loc 1 1476 0
 4991 0a68 7B4B     		ldr	r3, .L388+4
 4992 0a6a 0022     		movs	r2, #0
 4993 0a6c 1A70     		strb	r2, [r3]
1477:..\src/interruptions.c ****                 interrupt_manager();
 4994              		.loc 1 1477 0
 4995 0a6e FFF7FEFF 		bl	interrupt_manager
 4996              	.L305:
1478:..\src/interruptions.c ****             }
1479:..\src/interruptions.c ****             
1480:..\src/interruptions.c ****             if (emg_counter_2 == SAMPLES_FOR_EMG_MEAN) {
 4997              		.loc 1 1480 0
 4998 0a72 784B     		ldr	r3, .L388
 4999 0a74 1B88     		ldrh	r3, [r3]
 5000 0a76 B3F57A7F 		cmp	r3, #1000
 5001 0a7a 40F0E680 		bne	.L369
1481:..\src/interruptions.c ****                 g_mem.emg.emg_max_value[1] = g_mem.emg.emg_max_value[1] / SAMPLES_FOR_EMG_MEAN; // 
 5002              		.loc 1 1481 0
 5003 0a7e 7B4B     		ldr	r3, .L388+24
 5004 0a80 D3F8F831 		ldr	r3, [r3, #504]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 117


 5005 0a84 7A4A     		ldr	r2, .L388+28
 5006 0a86 A2FB0323 		umull	r2, r3, r2, r3
 5007 0a8a 9B09     		lsrs	r3, r3, #6
 5008 0a8c 774A     		ldr	r2, .L388+24
 5009 0a8e C2F8F831 		str	r3, [r2, #504]
1482:..\src/interruptions.c ****                 LED_control(0);
 5010              		.loc 1 1482 0
 5011 0a92 0020     		movs	r0, #0
 5012 0a94 FFF7FEFF 		bl	LED_control
1483:..\src/interruptions.c ****                 emg_counter_2 = 0;          // reset counter
 5013              		.loc 1 1483 0
 5014 0a98 6E4B     		ldr	r3, .L388
 5015 0a9a 0022     		movs	r2, #0
 5016 0a9c 1A80     		strh	r2, [r3]	@ movhi
1484:..\src/interruptions.c ****             
1485:..\src/interruptions.c ****                 if (interrupt_flag){
 5017              		.loc 1 1485 0
 5018 0a9e 6E4B     		ldr	r3, .L388+4
 5019 0aa0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5020 0aa2 002B     		cmp	r3, #0
 5021 0aa4 04D0     		beq	.L307
1486:..\src/interruptions.c ****                     interrupt_flag = FALSE;
 5022              		.loc 1 1486 0
 5023 0aa6 6C4B     		ldr	r3, .L388+4
 5024 0aa8 0022     		movs	r2, #0
 5025 0aaa 1A70     		strb	r2, [r3]
1487:..\src/interruptions.c ****                     interrupt_manager();
 5026              		.loc 1 1487 0
 5027 0aac FFF7FEFF 		bl	interrupt_manager
 5028              	.L307:
1488:..\src/interruptions.c ****                 }
1489:..\src/interruptions.c ****                 
1490:..\src/interruptions.c ****                 emg_2_status = WAIT_EoC;    // goto end of calibration wait
 5029              		.loc 1 1490 0
 5030 0ab0 6A4B     		ldr	r3, .L388+8
 5031 0ab2 0522     		movs	r2, #5
 5032 0ab4 1A70     		strb	r2, [r3]
1491:..\src/interruptions.c ****             }
1492:..\src/interruptions.c ****             break;
 5033              		.loc 1 1492 0
 5034 0ab6 C8E0     		b	.L369
 5035              	.L292:
1493:..\src/interruptions.c **** 
1494:..\src/interruptions.c ****         case WAIT: // wait for EMG calibration to be done
1495:..\src/interruptions.c ****             if (emg_1_status == NORMAL)
 5036              		.loc 1 1495 0
 5037 0ab8 6E4B     		ldr	r3, .L388+32
 5038 0aba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5039 0abc 002B     		cmp	r3, #0
 5040 0abe 40F0C680 		bne	.L370
1496:..\src/interruptions.c ****                 emg_2_status = DISCARD;           // goto discard sample
 5041              		.loc 1 1496 0
 5042 0ac2 664B     		ldr	r3, .L388+8
 5043 0ac4 0222     		movs	r2, #2
 5044 0ac6 1A70     		strb	r2, [r3]
1497:..\src/interruptions.c ****             break;
 5045              		.loc 1 1497 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 118


 5046 0ac8 C1E0     		b	.L370
 5047              	.L293:
1498:..\src/interruptions.c **** 
1499:..\src/interruptions.c ****         case WAIT_EoC:  // wait for end of calibration procedure (only for LED visibility reasons)
1500:..\src/interruptions.c ****             emg_counter_2++;
 5048              		.loc 1 1500 0
 5049 0aca 624B     		ldr	r3, .L388
 5050 0acc 1B88     		ldrh	r3, [r3]
 5051 0ace 0133     		adds	r3, r3, #1
 5052 0ad0 9AB2     		uxth	r2, r3
 5053 0ad2 604B     		ldr	r3, .L388
 5054 0ad4 1A80     		strh	r2, [r3]	@ movhi
1501:..\src/interruptions.c ****             if (emg_counter_2 == EMG_SAMPLE_TO_DISCARD) {
 5055              		.loc 1 1501 0
 5056 0ad6 5F4B     		ldr	r3, .L388
 5057 0ad8 1B88     		ldrh	r3, [r3]
 5058 0ada B3F5FA7F 		cmp	r3, #500
 5059 0ade 40F0D180 		bne	.L371
1502:..\src/interruptions.c ****                 emg_counter_2 = 0;          // reset counter
 5060              		.loc 1 1502 0
 5061 0ae2 5C4B     		ldr	r3, .L388
 5062 0ae4 0022     		movs	r2, #0
 5063 0ae6 1A80     		strh	r2, [r3]	@ movhi
1503:..\src/interruptions.c ****                 
1504:..\src/interruptions.c ****                 if (interrupt_flag){
 5064              		.loc 1 1504 0
 5065 0ae8 5B4B     		ldr	r3, .L388+4
 5066 0aea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5067 0aec 002B     		cmp	r3, #0
 5068 0aee 04D0     		beq	.L310
1505:..\src/interruptions.c ****                     interrupt_flag = FALSE;
 5069              		.loc 1 1505 0
 5070 0af0 594B     		ldr	r3, .L388+4
 5071 0af2 0022     		movs	r2, #0
 5072 0af4 1A70     		strb	r2, [r3]
1506:..\src/interruptions.c ****                     interrupt_manager();
 5073              		.loc 1 1506 0
 5074 0af6 FFF7FEFF 		bl	interrupt_manager
 5075              	.L310:
1507:..\src/interruptions.c ****                 }
1508:..\src/interruptions.c ****                 
1509:..\src/interruptions.c ****                 for (idx = 0; idx < NUM_OF_MOTORS; idx++) {
 5076              		.loc 1 1509 0
 5077 0afa 5F4B     		ldr	r3, .L388+36
 5078 0afc 0022     		movs	r2, #0
 5079 0afe 1A70     		strb	r2, [r3]
 5080 0b00 93E0     		b	.L311
 5081              	.L315:
1510:..\src/interruptions.c ****                     if ((c_mem.motor[idx].input_mode == INPUT_MODE_EMG_PROPORTIONAL) ||
 5082              		.loc 1 1510 0
 5083 0b02 5D4B     		ldr	r3, .L388+36
 5084 0b04 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5085 0b06 1946     		mov	r1, r3
 5086 0b08 554A     		ldr	r2, .L388+12
 5087 0b0a 0B46     		mov	r3, r1
 5088 0b0c DB00     		lsls	r3, r3, #3
 5089 0b0e 5B1A     		subs	r3, r3, r1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 119


 5090 0b10 1B01     		lsls	r3, r3, #4
 5091 0b12 1344     		add	r3, r3, r2
 5092 0b14 03F58773 		add	r3, r3, #270
 5093 0b18 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5094 0b1a 022B     		cmp	r3, #2
 5095 0b1c 37D0     		beq	.L312
1511:..\src/interruptions.c ****                         (c_mem.motor[idx].input_mode == INPUT_MODE_EMG_INTEGRAL) ||
 5096              		.loc 1 1511 0 discriminator 1
 5097 0b1e 564B     		ldr	r3, .L388+36
 5098 0b20 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5099 0b22 1946     		mov	r1, r3
 5100 0b24 4E4A     		ldr	r2, .L388+12
 5101 0b26 0B46     		mov	r3, r1
 5102 0b28 DB00     		lsls	r3, r3, #3
 5103 0b2a 5B1A     		subs	r3, r3, r1
 5104 0b2c 1B01     		lsls	r3, r3, #4
 5105 0b2e 1344     		add	r3, r3, r2
 5106 0b30 03F58773 		add	r3, r3, #270
 5107 0b34 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1510:..\src/interruptions.c ****                     if ((c_mem.motor[idx].input_mode == INPUT_MODE_EMG_PROPORTIONAL) ||
 5108              		.loc 1 1510 0 discriminator 1
 5109 0b36 032B     		cmp	r3, #3
 5110 0b38 29D0     		beq	.L312
1512:..\src/interruptions.c ****                         (c_mem.motor[idx].input_mode == INPUT_MODE_EMG_FCFS) ||
 5111              		.loc 1 1512 0
 5112 0b3a 4F4B     		ldr	r3, .L388+36
 5113 0b3c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5114 0b3e 1946     		mov	r1, r3
 5115 0b40 474A     		ldr	r2, .L388+12
 5116 0b42 0B46     		mov	r3, r1
 5117 0b44 DB00     		lsls	r3, r3, #3
 5118 0b46 5B1A     		subs	r3, r3, r1
 5119 0b48 1B01     		lsls	r3, r3, #4
 5120 0b4a 1344     		add	r3, r3, r2
 5121 0b4c 03F58773 		add	r3, r3, #270
 5122 0b50 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1511:..\src/interruptions.c ****                         (c_mem.motor[idx].input_mode == INPUT_MODE_EMG_INTEGRAL) ||
 5123              		.loc 1 1511 0
 5124 0b52 042B     		cmp	r3, #4
 5125 0b54 1BD0     		beq	.L312
1513:..\src/interruptions.c ****                         (c_mem.motor[idx].input_mode == INPUT_MODE_EMG_FCFS_ADV) ||
 5126              		.loc 1 1513 0
 5127 0b56 484B     		ldr	r3, .L388+36
 5128 0b58 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5129 0b5a 1946     		mov	r1, r3
 5130 0b5c 404A     		ldr	r2, .L388+12
 5131 0b5e 0B46     		mov	r3, r1
 5132 0b60 DB00     		lsls	r3, r3, #3
 5133 0b62 5B1A     		subs	r3, r3, r1
 5134 0b64 1B01     		lsls	r3, r3, #4
 5135 0b66 1344     		add	r3, r3, r2
 5136 0b68 03F58773 		add	r3, r3, #270
 5137 0b6c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1512:..\src/interruptions.c ****                         (c_mem.motor[idx].input_mode == INPUT_MODE_EMG_FCFS) ||
 5138              		.loc 1 1512 0
 5139 0b6e 052B     		cmp	r3, #5
 5140 0b70 0DD0     		beq	.L312
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 120


1514:..\src/interruptions.c ****                         (c_mem.motor[idx].input_mode == INPUT_MODE_EMG_PROPORTIONAL_NC)) {
 5141              		.loc 1 1514 0
 5142 0b72 414B     		ldr	r3, .L388+36
 5143 0b74 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5144 0b76 1946     		mov	r1, r3
 5145 0b78 394A     		ldr	r2, .L388+12
 5146 0b7a 0B46     		mov	r3, r1
 5147 0b7c DB00     		lsls	r3, r3, #3
 5148 0b7e 5B1A     		subs	r3, r3, r1
 5149 0b80 1B01     		lsls	r3, r3, #4
 5150 0b82 1344     		add	r3, r3, r2
 5151 0b84 03F58773 		add	r3, r3, #270
 5152 0b88 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1513:..\src/interruptions.c ****                         (c_mem.motor[idx].input_mode == INPUT_MODE_EMG_FCFS_ADV) ||
 5153              		.loc 1 1513 0
 5154 0b8a 072B     		cmp	r3, #7
 5155 0b8c 47D1     		bne	.L313
 5156              	.L312:
1515:..\src/interruptions.c ****                         if (c_mem.motor[idx].control_mode == CONTROL_ANGLE) {
 5157              		.loc 1 1515 0
 5158 0b8e 3A4B     		ldr	r3, .L388+36
 5159 0b90 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5160 0b92 1946     		mov	r1, r3
 5161 0b94 324A     		ldr	r2, .L388+12
 5162 0b96 0B46     		mov	r3, r1
 5163 0b98 DB00     		lsls	r3, r3, #3
 5164 0b9a 5B1A     		subs	r3, r3, r1
 5165 0b9c 1B01     		lsls	r3, r3, #4
 5166 0b9e 1344     		add	r3, r3, r2
 5167 0ba0 03F20F13 		addw	r3, r3, #271
 5168 0ba4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5169 0ba6 002B     		cmp	r3, #0
 5170 0ba8 19D1     		bne	.L314
1516:..\src/interruptions.c ****                             g_ref[idx].pos = g_meas[g_mem.motor[idx].encoder_line].pos[0];
 5171              		.loc 1 1516 0
 5172 0baa 334B     		ldr	r3, .L388+36
 5173 0bac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5174 0bae 1846     		mov	r0, r3
 5175 0bb0 314B     		ldr	r3, .L388+36
 5176 0bb2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5177 0bb4 1946     		mov	r1, r3
 5178 0bb6 2D4A     		ldr	r2, .L388+24
 5179 0bb8 0B46     		mov	r3, r1
 5180 0bba DB00     		lsls	r3, r3, #3
 5181 0bbc 5B1A     		subs	r3, r3, r1
 5182 0bbe 1B01     		lsls	r3, r3, #4
 5183 0bc0 1344     		add	r3, r3, r2
 5184 0bc2 03F58873 		add	r3, r3, #272
 5185 0bc6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5186 0bc8 1946     		mov	r1, r3
 5187 0bca 2C4A     		ldr	r2, .L388+40
 5188 0bcc 3423     		movs	r3, #52
 5189 0bce 03FB01F3 		mul	r3, r3, r1
 5190 0bd2 1344     		add	r3, r3, r2
 5191 0bd4 1A68     		ldr	r2, [r3]
 5192 0bd6 2A49     		ldr	r1, .L388+44
 5193 0bd8 0301     		lsls	r3, r0, #4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 121


 5194 0bda 0B44     		add	r3, r3, r1
 5195 0bdc 1A60     		str	r2, [r3]
 5196              	.L314:
1517:..\src/interruptions.c ****                         }
1518:..\src/interruptions.c ****                         g_ref[idx].onoff = c_mem.motor[idx].activ;
 5197              		.loc 1 1518 0
 5198 0bde 264B     		ldr	r3, .L388+36
 5199 0be0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5200 0be2 1846     		mov	r0, r3
 5201 0be4 244B     		ldr	r3, .L388+36
 5202 0be6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5203 0be8 1946     		mov	r1, r3
 5204 0bea 1D4A     		ldr	r2, .L388+12
 5205 0bec 0B46     		mov	r3, r1
 5206 0bee DB00     		lsls	r3, r3, #3
 5207 0bf0 5B1A     		subs	r3, r3, r1
 5208 0bf2 1B01     		lsls	r3, r3, #4
 5209 0bf4 1344     		add	r3, r3, r2
 5210 0bf6 E033     		adds	r3, r3, #224
 5211 0bf8 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 5212 0bfa 214A     		ldr	r2, .L388+44
 5213 0bfc 0301     		lsls	r3, r0, #4
 5214 0bfe 1344     		add	r3, r3, r2
 5215 0c00 0C33     		adds	r3, r3, #12
 5216 0c02 0A46     		mov	r2, r1
 5217 0c04 1A70     		strb	r2, [r3]
1519:..\src/interruptions.c ****                         enable_motor(idx, g_ref[idx].onoff); 
 5218              		.loc 1 1519 0
 5219 0c06 1C4B     		ldr	r3, .L388+36
 5220 0c08 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 5221 0c0a 1B4B     		ldr	r3, .L388+36
 5222 0c0c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5223 0c0e 1C4A     		ldr	r2, .L388+44
 5224 0c10 1B01     		lsls	r3, r3, #4
 5225 0c12 1344     		add	r3, r3, r2
 5226 0c14 0C33     		adds	r3, r3, #12
 5227 0c16 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5228 0c18 1946     		mov	r1, r3
 5229 0c1a FFF7FEFF 		bl	enable_motor
 5230              	.L313:
1509:..\src/interruptions.c ****                     if ((c_mem.motor[idx].input_mode == INPUT_MODE_EMG_PROPORTIONAL) ||
 5231              		.loc 1 1509 0 discriminator 2
 5232 0c1e 164B     		ldr	r3, .L388+36
 5233 0c20 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5234 0c22 0133     		adds	r3, r3, #1
 5235 0c24 DAB2     		uxtb	r2, r3
 5236 0c26 144B     		ldr	r3, .L388+36
 5237 0c28 1A70     		strb	r2, [r3]
 5238              	.L311:
1509:..\src/interruptions.c ****                     if ((c_mem.motor[idx].input_mode == INPUT_MODE_EMG_PROPORTIONAL) ||
 5239              		.loc 1 1509 0 is_stmt 0 discriminator 1
 5240 0c2a 134B     		ldr	r3, .L388+36
 5241 0c2c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5242 0c2e 012B     		cmp	r3, #1
 5243 0c30 7FF667AF 		bls	.L315
1520:..\src/interruptions.c ****                     }
1521:..\src/interruptions.c ****                 }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 122


1522:..\src/interruptions.c ****                     
1523:..\src/interruptions.c ****                 memStore(0);        // Store emg_max_value
 5244              		.loc 1 1523 0 is_stmt 1
 5245 0c34 0020     		movs	r0, #0
 5246 0c36 FFF7FEFF 		bl	memStore
1524:..\src/interruptions.c ****                     
1525:..\src/interruptions.c ****                 emg_2_status = NORMAL;           // goto normal execution
 5247              		.loc 1 1525 0
 5248 0c3a 084B     		ldr	r3, .L388+8
 5249 0c3c 0022     		movs	r2, #0
 5250 0c3e 1A70     		strb	r2, [r3]
1526:..\src/interruptions.c ****             }
1527:..\src/interruptions.c ****             break;
 5251              		.loc 1 1527 0
 5252 0c40 20E0     		b	.L371
 5253              	.L367:
1528:..\src/interruptions.c ****         default:
1529:..\src/interruptions.c ****             break;
 5254              		.loc 1 1529 0
 5255 0c42 00BF     		nop
 5256 0c44 1FE0     		b	.L300
 5257              	.L368:
1466:..\src/interruptions.c **** 
 5258              		.loc 1 1466 0
 5259 0c46 00BF     		nop
 5260 0c48 1DE0     		b	.L300
 5261              	.L369:
1492:..\src/interruptions.c **** 
 5262              		.loc 1 1492 0
 5263 0c4a 00BF     		nop
 5264 0c4c 1BE0     		b	.L300
 5265              	.L370:
1497:..\src/interruptions.c **** 
 5266              		.loc 1 1497 0
 5267 0c4e 00BF     		nop
 5268 0c50 19E0     		b	.L300
 5269              	.L389:
 5270 0c52 00BF     		.align	2
 5271              	.L388:
 5272 0c54 2A010000 		.word	emg_counter_2.10575
 5273 0c58 00000000 		.word	interrupt_flag
 5274 0c5c 00000000 		.word	emg_2_status
 5275 0c60 00000000 		.word	c_mem
 5276 0c64 00000000 		.word	ADC_buf
 5277 0c68 08000000 		.word	filt_emg+8
 5278 0c6c 00000000 		.word	g_mem
 5279 0c70 D34D6210 		.word	274877907
 5280 0c74 00000000 		.word	emg_1_status
 5281 0c78 22010000 		.word	idx.10584
 5282 0c7c 00000000 		.word	g_meas
 5283 0c80 00000000 		.word	g_ref
 5284              	.L371:
1527:..\src/interruptions.c ****         default:
 5285              		.loc 1 1527 0
 5286 0c84 00BF     		nop
 5287              	.L300:
1530:..\src/interruptions.c ****     }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 123


1531:..\src/interruptions.c ****         
1532:..\src/interruptions.c ****     if (interrupt_flag){
 5288              		.loc 1 1532 0
 5289 0c86 A74B     		ldr	r3, .L390
 5290 0c88 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5291 0c8a 002B     		cmp	r3, #0
 5292 0c8c 04D0     		beq	.L316
1533:..\src/interruptions.c ****         interrupt_flag = FALSE;
 5293              		.loc 1 1533 0
 5294 0c8e A54B     		ldr	r3, .L390
 5295 0c90 0022     		movs	r2, #0
 5296 0c92 1A70     		strb	r2, [r3]
1534:..\src/interruptions.c ****         interrupt_manager();
 5297              		.loc 1 1534 0
 5298 0c94 FFF7FEFF 		bl	interrupt_manager
 5299              	.L316:
1535:..\src/interruptions.c ****     }
1536:..\src/interruptions.c ****     
1537:..\src/interruptions.c ****     if (c_mem.motor[0].input_mode == INPUT_MODE_JOYSTICK || c_mem.motor[1].input_mode == INPUT_MODE
 5300              		.loc 1 1537 0
 5301 0c98 A34B     		ldr	r3, .L390+4
 5302 0c9a 93F80E31 		ldrb	r3, [r3, #270]	@ zero_extendqisi2
 5303 0c9e 062B     		cmp	r3, #6
 5304 0ca0 05D0     		beq	.L317
 5305              		.loc 1 1537 0 is_stmt 0 discriminator 1
 5306 0ca2 A14B     		ldr	r3, .L390+4
 5307 0ca4 93F87E31 		ldrb	r3, [r3, #382]	@ zero_extendqisi2
 5308 0ca8 062B     		cmp	r3, #6
 5309 0caa 40F0C481 		bne	.L318
 5310              	.L317:
1538:..\src/interruptions.c ****         // Read joystick
1539:..\src/interruptions.c ****         
1540:..\src/interruptions.c ****         switch (joy_UD_status) {
 5311              		.loc 1 1540 0 is_stmt 1
 5312 0cae 9F4B     		ldr	r3, .L390+8
 5313 0cb0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5314 0cb2 052B     		cmp	r3, #5
 5315 0cb4 00F2CB80 		bhi	.L319
 5316 0cb8 01A2     		adr	r2, .L321
 5317 0cba 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 5318 0cbe 00BF     		.p2align 2
 5319              	.L321:
 5320 0cc0 D90C0000 		.word	.L320+1
 5321 0cc4 750D0000 		.word	.L322+1
 5322 0cc8 890D0000 		.word	.L323+1
 5323 0ccc BD0D0000 		.word	.L324+1
 5324 0cd0 290E0000 		.word	.L325+1
 5325 0cd4 290E0000 		.word	.L325+1
 5326              		.p2align 1
 5327              	.L320:
1541:..\src/interruptions.c ****             case NORMAL:
1542:..\src/interruptions.c ****                 i_aux = (int32)(ADC_buf[2]);
 5328              		.loc 1 1542 0
 5329 0cd8 954B     		ldr	r3, .L390+12
 5330 0cda B3F90430 		ldrsh	r3, [r3, #4]
 5331 0cde 7B60     		str	r3, [r7, #4]
1543:..\src/interruptions.c ****                 // Remap the analog reading from -1024 to 1024.  
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 124


1544:..\src/interruptions.c ****                 i_aux = (int32) (((float) (i_aux - UD_mean_value) / UD_mean_value) * c_mem.JOY_spec
 5332              		.loc 1 1544 0
 5333 0ce0 944B     		ldr	r3, .L390+16
 5334 0ce2 1B68     		ldr	r3, [r3]
 5335 0ce4 7A68     		ldr	r2, [r7, #4]
 5336 0ce6 D31A     		subs	r3, r2, r3
 5337 0ce8 1846     		mov	r0, r3
 5338 0cea FFF7FEFF 		bl	__aeabi_i2f
 5339 0cee 0446     		mov	r4, r0
 5340 0cf0 904B     		ldr	r3, .L390+16
 5341 0cf2 1B68     		ldr	r3, [r3]
 5342 0cf4 1846     		mov	r0, r3
 5343 0cf6 FFF7FEFF 		bl	__aeabi_i2f
 5344 0cfa 0346     		mov	r3, r0
 5345 0cfc 1946     		mov	r1, r3
 5346 0cfe 2046     		mov	r0, r4
 5347 0d00 FFF7FEFF 		bl	__aeabi_fdiv
 5348 0d04 0346     		mov	r3, r0
 5349 0d06 1C46     		mov	r4, r3
 5350 0d08 874B     		ldr	r3, .L390+4
 5351 0d0a B3F8B632 		ldrh	r3, [r3, #694]
 5352 0d0e 1846     		mov	r0, r3
 5353 0d10 FFF7FEFF 		bl	__aeabi_i2f
 5354 0d14 0346     		mov	r3, r0
 5355 0d16 1946     		mov	r1, r3
 5356 0d18 2046     		mov	r0, r4
 5357 0d1a FFF7FEFF 		bl	__aeabi_fmul
 5358 0d1e 0346     		mov	r3, r0
 5359 0d20 1846     		mov	r0, r3
 5360 0d22 FFF7FEFF 		bl	__aeabi_f2iz
 5361 0d26 0346     		mov	r3, r0
 5362 0d28 7B60     		str	r3, [r7, #4]
1545:..\src/interruptions.c ****                 
1546:..\src/interruptions.c ****                 if (interrupt_flag){
 5363              		.loc 1 1546 0
 5364 0d2a 7E4B     		ldr	r3, .L390
 5365 0d2c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5366 0d2e 002B     		cmp	r3, #0
 5367 0d30 04D0     		beq	.L326
1547:..\src/interruptions.c ****                     interrupt_flag = FALSE;
 5368              		.loc 1 1547 0
 5369 0d32 7C4B     		ldr	r3, .L390
 5370 0d34 0022     		movs	r2, #0
 5371 0d36 1A70     		strb	r2, [r3]
1548:..\src/interruptions.c ****                     interrupt_manager();
 5372              		.loc 1 1548 0
 5373 0d38 FFF7FEFF 		bl	interrupt_manager
 5374              	.L326:
1549:..\src/interruptions.c ****                 }
1550:..\src/interruptions.c **** 
1551:..\src/interruptions.c ****                 //Saturation
1552:..\src/interruptions.c ****                 if (i_aux < -1024) 
 5375              		.loc 1 1552 0
 5376 0d3c 7B68     		ldr	r3, [r7, #4]
 5377 0d3e 13F5806F 		cmn	r3, #1024
 5378 0d42 01DA     		bge	.L327
1553:..\src/interruptions.c ****                     i_aux = -1024;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 125


 5379              		.loc 1 1553 0
 5380 0d44 7C4B     		ldr	r3, .L390+20
 5381 0d46 7B60     		str	r3, [r7, #4]
 5382              	.L327:
1554:..\src/interruptions.c ****                 if (i_aux > 1024)
 5383              		.loc 1 1554 0
 5384 0d48 7B68     		ldr	r3, [r7, #4]
 5385 0d4a B3F5806F 		cmp	r3, #1024
 5386 0d4e 02DD     		ble	.L328
1555:..\src/interruptions.c ****                     i_aux = 1024;
 5387              		.loc 1 1555 0
 5388 0d50 4FF48063 		mov	r3, #1024
 5389 0d54 7B60     		str	r3, [r7, #4]
 5390              	.L328:
1556:..\src/interruptions.c **** 
1557:..\src/interruptions.c ****                 g_adc_meas.joystick[1] = (int16) i_aux;
 5391              		.loc 1 1557 0
 5392 0d56 7B68     		ldr	r3, [r7, #4]
 5393 0d58 1BB2     		sxth	r3, r3
 5394 0d5a 1A46     		mov	r2, r3
 5395 0d5c 774B     		ldr	r3, .L390+24
 5396 0d5e 5A62     		str	r2, [r3, #36]
1558:..\src/interruptions.c **** 
1559:..\src/interruptions.c ****                 if (interrupt_flag){
 5397              		.loc 1 1559 0
 5398 0d60 704B     		ldr	r3, .L390
 5399 0d62 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5400 0d64 002B     		cmp	r3, #0
 5401 0d66 6BD0     		beq	.L372
1560:..\src/interruptions.c ****                     interrupt_flag = FALSE;
 5402              		.loc 1 1560 0
 5403 0d68 6E4B     		ldr	r3, .L390
 5404 0d6a 0022     		movs	r2, #0
 5405 0d6c 1A70     		strb	r2, [r3]
1561:..\src/interruptions.c ****                     interrupt_manager();
 5406              		.loc 1 1561 0
 5407 0d6e FFF7FEFF 		bl	interrupt_manager
1562:..\src/interruptions.c ****                 }
1563:..\src/interruptions.c **** 
1564:..\src/interruptions.c ****             break;
 5408              		.loc 1 1564 0
 5409 0d72 65E0     		b	.L372
 5410              	.L322:
1565:..\src/interruptions.c **** 
1566:..\src/interruptions.c ****             case RESET: // reset variables
1567:..\src/interruptions.c ****                 UD_counter = 0;
 5411              		.loc 1 1567 0
 5412 0d74 724B     		ldr	r3, .L390+28
 5413 0d76 0022     		movs	r2, #0
 5414 0d78 1A80     		strh	r2, [r3]	@ movhi
1568:..\src/interruptions.c ****                 UD_mean_value = 0;
 5415              		.loc 1 1568 0
 5416 0d7a 6E4B     		ldr	r3, .L390+16
 5417 0d7c 0022     		movs	r2, #0
 5418 0d7e 1A60     		str	r2, [r3]
1569:..\src/interruptions.c ****                 joy_UD_status = WAIT; // go to waiting status
 5419              		.loc 1 1569 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 126


 5420 0d80 6A4B     		ldr	r3, .L390+8
 5421 0d82 0422     		movs	r2, #4
 5422 0d84 1A70     		strb	r2, [r3]
1570:..\src/interruptions.c **** 
1571:..\src/interruptions.c ****             break;
 5423              		.loc 1 1571 0
 5424 0d86 62E0     		b	.L319
 5425              	.L323:
1572:..\src/interruptions.c **** 
1573:..\src/interruptions.c ****             case DISCARD: // discard first EMG_SAMPLE_TO_DISCARD samples
1574:..\src/interruptions.c ****                 UD_counter++;
 5426              		.loc 1 1574 0
 5427 0d88 6D4B     		ldr	r3, .L390+28
 5428 0d8a 1B88     		ldrh	r3, [r3]
 5429 0d8c 0133     		adds	r3, r3, #1
 5430 0d8e 9AB2     		uxth	r2, r3
 5431 0d90 6B4B     		ldr	r3, .L390+28
 5432 0d92 1A80     		strh	r2, [r3]	@ movhi
1575:..\src/interruptions.c ****                 if (UD_counter == JOYSTICK_SAMPLE_TO_DISCARD) {
 5433              		.loc 1 1575 0
 5434 0d94 6A4B     		ldr	r3, .L390+28
 5435 0d96 1B88     		ldrh	r3, [r3]
 5436 0d98 642B     		cmp	r3, #100
 5437 0d9a 53D1     		bne	.L373
1576:..\src/interruptions.c ****                     UD_counter = 0;                     // reset counter
 5438              		.loc 1 1576 0
 5439 0d9c 684B     		ldr	r3, .L390+28
 5440 0d9e 0022     		movs	r2, #0
 5441 0da0 1A80     		strh	r2, [r3]	@ movhi
1577:..\src/interruptions.c **** 
1578:..\src/interruptions.c ****                     if (interrupt_flag){
 5442              		.loc 1 1578 0
 5443 0da2 604B     		ldr	r3, .L390
 5444 0da4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5445 0da6 002B     		cmp	r3, #0
 5446 0da8 04D0     		beq	.L331
1579:..\src/interruptions.c ****                         interrupt_flag = FALSE;
 5447              		.loc 1 1579 0
 5448 0daa 5E4B     		ldr	r3, .L390
 5449 0dac 0022     		movs	r2, #0
 5450 0dae 1A70     		strb	r2, [r3]
1580:..\src/interruptions.c ****                         interrupt_manager();
 5451              		.loc 1 1580 0
 5452 0db0 FFF7FEFF 		bl	interrupt_manager
 5453              	.L331:
1581:..\src/interruptions.c ****                     }
1582:..\src/interruptions.c **** 
1583:..\src/interruptions.c ****                     joy_UD_status = SUM_AND_MEAN;           // sum and mean status
 5454              		.loc 1 1583 0
 5455 0db4 5D4B     		ldr	r3, .L390+8
 5456 0db6 0322     		movs	r2, #3
 5457 0db8 1A70     		strb	r2, [r3]
1584:..\src/interruptions.c ****                 }
1585:..\src/interruptions.c **** 
1586:..\src/interruptions.c ****             break;
 5458              		.loc 1 1586 0
 5459 0dba 43E0     		b	.L373
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 127


 5460              	.L324:
1587:..\src/interruptions.c **** 
1588:..\src/interruptions.c ****             case SUM_AND_MEAN: // sum first SAMPLES_FOR_EMG_MEAN samples
1589:..\src/interruptions.c ****                 // NOTE max(value)*SAMPLES_FOR_EMG_MEAN must fit in 32bit
1590:..\src/interruptions.c ****                 UD_counter++;
 5461              		.loc 1 1590 0
 5462 0dbc 604B     		ldr	r3, .L390+28
 5463 0dbe 1B88     		ldrh	r3, [r3]
 5464 0dc0 0133     		adds	r3, r3, #1
 5465 0dc2 9AB2     		uxth	r2, r3
 5466 0dc4 5E4B     		ldr	r3, .L390+28
 5467 0dc6 1A80     		strh	r2, [r3]	@ movhi
1591:..\src/interruptions.c ****                 UD_mean_value += (int32)(ADC_buf[2]);        // No filter
 5468              		.loc 1 1591 0
 5469 0dc8 594B     		ldr	r3, .L390+12
 5470 0dca B3F90430 		ldrsh	r3, [r3, #4]
 5471 0dce 1A46     		mov	r2, r3
 5472 0dd0 584B     		ldr	r3, .L390+16
 5473 0dd2 1B68     		ldr	r3, [r3]
 5474 0dd4 1344     		add	r3, r3, r2
 5475 0dd6 574A     		ldr	r2, .L390+16
 5476 0dd8 1360     		str	r3, [r2]
1592:..\src/interruptions.c **** 
1593:..\src/interruptions.c ****                 if (interrupt_flag){
 5477              		.loc 1 1593 0
 5478 0dda 524B     		ldr	r3, .L390
 5479 0ddc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5480 0dde 002B     		cmp	r3, #0
 5481 0de0 04D0     		beq	.L332
1594:..\src/interruptions.c ****                     interrupt_flag = FALSE;
 5482              		.loc 1 1594 0
 5483 0de2 504B     		ldr	r3, .L390
 5484 0de4 0022     		movs	r2, #0
 5485 0de6 1A70     		strb	r2, [r3]
1595:..\src/interruptions.c ****                     interrupt_manager();
 5486              		.loc 1 1595 0
 5487 0de8 FFF7FEFF 		bl	interrupt_manager
 5488              	.L332:
1596:..\src/interruptions.c ****                 }
1597:..\src/interruptions.c **** 
1598:..\src/interruptions.c ****                 if (UD_counter == SAMPLES_FOR_JOYSTICK_MEAN) {
 5489              		.loc 1 1598 0
 5490 0dec 544B     		ldr	r3, .L390+28
 5491 0dee 1B88     		ldrh	r3, [r3]
 5492 0df0 C82B     		cmp	r3, #200
 5493 0df2 29D1     		bne	.L374
1599:..\src/interruptions.c ****                     UD_mean_value = UD_mean_value / SAMPLES_FOR_JOYSTICK_MEAN; // calc mean
 5494              		.loc 1 1599 0
 5495 0df4 4F4B     		ldr	r3, .L390+16
 5496 0df6 1B68     		ldr	r3, [r3]
 5497 0df8 524A     		ldr	r2, .L390+32
 5498 0dfa 82FB0312 		smull	r1, r2, r2, r3
 5499 0dfe 9211     		asrs	r2, r2, #6
 5500 0e00 DB17     		asrs	r3, r3, #31
 5501 0e02 D31A     		subs	r3, r2, r3
 5502 0e04 4B4A     		ldr	r2, .L390+16
 5503 0e06 1360     		str	r3, [r2]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 128


1600:..\src/interruptions.c **** 
1601:..\src/interruptions.c ****                     if (interrupt_flag){
 5504              		.loc 1 1601 0
 5505 0e08 464B     		ldr	r3, .L390
 5506 0e0a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5507 0e0c 002B     		cmp	r3, #0
 5508 0e0e 04D0     		beq	.L334
1602:..\src/interruptions.c ****                         interrupt_flag = FALSE;
 5509              		.loc 1 1602 0
 5510 0e10 444B     		ldr	r3, .L390
 5511 0e12 0022     		movs	r2, #0
 5512 0e14 1A70     		strb	r2, [r3]
1603:..\src/interruptions.c ****                         interrupt_manager();
 5513              		.loc 1 1603 0
 5514 0e16 FFF7FEFF 		bl	interrupt_manager
 5515              	.L334:
1604:..\src/interruptions.c ****                     }
1605:..\src/interruptions.c **** 
1606:..\src/interruptions.c ****                     UD_counter = 0;          // reset counter
 5516              		.loc 1 1606 0
 5517 0e1a 494B     		ldr	r3, .L390+28
 5518 0e1c 0022     		movs	r2, #0
 5519 0e1e 1A80     		strh	r2, [r3]	@ movhi
1607:..\src/interruptions.c ****                     joy_UD_status = NORMAL;           // goto normal execution
 5520              		.loc 1 1607 0
 5521 0e20 424B     		ldr	r3, .L390+8
 5522 0e22 0022     		movs	r2, #0
 5523 0e24 1A70     		strb	r2, [r3]
1608:..\src/interruptions.c ****                 }
1609:..\src/interruptions.c ****             break;
 5524              		.loc 1 1609 0
 5525 0e26 0FE0     		b	.L374
 5526              	.L325:
1610:..\src/interruptions.c **** 
1611:..\src/interruptions.c ****             case WAIT: case WAIT_EoC: // wait for both EMG calibrations to be done
1612:..\src/interruptions.c ****                 if (emg_1_status == NORMAL && emg_2_status == NORMAL)
 5527              		.loc 1 1612 0
 5528 0e28 474B     		ldr	r3, .L390+36
 5529 0e2a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5530 0e2c 002B     		cmp	r3, #0
 5531 0e2e 0DD1     		bne	.L375
 5532              		.loc 1 1612 0 is_stmt 0 discriminator 1
 5533 0e30 464B     		ldr	r3, .L390+40
 5534 0e32 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5535 0e34 002B     		cmp	r3, #0
 5536 0e36 09D1     		bne	.L375
1613:..\src/interruptions.c ****                     joy_UD_status = DISCARD;           // goto discard sample
 5537              		.loc 1 1613 0 is_stmt 1
 5538 0e38 3C4B     		ldr	r3, .L390+8
 5539 0e3a 0222     		movs	r2, #2
 5540 0e3c 1A70     		strb	r2, [r3]
1614:..\src/interruptions.c ****             break;
 5541              		.loc 1 1614 0
 5542 0e3e 05E0     		b	.L375
 5543              	.L372:
1564:..\src/interruptions.c **** 
 5544              		.loc 1 1564 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 129


 5545 0e40 00BF     		nop
 5546 0e42 04E0     		b	.L319
 5547              	.L373:
1586:..\src/interruptions.c **** 
 5548              		.loc 1 1586 0
 5549 0e44 00BF     		nop
 5550 0e46 02E0     		b	.L319
 5551              	.L374:
1609:..\src/interruptions.c **** 
 5552              		.loc 1 1609 0
 5553 0e48 00BF     		nop
 5554 0e4a 00E0     		b	.L319
 5555              	.L375:
 5556              		.loc 1 1614 0
 5557 0e4c 00BF     		nop
 5558              	.L319:
1615:..\src/interruptions.c ****         }
1616:..\src/interruptions.c **** 
1617:..\src/interruptions.c ****         if (interrupt_flag){
 5559              		.loc 1 1617 0
 5560 0e4e 354B     		ldr	r3, .L390
 5561 0e50 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5562 0e52 002B     		cmp	r3, #0
 5563 0e54 04D0     		beq	.L336
1618:..\src/interruptions.c ****             interrupt_flag = FALSE;
 5564              		.loc 1 1618 0
 5565 0e56 334B     		ldr	r3, .L390
 5566 0e58 0022     		movs	r2, #0
 5567 0e5a 1A70     		strb	r2, [r3]
1619:..\src/interruptions.c ****             interrupt_manager();
 5568              		.loc 1 1619 0
 5569 0e5c FFF7FEFF 		bl	interrupt_manager
 5570              	.L336:
1620:..\src/interruptions.c ****         }
1621:..\src/interruptions.c ****             
1622:..\src/interruptions.c ****         switch (joy_LR_status) {
 5571              		.loc 1 1622 0
 5572 0e60 3B4B     		ldr	r3, .L390+44
 5573 0e62 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5574 0e64 052B     		cmp	r3, #5
 5575 0e66 00F2DD80 		bhi	.L337
 5576 0e6a 01A2     		adr	r2, .L339
 5577 0e6c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 5578              		.p2align 2
 5579              	.L339:
 5580 0e70 890E0000 		.word	.L338+1
 5581 0e74 590F0000 		.word	.L340+1
 5582 0e78 6D0F0000 		.word	.L341+1
 5583 0e7c A10F0000 		.word	.L342+1
 5584 0e80 FB0F0000 		.word	.L343+1
 5585 0e84 FB0F0000 		.word	.L343+1
 5586              		.p2align 1
 5587              	.L338:
1623:..\src/interruptions.c ****             case NORMAL:
1624:..\src/interruptions.c ****                 i_aux = (int32)(ADC_buf[3]);
 5588              		.loc 1 1624 0
 5589 0e88 294B     		ldr	r3, .L390+12
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 130


 5590 0e8a B3F90630 		ldrsh	r3, [r3, #6]
 5591 0e8e 7B60     		str	r3, [r7, #4]
1625:..\src/interruptions.c **** 
1626:..\src/interruptions.c ****                 i_aux = (int32) (((float) (i_aux - LR_mean_value) / LR_mean_value) * c_mem.JOY_spec
 5592              		.loc 1 1626 0
 5593 0e90 304B     		ldr	r3, .L390+48
 5594 0e92 1B68     		ldr	r3, [r3]
 5595 0e94 7A68     		ldr	r2, [r7, #4]
 5596 0e96 D31A     		subs	r3, r2, r3
 5597 0e98 1846     		mov	r0, r3
 5598 0e9a FFF7FEFF 		bl	__aeabi_i2f
 5599 0e9e 0446     		mov	r4, r0
 5600 0ea0 2C4B     		ldr	r3, .L390+48
 5601 0ea2 1B68     		ldr	r3, [r3]
 5602 0ea4 1846     		mov	r0, r3
 5603 0ea6 FFF7FEFF 		bl	__aeabi_i2f
 5604 0eaa 0346     		mov	r3, r0
 5605 0eac 1946     		mov	r1, r3
 5606 0eae 2046     		mov	r0, r4
 5607 0eb0 FFF7FEFF 		bl	__aeabi_fdiv
 5608 0eb4 0346     		mov	r3, r0
 5609 0eb6 1C46     		mov	r4, r3
 5610 0eb8 1B4B     		ldr	r3, .L390+4
 5611 0eba B3F8B432 		ldrh	r3, [r3, #692]
 5612 0ebe 1846     		mov	r0, r3
 5613 0ec0 FFF7FEFF 		bl	__aeabi_i2f
 5614 0ec4 0346     		mov	r3, r0
 5615 0ec6 1946     		mov	r1, r3
 5616 0ec8 2046     		mov	r0, r4
 5617 0eca FFF7FEFF 		bl	__aeabi_fmul
 5618 0ece 0346     		mov	r3, r0
 5619 0ed0 1846     		mov	r0, r3
 5620 0ed2 FFF7FEFF 		bl	__aeabi_f2iz
 5621 0ed6 0346     		mov	r3, r0
 5622 0ed8 7B60     		str	r3, [r7, #4]
1627:..\src/interruptions.c ****                 
1628:..\src/interruptions.c ****                 if (interrupt_flag){
 5623              		.loc 1 1628 0
 5624 0eda 124B     		ldr	r3, .L390
 5625 0edc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5626 0ede 002B     		cmp	r3, #0
 5627 0ee0 04D0     		beq	.L344
1629:..\src/interruptions.c ****                     interrupt_flag = FALSE;
 5628              		.loc 1 1629 0
 5629 0ee2 104B     		ldr	r3, .L390
 5630 0ee4 0022     		movs	r2, #0
 5631 0ee6 1A70     		strb	r2, [r3]
1630:..\src/interruptions.c ****                     interrupt_manager();
 5632              		.loc 1 1630 0
 5633 0ee8 FFF7FEFF 		bl	interrupt_manager
 5634              	.L344:
1631:..\src/interruptions.c ****                 }
1632:..\src/interruptions.c **** 
1633:..\src/interruptions.c ****                 //Saturation
1634:..\src/interruptions.c ****                 if (i_aux < -1024)
 5635              		.loc 1 1634 0
 5636 0eec 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 131


 5637 0eee 13F5806F 		cmn	r3, #1024
 5638 0ef2 01DA     		bge	.L345
1635:..\src/interruptions.c ****                     i_aux = -1024;
 5639              		.loc 1 1635 0
 5640 0ef4 104B     		ldr	r3, .L390+20
 5641 0ef6 7B60     		str	r3, [r7, #4]
 5642              	.L345:
1636:..\src/interruptions.c ****                 if (i_aux > 1024)
 5643              		.loc 1 1636 0
 5644 0ef8 7B68     		ldr	r3, [r7, #4]
 5645 0efa B3F5806F 		cmp	r3, #1024
 5646 0efe 02DD     		ble	.L346
1637:..\src/interruptions.c ****                     i_aux = 1024;
 5647              		.loc 1 1637 0
 5648 0f00 4FF48063 		mov	r3, #1024
 5649 0f04 7B60     		str	r3, [r7, #4]
 5650              	.L346:
1638:..\src/interruptions.c **** 
1639:..\src/interruptions.c ****                 if (interrupt_flag){
 5651              		.loc 1 1639 0
 5652 0f06 074B     		ldr	r3, .L390
 5653 0f08 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5654 0f0a 002B     		cmp	r3, #0
 5655 0f0c 04D0     		beq	.L347
1640:..\src/interruptions.c ****                     interrupt_flag = FALSE;
 5656              		.loc 1 1640 0
 5657 0f0e 054B     		ldr	r3, .L390
 5658 0f10 0022     		movs	r2, #0
 5659 0f12 1A70     		strb	r2, [r3]
1641:..\src/interruptions.c ****                     interrupt_manager();
 5660              		.loc 1 1641 0
 5661 0f14 FFF7FEFF 		bl	interrupt_manager
 5662              	.L347:
1642:..\src/interruptions.c ****                 }
1643:..\src/interruptions.c **** 
1644:..\src/interruptions.c ****                 g_adc_meas.joystick[0] = (int16) i_aux;
 5663              		.loc 1 1644 0
 5664 0f18 7B68     		ldr	r3, [r7, #4]
 5665 0f1a 1BB2     		sxth	r3, r3
 5666 0f1c 1A46     		mov	r2, r3
 5667 0f1e 074B     		ldr	r3, .L390+24
 5668 0f20 1A62     		str	r2, [r3, #32]
1645:..\src/interruptions.c **** 
1646:..\src/interruptions.c ****             break;
 5669              		.loc 1 1646 0
 5670 0f22 7FE0     		b	.L337
 5671              	.L391:
 5672              		.align	2
 5673              	.L390:
 5674 0f24 00000000 		.word	interrupt_flag
 5675 0f28 00000000 		.word	c_mem
 5676 0f2c 00000000 		.word	joy_UD_status
 5677 0f30 00000000 		.word	ADC_buf
 5678 0f34 2C010000 		.word	UD_mean_value.10578
 5679 0f38 00FCFFFF 		.word	-1024
 5680 0f3c 00000000 		.word	g_adc_meas
 5681 0f40 30010000 		.word	UD_counter.10576
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 132


 5682 0f44 1F85EB51 		.word	1374389535
 5683 0f48 00000000 		.word	emg_1_status
 5684 0f4c 00000000 		.word	emg_2_status
 5685 0f50 00000000 		.word	joy_LR_status
 5686 0f54 34010000 		.word	LR_mean_value.10579
 5687              	.L340:
1647:..\src/interruptions.c **** 
1648:..\src/interruptions.c ****             case RESET: // reset variables
1649:..\src/interruptions.c ****                 LR_counter = 0;
 5688              		.loc 1 1649 0
 5689 0f58 644B     		ldr	r3, .L392
 5690 0f5a 0022     		movs	r2, #0
 5691 0f5c 1A80     		strh	r2, [r3]	@ movhi
1650:..\src/interruptions.c ****                 LR_mean_value = 0;
 5692              		.loc 1 1650 0
 5693 0f5e 644B     		ldr	r3, .L392+4
 5694 0f60 0022     		movs	r2, #0
 5695 0f62 1A60     		str	r2, [r3]
1651:..\src/interruptions.c ****                 joy_LR_status = WAIT; // goes waiting for all conversions to be done
 5696              		.loc 1 1651 0
 5697 0f64 634B     		ldr	r3, .L392+8
 5698 0f66 0422     		movs	r2, #4
 5699 0f68 1A70     		strb	r2, [r3]
1652:..\src/interruptions.c ****             break;
 5700              		.loc 1 1652 0
 5701 0f6a 5BE0     		b	.L337
 5702              	.L341:
1653:..\src/interruptions.c **** 
1654:..\src/interruptions.c ****             case DISCARD: // discard first EMG_SAMPLE_TO_DISCARD samples8
1655:..\src/interruptions.c ****                 LR_counter++;
 5703              		.loc 1 1655 0
 5704 0f6c 5F4B     		ldr	r3, .L392
 5705 0f6e 1B88     		ldrh	r3, [r3]
 5706 0f70 0133     		adds	r3, r3, #1
 5707 0f72 9AB2     		uxth	r2, r3
 5708 0f74 5D4B     		ldr	r3, .L392
 5709 0f76 1A80     		strh	r2, [r3]	@ movhi
1656:..\src/interruptions.c ****                 if (LR_counter == JOYSTICK_SAMPLE_TO_DISCARD) {
 5710              		.loc 1 1656 0
 5711 0f78 5C4B     		ldr	r3, .L392
 5712 0f7a 1B88     		ldrh	r3, [r3]
 5713 0f7c 642B     		cmp	r3, #100
 5714 0f7e 4CD1     		bne	.L376
1657:..\src/interruptions.c ****                     LR_counter = 0;                     // reset counter
 5715              		.loc 1 1657 0
 5716 0f80 5A4B     		ldr	r3, .L392
 5717 0f82 0022     		movs	r2, #0
 5718 0f84 1A80     		strh	r2, [r3]	@ movhi
1658:..\src/interruptions.c **** 
1659:..\src/interruptions.c ****                     if (interrupt_flag){
 5719              		.loc 1 1659 0
 5720 0f86 5C4B     		ldr	r3, .L392+12
 5721 0f88 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5722 0f8a 002B     		cmp	r3, #0
 5723 0f8c 04D0     		beq	.L349
1660:..\src/interruptions.c ****                         interrupt_flag = FALSE;
 5724              		.loc 1 1660 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 133


 5725 0f8e 5A4B     		ldr	r3, .L392+12
 5726 0f90 0022     		movs	r2, #0
 5727 0f92 1A70     		strb	r2, [r3]
1661:..\src/interruptions.c ****                         interrupt_manager();
 5728              		.loc 1 1661 0
 5729 0f94 FFF7FEFF 		bl	interrupt_manager
 5730              	.L349:
1662:..\src/interruptions.c ****                     }
1663:..\src/interruptions.c **** 
1664:..\src/interruptions.c ****                     joy_LR_status = SUM_AND_MEAN;           // sum and mean status
 5731              		.loc 1 1664 0
 5732 0f98 564B     		ldr	r3, .L392+8
 5733 0f9a 0322     		movs	r2, #3
 5734 0f9c 1A70     		strb	r2, [r3]
1665:..\src/interruptions.c ****                 }
1666:..\src/interruptions.c ****             break;
 5735              		.loc 1 1666 0
 5736 0f9e 3CE0     		b	.L376
 5737              	.L342:
1667:..\src/interruptions.c **** 
1668:..\src/interruptions.c ****             case SUM_AND_MEAN: // sum first SAMPLES_FOR_EMG_MEAN samples
1669:..\src/interruptions.c ****                 // NOTE max(value)*SAMPLES_FOR_EMG_MEAN must fit in 32bit
1670:..\src/interruptions.c ****                 LR_counter++;
 5738              		.loc 1 1670 0
 5739 0fa0 524B     		ldr	r3, .L392
 5740 0fa2 1B88     		ldrh	r3, [r3]
 5741 0fa4 0133     		adds	r3, r3, #1
 5742 0fa6 9AB2     		uxth	r2, r3
 5743 0fa8 504B     		ldr	r3, .L392
 5744 0faa 1A80     		strh	r2, [r3]	@ movhi
1671:..\src/interruptions.c ****                 LR_mean_value += (int32)(ADC_buf[3]);
 5745              		.loc 1 1671 0
 5746 0fac 534B     		ldr	r3, .L392+16
 5747 0fae B3F90630 		ldrsh	r3, [r3, #6]
 5748 0fb2 1A46     		mov	r2, r3
 5749 0fb4 4E4B     		ldr	r3, .L392+4
 5750 0fb6 1B68     		ldr	r3, [r3]
 5751 0fb8 1344     		add	r3, r3, r2
 5752 0fba 4D4A     		ldr	r2, .L392+4
 5753 0fbc 1360     		str	r3, [r2]
1672:..\src/interruptions.c ****                 if (LR_counter == SAMPLES_FOR_JOYSTICK_MEAN) {
 5754              		.loc 1 1672 0
 5755 0fbe 4B4B     		ldr	r3, .L392
 5756 0fc0 1B88     		ldrh	r3, [r3]
 5757 0fc2 C82B     		cmp	r3, #200
 5758 0fc4 2BD1     		bne	.L377
1673:..\src/interruptions.c ****                     LR_mean_value = LR_mean_value / SAMPLES_FOR_JOYSTICK_MEAN; // calc mean
 5759              		.loc 1 1673 0
 5760 0fc6 4A4B     		ldr	r3, .L392+4
 5761 0fc8 1B68     		ldr	r3, [r3]
 5762 0fca 4D4A     		ldr	r2, .L392+20
 5763 0fcc 82FB0312 		smull	r1, r2, r2, r3
 5764 0fd0 9211     		asrs	r2, r2, #6
 5765 0fd2 DB17     		asrs	r3, r3, #31
 5766 0fd4 D31A     		subs	r3, r2, r3
 5767 0fd6 464A     		ldr	r2, .L392+4
 5768 0fd8 1360     		str	r3, [r2]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 134


1674:..\src/interruptions.c ****                     
1675:..\src/interruptions.c ****                     if (interrupt_flag){
 5769              		.loc 1 1675 0
 5770 0fda 474B     		ldr	r3, .L392+12
 5771 0fdc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5772 0fde 002B     		cmp	r3, #0
 5773 0fe0 04D0     		beq	.L351
1676:..\src/interruptions.c ****                         interrupt_flag = FALSE;
 5774              		.loc 1 1676 0
 5775 0fe2 454B     		ldr	r3, .L392+12
 5776 0fe4 0022     		movs	r2, #0
 5777 0fe6 1A70     		strb	r2, [r3]
1677:..\src/interruptions.c ****                         interrupt_manager();
 5778              		.loc 1 1677 0
 5779 0fe8 FFF7FEFF 		bl	interrupt_manager
 5780              	.L351:
1678:..\src/interruptions.c ****                     }
1679:..\src/interruptions.c **** 
1680:..\src/interruptions.c ****                     LR_counter = 0;               // reset counter
 5781              		.loc 1 1680 0
 5782 0fec 3F4B     		ldr	r3, .L392
 5783 0fee 0022     		movs	r2, #0
 5784 0ff0 1A80     		strh	r2, [r3]	@ movhi
1681:..\src/interruptions.c ****                     joy_LR_status = NORMAL;           // goto normal execution
 5785              		.loc 1 1681 0
 5786 0ff2 404B     		ldr	r3, .L392+8
 5787 0ff4 0022     		movs	r2, #0
 5788 0ff6 1A70     		strb	r2, [r3]
1682:..\src/interruptions.c ****                 }
1683:..\src/interruptions.c ****             break;
 5789              		.loc 1 1683 0
 5790 0ff8 11E0     		b	.L377
 5791              	.L343:
1684:..\src/interruptions.c **** 
1685:..\src/interruptions.c ****             case WAIT: case WAIT_EoC:
1686:..\src/interruptions.c ****                 if(emg_1_status == NORMAL && emg_2_status == NORMAL && joy_UD_status == NORMAL)
 5792              		.loc 1 1686 0
 5793 0ffa 424B     		ldr	r3, .L392+24
 5794 0ffc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5795 0ffe 002B     		cmp	r3, #0
 5796 1000 0FD1     		bne	.L378
 5797              		.loc 1 1686 0 is_stmt 0 discriminator 1
 5798 1002 414B     		ldr	r3, .L392+28
 5799 1004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5800 1006 002B     		cmp	r3, #0
 5801 1008 0BD1     		bne	.L378
 5802              		.loc 1 1686 0 discriminator 2
 5803 100a 404B     		ldr	r3, .L392+32
 5804 100c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5805 100e 002B     		cmp	r3, #0
 5806 1010 07D1     		bne	.L378
1687:..\src/interruptions.c ****                     joy_LR_status = DISCARD;
 5807              		.loc 1 1687 0 is_stmt 1
 5808 1012 384B     		ldr	r3, .L392+8
 5809 1014 0222     		movs	r2, #2
 5810 1016 1A70     		strb	r2, [r3]
1688:..\src/interruptions.c ****             break;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 135


 5811              		.loc 1 1688 0
 5812 1018 03E0     		b	.L378
 5813              	.L376:
1666:..\src/interruptions.c **** 
 5814              		.loc 1 1666 0
 5815 101a 00BF     		nop
 5816 101c 02E0     		b	.L337
 5817              	.L377:
1683:..\src/interruptions.c **** 
 5818              		.loc 1 1683 0
 5819 101e 00BF     		nop
 5820 1020 00E0     		b	.L337
 5821              	.L378:
 5822              		.loc 1 1688 0
 5823 1022 00BF     		nop
 5824              	.L337:
1689:..\src/interruptions.c ****         }
1690:..\src/interruptions.c ****        
1691:..\src/interruptions.c ****         if (interrupt_flag){
 5825              		.loc 1 1691 0
 5826 1024 344B     		ldr	r3, .L392+12
 5827 1026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5828 1028 002B     		cmp	r3, #0
 5829 102a 04D0     		beq	.L318
1692:..\src/interruptions.c ****             interrupt_flag = FALSE;
 5830              		.loc 1 1692 0
 5831 102c 324B     		ldr	r3, .L392+12
 5832 102e 0022     		movs	r2, #0
 5833 1030 1A70     		strb	r2, [r3]
1693:..\src/interruptions.c ****             interrupt_manager();
 5834              		.loc 1 1693 0
 5835 1032 FFF7FEFF 		bl	interrupt_manager
 5836              	.L318:
1694:..\src/interruptions.c ****         }
1695:..\src/interruptions.c ****     }
1696:..\src/interruptions.c ****     
1697:..\src/interruptions.c ****     // Read also EMG additional sensors port
1698:..\src/interruptions.c ****     if (NUM_OF_ANALOG_INPUTS > 6) {
 5837              		.loc 1 1698 0
 5838 1036 364B     		ldr	r3, .L392+36
 5839 1038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5840 103a 062B     		cmp	r3, #6
 5841 103c 52D9     		bls	.L379
1699:..\src/interruptions.c ****         
1700:..\src/interruptions.c ****         for (idx = 0; idx < NUM_OF_ADDITIONAL_EMGS; idx++){
 5842              		.loc 1 1700 0
 5843 103e 354B     		ldr	r3, .L392+40
 5844 1040 0022     		movs	r2, #0
 5845 1042 1A70     		strb	r2, [r3]
 5846 1044 4AE0     		b	.L354
 5847              	.L361:
1701:..\src/interruptions.c ****             
1702:..\src/interruptions.c ****             i_aux = (int32)(ADC_buf[6 + idx]);
 5848              		.loc 1 1702 0
 5849 1046 334B     		ldr	r3, .L392+40
 5850 1048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5851 104a 0633     		adds	r3, r3, #6
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 136


 5852 104c 2B4A     		ldr	r2, .L392+16
 5853 104e 32F91330 		ldrsh	r3, [r2, r3, lsl #1]
 5854 1052 7B60     		str	r3, [r7, #4]
1703:..\src/interruptions.c ****             if (i_aux < 0) 
 5855              		.loc 1 1703 0
 5856 1054 7B68     		ldr	r3, [r7, #4]
 5857 1056 002B     		cmp	r3, #0
 5858 1058 01DA     		bge	.L355
1704:..\src/interruptions.c ****                 i_aux = 0;
 5859              		.loc 1 1704 0
 5860 105a 0023     		movs	r3, #0
 5861 105c 7B60     		str	r3, [r7, #4]
 5862              	.L355:
1705:..\src/interruptions.c ****             i_aux = filter(i_aux, &filt_emg[2+idx]);
 5863              		.loc 1 1705 0
 5864 105e 2D4B     		ldr	r3, .L392+40
 5865 1060 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5866 1062 0233     		adds	r3, r3, #2
 5867 1064 DB00     		lsls	r3, r3, #3
 5868 1066 2C4A     		ldr	r2, .L392+44
 5869 1068 1344     		add	r3, r3, r2
 5870 106a 1946     		mov	r1, r3
 5871 106c 7868     		ldr	r0, [r7, #4]
 5872 106e FFF7FEFF 		bl	filter
 5873 1072 7860     		str	r0, [r7, #4]
1706:..\src/interruptions.c ****             i_aux = (i_aux << 10) / 1024;
 5874              		.loc 1 1706 0
 5875 1074 7B68     		ldr	r3, [r7, #4]
 5876 1076 9B02     		lsls	r3, r3, #10
 5877 1078 002B     		cmp	r3, #0
 5878 107a 01DA     		bge	.L356
 5879 107c 03F2FF33 		addw	r3, r3, #1023
 5880              	.L356:
 5881 1080 9B12     		asrs	r3, r3, #10
 5882 1082 7B60     		str	r3, [r7, #4]
1707:..\src/interruptions.c **** 
1708:..\src/interruptions.c ****             if (interrupt_flag){
 5883              		.loc 1 1708 0
 5884 1084 1C4B     		ldr	r3, .L392+12
 5885 1086 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5886 1088 002B     		cmp	r3, #0
 5887 108a 04D0     		beq	.L357
1709:..\src/interruptions.c ****                 interrupt_flag = FALSE;
 5888              		.loc 1 1709 0
 5889 108c 1A4B     		ldr	r3, .L392+12
 5890 108e 0022     		movs	r2, #0
 5891 1090 1A70     		strb	r2, [r3]
1710:..\src/interruptions.c ****                 interrupt_manager();
 5892              		.loc 1 1710 0
 5893 1092 FFF7FEFF 		bl	interrupt_manager
 5894              	.L357:
1711:..\src/interruptions.c ****             }
1712:..\src/interruptions.c ****             //Saturation
1713:..\src/interruptions.c ****             if (i_aux < 0)
 5895              		.loc 1 1713 0
 5896 1096 7B68     		ldr	r3, [r7, #4]
 5897 1098 002B     		cmp	r3, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 137


 5898 109a 02DA     		bge	.L358
1714:..\src/interruptions.c ****                 i_aux = 0;
 5899              		.loc 1 1714 0
 5900 109c 0023     		movs	r3, #0
 5901 109e 7B60     		str	r3, [r7, #4]
 5902 10a0 06E0     		b	.L359
 5903              	.L358:
1715:..\src/interruptions.c ****             else 
1716:..\src/interruptions.c ****                 if (i_aux > 1024) 
 5904              		.loc 1 1716 0
 5905 10a2 7B68     		ldr	r3, [r7, #4]
 5906 10a4 B3F5806F 		cmp	r3, #1024
 5907 10a8 02DD     		ble	.L359
1717:..\src/interruptions.c ****                     i_aux = 1024;
 5908              		.loc 1 1717 0
 5909 10aa 4FF48063 		mov	r3, #1024
 5910 10ae 7B60     		str	r3, [r7, #4]
 5911              	.L359:
1718:..\src/interruptions.c ****             
1719:..\src/interruptions.c ****             g_adc_meas.add_emg[idx] = i_aux;
 5912              		.loc 1 1719 0
 5913 10b0 184B     		ldr	r3, .L392+40
 5914 10b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5915 10b4 1949     		ldr	r1, .L392+48
 5916 10b6 0233     		adds	r3, r3, #2
 5917 10b8 7A68     		ldr	r2, [r7, #4]
 5918 10ba 41F82320 		str	r2, [r1, r3, lsl #2]
1720:..\src/interruptions.c **** 
1721:..\src/interruptions.c ****             if (interrupt_flag){
 5919              		.loc 1 1721 0
 5920 10be 0E4B     		ldr	r3, .L392+12
 5921 10c0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5922 10c2 002B     		cmp	r3, #0
 5923 10c4 04D0     		beq	.L360
1722:..\src/interruptions.c ****                 interrupt_flag = FALSE;
 5924              		.loc 1 1722 0
 5925 10c6 0C4B     		ldr	r3, .L392+12
 5926 10c8 0022     		movs	r2, #0
 5927 10ca 1A70     		strb	r2, [r3]
1723:..\src/interruptions.c ****                 interrupt_manager();
 5928              		.loc 1 1723 0
 5929 10cc FFF7FEFF 		bl	interrupt_manager
 5930              	.L360:
1700:..\src/interruptions.c ****             
 5931              		.loc 1 1700 0 discriminator 2
 5932 10d0 104B     		ldr	r3, .L392+40
 5933 10d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5934 10d4 0133     		adds	r3, r3, #1
 5935 10d6 DAB2     		uxtb	r2, r3
 5936 10d8 0E4B     		ldr	r3, .L392+40
 5937 10da 1A70     		strb	r2, [r3]
 5938              	.L354:
1700:..\src/interruptions.c ****             
 5939              		.loc 1 1700 0 is_stmt 0 discriminator 1
 5940 10dc 0D4B     		ldr	r3, .L392+40
 5941 10de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5942 10e0 052B     		cmp	r3, #5
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 138


 5943 10e2 B0D9     		bls	.L361
 5944              	.L379:
1724:..\src/interruptions.c ****             }
1725:..\src/interruptions.c ****         }
1726:..\src/interruptions.c ****     }
1727:..\src/interruptions.c ****     
1728:..\src/interruptions.c **** }
 5945              		.loc 1 1728 0 is_stmt 1
 5946 10e4 00BF     		nop
 5947 10e6 0C37     		adds	r7, r7, #12
 5948              		.cfi_def_cfa_offset 20
 5949 10e8 BD46     		mov	sp, r7
 5950              		.cfi_def_cfa_register 13
 5951              		@ sp needed
 5952 10ea F0BD     		pop	{r4, r5, r6, r7, pc}
 5953              	.L393:
 5954              		.align	2
 5955              	.L392:
 5956 10ec 38010000 		.word	LR_counter.10577
 5957 10f0 34010000 		.word	LR_mean_value.10579
 5958 10f4 00000000 		.word	joy_LR_status
 5959 10f8 00000000 		.word	interrupt_flag
 5960 10fc 00000000 		.word	ADC_buf
 5961 1100 1F85EB51 		.word	1374389535
 5962 1104 00000000 		.word	emg_1_status
 5963 1108 00000000 		.word	emg_2_status
 5964 110c 00000000 		.word	joy_UD_status
 5965 1110 00000000 		.word	NUM_OF_ANALOG_INPUTS
 5966 1114 22010000 		.word	idx.10584
 5967 1118 00000000 		.word	filt_emg
 5968 111c 00000000 		.word	g_adc_meas
 5969              		.cfi_endproc
 5970              	.LFE73:
 5971              		.size	analog_read_end, .-analog_read_end
 5972              		.global	__aeabi_ui2f
 5973              		.global	__aeabi_f2d
 5974              		.global	__aeabi_ddiv
 5975              		.global	__aeabi_dcmpgt
 5976              		.section	.text.cycles_counter_update,"ax",%progbits
 5977              		.align	2
 5978              		.global	cycles_counter_update
 5979              		.thumb
 5980              		.thumb_func
 5981              		.type	cycles_counter_update, %function
 5982              	cycles_counter_update:
 5983              	.LFB74:
1729:..\src/interruptions.c **** 
1730:..\src/interruptions.c **** //==============================================================================
1731:..\src/interruptions.c **** //                                                         CYCLES COUNTER UPDATE
1732:..\src/interruptions.c **** //==============================================================================
1733:..\src/interruptions.c **** 
1734:..\src/interruptions.c **** void cycles_counter_update() {
 5984              		.loc 1 1734 0
 5985              		.cfi_startproc
 5986              		@ args = 0, pretend = 0, frame = 24
 5987              		@ frame_needed = 1, uses_anonymous_args = 0
 5988 0000 90B5     		push	{r4, r7, lr}
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 139


 5989              		.cfi_def_cfa_offset 12
 5990              		.cfi_offset 4, -12
 5991              		.cfi_offset 7, -8
 5992              		.cfi_offset 14, -4
 5993 0002 87B0     		sub	sp, sp, #28
 5994              		.cfi_def_cfa_offset 40
 5995 0004 00AF     		add	r7, sp, #0
 5996              		.cfi_def_cfa_register 7
1735:..\src/interruptions.c **** 	static uint8 pos_cycle_status = STATE_INACTIVE;
1736:..\src/interruptions.c ****     static uint8 emg_cycle_status[2] = {STATE_INACTIVE, STATE_INACTIVE};
1737:..\src/interruptions.c ****     static uint8 motion_status[2] = {STATE_INACTIVE, STATE_INACTIVE};
1738:..\src/interruptions.c ****     static uint8 emg_excess_status[2] = {STATE_INACTIVE, STATE_INACTIVE};
1739:..\src/interruptions.c ****     static uint8 rest_cycle_status = STATE_INACTIVE;
1740:..\src/interruptions.c ****     static int32 bin_threshold = 250;
1741:..\src/interruptions.c ****     static int32 exc_act_thr = 980; //0.95*1024
1742:..\src/interruptions.c ****     static int32 thr_pos = 0;
1743:..\src/interruptions.c ****     static int32 max_pos = 0;
1744:..\src/interruptions.c ****     uint8 i, bin_st, bin_max, bin_1, bin_2;
1745:..\src/interruptions.c ****     int32 curr_pos = 0, curr_off = 0, curr_ref = 0;
 5997              		.loc 1 1745 0
 5998 0006 0023     		movs	r3, #0
 5999 0008 FB60     		str	r3, [r7, #12]
 6000 000a 0023     		movs	r3, #0
 6001 000c BB60     		str	r3, [r7, #8]
 6002 000e 0023     		movs	r3, #0
 6003 0010 3B61     		str	r3, [r7, #16]
1746:..\src/interruptions.c ****     int32 step;
1747:..\src/interruptions.c ****     static uint32 timer_value_s, timer_value_e;
1748:..\src/interruptions.c ****     static uint32 timer_exc_s[2], timer_exc_e[2];
1749:..\src/interruptions.c ****     static int32 start_emg_pos[2] = {0,0};
1750:..\src/interruptions.c **** 
1751:..\src/interruptions.c ****     curr_pos = (int32)(g_meas[g_mem.motor[0].encoder_line].pos[0] >> g_mem.enc[g_mem.motor[0].encod
 6004              		.loc 1 1751 0
 6005 0012 A64B     		ldr	r3, .L472
 6006 0014 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 6007 0018 1946     		mov	r1, r3
 6008 001a A54A     		ldr	r2, .L472+4
 6009 001c 3423     		movs	r3, #52
 6010 001e 03FB01F3 		mul	r3, r3, r1
 6011 0022 1344     		add	r3, r3, r2
 6012 0024 1A68     		ldr	r2, [r3]
 6013 0026 A14B     		ldr	r3, .L472
 6014 0028 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 6015 002c 1846     		mov	r0, r3
 6016 002e 9F49     		ldr	r1, .L472
 6017 0030 0346     		mov	r3, r0
 6018 0032 5B00     		lsls	r3, r3, #1
 6019 0034 0344     		add	r3, r3, r0
 6020 0036 1B01     		lsls	r3, r3, #4
 6021 0038 0B44     		add	r3, r3, r1
 6022 003a 03F29513 		addw	r3, r3, #405
 6023 003e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6024 0040 42FA03F3 		asr	r3, r2, r3
 6025 0044 FB60     		str	r3, [r7, #12]
1752:..\src/interruptions.c ****         
1753:..\src/interruptions.c ****     // State machine - Evaluate position counter update
1754:..\src/interruptions.c ****     switch (pos_cycle_status){
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 140


 6026              		.loc 1 1754 0
 6027 0046 9B4B     		ldr	r3, .L472+8
 6028 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6029 004a 012B     		cmp	r3, #1
 6030 004c 3DD0     		beq	.L396
 6031 004e 022B     		cmp	r3, #2
 6032 0050 74D0     		beq	.L397
 6033 0052 002B     		cmp	r3, #0
 6034 0054 40F02781 		bne	.L395
1755:..\src/interruptions.c ****         case STATE_INACTIVE:
1756:..\src/interruptions.c ****             if ((g_mem.motor[0].input_mode != INPUT_MODE_EMG_PROPORTIONAL_NC && pwm_sign[0] == 1) |
 6035              		.loc 1 1756 0
 6036 0058 944B     		ldr	r3, .L472
 6037 005a 93F80E31 		ldrb	r3, [r3, #270]	@ zero_extendqisi2
 6038 005e 072B     		cmp	r3, #7
 6039 0060 04D0     		beq	.L399
 6040              		.loc 1 1756 0 is_stmt 0 discriminator 1
 6041 0062 954B     		ldr	r3, .L472+12
 6042 0064 93F90030 		ldrsb	r3, [r3]
 6043 0068 012B     		cmp	r3, #1
 6044 006a 0CD0     		beq	.L400
 6045              	.L399:
 6046              		.loc 1 1756 0 discriminator 3
 6047 006c 8F4B     		ldr	r3, .L472
 6048 006e 93F80E31 		ldrb	r3, [r3, #270]	@ zero_extendqisi2
 6049 0072 072B     		cmp	r3, #7
 6050 0074 40F01481 		bne	.L462
 6051              		.loc 1 1756 0 discriminator 4
 6052 0078 8F4B     		ldr	r3, .L472+12
 6053 007a 93F90030 		ldrsb	r3, [r3]
 6054 007e B3F1FF3F 		cmp	r3, #-1
 6055 0082 40F00D81 		bne	.L462
 6056              	.L400:
1757:..\src/interruptions.c ****                 thr_pos = curr_pos; 
 6057              		.loc 1 1757 0 is_stmt 1
 6058 0086 8D4A     		ldr	r2, .L472+16
 6059 0088 FB68     		ldr	r3, [r7, #12]
 6060 008a 1360     		str	r3, [r2]
1758:..\src/interruptions.c ****                 curr_off = (max_pos>thr_pos)?(max_pos-thr_pos):(thr_pos-max_pos);
 6061              		.loc 1 1758 0
 6062 008c 8C4B     		ldr	r3, .L472+20
 6063 008e 1A68     		ldr	r2, [r3]
 6064 0090 8A4B     		ldr	r3, .L472+16
 6065 0092 1B68     		ldr	r3, [r3]
 6066 0094 9A42     		cmp	r2, r3
 6067 0096 05DD     		ble	.L402
 6068              		.loc 1 1758 0 is_stmt 0 discriminator 1
 6069 0098 894B     		ldr	r3, .L472+20
 6070 009a 1A68     		ldr	r2, [r3]
 6071 009c 874B     		ldr	r3, .L472+16
 6072 009e 1B68     		ldr	r3, [r3]
 6073 00a0 D31A     		subs	r3, r2, r3
 6074 00a2 04E0     		b	.L403
 6075              	.L402:
 6076              		.loc 1 1758 0 discriminator 2
 6077 00a4 854B     		ldr	r3, .L472+16
 6078 00a6 1A68     		ldr	r2, [r3]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 141


 6079 00a8 854B     		ldr	r3, .L472+20
 6080 00aa 1B68     		ldr	r3, [r3]
 6081 00ac D31A     		subs	r3, r2, r3
 6082              	.L403:
 6083              		.loc 1 1758 0 discriminator 4
 6084 00ae BB60     		str	r3, [r7, #8]
1759:..\src/interruptions.c ****                 if (curr_off > 20){    // it has to be a sensible movement to update counter (to av
 6085              		.loc 1 1759 0 is_stmt 1 discriminator 4
 6086 00b0 BB68     		ldr	r3, [r7, #8]
 6087 00b2 142B     		cmp	r3, #20
 6088 00b4 05DD     		ble	.L404
1760:..\src/interruptions.c ****                     g_mem.cnt.wire_disp = g_mem.cnt.wire_disp + curr_off;     //sum opening track
 6089              		.loc 1 1760 0
 6090 00b6 7D4B     		ldr	r3, .L472
 6091 00b8 5A6D     		ldr	r2, [r3, #84]
 6092 00ba BB68     		ldr	r3, [r7, #8]
 6093 00bc 1344     		add	r3, r3, r2
 6094 00be 7B4A     		ldr	r2, .L472
 6095 00c0 5365     		str	r3, [r2, #84]
 6096              	.L404:
1761:..\src/interruptions.c ****                 }
1762:..\src/interruptions.c ****                 pos_cycle_status = STATE_ACTIVE;
 6097              		.loc 1 1762 0
 6098 00c2 7C4B     		ldr	r3, .L472+8
 6099 00c4 0122     		movs	r2, #1
 6100 00c6 1A70     		strb	r2, [r3]
1763:..\src/interruptions.c ****             }
1764:..\src/interruptions.c ****             break;
 6101              		.loc 1 1764 0
 6102 00c8 EAE0     		b	.L462
 6103              	.L396:
1765:..\src/interruptions.c ****         case STATE_ACTIVE:
1766:..\src/interruptions.c ****             if ((g_mem.motor[0].input_mode != INPUT_MODE_EMG_PROPORTIONAL_NC && pwm_sign[0] == -1) 
 6104              		.loc 1 1766 0
 6105 00ca 784B     		ldr	r3, .L472
 6106 00cc 93F80E31 		ldrb	r3, [r3, #270]	@ zero_extendqisi2
 6107 00d0 072B     		cmp	r3, #7
 6108 00d2 05D0     		beq	.L405
 6109              		.loc 1 1766 0 is_stmt 0 discriminator 1
 6110 00d4 784B     		ldr	r3, .L472+12
 6111 00d6 93F90030 		ldrsb	r3, [r3]
 6112 00da B3F1FF3F 		cmp	r3, #-1
 6113 00de 0BD0     		beq	.L406
 6114              	.L405:
 6115              		.loc 1 1766 0 discriminator 3
 6116 00e0 724B     		ldr	r3, .L472
 6117 00e2 93F80E31 		ldrb	r3, [r3, #270]	@ zero_extendqisi2
 6118 00e6 072B     		cmp	r3, #7
 6119 00e8 40F0DC80 		bne	.L463
 6120              		.loc 1 1766 0 discriminator 4
 6121 00ec 724B     		ldr	r3, .L472+12
 6122 00ee 93F90030 		ldrsb	r3, [r3]
 6123 00f2 012B     		cmp	r3, #1
 6124 00f4 40F0D680 		bne	.L463
 6125              	.L406:
1767:..\src/interruptions.c ****                 max_pos = curr_pos;
 6126              		.loc 1 1767 0 is_stmt 1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 142


 6127 00f8 714A     		ldr	r2, .L472+20
 6128 00fa FB68     		ldr	r3, [r7, #12]
 6129 00fc 1360     		str	r3, [r2]
1768:..\src/interruptions.c ****                 curr_off = (max_pos>thr_pos)?(max_pos-thr_pos):(thr_pos-max_pos);
 6130              		.loc 1 1768 0
 6131 00fe 704B     		ldr	r3, .L472+20
 6132 0100 1A68     		ldr	r2, [r3]
 6133 0102 6E4B     		ldr	r3, .L472+16
 6134 0104 1B68     		ldr	r3, [r3]
 6135 0106 9A42     		cmp	r2, r3
 6136 0108 05DD     		ble	.L408
 6137              		.loc 1 1768 0 is_stmt 0 discriminator 1
 6138 010a 6D4B     		ldr	r3, .L472+20
 6139 010c 1A68     		ldr	r2, [r3]
 6140 010e 6B4B     		ldr	r3, .L472+16
 6141 0110 1B68     		ldr	r3, [r3]
 6142 0112 D31A     		subs	r3, r2, r3
 6143 0114 04E0     		b	.L409
 6144              	.L408:
 6145              		.loc 1 1768 0 discriminator 2
 6146 0116 694B     		ldr	r3, .L472+16
 6147 0118 1A68     		ldr	r2, [r3]
 6148 011a 694B     		ldr	r3, .L472+20
 6149 011c 1B68     		ldr	r3, [r3]
 6150 011e D31A     		subs	r3, r2, r3
 6151              	.L409:
 6152              		.loc 1 1768 0 discriminator 4
 6153 0120 BB60     		str	r3, [r7, #8]
1769:..\src/interruptions.c ****                 if (curr_off > 20){    // it has to be a sensible movement to update counter (to av
 6154              		.loc 1 1769 0 is_stmt 1 discriminator 4
 6155 0122 BB68     		ldr	r3, [r7, #8]
 6156 0124 142B     		cmp	r3, #20
 6157 0126 05DD     		ble	.L410
1770:..\src/interruptions.c ****                    g_mem.cnt.wire_disp = g_mem.cnt.wire_disp + curr_off;     //sum closure track
 6158              		.loc 1 1770 0
 6159 0128 604B     		ldr	r3, .L472
 6160 012a 5A6D     		ldr	r2, [r3, #84]
 6161 012c BB68     		ldr	r3, [r7, #8]
 6162 012e 1344     		add	r3, r3, r2
 6163 0130 5E4A     		ldr	r2, .L472
 6164 0132 5365     		str	r3, [r2, #84]
 6165              	.L410:
1771:..\src/interruptions.c ****                 }
1772:..\src/interruptions.c ****                 pos_cycle_status = COUNTER_INC;
 6166              		.loc 1 1772 0
 6167 0134 5F4B     		ldr	r3, .L472+8
 6168 0136 0222     		movs	r2, #2
 6169 0138 1A70     		strb	r2, [r3]
1773:..\src/interruptions.c ****             }
1774:..\src/interruptions.c ****             break;
 6170              		.loc 1 1774 0
 6171 013a B3E0     		b	.L463
 6172              	.L397:
1775:..\src/interruptions.c ****         case COUNTER_INC:
1776:..\src/interruptions.c **** 
1777:..\src/interruptions.c ****             curr_off = (max_pos>thr_pos)?(max_pos-thr_pos):(thr_pos-max_pos);
 6173              		.loc 1 1777 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 143


 6174 013c 604B     		ldr	r3, .L472+20
 6175 013e 1A68     		ldr	r2, [r3]
 6176 0140 5E4B     		ldr	r3, .L472+16
 6177 0142 1B68     		ldr	r3, [r3]
 6178 0144 9A42     		cmp	r2, r3
 6179 0146 05DD     		ble	.L411
 6180              		.loc 1 1777 0 is_stmt 0 discriminator 1
 6181 0148 5D4B     		ldr	r3, .L472+20
 6182 014a 1A68     		ldr	r2, [r3]
 6183 014c 5B4B     		ldr	r3, .L472+16
 6184 014e 1B68     		ldr	r3, [r3]
 6185 0150 D31A     		subs	r3, r2, r3
 6186 0152 04E0     		b	.L412
 6187              	.L411:
 6188              		.loc 1 1777 0 discriminator 2
 6189 0154 594B     		ldr	r3, .L472+16
 6190 0156 1A68     		ldr	r2, [r3]
 6191 0158 594B     		ldr	r3, .L472+20
 6192 015a 1B68     		ldr	r3, [r3]
 6193 015c D31A     		subs	r3, r2, r3
 6194              	.L412:
 6195              		.loc 1 1777 0 discriminator 4
 6196 015e BB60     		str	r3, [r7, #8]
1778:..\src/interruptions.c ****             if (curr_off > bin_threshold){
 6197              		.loc 1 1778 0 is_stmt 1 discriminator 4
 6198 0160 584B     		ldr	r3, .L472+24
 6199 0162 1B68     		ldr	r3, [r3]
 6200 0164 BA68     		ldr	r2, [r7, #8]
 6201 0166 9A42     		cmp	r2, r3
 6202 0168 40F39680 		ble	.L413
1779:..\src/interruptions.c ****                 //update position histogram
1780:..\src/interruptions.c ****                 step = ((int32)(g_mem.motor[0].pos_lim_sup >> g_mem.enc[g_mem.motor[0].encoder_line
 6203              		.loc 1 1780 0
 6204 016c 4F4B     		ldr	r3, .L472
 6205 016e D3F8E820 		ldr	r2, [r3, #232]
 6206 0172 4E4B     		ldr	r3, .L472
 6207 0174 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 6208 0178 1846     		mov	r0, r3
 6209 017a 4C49     		ldr	r1, .L472
 6210 017c 0346     		mov	r3, r0
 6211 017e 5B00     		lsls	r3, r3, #1
 6212 0180 0344     		add	r3, r3, r0
 6213 0182 1B01     		lsls	r3, r3, #4
 6214 0184 0B44     		add	r3, r3, r1
 6215 0186 03F29513 		addw	r3, r3, #405
 6216 018a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6217 018c 42FA03F3 		asr	r3, r2, r3
 6218 0190 4D4A     		ldr	r2, .L472+28
 6219 0192 82FB0312 		smull	r1, r2, r2, r3
 6220 0196 9210     		asrs	r2, r2, #2
 6221 0198 DB17     		asrs	r3, r3, #31
 6222 019a D31A     		subs	r3, r2, r3
 6223 019c 7B60     		str	r3, [r7, #4]
1781:..\src/interruptions.c ****                 bin_st  = (uint8)(thr_pos/step);
 6224              		.loc 1 1781 0
 6225 019e 474B     		ldr	r3, .L472+16
 6226 01a0 1A68     		ldr	r2, [r3]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 144


 6227 01a2 7B68     		ldr	r3, [r7, #4]
 6228 01a4 92FBF3F3 		sdiv	r3, r2, r3
 6229 01a8 FB70     		strb	r3, [r7, #3]
1782:..\src/interruptions.c ****                 bin_max = (uint8)(max_pos/step);
 6230              		.loc 1 1782 0
 6231 01aa 454B     		ldr	r3, .L472+20
 6232 01ac 1A68     		ldr	r2, [r3]
 6233 01ae 7B68     		ldr	r3, [r7, #4]
 6234 01b0 92FBF3F3 		sdiv	r3, r2, r3
 6235 01b4 BB70     		strb	r3, [r7, #2]
1783:..\src/interruptions.c ****                 
1784:..\src/interruptions.c ****                 // Bin computation valid for both NO and NC working
1785:..\src/interruptions.c ****                 bin_1 = (bin_st<bin_max)?bin_st:bin_max;
 6236              		.loc 1 1785 0
 6237 01b6 BA78     		ldrb	r2, [r7, #2]	@ zero_extendqisi2
 6238 01b8 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 6239 01ba 9342     		cmp	r3, r2
 6240 01bc 28BF     		it	cs
 6241 01be 1346     		movcs	r3, r2
 6242 01c0 7B70     		strb	r3, [r7, #1]
1786:..\src/interruptions.c ****                 bin_2 = (bin_st<bin_max)?bin_max:bin_st;    
 6243              		.loc 1 1786 0
 6244 01c2 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 6245 01c4 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 6246 01c6 9342     		cmp	r3, r2
 6247 01c8 38BF     		it	cc
 6248 01ca 1346     		movcc	r3, r2
 6249 01cc 3B70     		strb	r3, [r7]
1787:..\src/interruptions.c ****                 for (i=bin_1; i<= bin_2 && i <10; i++){
 6250              		.loc 1 1787 0
 6251 01ce 7B78     		ldrb	r3, [r7, #1]
 6252 01d0 FB75     		strb	r3, [r7, #23]
 6253 01d2 0DE0     		b	.L414
 6254              	.L416:
1788:..\src/interruptions.c ****                     //position_hist counts how many times the SoftHand stays in bin while moving
1789:..\src/interruptions.c ****                     g_mem.cnt.position_hist[i] = g_mem.cnt.position_hist[i] + 1;
 6255              		.loc 1 1789 0 discriminator 4
 6256 01d4 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 6257 01d6 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 6258 01d8 3449     		ldr	r1, .L472
 6259 01da 0632     		adds	r2, r2, #6
 6260 01dc 51F82220 		ldr	r2, [r1, r2, lsl #2]
 6261 01e0 0132     		adds	r2, r2, #1
 6262 01e2 3249     		ldr	r1, .L472
 6263 01e4 0633     		adds	r3, r3, #6
 6264 01e6 41F82320 		str	r2, [r1, r3, lsl #2]
1787:..\src/interruptions.c ****                 for (i=bin_1; i<= bin_2 && i <10; i++){
 6265              		.loc 1 1787 0 discriminator 4
 6266 01ea FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 6267 01ec 0133     		adds	r3, r3, #1
 6268 01ee FB75     		strb	r3, [r7, #23]
 6269              	.L414:
1787:..\src/interruptions.c ****                 for (i=bin_1; i<= bin_2 && i <10; i++){
 6270              		.loc 1 1787 0 is_stmt 0 discriminator 1
 6271 01f0 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 6272 01f2 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 6273 01f4 9A42     		cmp	r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 145


 6274 01f6 02D8     		bhi	.L415
1787:..\src/interruptions.c ****                 for (i=bin_1; i<= bin_2 && i <10; i++){
 6275              		.loc 1 1787 0 discriminator 3
 6276 01f8 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 6277 01fa 092B     		cmp	r3, #9
 6278 01fc EAD9     		bls	.L416
 6279              	.L415:
1790:..\src/interruptions.c ****                 }
1791:..\src/interruptions.c ****                 
1792:..\src/interruptions.c ****                 //update current histogram (only positive current measures)
1793:..\src/interruptions.c ****                 step = ((int32)(g_mem.motor[0].current_limit) / 4);
 6280              		.loc 1 1793 0 is_stmt 1
 6281 01fe 2B4B     		ldr	r3, .L472
 6282 0200 B3F90C31 		ldrsh	r3, [r3, #268]
 6283 0204 002B     		cmp	r3, #0
 6284 0206 00DA     		bge	.L417
 6285 0208 0333     		adds	r3, r3, #3
 6286              	.L417:
 6287 020a 9B10     		asrs	r3, r3, #2
 6288 020c 1BB2     		sxth	r3, r3
 6289 020e 7B60     		str	r3, [r7, #4]
1794:..\src/interruptions.c ****                 if (g_mem.motor[0].not_revers_motor_flag == TRUE)
 6290              		.loc 1 1794 0
 6291 0210 264B     		ldr	r3, .L472
 6292 0212 93F81231 		ldrb	r3, [r3, #274]	@ zero_extendqisi2
 6293 0216 012B     		cmp	r3, #1
 6294 0218 0CD1     		bne	.L418
1795:..\src/interruptions.c ****                     curr_ref = g_meas[g_mem.motor[0].encoder_line].hold_curr; 
 6295              		.loc 1 1795 0
 6296 021a 244B     		ldr	r3, .L472
 6297 021c 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 6298 0220 1946     		mov	r1, r3
 6299 0222 234A     		ldr	r2, .L472+4
 6300 0224 3423     		movs	r3, #52
 6301 0226 03FB01F3 		mul	r3, r3, r1
 6302 022a 1344     		add	r3, r3, r2
 6303 022c 1433     		adds	r3, r3, #20
 6304 022e 1B68     		ldr	r3, [r3]
 6305 0230 3B61     		str	r3, [r7, #16]
 6306 0232 0BE0     		b	.L419
 6307              	.L418:
1796:..\src/interruptions.c ****                 else
1797:..\src/interruptions.c ****                     curr_ref = g_meas[g_mem.motor[0].encoder_line].curr;
 6308              		.loc 1 1797 0
 6309 0234 1D4B     		ldr	r3, .L472
 6310 0236 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 6311 023a 1946     		mov	r1, r3
 6312 023c 1C4A     		ldr	r2, .L472+4
 6313 023e 3423     		movs	r3, #52
 6314 0240 03FB01F3 		mul	r3, r3, r1
 6315 0244 1344     		add	r3, r3, r2
 6316 0246 0C33     		adds	r3, r3, #12
 6317 0248 1B68     		ldr	r3, [r3]
 6318 024a 3B61     		str	r3, [r7, #16]
 6319              	.L419:
1798:..\src/interruptions.c **** 
1799:..\src/interruptions.c ****                 if (curr_ref < 0){
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 146


 6320              		.loc 1 1799 0
 6321 024c 3B69     		ldr	r3, [r7, #16]
 6322 024e 002B     		cmp	r3, #0
 6323 0250 02DA     		bge	.L420
1800:..\src/interruptions.c ****                     curr_ref = -curr_ref;       // Invert sign to have a positive current reading i
 6324              		.loc 1 1800 0
 6325 0252 3B69     		ldr	r3, [r7, #16]
 6326 0254 5B42     		negs	r3, r3
 6327 0256 3B61     		str	r3, [r7, #16]
 6328              	.L420:
1801:..\src/interruptions.c ****                 }
1802:..\src/interruptions.c ****                 
1803:..\src/interruptions.c ****                 if (curr_ref > g_mem.motor[0].current_limit)
 6329              		.loc 1 1803 0
 6330 0258 144B     		ldr	r3, .L472
 6331 025a B3F90C31 		ldrsh	r3, [r3, #268]
 6332 025e 1A46     		mov	r2, r3
 6333 0260 3B69     		ldr	r3, [r7, #16]
 6334 0262 9A42     		cmp	r2, r3
 6335 0264 05DA     		bge	.L421
1804:..\src/interruptions.c ****                     g_mem.cnt.current_hist[3] = g_mem.cnt.current_hist[3] + 1; 
 6336              		.loc 1 1804 0
 6337 0266 114B     		ldr	r3, .L472
 6338 0268 DB6C     		ldr	r3, [r3, #76]
 6339 026a 0133     		adds	r3, r3, #1
 6340 026c 0F4A     		ldr	r2, .L472
 6341 026e D364     		str	r3, [r2, #76]
 6342 0270 12E0     		b	.L413
 6343              	.L421:
1805:..\src/interruptions.c ****                 else
1806:..\src/interruptions.c ****                     g_mem.cnt.current_hist[(uint8)(curr_ref/step)] = g_mem.cnt.current_hist[(uint8)
 6344              		.loc 1 1806 0
 6345 0272 3A69     		ldr	r2, [r7, #16]
 6346 0274 7B68     		ldr	r3, [r7, #4]
 6347 0276 92FBF3F3 		sdiv	r3, r2, r3
 6348 027a DBB2     		uxtb	r3, r3
 6349 027c 3969     		ldr	r1, [r7, #16]
 6350 027e 7A68     		ldr	r2, [r7, #4]
 6351 0280 91FBF2F2 		sdiv	r2, r1, r2
 6352 0284 D2B2     		uxtb	r2, r2
 6353 0286 0949     		ldr	r1, .L472
 6354 0288 1032     		adds	r2, r2, #16
 6355 028a 51F82220 		ldr	r2, [r1, r2, lsl #2]
 6356 028e 0132     		adds	r2, r2, #1
 6357 0290 0649     		ldr	r1, .L472
 6358 0292 1033     		adds	r3, r3, #16
 6359 0294 41F82320 		str	r2, [r1, r3, lsl #2]
 6360              	.L413:
1807:..\src/interruptions.c ****             }
1808:..\src/interruptions.c ****             pos_cycle_status = STATE_INACTIVE;
 6361              		.loc 1 1808 0
 6362 0298 064B     		ldr	r3, .L472+8
 6363 029a 0022     		movs	r2, #0
 6364 029c 1A70     		strb	r2, [r3]
1809:..\src/interruptions.c ****             break;
 6365              		.loc 1 1809 0
 6366 029e 02E0     		b	.L395
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 147


 6367              	.L462:
1764:..\src/interruptions.c ****         case STATE_ACTIVE:
 6368              		.loc 1 1764 0
 6369 02a0 00BF     		nop
 6370 02a2 00E0     		b	.L395
 6371              	.L463:
1774:..\src/interruptions.c ****         case COUNTER_INC:
 6372              		.loc 1 1774 0
 6373 02a4 00BF     		nop
 6374              	.L395:
1810:..\src/interruptions.c ****     }
1811:..\src/interruptions.c ****     
1812:..\src/interruptions.c ****     // State machine - Evaluate EMG activation counter update
1813:..\src/interruptions.c ****     for (i=0; i<2 && emg_1_status == NORMAL && emg_2_status == NORMAL; i++){
 6375              		.loc 1 1813 0
 6376 02a6 0023     		movs	r3, #0
 6377 02a8 FB75     		strb	r3, [r7, #23]
 6378 02aa 4FE0     		b	.L422
 6379              	.L473:
 6380              		.align	2
 6381              	.L472:
 6382 02ac 00000000 		.word	g_mem
 6383 02b0 00000000 		.word	g_meas
 6384 02b4 3A010000 		.word	pos_cycle_status.10642
 6385 02b8 00000000 		.word	pwm_sign
 6386 02bc 3C010000 		.word	thr_pos.10649
 6387 02c0 40010000 		.word	max_pos.10650
 6388 02c4 10000000 		.word	bin_threshold.10647
 6389 02c8 67666666 		.word	1717986919
 6390              	.L430:
1814:..\src/interruptions.c ****         switch (emg_cycle_status[i]){
 6391              		.loc 1 1814 0
 6392 02cc FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 6393 02ce 9C4A     		ldr	r2, .L474
 6394 02d0 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 6395 02d2 012B     		cmp	r3, #1
 6396 02d4 13D0     		beq	.L424
 6397 02d6 022B     		cmp	r3, #2
 6398 02d8 22D0     		beq	.L425
 6399 02da 002B     		cmp	r3, #0
 6400 02dc 33D1     		bne	.L423
1815:..\src/interruptions.c ****             case STATE_INACTIVE:
1816:..\src/interruptions.c ****                 if (g_adc_meas.emg[i] > g_mem.emg.emg_threshold[i]){
 6401              		.loc 1 1816 0
 6402 02de FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 6403 02e0 984A     		ldr	r2, .L474+4
 6404 02e2 52F82330 		ldr	r3, [r2, r3, lsl #2]
 6405 02e6 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 6406 02e8 9749     		ldr	r1, .L474+8
 6407 02ea F832     		adds	r2, r2, #248
 6408 02ec 31F81220 		ldrh	r2, [r1, r2, lsl #1]
 6409 02f0 9342     		cmp	r3, r2
 6410 02f2 25DD     		ble	.L464
1817:..\src/interruptions.c ****                     emg_cycle_status[i] = STATE_ACTIVE;
 6411              		.loc 1 1817 0
 6412 02f4 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 6413 02f6 924A     		ldr	r2, .L474
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 148


 6414 02f8 0121     		movs	r1, #1
 6415 02fa D154     		strb	r1, [r2, r3]
1818:..\src/interruptions.c ****                 }
1819:..\src/interruptions.c ****                 break;
 6416              		.loc 1 1819 0
 6417 02fc 20E0     		b	.L464
 6418              	.L424:
1820:..\src/interruptions.c ****             case STATE_ACTIVE:
1821:..\src/interruptions.c ****                 if (g_adc_meas.emg[i] < g_mem.emg.emg_threshold[i]-10){                    
 6419              		.loc 1 1821 0
 6420 02fe FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 6421 0300 904A     		ldr	r2, .L474+4
 6422 0302 52F82320 		ldr	r2, [r2, r3, lsl #2]
 6423 0306 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 6424 0308 8F49     		ldr	r1, .L474+8
 6425 030a F833     		adds	r3, r3, #248
 6426 030c 31F81330 		ldrh	r3, [r1, r3, lsl #1]
 6427 0310 0A3B     		subs	r3, r3, #10
 6428 0312 9A42     		cmp	r2, r3
 6429 0314 16DA     		bge	.L465
1822:..\src/interruptions.c ****                     emg_cycle_status[i] = COUNTER_INC;
 6430              		.loc 1 1822 0
 6431 0316 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 6432 0318 894A     		ldr	r2, .L474
 6433 031a 0221     		movs	r1, #2
 6434 031c D154     		strb	r1, [r2, r3]
1823:..\src/interruptions.c ****                 }
1824:..\src/interruptions.c ****                 break;
 6435              		.loc 1 1824 0
 6436 031e 11E0     		b	.L465
 6437              	.L425:
1825:..\src/interruptions.c ****             case COUNTER_INC:
1826:..\src/interruptions.c ****                 g_mem.cnt.emg_act_counter[i] = g_mem.cnt.emg_act_counter[i] + 1;
 6438              		.loc 1 1826 0
 6439 0320 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 6440 0322 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 6441 0324 8849     		ldr	r1, .L474+8
 6442 0326 0432     		adds	r2, r2, #4
 6443 0328 51F82220 		ldr	r2, [r1, r2, lsl #2]
 6444 032c 0132     		adds	r2, r2, #1
 6445 032e 8649     		ldr	r1, .L474+8
 6446 0330 0433     		adds	r3, r3, #4
 6447 0332 41F82320 		str	r2, [r1, r3, lsl #2]
1827:..\src/interruptions.c ****                 emg_cycle_status[i] = STATE_INACTIVE;
 6448              		.loc 1 1827 0
 6449 0336 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 6450 0338 814A     		ldr	r2, .L474
 6451 033a 0021     		movs	r1, #0
 6452 033c D154     		strb	r1, [r2, r3]
1828:..\src/interruptions.c ****                 break;
 6453              		.loc 1 1828 0
 6454 033e 02E0     		b	.L423
 6455              	.L464:
1819:..\src/interruptions.c ****             case STATE_ACTIVE:
 6456              		.loc 1 1819 0
 6457 0340 00BF     		nop
 6458 0342 00E0     		b	.L423
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 149


 6459              	.L465:
1824:..\src/interruptions.c ****             case COUNTER_INC:
 6460              		.loc 1 1824 0
 6461 0344 00BF     		nop
 6462              	.L423:
1813:..\src/interruptions.c ****         switch (emg_cycle_status[i]){
 6463              		.loc 1 1813 0 discriminator 2
 6464 0346 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 6465 0348 0133     		adds	r3, r3, #1
 6466 034a FB75     		strb	r3, [r7, #23]
 6467              	.L422:
1813:..\src/interruptions.c ****         switch (emg_cycle_status[i]){
 6468              		.loc 1 1813 0 is_stmt 0 discriminator 1
 6469 034c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 6470 034e 012B     		cmp	r3, #1
 6471 0350 07D8     		bhi	.L429
1813:..\src/interruptions.c ****         switch (emg_cycle_status[i]){
 6472              		.loc 1 1813 0 discriminator 3
 6473 0352 7E4B     		ldr	r3, .L474+12
 6474 0354 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6475 0356 002B     		cmp	r3, #0
 6476 0358 03D1     		bne	.L429
1813:..\src/interruptions.c ****         switch (emg_cycle_status[i]){
 6477              		.loc 1 1813 0 discriminator 4
 6478 035a 7D4B     		ldr	r3, .L474+16
 6479 035c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6480 035e 002B     		cmp	r3, #0
 6481 0360 B4D0     		beq	.L430
 6482              	.L429:
1829:..\src/interruptions.c ****         }
1830:..\src/interruptions.c ****     }
1831:..\src/interruptions.c ****     
1832:..\src/interruptions.c ****     // State machine - Evaluate Motion counter update
1833:..\src/interruptions.c ****     for (i=0; i<2 && emg_1_status == NORMAL && emg_2_status == NORMAL; i++){
 6483              		.loc 1 1833 0 is_stmt 1
 6484 0362 0023     		movs	r3, #0
 6485 0364 FB75     		strb	r3, [r7, #23]
 6486 0366 57E0     		b	.L431
 6487              	.L440:
1834:..\src/interruptions.c ****         switch (motion_status[i]){
 6488              		.loc 1 1834 0
 6489 0368 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 6490 036a 7A4A     		ldr	r2, .L474+20
 6491 036c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 6492 036e 012B     		cmp	r3, #1
 6493 0370 18D0     		beq	.L433
 6494 0372 022B     		cmp	r3, #2
 6495 0374 37D0     		beq	.L434
 6496 0376 002B     		cmp	r3, #0
 6497 0378 4BD1     		bne	.L432
1835:..\src/interruptions.c ****             case STATE_INACTIVE:
1836:..\src/interruptions.c ****                 if (g_adc_meas.emg[i] > g_mem.emg.emg_threshold[i]){
 6498              		.loc 1 1836 0
 6499 037a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 6500 037c 714A     		ldr	r2, .L474+4
 6501 037e 52F82330 		ldr	r3, [r2, r3, lsl #2]
 6502 0382 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 150


 6503 0384 7049     		ldr	r1, .L474+8
 6504 0386 F832     		adds	r2, r2, #248
 6505 0388 31F81220 		ldrh	r2, [r1, r2, lsl #1]
 6506 038c 9342     		cmp	r3, r2
 6507 038e 3DDD     		ble	.L466
1837:..\src/interruptions.c ****                     start_emg_pos[i] = curr_pos;
 6508              		.loc 1 1837 0
 6509 0390 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 6510 0392 7149     		ldr	r1, .L474+24
 6511 0394 FA68     		ldr	r2, [r7, #12]
 6512 0396 41F82320 		str	r2, [r1, r3, lsl #2]
1838:..\src/interruptions.c ****                     motion_status[i] = STATE_ACTIVE;
 6513              		.loc 1 1838 0
 6514 039a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 6515 039c 6D4A     		ldr	r2, .L474+20
 6516 039e 0121     		movs	r1, #1
 6517 03a0 D154     		strb	r1, [r2, r3]
1839:..\src/interruptions.c ****                 }
1840:..\src/interruptions.c ****                 break;
 6518              		.loc 1 1840 0
 6519 03a2 33E0     		b	.L466
 6520              	.L433:
1841:..\src/interruptions.c ****             case STATE_ACTIVE:
1842:..\src/interruptions.c ****                 if (g_adc_meas.emg[i] < g_mem.emg.emg_threshold[i]-10){                    
 6521              		.loc 1 1842 0
 6522 03a4 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 6523 03a6 674A     		ldr	r2, .L474+4
 6524 03a8 52F82320 		ldr	r2, [r2, r3, lsl #2]
 6525 03ac FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 6526 03ae 6649     		ldr	r1, .L474+8
 6527 03b0 F833     		adds	r3, r3, #248
 6528 03b2 31F81330 		ldrh	r3, [r1, r3, lsl #1]
 6529 03b6 0A3B     		subs	r3, r3, #10
 6530 03b8 9A42     		cmp	r2, r3
 6531 03ba 29DA     		bge	.L467
1843:..\src/interruptions.c ****                     if (abs(start_emg_pos[i] - curr_pos) > 200){     // it has to be a sensible mov
 6532              		.loc 1 1843 0
 6533 03bc FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 6534 03be 664A     		ldr	r2, .L474+24
 6535 03c0 52F82320 		ldr	r2, [r2, r3, lsl #2]
 6536 03c4 FB68     		ldr	r3, [r7, #12]
 6537 03c6 D31A     		subs	r3, r2, r3
 6538 03c8 002B     		cmp	r3, #0
 6539 03ca B8BF     		it	lt
 6540 03cc 5B42     		rsblt	r3, r3, #0
 6541 03ce C82B     		cmp	r3, #200
 6542 03d0 04DD     		ble	.L438
1844:..\src/interruptions.c ****                         motion_status[i] = COUNTER_INC;
 6543              		.loc 1 1844 0
 6544 03d2 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 6545 03d4 5F4A     		ldr	r2, .L474+20
 6546 03d6 0221     		movs	r1, #2
 6547 03d8 D154     		strb	r1, [r2, r3]
1845:..\src/interruptions.c ****                     }
1846:..\src/interruptions.c ****                     else {
1847:..\src/interruptions.c ****                         motion_status[i] = STATE_INACTIVE;
1848:..\src/interruptions.c ****                     }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 151


1849:..\src/interruptions.c ****                 }
1850:..\src/interruptions.c ****                 break;
 6548              		.loc 1 1850 0
 6549 03da 19E0     		b	.L467
 6550              	.L438:
1847:..\src/interruptions.c ****                     }
 6551              		.loc 1 1847 0
 6552 03dc FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 6553 03de 5D4A     		ldr	r2, .L474+20
 6554 03e0 0021     		movs	r1, #0
 6555 03e2 D154     		strb	r1, [r2, r3]
 6556              		.loc 1 1850 0
 6557 03e4 14E0     		b	.L467
 6558              	.L434:
1851:..\src/interruptions.c ****             case COUNTER_INC:
1852:..\src/interruptions.c ****                 g_mem.cnt.motion_counter[i] = g_mem.cnt.motion_counter[i] + 1;
 6559              		.loc 1 1852 0
 6560 03e6 F97D     		ldrb	r1, [r7, #23]	@ zero_extendqisi2
 6561 03e8 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 6562 03ea 574A     		ldr	r2, .L474+8
 6563 03ec 1A33     		adds	r3, r3, #26
 6564 03ee 9B00     		lsls	r3, r3, #2
 6565 03f0 1344     		add	r3, r3, r2
 6566 03f2 5B68     		ldr	r3, [r3, #4]
 6567 03f4 5A1C     		adds	r2, r3, #1
 6568 03f6 5448     		ldr	r0, .L474+8
 6569 03f8 01F11A03 		add	r3, r1, #26
 6570 03fc 9B00     		lsls	r3, r3, #2
 6571 03fe 0344     		add	r3, r3, r0
 6572 0400 5A60     		str	r2, [r3, #4]
1853:..\src/interruptions.c ****                 motion_status[i] = STATE_INACTIVE;
 6573              		.loc 1 1853 0
 6574 0402 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 6575 0404 534A     		ldr	r2, .L474+20
 6576 0406 0021     		movs	r1, #0
 6577 0408 D154     		strb	r1, [r2, r3]
1854:..\src/interruptions.c ****                 break;
 6578              		.loc 1 1854 0
 6579 040a 02E0     		b	.L432
 6580              	.L466:
1840:..\src/interruptions.c ****             case STATE_ACTIVE:
 6581              		.loc 1 1840 0
 6582 040c 00BF     		nop
 6583 040e 00E0     		b	.L432
 6584              	.L467:
1850:..\src/interruptions.c ****             case COUNTER_INC:
 6585              		.loc 1 1850 0
 6586 0410 00BF     		nop
 6587              	.L432:
1833:..\src/interruptions.c ****         switch (motion_status[i]){
 6588              		.loc 1 1833 0 discriminator 2
 6589 0412 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 6590 0414 0133     		adds	r3, r3, #1
 6591 0416 FB75     		strb	r3, [r7, #23]
 6592              	.L431:
1833:..\src/interruptions.c ****         switch (motion_status[i]){
 6593              		.loc 1 1833 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 152


 6594 0418 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 6595 041a 012B     		cmp	r3, #1
 6596 041c 07D8     		bhi	.L439
1833:..\src/interruptions.c ****         switch (motion_status[i]){
 6597              		.loc 1 1833 0 discriminator 3
 6598 041e 4B4B     		ldr	r3, .L474+12
 6599 0420 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6600 0422 002B     		cmp	r3, #0
 6601 0424 03D1     		bne	.L439
1833:..\src/interruptions.c ****         switch (motion_status[i]){
 6602              		.loc 1 1833 0 discriminator 4
 6603 0426 4A4B     		ldr	r3, .L474+16
 6604 0428 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6605 042a 002B     		cmp	r3, #0
 6606 042c 9CD0     		beq	.L440
 6607              	.L439:
1855:..\src/interruptions.c ****         }
1856:..\src/interruptions.c ****     }
1857:..\src/interruptions.c ****     
1858:..\src/interruptions.c ****     // State machine - Evaluate EMG excessive activity counter update
1859:..\src/interruptions.c ****     for (i=0; i<2 && emg_1_status == NORMAL && emg_2_status == NORMAL; i++){
 6608              		.loc 1 1859 0 is_stmt 1
 6609 042e 0023     		movs	r3, #0
 6610 0430 FB75     		strb	r3, [r7, #23]
 6611 0432 A3E0     		b	.L441
 6612              	.L452:
1860:..\src/interruptions.c ****         switch (emg_excess_status[i]){
 6613              		.loc 1 1860 0
 6614 0434 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 6615 0436 494A     		ldr	r2, .L474+28
 6616 0438 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 6617 043a 012B     		cmp	r3, #1
 6618 043c 19D0     		beq	.L443
 6619 043e 022B     		cmp	r3, #2
 6620 0440 68D0     		beq	.L444
 6621 0442 002B     		cmp	r3, #0
 6622 0444 40F09780 		bne	.L442
1861:..\src/interruptions.c ****             case STATE_INACTIVE:
1862:..\src/interruptions.c ****                 if (g_adc_meas.emg[i] > exc_act_thr){
 6623              		.loc 1 1862 0
 6624 0448 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 6625 044a 3E4A     		ldr	r2, .L474+4
 6626 044c 52F82320 		ldr	r2, [r2, r3, lsl #2]
 6627 0450 434B     		ldr	r3, .L474+32
 6628 0452 1B68     		ldr	r3, [r3]
 6629 0454 9A42     		cmp	r2, r3
 6630 0456 70DD     		ble	.L468
1863:..\src/interruptions.c ****                     timer_exc_s[i] = (uint32)CYCLES_TIMER_ReadCounter();
 6631              		.loc 1 1863 0
 6632 0458 FC7D     		ldrb	r4, [r7, #23]	@ zero_extendqisi2
 6633 045a FFF7FEFF 		bl	CYCLES_TIMER_ReadCounter
 6634 045e 0346     		mov	r3, r0
 6635 0460 1A46     		mov	r2, r3
 6636 0462 404B     		ldr	r3, .L474+36
 6637 0464 43F82420 		str	r2, [r3, r4, lsl #2]
1864:..\src/interruptions.c ****                     emg_excess_status[i] = STATE_ACTIVE;
 6638              		.loc 1 1864 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 153


 6639 0468 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 6640 046a 3C4A     		ldr	r2, .L474+28
 6641 046c 0121     		movs	r1, #1
 6642 046e D154     		strb	r1, [r2, r3]
1865:..\src/interruptions.c ****                 }
1866:..\src/interruptions.c ****                 break;
 6643              		.loc 1 1866 0
 6644 0470 63E0     		b	.L468
 6645              	.L443:
1867:..\src/interruptions.c ****             case STATE_ACTIVE:
1868:..\src/interruptions.c ****                 if (g_adc_meas.emg[i] < exc_act_thr-10){
 6646              		.loc 1 1868 0
 6647 0472 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 6648 0474 334A     		ldr	r2, .L474+4
 6649 0476 52F82320 		ldr	r2, [r2, r3, lsl #2]
 6650 047a 394B     		ldr	r3, .L474+32
 6651 047c 1B68     		ldr	r3, [r3]
 6652 047e 0A3B     		subs	r3, r3, #10
 6653 0480 9A42     		cmp	r2, r3
 6654 0482 77DA     		bge	.L469
1869:..\src/interruptions.c ****                     timer_exc_e[i] = (uint32)CYCLES_TIMER_ReadCounter();
 6655              		.loc 1 1869 0
 6656 0484 FC7D     		ldrb	r4, [r7, #23]	@ zero_extendqisi2
 6657 0486 FFF7FEFF 		bl	CYCLES_TIMER_ReadCounter
 6658 048a 0346     		mov	r3, r0
 6659 048c 1A46     		mov	r2, r3
 6660 048e 364B     		ldr	r3, .L474+40
 6661 0490 43F82420 		str	r2, [r3, r4, lsl #2]
1870:..\src/interruptions.c ****                     if (timer_exc_s[i] < timer_exc_e[i]) {
 6662              		.loc 1 1870 0
 6663 0494 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 6664 0496 334A     		ldr	r2, .L474+36
 6665 0498 52F82320 		ldr	r2, [r2, r3, lsl #2]
 6666 049c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 6667 049e 3249     		ldr	r1, .L474+40
 6668 04a0 51F82330 		ldr	r3, [r1, r3, lsl #2]
 6669 04a4 9A42     		cmp	r2, r3
 6670 04a6 0AD2     		bcs	.L448
1871:..\src/interruptions.c ****                         timer_exc_s[i] = timer_exc_s[i] + (uint32)6000;
 6671              		.loc 1 1871 0
 6672 04a8 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 6673 04aa FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 6674 04ac 2D49     		ldr	r1, .L474+36
 6675 04ae 51F82330 		ldr	r3, [r1, r3, lsl #2]
 6676 04b2 03F5BB53 		add	r3, r3, #5984
 6677 04b6 1033     		adds	r3, r3, #16
 6678 04b8 2A49     		ldr	r1, .L474+36
 6679 04ba 41F82230 		str	r3, [r1, r2, lsl #2]
 6680              	.L448:
1872:..\src/interruptions.c ****                     }
1873:..\src/interruptions.c ****                     if (((float)(timer_exc_s[i] - timer_exc_e[i])/50.0) > 4.0){      //50 timers ti
 6681              		.loc 1 1873 0
 6682 04be FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 6683 04c0 284A     		ldr	r2, .L474+36
 6684 04c2 52F82320 		ldr	r2, [r2, r3, lsl #2]
 6685 04c6 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 6686 04c8 2749     		ldr	r1, .L474+40
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 154


 6687 04ca 51F82330 		ldr	r3, [r1, r3, lsl #2]
 6688 04ce D31A     		subs	r3, r2, r3
 6689 04d0 1846     		mov	r0, r3
 6690 04d2 FFF7FEFF 		bl	__aeabi_ui2f
 6691 04d6 0346     		mov	r3, r0
 6692 04d8 1846     		mov	r0, r3
 6693 04da FFF7FEFF 		bl	__aeabi_f2d
 6694 04de 4FF00002 		mov	r2, #0
 6695 04e2 224B     		ldr	r3, .L474+44
 6696 04e4 FFF7FEFF 		bl	__aeabi_ddiv
 6697 04e8 0346     		mov	r3, r0
 6698 04ea 0C46     		mov	r4, r1
 6699 04ec 1846     		mov	r0, r3
 6700 04ee 2146     		mov	r1, r4
 6701 04f0 4FF00002 		mov	r2, #0
 6702 04f4 1E4B     		ldr	r3, .L474+48
 6703 04f6 FFF7FEFF 		bl	__aeabi_dcmpgt
 6704 04fa 0346     		mov	r3, r0
 6705 04fc 002B     		cmp	r3, #0
 6706 04fe 04D0     		beq	.L461
1874:..\src/interruptions.c ****                         emg_excess_status[i] = COUNTER_INC;
 6707              		.loc 1 1874 0
 6708 0500 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 6709 0502 164A     		ldr	r2, .L474+28
 6710 0504 0221     		movs	r1, #2
 6711 0506 D154     		strb	r1, [r2, r3]
1875:..\src/interruptions.c ****                     }
1876:..\src/interruptions.c ****                     else {
1877:..\src/interruptions.c ****                         emg_excess_status[i] = STATE_INACTIVE;
1878:..\src/interruptions.c ****                     }
1879:..\src/interruptions.c ****                 }
1880:..\src/interruptions.c ****                 break;
 6712              		.loc 1 1880 0
 6713 0508 34E0     		b	.L469
 6714              	.L461:
1877:..\src/interruptions.c ****                     }
 6715              		.loc 1 1877 0
 6716 050a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 6717 050c 134A     		ldr	r2, .L474+28
 6718 050e 0021     		movs	r1, #0
 6719 0510 D154     		strb	r1, [r2, r3]
 6720              		.loc 1 1880 0
 6721 0512 2FE0     		b	.L469
 6722              	.L444:
1881:..\src/interruptions.c ****             case COUNTER_INC:
1882:..\src/interruptions.c ****                 g_mem.cnt.excessive_signal_activity[i] = g_mem.cnt.excessive_signal_activity[i] + 1
 6723              		.loc 1 1882 0
 6724 0514 F97D     		ldrb	r1, [r7, #23]	@ zero_extendqisi2
 6725 0516 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 6726 0518 0B4A     		ldr	r2, .L474+8
 6727 051a 1833     		adds	r3, r3, #24
 6728 051c 9B00     		lsls	r3, r3, #2
 6729 051e 1344     		add	r3, r3, r2
 6730 0520 5B68     		ldr	r3, [r3, #4]
 6731 0522 5A1C     		adds	r2, r3, #1
 6732 0524 0848     		ldr	r0, .L474+8
 6733 0526 01F11803 		add	r3, r1, #24
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 155


 6734 052a 9B00     		lsls	r3, r3, #2
 6735 052c 0344     		add	r3, r3, r0
 6736 052e 5A60     		str	r2, [r3, #4]
1883:..\src/interruptions.c ****                 emg_excess_status[i] = STATE_INACTIVE;
 6737              		.loc 1 1883 0
 6738 0530 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 6739 0532 0A4A     		ldr	r2, .L474+28
 6740 0534 0021     		movs	r1, #0
 6741 0536 D154     		strb	r1, [r2, r3]
1884:..\src/interruptions.c ****                 break;
 6742              		.loc 1 1884 0
 6743 0538 1DE0     		b	.L442
 6744              	.L468:
1866:..\src/interruptions.c ****             case STATE_ACTIVE:
 6745              		.loc 1 1866 0
 6746 053a 00BF     		nop
 6747 053c 1BE0     		b	.L442
 6748              	.L475:
 6749 053e 00BF     		.align	2
 6750              	.L474:
 6751 0540 44010000 		.word	emg_cycle_status.10643
 6752 0544 00000000 		.word	g_adc_meas
 6753 0548 00000000 		.word	g_mem
 6754 054c 00000000 		.word	emg_1_status
 6755 0550 00000000 		.word	emg_2_status
 6756 0554 48010000 		.word	motion_status.10644
 6757 0558 4C010000 		.word	start_emg_pos.10664
 6758 055c 54010000 		.word	emg_excess_status.10645
 6759 0560 14000000 		.word	exc_act_thr.10648
 6760 0564 58010000 		.word	timer_exc_s.10662
 6761 0568 60010000 		.word	timer_exc_e.10663
 6762 056c 00004940 		.word	1078525952
 6763 0570 00001040 		.word	1074790400
 6764              	.L469:
1880:..\src/interruptions.c ****             case COUNTER_INC:
 6765              		.loc 1 1880 0
 6766 0574 00BF     		nop
 6767              	.L442:
1859:..\src/interruptions.c ****         switch (emg_excess_status[i]){
 6768              		.loc 1 1859 0 discriminator 2
 6769 0576 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 6770 0578 0133     		adds	r3, r3, #1
 6771 057a FB75     		strb	r3, [r7, #23]
 6772              	.L441:
1859:..\src/interruptions.c ****         switch (emg_excess_status[i]){
 6773              		.loc 1 1859 0 is_stmt 0 discriminator 1
 6774 057c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 6775 057e 012B     		cmp	r3, #1
 6776 0580 08D8     		bhi	.L451
1859:..\src/interruptions.c ****         switch (emg_excess_status[i]){
 6777              		.loc 1 1859 0 discriminator 3
 6778 0582 2D4B     		ldr	r3, .L476
 6779 0584 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6780 0586 002B     		cmp	r3, #0
 6781 0588 04D1     		bne	.L451
1859:..\src/interruptions.c ****         switch (emg_excess_status[i]){
 6782              		.loc 1 1859 0 discriminator 4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 156


 6783 058a 2C4B     		ldr	r3, .L476+4
 6784 058c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6785 058e 002B     		cmp	r3, #0
 6786 0590 3FF450AF 		beq	.L452
 6787              	.L451:
1885:..\src/interruptions.c ****         }
1886:..\src/interruptions.c ****     }
1887:..\src/interruptions.c ****     
1888:..\src/interruptions.c ****     // State machine - Evaluate rest counter update
1889:..\src/interruptions.c ****     switch (rest_cycle_status){
 6788              		.loc 1 1889 0 is_stmt 1
 6789 0594 2A4B     		ldr	r3, .L476+8
 6790 0596 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6791 0598 012B     		cmp	r3, #1
 6792 059a 11D0     		beq	.L454
 6793 059c 022B     		cmp	r3, #2
 6794 059e 2AD0     		beq	.L455
 6795 05a0 002B     		cmp	r3, #0
 6796 05a2 42D1     		bne	.L453
1890:..\src/interruptions.c ****         case STATE_INACTIVE:
1891:..\src/interruptions.c ****             if (rest_enabled){
 6797              		.loc 1 1891 0
 6798 05a4 274B     		ldr	r3, .L476+12
 6799 05a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6800 05a8 002B     		cmp	r3, #0
 6801 05aa 3BD0     		beq	.L470
1892:..\src/interruptions.c ****                 timer_value_s = (uint32)CYCLES_TIMER_ReadCounter();
 6802              		.loc 1 1892 0
 6803 05ac FFF7FEFF 		bl	CYCLES_TIMER_ReadCounter
 6804 05b0 0346     		mov	r3, r0
 6805 05b2 1A46     		mov	r2, r3
 6806 05b4 244B     		ldr	r3, .L476+16
 6807 05b6 1A60     		str	r2, [r3]
1893:..\src/interruptions.c ****                 rest_cycle_status = STATE_ACTIVE;
 6808              		.loc 1 1893 0
 6809 05b8 214B     		ldr	r3, .L476+8
 6810 05ba 0122     		movs	r2, #1
 6811 05bc 1A70     		strb	r2, [r3]
1894:..\src/interruptions.c ****             }
1895:..\src/interruptions.c ****             break;
 6812              		.loc 1 1895 0
 6813 05be 31E0     		b	.L470
 6814              	.L454:
1896:..\src/interruptions.c ****         case STATE_ACTIVE:
1897:..\src/interruptions.c ****             if (!rest_enabled){
 6815              		.loc 1 1897 0
 6816 05c0 204B     		ldr	r3, .L476+12
 6817 05c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6818 05c4 002B     		cmp	r3, #0
 6819 05c6 2FD1     		bne	.L471
1898:..\src/interruptions.c ****                 timer_value_e = (uint32)CYCLES_TIMER_ReadCounter();
 6820              		.loc 1 1898 0
 6821 05c8 FFF7FEFF 		bl	CYCLES_TIMER_ReadCounter
 6822 05cc 0346     		mov	r3, r0
 6823 05ce 1A46     		mov	r2, r3
 6824 05d0 1E4B     		ldr	r3, .L476+20
 6825 05d2 1A60     		str	r2, [r3]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 157


1899:..\src/interruptions.c ****                 if (timer_value_s < timer_value_e) {
 6826              		.loc 1 1899 0
 6827 05d4 1C4B     		ldr	r3, .L476+16
 6828 05d6 1A68     		ldr	r2, [r3]
 6829 05d8 1C4B     		ldr	r3, .L476+20
 6830 05da 1B68     		ldr	r3, [r3]
 6831 05dc 9A42     		cmp	r2, r3
 6832 05de 06D2     		bcs	.L459
1900:..\src/interruptions.c ****                     timer_value_s = timer_value_s + (uint32)6000;
 6833              		.loc 1 1900 0
 6834 05e0 194B     		ldr	r3, .L476+16
 6835 05e2 1B68     		ldr	r3, [r3]
 6836 05e4 03F5BB53 		add	r3, r3, #5984
 6837 05e8 1033     		adds	r3, r3, #16
 6838 05ea 174A     		ldr	r2, .L476+16
 6839 05ec 1360     		str	r3, [r2]
 6840              	.L459:
1901:..\src/interruptions.c ****                 }
1902:..\src/interruptions.c ****                 rest_cycle_status = COUNTER_INC;
 6841              		.loc 1 1902 0
 6842 05ee 144B     		ldr	r3, .L476+8
 6843 05f0 0222     		movs	r2, #2
 6844 05f2 1A70     		strb	r2, [r3]
1903:..\src/interruptions.c ****             }
1904:..\src/interruptions.c ****             break;
 6845              		.loc 1 1904 0
 6846 05f4 18E0     		b	.L471
 6847              	.L455:
1905:..\src/interruptions.c ****         case COUNTER_INC: 
1906:..\src/interruptions.c ****             g_mem.cnt.total_time_rest = g_mem.cnt.total_time_rest + (uint32)((timer_value_s - timer
 6848              		.loc 1 1906 0
 6849 05f6 164B     		ldr	r3, .L476+24
 6850 05f8 DA6D     		ldr	r2, [r3, #92]
 6851 05fa 134B     		ldr	r3, .L476+16
 6852 05fc 1968     		ldr	r1, [r3]
 6853 05fe 134B     		ldr	r3, .L476+20
 6854 0600 1B68     		ldr	r3, [r3]
 6855 0602 CB1A     		subs	r3, r1, r3
 6856 0604 1349     		ldr	r1, .L476+28
 6857 0606 A1FB0313 		umull	r1, r3, r1, r3
 6858 060a 1B09     		lsrs	r3, r3, #4
 6859 060c 1344     		add	r3, r3, r2
 6860 060e 104A     		ldr	r2, .L476+24
 6861 0610 D365     		str	r3, [r2, #92]
1907:..\src/interruptions.c ****             g_mem.cnt.rest_counter = g_mem.cnt.rest_counter + 1;
 6862              		.loc 1 1907 0
 6863 0612 0F4B     		ldr	r3, .L476+24
 6864 0614 1B6D     		ldr	r3, [r3, #80]
 6865 0616 0133     		adds	r3, r3, #1
 6866 0618 0D4A     		ldr	r2, .L476+24
 6867 061a 1365     		str	r3, [r2, #80]
1908:..\src/interruptions.c ****             rest_cycle_status = STATE_INACTIVE;
 6868              		.loc 1 1908 0
 6869 061c 084B     		ldr	r3, .L476+8
 6870 061e 0022     		movs	r2, #0
 6871 0620 1A70     		strb	r2, [r3]
1909:..\src/interruptions.c ****             break;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 158


 6872              		.loc 1 1909 0
 6873 0622 02E0     		b	.L453
 6874              	.L470:
1895:..\src/interruptions.c ****         case STATE_ACTIVE:
 6875              		.loc 1 1895 0
 6876 0624 00BF     		nop
 6877 0626 00E0     		b	.L453
 6878              	.L471:
1904:..\src/interruptions.c ****         case COUNTER_INC: 
 6879              		.loc 1 1904 0
 6880 0628 00BF     		nop
 6881              	.L453:
1910:..\src/interruptions.c ****     }
1911:..\src/interruptions.c ****           
1912:..\src/interruptions.c ****     // This function writes rows [row_start, row_end] on EEPROM
1913:..\src/interruptions.c ****     save_cycles_eeprom();
 6882              		.loc 1 1913 0
 6883 062a FFF7FEFF 		bl	save_cycles_eeprom
1914:..\src/interruptions.c ****     
1915:..\src/interruptions.c **** }
 6884              		.loc 1 1915 0
 6885 062e 00BF     		nop
 6886 0630 1C37     		adds	r7, r7, #28
 6887              		.cfi_def_cfa_offset 12
 6888 0632 BD46     		mov	sp, r7
 6889              		.cfi_def_cfa_register 13
 6890              		@ sp needed
 6891 0634 90BD     		pop	{r4, r7, pc}
 6892              	.L477:
 6893 0636 00BF     		.align	2
 6894              	.L476:
 6895 0638 00000000 		.word	emg_1_status
 6896 063c 00000000 		.word	emg_2_status
 6897 0640 68010000 		.word	rest_cycle_status.10646
 6898 0644 00000000 		.word	rest_enabled
 6899 0648 6C010000 		.word	timer_value_s.10660
 6900 064c 70010000 		.word	timer_value_e.10661
 6901 0650 00000000 		.word	g_mem
 6902 0654 1F85EB51 		.word	1374389535
 6903              		.cfi_endproc
 6904              	.LFE74:
 6905              		.size	cycles_counter_update, .-cycles_counter_update
 6906              		.section	.text.save_cycles_eeprom,"ax",%progbits
 6907              		.align	2
 6908              		.global	save_cycles_eeprom
 6909              		.thumb
 6910              		.thumb_func
 6911              		.type	save_cycles_eeprom, %function
 6912              	save_cycles_eeprom:
 6913              	.LFB75:
1916:..\src/interruptions.c **** 
1917:..\src/interruptions.c **** //==============================================================================
1918:..\src/interruptions.c **** //                                                            SAVE CYCLES EEPROM
1919:..\src/interruptions.c **** //==============================================================================
1920:..\src/interruptions.c **** 
1921:..\src/interruptions.c **** void save_cycles_eeprom() {
 6914              		.loc 1 1921 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 159


 6915              		.cfi_startproc
 6916              		@ args = 0, pretend = 0, frame = 24
 6917              		@ frame_needed = 1, uses_anonymous_args = 0
 6918 0000 80B5     		push	{r7, lr}
 6919              		.cfi_def_cfa_offset 8
 6920              		.cfi_offset 7, -8
 6921              		.cfi_offset 14, -4
 6922 0002 86B0     		sub	sp, sp, #24
 6923              		.cfi_def_cfa_offset 32
 6924 0004 00AF     		add	r7, sp, #0
 6925              		.cfi_def_cfa_register 7
1922:..\src/interruptions.c **** 
1923:..\src/interruptions.c ****     cystatus status;
1924:..\src/interruptions.c ****     static uint8 row_number;
1925:..\src/interruptions.c ****     uint8 row_start = 1;
 6926              		.loc 1 1925 0
 6927 0006 0123     		movs	r3, #1
 6928 0008 FB75     		strb	r3, [r7, #23]
1926:..\src/interruptions.c ****     uint8* addr_start   = (uint8*)&g_mem.cnt.emg_act_counter[0];    //Data at beginning of the row 
 6929              		.loc 1 1926 0
 6930 000a 394B     		ldr	r3, .L494
 6931 000c 3B61     		str	r3, [r7, #16]
1927:..\src/interruptions.c ****     uint8* addr_start_c = (uint8*)&c_mem.cnt.emg_act_counter[0];
 6932              		.loc 1 1927 0
 6933 000e 394B     		ldr	r3, .L494+4
 6934 0010 FB60     		str	r3, [r7, #12]
1928:..\src/interruptions.c ****     uint8 row_end   = row_start + EEPROM_COUNTERS_ROWS - 1;
 6935              		.loc 1 1928 0
 6936 0012 FB7D     		ldrb	r3, [r7, #23]
 6937 0014 0633     		adds	r3, r3, #6
 6938 0016 FB72     		strb	r3, [r7, #11]
1929:..\src/interruptions.c ****     static uint8* m_addr = NULL; 
1930:..\src/interruptions.c **** 
1931:..\src/interruptions.c ****     // This part of code writes rows [row_start, row_end] on EEPROM    
1932:..\src/interruptions.c ****     switch(cycles_status) {
 6939              		.loc 1 1932 0
 6940 0018 374B     		ldr	r3, .L494+8
 6941 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6942 001c 042B     		cmp	r3, #4
 6943 001e 63D8     		bhi	.L490
 6944 0020 01A2     		adr	r2, .L481
 6945 0022 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 6946 0026 00BF     		.p2align 2
 6947              	.L481:
 6948 0028 3D000000 		.word	.L480+1
 6949 002c 5B000000 		.word	.L482+1
 6950 0030 8B000000 		.word	.L483+1
 6951 0034 C7000000 		.word	.L484+1
 6952 0038 DF000000 		.word	.L491+1
 6953              		.p2align 1
 6954              	.L480:
1933:..\src/interruptions.c ****         case PREPARE_DATA:
1934:..\src/interruptions.c ****             // Store data in c_mem structure to have consistent counters
1935:..\src/interruptions.c ****             memcpy( addr_start_c, addr_start, EEPROM_BYTES_ROW*EEPROM_COUNTERS_ROWS );            
 6955              		.loc 1 1935 0
 6956 003c 7022     		movs	r2, #112
 6957 003e 3969     		ldr	r1, [r7, #16]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 160


 6958 0040 F868     		ldr	r0, [r7, #12]
 6959 0042 FFF7FEFF 		bl	memcpy
1936:..\src/interruptions.c ****             m_addr = addr_start;
 6960              		.loc 1 1936 0
 6961 0046 2D4A     		ldr	r2, .L494+12
 6962 0048 3B69     		ldr	r3, [r7, #16]
 6963 004a 1360     		str	r3, [r2]
1937:..\src/interruptions.c ****             row_number = row_start;
 6964              		.loc 1 1937 0
 6965 004c 2C4A     		ldr	r2, .L494+16
 6966 004e FB7D     		ldrb	r3, [r7, #23]
 6967 0050 1370     		strb	r3, [r2]
1938:..\src/interruptions.c ****             cycles_status = WRITE_CYCLES;
 6968              		.loc 1 1938 0
 6969 0052 294B     		ldr	r3, .L494+8
 6970 0054 0122     		movs	r2, #1
 6971 0056 1A70     		strb	r2, [r3]
1939:..\src/interruptions.c ****             break;
 6972              		.loc 1 1939 0
 6973 0058 46E0     		b	.L479
 6974              	.L482:
1940:..\src/interruptions.c ****             
1941:..\src/interruptions.c ****         case WRITE_CYCLES:
1942:..\src/interruptions.c ****             EEPROM_UpdateTemperature();     //Check temperature of chip before writing
 6975              		.loc 1 1942 0
 6976 005a FFF7FEFF 		bl	EEPROM_UpdateTemperature
1943:..\src/interruptions.c ****             status = EEPROM_StartWrite((uint8*) m_addr, row_number);           
 6977              		.loc 1 1943 0
 6978 005e 274B     		ldr	r3, .L494+12
 6979 0060 1A68     		ldr	r2, [r3]
 6980 0062 274B     		ldr	r3, .L494+16
 6981 0064 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6982 0066 1946     		mov	r1, r3
 6983 0068 1046     		mov	r0, r2
 6984 006a FFF7FEFF 		bl	EEPROM_StartWrite
 6985 006e 7860     		str	r0, [r7, #4]
1944:..\src/interruptions.c ****             if(status == CYRET_STARTED || status == CYRET_SUCCESS) {
 6986              		.loc 1 1944 0
 6987 0070 7B68     		ldr	r3, [r7, #4]
 6988 0072 072B     		cmp	r3, #7
 6989 0074 02D0     		beq	.L486
 6990              		.loc 1 1944 0 is_stmt 0 discriminator 1
 6991 0076 7B68     		ldr	r3, [r7, #4]
 6992 0078 002B     		cmp	r3, #0
 6993 007a 32D1     		bne	.L492
 6994              	.L486:
1945:..\src/interruptions.c ****                 cycles_status = WAIT_QUERY;
 6995              		.loc 1 1945 0 is_stmt 1
 6996 007c 1E4B     		ldr	r3, .L494+8
 6997 007e 0222     		movs	r2, #2
 6998 0080 1A70     		strb	r2, [r3]
1946:..\src/interruptions.c ****                 can_write = FALSE;
 6999              		.loc 1 1946 0
 7000 0082 204B     		ldr	r3, .L494+20
 7001 0084 0022     		movs	r2, #0
 7002 0086 1A70     		strb	r2, [r3]
1947:..\src/interruptions.c ****             }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 161


1948:..\src/interruptions.c ****             break;
 7003              		.loc 1 1948 0
 7004 0088 2BE0     		b	.L492
 7005              	.L483:
1949:..\src/interruptions.c ****             
1950:..\src/interruptions.c ****         case WAIT_QUERY:
1951:..\src/interruptions.c ****             status = EEPROM_Query();
 7006              		.loc 1 1951 0
 7007 008a FFF7FEFF 		bl	EEPROM_Query
 7008 008e 7860     		str	r0, [r7, #4]
1952:..\src/interruptions.c ****             if(status == CYRET_SUCCESS) {
 7009              		.loc 1 1952 0
 7010 0090 7B68     		ldr	r3, [r7, #4]
 7011 0092 002B     		cmp	r3, #0
 7012 0094 27D1     		bne	.L493
1953:..\src/interruptions.c ****                 if (row_number < row_end) {
 7013              		.loc 1 1953 0
 7014 0096 1A4B     		ldr	r3, .L494+16
 7015 0098 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7016 009a FA7A     		ldrb	r2, [r7, #11]	@ zero_extendqisi2
 7017 009c 9A42     		cmp	r2, r3
 7018 009e 0ED9     		bls	.L489
1954:..\src/interruptions.c ****                     m_addr = m_addr + EEPROM_BYTES_ROW;
 7019              		.loc 1 1954 0
 7020 00a0 164B     		ldr	r3, .L494+12
 7021 00a2 1B68     		ldr	r3, [r3]
 7022 00a4 1033     		adds	r3, r3, #16
 7023 00a6 154A     		ldr	r2, .L494+12
 7024 00a8 1360     		str	r3, [r2]
1955:..\src/interruptions.c ****                     row_number = row_number + 1;
 7025              		.loc 1 1955 0
 7026 00aa 154B     		ldr	r3, .L494+16
 7027 00ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7028 00ae 0133     		adds	r3, r3, #1
 7029 00b0 DAB2     		uxtb	r2, r3
 7030 00b2 134B     		ldr	r3, .L494+16
 7031 00b4 1A70     		strb	r2, [r3]
1956:..\src/interruptions.c ****                     cycles_status = WRITE_CYCLES;
 7032              		.loc 1 1956 0
 7033 00b6 104B     		ldr	r3, .L494+8
 7034 00b8 0122     		movs	r2, #1
 7035 00ba 1A70     		strb	r2, [r3]
1957:..\src/interruptions.c ****                 }
1958:..\src/interruptions.c ****                 else {
1959:..\src/interruptions.c ****                     cycles_status = WRITE_END;
1960:..\src/interruptions.c ****                 }
1961:..\src/interruptions.c ****             }
1962:..\src/interruptions.c ****             break;
 7036              		.loc 1 1962 0
 7037 00bc 13E0     		b	.L493
 7038              	.L489:
1959:..\src/interruptions.c ****                 }
 7039              		.loc 1 1959 0
 7040 00be 0E4B     		ldr	r3, .L494+8
 7041 00c0 0322     		movs	r2, #3
 7042 00c2 1A70     		strb	r2, [r3]
 7043              		.loc 1 1962 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 162


 7044 00c4 0FE0     		b	.L493
 7045              	.L484:
1963:..\src/interruptions.c ****            
1964:..\src/interruptions.c ****         case WRITE_END:
1965:..\src/interruptions.c ****             can_write = TRUE;            
 7046              		.loc 1 1965 0
 7047 00c6 0F4B     		ldr	r3, .L494+20
 7048 00c8 0122     		movs	r2, #1
 7049 00ca 1A70     		strb	r2, [r3]
1966:..\src/interruptions.c ****             cycles_status = NONE;
 7050              		.loc 1 1966 0
 7051 00cc 0A4B     		ldr	r3, .L494+8
 7052 00ce 0422     		movs	r2, #4
 7053 00d0 1A70     		strb	r2, [r3]
1967:..\src/interruptions.c ****             
1968:..\src/interruptions.c ****             // Restore data saved in c_mem structure
1969:..\src/interruptions.c ****             memcpy( addr_start, addr_start_c, EEPROM_BYTES_ROW*EEPROM_COUNTERS_ROWS );
 7054              		.loc 1 1969 0
 7055 00d2 7022     		movs	r2, #112
 7056 00d4 F968     		ldr	r1, [r7, #12]
 7057 00d6 3869     		ldr	r0, [r7, #16]
 7058 00d8 FFF7FEFF 		bl	memcpy
1970:..\src/interruptions.c ****             break;
 7059              		.loc 1 1970 0
 7060 00dc 04E0     		b	.L479
 7061              	.L491:
1971:..\src/interruptions.c ****             
1972:..\src/interruptions.c ****         case NONE:
1973:..\src/interruptions.c ****             break;
 7062              		.loc 1 1973 0
 7063 00de 00BF     		nop
 7064 00e0 02E0     		b	.L490
 7065              	.L492:
1948:..\src/interruptions.c ****             
 7066              		.loc 1 1948 0
 7067 00e2 00BF     		nop
 7068 00e4 00E0     		b	.L490
 7069              	.L493:
1962:..\src/interruptions.c ****            
 7070              		.loc 1 1962 0
 7071 00e6 00BF     		nop
 7072              	.L479:
 7073              	.L490:
1974:..\src/interruptions.c ****     }
1975:..\src/interruptions.c ****     
1976:..\src/interruptions.c **** }
 7074              		.loc 1 1976 0
 7075 00e8 00BF     		nop
 7076 00ea 1837     		adds	r7, r7, #24
 7077              		.cfi_def_cfa_offset 8
 7078 00ec BD46     		mov	sp, r7
 7079              		.cfi_def_cfa_register 13
 7080              		@ sp needed
 7081 00ee 80BD     		pop	{r7, pc}
 7082              	.L495:
 7083              		.align	2
 7084              	.L494:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 163


 7085 00f0 10000000 		.word	g_mem+16
 7086 00f4 10000000 		.word	c_mem+16
 7087 00f8 00000000 		.word	cycles_status
 7088 00fc 74010000 		.word	m_addr.10705
 7089 0100 78010000 		.word	row_number.10700
 7090 0104 00000000 		.word	can_write
 7091              		.cfi_endproc
 7092              	.LFE75:
 7093              		.size	save_cycles_eeprom, .-save_cycles_eeprom
 7094              		.bss
 7095              	state.10437:
 7096 0000 00       		.space	1
 7097 0001 000000   		.align	2
 7098              	rx_queue.10441:
 7099 0004 000000   		.space	3
 7100              	data_packet_length.10439:
 7101 0007 00       		.space	1
 7102              	data_packet_index.10438:
 7103 0008 00       		.space	1
 7104 0009 000000   		.align	2
 7105              	data_packet_buffer.10440:
 7106 000c 00000000 		.space	128
 7106      00000000 
 7106      00000000 
 7106      00000000 
 7106      00000000 
 7107              		.data
 7108              		.align	1
 7109              		.type	counter_tension_func.10457, %object
 7110              		.size	counter_tension_func.10457, 2
 7111              	counter_tension_func.10457:
 7112 0000 0100     		.short	1
 7113              		.bss
 7114              		.align	2
 7115              	current_emg.10472:
 7116 008c 0000     		.space	2
 7117              	fsm_state.10509:
 7118 008e 00       		.space	1
 7119 008f 00       		.align	2
 7120              	last_value_encoder.10548:
 7121 0090 00000000 		.space	24
 7121      00000000 
 7121      00000000 
 7121      00000000 
 7121      00000000 
 7122              		.align	2
 7123              	comp_value_encoder.10549:
 7124 00a8 00000000 		.space	24
 7124      00000000 
 7124      00000000 
 7124      00000000 
 7124      00000000 
 7125              		.data
 7126 0002 0000     		.align	2
 7127              		.type	only_first_time.10551, %object
 7128              		.size	only_first_time.10551, 2
 7129              	only_first_time.10551:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 164


 7130 0004 01       		.byte	1
 7131 0005 01       		.byte	1
 7132              		.bss
 7133              		.align	2
 7134              	error.10550:
 7135 00c0 00000000 		.space	6
 7135      0000
 7136 00c6 0000     		.align	2
 7137              	v_value.10555:
 7138 00c8 00000000 		.space	24
 7138      00000000 
 7138      00000000 
 7138      00000000 
 7138      00000000 
 7139              		.align	2
 7140              	vv_value.10556:
 7141 00e0 00000000 		.space	24
 7141      00000000 
 7141      00000000 
 7141      00000000 
 7141      00000000 
 7142              		.align	2
 7143              	vvv_value.10557:
 7144 00f8 00000000 		.space	24
 7144      00000000 
 7144      00000000 
 7144      00000000 
 7144      00000000 
 7145              		.align	2
 7146              	one_time_execute.10553:
 7147 0110 0000     		.space	2
 7148 0112 0000     		.align	2
 7149              	safe_startup_motor_activation.10552:
 7150 0114 0000     		.space	2
 7151 0116 0000     		.align	2
 7152              	count_startup_motor.10554:
 7153 0118 00000000 		.space	8
 7153      00000000 
 7154              		.data
 7155 0006 0000     		.align	2
 7156              		.type	detect_power_cycle_prev.10581, %object
 7157              		.size	detect_power_cycle_prev.10581, 4
 7158              	detect_power_cycle_prev.10581:
 7159 0008 FDFFFFFF 		.word	-3
 7160              		.type	first_tension_valid.10580, %object
 7161              		.size	first_tension_valid.10580, 1
 7162              	first_tension_valid.10580:
 7163 000c 01       		.byte	1
 7164              		.bss
 7165              		.align	1
 7166              	count.10582:
 7167 0120 0000     		.space	2
 7168              	idx.10584:
 7169 0122 00       		.space	1
 7170 0123 00       		.align	2
 7171              	v_count.10583:
 7172 0124 00000000 		.space	4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 165


 7173              		.align	1
 7174              	emg_counter_1.10574:
 7175 0128 0000     		.space	2
 7176              		.align	1
 7177              	emg_counter_2.10575:
 7178 012a 0000     		.space	2
 7179              		.align	2
 7180              	UD_mean_value.10578:
 7181 012c 00000000 		.space	4
 7182              		.align	1
 7183              	UD_counter.10576:
 7184 0130 0000     		.space	2
 7185 0132 0000     		.align	2
 7186              	LR_mean_value.10579:
 7187 0134 00000000 		.space	4
 7188              		.align	1
 7189              	LR_counter.10577:
 7190 0138 0000     		.space	2
 7191              	pos_cycle_status.10642:
 7192 013a 00       		.space	1
 7193 013b 00       		.align	2
 7194              	thr_pos.10649:
 7195 013c 00000000 		.space	4
 7196              		.align	2
 7197              	max_pos.10650:
 7198 0140 00000000 		.space	4
 7199              		.data
 7200 000d 000000   		.align	2
 7201              		.type	bin_threshold.10647, %object
 7202              		.size	bin_threshold.10647, 4
 7203              	bin_threshold.10647:
 7204 0010 FA000000 		.word	250
 7205              		.bss
 7206              		.align	2
 7207              	emg_cycle_status.10643:
 7208 0144 0000     		.space	2
 7209 0146 0000     		.align	2
 7210              	motion_status.10644:
 7211 0148 0000     		.space	2
 7212 014a 0000     		.align	2
 7213              	start_emg_pos.10664:
 7214 014c 00000000 		.space	8
 7214      00000000 
 7215              		.align	2
 7216              	emg_excess_status.10645:
 7217 0154 0000     		.space	2
 7218              		.data
 7219              		.align	2
 7220              		.type	exc_act_thr.10648, %object
 7221              		.size	exc_act_thr.10648, 4
 7222              	exc_act_thr.10648:
 7223 0014 D4030000 		.word	980
 7224              		.bss
 7225 0156 0000     		.align	2
 7226              	timer_exc_s.10662:
 7227 0158 00000000 		.space	8
 7227      00000000 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 166


 7228              		.align	2
 7229              	timer_exc_e.10663:
 7230 0160 00000000 		.space	8
 7230      00000000 
 7231              	rest_cycle_status.10646:
 7232 0168 00       		.space	1
 7233 0169 000000   		.align	2
 7234              	timer_value_s.10660:
 7235 016c 00000000 		.space	4
 7236              		.align	2
 7237              	timer_value_e.10661:
 7238 0170 00000000 		.space	4
 7239              		.align	2
 7240              	m_addr.10705:
 7241 0174 00000000 		.space	4
 7242              	row_number.10700:
 7243 0178 00       		.space	1
 7244              		.text
 7245              	.Letext0:
 7246              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 7247              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 7248              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 7249              		.file 5 "..\\src\\commands.h"
 7250              		.file 6 "..\\src\\emFile_V322c\\Code\\Include\\PSoC5/FS_Types.h"
 7251              		.file 7 "..\\src\\globals.h"
 7252              		.file 8 "Generated_Source\\PSoC5/core_cm3.h"
 7253              		.section	.debug_info,"",%progbits
 7254              	.Ldebug_info0:
 7255 0000 80170000 		.4byte	0x1780
 7256 0004 0400     		.2byte	0x4
 7257 0006 00000000 		.4byte	.Ldebug_abbrev0
 7258 000a 04       		.byte	0x4
 7259 000b 01       		.uleb128 0x1
 7260 000c 27080000 		.4byte	.LASF325
 7261 0010 0C       		.byte	0xc
 7262 0011 52100000 		.4byte	.LASF326
 7263 0015 B1090000 		.4byte	.LASF327
 7264 0019 48000000 		.4byte	.Ldebug_ranges0+0x48
 7265 001d 00000000 		.4byte	0
 7266 0021 00000000 		.4byte	.Ldebug_line0
 7267 0025 02       		.uleb128 0x2
 7268 0026 01       		.byte	0x1
 7269 0027 06       		.byte	0x6
 7270 0028 D8030000 		.4byte	.LASF0
 7271 002c 02       		.uleb128 0x2
 7272 002d 01       		.byte	0x1
 7273 002e 08       		.byte	0x8
 7274 002f 3D040000 		.4byte	.LASF1
 7275 0033 02       		.uleb128 0x2
 7276 0034 02       		.byte	0x2
 7277 0035 05       		.byte	0x5
 7278 0036 510E0000 		.4byte	.LASF2
 7279 003a 02       		.uleb128 0x2
 7280 003b 02       		.byte	0x2
 7281 003c 07       		.byte	0x7
 7282 003d F60F0000 		.4byte	.LASF3
 7283 0041 03       		.uleb128 0x3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 167


 7284 0042 DC100000 		.4byte	.LASF9
 7285 0046 02       		.byte	0x2
 7286 0047 3F       		.byte	0x3f
 7287 0048 4C000000 		.4byte	0x4c
 7288 004c 02       		.uleb128 0x2
 7289 004d 04       		.byte	0x4
 7290 004e 05       		.byte	0x5
 7291 004f D6020000 		.4byte	.LASF4
 7292 0053 02       		.uleb128 0x2
 7293 0054 04       		.byte	0x4
 7294 0055 07       		.byte	0x7
 7295 0056 34070000 		.4byte	.LASF5
 7296 005a 02       		.uleb128 0x2
 7297 005b 08       		.byte	0x8
 7298 005c 05       		.byte	0x5
 7299 005d DA080000 		.4byte	.LASF6
 7300 0061 02       		.uleb128 0x2
 7301 0062 08       		.byte	0x8
 7302 0063 07       		.byte	0x7
 7303 0064 080C0000 		.4byte	.LASF7
 7304 0068 04       		.uleb128 0x4
 7305 0069 04       		.byte	0x4
 7306 006a 05       		.byte	0x5
 7307 006b 696E7400 		.ascii	"int\000"
 7308 006f 02       		.uleb128 0x2
 7309 0070 04       		.byte	0x4
 7310 0071 07       		.byte	0x7
 7311 0072 610A0000 		.4byte	.LASF8
 7312 0076 03       		.uleb128 0x3
 7313 0077 8B000000 		.4byte	.LASF10
 7314 007b 03       		.byte	0x3
 7315 007c 2C       		.byte	0x2c
 7316 007d 41000000 		.4byte	0x41
 7317 0081 05       		.uleb128 0x5
 7318 0082 2B0E0000 		.4byte	.LASF11
 7319 0086 04       		.byte	0x4
 7320 0087 E401     		.2byte	0x1e4
 7321 0089 2C000000 		.4byte	0x2c
 7322 008d 05       		.uleb128 0x5
 7323 008e 39110000 		.4byte	.LASF12
 7324 0092 04       		.byte	0x4
 7325 0093 E501     		.2byte	0x1e5
 7326 0095 3A000000 		.4byte	0x3a
 7327 0099 05       		.uleb128 0x5
 7328 009a BF000000 		.4byte	.LASF13
 7329 009e 04       		.byte	0x4
 7330 009f E601     		.2byte	0x1e6
 7331 00a1 53000000 		.4byte	0x53
 7332 00a5 05       		.uleb128 0x5
 7333 00a6 A3010000 		.4byte	.LASF14
 7334 00aa 04       		.byte	0x4
 7335 00ab E701     		.2byte	0x1e7
 7336 00ad 25000000 		.4byte	0x25
 7337 00b1 05       		.uleb128 0x5
 7338 00b2 FB0E0000 		.4byte	.LASF15
 7339 00b6 04       		.byte	0x4
 7340 00b7 E801     		.2byte	0x1e8
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 168


 7341 00b9 33000000 		.4byte	0x33
 7342 00bd 05       		.uleb128 0x5
 7343 00be 75100000 		.4byte	.LASF16
 7344 00c2 04       		.byte	0x4
 7345 00c3 E901     		.2byte	0x1e9
 7346 00c5 4C000000 		.4byte	0x4c
 7347 00c9 05       		.uleb128 0x5
 7348 00ca 91030000 		.4byte	.LASF17
 7349 00ce 04       		.byte	0x4
 7350 00cf EA01     		.2byte	0x1ea
 7351 00d1 D5000000 		.4byte	0xd5
 7352 00d5 02       		.uleb128 0x2
 7353 00d6 04       		.byte	0x4
 7354 00d7 04       		.byte	0x4
 7355 00d8 A2090000 		.4byte	.LASF18
 7356 00dc 02       		.uleb128 0x2
 7357 00dd 08       		.byte	0x8
 7358 00de 04       		.byte	0x4
 7359 00df 09090000 		.4byte	.LASF19
 7360 00e3 02       		.uleb128 0x2
 7361 00e4 01       		.byte	0x1
 7362 00e5 08       		.byte	0x8
 7363 00e6 CF040000 		.4byte	.LASF20
 7364 00ea 05       		.uleb128 0x5
 7365 00eb 9A0A0000 		.4byte	.LASF21
 7366 00ef 04       		.byte	0x4
 7367 00f0 8602     		.2byte	0x286
 7368 00f2 53000000 		.4byte	0x53
 7369 00f6 05       		.uleb128 0x5
 7370 00f7 C10C0000 		.4byte	.LASF22
 7371 00fb 04       		.byte	0x4
 7372 00fc 8E02     		.2byte	0x28e
 7373 00fe 02010000 		.4byte	0x102
 7374 0102 06       		.uleb128 0x6
 7375 0103 81000000 		.4byte	0x81
 7376 0107 02       		.uleb128 0x2
 7377 0108 08       		.byte	0x8
 7378 0109 04       		.byte	0x4
 7379 010a 460B0000 		.4byte	.LASF23
 7380 010e 02       		.uleb128 0x2
 7381 010f 04       		.byte	0x4
 7382 0110 07       		.byte	0x7
 7383 0111 10000000 		.4byte	.LASF24
 7384 0115 07       		.uleb128 0x7
 7385 0116 E3000000 		.4byte	0xe3
 7386 011a 25010000 		.4byte	0x125
 7387 011e 08       		.uleb128 0x8
 7388 011f 0E010000 		.4byte	0x10e
 7389 0123 07       		.byte	0x7
 7390 0124 00       		.byte	0
 7391 0125 09       		.uleb128 0x9
 7392 0126 16110000 		.4byte	.LASF33
 7393 012a 01       		.byte	0x1
 7394 012b 2C000000 		.4byte	0x2c
 7395 012f 05       		.byte	0x5
 7396 0130 8F       		.byte	0x8f
 7397 0131 66010000 		.4byte	0x166
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 169


 7398 0135 0A       		.uleb128 0xa
 7399 0136 AF060000 		.4byte	.LASF25
 7400 013a 00       		.byte	0
 7401 013b 0A       		.uleb128 0xa
 7402 013c A30A0000 		.4byte	.LASF26
 7403 0140 01       		.byte	0x1
 7404 0141 0A       		.uleb128 0xa
 7405 0142 2E020000 		.4byte	.LASF27
 7406 0146 02       		.byte	0x2
 7407 0147 0A       		.uleb128 0xa
 7408 0148 71010000 		.4byte	.LASF28
 7409 014c 03       		.byte	0x3
 7410 014d 0A       		.uleb128 0xa
 7411 014e 2B010000 		.4byte	.LASF29
 7412 0152 04       		.byte	0x4
 7413 0153 0A       		.uleb128 0xa
 7414 0154 53000000 		.4byte	.LASF30
 7415 0158 05       		.byte	0x5
 7416 0159 0A       		.uleb128 0xa
 7417 015a 76070000 		.4byte	.LASF31
 7418 015e 06       		.byte	0x6
 7419 015f 0A       		.uleb128 0xa
 7420 0160 D10D0000 		.4byte	.LASF32
 7421 0164 07       		.byte	0x7
 7422 0165 00       		.byte	0
 7423 0166 09       		.uleb128 0x9
 7424 0167 E8080000 		.4byte	.LASF34
 7425 016b 01       		.byte	0x1
 7426 016c 2C000000 		.4byte	0x2c
 7427 0170 05       		.byte	0x5
 7428 0171 A3       		.byte	0xa3
 7429 0172 8F010000 		.4byte	0x18f
 7430 0176 0A       		.uleb128 0xa
 7431 0177 CE100000 		.4byte	.LASF35
 7432 017b 00       		.byte	0
 7433 017c 0A       		.uleb128 0xa
 7434 017d 05080000 		.4byte	.LASF36
 7435 0181 01       		.byte	0x1
 7436 0182 0A       		.uleb128 0xa
 7437 0183 360B0000 		.4byte	.LASF37
 7438 0187 02       		.byte	0x2
 7439 0188 0A       		.uleb128 0xa
 7440 0189 1F070000 		.4byte	.LASF38
 7441 018d 03       		.byte	0x3
 7442 018e 00       		.byte	0
 7443 018f 03       		.uleb128 0x3
 7444 0190 99100000 		.4byte	.LASF39
 7445 0194 06       		.byte	0x6
 7446 0195 7E       		.byte	0x7e
 7447 0196 9A010000 		.4byte	0x19a
 7448 019a 0B       		.uleb128 0xb
 7449 019b 99100000 		.4byte	.LASF39
 7450 019f 0C       		.uleb128 0xc
 7451 01a0 04       		.byte	0x4
 7452 01a1 8F010000 		.4byte	0x18f
 7453 01a5 0D       		.uleb128 0xd
 7454 01a6 B5080000 		.4byte	.LASF42
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 170


 7455 01aa 10       		.byte	0x10
 7456 01ab 07       		.byte	0x7
 7457 01ac E6       		.byte	0xe6
 7458 01ad E2010000 		.4byte	0x1e2
 7459 01b1 0E       		.uleb128 0xe
 7460 01b2 706F7300 		.ascii	"pos\000"
 7461 01b6 07       		.byte	0x7
 7462 01b7 E7       		.byte	0xe7
 7463 01b8 BD000000 		.4byte	0xbd
 7464 01bc 00       		.byte	0
 7465 01bd 0F       		.uleb128 0xf
 7466 01be EA070000 		.4byte	.LASF40
 7467 01c2 07       		.byte	0x7
 7468 01c3 E8       		.byte	0xe8
 7469 01c4 BD000000 		.4byte	0xbd
 7470 01c8 04       		.byte	0x4
 7471 01c9 0E       		.uleb128 0xe
 7472 01ca 70776D00 		.ascii	"pwm\000"
 7473 01ce 07       		.byte	0x7
 7474 01cf E9       		.byte	0xe9
 7475 01d0 BD000000 		.4byte	0xbd
 7476 01d4 08       		.byte	0x8
 7477 01d5 0F       		.uleb128 0xf
 7478 01d6 6B0C0000 		.4byte	.LASF41
 7479 01da 07       		.byte	0x7
 7480 01db EA       		.byte	0xea
 7481 01dc 81000000 		.4byte	0x81
 7482 01e0 0C       		.byte	0xc
 7483 01e1 00       		.byte	0
 7484 01e2 0D       		.uleb128 0xd
 7485 01e3 980D0000 		.4byte	.LASF43
 7486 01e7 34       		.byte	0x34
 7487 01e8 07       		.byte	0x7
 7488 01e9 F1       		.byte	0xf1
 7489 01ea 43020000 		.4byte	0x243
 7490 01ee 0E       		.uleb128 0xe
 7491 01ef 706F7300 		.ascii	"pos\000"
 7492 01f3 07       		.byte	0x7
 7493 01f4 F2       		.byte	0xf2
 7494 01f5 43020000 		.4byte	0x243
 7495 01f9 00       		.byte	0
 7496 01fa 0F       		.uleb128 0xf
 7497 01fb EA070000 		.4byte	.LASF40
 7498 01ff 07       		.byte	0x7
 7499 0200 F3       		.byte	0xf3
 7500 0201 BD000000 		.4byte	0xbd
 7501 0205 0C       		.byte	0xc
 7502 0206 0F       		.uleb128 0xf
 7503 0207 3E0F0000 		.4byte	.LASF44
 7504 020b 07       		.byte	0x7
 7505 020c F4       		.byte	0xf4
 7506 020d BD000000 		.4byte	0xbd
 7507 0211 10       		.byte	0x10
 7508 0212 0F       		.uleb128 0xf
 7509 0213 6C070000 		.4byte	.LASF45
 7510 0217 07       		.byte	0x7
 7511 0218 F5       		.byte	0xf5
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 171


 7512 0219 BD000000 		.4byte	0xbd
 7513 021d 14       		.byte	0x14
 7514 021e 0E       		.uleb128 0xe
 7515 021f 726F7400 		.ascii	"rot\000"
 7516 0223 07       		.byte	0x7
 7517 0224 F6       		.byte	0xf6
 7518 0225 53020000 		.4byte	0x253
 7519 0229 18       		.byte	0x18
 7520 022a 0E       		.uleb128 0xe
 7521 022b 76656C00 		.ascii	"vel\000"
 7522 022f 07       		.byte	0x7
 7523 0230 F7       		.byte	0xf7
 7524 0231 43020000 		.4byte	0x243
 7525 0235 1C       		.byte	0x1c
 7526 0236 0E       		.uleb128 0xe
 7527 0237 61636300 		.ascii	"acc\000"
 7528 023b 07       		.byte	0x7
 7529 023c F8       		.byte	0xf8
 7530 023d 43020000 		.4byte	0x243
 7531 0241 28       		.byte	0x28
 7532 0242 00       		.byte	0
 7533 0243 07       		.uleb128 0x7
 7534 0244 BD000000 		.4byte	0xbd
 7535 0248 53020000 		.4byte	0x253
 7536 024c 08       		.uleb128 0x8
 7537 024d 0E010000 		.4byte	0x10e
 7538 0251 02       		.byte	0x2
 7539 0252 00       		.byte	0
 7540 0253 07       		.uleb128 0x7
 7541 0254 A5000000 		.4byte	0xa5
 7542 0258 63020000 		.4byte	0x263
 7543 025c 08       		.uleb128 0x8
 7544 025d 0E010000 		.4byte	0x10e
 7545 0261 02       		.byte	0x2
 7546 0262 00       		.byte	0
 7547 0263 0D       		.uleb128 0xd
 7548 0264 360A0000 		.4byte	.LASF46
 7549 0268 28       		.byte	0x28
 7550 0269 07       		.byte	0x7
 7551 026a FB       		.byte	0xfb
 7552 026b 94020000 		.4byte	0x294
 7553 026f 0E       		.uleb128 0xe
 7554 0270 656D6700 		.ascii	"emg\000"
 7555 0274 07       		.byte	0x7
 7556 0275 FC       		.byte	0xfc
 7557 0276 94020000 		.4byte	0x294
 7558 027a 00       		.byte	0
 7559 027b 0F       		.uleb128 0xf
 7560 027c ED0A0000 		.4byte	.LASF47
 7561 0280 07       		.byte	0x7
 7562 0281 FD       		.byte	0xfd
 7563 0282 A4020000 		.4byte	0x2a4
 7564 0286 08       		.byte	0x8
 7565 0287 0F       		.uleb128 0xf
 7566 0288 700E0000 		.4byte	.LASF48
 7567 028c 07       		.byte	0x7
 7568 028d FE       		.byte	0xfe
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 172


 7569 028e 94020000 		.4byte	0x294
 7570 0292 20       		.byte	0x20
 7571 0293 00       		.byte	0
 7572 0294 07       		.uleb128 0x7
 7573 0295 BD000000 		.4byte	0xbd
 7574 0299 A4020000 		.4byte	0x2a4
 7575 029d 08       		.uleb128 0x8
 7576 029e 0E010000 		.4byte	0x10e
 7577 02a2 01       		.byte	0x1
 7578 02a3 00       		.byte	0
 7579 02a4 07       		.uleb128 0x7
 7580 02a5 BD000000 		.4byte	0xbd
 7581 02a9 B4020000 		.4byte	0x2b4
 7582 02ad 08       		.uleb128 0x8
 7583 02ae 0E010000 		.4byte	0x10e
 7584 02b2 05       		.byte	0x5
 7585 02b3 00       		.byte	0
 7586 02b4 10       		.uleb128 0x10
 7587 02b5 A9000000 		.4byte	.LASF49
 7588 02b9 86       		.byte	0x86
 7589 02ba 07       		.byte	0x7
 7590 02bb 0901     		.2byte	0x109
 7591 02bd F6020000 		.4byte	0x2f6
 7592 02c1 11       		.uleb128 0x11
 7593 02c2 DE050000 		.4byte	.LASF50
 7594 02c6 07       		.byte	0x7
 7595 02c7 0A01     		.2byte	0x10a
 7596 02c9 F6020000 		.4byte	0x2f6
 7597 02cd 00       		.byte	0
 7598 02ce 11       		.uleb128 0x11
 7599 02cf 4E0C0000 		.4byte	.LASF51
 7600 02d3 07       		.byte	0x7
 7601 02d4 0B01     		.2byte	0x10b
 7602 02d6 B1000000 		.4byte	0xb1
 7603 02da 80       		.byte	0x80
 7604 02db 12       		.uleb128 0x12
 7605 02dc 696E6400 		.ascii	"ind\000"
 7606 02e0 07       		.byte	0x7
 7607 02e1 0C01     		.2byte	0x10c
 7608 02e3 B1000000 		.4byte	0xb1
 7609 02e7 82       		.byte	0x82
 7610 02e8 11       		.uleb128 0x11
 7611 02e9 01020000 		.4byte	.LASF52
 7612 02ed 07       		.byte	0x7
 7613 02ee 0D01     		.2byte	0x10d
 7614 02f0 81000000 		.4byte	0x81
 7615 02f4 84       		.byte	0x84
 7616 02f5 00       		.byte	0
 7617 02f6 07       		.uleb128 0x7
 7618 02f7 81000000 		.4byte	0x81
 7619 02fb 06030000 		.4byte	0x306
 7620 02ff 08       		.uleb128 0x8
 7621 0300 0E010000 		.4byte	0x10e
 7622 0304 7F       		.byte	0x7f
 7623 0305 00       		.byte	0
 7624 0306 10       		.uleb128 0x10
 7625 0307 76030000 		.4byte	.LASF53
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 173


 7626 030b 70       		.byte	0x70
 7627 030c 07       		.byte	0x7
 7628 030d 1601     		.2byte	0x116
 7629 030f A3030000 		.4byte	0x3a3
 7630 0313 11       		.uleb128 0x11
 7631 0314 00000000 		.4byte	.LASF54
 7632 0318 07       		.byte	0x7
 7633 0319 1701     		.2byte	0x117
 7634 031b A3030000 		.4byte	0x3a3
 7635 031f 00       		.byte	0
 7636 0320 11       		.uleb128 0x11
 7637 0321 BE010000 		.4byte	.LASF55
 7638 0325 07       		.byte	0x7
 7639 0326 1801     		.2byte	0x118
 7640 0328 B3030000 		.4byte	0x3b3
 7641 032c 08       		.byte	0x8
 7642 032d 11       		.uleb128 0x11
 7643 032e 290B0000 		.4byte	.LASF56
 7644 0332 07       		.byte	0x7
 7645 0333 1901     		.2byte	0x119
 7646 0335 C3030000 		.4byte	0x3c3
 7647 0339 30       		.byte	0x30
 7648 033a 11       		.uleb128 0x11
 7649 033b 55010000 		.4byte	.LASF57
 7650 033f 07       		.byte	0x7
 7651 0340 1A01     		.2byte	0x11a
 7652 0342 99000000 		.4byte	0x99
 7653 0346 40       		.byte	0x40
 7654 0347 11       		.uleb128 0x11
 7655 0348 E6100000 		.4byte	.LASF58
 7656 034c 07       		.byte	0x7
 7657 034d 1B01     		.2byte	0x11b
 7658 034f 99000000 		.4byte	0x99
 7659 0353 44       		.byte	0x44
 7660 0354 11       		.uleb128 0x11
 7661 0355 B1000000 		.4byte	.LASF59
 7662 0359 07       		.byte	0x7
 7663 035a 1C01     		.2byte	0x11c
 7664 035c 99000000 		.4byte	0x99
 7665 0360 48       		.byte	0x48
 7666 0361 11       		.uleb128 0x11
 7667 0362 8A070000 		.4byte	.LASF60
 7668 0366 07       		.byte	0x7
 7669 0367 1D01     		.2byte	0x11d
 7670 0369 99000000 		.4byte	0x99
 7671 036d 4C       		.byte	0x4c
 7672 036e 11       		.uleb128 0x11
 7673 036f 19000000 		.4byte	.LASF61
 7674 0373 07       		.byte	0x7
 7675 0374 1E01     		.2byte	0x11e
 7676 0376 99000000 		.4byte	0x99
 7677 037a 50       		.byte	0x50
 7678 037b 11       		.uleb128 0x11
 7679 037c 68020000 		.4byte	.LASF62
 7680 0380 07       		.byte	0x7
 7681 0381 1F01     		.2byte	0x11f
 7682 0383 A3030000 		.4byte	0x3a3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 174


 7683 0387 54       		.byte	0x54
 7684 0388 11       		.uleb128 0x11
 7685 0389 6A0B0000 		.4byte	.LASF63
 7686 038d 07       		.byte	0x7
 7687 038e 2001     		.2byte	0x120
 7688 0390 A3030000 		.4byte	0x3a3
 7689 0394 5C       		.byte	0x5c
 7690 0395 11       		.uleb128 0x11
 7691 0396 43030000 		.4byte	.LASF64
 7692 039a 07       		.byte	0x7
 7693 039b 2101     		.2byte	0x121
 7694 039d D3030000 		.4byte	0x3d3
 7695 03a1 64       		.byte	0x64
 7696 03a2 00       		.byte	0
 7697 03a3 07       		.uleb128 0x7
 7698 03a4 99000000 		.4byte	0x99
 7699 03a8 B3030000 		.4byte	0x3b3
 7700 03ac 08       		.uleb128 0x8
 7701 03ad 0E010000 		.4byte	0x10e
 7702 03b1 01       		.byte	0x1
 7703 03b2 00       		.byte	0
 7704 03b3 07       		.uleb128 0x7
 7705 03b4 99000000 		.4byte	0x99
 7706 03b8 C3030000 		.4byte	0x3c3
 7707 03bc 08       		.uleb128 0x8
 7708 03bd 0E010000 		.4byte	0x10e
 7709 03c1 09       		.byte	0x9
 7710 03c2 00       		.byte	0
 7711 03c3 07       		.uleb128 0x7
 7712 03c4 99000000 		.4byte	0x99
 7713 03c8 D3030000 		.4byte	0x3d3
 7714 03cc 08       		.uleb128 0x8
 7715 03cd 0E010000 		.4byte	0x10e
 7716 03d1 03       		.byte	0x3
 7717 03d2 00       		.byte	0
 7718 03d3 07       		.uleb128 0x7
 7719 03d4 81000000 		.4byte	0x81
 7720 03d8 E3030000 		.4byte	0x3e3
 7721 03dc 08       		.uleb128 0x8
 7722 03dd 0E010000 		.4byte	0x10e
 7723 03e1 0B       		.byte	0xb
 7724 03e2 00       		.byte	0
 7725 03e3 10       		.uleb128 0x10
 7726 03e4 24020000 		.4byte	.LASF65
 7727 03e8 10       		.byte	0x10
 7728 03e9 07       		.byte	0x7
 7729 03ea 2801     		.2byte	0x128
 7730 03ec 72040000 		.4byte	0x472
 7731 03f0 12       		.uleb128 0x12
 7732 03f1 696400   		.ascii	"id\000"
 7733 03f4 07       		.byte	0x7
 7734 03f5 2901     		.2byte	0x129
 7735 03f7 81000000 		.4byte	0x81
 7736 03fb 00       		.byte	0
 7737 03fc 11       		.uleb128 0x11
 7738 03fd 7F0E0000 		.4byte	.LASF66
 7739 0401 07       		.byte	0x7
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 175


 7740 0402 2A01     		.2byte	0x12a
 7741 0404 72040000 		.4byte	0x472
 7742 0408 01       		.byte	0x1
 7743 0409 11       		.uleb128 0x11
 7744 040a B20E0000 		.4byte	.LASF67
 7745 040e 07       		.byte	0x7
 7746 040f 2B01     		.2byte	0x12b
 7747 0411 72040000 		.4byte	0x472
 7748 0415 04       		.byte	0x4
 7749 0416 11       		.uleb128 0x11
 7750 0417 97040000 		.4byte	.LASF68
 7751 041b 07       		.byte	0x7
 7752 041c 2C01     		.2byte	0x12c
 7753 041e 81000000 		.4byte	0x81
 7754 0422 07       		.byte	0x7
 7755 0423 11       		.uleb128 0x11
 7756 0424 FF020000 		.4byte	.LASF69
 7757 0428 07       		.byte	0x7
 7758 0429 2D01     		.2byte	0x12d
 7759 042b 81000000 		.4byte	0x81
 7760 042f 08       		.byte	0x8
 7761 0430 11       		.uleb128 0x11
 7762 0431 4A020000 		.4byte	.LASF70
 7763 0435 07       		.byte	0x7
 7764 0436 2E01     		.2byte	0x12e
 7765 0438 81000000 		.4byte	0x81
 7766 043c 09       		.byte	0x9
 7767 043d 11       		.uleb128 0x11
 7768 043e CA0F0000 		.4byte	.LASF71
 7769 0442 07       		.byte	0x7
 7770 0443 2F01     		.2byte	0x12f
 7771 0445 81000000 		.4byte	0x81
 7772 0449 0A       		.byte	0xa
 7773 044a 11       		.uleb128 0x11
 7774 044b 5E0F0000 		.4byte	.LASF72
 7775 044f 07       		.byte	0x7
 7776 0450 3001     		.2byte	0x130
 7777 0452 81000000 		.4byte	0x81
 7778 0456 0B       		.byte	0xb
 7779 0457 11       		.uleb128 0x11
 7780 0458 470D0000 		.4byte	.LASF73
 7781 045c 07       		.byte	0x7
 7782 045d 3101     		.2byte	0x131
 7783 045f 81000000 		.4byte	0x81
 7784 0463 0C       		.byte	0xc
 7785 0464 11       		.uleb128 0x11
 7786 0465 43030000 		.4byte	.LASF64
 7787 0469 07       		.byte	0x7
 7788 046a 3201     		.2byte	0x132
 7789 046c 72040000 		.4byte	0x472
 7790 0470 0D       		.byte	0xd
 7791 0471 00       		.byte	0
 7792 0472 07       		.uleb128 0x7
 7793 0473 81000000 		.4byte	0x81
 7794 0477 82040000 		.4byte	0x482
 7795 047b 08       		.uleb128 0x8
 7796 047c 0E010000 		.4byte	0x10e
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 176


 7797 0480 02       		.byte	0x2
 7798 0481 00       		.byte	0
 7799 0482 10       		.uleb128 0x10
 7800 0483 90100000 		.4byte	.LASF74
 7801 0487 70       		.byte	0x70
 7802 0488 07       		.byte	0x7
 7803 0489 3901     		.2byte	0x139
 7804 048b FC050000 		.4byte	0x5fc
 7805 048f 12       		.uleb128 0x12
 7806 0490 6B5F7000 		.ascii	"k_p\000"
 7807 0494 07       		.byte	0x7
 7808 0495 3A01     		.2byte	0x13a
 7809 0497 BD000000 		.4byte	0xbd
 7810 049b 00       		.byte	0
 7811 049c 12       		.uleb128 0x12
 7812 049d 6B5F6900 		.ascii	"k_i\000"
 7813 04a1 07       		.byte	0x7
 7814 04a2 3B01     		.2byte	0x13b
 7815 04a4 BD000000 		.4byte	0xbd
 7816 04a8 04       		.byte	0x4
 7817 04a9 12       		.uleb128 0x12
 7818 04aa 6B5F6400 		.ascii	"k_d\000"
 7819 04ae 07       		.byte	0x7
 7820 04af 3C01     		.2byte	0x13c
 7821 04b1 BD000000 		.4byte	0xbd
 7822 04b5 08       		.byte	0x8
 7823 04b6 11       		.uleb128 0x11
 7824 04b7 A60C0000 		.4byte	.LASF75
 7825 04bb 07       		.byte	0x7
 7826 04bc 3D01     		.2byte	0x13d
 7827 04be BD000000 		.4byte	0xbd
 7828 04c2 0C       		.byte	0xc
 7829 04c3 11       		.uleb128 0x11
 7830 04c4 50050000 		.4byte	.LASF76
 7831 04c8 07       		.byte	0x7
 7832 04c9 3E01     		.2byte	0x13e
 7833 04cb BD000000 		.4byte	0xbd
 7834 04cf 10       		.byte	0x10
 7835 04d0 11       		.uleb128 0x11
 7836 04d1 38050000 		.4byte	.LASF77
 7837 04d5 07       		.byte	0x7
 7838 04d6 3F01     		.2byte	0x13f
 7839 04d8 BD000000 		.4byte	0xbd
 7840 04dc 14       		.byte	0x14
 7841 04dd 11       		.uleb128 0x11
 7842 04de 370F0000 		.4byte	.LASF78
 7843 04e2 07       		.byte	0x7
 7844 04e3 4001     		.2byte	0x140
 7845 04e5 BD000000 		.4byte	0xbd
 7846 04e9 18       		.byte	0x18
 7847 04ea 11       		.uleb128 0x11
 7848 04eb D7050000 		.4byte	.LASF79
 7849 04ef 07       		.byte	0x7
 7850 04f0 4101     		.2byte	0x141
 7851 04f2 BD000000 		.4byte	0xbd
 7852 04f6 1C       		.byte	0x1c
 7853 04f7 11       		.uleb128 0x11
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 177


 7854 04f8 5B0E0000 		.4byte	.LASF80
 7855 04fc 07       		.byte	0x7
 7856 04fd 4201     		.2byte	0x142
 7857 04ff BD000000 		.4byte	0xbd
 7858 0503 20       		.byte	0x20
 7859 0504 11       		.uleb128 0x11
 7860 0505 E5050000 		.4byte	.LASF81
 7861 0509 07       		.byte	0x7
 7862 050a 4301     		.2byte	0x143
 7863 050c BD000000 		.4byte	0xbd
 7864 0510 24       		.byte	0x24
 7865 0511 11       		.uleb128 0x11
 7866 0512 08070000 		.4byte	.LASF82
 7867 0516 07       		.byte	0x7
 7868 0517 4401     		.2byte	0x144
 7869 0519 BD000000 		.4byte	0xbd
 7870 051d 28       		.byte	0x28
 7871 051e 11       		.uleb128 0x11
 7872 051f 5E110000 		.4byte	.LASF83
 7873 0523 07       		.byte	0x7
 7874 0524 4501     		.2byte	0x145
 7875 0526 BD000000 		.4byte	0xbd
 7876 052a 2C       		.byte	0x2c
 7877 052b 11       		.uleb128 0x11
 7878 052c 9A070000 		.4byte	.LASF84
 7879 0530 07       		.byte	0x7
 7880 0531 4601     		.2byte	0x146
 7881 0533 81000000 		.4byte	0x81
 7882 0537 30       		.byte	0x30
 7883 0538 11       		.uleb128 0x11
 7884 0539 200F0000 		.4byte	.LASF85
 7885 053d 07       		.byte	0x7
 7886 053e 4701     		.2byte	0x147
 7887 0540 81000000 		.4byte	0x81
 7888 0544 31       		.byte	0x31
 7889 0545 11       		.uleb128 0x11
 7890 0546 56050000 		.4byte	.LASF86
 7891 054a 07       		.byte	0x7
 7892 054b 4801     		.2byte	0x148
 7893 054d 81000000 		.4byte	0x81
 7894 0551 32       		.byte	0x32
 7895 0552 11       		.uleb128 0x11
 7896 0553 A1100000 		.4byte	.LASF87
 7897 0557 07       		.byte	0x7
 7898 0558 4901     		.2byte	0x149
 7899 055a 81000000 		.4byte	0x81
 7900 055e 33       		.byte	0x33
 7901 055f 11       		.uleb128 0x11
 7902 0560 D6000000 		.4byte	.LASF88
 7903 0564 07       		.byte	0x7
 7904 0565 4A01     		.2byte	0x14a
 7905 0567 BD000000 		.4byte	0xbd
 7906 056b 34       		.byte	0x34
 7907 056c 11       		.uleb128 0x11
 7908 056d 8A050000 		.4byte	.LASF89
 7909 0571 07       		.byte	0x7
 7910 0572 4B01     		.2byte	0x14b
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 178


 7911 0574 BD000000 		.4byte	0xbd
 7912 0578 38       		.byte	0x38
 7913 0579 11       		.uleb128 0x11
 7914 057a 73090000 		.4byte	.LASF90
 7915 057e 07       		.byte	0x7
 7916 057f 4C01     		.2byte	0x14c
 7917 0581 BD000000 		.4byte	0xbd
 7918 0585 3C       		.byte	0x3c
 7919 0586 11       		.uleb128 0x11
 7920 0587 EC040000 		.4byte	.LASF91
 7921 058b 07       		.byte	0x7
 7922 058c 4D01     		.2byte	0x14d
 7923 058e BD000000 		.4byte	0xbd
 7924 0592 40       		.byte	0x40
 7925 0593 11       		.uleb128 0x11
 7926 0594 3F010000 		.4byte	.LASF92
 7927 0598 07       		.byte	0x7
 7928 0599 4E01     		.2byte	0x14e
 7929 059b FC050000 		.4byte	0x5fc
 7930 059f 44       		.byte	0x44
 7931 05a0 11       		.uleb128 0x11
 7932 05a1 08110000 		.4byte	.LASF93
 7933 05a5 07       		.byte	0x7
 7934 05a6 4F01     		.2byte	0x14f
 7935 05a8 B1000000 		.4byte	0xb1
 7936 05ac 5C       		.byte	0x5c
 7937 05ad 11       		.uleb128 0x11
 7938 05ae FA070000 		.4byte	.LASF94
 7939 05b2 07       		.byte	0x7
 7940 05b3 5001     		.2byte	0x150
 7941 05b5 81000000 		.4byte	0x81
 7942 05b9 5E       		.byte	0x5e
 7943 05ba 11       		.uleb128 0x11
 7944 05bb 8D0A0000 		.4byte	.LASF95
 7945 05bf 07       		.byte	0x7
 7946 05c0 5101     		.2byte	0x151
 7947 05c2 81000000 		.4byte	0x81
 7948 05c6 5F       		.byte	0x5f
 7949 05c7 11       		.uleb128 0x11
 7950 05c8 A2040000 		.4byte	.LASF96
 7951 05cc 07       		.byte	0x7
 7952 05cd 5201     		.2byte	0x152
 7953 05cf 81000000 		.4byte	0x81
 7954 05d3 60       		.byte	0x60
 7955 05d4 11       		.uleb128 0x11
 7956 05d5 27050000 		.4byte	.LASF97
 7957 05d9 07       		.byte	0x7
 7958 05da 5301     		.2byte	0x153
 7959 05dc 81000000 		.4byte	0x81
 7960 05e0 61       		.byte	0x61
 7961 05e1 11       		.uleb128 0x11
 7962 05e2 4B040000 		.4byte	.LASF98
 7963 05e6 07       		.byte	0x7
 7964 05e7 5401     		.2byte	0x154
 7965 05e9 81000000 		.4byte	0x81
 7966 05ed 62       		.byte	0x62
 7967 05ee 11       		.uleb128 0x11
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 179


 7968 05ef 43030000 		.4byte	.LASF64
 7969 05f3 07       		.byte	0x7
 7970 05f4 5501     		.2byte	0x155
 7971 05f6 0C060000 		.4byte	0x60c
 7972 05fa 63       		.byte	0x63
 7973 05fb 00       		.byte	0
 7974 05fc 07       		.uleb128 0x7
 7975 05fd D5000000 		.4byte	0xd5
 7976 0601 0C060000 		.4byte	0x60c
 7977 0605 08       		.uleb128 0x8
 7978 0606 0E010000 		.4byte	0x10e
 7979 060a 05       		.byte	0x5
 7980 060b 00       		.byte	0
 7981 060c 07       		.uleb128 0x7
 7982 060d 81000000 		.4byte	0x81
 7983 0611 1C060000 		.4byte	0x61c
 7984 0615 08       		.uleb128 0x8
 7985 0616 0E010000 		.4byte	0x10e
 7986 061a 0C       		.byte	0xc
 7987 061b 00       		.byte	0
 7988 061c 10       		.uleb128 0x10
 7989 061d 09100000 		.4byte	.LASF99
 7990 0621 30       		.byte	0x30
 7991 0622 07       		.byte	0x7
 7992 0623 5C01     		.2byte	0x15c
 7993 0625 9F060000 		.4byte	0x69f
 7994 0629 11       		.uleb128 0x11
 7995 062a 39090000 		.4byte	.LASF100
 7996 062e 07       		.byte	0x7
 7997 062f 5D01     		.2byte	0x15d
 7998 0631 9F060000 		.4byte	0x69f
 7999 0635 00       		.byte	0
 8000 0636 12       		.uleb128 0x12
 8001 0637 72657300 		.ascii	"res\000"
 8002 063b 07       		.byte	0x7
 8003 063c 5E01     		.2byte	0x15e
 8004 063e 72040000 		.4byte	0x472
 8005 0642 05       		.byte	0x5
 8006 0643 11       		.uleb128 0x11
 8007 0644 BA070000 		.4byte	.LASF101
 8008 0648 07       		.byte	0x7
 8009 0649 5F01     		.2byte	0x15f
 8010 064b 43020000 		.4byte	0x243
 8011 064f 08       		.byte	0x8
 8012 0650 11       		.uleb128 0x11
 8013 0651 49050000 		.4byte	.LASF102
 8014 0655 07       		.byte	0x7
 8015 0656 6001     		.2byte	0x160
 8016 0658 AF060000 		.4byte	0x6af
 8017 065c 14       		.byte	0x14
 8018 065d 11       		.uleb128 0x11
 8019 065e AB0B0000 		.4byte	.LASF103
 8020 0662 07       		.byte	0x7
 8021 0663 6101     		.2byte	0x161
 8022 0665 81000000 		.4byte	0x81
 8023 0669 20       		.byte	0x20
 8024 066a 11       		.uleb128 0x11
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 180


 8025 066b 07020000 		.4byte	.LASF104
 8026 066f 07       		.byte	0x7
 8027 0670 6201     		.2byte	0x162
 8028 0672 72040000 		.4byte	0x472
 8029 0676 21       		.byte	0x21
 8030 0677 11       		.uleb128 0x11
 8031 0678 160B0000 		.4byte	.LASF105
 8032 067c 07       		.byte	0x7
 8033 067d 6301     		.2byte	0x163
 8034 067f A5000000 		.4byte	0xa5
 8035 0683 24       		.byte	0x24
 8036 0684 11       		.uleb128 0x11
 8037 0685 690D0000 		.4byte	.LASF106
 8038 0689 07       		.byte	0x7
 8039 068a 6401     		.2byte	0x164
 8040 068c 53020000 		.4byte	0x253
 8041 0690 25       		.byte	0x25
 8042 0691 11       		.uleb128 0x11
 8043 0692 43030000 		.4byte	.LASF64
 8044 0696 07       		.byte	0x7
 8045 0697 6501     		.2byte	0x165
 8046 0699 BF060000 		.4byte	0x6bf
 8047 069d 28       		.byte	0x28
 8048 069e 00       		.byte	0
 8049 069f 07       		.uleb128 0x7
 8050 06a0 81000000 		.4byte	0x81
 8051 06a4 AF060000 		.4byte	0x6af
 8052 06a8 08       		.uleb128 0x8
 8053 06a9 0E010000 		.4byte	0x10e
 8054 06ad 04       		.byte	0x4
 8055 06ae 00       		.byte	0
 8056 06af 07       		.uleb128 0x7
 8057 06b0 C9000000 		.4byte	0xc9
 8058 06b4 BF060000 		.4byte	0x6bf
 8059 06b8 08       		.uleb128 0x8
 8060 06b9 0E010000 		.4byte	0x10e
 8061 06bd 02       		.byte	0x2
 8062 06be 00       		.byte	0
 8063 06bf 07       		.uleb128 0x7
 8064 06c0 81000000 		.4byte	0x81
 8065 06c4 CF060000 		.4byte	0x6cf
 8066 06c8 08       		.uleb128 0x8
 8067 06c9 0E010000 		.4byte	0x10e
 8068 06cd 07       		.byte	0x7
 8069 06ce 00       		.byte	0
 8070 06cf 10       		.uleb128 0x10
 8071 06d0 B7010000 		.4byte	.LASF107
 8072 06d4 10       		.byte	0x10
 8073 06d5 07       		.byte	0x7
 8074 06d6 6C01     		.2byte	0x16c
 8075 06d8 1E070000 		.4byte	0x71e
 8076 06dc 11       		.uleb128 0x11
 8077 06dd F50A0000 		.4byte	.LASF108
 8078 06e1 07       		.byte	0x7
 8079 06e2 6D01     		.2byte	0x16d
 8080 06e4 1E070000 		.4byte	0x71e
 8081 06e8 00       		.byte	0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 181


 8082 06e9 11       		.uleb128 0x11
 8083 06ea FA100000 		.4byte	.LASF109
 8084 06ee 07       		.byte	0x7
 8085 06ef 6E01     		.2byte	0x16e
 8086 06f1 A3030000 		.4byte	0x3a3
 8087 06f5 04       		.byte	0x4
 8088 06f6 11       		.uleb128 0x11
 8089 06f7 A0050000 		.4byte	.LASF110
 8090 06fb 07       		.byte	0x7
 8091 06fc 6F01     		.2byte	0x16f
 8092 06fe 2E070000 		.4byte	0x72e
 8093 0702 0C       		.byte	0xc
 8094 0703 11       		.uleb128 0x11
 8095 0704 830D0000 		.4byte	.LASF111
 8096 0708 07       		.byte	0x7
 8097 0709 7001     		.2byte	0x170
 8098 070b 81000000 		.4byte	0x81
 8099 070f 0E       		.byte	0xe
 8100 0710 11       		.uleb128 0x11
 8101 0711 09040000 		.4byte	.LASF112
 8102 0715 07       		.byte	0x7
 8103 0716 7101     		.2byte	0x171
 8104 0718 81000000 		.4byte	0x81
 8105 071c 0F       		.byte	0xf
 8106 071d 00       		.byte	0
 8107 071e 07       		.uleb128 0x7
 8108 071f 8D000000 		.4byte	0x8d
 8109 0723 2E070000 		.4byte	0x72e
 8110 0727 08       		.uleb128 0x8
 8111 0728 0E010000 		.4byte	0x10e
 8112 072c 01       		.byte	0x1
 8113 072d 00       		.byte	0
 8114 072e 07       		.uleb128 0x7
 8115 072f 81000000 		.4byte	0x81
 8116 0733 3E070000 		.4byte	0x73e
 8117 0737 08       		.uleb128 0x8
 8118 0738 0E010000 		.4byte	0x10e
 8119 073c 01       		.byte	0x1
 8120 073d 00       		.byte	0
 8121 073e 10       		.uleb128 0x10
 8122 073f B70A0000 		.4byte	.LASF113
 8123 0743 20       		.byte	0x20
 8124 0744 07       		.byte	0x7
 8125 0745 7801     		.2byte	0x178
 8126 0747 80070000 		.4byte	0x780
 8127 074b 11       		.uleb128 0x11
 8128 074c 8F020000 		.4byte	.LASF114
 8129 0750 07       		.byte	0x7
 8130 0751 7901     		.2byte	0x179
 8131 0753 81000000 		.4byte	0x81
 8132 0757 00       		.byte	0
 8133 0758 11       		.uleb128 0x11
 8134 0759 E70F0000 		.4byte	.LASF115
 8135 075d 07       		.byte	0x7
 8136 075e 7A01     		.2byte	0x17a
 8137 0760 81000000 		.4byte	0x81
 8138 0764 01       		.byte	0x1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 182


 8139 0765 11       		.uleb128 0x11
 8140 0766 A8090000 		.4byte	.LASF116
 8141 076a 07       		.byte	0x7
 8142 076b 7B01     		.2byte	0x17b
 8143 076d 80070000 		.4byte	0x780
 8144 0771 02       		.byte	0x2
 8145 0772 11       		.uleb128 0x11
 8146 0773 43030000 		.4byte	.LASF64
 8147 0777 07       		.byte	0x7
 8148 0778 7C01     		.2byte	0x17c
 8149 077a 9F060000 		.4byte	0x69f
 8150 077e 1B       		.byte	0x1b
 8151 077f 00       		.byte	0
 8152 0780 07       		.uleb128 0x7
 8153 0781 81000000 		.4byte	0x81
 8154 0785 96070000 		.4byte	0x796
 8155 0789 08       		.uleb128 0x8
 8156 078a 0E010000 		.4byte	0x10e
 8157 078e 04       		.byte	0x4
 8158 078f 08       		.uleb128 0x8
 8159 0790 0E010000 		.4byte	0x10e
 8160 0794 04       		.byte	0x4
 8161 0795 00       		.byte	0
 8162 0796 10       		.uleb128 0x10
 8163 0797 760D0000 		.4byte	.LASF117
 8164 079b 20       		.byte	0x20
 8165 079c 07       		.byte	0x7
 8166 079d 8301     		.2byte	0x183
 8167 079f F2070000 		.4byte	0x7f2
 8168 07a3 11       		.uleb128 0x11
 8169 07a4 A10B0000 		.4byte	.LASF118
 8170 07a8 07       		.byte	0x7
 8171 07a9 8401     		.2byte	0x184
 8172 07ab F2070000 		.4byte	0x7f2
 8173 07af 00       		.byte	0
 8174 07b0 11       		.uleb128 0x11
 8175 07b1 010F0000 		.4byte	.LASF119
 8176 07b5 07       		.byte	0x7
 8177 07b6 8501     		.2byte	0x185
 8178 07b8 81000000 		.4byte	0x81
 8179 07bc 06       		.byte	0x6
 8180 07bd 11       		.uleb128 0x11
 8181 07be 6B000000 		.4byte	.LASF120
 8182 07c2 07       		.byte	0x7
 8183 07c3 8601     		.2byte	0x186
 8184 07c5 81000000 		.4byte	0x81
 8185 07c9 07       		.byte	0x7
 8186 07ca 11       		.uleb128 0x11
 8187 07cb C0050000 		.4byte	.LASF121
 8188 07cf 07       		.byte	0x7
 8189 07d0 8701     		.2byte	0x187
 8190 07d2 D3030000 		.4byte	0x3d3
 8191 07d6 08       		.byte	0x8
 8192 07d7 11       		.uleb128 0x11
 8193 07d8 9D020000 		.4byte	.LASF122
 8194 07dc 07       		.byte	0x7
 8195 07dd 8801     		.2byte	0x188
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 183


 8196 07df 81000000 		.4byte	0x81
 8197 07e3 14       		.byte	0x14
 8198 07e4 11       		.uleb128 0x11
 8199 07e5 43030000 		.4byte	.LASF64
 8200 07e9 07       		.byte	0x7
 8201 07ea 8901     		.2byte	0x189
 8202 07ec 02080000 		.4byte	0x802
 8203 07f0 15       		.byte	0x15
 8204 07f1 00       		.byte	0
 8205 07f2 07       		.uleb128 0x7
 8206 07f3 81000000 		.4byte	0x81
 8207 07f7 02080000 		.4byte	0x802
 8208 07fb 08       		.uleb128 0x8
 8209 07fc 0E010000 		.4byte	0x10e
 8210 0800 05       		.byte	0x5
 8211 0801 00       		.byte	0
 8212 0802 07       		.uleb128 0x7
 8213 0803 81000000 		.4byte	0x81
 8214 0807 12080000 		.4byte	0x812
 8215 080b 08       		.uleb128 0x8
 8216 080c 0E010000 		.4byte	0x10e
 8217 0810 0A       		.byte	0xa
 8218 0811 00       		.byte	0
 8219 0812 10       		.uleb128 0x10
 8220 0813 610D0000 		.4byte	.LASF123
 8221 0817 20       		.byte	0x20
 8222 0818 07       		.byte	0x7
 8223 0819 9001     		.2byte	0x190
 8224 081b 47080000 		.4byte	0x847
 8225 081f 11       		.uleb128 0x11
 8226 0820 E4030000 		.4byte	.LASF124
 8227 0824 07       		.byte	0x7
 8228 0825 9101     		.2byte	0x191
 8229 0827 15010000 		.4byte	0x115
 8230 082b 00       		.byte	0
 8231 082c 11       		.uleb128 0x11
 8232 082d 1C030000 		.4byte	.LASF125
 8233 0831 07       		.byte	0x7
 8234 0832 9201     		.2byte	0x192
 8235 0834 CF060000 		.4byte	0x6cf
 8236 0838 08       		.byte	0x8
 8237 0839 11       		.uleb128 0x11
 8238 083a 43030000 		.4byte	.LASF64
 8239 083e 07       		.byte	0x7
 8240 083f 9301     		.2byte	0x193
 8241 0841 BF060000 		.4byte	0x6bf
 8242 0845 18       		.byte	0x18
 8243 0846 00       		.byte	0
 8244 0847 10       		.uleb128 0x10
 8245 0848 BC080000 		.4byte	.LASF126
 8246 084c 10       		.byte	0x10
 8247 084d 07       		.byte	0x7
 8248 084e 9A01     		.2byte	0x19a
 8249 0850 96080000 		.4byte	0x896
 8250 0854 11       		.uleb128 0x11
 8251 0855 E1070000 		.4byte	.LASF127
 8252 0859 07       		.byte	0x7
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 184


 8253 085a 9B01     		.2byte	0x19b
 8254 085c BD000000 		.4byte	0xbd
 8255 0860 00       		.byte	0
 8256 0861 11       		.uleb128 0x11
 8257 0862 40110000 		.4byte	.LASF128
 8258 0866 07       		.byte	0x7
 8259 0867 9C01     		.2byte	0x19c
 8260 0869 BD000000 		.4byte	0xbd
 8261 086d 04       		.byte	0x4
 8262 086e 11       		.uleb128 0x11
 8263 086f AA050000 		.4byte	.LASF129
 8264 0873 07       		.byte	0x7
 8265 0874 9D01     		.2byte	0x19d
 8266 0876 BD000000 		.4byte	0xbd
 8267 087a 08       		.byte	0x8
 8268 087b 11       		.uleb128 0x11
 8269 087c DE060000 		.4byte	.LASF130
 8270 0880 07       		.byte	0x7
 8271 0881 9E01     		.2byte	0x19e
 8272 0883 81000000 		.4byte	0x81
 8273 0887 0C       		.byte	0xc
 8274 0888 11       		.uleb128 0x11
 8275 0889 43030000 		.4byte	.LASF64
 8276 088d 07       		.byte	0x7
 8277 088e 9F01     		.2byte	0x19f
 8278 0890 72040000 		.4byte	0x472
 8279 0894 0D       		.byte	0xd
 8280 0895 00       		.byte	0
 8281 0896 10       		.uleb128 0x10
 8282 0897 310E0000 		.4byte	.LASF131
 8283 089b 10       		.byte	0x10
 8284 089c 07       		.byte	0x7
 8285 089d A601     		.2byte	0x1a6
 8286 089f D8080000 		.4byte	0x8d8
 8287 08a3 11       		.uleb128 0x11
 8288 08a4 F1060000 		.4byte	.LASF132
 8289 08a8 07       		.byte	0x7
 8290 08a9 A701     		.2byte	0x1a7
 8291 08ab 8D000000 		.4byte	0x8d
 8292 08af 00       		.byte	0
 8293 08b0 11       		.uleb128 0x11
 8294 08b1 BE0D0000 		.4byte	.LASF133
 8295 08b5 07       		.byte	0x7
 8296 08b6 A801     		.2byte	0x1a8
 8297 08b8 B1000000 		.4byte	0xb1
 8298 08bc 02       		.byte	0x2
 8299 08bd 11       		.uleb128 0x11
 8300 08be 5D070000 		.4byte	.LASF134
 8301 08c2 07       		.byte	0x7
 8302 08c3 A901     		.2byte	0x1a9
 8303 08c5 1E070000 		.4byte	0x71e
 8304 08c9 04       		.byte	0x4
 8305 08ca 11       		.uleb128 0x11
 8306 08cb 43030000 		.4byte	.LASF64
 8307 08cf 07       		.byte	0x7
 8308 08d0 AA01     		.2byte	0x1aa
 8309 08d2 BF060000 		.4byte	0x6bf
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 185


 8310 08d6 08       		.byte	0x8
 8311 08d7 00       		.byte	0
 8312 08d8 10       		.uleb128 0x10
 8313 08d9 62010000 		.4byte	.LASF135
 8314 08dd 10       		.byte	0x10
 8315 08de 07       		.byte	0x7
 8316 08df B101     		.2byte	0x1b1
 8317 08e1 0D090000 		.4byte	0x90d
 8318 08e5 11       		.uleb128 0x11
 8319 08e6 0C0D0000 		.4byte	.LASF136
 8320 08ea 07       		.byte	0x7
 8321 08eb B201     		.2byte	0x1b2
 8322 08ed 81000000 		.4byte	0x81
 8323 08f1 00       		.byte	0
 8324 08f2 11       		.uleb128 0x11
 8325 08f3 94090000 		.4byte	.LASF137
 8326 08f7 07       		.byte	0x7
 8327 08f8 B301     		.2byte	0x1b3
 8328 08fa 81000000 		.4byte	0x81
 8329 08fe 01       		.byte	0x1
 8330 08ff 11       		.uleb128 0x11
 8331 0900 43030000 		.4byte	.LASF64
 8332 0904 07       		.byte	0x7
 8333 0905 B401     		.2byte	0x1b4
 8334 0907 0D090000 		.4byte	0x90d
 8335 090b 02       		.byte	0x2
 8336 090c 00       		.byte	0
 8337 090d 07       		.uleb128 0x7
 8338 090e 81000000 		.4byte	0x81
 8339 0912 1D090000 		.4byte	0x91d
 8340 0916 08       		.uleb128 0x8
 8341 0917 0E010000 		.4byte	0x10e
 8342 091b 0D       		.byte	0xd
 8343 091c 00       		.byte	0
 8344 091d 10       		.uleb128 0x10
 8345 091e CF080000 		.4byte	.LASF138
 8346 0922 10       		.byte	0x10
 8347 0923 07       		.byte	0x7
 8348 0924 BB01     		.2byte	0x1bb
 8349 0926 5F090000 		.4byte	0x95f
 8350 092a 11       		.uleb128 0x11
 8351 092b 1F100000 		.4byte	.LASF139
 8352 092f 07       		.byte	0x7
 8353 0930 BC01     		.2byte	0x1bc
 8354 0932 BD000000 		.4byte	0xbd
 8355 0936 00       		.byte	0
 8356 0937 11       		.uleb128 0x11
 8357 0938 C9060000 		.4byte	.LASF140
 8358 093c 07       		.byte	0x7
 8359 093d BD01     		.2byte	0x1bd
 8360 093f D5000000 		.4byte	0xd5
 8361 0943 04       		.byte	0x4
 8362 0944 11       		.uleb128 0x11
 8363 0945 D80C0000 		.4byte	.LASF141
 8364 0949 07       		.byte	0x7
 8365 094a BE01     		.2byte	0x1be
 8366 094c D5000000 		.4byte	0xd5
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 186


 8367 0950 08       		.byte	0x8
 8368 0951 11       		.uleb128 0x11
 8369 0952 43030000 		.4byte	.LASF64
 8370 0956 07       		.byte	0x7
 8371 0957 BF01     		.2byte	0x1bf
 8372 0959 5F090000 		.4byte	0x95f
 8373 095d 0C       		.byte	0xc
 8374 095e 00       		.byte	0
 8375 095f 07       		.uleb128 0x7
 8376 0960 81000000 		.4byte	0x81
 8377 0964 6F090000 		.4byte	0x96f
 8378 0968 08       		.uleb128 0x8
 8379 0969 0E010000 		.4byte	0x10e
 8380 096d 03       		.byte	0x3
 8381 096e 00       		.byte	0
 8382 096f 10       		.uleb128 0x10
 8383 0970 EC010000 		.4byte	.LASF142
 8384 0974 12       		.byte	0x12
 8385 0975 07       		.byte	0x7
 8386 0976 C601     		.2byte	0x1c6
 8387 0978 B1090000 		.4byte	0x9b1
 8388 097c 11       		.uleb128 0x11
 8389 097d 29110000 		.4byte	.LASF143
 8390 0981 07       		.byte	0x7
 8391 0982 C701     		.2byte	0x1c7
 8392 0984 81000000 		.4byte	0x81
 8393 0988 00       		.byte	0
 8394 0989 11       		.uleb128 0x11
 8395 098a D40F0000 		.4byte	.LASF144
 8396 098e 07       		.byte	0x7
 8397 098f C801     		.2byte	0x1c8
 8398 0991 1E070000 		.4byte	0x71e
 8399 0995 02       		.byte	0x2
 8400 0996 11       		.uleb128 0x11
 8401 0997 37000000 		.4byte	.LASF145
 8402 099b 07       		.byte	0x7
 8403 099c C901     		.2byte	0x1c9
 8404 099e 81000000 		.4byte	0x81
 8405 09a2 06       		.byte	0x6
 8406 09a3 11       		.uleb128 0x11
 8407 09a4 43030000 		.4byte	.LASF64
 8408 09a8 07       		.byte	0x7
 8409 09a9 CA01     		.2byte	0x1ca
 8410 09ab B1090000 		.4byte	0x9b1
 8411 09af 07       		.byte	0x7
 8412 09b0 00       		.byte	0
 8413 09b1 07       		.uleb128 0x7
 8414 09b2 81000000 		.4byte	0x81
 8415 09b6 C1090000 		.4byte	0x9c1
 8416 09ba 08       		.uleb128 0x8
 8417 09bb 0E010000 		.4byte	0x10e
 8418 09bf 09       		.byte	0x9
 8419 09c0 00       		.byte	0
 8420 09c1 13       		.uleb128 0x13
 8421 09c2 3A100000 		.4byte	.LASF146
 8422 09c6 F402     		.2byte	0x2f4
 8423 09c8 07       		.byte	0x7
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 187


 8424 09c9 D301     		.2byte	0x1d3
 8425 09cb A60A0000 		.4byte	0xaa6
 8426 09cf 11       		.uleb128 0x11
 8427 09d0 880A0000 		.4byte	.LASF147
 8428 09d4 07       		.byte	0x7
 8429 09d5 D501     		.2byte	0x1d5
 8430 09d7 81000000 		.4byte	0x81
 8431 09db 00       		.byte	0
 8432 09dc 11       		.uleb128 0x11
 8433 09dd 43030000 		.4byte	.LASF64
 8434 09e1 07       		.byte	0x7
 8435 09e2 D601     		.2byte	0x1d6
 8436 09e4 A60A0000 		.4byte	0xaa6
 8437 09e8 01       		.byte	0x1
 8438 09e9 12       		.uleb128 0x12
 8439 09ea 636E7400 		.ascii	"cnt\000"
 8440 09ee 07       		.byte	0x7
 8441 09ef D701     		.2byte	0x1d7
 8442 09f1 06030000 		.4byte	0x306
 8443 09f5 10       		.byte	0x10
 8444 09f6 11       		.uleb128 0x11
 8445 09f7 DF020000 		.4byte	.LASF148
 8446 09fb 07       		.byte	0x7
 8447 09fc D801     		.2byte	0x1d8
 8448 09fe B60A0000 		.4byte	0xab6
 8449 0a02 80       		.byte	0x80
 8450 0a03 12       		.uleb128 0x12
 8451 0a04 64657600 		.ascii	"dev\000"
 8452 0a08 07       		.byte	0x7
 8453 0a09 D901     		.2byte	0x1d9
 8454 0a0b E3030000 		.4byte	0x3e3
 8455 0a0f A0       		.byte	0xa0
 8456 0a10 11       		.uleb128 0x11
 8457 0a11 790E0000 		.4byte	.LASF149
 8458 0a15 07       		.byte	0x7
 8459 0a16 DA01     		.2byte	0x1da
 8460 0a18 C60A0000 		.4byte	0xac6
 8461 0a1c B0       		.byte	0xb0
 8462 0a1d 14       		.uleb128 0x14
 8463 0a1e 656E6300 		.ascii	"enc\000"
 8464 0a22 07       		.byte	0x7
 8465 0a23 DB01     		.2byte	0x1db
 8466 0a25 D60A0000 		.4byte	0xad6
 8467 0a29 9001     		.2byte	0x190
 8468 0a2b 14       		.uleb128 0x14
 8469 0a2c 656D6700 		.ascii	"emg\000"
 8470 0a30 07       		.byte	0x7
 8471 0a31 DC01     		.2byte	0x1dc
 8472 0a33 CF060000 		.4byte	0x6cf
 8473 0a37 F001     		.2byte	0x1f0
 8474 0a39 14       		.uleb128 0x14
 8475 0a3a 696D7500 		.ascii	"imu\000"
 8476 0a3e 07       		.byte	0x7
 8477 0a3f DD01     		.2byte	0x1dd
 8478 0a41 3E070000 		.4byte	0x73e
 8479 0a45 0002     		.2byte	0x200
 8480 0a47 14       		.uleb128 0x14
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 188


 8481 0a48 65787000 		.ascii	"exp\000"
 8482 0a4c 07       		.byte	0x7
 8483 0a4d DE01     		.2byte	0x1de
 8484 0a4f 96070000 		.4byte	0x796
 8485 0a53 2002     		.2byte	0x220
 8486 0a55 15       		.uleb128 0x15
 8487 0a56 86000000 		.4byte	.LASF150
 8488 0a5a 07       		.byte	0x7
 8489 0a5b DF01     		.2byte	0x1df
 8490 0a5d E60A0000 		.4byte	0xae6
 8491 0a61 4002     		.2byte	0x240
 8492 0a63 14       		.uleb128 0x14
 8493 0a64 534800   		.ascii	"SH\000"
 8494 0a67 07       		.byte	0x7
 8495 0a68 E101     		.2byte	0x1e1
 8496 0a6a 47080000 		.4byte	0x847
 8497 0a6e A002     		.2byte	0x2a0
 8498 0a70 15       		.uleb128 0x15
 8499 0a71 CD000000 		.4byte	.LASF151
 8500 0a75 07       		.byte	0x7
 8501 0a76 E201     		.2byte	0x1e2
 8502 0a78 96080000 		.4byte	0x896
 8503 0a7c B002     		.2byte	0x2b0
 8504 0a7e 14       		.uleb128 0x14
 8505 0a7f 4D5300   		.ascii	"MS\000"
 8506 0a82 07       		.byte	0x7
 8507 0a83 E301     		.2byte	0x1e3
 8508 0a85 D8080000 		.4byte	0x8d8
 8509 0a89 C002     		.2byte	0x2c0
 8510 0a8b 14       		.uleb128 0x14
 8511 0a8c 464200   		.ascii	"FB\000"
 8512 0a8f 07       		.byte	0x7
 8513 0a90 E401     		.2byte	0x1e4
 8514 0a92 1D090000 		.4byte	0x91d
 8515 0a96 D002     		.2byte	0x2d0
 8516 0a98 14       		.uleb128 0x14
 8517 0a99 575200   		.ascii	"WR\000"
 8518 0a9c 07       		.byte	0x7
 8519 0a9d E501     		.2byte	0x1e5
 8520 0a9f 6F090000 		.4byte	0x96f
 8521 0aa3 E002     		.2byte	0x2e0
 8522 0aa5 00       		.byte	0
 8523 0aa6 07       		.uleb128 0x7
 8524 0aa7 81000000 		.4byte	0x81
 8525 0aab B60A0000 		.4byte	0xab6
 8526 0aaf 08       		.uleb128 0x8
 8527 0ab0 0E010000 		.4byte	0x10e
 8528 0ab4 0E       		.byte	0xe
 8529 0ab5 00       		.byte	0
 8530 0ab6 07       		.uleb128 0x7
 8531 0ab7 81000000 		.4byte	0x81
 8532 0abb C60A0000 		.4byte	0xac6
 8533 0abf 08       		.uleb128 0x8
 8534 0ac0 0E010000 		.4byte	0x10e
 8535 0ac4 1F       		.byte	0x1f
 8536 0ac5 00       		.byte	0
 8537 0ac6 07       		.uleb128 0x7
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 189


 8538 0ac7 82040000 		.4byte	0x482
 8539 0acb D60A0000 		.4byte	0xad6
 8540 0acf 08       		.uleb128 0x8
 8541 0ad0 0E010000 		.4byte	0x10e
 8542 0ad4 01       		.byte	0x1
 8543 0ad5 00       		.byte	0
 8544 0ad6 07       		.uleb128 0x7
 8545 0ad7 1C060000 		.4byte	0x61c
 8546 0adb E60A0000 		.4byte	0xae6
 8547 0adf 08       		.uleb128 0x8
 8548 0ae0 0E010000 		.4byte	0x10e
 8549 0ae4 01       		.byte	0x1
 8550 0ae5 00       		.byte	0
 8551 0ae6 07       		.uleb128 0x7
 8552 0ae7 12080000 		.4byte	0x812
 8553 0aeb F60A0000 		.4byte	0xaf6
 8554 0aef 08       		.uleb128 0x8
 8555 0af0 0E010000 		.4byte	0x10e
 8556 0af4 02       		.byte	0x2
 8557 0af5 00       		.byte	0
 8558 0af6 10       		.uleb128 0x10
 8559 0af7 550C0000 		.4byte	.LASF152
 8560 0afb 28       		.byte	0x28
 8561 0afc 07       		.byte	0x7
 8562 0afd ED01     		.2byte	0x1ed
 8563 0aff 520B0000 		.4byte	0xb52
 8564 0b03 11       		.uleb128 0x11
 8565 0b04 BC040000 		.4byte	.LASF153
 8566 0b08 07       		.byte	0x7
 8567 0b09 EE01     		.2byte	0x1ee
 8568 0b0b 81000000 		.4byte	0x81
 8569 0b0f 00       		.byte	0
 8570 0b10 11       		.uleb128 0x11
 8571 0b11 50030000 		.4byte	.LASF154
 8572 0b15 07       		.byte	0x7
 8573 0b16 EF01     		.2byte	0x1ef
 8574 0b18 520B0000 		.4byte	0xb52
 8575 0b1c 02       		.byte	0x2
 8576 0b1d 11       		.uleb128 0x11
 8577 0b1e 960B0000 		.4byte	.LASF155
 8578 0b22 07       		.byte	0x7
 8579 0b23 F001     		.2byte	0x1f0
 8580 0b25 520B0000 		.4byte	0xb52
 8581 0b29 08       		.byte	0x8
 8582 0b2a 11       		.uleb128 0x11
 8583 0b2b 610C0000 		.4byte	.LASF156
 8584 0b2f 07       		.byte	0x7
 8585 0b30 F101     		.2byte	0x1f1
 8586 0b32 520B0000 		.4byte	0xb52
 8587 0b36 0E       		.byte	0xe
 8588 0b37 11       		.uleb128 0x11
 8589 0b38 D6070000 		.4byte	.LASF157
 8590 0b3c 07       		.byte	0x7
 8591 0b3d F201     		.2byte	0x1f2
 8592 0b3f 620B0000 		.4byte	0xb62
 8593 0b43 14       		.byte	0x14
 8594 0b44 11       		.uleb128 0x11
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 190


 8595 0b45 D9010000 		.4byte	.LASF158
 8596 0b49 07       		.byte	0x7
 8597 0b4a F301     		.2byte	0x1f3
 8598 0b4c B1000000 		.4byte	0xb1
 8599 0b50 24       		.byte	0x24
 8600 0b51 00       		.byte	0
 8601 0b52 07       		.uleb128 0x7
 8602 0b53 B1000000 		.4byte	0xb1
 8603 0b57 620B0000 		.4byte	0xb62
 8604 0b5b 08       		.uleb128 0x8
 8605 0b5c 0E010000 		.4byte	0x10e
 8606 0b60 02       		.byte	0x2
 8607 0b61 00       		.byte	0
 8608 0b62 07       		.uleb128 0x7
 8609 0b63 D5000000 		.4byte	0xd5
 8610 0b67 720B0000 		.4byte	0xb72
 8611 0b6b 08       		.uleb128 0x8
 8612 0b6c 0E010000 		.4byte	0x10e
 8613 0b70 03       		.byte	0x3
 8614 0b71 00       		.byte	0
 8615 0b72 10       		.uleb128 0x10
 8616 0b73 4B110000 		.4byte	.LASF159
 8617 0b77 08       		.byte	0x8
 8618 0b78 07       		.byte	0x7
 8619 0b79 FA01     		.2byte	0x1fa
 8620 0b7b 9A0B0000 		.4byte	0xb9a
 8621 0b7f 11       		.uleb128 0x11
 8622 0b80 96050000 		.4byte	.LASF160
 8623 0b84 07       		.byte	0x7
 8624 0b85 FB01     		.2byte	0x1fb
 8625 0b87 BD000000 		.4byte	0xbd
 8626 0b8b 00       		.byte	0
 8627 0b8c 11       		.uleb128 0x11
 8628 0b8d 1F020000 		.4byte	.LASF161
 8629 0b91 07       		.byte	0x7
 8630 0b92 FC01     		.2byte	0x1fc
 8631 0b94 BD000000 		.4byte	0xbd
 8632 0b98 04       		.byte	0x4
 8633 0b99 00       		.byte	0
 8634 0b9a 16       		.uleb128 0x16
 8635 0b9b 01       		.byte	0x1
 8636 0b9c 2C000000 		.4byte	0x2c
 8637 0ba0 07       		.byte	0x7
 8638 0ba1 0B02     		.2byte	0x20b
 8639 0ba3 CC0B0000 		.4byte	0xbcc
 8640 0ba7 0A       		.uleb128 0xa
 8641 0ba8 B3050000 		.4byte	.LASF162
 8642 0bac 00       		.byte	0
 8643 0bad 0A       		.uleb128 0xa
 8644 0bae 060D0000 		.4byte	.LASF163
 8645 0bb2 01       		.byte	0x1
 8646 0bb3 0A       		.uleb128 0xa
 8647 0bb4 520B0000 		.4byte	.LASF164
 8648 0bb8 02       		.byte	0x2
 8649 0bb9 0A       		.uleb128 0xa
 8650 0bba 82020000 		.4byte	.LASF165
 8651 0bbe 03       		.byte	0x3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 191


 8652 0bbf 0A       		.uleb128 0xa
 8653 0bc0 9D090000 		.4byte	.LASF166
 8654 0bc4 04       		.byte	0x4
 8655 0bc5 0A       		.uleb128 0xa
 8656 0bc6 B80C0000 		.4byte	.LASF167
 8657 0bca 05       		.byte	0x5
 8658 0bcb 00       		.byte	0
 8659 0bcc 05       		.uleb128 0x5
 8660 0bcd 3E050000 		.4byte	.LASF168
 8661 0bd1 07       		.byte	0x7
 8662 0bd2 1302     		.2byte	0x213
 8663 0bd4 9A0B0000 		.4byte	0xb9a
 8664 0bd8 16       		.uleb128 0x16
 8665 0bd9 01       		.byte	0x1
 8666 0bda 2C000000 		.4byte	0x2c
 8667 0bde 07       		.byte	0x7
 8668 0bdf 1502     		.2byte	0x215
 8669 0be1 040C0000 		.4byte	0xc04
 8670 0be5 0A       		.uleb128 0xa
 8671 0be6 CC010000 		.4byte	.LASF169
 8672 0bea 00       		.byte	0
 8673 0beb 0A       		.uleb128 0xa
 8674 0bec 50070000 		.4byte	.LASF170
 8675 0bf0 01       		.byte	0x1
 8676 0bf1 0A       		.uleb128 0xa
 8677 0bf2 EF070000 		.4byte	.LASF171
 8678 0bf6 02       		.byte	0x2
 8679 0bf7 0A       		.uleb128 0xa
 8680 0bf8 B3030000 		.4byte	.LASF172
 8681 0bfc 03       		.byte	0x3
 8682 0bfd 0A       		.uleb128 0xa
 8683 0bfe 24110000 		.4byte	.LASF173
 8684 0c02 04       		.byte	0x4
 8685 0c03 00       		.byte	0
 8686 0c04 05       		.uleb128 0x5
 8687 0c05 F00D0000 		.4byte	.LASF174
 8688 0c09 07       		.byte	0x7
 8689 0c0a 1C02     		.2byte	0x21c
 8690 0c0c D80B0000 		.4byte	0xbd8
 8691 0c10 17       		.uleb128 0x17
 8692 0c11 71050000 		.4byte	.LASF175
 8693 0c15 01       		.byte	0x1
 8694 0c16 62       		.byte	0x62
 8695 0c17 00000000 		.4byte	.LFB64
 8696 0c1b 18000000 		.4byte	.LFE64-.LFB64
 8697 0c1f 01       		.uleb128 0x1
 8698 0c20 9C       		.byte	0x9c
 8699 0c21 17       		.uleb128 0x17
 8700 0c22 B70F0000 		.4byte	.LASF176
 8701 0c26 01       		.byte	0x1
 8702 0c27 6D       		.byte	0x6d
 8703 0c28 00000000 		.4byte	.LFB65
 8704 0c2c 20000000 		.4byte	.LFE65-.LFB65
 8705 0c30 01       		.uleb128 0x1
 8706 0c31 9C       		.byte	0x9c
 8707 0c32 18       		.uleb128 0x18
 8708 0c33 27090000 		.4byte	.LASF230
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 192


 8709 0c37 01       		.byte	0x1
 8710 0c38 86       		.byte	0x86
 8711 0c39 00000000 		.4byte	.LFB66
 8712 0c3d F4010000 		.4byte	.LFE66-.LFB66
 8713 0c41 01       		.uleb128 0x1
 8714 0c42 9C       		.byte	0x9c
 8715 0c43 C70C0000 		.4byte	0xcc7
 8716 0c47 19       		.uleb128 0x19
 8717 0c48 FA000000 		.4byte	.LASF177
 8718 0c4c 01       		.byte	0x1
 8719 0c4d 8B       		.byte	0x8b
 8720 0c4e 81000000 		.4byte	0x81
 8721 0c52 05       		.uleb128 0x5
 8722 0c53 03       		.byte	0x3
 8723 0c54 00000000 		.4byte	state.10437
 8724 0c58 19       		.uleb128 0x19
 8725 0c59 18060000 		.4byte	.LASF178
 8726 0c5d 01       		.byte	0x1
 8727 0c5e 8E       		.byte	0x8e
 8728 0c5f 81000000 		.4byte	0x81
 8729 0c63 05       		.uleb128 0x5
 8730 0c64 03       		.byte	0x3
 8731 0c65 08000000 		.4byte	data_packet_index.10438
 8732 0c69 19       		.uleb128 0x19
 8733 0c6a 930C0000 		.4byte	.LASF179
 8734 0c6e 01       		.byte	0x1
 8735 0c6f 8F       		.byte	0x8f
 8736 0c70 81000000 		.4byte	0x81
 8737 0c74 05       		.uleb128 0x5
 8738 0c75 03       		.byte	0x3
 8739 0c76 07000000 		.4byte	data_packet_length.10439
 8740 0c7a 19       		.uleb128 0x19
 8741 0c7b 2A060000 		.4byte	.LASF180
 8742 0c7f 01       		.byte	0x1
 8743 0c80 90       		.byte	0x90
 8744 0c81 F6020000 		.4byte	0x2f6
 8745 0c85 05       		.uleb128 0x5
 8746 0c86 03       		.byte	0x3
 8747 0c87 0C000000 		.4byte	data_packet_buffer.10440
 8748 0c8b 19       		.uleb128 0x19
 8749 0c8c CA0A0000 		.4byte	.LASF181
 8750 0c90 01       		.byte	0x1
 8751 0c91 91       		.byte	0x91
 8752 0c92 72040000 		.4byte	0x472
 8753 0c96 05       		.uleb128 0x5
 8754 0c97 03       		.byte	0x3
 8755 0c98 04000000 		.4byte	rx_queue.10441
 8756 0c9c 19       		.uleb128 0x19
 8757 0c9d 91010000 		.4byte	.LASF182
 8758 0ca1 01       		.byte	0x1
 8759 0ca2 94       		.byte	0x94
 8760 0ca3 81000000 		.4byte	0x81
 8761 0ca7 02       		.uleb128 0x2
 8762 0ca8 91       		.byte	0x91
 8763 0ca9 75       		.sleb128 -11
 8764 0caa 19       		.uleb128 0x19
 8765 0cab EE050000 		.4byte	.LASF183
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 193


 8766 0caf 01       		.byte	0x1
 8767 0cb0 95       		.byte	0x95
 8768 0cb1 81000000 		.4byte	0x81
 8769 0cb5 02       		.uleb128 0x2
 8770 0cb6 91       		.byte	0x91
 8771 0cb7 77       		.sleb128 -9
 8772 0cb8 19       		.uleb128 0x19
 8773 0cb9 11070000 		.4byte	.LASF184
 8774 0cbd 01       		.byte	0x1
 8775 0cbe 96       		.byte	0x96
 8776 0cbf 81000000 		.4byte	0x81
 8777 0cc3 02       		.uleb128 0x2
 8778 0cc4 91       		.byte	0x91
 8779 0cc5 76       		.sleb128 -10
 8780 0cc6 00       		.byte	0
 8781 0cc7 1A       		.uleb128 0x1a
 8782 0cc8 8D0E0000 		.4byte	.LASF190
 8783 0ccc 01       		.byte	0x1
 8784 0ccd 0C01     		.2byte	0x10c
 8785 0ccf 00000000 		.4byte	.LFB67
 8786 0cd3 48030000 		.4byte	.LFE67-.LFB67
 8787 0cd7 01       		.uleb128 0x1
 8788 0cd8 9C       		.byte	0x9c
 8789 0cd9 390D0000 		.4byte	0xd39
 8790 0cdd 1B       		.uleb128 0x1b
 8791 0cde DE0B0000 		.4byte	.LASF185
 8792 0ce2 01       		.byte	0x1
 8793 0ce3 0E01     		.2byte	0x10e
 8794 0ce5 8D000000 		.4byte	0x8d
 8795 0ce9 05       		.uleb128 0x5
 8796 0cea 03       		.byte	0x3
 8797 0ceb 00000000 		.4byte	counter_tension_func.10457
 8798 0cef 1B       		.uleb128 0x1b
 8799 0cf0 A8010000 		.4byte	.LASF186
 8800 0cf4 01       		.byte	0x1
 8801 0cf5 0F01     		.2byte	0x10f
 8802 0cf7 390D0000 		.4byte	0xd39
 8803 0cfb 03       		.uleb128 0x3
 8804 0cfc 91       		.byte	0x91
 8805 0cfd A86C     		.sleb128 -2520
 8806 0cff 1B       		.uleb128 0x1b
 8807 0d00 C10B0000 		.4byte	.LASF187
 8808 0d04 01       		.byte	0x1
 8809 0d05 1101     		.2byte	0x111
 8810 0d07 81000000 		.4byte	0x81
 8811 0d0b 02       		.uleb128 0x2
 8812 0d0c 91       		.byte	0x91
 8813 0d0d 6F       		.sleb128 -17
 8814 0d0e 1B       		.uleb128 0x1b
 8815 0d0f F8080000 		.4byte	.LASF188
 8816 0d13 01       		.byte	0x1
 8817 0d14 1201     		.2byte	0x112
 8818 0d16 81000000 		.4byte	0x81
 8819 0d1a 02       		.uleb128 0x2
 8820 0d1b 91       		.byte	0x91
 8821 0d1c 6E       		.sleb128 -18
 8822 0d1d 1C       		.uleb128 0x1c
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 194


 8823 0d1e 66010000 		.4byte	.LBB2
 8824 0d22 50000000 		.4byte	.LBE2-.LBB2
 8825 0d26 1B       		.uleb128 0x1b
 8826 0d27 ED020000 		.4byte	.LASF189
 8827 0d2b 01       		.byte	0x1
 8828 0d2c 6D01     		.2byte	0x16d
 8829 0d2e 4A0D0000 		.4byte	0xd4a
 8830 0d32 04       		.uleb128 0x4
 8831 0d33 91       		.byte	0x91
 8832 0d34 90F77E   		.sleb128 -17520
 8833 0d37 00       		.byte	0
 8834 0d38 00       		.byte	0
 8835 0d39 07       		.uleb128 0x7
 8836 0d3a E3000000 		.4byte	0xe3
 8837 0d3e 4A0D0000 		.4byte	0xd4a
 8838 0d42 1D       		.uleb128 0x1d
 8839 0d43 0E010000 		.4byte	0x10e
 8840 0d47 C309     		.2byte	0x9c3
 8841 0d49 00       		.byte	0
 8842 0d4a 07       		.uleb128 0x7
 8843 0d4b E3000000 		.4byte	0xe3
 8844 0d4f 5B0D0000 		.4byte	0xd5b
 8845 0d53 1D       		.uleb128 0x1d
 8846 0d54 0E010000 		.4byte	0x10e
 8847 0d58 973A     		.2byte	0x3a97
 8848 0d5a 00       		.byte	0
 8849 0d5b 1A       		.uleb128 0x1a
 8850 0d5c A00E0000 		.4byte	.LASF191
 8851 0d60 01       		.byte	0x1
 8852 0d61 C101     		.2byte	0x1c1
 8853 0d63 00000000 		.4byte	.LFB68
 8854 0d67 CC050000 		.4byte	.LFE68-.LFB68
 8855 0d6b 01       		.uleb128 0x1
 8856 0d6c 9C       		.byte	0x9c
 8857 0d6d 110E0000 		.4byte	0xe11
 8858 0d71 1E       		.uleb128 0x1e
 8859 0d72 B0070000 		.4byte	.LASF192
 8860 0d76 01       		.byte	0x1
 8861 0d77 C101     		.2byte	0x1c1
 8862 0d79 81000000 		.4byte	0x81
 8863 0d7d 02       		.uleb128 0x2
 8864 0d7e 91       		.byte	0x91
 8865 0d7f 5F       		.sleb128 -33
 8866 0d80 1E       		.uleb128 0x1e
 8867 0d81 3D060000 		.4byte	.LASF193
 8868 0d85 01       		.byte	0x1
 8869 0d86 C101     		.2byte	0x1c1
 8870 0d88 110E0000 		.4byte	0xe11
 8871 0d8c 02       		.uleb128 0x2
 8872 0d8d 91       		.byte	0x91
 8873 0d8e 58       		.sleb128 -40
 8874 0d8f 1E       		.uleb128 0x1e
 8875 0d90 69100000 		.4byte	.LASF194
 8876 0d94 01       		.byte	0x1
 8877 0d95 C101     		.2byte	0x1c1
 8878 0d97 110E0000 		.4byte	0xe11
 8879 0d9b 02       		.uleb128 0x2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 195


 8880 0d9c 91       		.byte	0x91
 8881 0d9d 54       		.sleb128 -44
 8882 0d9e 1B       		.uleb128 0x1b
 8883 0d9f C2040000 		.4byte	.LASF195
 8884 0da3 01       		.byte	0x1
 8885 0da4 C301     		.2byte	0x1c3
 8886 0da6 BD000000 		.4byte	0xbd
 8887 0daa 02       		.uleb128 0x2
 8888 0dab 91       		.byte	0x91
 8889 0dac 74       		.sleb128 -12
 8890 0dad 1B       		.uleb128 0x1b
 8891 0dae F5030000 		.4byte	.LASF196
 8892 0db2 01       		.byte	0x1
 8893 0db3 C401     		.2byte	0x1c4
 8894 0db5 BD000000 		.4byte	0xbd
 8895 0db9 02       		.uleb128 0x2
 8896 0dba 91       		.byte	0x91
 8897 0dbb 68       		.sleb128 -24
 8898 0dbc 1B       		.uleb128 0x1b
 8899 0dbd FF030000 		.4byte	.LASF197
 8900 0dc1 01       		.byte	0x1
 8901 0dc2 C401     		.2byte	0x1c4
 8902 0dc4 BD000000 		.4byte	0xbd
 8903 0dc8 02       		.uleb128 0x2
 8904 0dc9 91       		.byte	0x91
 8905 0dca 64       		.sleb128 -28
 8906 0dcb 1F       		.uleb128 0x1f
 8907 0dcc 4D4F5400 		.ascii	"MOT\000"
 8908 0dd0 01       		.byte	0x1
 8909 0dd1 C501     		.2byte	0x1c5
 8910 0dd3 170E0000 		.4byte	0xe17
 8911 0dd7 02       		.uleb128 0x2
 8912 0dd8 91       		.byte	0x91
 8913 0dd9 70       		.sleb128 -16
 8914 0dda 1B       		.uleb128 0x1b
 8915 0ddb 34100000 		.4byte	.LASF198
 8916 0ddf 01       		.byte	0x1
 8917 0de0 C601     		.2byte	0x1c6
 8918 0de2 81000000 		.4byte	0x81
 8919 0de6 02       		.uleb128 0x2
 8920 0de7 91       		.byte	0x91
 8921 0de8 6F       		.sleb128 -17
 8922 0de9 1B       		.uleb128 0x1b
 8923 0dea BE0A0000 		.4byte	.LASF199
 8924 0dee 01       		.byte	0x1
 8925 0def C801     		.2byte	0x1c8
 8926 0df1 2E070000 		.4byte	0x72e
 8927 0df5 05       		.uleb128 0x5
 8928 0df6 03       		.byte	0x3
 8929 0df7 8C000000 		.4byte	current_emg.10472
 8930 0dfb 20       		.uleb128 0x20
 8931 0dfc 00000000 		.4byte	.Ldebug_ranges0+0
 8932 0e00 1B       		.uleb128 0x1b
 8933 0e01 F0000000 		.4byte	.LASF200
 8934 0e05 01       		.byte	0x1
 8935 0e06 ED01     		.2byte	0x1ed
 8936 0e08 BD000000 		.4byte	0xbd
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 196


 8937 0e0c 02       		.uleb128 0x2
 8938 0e0d 91       		.byte	0x91
 8939 0e0e 60       		.sleb128 -32
 8940 0e0f 00       		.byte	0
 8941 0e10 00       		.byte	0
 8942 0e11 0C       		.uleb128 0xc
 8943 0e12 04       		.byte	0x4
 8944 0e13 A5010000 		.4byte	0x1a5
 8945 0e17 0C       		.uleb128 0xc
 8946 0e18 04       		.byte	0x4
 8947 0e19 82040000 		.4byte	0x482
 8948 0e1d 21       		.uleb128 0x21
 8949 0e1e 780F0000 		.4byte	.LASF201
 8950 0e22 01       		.byte	0x1
 8951 0e23 A002     		.2byte	0x2a0
 8952 0e25 00000000 		.4byte	.LFB69
 8953 0e29 34030000 		.4byte	.LFE69-.LFB69
 8954 0e2d 01       		.uleb128 0x1
 8955 0e2e 9C       		.byte	0x9c
 8956 0e2f AD0E0000 		.4byte	0xead
 8957 0e33 1E       		.uleb128 0x1e
 8958 0e34 B0070000 		.4byte	.LASF192
 8959 0e38 01       		.byte	0x1
 8960 0e39 A002     		.2byte	0x2a0
 8961 0e3b 81000000 		.4byte	0x81
 8962 0e3f 02       		.uleb128 0x2
 8963 0e40 91       		.byte	0x91
 8964 0e41 67       		.sleb128 -25
 8965 0e42 1E       		.uleb128 0x1e
 8966 0e43 3D060000 		.4byte	.LASF193
 8967 0e47 01       		.byte	0x1
 8968 0e48 A002     		.2byte	0x2a0
 8969 0e4a 110E0000 		.4byte	0xe11
 8970 0e4e 02       		.uleb128 0x2
 8971 0e4f 91       		.byte	0x91
 8972 0e50 60       		.sleb128 -32
 8973 0e51 1E       		.uleb128 0x1e
 8974 0e52 69100000 		.4byte	.LASF194
 8975 0e56 01       		.byte	0x1
 8976 0e57 A002     		.2byte	0x2a0
 8977 0e59 110E0000 		.4byte	0xe11
 8978 0e5d 02       		.uleb128 0x2
 8979 0e5e 91       		.byte	0x91
 8980 0e5f 5C       		.sleb128 -36
 8981 0e60 22       		.uleb128 0x22
 8982 0e61 18000000 		.4byte	.Ldebug_ranges0+0x18
 8983 0e65 880E0000 		.4byte	0xe88
 8984 0e69 1B       		.uleb128 0x1b
 8985 0e6a F0000000 		.4byte	.LASF200
 8986 0e6e 01       		.byte	0x1
 8987 0e6f A702     		.2byte	0x2a7
 8988 0e71 BD000000 		.4byte	0xbd
 8989 0e75 02       		.uleb128 0x2
 8990 0e76 91       		.byte	0x91
 8991 0e77 74       		.sleb128 -12
 8992 0e78 1B       		.uleb128 0x1b
 8993 0e79 F7010000 		.4byte	.LASF202
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 197


 8994 0e7d 01       		.byte	0x1
 8995 0e7e A802     		.2byte	0x2a8
 8996 0e80 BD000000 		.4byte	0xbd
 8997 0e84 02       		.uleb128 0x2
 8998 0e85 91       		.byte	0x91
 8999 0e86 70       		.sleb128 -16
 9000 0e87 00       		.byte	0
 9001 0e88 20       		.uleb128 0x20
 9002 0e89 30000000 		.4byte	.Ldebug_ranges0+0x30
 9003 0e8d 1B       		.uleb128 0x1b
 9004 0e8e E90C0000 		.4byte	.LASF203
 9005 0e92 01       		.byte	0x1
 9006 0e93 CD02     		.2byte	0x2cd
 9007 0e95 BD000000 		.4byte	0xbd
 9008 0e99 02       		.uleb128 0x2
 9009 0e9a 91       		.byte	0x91
 9010 0e9b 6C       		.sleb128 -20
 9011 0e9c 1B       		.uleb128 0x1b
 9012 0e9d 1F090000 		.4byte	.LASF204
 9013 0ea1 01       		.byte	0x1
 9014 0ea2 CE02     		.2byte	0x2ce
 9015 0ea4 BD000000 		.4byte	0xbd
 9016 0ea8 02       		.uleb128 0x2
 9017 0ea9 91       		.byte	0x91
 9018 0eaa 68       		.sleb128 -24
 9019 0eab 00       		.byte	0
 9020 0eac 00       		.byte	0
 9021 0ead 1A       		.uleb128 0x1a
 9022 0eae 4B090000 		.4byte	.LASF205
 9023 0eb2 01       		.byte	0x1
 9024 0eb3 F902     		.2byte	0x2f9
 9025 0eb5 00000000 		.4byte	.LFB70
 9026 0eb9 B0010000 		.4byte	.LFE70-.LFB70
 9027 0ebd 01       		.uleb128 0x1
 9028 0ebe 9C       		.byte	0x9c
 9029 0ebf 210F0000 		.4byte	0xf21
 9030 0ec3 1E       		.uleb128 0x1e
 9031 0ec4 B0070000 		.4byte	.LASF192
 9032 0ec8 01       		.byte	0x1
 9033 0ec9 F902     		.2byte	0x2f9
 9034 0ecb 81000000 		.4byte	0x81
 9035 0ecf 02       		.uleb128 0x2
 9036 0ed0 91       		.byte	0x91
 9037 0ed1 77       		.sleb128 -9
 9038 0ed2 1E       		.uleb128 0x1e
 9039 0ed3 3D060000 		.4byte	.LASF193
 9040 0ed7 01       		.byte	0x1
 9041 0ed8 F902     		.2byte	0x2f9
 9042 0eda 110E0000 		.4byte	0xe11
 9043 0ede 02       		.uleb128 0x2
 9044 0edf 91       		.byte	0x91
 9045 0ee0 70       		.sleb128 -16
 9046 0ee1 1E       		.uleb128 0x1e
 9047 0ee2 69100000 		.4byte	.LASF194
 9048 0ee6 01       		.byte	0x1
 9049 0ee7 F902     		.2byte	0x2f9
 9050 0ee9 110E0000 		.4byte	0xe11
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 198


 9051 0eed 02       		.uleb128 0x2
 9052 0eee 91       		.byte	0x91
 9053 0eef 6C       		.sleb128 -20
 9054 0ef0 1E       		.uleb128 0x1e
 9055 0ef1 F5030000 		.4byte	.LASF196
 9056 0ef5 01       		.byte	0x1
 9057 0ef6 FA02     		.2byte	0x2fa
 9058 0ef8 BD000000 		.4byte	0xbd
 9059 0efc 02       		.uleb128 0x2
 9060 0efd 91       		.byte	0x91
 9061 0efe 68       		.sleb128 -24
 9062 0eff 1E       		.uleb128 0x1e
 9063 0f00 FF030000 		.4byte	.LASF197
 9064 0f04 01       		.byte	0x1
 9065 0f05 FA02     		.2byte	0x2fa
 9066 0f07 BD000000 		.4byte	0xbd
 9067 0f0b 02       		.uleb128 0x2
 9068 0f0c 91       		.byte	0x91
 9069 0f0d 00       		.sleb128 0
 9070 0f0e 1B       		.uleb128 0x1b
 9071 0f0f FE0B0000 		.4byte	.LASF206
 9072 0f13 01       		.byte	0x1
 9073 0f14 FD02     		.2byte	0x2fd
 9074 0f16 81000000 		.4byte	0x81
 9075 0f1a 05       		.uleb128 0x5
 9076 0f1b 03       		.byte	0x3
 9077 0f1c 8E000000 		.4byte	fsm_state.10509
 9078 0f20 00       		.byte	0
 9079 0f21 1A       		.uleb128 0x1a
 9080 0f22 02050000 		.4byte	.LASF207
 9081 0f26 01       		.byte	0x1
 9082 0f27 2F03     		.2byte	0x32f
 9083 0f29 00000000 		.4byte	.LFB71
 9084 0f2d E8000000 		.4byte	.LFE71-.LFB71
 9085 0f31 01       		.uleb128 0x1
 9086 0f32 9C       		.byte	0x9c
 9087 0f33 650F0000 		.4byte	0xf65
 9088 0f37 23       		.uleb128 0x23
 9089 0f38 69647800 		.ascii	"idx\000"
 9090 0f3c 01       		.byte	0x1
 9091 0f3d 2F03     		.2byte	0x32f
 9092 0f3f 81000000 		.4byte	0x81
 9093 0f43 02       		.uleb128 0x2
 9094 0f44 91       		.byte	0x91
 9095 0f45 6F       		.sleb128 -17
 9096 0f46 1B       		.uleb128 0x1b
 9097 0f47 4B010000 		.4byte	.LASF208
 9098 0f4b 01       		.byte	0x1
 9099 0f4c 3103     		.2byte	0x331
 9100 0f4e BD000000 		.4byte	0xbd
 9101 0f52 02       		.uleb128 0x2
 9102 0f53 91       		.byte	0x91
 9103 0f54 74       		.sleb128 -12
 9104 0f55 1F       		.uleb128 0x1f
 9105 0f56 4D4F5400 		.ascii	"MOT\000"
 9106 0f5a 01       		.byte	0x1
 9107 0f5b 3303     		.2byte	0x333
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 199


 9108 0f5d 170E0000 		.4byte	0xe17
 9109 0f61 02       		.uleb128 0x2
 9110 0f62 91       		.byte	0x91
 9111 0f63 70       		.sleb128 -16
 9112 0f64 00       		.byte	0
 9113 0f65 1A       		.uleb128 0x1a
 9114 0f66 99030000 		.4byte	.LASF209
 9115 0f6a 01       		.byte	0x1
 9116 0f6b 7A03     		.2byte	0x37a
 9117 0f6d 00000000 		.4byte	.LFB72
 9118 0f71 18080000 		.4byte	.LFE72-.LFB72
 9119 0f75 01       		.uleb128 0x1
 9120 0f76 9C       		.byte	0x9c
 9121 0f77 ED100000 		.4byte	0x10ed
 9122 0f7b 1E       		.uleb128 0x1e
 9123 0f7c C6000000 		.4byte	.LASF210
 9124 0f80 01       		.byte	0x1
 9125 0f81 7A03     		.2byte	0x37a
 9126 0f83 81000000 		.4byte	0x81
 9127 0f87 03       		.uleb128 0x3
 9128 0f88 91       		.byte	0x91
 9129 0f89 BF7F     		.sleb128 -65
 9130 0f8b 1E       		.uleb128 0x1e
 9131 0f8c E10A0000 		.4byte	.LASF211
 9132 0f90 01       		.byte	0x1
 9133 0f91 7A03     		.2byte	0x37a
 9134 0f93 81000000 		.4byte	0x81
 9135 0f97 03       		.uleb128 0x3
 9136 0f98 91       		.byte	0x91
 9137 0f99 BE7F     		.sleb128 -66
 9138 0f9b 1B       		.uleb128 0x1b
 9139 0f9c C3060000 		.4byte	.LASF212
 9140 0fa0 01       		.byte	0x1
 9141 0fa1 7C03     		.2byte	0x37c
 9142 0fa3 81000000 		.4byte	0x81
 9143 0fa7 02       		.uleb128 0x2
 9144 0fa8 91       		.byte	0x91
 9145 0fa9 67       		.sleb128 -25
 9146 0faa 1F       		.uleb128 0x1f
 9147 0fab 6A6A00   		.ascii	"jj\000"
 9148 0fae 01       		.byte	0x1
 9149 0faf 7F03     		.2byte	0x37f
 9150 0fb1 81000000 		.4byte	0x81
 9151 0fb5 02       		.uleb128 0x2
 9152 0fb6 91       		.byte	0x91
 9153 0fb7 66       		.sleb128 -26
 9154 0fb8 1B       		.uleb128 0x1b
 9155 0fb9 6A030000 		.4byte	.LASF213
 9156 0fbd 01       		.byte	0x1
 9157 0fbe 8103     		.2byte	0x381
 9158 0fc0 ED100000 		.4byte	0x10ed
 9159 0fc4 02       		.uleb128 0x2
 9160 0fc5 91       		.byte	0x91
 9161 0fc6 40       		.sleb128 -64
 9162 0fc7 1B       		.uleb128 0x1b
 9163 0fc8 A50F0000 		.4byte	.LASF214
 9164 0fcc 01       		.byte	0x1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 200


 9165 0fcd 8203     		.2byte	0x382
 9166 0fcf B1000000 		.4byte	0xb1
 9167 0fd3 02       		.uleb128 0x2
 9168 0fd4 91       		.byte	0x91
 9169 0fd5 64       		.sleb128 -28
 9170 0fd6 1B       		.uleb128 0x1b
 9171 0fd7 710C0000 		.4byte	.LASF215
 9172 0fdb 01       		.byte	0x1
 9173 0fdc 8303     		.2byte	0x383
 9174 0fde BD000000 		.4byte	0xbd
 9175 0fe2 02       		.uleb128 0x2
 9176 0fe3 91       		.byte	0x91
 9177 0fe4 54       		.sleb128 -44
 9178 0fe5 1B       		.uleb128 0x1b
 9179 0fe6 620E0000 		.4byte	.LASF216
 9180 0fea 01       		.byte	0x1
 9181 0feb 8403     		.2byte	0x384
 9182 0fed BD000000 		.4byte	0xbd
 9183 0ff1 02       		.uleb128 0x2
 9184 0ff2 91       		.byte	0x91
 9185 0ff3 60       		.sleb128 -32
 9186 0ff4 1B       		.uleb128 0x1b
 9187 0ff5 77040000 		.4byte	.LASF217
 9188 0ff9 01       		.byte	0x1
 9189 0ffa 8503     		.2byte	0x385
 9190 0ffc BD000000 		.4byte	0xbd
 9191 1000 02       		.uleb128 0x2
 9192 1001 91       		.byte	0x91
 9193 1002 4C       		.sleb128 -52
 9194 1003 1B       		.uleb128 0x1b
 9195 1004 3D0E0000 		.4byte	.LASF218
 9196 1008 01       		.byte	0x1
 9197 1009 8603     		.2byte	0x386
 9198 100b BD000000 		.4byte	0xbd
 9199 100f 02       		.uleb128 0x2
 9200 1010 91       		.byte	0x91
 9201 1011 50       		.sleb128 -48
 9202 1012 1B       		.uleb128 0x1b
 9203 1013 5A0B0000 		.4byte	.LASF219
 9204 1017 01       		.byte	0x1
 9205 1018 8703     		.2byte	0x387
 9206 101a A5000000 		.4byte	0xa5
 9207 101e 02       		.uleb128 0x2
 9208 101f 91       		.byte	0x91
 9209 1020 5F       		.sleb128 -33
 9210 1021 1B       		.uleb128 0x1b
 9211 1022 CB0B0000 		.4byte	.LASF220
 9212 1026 01       		.byte	0x1
 9213 1027 8903     		.2byte	0x389
 9214 1029 FD100000 		.4byte	0x10fd
 9215 102d 05       		.uleb128 0x5
 9216 102e 03       		.byte	0x3
 9217 102f 90000000 		.4byte	last_value_encoder.10548
 9218 1033 1B       		.uleb128 0x1b
 9219 1034 77060000 		.4byte	.LASF221
 9220 1038 01       		.byte	0x1
 9221 1039 8A03     		.2byte	0x38a
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 201


 9222 103b FD100000 		.4byte	0x10fd
 9223 103f 05       		.uleb128 0x5
 9224 1040 03       		.byte	0x3
 9225 1041 A8000000 		.4byte	comp_value_encoder.10549
 9226 1045 1B       		.uleb128 0x1b
 9227 1046 AD030000 		.4byte	.LASF222
 9228 104a 01       		.byte	0x1
 9229 104b 8B03     		.2byte	0x38b
 9230 104d 13110000 		.4byte	0x1113
 9231 1051 05       		.uleb128 0x5
 9232 1052 03       		.byte	0x3
 9233 1053 C0000000 		.4byte	error.10550
 9234 1057 1B       		.uleb128 0x1b
 9235 1058 1B0E0000 		.4byte	.LASF223
 9236 105c 01       		.byte	0x1
 9237 105d 8D03     		.2byte	0x38d
 9238 105f 2E070000 		.4byte	0x72e
 9239 1063 05       		.uleb128 0x5
 9240 1064 03       		.byte	0x3
 9241 1065 04000000 		.4byte	only_first_time.10551
 9242 1069 1B       		.uleb128 0x1b
 9243 106a 25030000 		.4byte	.LASF224
 9244 106e 01       		.byte	0x1
 9245 106f 8E03     		.2byte	0x38e
 9246 1071 2E070000 		.4byte	0x72e
 9247 1075 05       		.uleb128 0x5
 9248 1076 03       		.byte	0x3
 9249 1077 14010000 		.4byte	safe_startup_motor_activation.10552
 9250 107b 1B       		.uleb128 0x1b
 9251 107c 98000000 		.4byte	.LASF225
 9252 1080 01       		.byte	0x1
 9253 1081 8F03     		.2byte	0x38f
 9254 1083 2E070000 		.4byte	0x72e
 9255 1087 05       		.uleb128 0x5
 9256 1088 03       		.byte	0x3
 9257 1089 10010000 		.4byte	one_time_execute.10553
 9258 108d 1B       		.uleb128 0x1b
 9259 108e 80090000 		.4byte	.LASF226
 9260 1092 01       		.byte	0x1
 9261 1093 9003     		.2byte	0x390
 9262 1095 A3030000 		.4byte	0x3a3
 9263 1099 05       		.uleb128 0x5
 9264 109a 03       		.byte	0x3
 9265 109b 18010000 		.4byte	count_startup_motor.10554
 9266 109f 1B       		.uleb128 0x1b
 9267 10a0 C7080000 		.4byte	.LASF227
 9268 10a4 01       		.byte	0x1
 9269 10a5 9203     		.2byte	0x392
 9270 10a7 FD100000 		.4byte	0x10fd
 9271 10ab 05       		.uleb128 0x5
 9272 10ac 03       		.byte	0x3
 9273 10ad C8000000 		.4byte	v_value.10555
 9274 10b1 1B       		.uleb128 0x1b
 9275 10b2 55110000 		.4byte	.LASF228
 9276 10b6 01       		.byte	0x1
 9277 10b7 9303     		.2byte	0x393
 9278 10b9 FD100000 		.4byte	0x10fd
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 202


 9279 10bd 05       		.uleb128 0x5
 9280 10be 03       		.byte	0x3
 9281 10bf E0000000 		.4byte	vv_value.10556
 9282 10c3 1B       		.uleb128 0x1b
 9283 10c4 99010000 		.4byte	.LASF229
 9284 10c8 01       		.byte	0x1
 9285 10c9 9403     		.2byte	0x394
 9286 10cb FD100000 		.4byte	0x10fd
 9287 10cf 05       		.uleb128 0x5
 9288 10d0 03       		.byte	0x3
 9289 10d1 F8000000 		.4byte	vvv_value.10557
 9290 10d5 1C       		.uleb128 0x1c
 9291 10d6 98000000 		.4byte	.LBB9
 9292 10da 6A000000 		.4byte	.LBE9-.LBB9
 9293 10de 1F       		.uleb128 0x1f
 9294 10df 6A00     		.ascii	"j\000"
 9295 10e1 01       		.byte	0x1
 9296 10e2 A403     		.2byte	0x3a4
 9297 10e4 68000000 		.4byte	0x68
 9298 10e8 02       		.uleb128 0x2
 9299 10e9 91       		.byte	0x91
 9300 10ea 58       		.sleb128 -40
 9301 10eb 00       		.byte	0
 9302 10ec 00       		.byte	0
 9303 10ed 07       		.uleb128 0x7
 9304 10ee 99000000 		.4byte	0x99
 9305 10f2 FD100000 		.4byte	0x10fd
 9306 10f6 08       		.uleb128 0x8
 9307 10f7 0E010000 		.4byte	0x10e
 9308 10fb 02       		.byte	0x2
 9309 10fc 00       		.byte	0
 9310 10fd 07       		.uleb128 0x7
 9311 10fe BD000000 		.4byte	0xbd
 9312 1102 13110000 		.4byte	0x1113
 9313 1106 08       		.uleb128 0x8
 9314 1107 0E010000 		.4byte	0x10e
 9315 110b 01       		.byte	0x1
 9316 110c 08       		.uleb128 0x8
 9317 110d 0E010000 		.4byte	0x10e
 9318 1111 02       		.byte	0x2
 9319 1112 00       		.byte	0
 9320 1113 07       		.uleb128 0x7
 9321 1114 81000000 		.4byte	0x81
 9322 1118 29110000 		.4byte	0x1129
 9323 111c 08       		.uleb128 0x8
 9324 111d 0E010000 		.4byte	0x10e
 9325 1121 01       		.byte	0x1
 9326 1122 08       		.uleb128 0x8
 9327 1123 0E010000 		.4byte	0x10e
 9328 1127 02       		.byte	0x2
 9329 1128 00       		.byte	0
 9330 1129 24       		.uleb128 0x24
 9331 112a 1E0D0000 		.4byte	.LASF231
 9332 112e 01       		.byte	0x1
 9333 112f 5704     		.2byte	0x457
 9334 1131 00000000 		.4byte	.LFB73
 9335 1135 20110000 		.4byte	.LFE73-.LFB73
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 203


 9336 1139 01       		.uleb128 0x1
 9337 113a 9C       		.byte	0x9c
 9338 113b 15120000 		.4byte	0x1215
 9339 113f 1B       		.uleb128 0x1b
 9340 1140 D20C0000 		.4byte	.LASF232
 9341 1144 01       		.byte	0x1
 9342 1145 6B04     		.2byte	0x46b
 9343 1147 BD000000 		.4byte	0xbd
 9344 114b 02       		.uleb128 0x2
 9345 114c 91       		.byte	0x91
 9346 114d 64       		.sleb128 -28
 9347 114e 1B       		.uleb128 0x1b
 9348 114f FF0D0000 		.4byte	.LASF233
 9349 1153 01       		.byte	0x1
 9350 1154 6D04     		.2byte	0x46d
 9351 1156 8D000000 		.4byte	0x8d
 9352 115a 05       		.uleb128 0x5
 9353 115b 03       		.byte	0x3
 9354 115c 28010000 		.4byte	emg_counter_1.10574
 9355 1160 1B       		.uleb128 0x1b
 9356 1161 0D0E0000 		.4byte	.LASF234
 9357 1165 01       		.byte	0x1
 9358 1166 6E04     		.2byte	0x46e
 9359 1168 8D000000 		.4byte	0x8d
 9360 116c 05       		.uleb128 0x5
 9361 116d 03       		.byte	0x3
 9362 116e 2A010000 		.4byte	emg_counter_2.10575
 9363 1172 1B       		.uleb128 0x1b
 9364 1173 5D020000 		.4byte	.LASF235
 9365 1177 01       		.byte	0x1
 9366 1178 6F04     		.2byte	0x46f
 9367 117a 8D000000 		.4byte	0x8d
 9368 117e 05       		.uleb128 0x5
 9369 117f 03       		.byte	0x3
 9370 1180 30010000 		.4byte	UD_counter.10576
 9371 1184 1B       		.uleb128 0x1b
 9372 1185 BD030000 		.4byte	.LASF236
 9373 1189 01       		.byte	0x1
 9374 118a 7004     		.2byte	0x470
 9375 118c 8D000000 		.4byte	0x8d
 9376 1190 05       		.uleb128 0x5
 9377 1191 03       		.byte	0x3
 9378 1192 38010000 		.4byte	LR_counter.10577
 9379 1196 1B       		.uleb128 0x1b
 9380 1197 D30A0000 		.4byte	.LASF237
 9381 119b 01       		.byte	0x1
 9382 119c 7104     		.2byte	0x471
 9383 119e BD000000 		.4byte	0xbd
 9384 11a2 05       		.uleb128 0x5
 9385 11a3 03       		.byte	0x3
 9386 11a4 2C010000 		.4byte	UD_mean_value.10578
 9387 11a8 1B       		.uleb128 0x1b
 9388 11a9 AE100000 		.4byte	.LASF238
 9389 11ad 01       		.byte	0x1
 9390 11ae 7204     		.2byte	0x472
 9391 11b0 BD000000 		.4byte	0xbd
 9392 11b4 05       		.uleb128 0x5
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 204


 9393 11b5 03       		.byte	0x3
 9394 11b6 34010000 		.4byte	LR_mean_value.10579
 9395 11ba 1B       		.uleb128 0x1b
 9396 11bb B6020000 		.4byte	.LASF239
 9397 11bf 01       		.byte	0x1
 9398 11c0 7304     		.2byte	0x473
 9399 11c2 81000000 		.4byte	0x81
 9400 11c6 05       		.uleb128 0x5
 9401 11c7 03       		.byte	0x3
 9402 11c8 0C000000 		.4byte	first_tension_valid.10580
 9403 11cc 1B       		.uleb128 0x1b
 9404 11cd D4040000 		.4byte	.LASF240
 9405 11d1 01       		.byte	0x1
 9406 11d2 7404     		.2byte	0x474
 9407 11d4 BD000000 		.4byte	0xbd
 9408 11d8 05       		.uleb128 0x5
 9409 11d9 03       		.byte	0x3
 9410 11da 08000000 		.4byte	detect_power_cycle_prev.10581
 9411 11de 1B       		.uleb128 0x1b
 9412 11df 300A0000 		.4byte	.LASF241
 9413 11e3 01       		.byte	0x1
 9414 11e4 7504     		.2byte	0x475
 9415 11e6 8D000000 		.4byte	0x8d
 9416 11ea 05       		.uleb128 0x5
 9417 11eb 03       		.byte	0x3
 9418 11ec 20010000 		.4byte	count.10582
 9419 11f0 1B       		.uleb128 0x1b
 9420 11f1 89010000 		.4byte	.LASF242
 9421 11f5 01       		.byte	0x1
 9422 11f6 7604     		.2byte	0x476
 9423 11f8 99000000 		.4byte	0x99
 9424 11fc 05       		.uleb128 0x5
 9425 11fd 03       		.byte	0x3
 9426 11fe 24010000 		.4byte	v_count.10583
 9427 1202 1F       		.uleb128 0x1f
 9428 1203 69647800 		.ascii	"idx\000"
 9429 1207 01       		.byte	0x1
 9430 1208 7704     		.2byte	0x477
 9431 120a 81000000 		.4byte	0x81
 9432 120e 05       		.uleb128 0x5
 9433 120f 03       		.byte	0x3
 9434 1210 22010000 		.4byte	idx.10584
 9435 1214 00       		.byte	0
 9436 1215 24       		.uleb128 0x24
 9437 1216 11080000 		.4byte	.LASF243
 9438 121a 01       		.byte	0x1
 9439 121b C606     		.2byte	0x6c6
 9440 121d 00000000 		.4byte	.LFB74
 9441 1221 58060000 		.4byte	.LFE74-.LFB74
 9442 1225 01       		.uleb128 0x1
 9443 1226 9C       		.byte	0x9c
 9444 1227 AD130000 		.4byte	0x13ad
 9445 122b 1B       		.uleb128 0x1b
 9446 122c 26000000 		.4byte	.LASF244
 9447 1230 01       		.byte	0x1
 9448 1231 C706     		.2byte	0x6c7
 9449 1233 81000000 		.4byte	0x81
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 205


 9450 1237 05       		.uleb128 0x5
 9451 1238 03       		.byte	0x3
 9452 1239 3A010000 		.4byte	pos_cycle_status.10642
 9453 123d 1B       		.uleb128 0x1b
 9454 123e 500D0000 		.4byte	.LASF245
 9455 1242 01       		.byte	0x1
 9456 1243 C806     		.2byte	0x6c8
 9457 1245 2E070000 		.4byte	0x72e
 9458 1249 05       		.uleb128 0x5
 9459 124a 03       		.byte	0x3
 9460 124b 44010000 		.4byte	emg_cycle_status.10643
 9461 124f 1B       		.uleb128 0x1b
 9462 1250 400C0000 		.4byte	.LASF246
 9463 1254 01       		.byte	0x1
 9464 1255 C906     		.2byte	0x6c9
 9465 1257 2E070000 		.4byte	0x72e
 9466 125b 05       		.uleb128 0x5
 9467 125c 03       		.byte	0x3
 9468 125d 48010000 		.4byte	motion_status.10644
 9469 1261 1B       		.uleb128 0x1b
 9470 1262 420A0000 		.4byte	.LASF247
 9471 1266 01       		.byte	0x1
 9472 1267 CA06     		.2byte	0x6ca
 9473 1269 2E070000 		.4byte	0x72e
 9474 126d 05       		.uleb128 0x5
 9475 126e 03       		.byte	0x3
 9476 126f 54010000 		.4byte	emg_excess_status.10645
 9477 1273 1B       		.uleb128 0x1b
 9478 1274 660F0000 		.4byte	.LASF248
 9479 1278 01       		.byte	0x1
 9480 1279 CB06     		.2byte	0x6cb
 9481 127b 81000000 		.4byte	0x81
 9482 127f 05       		.uleb128 0x5
 9483 1280 03       		.byte	0x3
 9484 1281 68010000 		.4byte	rest_cycle_status.10646
 9485 1285 1B       		.uleb128 0x1b
 9486 1286 0E030000 		.4byte	.LASF249
 9487 128a 01       		.byte	0x1
 9488 128b CC06     		.2byte	0x6cc
 9489 128d BD000000 		.4byte	0xbd
 9490 1291 05       		.uleb128 0x5
 9491 1292 03       		.byte	0x3
 9492 1293 10000000 		.4byte	bin_threshold.10647
 9493 1297 1B       		.uleb128 0x1b
 9494 1298 140F0000 		.4byte	.LASF250
 9495 129c 01       		.byte	0x1
 9496 129d CD06     		.2byte	0x6cd
 9497 129f BD000000 		.4byte	0xbd
 9498 12a3 05       		.uleb128 0x5
 9499 12a4 03       		.byte	0x3
 9500 12a5 14000000 		.4byte	exc_act_thr.10648
 9501 12a9 1B       		.uleb128 0x1b
 9502 12aa E4010000 		.4byte	.LASF251
 9503 12ae 01       		.byte	0x1
 9504 12af CE06     		.2byte	0x6ce
 9505 12b1 BD000000 		.4byte	0xbd
 9506 12b5 05       		.uleb128 0x5
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 206


 9507 12b6 03       		.byte	0x3
 9508 12b7 3C010000 		.4byte	thr_pos.10649
 9509 12bb 1B       		.uleb128 0x1b
 9510 12bc 6E0A0000 		.4byte	.LASF252
 9511 12c0 01       		.byte	0x1
 9512 12c1 CF06     		.2byte	0x6cf
 9513 12c3 BD000000 		.4byte	0xbd
 9514 12c7 05       		.uleb128 0x5
 9515 12c8 03       		.byte	0x3
 9516 12c9 40010000 		.4byte	max_pos.10650
 9517 12cd 1F       		.uleb128 0x1f
 9518 12ce 6900     		.ascii	"i\000"
 9519 12d0 01       		.byte	0x1
 9520 12d1 D006     		.2byte	0x6d0
 9521 12d3 81000000 		.4byte	0x81
 9522 12d7 02       		.uleb128 0x2
 9523 12d8 91       		.byte	0x91
 9524 12d9 6F       		.sleb128 -17
 9525 12da 1B       		.uleb128 0x1b
 9526 12db 6A050000 		.4byte	.LASF253
 9527 12df 01       		.byte	0x1
 9528 12e0 D006     		.2byte	0x6d0
 9529 12e2 81000000 		.4byte	0x81
 9530 12e6 02       		.uleb128 0x2
 9531 12e7 91       		.byte	0x91
 9532 12e8 5B       		.sleb128 -37
 9533 12e9 1B       		.uleb128 0x1b
 9534 12ea 16010000 		.4byte	.LASF254
 9535 12ee 01       		.byte	0x1
 9536 12ef D006     		.2byte	0x6d0
 9537 12f1 81000000 		.4byte	0x81
 9538 12f5 02       		.uleb128 0x2
 9539 12f6 91       		.byte	0x91
 9540 12f7 5A       		.sleb128 -38
 9541 12f8 1B       		.uleb128 0x1b
 9542 12f9 C60C0000 		.4byte	.LASF255
 9543 12fd 01       		.byte	0x1
 9544 12fe D006     		.2byte	0x6d0
 9545 1300 81000000 		.4byte	0x81
 9546 1304 02       		.uleb128 0x2
 9547 1305 91       		.byte	0x91
 9548 1306 59       		.sleb128 -39
 9549 1307 1B       		.uleb128 0x1b
 9550 1308 CC0C0000 		.4byte	.LASF256
 9551 130c 01       		.byte	0x1
 9552 130d D006     		.2byte	0x6d0
 9553 130f 81000000 		.4byte	0x81
 9554 1313 02       		.uleb128 0x2
 9555 1314 91       		.byte	0x91
 9556 1315 58       		.sleb128 -40
 9557 1316 1B       		.uleb128 0x1b
 9558 1317 FD0C0000 		.4byte	.LASF257
 9559 131b 01       		.byte	0x1
 9560 131c D106     		.2byte	0x6d1
 9561 131e BD000000 		.4byte	0xbd
 9562 1322 02       		.uleb128 0x2
 9563 1323 91       		.byte	0x91
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 207


 9564 1324 64       		.sleb128 -28
 9565 1325 1B       		.uleb128 0x1b
 9566 1326 8E040000 		.4byte	.LASF258
 9567 132a 01       		.byte	0x1
 9568 132b D106     		.2byte	0x6d1
 9569 132d BD000000 		.4byte	0xbd
 9570 1331 02       		.uleb128 0x2
 9571 1332 91       		.byte	0x91
 9572 1333 60       		.sleb128 -32
 9573 1334 1B       		.uleb128 0x1b
 9574 1335 480E0000 		.4byte	.LASF259
 9575 1339 01       		.byte	0x1
 9576 133a D106     		.2byte	0x6d1
 9577 133c BD000000 		.4byte	0xbd
 9578 1340 02       		.uleb128 0x2
 9579 1341 91       		.byte	0x91
 9580 1342 68       		.sleb128 -24
 9581 1343 1B       		.uleb128 0x1b
 9582 1344 38040000 		.4byte	.LASF260
 9583 1348 01       		.byte	0x1
 9584 1349 D206     		.2byte	0x6d2
 9585 134b BD000000 		.4byte	0xbd
 9586 134f 02       		.uleb128 0x2
 9587 1350 91       		.byte	0x91
 9588 1351 5C       		.sleb128 -36
 9589 1352 1B       		.uleb128 0x1b
 9590 1353 5B060000 		.4byte	.LASF261
 9591 1357 01       		.byte	0x1
 9592 1358 D306     		.2byte	0x6d3
 9593 135a 99000000 		.4byte	0x99
 9594 135e 05       		.uleb128 0x5
 9595 135f 03       		.byte	0x3
 9596 1360 6C010000 		.4byte	timer_value_s.10660
 9597 1364 1B       		.uleb128 0x1b
 9598 1365 0A060000 		.4byte	.LASF262
 9599 1369 01       		.byte	0x1
 9600 136a D306     		.2byte	0x6d3
 9601 136c 99000000 		.4byte	0x99
 9602 1370 05       		.uleb128 0x5
 9603 1371 03       		.byte	0x3
 9604 1372 70010000 		.4byte	timer_value_e.10661
 9605 1376 1B       		.uleb128 0x1b
 9606 1377 EF0E0000 		.4byte	.LASF263
 9607 137b 01       		.byte	0x1
 9608 137c D406     		.2byte	0x6d4
 9609 137e A3030000 		.4byte	0x3a3
 9610 1382 05       		.uleb128 0x5
 9611 1383 03       		.byte	0x3
 9612 1384 58010000 		.4byte	timer_exc_s.10662
 9613 1388 1B       		.uleb128 0x1b
 9614 1389 CA0E0000 		.4byte	.LASF264
 9615 138d 01       		.byte	0x1
 9616 138e D406     		.2byte	0x6d4
 9617 1390 A3030000 		.4byte	0x3a3
 9618 1394 05       		.uleb128 0x5
 9619 1395 03       		.byte	0x3
 9620 1396 60010000 		.4byte	timer_exc_e.10663
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 208


 9621 139a 1B       		.uleb128 0x1b
 9622 139b 8A060000 		.4byte	.LASF265
 9623 139f 01       		.byte	0x1
 9624 13a0 D506     		.2byte	0x6d5
 9625 13a2 94020000 		.4byte	0x294
 9626 13a6 05       		.uleb128 0x5
 9627 13a7 03       		.byte	0x3
 9628 13a8 4C010000 		.4byte	start_emg_pos.10664
 9629 13ac 00       		.byte	0
 9630 13ad 24       		.uleb128 0x24
 9631 13ae 030B0000 		.4byte	.LASF266
 9632 13b2 01       		.byte	0x1
 9633 13b3 8107     		.2byte	0x781
 9634 13b5 00000000 		.4byte	.LFB75
 9635 13b9 08010000 		.4byte	.LFE75-.LFB75
 9636 13bd 01       		.uleb128 0x1
 9637 13be 9C       		.byte	0x9c
 9638 13bf 33140000 		.4byte	0x1433
 9639 13c3 1B       		.uleb128 0x1b
 9640 13c4 490F0000 		.4byte	.LASF267
 9641 13c8 01       		.byte	0x1
 9642 13c9 8307     		.2byte	0x783
 9643 13cb EA000000 		.4byte	0xea
 9644 13cf 02       		.uleb128 0x2
 9645 13d0 91       		.byte	0x91
 9646 13d1 64       		.sleb128 -28
 9647 13d2 1B       		.uleb128 0x1b
 9648 13d3 F20C0000 		.4byte	.LASF268
 9649 13d7 01       		.byte	0x1
 9650 13d8 8407     		.2byte	0x784
 9651 13da 81000000 		.4byte	0x81
 9652 13de 05       		.uleb128 0x5
 9653 13df 03       		.byte	0x3
 9654 13e0 78010000 		.4byte	row_number.10700
 9655 13e4 1B       		.uleb128 0x1b
 9656 13e5 61040000 		.4byte	.LASF269
 9657 13e9 01       		.byte	0x1
 9658 13ea 8507     		.2byte	0x785
 9659 13ec 81000000 		.4byte	0x81
 9660 13f0 02       		.uleb128 0x2
 9661 13f1 91       		.byte	0x91
 9662 13f2 77       		.sleb128 -9
 9663 13f3 1B       		.uleb128 0x1b
 9664 13f4 A00D0000 		.4byte	.LASF270
 9665 13f8 01       		.byte	0x1
 9666 13f9 8607     		.2byte	0x786
 9667 13fb 33140000 		.4byte	0x1433
 9668 13ff 02       		.uleb128 0x2
 9669 1400 91       		.byte	0x91
 9670 1401 70       		.sleb128 -16
 9671 1402 1B       		.uleb128 0x1b
 9672 1403 1E010000 		.4byte	.LASF271
 9673 1407 01       		.byte	0x1
 9674 1408 8707     		.2byte	0x787
 9675 140a 33140000 		.4byte	0x1433
 9676 140e 02       		.uleb128 0x2
 9677 140f 91       		.byte	0x91
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 209


 9678 1410 6C       		.sleb128 -20
 9679 1411 1B       		.uleb128 0x1b
 9680 1412 C6100000 		.4byte	.LASF272
 9681 1416 01       		.byte	0x1
 9682 1417 8807     		.2byte	0x788
 9683 1419 81000000 		.4byte	0x81
 9684 141d 02       		.uleb128 0x2
 9685 141e 91       		.byte	0x91
 9686 141f 6B       		.sleb128 -21
 9687 1420 1B       		.uleb128 0x1b
 9688 1421 540A0000 		.4byte	.LASF273
 9689 1425 01       		.byte	0x1
 9690 1426 8907     		.2byte	0x789
 9691 1428 33140000 		.4byte	0x1433
 9692 142c 05       		.uleb128 0x5
 9693 142d 03       		.byte	0x3
 9694 142e 74010000 		.4byte	m_addr.10705
 9695 1432 00       		.byte	0
 9696 1433 0C       		.uleb128 0xc
 9697 1434 04       		.byte	0x4
 9698 1435 81000000 		.4byte	0x81
 9699 1439 07       		.uleb128 0x7
 9700 143a 49140000 		.4byte	0x1449
 9701 143e 49140000 		.4byte	0x1449
 9702 1442 08       		.uleb128 0x8
 9703 1443 0E010000 		.4byte	0x10e
 9704 1447 1C       		.byte	0x1c
 9705 1448 00       		.byte	0
 9706 1449 25       		.uleb128 0x25
 9707 144a 81000000 		.4byte	0x81
 9708 144e 19       		.uleb128 0x19
 9709 144f AB0D0000 		.4byte	.LASF274
 9710 1453 01       		.byte	0x1
 9711 1454 40       		.byte	0x40
 9712 1455 5F140000 		.4byte	0x145f
 9713 1459 05       		.uleb128 0x5
 9714 145a 03       		.byte	0x3
 9715 145b 00000000 		.4byte	pwm_preload_values
 9716 145f 25       		.uleb128 0x25
 9717 1460 39140000 		.4byte	0x1439
 9718 1464 26       		.uleb128 0x26
 9719 1465 D60E0000 		.4byte	.LASF275
 9720 1469 08       		.byte	0x8
 9721 146a 1207     		.2byte	0x712
 9722 146c 70140000 		.4byte	0x1470
 9723 1470 06       		.uleb128 0x6
 9724 1471 76000000 		.4byte	0x76
 9725 1475 07       		.uleb128 0x7
 9726 1476 A5010000 		.4byte	0x1a5
 9727 147a 85140000 		.4byte	0x1485
 9728 147e 08       		.uleb128 0x8
 9729 147f 0E010000 		.4byte	0x10e
 9730 1483 01       		.byte	0x1
 9731 1484 00       		.byte	0
 9732 1485 26       		.uleb128 0x26
 9733 1486 A9060000 		.4byte	.LASF276
 9734 148a 07       		.byte	0x7
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 210


 9735 148b 2002     		.2byte	0x220
 9736 148d 75140000 		.4byte	0x1475
 9737 1491 26       		.uleb128 0x26
 9738 1492 85040000 		.4byte	.LASF277
 9739 1496 07       		.byte	0x7
 9740 1497 2002     		.2byte	0x220
 9741 1499 75140000 		.4byte	0x1475
 9742 149d 26       		.uleb128 0x26
 9743 149e 8D0B0000 		.4byte	.LASF278
 9744 14a2 07       		.byte	0x7
 9745 14a3 2002     		.2byte	0x220
 9746 14a5 75140000 		.4byte	0x1475
 9747 14a9 07       		.uleb128 0x7
 9748 14aa E2010000 		.4byte	0x1e2
 9749 14ae B9140000 		.4byte	0x14b9
 9750 14b2 08       		.uleb128 0x8
 9751 14b3 0E010000 		.4byte	0x10e
 9752 14b7 01       		.byte	0x1
 9753 14b8 00       		.byte	0
 9754 14b9 26       		.uleb128 0x26
 9755 14ba 54060000 		.4byte	.LASF279
 9756 14be 07       		.byte	0x7
 9757 14bf 2102     		.2byte	0x221
 9758 14c1 A9140000 		.4byte	0x14a9
 9759 14c5 26       		.uleb128 0x26
 9760 14c6 BC100000 		.4byte	.LASF280
 9761 14ca 07       		.byte	0x7
 9762 14cb 2102     		.2byte	0x221
 9763 14cd A9140000 		.4byte	0x14a9
 9764 14d1 26       		.uleb128 0x26
 9765 14d2 14100000 		.4byte	.LASF281
 9766 14d6 07       		.byte	0x7
 9767 14d7 2202     		.2byte	0x222
 9768 14d9 63020000 		.4byte	0x263
 9769 14dd 26       		.uleb128 0x26
 9770 14de 5C030000 		.4byte	.LASF282
 9771 14e2 07       		.byte	0x7
 9772 14e3 2202     		.2byte	0x222
 9773 14e5 63020000 		.4byte	0x263
 9774 14e9 26       		.uleb128 0x26
 9775 14ea 93000000 		.4byte	.LASF283
 9776 14ee 07       		.byte	0x7
 9777 14ef 2402     		.2byte	0x224
 9778 14f1 B4020000 		.4byte	0x2b4
 9779 14f5 26       		.uleb128 0x26
 9780 14f6 04060000 		.4byte	.LASF284
 9781 14fa 07       		.byte	0x7
 9782 14fb 2502     		.2byte	0x225
 9783 14fd C1090000 		.4byte	0x9c1
 9784 1501 26       		.uleb128 0x26
 9785 1502 5B0A0000 		.4byte	.LASF285
 9786 1506 07       		.byte	0x7
 9787 1507 2502     		.2byte	0x225
 9788 1509 C1090000 		.4byte	0x9c1
 9789 150d 07       		.uleb128 0x7
 9790 150e 720B0000 		.4byte	0xb72
 9791 1512 1D150000 		.4byte	0x151d
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 211


 9792 1516 08       		.uleb128 0x8
 9793 1517 0E010000 		.4byte	0x10e
 9794 151b 01       		.byte	0x1
 9795 151c 00       		.byte	0
 9796 151d 26       		.uleb128 0x26
 9797 151e 790B0000 		.4byte	.LASF286
 9798 1522 07       		.byte	0x7
 9799 1523 2702     		.2byte	0x227
 9800 1525 0D150000 		.4byte	0x150d
 9801 1529 26       		.uleb128 0x26
 9802 152a 10090000 		.4byte	.LASF287
 9803 152e 07       		.byte	0x7
 9804 152f 2702     		.2byte	0x227
 9805 1531 0D150000 		.4byte	0x150d
 9806 1535 26       		.uleb128 0x26
 9807 1536 630B0000 		.4byte	.LASF288
 9808 153a 07       		.byte	0x7
 9809 153b 2702     		.2byte	0x227
 9810 153d 0D150000 		.4byte	0x150d
 9811 1541 07       		.uleb128 0x7
 9812 1542 720B0000 		.4byte	0xb72
 9813 1546 51150000 		.4byte	0x1551
 9814 154a 08       		.uleb128 0x8
 9815 154b 0E010000 		.4byte	0x10e
 9816 154f 02       		.byte	0x2
 9817 1550 00       		.byte	0
 9818 1551 26       		.uleb128 0x26
 9819 1552 1E050000 		.4byte	.LASF289
 9820 1556 07       		.byte	0x7
 9821 1557 2802     		.2byte	0x228
 9822 1559 41150000 		.4byte	0x1541
 9823 155d 07       		.uleb128 0x7
 9824 155e 720B0000 		.4byte	0xb72
 9825 1562 6D150000 		.4byte	0x156d
 9826 1566 08       		.uleb128 0x8
 9827 1567 0E010000 		.4byte	0x10e
 9828 156b 07       		.byte	0x7
 9829 156c 00       		.byte	0
 9830 156d 26       		.uleb128 0x26
 9831 156e AE010000 		.4byte	.LASF290
 9832 1572 07       		.byte	0x7
 9833 1573 2902     		.2byte	0x229
 9834 1575 5D150000 		.4byte	0x155d
 9835 1579 26       		.uleb128 0x26
 9836 157a 82030000 		.4byte	.LASF291
 9837 157e 07       		.byte	0x7
 9838 157f 2A02     		.2byte	0x22a
 9839 1581 720B0000 		.4byte	0xb72
 9840 1585 26       		.uleb128 0x26
 9841 1586 CA020000 		.4byte	.LASF292
 9842 158a 07       		.byte	0x7
 9843 158b 2C02     		.2byte	0x22c
 9844 158d 8D000000 		.4byte	0x8d
 9845 1591 26       		.uleb128 0x26
 9846 1592 860C0000 		.4byte	.LASF293
 9847 1596 07       		.byte	0x7
 9848 1597 2D02     		.2byte	0x22d
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 212


 9849 1599 8D000000 		.4byte	0x8d
 9850 159d 26       		.uleb128 0x26
 9851 159e F30B0000 		.4byte	.LASF294
 9852 15a2 07       		.byte	0x7
 9853 15a3 2E02     		.2byte	0x22e
 9854 15a5 D5000000 		.4byte	0xd5
 9855 15a9 26       		.uleb128 0x26
 9856 15aa AC0C0000 		.4byte	.LASF295
 9857 15ae 07       		.byte	0x7
 9858 15af 3002     		.2byte	0x230
 9859 15b1 94020000 		.4byte	0x294
 9860 15b5 26       		.uleb128 0x26
 9861 15b6 C9050000 		.4byte	.LASF296
 9862 15ba 07       		.byte	0x7
 9863 15bb 3302     		.2byte	0x233
 9864 15bd 94020000 		.4byte	0x294
 9865 15c1 26       		.uleb128 0x26
 9866 15c2 E30E0000 		.4byte	.LASF297
 9867 15c6 07       		.byte	0x7
 9868 15c7 3402     		.2byte	0x234
 9869 15c9 94020000 		.4byte	0x294
 9870 15cd 26       		.uleb128 0x26
 9871 15ce 1F0C0000 		.4byte	.LASF298
 9872 15d2 07       		.byte	0x7
 9873 15d3 3502     		.2byte	0x235
 9874 15d5 BD000000 		.4byte	0xbd
 9875 15d9 26       		.uleb128 0x26
 9876 15da 46060000 		.4byte	.LASF299
 9877 15de 07       		.byte	0x7
 9878 15df 3702     		.2byte	0x237
 9879 15e1 040C0000 		.4byte	0xc04
 9880 15e5 26       		.uleb128 0x26
 9881 15e6 AF040000 		.4byte	.LASF300
 9882 15ea 07       		.byte	0x7
 9883 15eb 3802     		.2byte	0x238
 9884 15ed CC0B0000 		.4byte	0xbcc
 9885 15f1 26       		.uleb128 0x26
 9886 15f2 14040000 		.4byte	.LASF301
 9887 15f6 07       		.byte	0x7
 9888 15f7 3902     		.2byte	0x239
 9889 15f9 CC0B0000 		.4byte	0xbcc
 9890 15fd 26       		.uleb128 0x26
 9891 15fe 320C0000 		.4byte	.LASF302
 9892 1602 07       		.byte	0x7
 9893 1603 3A02     		.2byte	0x23a
 9894 1605 CC0B0000 		.4byte	0xbcc
 9895 1609 26       		.uleb128 0x26
 9896 160a 44100000 		.4byte	.LASF303
 9897 160e 07       		.byte	0x7
 9898 160f 3B02     		.2byte	0x23b
 9899 1611 CC0B0000 		.4byte	0xbcc
 9900 1615 26       		.uleb128 0x26
 9901 1616 C0070000 		.4byte	.LASF304
 9902 161a 07       		.byte	0x7
 9903 161b 3E02     		.2byte	0x23e
 9904 161d 2E070000 		.4byte	0x72e
 9905 1621 26       		.uleb128 0x26
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 213


 9906 1622 E2000000 		.4byte	.LASF305
 9907 1626 07       		.byte	0x7
 9908 1627 3F02     		.2byte	0x23f
 9909 1629 81000000 		.4byte	0x81
 9910 162d 26       		.uleb128 0x26
 9911 162e 29040000 		.4byte	.LASF306
 9912 1632 07       		.byte	0x7
 9913 1633 4002     		.2byte	0x240
 9914 1635 81000000 		.4byte	0x81
 9915 1639 26       		.uleb128 0x26
 9916 163a 00010000 		.4byte	.LASF307
 9917 163e 07       		.byte	0x7
 9918 163f 4102     		.2byte	0x241
 9919 1641 81000000 		.4byte	0x81
 9920 1645 26       		.uleb128 0x26
 9921 1646 F0100000 		.4byte	.LASF308
 9922 164a 07       		.byte	0x7
 9923 164b 4302     		.2byte	0x243
 9924 164d 81000000 		.4byte	0x81
 9925 1651 26       		.uleb128 0x26
 9926 1652 800B0000 		.4byte	.LASF309
 9927 1656 07       		.byte	0x7
 9928 1657 4402     		.2byte	0x244
 9929 1659 81000000 		.4byte	0x81
 9930 165d 26       		.uleb128 0x26
 9931 165e 6B040000 		.4byte	.LASF310
 9932 1662 07       		.byte	0x7
 9933 1663 4502     		.2byte	0x245
 9934 1665 81000000 		.4byte	0x81
 9935 1669 26       		.uleb128 0x26
 9936 166a A0070000 		.4byte	.LASF311
 9937 166e 07       		.byte	0x7
 9938 166f 4602     		.2byte	0x246
 9939 1671 81000000 		.4byte	0x81
 9940 1675 07       		.uleb128 0x7
 9941 1676 B1000000 		.4byte	0xb1
 9942 167a 85160000 		.4byte	0x1685
 9943 167e 08       		.uleb128 0x8
 9944 167f 0E010000 		.4byte	0x10e
 9945 1683 0B       		.byte	0xb
 9946 1684 00       		.byte	0
 9947 1685 26       		.uleb128 0x26
 9948 1686 21040000 		.4byte	.LASF312
 9949 168a 07       		.byte	0x7
 9950 168b 4A02     		.2byte	0x24a
 9951 168d 75160000 		.4byte	0x1675
 9952 1691 26       		.uleb128 0x26
 9953 1692 7B100000 		.4byte	.LASF313
 9954 1696 07       		.byte	0x7
 9955 1697 4B02     		.2byte	0x24b
 9956 1699 81000000 		.4byte	0x81
 9957 169d 07       		.uleb128 0x7
 9958 169e A5000000 		.4byte	0xa5
 9959 16a2 AD160000 		.4byte	0x16ad
 9960 16a6 08       		.uleb128 0x8
 9961 16a7 0E010000 		.4byte	0x10e
 9962 16ab 01       		.byte	0x1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 214


 9963 16ac 00       		.byte	0
 9964 16ad 26       		.uleb128 0x26
 9965 16ae F9040000 		.4byte	.LASF314
 9966 16b2 07       		.byte	0x7
 9967 16b3 4E02     		.2byte	0x24e
 9968 16b5 9D160000 		.4byte	0x169d
 9969 16b9 07       		.uleb128 0x7
 9970 16ba 99000000 		.4byte	0x99
 9971 16be CF160000 		.4byte	0x16cf
 9972 16c2 08       		.uleb128 0x8
 9973 16c3 0E010000 		.4byte	0x10e
 9974 16c7 01       		.byte	0x1
 9975 16c8 08       		.uleb128 0x8
 9976 16c9 0E010000 		.4byte	0x10e
 9977 16cd 04       		.byte	0x4
 9978 16ce 00       		.byte	0
 9979 16cf 26       		.uleb128 0x26
 9980 16d0 98060000 		.4byte	.LASF315
 9981 16d4 07       		.byte	0x7
 9982 16d5 5102     		.2byte	0x251
 9983 16d7 B9160000 		.4byte	0x16b9
 9984 16db 26       		.uleb128 0x26
 9985 16dc 2E0D0000 		.4byte	.LASF316
 9986 16e0 07       		.byte	0x7
 9987 16e1 5202     		.2byte	0x252
 9988 16e3 2E070000 		.4byte	0x72e
 9989 16e7 07       		.uleb128 0x7
 9990 16e8 8D000000 		.4byte	0x8d
 9991 16ec FD160000 		.4byte	0x16fd
 9992 16f0 08       		.uleb128 0x8
 9993 16f1 0E010000 		.4byte	0x10e
 9994 16f5 01       		.byte	0x1
 9995 16f6 08       		.uleb128 0x8
 9996 16f7 0E010000 		.4byte	0x10e
 9997 16fb 04       		.byte	0x4
 9998 16fc 00       		.byte	0
 9999 16fd 26       		.uleb128 0x26
 10000 16fe 500F0000 		.4byte	.LASF317
 10001 1702 07       		.byte	0x7
 10002 1703 5302     		.2byte	0x253
 10003 1705 E7160000 		.4byte	0x16e7
 10004 1709 07       		.uleb128 0x7
 10005 170a 81000000 		.4byte	0x81
 10006 170e 1F170000 		.4byte	0x171f
 10007 1712 08       		.uleb128 0x8
 10008 1713 0E010000 		.4byte	0x10e
 10009 1717 01       		.byte	0x1
 10010 1718 08       		.uleb128 0x8
 10011 1719 0E010000 		.4byte	0x10e
 10012 171d 04       		.byte	0x4
 10013 171e 00       		.byte	0
 10014 171f 26       		.uleb128 0x26
 10015 1720 69060000 		.4byte	.LASF318
 10016 1724 07       		.byte	0x7
 10017 1725 5402     		.2byte	0x254
 10018 1727 09170000 		.4byte	0x1709
 10019 172b 26       		.uleb128 0x26
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 215


 10020 172c C8030000 		.4byte	.LASF319
 10021 1730 07       		.byte	0x7
 10022 1731 5502     		.2byte	0x255
 10023 1733 2E070000 		.4byte	0x72e
 10024 1737 26       		.uleb128 0x26
 10025 1738 760A0000 		.4byte	.LASF320
 10026 173c 07       		.byte	0x7
 10027 173d 5802     		.2byte	0x258
 10028 173f BD000000 		.4byte	0xbd
 10029 1743 26       		.uleb128 0x26
 10030 1744 BA050000 		.4byte	.LASF321
 10031 1748 07       		.byte	0x7
 10032 1749 5B02     		.2byte	0x25b
 10033 174b 9F010000 		.4byte	0x19f
 10034 174f 26       		.uleb128 0x26
 10035 1750 46070000 		.4byte	.LASF322
 10036 1754 07       		.byte	0x7
 10037 1755 5E02     		.2byte	0x25e
 10038 1757 9F010000 		.4byte	0x19f
 10039 175b 07       		.uleb128 0x7
 10040 175c F60A0000 		.4byte	0xaf6
 10041 1760 6B170000 		.4byte	0x176b
 10042 1764 08       		.uleb128 0x8
 10043 1765 0E010000 		.4byte	0x10e
 10044 1769 04       		.byte	0x4
 10045 176a 00       		.byte	0
 10046 176b 26       		.uleb128 0x26
 10047 176c 18050000 		.4byte	.LASF323
 10048 1770 07       		.byte	0x7
 10049 1771 6702     		.2byte	0x267
 10050 1773 5B170000 		.4byte	0x175b
 10051 1777 26       		.uleb128 0x26
 10052 1778 FB050000 		.4byte	.LASF324
 10053 177c 07       		.byte	0x7
 10054 177d 6702     		.2byte	0x267
 10055 177f 5B170000 		.4byte	0x175b
 10056 1783 00       		.byte	0
 10057              		.section	.debug_abbrev,"",%progbits
 10058              	.Ldebug_abbrev0:
 10059 0000 01       		.uleb128 0x1
 10060 0001 11       		.uleb128 0x11
 10061 0002 01       		.byte	0x1
 10062 0003 25       		.uleb128 0x25
 10063 0004 0E       		.uleb128 0xe
 10064 0005 13       		.uleb128 0x13
 10065 0006 0B       		.uleb128 0xb
 10066 0007 03       		.uleb128 0x3
 10067 0008 0E       		.uleb128 0xe
 10068 0009 1B       		.uleb128 0x1b
 10069 000a 0E       		.uleb128 0xe
 10070 000b 55       		.uleb128 0x55
 10071 000c 17       		.uleb128 0x17
 10072 000d 11       		.uleb128 0x11
 10073 000e 01       		.uleb128 0x1
 10074 000f 10       		.uleb128 0x10
 10075 0010 17       		.uleb128 0x17
 10076 0011 00       		.byte	0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 216


 10077 0012 00       		.byte	0
 10078 0013 02       		.uleb128 0x2
 10079 0014 24       		.uleb128 0x24
 10080 0015 00       		.byte	0
 10081 0016 0B       		.uleb128 0xb
 10082 0017 0B       		.uleb128 0xb
 10083 0018 3E       		.uleb128 0x3e
 10084 0019 0B       		.uleb128 0xb
 10085 001a 03       		.uleb128 0x3
 10086 001b 0E       		.uleb128 0xe
 10087 001c 00       		.byte	0
 10088 001d 00       		.byte	0
 10089 001e 03       		.uleb128 0x3
 10090 001f 16       		.uleb128 0x16
 10091 0020 00       		.byte	0
 10092 0021 03       		.uleb128 0x3
 10093 0022 0E       		.uleb128 0xe
 10094 0023 3A       		.uleb128 0x3a
 10095 0024 0B       		.uleb128 0xb
 10096 0025 3B       		.uleb128 0x3b
 10097 0026 0B       		.uleb128 0xb
 10098 0027 49       		.uleb128 0x49
 10099 0028 13       		.uleb128 0x13
 10100 0029 00       		.byte	0
 10101 002a 00       		.byte	0
 10102 002b 04       		.uleb128 0x4
 10103 002c 24       		.uleb128 0x24
 10104 002d 00       		.byte	0
 10105 002e 0B       		.uleb128 0xb
 10106 002f 0B       		.uleb128 0xb
 10107 0030 3E       		.uleb128 0x3e
 10108 0031 0B       		.uleb128 0xb
 10109 0032 03       		.uleb128 0x3
 10110 0033 08       		.uleb128 0x8
 10111 0034 00       		.byte	0
 10112 0035 00       		.byte	0
 10113 0036 05       		.uleb128 0x5
 10114 0037 16       		.uleb128 0x16
 10115 0038 00       		.byte	0
 10116 0039 03       		.uleb128 0x3
 10117 003a 0E       		.uleb128 0xe
 10118 003b 3A       		.uleb128 0x3a
 10119 003c 0B       		.uleb128 0xb
 10120 003d 3B       		.uleb128 0x3b
 10121 003e 05       		.uleb128 0x5
 10122 003f 49       		.uleb128 0x49
 10123 0040 13       		.uleb128 0x13
 10124 0041 00       		.byte	0
 10125 0042 00       		.byte	0
 10126 0043 06       		.uleb128 0x6
 10127 0044 35       		.uleb128 0x35
 10128 0045 00       		.byte	0
 10129 0046 49       		.uleb128 0x49
 10130 0047 13       		.uleb128 0x13
 10131 0048 00       		.byte	0
 10132 0049 00       		.byte	0
 10133 004a 07       		.uleb128 0x7
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 217


 10134 004b 01       		.uleb128 0x1
 10135 004c 01       		.byte	0x1
 10136 004d 49       		.uleb128 0x49
 10137 004e 13       		.uleb128 0x13
 10138 004f 01       		.uleb128 0x1
 10139 0050 13       		.uleb128 0x13
 10140 0051 00       		.byte	0
 10141 0052 00       		.byte	0
 10142 0053 08       		.uleb128 0x8
 10143 0054 21       		.uleb128 0x21
 10144 0055 00       		.byte	0
 10145 0056 49       		.uleb128 0x49
 10146 0057 13       		.uleb128 0x13
 10147 0058 2F       		.uleb128 0x2f
 10148 0059 0B       		.uleb128 0xb
 10149 005a 00       		.byte	0
 10150 005b 00       		.byte	0
 10151 005c 09       		.uleb128 0x9
 10152 005d 04       		.uleb128 0x4
 10153 005e 01       		.byte	0x1
 10154 005f 03       		.uleb128 0x3
 10155 0060 0E       		.uleb128 0xe
 10156 0061 0B       		.uleb128 0xb
 10157 0062 0B       		.uleb128 0xb
 10158 0063 49       		.uleb128 0x49
 10159 0064 13       		.uleb128 0x13
 10160 0065 3A       		.uleb128 0x3a
 10161 0066 0B       		.uleb128 0xb
 10162 0067 3B       		.uleb128 0x3b
 10163 0068 0B       		.uleb128 0xb
 10164 0069 01       		.uleb128 0x1
 10165 006a 13       		.uleb128 0x13
 10166 006b 00       		.byte	0
 10167 006c 00       		.byte	0
 10168 006d 0A       		.uleb128 0xa
 10169 006e 28       		.uleb128 0x28
 10170 006f 00       		.byte	0
 10171 0070 03       		.uleb128 0x3
 10172 0071 0E       		.uleb128 0xe
 10173 0072 1C       		.uleb128 0x1c
 10174 0073 0B       		.uleb128 0xb
 10175 0074 00       		.byte	0
 10176 0075 00       		.byte	0
 10177 0076 0B       		.uleb128 0xb
 10178 0077 13       		.uleb128 0x13
 10179 0078 00       		.byte	0
 10180 0079 03       		.uleb128 0x3
 10181 007a 0E       		.uleb128 0xe
 10182 007b 3C       		.uleb128 0x3c
 10183 007c 19       		.uleb128 0x19
 10184 007d 00       		.byte	0
 10185 007e 00       		.byte	0
 10186 007f 0C       		.uleb128 0xc
 10187 0080 0F       		.uleb128 0xf
 10188 0081 00       		.byte	0
 10189 0082 0B       		.uleb128 0xb
 10190 0083 0B       		.uleb128 0xb
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 218


 10191 0084 49       		.uleb128 0x49
 10192 0085 13       		.uleb128 0x13
 10193 0086 00       		.byte	0
 10194 0087 00       		.byte	0
 10195 0088 0D       		.uleb128 0xd
 10196 0089 13       		.uleb128 0x13
 10197 008a 01       		.byte	0x1
 10198 008b 03       		.uleb128 0x3
 10199 008c 0E       		.uleb128 0xe
 10200 008d 0B       		.uleb128 0xb
 10201 008e 0B       		.uleb128 0xb
 10202 008f 3A       		.uleb128 0x3a
 10203 0090 0B       		.uleb128 0xb
 10204 0091 3B       		.uleb128 0x3b
 10205 0092 0B       		.uleb128 0xb
 10206 0093 01       		.uleb128 0x1
 10207 0094 13       		.uleb128 0x13
 10208 0095 00       		.byte	0
 10209 0096 00       		.byte	0
 10210 0097 0E       		.uleb128 0xe
 10211 0098 0D       		.uleb128 0xd
 10212 0099 00       		.byte	0
 10213 009a 03       		.uleb128 0x3
 10214 009b 08       		.uleb128 0x8
 10215 009c 3A       		.uleb128 0x3a
 10216 009d 0B       		.uleb128 0xb
 10217 009e 3B       		.uleb128 0x3b
 10218 009f 0B       		.uleb128 0xb
 10219 00a0 49       		.uleb128 0x49
 10220 00a1 13       		.uleb128 0x13
 10221 00a2 38       		.uleb128 0x38
 10222 00a3 0B       		.uleb128 0xb
 10223 00a4 00       		.byte	0
 10224 00a5 00       		.byte	0
 10225 00a6 0F       		.uleb128 0xf
 10226 00a7 0D       		.uleb128 0xd
 10227 00a8 00       		.byte	0
 10228 00a9 03       		.uleb128 0x3
 10229 00aa 0E       		.uleb128 0xe
 10230 00ab 3A       		.uleb128 0x3a
 10231 00ac 0B       		.uleb128 0xb
 10232 00ad 3B       		.uleb128 0x3b
 10233 00ae 0B       		.uleb128 0xb
 10234 00af 49       		.uleb128 0x49
 10235 00b0 13       		.uleb128 0x13
 10236 00b1 38       		.uleb128 0x38
 10237 00b2 0B       		.uleb128 0xb
 10238 00b3 00       		.byte	0
 10239 00b4 00       		.byte	0
 10240 00b5 10       		.uleb128 0x10
 10241 00b6 13       		.uleb128 0x13
 10242 00b7 01       		.byte	0x1
 10243 00b8 03       		.uleb128 0x3
 10244 00b9 0E       		.uleb128 0xe
 10245 00ba 0B       		.uleb128 0xb
 10246 00bb 0B       		.uleb128 0xb
 10247 00bc 3A       		.uleb128 0x3a
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 219


 10248 00bd 0B       		.uleb128 0xb
 10249 00be 3B       		.uleb128 0x3b
 10250 00bf 05       		.uleb128 0x5
 10251 00c0 01       		.uleb128 0x1
 10252 00c1 13       		.uleb128 0x13
 10253 00c2 00       		.byte	0
 10254 00c3 00       		.byte	0
 10255 00c4 11       		.uleb128 0x11
 10256 00c5 0D       		.uleb128 0xd
 10257 00c6 00       		.byte	0
 10258 00c7 03       		.uleb128 0x3
 10259 00c8 0E       		.uleb128 0xe
 10260 00c9 3A       		.uleb128 0x3a
 10261 00ca 0B       		.uleb128 0xb
 10262 00cb 3B       		.uleb128 0x3b
 10263 00cc 05       		.uleb128 0x5
 10264 00cd 49       		.uleb128 0x49
 10265 00ce 13       		.uleb128 0x13
 10266 00cf 38       		.uleb128 0x38
 10267 00d0 0B       		.uleb128 0xb
 10268 00d1 00       		.byte	0
 10269 00d2 00       		.byte	0
 10270 00d3 12       		.uleb128 0x12
 10271 00d4 0D       		.uleb128 0xd
 10272 00d5 00       		.byte	0
 10273 00d6 03       		.uleb128 0x3
 10274 00d7 08       		.uleb128 0x8
 10275 00d8 3A       		.uleb128 0x3a
 10276 00d9 0B       		.uleb128 0xb
 10277 00da 3B       		.uleb128 0x3b
 10278 00db 05       		.uleb128 0x5
 10279 00dc 49       		.uleb128 0x49
 10280 00dd 13       		.uleb128 0x13
 10281 00de 38       		.uleb128 0x38
 10282 00df 0B       		.uleb128 0xb
 10283 00e0 00       		.byte	0
 10284 00e1 00       		.byte	0
 10285 00e2 13       		.uleb128 0x13
 10286 00e3 13       		.uleb128 0x13
 10287 00e4 01       		.byte	0x1
 10288 00e5 03       		.uleb128 0x3
 10289 00e6 0E       		.uleb128 0xe
 10290 00e7 0B       		.uleb128 0xb
 10291 00e8 05       		.uleb128 0x5
 10292 00e9 3A       		.uleb128 0x3a
 10293 00ea 0B       		.uleb128 0xb
 10294 00eb 3B       		.uleb128 0x3b
 10295 00ec 05       		.uleb128 0x5
 10296 00ed 01       		.uleb128 0x1
 10297 00ee 13       		.uleb128 0x13
 10298 00ef 00       		.byte	0
 10299 00f0 00       		.byte	0
 10300 00f1 14       		.uleb128 0x14
 10301 00f2 0D       		.uleb128 0xd
 10302 00f3 00       		.byte	0
 10303 00f4 03       		.uleb128 0x3
 10304 00f5 08       		.uleb128 0x8
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 220


 10305 00f6 3A       		.uleb128 0x3a
 10306 00f7 0B       		.uleb128 0xb
 10307 00f8 3B       		.uleb128 0x3b
 10308 00f9 05       		.uleb128 0x5
 10309 00fa 49       		.uleb128 0x49
 10310 00fb 13       		.uleb128 0x13
 10311 00fc 38       		.uleb128 0x38
 10312 00fd 05       		.uleb128 0x5
 10313 00fe 00       		.byte	0
 10314 00ff 00       		.byte	0
 10315 0100 15       		.uleb128 0x15
 10316 0101 0D       		.uleb128 0xd
 10317 0102 00       		.byte	0
 10318 0103 03       		.uleb128 0x3
 10319 0104 0E       		.uleb128 0xe
 10320 0105 3A       		.uleb128 0x3a
 10321 0106 0B       		.uleb128 0xb
 10322 0107 3B       		.uleb128 0x3b
 10323 0108 05       		.uleb128 0x5
 10324 0109 49       		.uleb128 0x49
 10325 010a 13       		.uleb128 0x13
 10326 010b 38       		.uleb128 0x38
 10327 010c 05       		.uleb128 0x5
 10328 010d 00       		.byte	0
 10329 010e 00       		.byte	0
 10330 010f 16       		.uleb128 0x16
 10331 0110 04       		.uleb128 0x4
 10332 0111 01       		.byte	0x1
 10333 0112 0B       		.uleb128 0xb
 10334 0113 0B       		.uleb128 0xb
 10335 0114 49       		.uleb128 0x49
 10336 0115 13       		.uleb128 0x13
 10337 0116 3A       		.uleb128 0x3a
 10338 0117 0B       		.uleb128 0xb
 10339 0118 3B       		.uleb128 0x3b
 10340 0119 05       		.uleb128 0x5
 10341 011a 01       		.uleb128 0x1
 10342 011b 13       		.uleb128 0x13
 10343 011c 00       		.byte	0
 10344 011d 00       		.byte	0
 10345 011e 17       		.uleb128 0x17
 10346 011f 2E       		.uleb128 0x2e
 10347 0120 00       		.byte	0
 10348 0121 3F       		.uleb128 0x3f
 10349 0122 19       		.uleb128 0x19
 10350 0123 03       		.uleb128 0x3
 10351 0124 0E       		.uleb128 0xe
 10352 0125 3A       		.uleb128 0x3a
 10353 0126 0B       		.uleb128 0xb
 10354 0127 3B       		.uleb128 0x3b
 10355 0128 0B       		.uleb128 0xb
 10356 0129 27       		.uleb128 0x27
 10357 012a 19       		.uleb128 0x19
 10358 012b 11       		.uleb128 0x11
 10359 012c 01       		.uleb128 0x1
 10360 012d 12       		.uleb128 0x12
 10361 012e 06       		.uleb128 0x6
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 221


 10362 012f 40       		.uleb128 0x40
 10363 0130 18       		.uleb128 0x18
 10364 0131 9742     		.uleb128 0x2117
 10365 0133 19       		.uleb128 0x19
 10366 0134 00       		.byte	0
 10367 0135 00       		.byte	0
 10368 0136 18       		.uleb128 0x18
 10369 0137 2E       		.uleb128 0x2e
 10370 0138 01       		.byte	0x1
 10371 0139 3F       		.uleb128 0x3f
 10372 013a 19       		.uleb128 0x19
 10373 013b 03       		.uleb128 0x3
 10374 013c 0E       		.uleb128 0xe
 10375 013d 3A       		.uleb128 0x3a
 10376 013e 0B       		.uleb128 0xb
 10377 013f 3B       		.uleb128 0x3b
 10378 0140 0B       		.uleb128 0xb
 10379 0141 11       		.uleb128 0x11
 10380 0142 01       		.uleb128 0x1
 10381 0143 12       		.uleb128 0x12
 10382 0144 06       		.uleb128 0x6
 10383 0145 40       		.uleb128 0x40
 10384 0146 18       		.uleb128 0x18
 10385 0147 9642     		.uleb128 0x2116
 10386 0149 19       		.uleb128 0x19
 10387 014a 01       		.uleb128 0x1
 10388 014b 13       		.uleb128 0x13
 10389 014c 00       		.byte	0
 10390 014d 00       		.byte	0
 10391 014e 19       		.uleb128 0x19
 10392 014f 34       		.uleb128 0x34
 10393 0150 00       		.byte	0
 10394 0151 03       		.uleb128 0x3
 10395 0152 0E       		.uleb128 0xe
 10396 0153 3A       		.uleb128 0x3a
 10397 0154 0B       		.uleb128 0xb
 10398 0155 3B       		.uleb128 0x3b
 10399 0156 0B       		.uleb128 0xb
 10400 0157 49       		.uleb128 0x49
 10401 0158 13       		.uleb128 0x13
 10402 0159 02       		.uleb128 0x2
 10403 015a 18       		.uleb128 0x18
 10404 015b 00       		.byte	0
 10405 015c 00       		.byte	0
 10406 015d 1A       		.uleb128 0x1a
 10407 015e 2E       		.uleb128 0x2e
 10408 015f 01       		.byte	0x1
 10409 0160 3F       		.uleb128 0x3f
 10410 0161 19       		.uleb128 0x19
 10411 0162 03       		.uleb128 0x3
 10412 0163 0E       		.uleb128 0xe
 10413 0164 3A       		.uleb128 0x3a
 10414 0165 0B       		.uleb128 0xb
 10415 0166 3B       		.uleb128 0x3b
 10416 0167 05       		.uleb128 0x5
 10417 0168 27       		.uleb128 0x27
 10418 0169 19       		.uleb128 0x19
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 222


 10419 016a 11       		.uleb128 0x11
 10420 016b 01       		.uleb128 0x1
 10421 016c 12       		.uleb128 0x12
 10422 016d 06       		.uleb128 0x6
 10423 016e 40       		.uleb128 0x40
 10424 016f 18       		.uleb128 0x18
 10425 0170 9642     		.uleb128 0x2116
 10426 0172 19       		.uleb128 0x19
 10427 0173 01       		.uleb128 0x1
 10428 0174 13       		.uleb128 0x13
 10429 0175 00       		.byte	0
 10430 0176 00       		.byte	0
 10431 0177 1B       		.uleb128 0x1b
 10432 0178 34       		.uleb128 0x34
 10433 0179 00       		.byte	0
 10434 017a 03       		.uleb128 0x3
 10435 017b 0E       		.uleb128 0xe
 10436 017c 3A       		.uleb128 0x3a
 10437 017d 0B       		.uleb128 0xb
 10438 017e 3B       		.uleb128 0x3b
 10439 017f 05       		.uleb128 0x5
 10440 0180 49       		.uleb128 0x49
 10441 0181 13       		.uleb128 0x13
 10442 0182 02       		.uleb128 0x2
 10443 0183 18       		.uleb128 0x18
 10444 0184 00       		.byte	0
 10445 0185 00       		.byte	0
 10446 0186 1C       		.uleb128 0x1c
 10447 0187 0B       		.uleb128 0xb
 10448 0188 01       		.byte	0x1
 10449 0189 11       		.uleb128 0x11
 10450 018a 01       		.uleb128 0x1
 10451 018b 12       		.uleb128 0x12
 10452 018c 06       		.uleb128 0x6
 10453 018d 00       		.byte	0
 10454 018e 00       		.byte	0
 10455 018f 1D       		.uleb128 0x1d
 10456 0190 21       		.uleb128 0x21
 10457 0191 00       		.byte	0
 10458 0192 49       		.uleb128 0x49
 10459 0193 13       		.uleb128 0x13
 10460 0194 2F       		.uleb128 0x2f
 10461 0195 05       		.uleb128 0x5
 10462 0196 00       		.byte	0
 10463 0197 00       		.byte	0
 10464 0198 1E       		.uleb128 0x1e
 10465 0199 05       		.uleb128 0x5
 10466 019a 00       		.byte	0
 10467 019b 03       		.uleb128 0x3
 10468 019c 0E       		.uleb128 0xe
 10469 019d 3A       		.uleb128 0x3a
 10470 019e 0B       		.uleb128 0xb
 10471 019f 3B       		.uleb128 0x3b
 10472 01a0 05       		.uleb128 0x5
 10473 01a1 49       		.uleb128 0x49
 10474 01a2 13       		.uleb128 0x13
 10475 01a3 02       		.uleb128 0x2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 223


 10476 01a4 18       		.uleb128 0x18
 10477 01a5 00       		.byte	0
 10478 01a6 00       		.byte	0
 10479 01a7 1F       		.uleb128 0x1f
 10480 01a8 34       		.uleb128 0x34
 10481 01a9 00       		.byte	0
 10482 01aa 03       		.uleb128 0x3
 10483 01ab 08       		.uleb128 0x8
 10484 01ac 3A       		.uleb128 0x3a
 10485 01ad 0B       		.uleb128 0xb
 10486 01ae 3B       		.uleb128 0x3b
 10487 01af 05       		.uleb128 0x5
 10488 01b0 49       		.uleb128 0x49
 10489 01b1 13       		.uleb128 0x13
 10490 01b2 02       		.uleb128 0x2
 10491 01b3 18       		.uleb128 0x18
 10492 01b4 00       		.byte	0
 10493 01b5 00       		.byte	0
 10494 01b6 20       		.uleb128 0x20
 10495 01b7 0B       		.uleb128 0xb
 10496 01b8 01       		.byte	0x1
 10497 01b9 55       		.uleb128 0x55
 10498 01ba 17       		.uleb128 0x17
 10499 01bb 00       		.byte	0
 10500 01bc 00       		.byte	0
 10501 01bd 21       		.uleb128 0x21
 10502 01be 2E       		.uleb128 0x2e
 10503 01bf 01       		.byte	0x1
 10504 01c0 3F       		.uleb128 0x3f
 10505 01c1 19       		.uleb128 0x19
 10506 01c2 03       		.uleb128 0x3
 10507 01c3 0E       		.uleb128 0xe
 10508 01c4 3A       		.uleb128 0x3a
 10509 01c5 0B       		.uleb128 0xb
 10510 01c6 3B       		.uleb128 0x3b
 10511 01c7 05       		.uleb128 0x5
 10512 01c8 27       		.uleb128 0x27
 10513 01c9 19       		.uleb128 0x19
 10514 01ca 11       		.uleb128 0x11
 10515 01cb 01       		.uleb128 0x1
 10516 01cc 12       		.uleb128 0x12
 10517 01cd 06       		.uleb128 0x6
 10518 01ce 40       		.uleb128 0x40
 10519 01cf 18       		.uleb128 0x18
 10520 01d0 9742     		.uleb128 0x2117
 10521 01d2 19       		.uleb128 0x19
 10522 01d3 01       		.uleb128 0x1
 10523 01d4 13       		.uleb128 0x13
 10524 01d5 00       		.byte	0
 10525 01d6 00       		.byte	0
 10526 01d7 22       		.uleb128 0x22
 10527 01d8 0B       		.uleb128 0xb
 10528 01d9 01       		.byte	0x1
 10529 01da 55       		.uleb128 0x55
 10530 01db 17       		.uleb128 0x17
 10531 01dc 01       		.uleb128 0x1
 10532 01dd 13       		.uleb128 0x13
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 224


 10533 01de 00       		.byte	0
 10534 01df 00       		.byte	0
 10535 01e0 23       		.uleb128 0x23
 10536 01e1 05       		.uleb128 0x5
 10537 01e2 00       		.byte	0
 10538 01e3 03       		.uleb128 0x3
 10539 01e4 08       		.uleb128 0x8
 10540 01e5 3A       		.uleb128 0x3a
 10541 01e6 0B       		.uleb128 0xb
 10542 01e7 3B       		.uleb128 0x3b
 10543 01e8 05       		.uleb128 0x5
 10544 01e9 49       		.uleb128 0x49
 10545 01ea 13       		.uleb128 0x13
 10546 01eb 02       		.uleb128 0x2
 10547 01ec 18       		.uleb128 0x18
 10548 01ed 00       		.byte	0
 10549 01ee 00       		.byte	0
 10550 01ef 24       		.uleb128 0x24
 10551 01f0 2E       		.uleb128 0x2e
 10552 01f1 01       		.byte	0x1
 10553 01f2 3F       		.uleb128 0x3f
 10554 01f3 19       		.uleb128 0x19
 10555 01f4 03       		.uleb128 0x3
 10556 01f5 0E       		.uleb128 0xe
 10557 01f6 3A       		.uleb128 0x3a
 10558 01f7 0B       		.uleb128 0xb
 10559 01f8 3B       		.uleb128 0x3b
 10560 01f9 05       		.uleb128 0x5
 10561 01fa 11       		.uleb128 0x11
 10562 01fb 01       		.uleb128 0x1
 10563 01fc 12       		.uleb128 0x12
 10564 01fd 06       		.uleb128 0x6
 10565 01fe 40       		.uleb128 0x40
 10566 01ff 18       		.uleb128 0x18
 10567 0200 9642     		.uleb128 0x2116
 10568 0202 19       		.uleb128 0x19
 10569 0203 01       		.uleb128 0x1
 10570 0204 13       		.uleb128 0x13
 10571 0205 00       		.byte	0
 10572 0206 00       		.byte	0
 10573 0207 25       		.uleb128 0x25
 10574 0208 26       		.uleb128 0x26
 10575 0209 00       		.byte	0
 10576 020a 49       		.uleb128 0x49
 10577 020b 13       		.uleb128 0x13
 10578 020c 00       		.byte	0
 10579 020d 00       		.byte	0
 10580 020e 26       		.uleb128 0x26
 10581 020f 34       		.uleb128 0x34
 10582 0210 00       		.byte	0
 10583 0211 03       		.uleb128 0x3
 10584 0212 0E       		.uleb128 0xe
 10585 0213 3A       		.uleb128 0x3a
 10586 0214 0B       		.uleb128 0xb
 10587 0215 3B       		.uleb128 0x3b
 10588 0216 05       		.uleb128 0x5
 10589 0217 49       		.uleb128 0x49
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 225


 10590 0218 13       		.uleb128 0x13
 10591 0219 3F       		.uleb128 0x3f
 10592 021a 19       		.uleb128 0x19
 10593 021b 3C       		.uleb128 0x3c
 10594 021c 19       		.uleb128 0x19
 10595 021d 00       		.byte	0
 10596 021e 00       		.byte	0
 10597 021f 00       		.byte	0
 10598              		.section	.debug_aranges,"",%progbits
 10599 0000 74000000 		.4byte	0x74
 10600 0004 0200     		.2byte	0x2
 10601 0006 00000000 		.4byte	.Ldebug_info0
 10602 000a 04       		.byte	0x4
 10603 000b 00       		.byte	0
 10604 000c 0000     		.2byte	0
 10605 000e 0000     		.2byte	0
 10606 0010 00000000 		.4byte	.LFB64
 10607 0014 18000000 		.4byte	.LFE64-.LFB64
 10608 0018 00000000 		.4byte	.LFB65
 10609 001c 20000000 		.4byte	.LFE65-.LFB65
 10610 0020 00000000 		.4byte	.LFB66
 10611 0024 F4010000 		.4byte	.LFE66-.LFB66
 10612 0028 00000000 		.4byte	.LFB67
 10613 002c 48030000 		.4byte	.LFE67-.LFB67
 10614 0030 00000000 		.4byte	.LFB68
 10615 0034 CC050000 		.4byte	.LFE68-.LFB68
 10616 0038 00000000 		.4byte	.LFB69
 10617 003c 34030000 		.4byte	.LFE69-.LFB69
 10618 0040 00000000 		.4byte	.LFB70
 10619 0044 B0010000 		.4byte	.LFE70-.LFB70
 10620 0048 00000000 		.4byte	.LFB71
 10621 004c E8000000 		.4byte	.LFE71-.LFB71
 10622 0050 00000000 		.4byte	.LFB72
 10623 0054 18080000 		.4byte	.LFE72-.LFB72
 10624 0058 00000000 		.4byte	.LFB73
 10625 005c 20110000 		.4byte	.LFE73-.LFB73
 10626 0060 00000000 		.4byte	.LFB74
 10627 0064 58060000 		.4byte	.LFE74-.LFB74
 10628 0068 00000000 		.4byte	.LFB75
 10629 006c 08010000 		.4byte	.LFE75-.LFB75
 10630 0070 00000000 		.4byte	0
 10631 0074 00000000 		.4byte	0
 10632              		.section	.debug_ranges,"",%progbits
 10633              	.Ldebug_ranges0:
 10634 0000 68010000 		.4byte	.LBB3
 10635 0004 AA010000 		.4byte	.LBE3
 10636 0008 AC010000 		.4byte	.LBB4
 10637 000c F2010000 		.4byte	.LBE4
 10638 0010 00000000 		.4byte	0
 10639 0014 00000000 		.4byte	0
 10640 0018 3A000000 		.4byte	.LBB5
 10641 001c 40010000 		.4byte	.LBE5
 10642 0020 42010000 		.4byte	.LBB6
 10643 0024 BC010000 		.4byte	.LBE6
 10644 0028 00000000 		.4byte	0
 10645 002c 00000000 		.4byte	0
 10646 0030 BE010000 		.4byte	.LBB7
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 226


 10647 0034 20030000 		.4byte	.LBE7
 10648 0038 22030000 		.4byte	.LBB8
 10649 003c 24030000 		.4byte	.LBE8
 10650 0040 00000000 		.4byte	0
 10651 0044 00000000 		.4byte	0
 10652 0048 00000000 		.4byte	.LFB64
 10653 004c 18000000 		.4byte	.LFE64
 10654 0050 00000000 		.4byte	.LFB65
 10655 0054 20000000 		.4byte	.LFE65
 10656 0058 00000000 		.4byte	.LFB66
 10657 005c F4010000 		.4byte	.LFE66
 10658 0060 00000000 		.4byte	.LFB67
 10659 0064 48030000 		.4byte	.LFE67
 10660 0068 00000000 		.4byte	.LFB68
 10661 006c CC050000 		.4byte	.LFE68
 10662 0070 00000000 		.4byte	.LFB69
 10663 0074 34030000 		.4byte	.LFE69
 10664 0078 00000000 		.4byte	.LFB70
 10665 007c B0010000 		.4byte	.LFE70
 10666 0080 00000000 		.4byte	.LFB71
 10667 0084 E8000000 		.4byte	.LFE71
 10668 0088 00000000 		.4byte	.LFB72
 10669 008c 18080000 		.4byte	.LFE72
 10670 0090 00000000 		.4byte	.LFB73
 10671 0094 20110000 		.4byte	.LFE73
 10672 0098 00000000 		.4byte	.LFB74
 10673 009c 58060000 		.4byte	.LFE74
 10674 00a0 00000000 		.4byte	.LFB75
 10675 00a4 08010000 		.4byte	.LFE75
 10676 00a8 00000000 		.4byte	0
 10677 00ac 00000000 		.4byte	0
 10678              		.section	.debug_line,"",%progbits
 10679              	.Ldebug_line0:
 10680 0000 64090000 		.section	.debug_str,"MS",%progbits,1
 10680      0200AC01 
 10680      00000201 
 10680      FB0E0D00 
 10680      01010101 
 10681              	.LASF54:
 10682 0000 656D675F 		.ascii	"emg_act_counter\000"
 10682      6163745F 
 10682      636F756E 
 10682      74657200 
 10683              	.LASF24:
 10684 0010 73697A65 		.ascii	"sizetype\000"
 10684      74797065 
 10684      00
 10685              	.LASF61:
 10686 0019 706F7765 		.ascii	"power_cycles\000"
 10686      725F6379 
 10686      636C6573 
 10686      00
 10687              	.LASF244:
 10688 0026 706F735F 		.ascii	"pos_cycle_status\000"
 10688      6379636C 
 10688      655F7374 
 10688      61747573 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 227


 10688      00
 10689              	.LASF145:
 10690 0037 77726973 		.ascii	"wrist_direction_association\000"
 10690      745F6469 
 10690      72656374 
 10690      696F6E5F 
 10690      6173736F 
 10691              	.LASF30:
 10692 0053 494E5055 		.ascii	"INPUT_MODE_EMG_FCFS_ADV\000"
 10692      545F4D4F 
 10692      44455F45 
 10692      4D475F46 
 10692      4346535F 
 10693              	.LASF120:
 10694 006b 72656164 		.ascii	"read_ADC_sensors_port_flag\000"
 10694      5F414443 
 10694      5F73656E 
 10694      736F7273 
 10694      5F706F72 
 10695              	.LASF150:
 10696 0086 75736572 		.ascii	"user\000"
 10696      00
 10697              	.LASF10:
 10698 008b 696E7433 		.ascii	"int32_t\000"
 10698      325F7400 
 10699              	.LASF283:
 10700 0093 675F7278 		.ascii	"g_rx\000"
 10700      00
 10701              	.LASF225:
 10702 0098 6F6E655F 		.ascii	"one_time_execute\000"
 10702      74696D65 
 10702      5F657865 
 10702      63757465 
 10702      00
 10703              	.LASF49:
 10704 00a9 73745F64 		.ascii	"st_data\000"
 10704      61746100 
 10705              	.LASF59:
 10706 00b1 746F7461 		.ascii	"total_runtime\000"
 10706      6C5F7275 
 10706      6E74696D 
 10706      6500
 10707              	.LASF13:
 10708 00bf 75696E74 		.ascii	"uint32\000"
 10708      333200
 10709              	.LASF210:
 10710 00c6 6E5F6C69 		.ascii	"n_line\000"
 10710      6E6500
 10711              	.LASF151:
 10712 00cd 4A4F595F 		.ascii	"JOY_spec\000"
 10712      73706563 
 10712      00
 10713              	.LASF88:
 10714 00d6 706F735F 		.ascii	"pos_lim_inf\000"
 10714      6C696D5F 
 10714      696E6600 
 10715              	.LASF305:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 228


 10716 00e2 74656E73 		.ascii	"tension_valid\000"
 10716      696F6E5F 
 10716      76616C69 
 10716      6400
 10717              	.LASF200:
 10718 00f0 6572725F 		.ascii	"err_joy_1\000"
 10718      6A6F795F 
 10718      3100
 10719              	.LASF177:
 10720 00fa 73746174 		.ascii	"state\000"
 10720      6500
 10721              	.LASF307:
 10722 0100 6379636C 		.ascii	"cycles_interrupt_flag\000"
 10722      65735F69 
 10722      6E746572 
 10722      72757074 
 10722      5F666C61 
 10723              	.LASF254:
 10724 0116 62696E5F 		.ascii	"bin_max\000"
 10724      6D617800 
 10725              	.LASF271:
 10726 011e 61646472 		.ascii	"addr_start_c\000"
 10726      5F737461 
 10726      72745F63 
 10726      00
 10727              	.LASF29:
 10728 012b 494E5055 		.ascii	"INPUT_MODE_EMG_FCFS\000"
 10728      545F4D4F 
 10728      44455F45 
 10728      4D475F46 
 10728      43465300 
 10729              	.LASF92:
 10730 013f 63757272 		.ascii	"curr_lookup\000"
 10730      5F6C6F6F 
 10730      6B757000 
 10731              	.LASF208:
 10732 014b 70776D5F 		.ascii	"pwm_input\000"
 10732      696E7075 
 10732      7400
 10733              	.LASF57:
 10734 0155 72657374 		.ascii	"rest_counter\000"
 10734      5F636F75 
 10734      6E746572 
 10734      00
 10735              	.LASF135:
 10736 0162 73745F4D 		.ascii	"st_MASTER_spec\000"
 10736      41535445 
 10736      525F7370 
 10736      656300
 10737              	.LASF28:
 10738 0171 494E5055 		.ascii	"INPUT_MODE_EMG_INTEGRAL\000"
 10738      545F4D4F 
 10738      44455F45 
 10738      4D475F49 
 10738      4E544547 
 10739              	.LASF242:
 10740 0189 765F636F 		.ascii	"v_count\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 229


 10740      756E7400 
 10741              	.LASF182:
 10742 0191 72785F64 		.ascii	"rx_data\000"
 10742      61746100 
 10743              	.LASF229:
 10744 0199 7676765F 		.ascii	"vvv_value\000"
 10744      76616C75 
 10744      6500
 10745              	.LASF14:
 10746 01a3 696E7438 		.ascii	"int8\000"
 10746      00
 10747              	.LASF186:
 10748 01a8 696E666F 		.ascii	"info_\000"
 10748      5F00
 10749              	.LASF290:
 10750 01ae 66696C74 		.ascii	"filt_emg\000"
 10750      5F656D67 
 10750      00
 10751              	.LASF107:
 10752 01b7 73745F65 		.ascii	"st_emg\000"
 10752      6D6700
 10753              	.LASF55:
 10754 01be 706F7369 		.ascii	"position_hist\000"
 10754      74696F6E 
 10754      5F686973 
 10754      7400
 10755              	.LASF169:
 10756 01cc 50524550 		.ascii	"PREPARE_DATA\000"
 10756      4152455F 
 10756      44415441 
 10756      00
 10757              	.LASF158:
 10758 01d9 74656D70 		.ascii	"temp_value\000"
 10758      5F76616C 
 10758      756500
 10759              	.LASF251:
 10760 01e4 7468725F 		.ascii	"thr_pos\000"
 10760      706F7300 
 10761              	.LASF142:
 10762 01ec 73745F57 		.ascii	"st_WR_spec\000"
 10762      525F7370 
 10762      656300
 10763              	.LASF202:
 10764 01f7 6572725F 		.ascii	"err_joy_2\000"
 10764      6A6F795F 
 10764      3200
 10765              	.LASF52:
 10766 0201 72656164 		.ascii	"ready\000"
 10766      7900
 10767              	.LASF104:
 10768 0207 456E635F 		.ascii	"Enc_idx_use_for_control\000"
 10768      6964785F 
 10768      7573655F 
 10768      666F725F 
 10768      636F6E74 
 10769              	.LASF161:
 10770 021f 6761696E 		.ascii	"gain\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 230


 10770      00
 10771              	.LASF65:
 10772 0224 73745F64 		.ascii	"st_device\000"
 10772      65766963 
 10772      6500
 10773              	.LASF27:
 10774 022e 494E5055 		.ascii	"INPUT_MODE_EMG_PROPORTIONAL\000"
 10774      545F4D4F 
 10774      44455F45 
 10774      4D475F50 
 10774      524F504F 
 10775              	.LASF70:
 10776 024a 7573655F 		.ascii	"use_2nd_motor_flag\000"
 10776      326E645F 
 10776      6D6F746F 
 10776      725F666C 
 10776      616700
 10777              	.LASF235:
 10778 025d 55445F63 		.ascii	"UD_counter\000"
 10778      6F756E74 
 10778      657200
 10779              	.LASF62:
 10780 0268 65786365 		.ascii	"excessive_signal_activity\000"
 10780      73736976 
 10780      655F7369 
 10780      676E616C 
 10780      5F616374 
 10781              	.LASF165:
 10782 0282 53554D5F 		.ascii	"SUM_AND_MEAN\000"
 10782      414E445F 
 10782      4D45414E 
 10782      00
 10783              	.LASF114:
 10784 028f 72656164 		.ascii	"read_imu_flag\000"
 10784      5F696D75 
 10784      5F666C61 
 10784      6700
 10785              	.LASF122:
 10786 029d 7265636F 		.ascii	"record_EMG_history_on_SD\000"
 10786      72645F45 
 10786      4D475F68 
 10786      6973746F 
 10786      72795F6F 
 10787              	.LASF239:
 10788 02b6 66697273 		.ascii	"first_tension_valid\000"
 10788      745F7465 
 10788      6E73696F 
 10788      6E5F7661 
 10788      6C696400 
 10789              	.LASF292:
 10790 02ca 74696D65 		.ascii	"timer_value\000"
 10790      725F7661 
 10790      6C756500 
 10791              	.LASF4:
 10792 02d6 6C6F6E67 		.ascii	"long int\000"
 10792      20696E74 
 10792      00
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 231


 10793              	.LASF148:
 10794 02df 756E7573 		.ascii	"unused_bytes1\000"
 10794      65645F62 
 10794      79746573 
 10794      3100
 10795              	.LASF189:
 10796 02ed 454D475F 		.ascii	"EMG_history_info_\000"
 10796      68697374 
 10796      6F72795F 
 10796      696E666F 
 10796      5F00
 10797              	.LASF69:
 10798 02ff 72657365 		.ascii	"reset_counters\000"
 10798      745F636F 
 10798      756E7465 
 10798      727300
 10799              	.LASF249:
 10800 030e 62696E5F 		.ascii	"bin_threshold\000"
 10800      74687265 
 10800      73686F6C 
 10800      6400
 10801              	.LASF125:
 10802 031c 75736572 		.ascii	"user_emg\000"
 10802      5F656D67 
 10802      00
 10803              	.LASF224:
 10804 0325 73616665 		.ascii	"safe_startup_motor_activation\000"
 10804      5F737461 
 10804      72747570 
 10804      5F6D6F74 
 10804      6F725F61 
 10805              	.LASF64:
 10806 0343 756E7573 		.ascii	"unused_bytes\000"
 10806      65645F62 
 10806      79746573 
 10806      00
 10807              	.LASF154:
 10808 0350 61636365 		.ascii	"accel_value\000"
 10808      6C5F7661 
 10808      6C756500 
 10809              	.LASF282:
 10810 035c 675F6164 		.ascii	"g_adc_measOld\000"
 10810      635F6D65 
 10810      61734F6C 
 10810      6400
 10811              	.LASF213:
 10812 036a 6175785F 		.ascii	"aux_encoder\000"
 10812      656E636F 
 10812      64657200 
 10813              	.LASF53:
 10814 0376 73745F63 		.ascii	"st_counters\000"
 10814      6F756E74 
 10814      65727300 
 10815              	.LASF291:
 10816 0382 66696C74 		.ascii	"filt_detect_pc\000"
 10816      5F646574 
 10816      6563745F 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 232


 10816      706300
 10817              	.LASF17:
 10818 0391 666C6F61 		.ascii	"float32\000"
 10818      74333200 
 10819              	.LASF209:
 10820 0399 656E636F 		.ascii	"encoder_reading_SPI\000"
 10820      6465725F 
 10820      72656164 
 10820      696E675F 
 10820      53504900 
 10821              	.LASF222:
 10822 03ad 6572726F 		.ascii	"error\000"
 10822      7200
 10823              	.LASF172:
 10824 03b3 57524954 		.ascii	"WRITE_END\000"
 10824      455F454E 
 10824      4400
 10825              	.LASF236:
 10826 03bd 4C525F63 		.ascii	"LR_counter\000"
 10826      6F756E74 
 10826      657200
 10827              	.LASF319:
 10828 03c8 706F735F 		.ascii	"pos_reconstruct\000"
 10828      7265636F 
 10828      6E737472 
 10828      75637400 
 10829              	.LASF0:
 10830 03d8 7369676E 		.ascii	"signed char\000"
 10830      65642063 
 10830      68617200 
 10831              	.LASF124:
 10832 03e4 75736572 		.ascii	"user_code_string\000"
 10832      5F636F64 
 10832      655F7374 
 10832      72696E67 
 10832      00
 10833              	.LASF196:
 10834 03f5 6572725F 		.ascii	"err_emg_1\000"
 10834      656D675F 
 10834      3100
 10835              	.LASF197:
 10836 03ff 6572725F 		.ascii	"err_emg_2\000"
 10836      656D675F 
 10836      3200
 10837              	.LASF112:
 10838 0409 73776974 		.ascii	"switch_emg\000"
 10838      63685F65 
 10838      6D6700
 10839              	.LASF301:
 10840 0414 656D675F 		.ascii	"emg_2_status\000"
 10840      325F7374 
 10840      61747573 
 10840      00
 10841              	.LASF312:
 10842 0421 4144435F 		.ascii	"ADC_buf\000"
 10842      62756600 
 10843              	.LASF306:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 233


 10844 0429 696E7465 		.ascii	"interrupt_flag\000"
 10844      72727570 
 10844      745F666C 
 10844      616700
 10845              	.LASF260:
 10846 0438 73746570 		.ascii	"step\000"
 10846      00
 10847              	.LASF1:
 10848 043d 756E7369 		.ascii	"unsigned char\000"
 10848      676E6564 
 10848      20636861 
 10848      7200
 10849              	.LASF98:
 10850 044b 6E6F745F 		.ascii	"not_revers_motor_flag\000"
 10850      72657665 
 10850      72735F6D 
 10850      6F746F72 
 10850      5F666C61 
 10851              	.LASF269:
 10852 0461 726F775F 		.ascii	"row_start\000"
 10852      73746172 
 10852      7400
 10853              	.LASF310:
 10854 046b 666F7263 		.ascii	"forced_open\000"
 10854      65645F6F 
 10854      70656E00 
 10855              	.LASF217:
 10856 0477 73706565 		.ascii	"speed_encoder\000"
 10856      645F656E 
 10856      636F6465 
 10856      7200
 10857              	.LASF277:
 10858 0485 675F7265 		.ascii	"g_refNew\000"
 10858      664E6577 
 10858      00
 10859              	.LASF258:
 10860 048e 63757272 		.ascii	"curr_off\000"
 10860      5F6F6666 
 10860      00
 10861              	.LASF68:
 10862 0497 72696768 		.ascii	"right_left\000"
 10862      745F6C65 
 10862      667400
 10863              	.LASF96:
 10864 04a2 656E636F 		.ascii	"encoder_line\000"
 10864      6465725F 
 10864      6C696E65 
 10864      00
 10865              	.LASF300:
 10866 04af 656D675F 		.ascii	"emg_1_status\000"
 10866      315F7374 
 10866      61747573 
 10866      00
 10867              	.LASF153:
 10868 04bc 666C6167 		.ascii	"flags\000"
 10868      7300
 10869              	.LASF195:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 234


 10870 04c2 68616E64 		.ascii	"handle_value\000"
 10870      6C655F76 
 10870      616C7565 
 10870      00
 10871              	.LASF20:
 10872 04cf 63686172 		.ascii	"char\000"
 10872      00
 10873              	.LASF240:
 10874 04d4 64657465 		.ascii	"detect_power_cycle_prev\000"
 10874      63745F70 
 10874      6F776572 
 10874      5F637963 
 10874      6C655F70 
 10875              	.LASF91:
 10876 04ec 6D61785F 		.ascii	"max_step_pos\000"
 10876      73746570 
 10876      5F706F73 
 10876      00
 10877              	.LASF314:
 10878 04f9 70776D5F 		.ascii	"pwm_sign\000"
 10878      7369676E 
 10878      00
 10879              	.LASF207:
 10880 0502 6D6F746F 		.ascii	"motor_control_generic\000"
 10880      725F636F 
 10880      6E74726F 
 10880      6C5F6765 
 10880      6E657269 
 10881              	.LASF323:
 10882 0518 675F696D 		.ascii	"g_imu\000"
 10882      7500
 10883              	.LASF289:
 10884 051e 66696C74 		.ascii	"filt_vel\000"
 10884      5F76656C 
 10884      00
 10885              	.LASF97:
 10886 0527 70776D5F 		.ascii	"pwm_rate_limiter\000"
 10886      72617465 
 10886      5F6C696D 
 10886      69746572 
 10886      00
 10887              	.LASF77:
 10888 0538 6B5F645F 		.ascii	"k_d_c\000"
 10888      6300
 10889              	.LASF168:
 10890 053e 6164635F 		.ascii	"adc_status\000"
 10890      73746174 
 10890      757300
 10891              	.LASF102:
 10892 0549 6D5F6D75 		.ascii	"m_mult\000"
 10892      6C7400
 10893              	.LASF76:
 10894 0550 6B5F695F 		.ascii	"k_i_c\000"
 10894      6300
 10895              	.LASF86:
 10896 0556 6D6F746F 		.ascii	"motor_pwm_frequency\000"
 10896      725F7077 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 235


 10896      6D5F6672 
 10896      65717565 
 10896      6E637900 
 10897              	.LASF253:
 10898 056a 62696E5F 		.ascii	"bin_st\000"
 10898      737400
 10899              	.LASF175:
 10900 0571 4953525F 		.ascii	"ISR_RS485_RX_ExInterrupt\000"
 10900      52533438 
 10900      355F5258 
 10900      5F457849 
 10900      6E746572 
 10901              	.LASF89:
 10902 058a 706F735F 		.ascii	"pos_lim_sup\000"
 10902      6C696D5F 
 10902      73757000 
 10903              	.LASF160:
 10904 0596 6F6C645F 		.ascii	"old_value\000"
 10904      76616C75 
 10904      6500
 10905              	.LASF110:
 10906 05a0 656D675F 		.ascii	"emg_speed\000"
 10906      73706565 
 10906      6400
 10907              	.LASF129:
 10908 05aa 72657374 		.ascii	"rest_vel\000"
 10908      5F76656C 
 10908      00
 10909              	.LASF162:
 10910 05b3 4E4F524D 		.ascii	"NORMAL\000"
 10910      414C00
 10911              	.LASF321:
 10912 05ba 7046696C 		.ascii	"pFile\000"
 10912      6500
 10913              	.LASF121:
 10914 05c0 4144435F 		.ascii	"ADC_conf\000"
 10914      636F6E66 
 10914      00
 10915              	.LASF296:
 10916 05c9 6465765F 		.ascii	"dev_tension_f\000"
 10916      74656E73 
 10916      696F6E5F 
 10916      6600
 10917              	.LASF79:
 10918 05d7 6B5F695F 		.ascii	"k_i_dl\000"
 10918      646C00
 10919              	.LASF50:
 10920 05de 62756666 		.ascii	"buffer\000"
 10920      657200
 10921              	.LASF81:
 10922 05e5 6B5F705F 		.ascii	"k_p_c_dl\000"
 10922      635F646C 
 10922      00
 10923              	.LASF183:
 10924 05ee 72785F64 		.ascii	"rx_data_type\000"
 10924      6174615F 
 10924      74797065 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 236


 10924      00
 10925              	.LASF324:
 10926 05fb 675F696D 		.ascii	"g_imuNew\000"
 10926      754E6577 
 10926      00
 10927              	.LASF284:
 10928 0604 675F6D65 		.ascii	"g_mem\000"
 10928      6D00
 10929              	.LASF262:
 10930 060a 74696D65 		.ascii	"timer_value_e\000"
 10930      725F7661 
 10930      6C75655F 
 10930      6500
 10931              	.LASF178:
 10932 0618 64617461 		.ascii	"data_packet_index\000"
 10932      5F706163 
 10932      6B65745F 
 10932      696E6465 
 10932      7800
 10933              	.LASF180:
 10934 062a 64617461 		.ascii	"data_packet_buffer\000"
 10934      5F706163 
 10934      6B65745F 
 10934      62756666 
 10934      657200
 10935              	.LASF193:
 10936 063d 73745F72 		.ascii	"st_ref_p\000"
 10936      65665F70 
 10936      00
 10937              	.LASF299:
 10938 0646 6379636C 		.ascii	"cycles_status\000"
 10938      65735F73 
 10938      74617475 
 10938      7300
 10939              	.LASF279:
 10940 0654 675F6D65 		.ascii	"g_meas\000"
 10940      617300
 10941              	.LASF261:
 10942 065b 74696D65 		.ascii	"timer_value_s\000"
 10942      725F7661 
 10942      6C75655F 
 10942      7300
 10943              	.LASF318:
 10944 0669 456E636F 		.ascii	"Encoder_Check\000"
 10944      6465725F 
 10944      43686563 
 10944      6B00
 10945              	.LASF221:
 10946 0677 636F6D70 		.ascii	"comp_value_encoder\000"
 10946      5F76616C 
 10946      75655F65 
 10946      6E636F64 
 10946      657200
 10947              	.LASF265:
 10948 068a 73746172 		.ascii	"start_emg_pos\000"
 10948      745F656D 
 10948      675F706F 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 237


 10948      7300
 10949              	.LASF315:
 10950 0698 64617461 		.ascii	"data_encoder_raw\000"
 10950      5F656E63 
 10950      6F646572 
 10950      5F726177 
 10950      00
 10951              	.LASF276:
 10952 06a9 675F7265 		.ascii	"g_ref\000"
 10952      6600
 10953              	.LASF25:
 10954 06af 494E5055 		.ascii	"INPUT_MODE_EXTERNAL\000"
 10954      545F4D4F 
 10954      44455F45 
 10954      58544552 
 10954      4E414C00 
 10955              	.LASF212:
 10956 06c3 696E6465 		.ascii	"index\000"
 10956      7800
 10957              	.LASF140:
 10958 06c9 6D617869 		.ascii	"maximum_pressure_kPa\000"
 10958      6D756D5F 
 10958      70726573 
 10958      73757265 
 10958      5F6B5061 
 10959              	.LASF130:
 10960 06de 72657374 		.ascii	"rest_position_flag\000"
 10960      5F706F73 
 10960      6974696F 
 10960      6E5F666C 
 10960      616700
 10961              	.LASF132:
 10962 06f1 6A6F7973 		.ascii	"joystick_closure_speed\000"
 10962      7469636B 
 10962      5F636C6F 
 10962      73757265 
 10962      5F737065 
 10963              	.LASF82:
 10964 0708 6B5F695F 		.ascii	"k_i_c_dl\000"
 10964      635F646C 
 10964      00
 10965              	.LASF184:
 10966 0711 7061636B 		.ascii	"package_count\000"
 10966      6167655F 
 10966      636F756E 
 10966      7400
 10967              	.LASF38:
 10968 071f 43555252 		.ascii	"CURR_AND_POS_CONTROL\000"
 10968      5F414E44 
 10968      5F504F53 
 10968      5F434F4E 
 10968      54524F4C 
 10969              	.LASF5:
 10970 0734 6C6F6E67 		.ascii	"long unsigned int\000"
 10970      20756E73 
 10970      69676E65 
 10970      6420696E 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 238


 10970      7400
 10971              	.LASF322:
 10972 0746 70454D47 		.ascii	"pEMGHFile\000"
 10972      4846696C 
 10972      6500
 10973              	.LASF170:
 10974 0750 57524954 		.ascii	"WRITE_CYCLES\000"
 10974      455F4359 
 10974      434C4553 
 10974      00
 10975              	.LASF134:
 10976 075d 6A6F7973 		.ascii	"joystick_gains\000"
 10976      7469636B 
 10976      5F676169 
 10976      6E7300
 10977              	.LASF45:
 10978 076c 686F6C64 		.ascii	"hold_curr\000"
 10978      5F637572 
 10978      7200
 10979              	.LASF31:
 10980 0776 494E5055 		.ascii	"INPUT_MODE_JOYSTICK\000"
 10980      545F4D4F 
 10980      44455F4A 
 10980      4F595354 
 10980      49434B00 
 10981              	.LASF60:
 10982 078a 746F7461 		.ascii	"total_time_rest\000"
 10982      6C5F7469 
 10982      6D655F72 
 10982      65737400 
 10983              	.LASF84:
 10984 079a 61637469 		.ascii	"activ\000"
 10984      7600
 10985              	.LASF311:
 10986 07a0 62617474 		.ascii	"battery_low_SoC\000"
 10986      6572795F 
 10986      6C6F775F 
 10986      536F4300 
 10987              	.LASF192:
 10988 07b0 6D6F746F 		.ascii	"motor_idx\000"
 10988      725F6964 
 10988      7800
 10989              	.LASF101:
 10990 07ba 6D5F6F66 		.ascii	"m_off\000"
 10990      6600
 10991              	.LASF304:
 10992 07c0 72657365 		.ascii	"reset_last_value_flag\000"
 10992      745F6C61 
 10992      73745F76 
 10992      616C7565 
 10992      5F666C61 
 10993              	.LASF157:
 10994 07d6 71756174 		.ascii	"quat_value\000"
 10994      5F76616C 
 10994      756500
 10995              	.LASF127:
 10996 07e1 72657374 		.ascii	"rest_pos\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 239


 10996      5F706F73 
 10996      00
 10997              	.LASF40:
 10998 07ea 63757272 		.ascii	"curr\000"
 10998      00
 10999              	.LASF171:
 11000 07ef 57414954 		.ascii	"WAIT_QUERY\000"
 11000      5F515545 
 11000      525900
 11001              	.LASF94:
 11002 07fa 696E7075 		.ascii	"input_mode\000"
 11002      745F6D6F 
 11002      646500
 11003              	.LASF36:
 11004 0805 434F4E54 		.ascii	"CONTROL_PWM\000"
 11004      524F4C5F 
 11004      50574D00 
 11005              	.LASF243:
 11006 0811 6379636C 		.ascii	"cycles_counter_update\000"
 11006      65735F63 
 11006      6F756E74 
 11006      65725F75 
 11006      70646174 
 11007              	.LASF325:
 11008 0827 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 11008      43313120 
 11008      352E342E 
 11008      31203230 
 11008      31363036 
 11009 085a 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 11009      20726576 
 11009      6973696F 
 11009      6E203233 
 11009      37373135 
 11010 088d 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 11010      66756E63 
 11010      74696F6E 
 11010      2D736563 
 11010      74696F6E 
 11011              	.LASF42:
 11012 08b5 73745F72 		.ascii	"st_ref\000"
 11012      656600
 11013              	.LASF126:
 11014 08bc 73745F53 		.ascii	"st_SH_spec\000"
 11014      485F7370 
 11014      656300
 11015              	.LASF227:
 11016 08c7 765F7661 		.ascii	"v_value\000"
 11016      6C756500 
 11017              	.LASF138:
 11018 08cf 73745F46 		.ascii	"st_FB_spec\000"
 11018      425F7370 
 11018      656300
 11019              	.LASF6:
 11020 08da 6C6F6E67 		.ascii	"long long int\000"
 11020      206C6F6E 
 11020      6720696E 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 240


 11020      7400
 11021              	.LASF34:
 11022 08e8 53485F63 		.ascii	"SH_control_mode\000"
 11022      6F6E7472 
 11022      6F6C5F6D 
 11022      6F646500 
 11023              	.LASF188:
 11024 08f8 5345434F 		.ascii	"SECOND_MOTOR_IDX\000"
 11024      4E445F4D 
 11024      4F544F52 
 11024      5F494458 
 11024      00
 11025              	.LASF19:
 11026 0909 646F7562 		.ascii	"double\000"
 11026      6C6500
 11027              	.LASF287:
 11028 0910 66696C74 		.ascii	"filt_curr_diff\000"
 11028      5F637572 
 11028      725F6469 
 11028      666600
 11029              	.LASF204:
 11030 091f 706F735F 		.ascii	"pos_sum\000"
 11030      73756D00 
 11031              	.LASF230:
 11032 0927 696E7465 		.ascii	"interrupt_manager\000"
 11032      72727570 
 11032      745F6D61 
 11032      6E616765 
 11032      7200
 11033              	.LASF100:
 11034 0939 456E635F 		.ascii	"Enc_raw_read_conf\000"
 11034      7261775F 
 11034      72656164 
 11034      5F636F6E 
 11034      6600
 11035              	.LASF205:
 11036 094b 636F6D70 		.ascii	"compute_SoftHand_2_motors_emg_reference\000"
 11036      7574655F 
 11036      536F6674 
 11036      48616E64 
 11036      5F325F6D 
 11037              	.LASF90:
 11038 0973 6D61785F 		.ascii	"max_step_neg\000"
 11038      73746570 
 11038      5F6E6567 
 11038      00
 11039              	.LASF226:
 11040 0980 636F756E 		.ascii	"count_startup_motor\000"
 11040      745F7374 
 11040      61727475 
 11040      705F6D6F 
 11040      746F7200 
 11041              	.LASF137:
 11042 0994 736C6176 		.ascii	"slave_ID\000"
 11042      655F4944 
 11042      00
 11043              	.LASF166:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 241


 11044 099d 57414954 		.ascii	"WAIT\000"
 11044      00
 11045              	.LASF18:
 11046 09a2 666C6F61 		.ascii	"float\000"
 11046      7400
 11047              	.LASF116:
 11048 09a8 494D555F 		.ascii	"IMU_conf\000"
 11048      636F6E66 
 11048      00
 11049              	.LASF327:
 11050 09b1 433A5C55 		.ascii	"C:\\Users\\mgnocco\\OneDrive - Fondazione Istituto "
 11050      73657273 
 11050      5C6D676E 
 11050      6F63636F 
 11050      5C4F6E65 
 11051 09e1 4974616C 		.ascii	"Italiano Tecnologia\\Firmware\\Psoc5\\Electrostimul"
 11051      69616E6F 
 11051      20546563 
 11051      6E6F6C6F 
 11051      6769615C 
 11052 0a11 6174696F 		.ascii	"ation\\Electrostimulation.cydsn\000"
 11052      6E5C456C 
 11052      65637472 
 11052      6F737469 
 11052      6D756C61 
 11053              	.LASF241:
 11054 0a30 636F756E 		.ascii	"count\000"
 11054      7400
 11055              	.LASF46:
 11056 0a36 73745F61 		.ascii	"st_adc_meas\000"
 11056      64635F6D 
 11056      65617300 
 11057              	.LASF247:
 11058 0a42 656D675F 		.ascii	"emg_excess_status\000"
 11058      65786365 
 11058      73735F73 
 11058      74617475 
 11058      7300
 11059              	.LASF273:
 11060 0a54 6D5F6164 		.ascii	"m_addr\000"
 11060      647200
 11061              	.LASF285:
 11062 0a5b 635F6D65 		.ascii	"c_mem\000"
 11062      6D00
 11063              	.LASF8:
 11064 0a61 756E7369 		.ascii	"unsigned int\000"
 11064      676E6564 
 11064      20696E74 
 11064      00
 11065              	.LASF252:
 11066 0a6e 6D61785F 		.ascii	"max_pos\000"
 11066      706F7300 
 11067              	.LASF320:
 11068 0a76 72657374 		.ascii	"rest_pos_curr_ref\000"
 11068      5F706F73 
 11068      5F637572 
 11068      725F7265 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 242


 11068      6600
 11069              	.LASF147:
 11070 0a88 666C6167 		.ascii	"flag\000"
 11070      00
 11071              	.LASF95:
 11072 0a8d 636F6E74 		.ascii	"control_mode\000"
 11072      726F6C5F 
 11072      6D6F6465 
 11072      00
 11073              	.LASF21:
 11074 0a9a 63797374 		.ascii	"cystatus\000"
 11074      61747573 
 11074      00
 11075              	.LASF26:
 11076 0aa3 494E5055 		.ascii	"INPUT_MODE_ENCODER3\000"
 11076      545F4D4F 
 11076      44455F45 
 11076      4E434F44 
 11076      45523300 
 11077              	.LASF113:
 11078 0ab7 73745F69 		.ascii	"st_imu\000"
 11078      6D7500
 11079              	.LASF199:
 11080 0abe 63757272 		.ascii	"current_emg\000"
 11080      656E745F 
 11080      656D6700 
 11081              	.LASF181:
 11082 0aca 72785F71 		.ascii	"rx_queue\000"
 11082      75657565 
 11082      00
 11083              	.LASF237:
 11084 0ad3 55445F6D 		.ascii	"UD_mean_value\000"
 11084      65616E5F 
 11084      76616C75 
 11084      6500
 11085              	.LASF211:
 11086 0ae1 6173736F 		.ascii	"assoc_motor\000"
 11086      635F6D6F 
 11086      746F7200 
 11087              	.LASF47:
 11088 0aed 6164645F 		.ascii	"add_emg\000"
 11088      656D6700 
 11089              	.LASF108:
 11090 0af5 656D675F 		.ascii	"emg_threshold\000"
 11090      74687265 
 11090      73686F6C 
 11090      6400
 11091              	.LASF266:
 11092 0b03 73617665 		.ascii	"save_cycles_eeprom\000"
 11092      5F637963 
 11092      6C65735F 
 11092      65657072 
 11092      6F6D00
 11093              	.LASF105:
 11094 0b16 6D6F746F 		.ascii	"motor_handle_ratio\000"
 11094      725F6861 
 11094      6E646C65 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 243


 11094      5F726174 
 11094      696F00
 11095              	.LASF56:
 11096 0b29 63757272 		.ascii	"current_hist\000"
 11096      656E745F 
 11096      68697374 
 11096      00
 11097              	.LASF37:
 11098 0b36 434F4E54 		.ascii	"CONTROL_CURRENT\000"
 11098      524F4C5F 
 11098      43555252 
 11098      454E5400 
 11099              	.LASF23:
 11100 0b46 6C6F6E67 		.ascii	"long double\000"
 11100      20646F75 
 11100      626C6500 
 11101              	.LASF164:
 11102 0b52 44495343 		.ascii	"DISCARD\000"
 11102      41524400 
 11103              	.LASF219:
 11104 0b5a 696E6974 		.ascii	"init_rot\000"
 11104      5F726F74 
 11104      00
 11105              	.LASF288:
 11106 0b63 66696C74 		.ascii	"filt_i\000"
 11106      5F6900
 11107              	.LASF63:
 11108 0b6a 6D6F7469 		.ascii	"motion_counter\000"
 11108      6F6E5F63 
 11108      6F756E74 
 11108      657200
 11109              	.LASF286:
 11110 0b79 66696C74 		.ascii	"filt_v\000"
 11110      5F7600
 11111              	.LASF309:
 11112 0b80 72657374 		.ascii	"rest_enabled\000"
 11112      5F656E61 
 11112      626C6564 
 11112      00
 11113              	.LASF278:
 11114 0b8d 675F7265 		.ascii	"g_refOld\000"
 11114      664F6C64 
 11114      00
 11115              	.LASF155:
 11116 0b96 6779726F 		.ascii	"gyro_value\000"
 11116      5F76616C 
 11116      756500
 11117              	.LASF118:
 11118 0ba1 63757272 		.ascii	"curr_time\000"
 11118      5F74696D 
 11118      6500
 11119              	.LASF103:
 11120 0bab 646F7562 		.ascii	"double_encoder_on_off\000"
 11120      6C655F65 
 11120      6E636F64 
 11120      65725F6F 
 11120      6E5F6F66 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 244


 11121              	.LASF187:
 11122 0bc1 4D4F544F 		.ascii	"MOTOR_IDX\000"
 11122      525F4944 
 11122      5800
 11123              	.LASF220:
 11124 0bcb 6C617374 		.ascii	"last_value_encoder\000"
 11124      5F76616C 
 11124      75655F65 
 11124      6E636F64 
 11124      657200
 11125              	.LASF185:
 11126 0bde 636F756E 		.ascii	"counter_tension_func\000"
 11126      7465725F 
 11126      74656E73 
 11126      696F6E5F 
 11126      66756E63 
 11127              	.LASF294:
 11128 0bf3 6379636C 		.ascii	"cycle_time\000"
 11128      655F7469 
 11128      6D6500
 11129              	.LASF206:
 11130 0bfe 66736D5F 		.ascii	"fsm_state\000"
 11130      73746174 
 11130      6500
 11131              	.LASF7:
 11132 0c08 6C6F6E67 		.ascii	"long long unsigned int\000"
 11132      206C6F6E 
 11132      6720756E 
 11132      7369676E 
 11132      65642069 
 11133              	.LASF298:
 11134 0c1f 64657465 		.ascii	"detect_power_cycle\000"
 11134      63745F70 
 11134      6F776572 
 11134      5F637963 
 11134      6C6500
 11135              	.LASF302:
 11136 0c32 6A6F795F 		.ascii	"joy_UD_status\000"
 11136      55445F73 
 11136      74617475 
 11136      7300
 11137              	.LASF246:
 11138 0c40 6D6F7469 		.ascii	"motion_status\000"
 11138      6F6E5F73 
 11138      74617475 
 11138      7300
 11139              	.LASF51:
 11140 0c4e 6C656E67 		.ascii	"length\000"
 11140      746800
 11141              	.LASF152:
 11142 0c55 73745F69 		.ascii	"st_imu_data\000"
 11142      6D755F64 
 11142      61746100 
 11143              	.LASF156:
 11144 0c61 6D61675F 		.ascii	"mag_value\000"
 11144      76616C75 
 11144      6500
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 245


 11145              	.LASF41:
 11146 0c6b 6F6E6F66 		.ascii	"onoff\000"
 11146      6600
 11147              	.LASF215:
 11148 0c71 746D705F 		.ascii	"tmp_value_encoder_32\000"
 11148      76616C75 
 11148      655F656E 
 11148      636F6465 
 11148      725F3332 
 11149              	.LASF293:
 11150 0c86 74696D65 		.ascii	"timer_value0\000"
 11150      725F7661 
 11150      6C756530 
 11150      00
 11151              	.LASF179:
 11152 0c93 64617461 		.ascii	"data_packet_length\000"
 11152      5F706163 
 11152      6B65745F 
 11152      6C656E67 
 11152      746800
 11153              	.LASF75:
 11154 0ca6 6B5F705F 		.ascii	"k_p_c\000"
 11154      6300
 11155              	.LASF295:
 11156 0cac 6465765F 		.ascii	"dev_tension\000"
 11156      74656E73 
 11156      696F6E00 
 11157              	.LASF167:
 11158 0cb8 57414954 		.ascii	"WAIT_EoC\000"
 11158      5F456F43 
 11158      00
 11159              	.LASF22:
 11160 0cc1 72656738 		.ascii	"reg8\000"
 11160      00
 11161              	.LASF255:
 11162 0cc6 62696E5F 		.ascii	"bin_1\000"
 11162      3100
 11163              	.LASF256:
 11164 0ccc 62696E5F 		.ascii	"bin_2\000"
 11164      3200
 11165              	.LASF232:
 11166 0cd2 695F6175 		.ascii	"i_aux\000"
 11166      7800
 11167              	.LASF141:
 11168 0cd8 70726F70 		.ascii	"prop_err_fb_gain\000"
 11168      5F657272 
 11168      5F66625F 
 11168      6761696E 
 11168      00
 11169              	.LASF203:
 11170 0ce9 706F735F 		.ascii	"pos_diff\000"
 11170      64696666 
 11170      00
 11171              	.LASF268:
 11172 0cf2 726F775F 		.ascii	"row_number\000"
 11172      6E756D62 
 11172      657200
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 246


 11173              	.LASF257:
 11174 0cfd 63757272 		.ascii	"curr_pos\000"
 11174      5F706F73 
 11174      00
 11175              	.LASF163:
 11176 0d06 52455345 		.ascii	"RESET\000"
 11176      5400
 11177              	.LASF136:
 11178 0d0c 736C6176 		.ascii	"slave_comm_active\000"
 11178      655F636F 
 11178      6D6D5F61 
 11178      63746976 
 11178      6500
 11179              	.LASF231:
 11180 0d1e 616E616C 		.ascii	"analog_read_end\000"
 11180      6F675F72 
 11180      6561645F 
 11180      656E6400 
 11181              	.LASF316:
 11182 0d2e 4E5F456E 		.ascii	"N_Encoder_Line_Connected\000"
 11182      636F6465 
 11182      725F4C69 
 11182      6E655F43 
 11182      6F6E6E65 
 11183              	.LASF73:
 11184 0d47 6465765F 		.ascii	"dev_type\000"
 11184      74797065 
 11184      00
 11185              	.LASF245:
 11186 0d50 656D675F 		.ascii	"emg_cycle_status\000"
 11186      6379636C 
 11186      655F7374 
 11186      61747573 
 11186      00
 11187              	.LASF123:
 11188 0d61 73745F75 		.ascii	"st_user\000"
 11188      73657200 
 11189              	.LASF106:
 11190 0d69 67656172 		.ascii	"gears_params\000"
 11190      735F7061 
 11190      72616D73 
 11190      00
 11191              	.LASF117:
 11192 0d76 73745F65 		.ascii	"st_expansion\000"
 11192      7870616E 
 11192      73696F6E 
 11192      00
 11193              	.LASF111:
 11194 0d83 656D675F 		.ascii	"emg_calibration_flag\000"
 11194      63616C69 
 11194      62726174 
 11194      696F6E5F 
 11194      666C6167 
 11195              	.LASF43:
 11196 0d98 73745F6D 		.ascii	"st_meas\000"
 11196      65617300 
 11197              	.LASF270:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 247


 11198 0da0 61646472 		.ascii	"addr_start\000"
 11198      5F737461 
 11198      727400
 11199              	.LASF274:
 11200 0dab 70776D5F 		.ascii	"pwm_preload_values\000"
 11200      7072656C 
 11200      6F61645F 
 11200      76616C75 
 11200      657300
 11201              	.LASF133:
 11202 0dbe 6A6F7973 		.ascii	"joystick_threshold\000"
 11202      7469636B 
 11202      5F746872 
 11202      6573686F 
 11202      6C6400
 11203              	.LASF32:
 11204 0dd1 494E5055 		.ascii	"INPUT_MODE_EMG_PROPORTIONAL_NC\000"
 11204      545F4D4F 
 11204      44455F45 
 11204      4D475F50 
 11204      524F504F 
 11205              	.LASF174:
 11206 0df0 636F756E 		.ascii	"counter_status\000"
 11206      7465725F 
 11206      73746174 
 11206      757300
 11207              	.LASF233:
 11208 0dff 656D675F 		.ascii	"emg_counter_1\000"
 11208      636F756E 
 11208      7465725F 
 11208      3100
 11209              	.LASF234:
 11210 0e0d 656D675F 		.ascii	"emg_counter_2\000"
 11210      636F756E 
 11210      7465725F 
 11210      3200
 11211              	.LASF223:
 11212 0e1b 6F6E6C79 		.ascii	"only_first_time\000"
 11212      5F666972 
 11212      73745F74 
 11212      696D6500 
 11213              	.LASF11:
 11214 0e2b 75696E74 		.ascii	"uint8\000"
 11214      3800
 11215              	.LASF131:
 11216 0e31 73745F4A 		.ascii	"st_JOY_spec\000"
 11216      4F595F73 
 11216      70656300 
 11217              	.LASF218:
 11218 0e3d 76616C75 		.ascii	"value_diff\000"
 11218      655F6469 
 11218      666600
 11219              	.LASF259:
 11220 0e48 63757272 		.ascii	"curr_ref\000"
 11220      5F726566 
 11220      00
 11221              	.LASF2:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 248


 11222 0e51 73686F72 		.ascii	"short int\000"
 11222      7420696E 
 11222      7400
 11223              	.LASF80:
 11224 0e5b 6B5F645F 		.ascii	"k_d_dl\000"
 11224      646C00
 11225              	.LASF216:
 11226 0e62 76616C75 		.ascii	"value_encoder\000"
 11226      655F656E 
 11226      636F6465 
 11226      7200
 11227              	.LASF48:
 11228 0e70 6A6F7973 		.ascii	"joystick\000"
 11228      7469636B 
 11228      00
 11229              	.LASF149:
 11230 0e79 6D6F746F 		.ascii	"motor\000"
 11230      7200
 11231              	.LASF66:
 11232 0e7f 68775F6D 		.ascii	"hw_maint_date\000"
 11232      61696E74 
 11232      5F646174 
 11232      6500
 11233              	.LASF190:
 11234 0e8d 66756E63 		.ascii	"function_scheduler\000"
 11234      74696F6E 
 11234      5F736368 
 11234      6564756C 
 11234      657200
 11235              	.LASF191:
 11236 0ea0 636F6D70 		.ascii	"compute_reference\000"
 11236      7574655F 
 11236      72656665 
 11236      72656E63 
 11236      6500
 11237              	.LASF67:
 11238 0eb2 73746174 		.ascii	"stats_period_begin_date\000"
 11238      735F7065 
 11238      72696F64 
 11238      5F626567 
 11238      696E5F64 
 11239              	.LASF264:
 11240 0eca 74696D65 		.ascii	"timer_exc_e\000"
 11240      725F6578 
 11240      635F6500 
 11241              	.LASF275:
 11242 0ed6 49544D5F 		.ascii	"ITM_RxBuffer\000"
 11242      52784275 
 11242      66666572 
 11242      00
 11243              	.LASF297:
 11244 0ee3 706F775F 		.ascii	"pow_tension\000"
 11244      74656E73 
 11244      696F6E00 
 11245              	.LASF263:
 11246 0eef 74696D65 		.ascii	"timer_exc_s\000"
 11246      725F6578 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 249


 11246      635F7300 
 11247              	.LASF15:
 11248 0efb 696E7431 		.ascii	"int16\000"
 11248      3600
 11249              	.LASF119:
 11250 0f01 72656164 		.ascii	"read_exp_port_flag\000"
 11250      5F657870 
 11250      5F706F72 
 11250      745F666C 
 11250      616700
 11251              	.LASF250:
 11252 0f14 6578635F 		.ascii	"exc_act_thr\000"
 11252      6163745F 
 11252      74687200 
 11253              	.LASF85:
 11254 0f20 61637469 		.ascii	"activate_pwm_rescaling\000"
 11254      76617465 
 11254      5F70776D 
 11254      5F726573 
 11254      63616C69 
 11255              	.LASF78:
 11256 0f37 6B5F705F 		.ascii	"k_p_dl\000"
 11256      646C00
 11257              	.LASF44:
 11258 0f3e 65737469 		.ascii	"estim_curr\000"
 11258      6D5F6375 
 11258      727200
 11259              	.LASF267:
 11260 0f49 73746174 		.ascii	"status\000"
 11260      757300
 11261              	.LASF317:
 11262 0f50 456E636F 		.ascii	"Encoder_Value\000"
 11262      6465725F 
 11262      56616C75 
 11262      6500
 11263              	.LASF72:
 11264 0f5e 75736572 		.ascii	"user_id\000"
 11264      5F696400 
 11265              	.LASF248:
 11266 0f66 72657374 		.ascii	"rest_cycle_status\000"
 11266      5F637963 
 11266      6C655F73 
 11266      74617475 
 11266      7300
 11267              	.LASF201:
 11268 0f78 636F6D70 		.ascii	"compute_SoftHand_2_motors_joystick_reference\000"
 11268      7574655F 
 11268      536F6674 
 11268      48616E64 
 11268      5F325F6D 
 11269              	.LASF214:
 11270 0fa5 746D705F 		.ascii	"tmp_value_encoder\000"
 11270      76616C75 
 11270      655F656E 
 11270      636F6465 
 11270      7200
 11271              	.LASF176:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 250


 11272 0fb7 4953525F 		.ascii	"ISR_CYCLES_Handler\000"
 11272      4359434C 
 11272      45535F48 
 11272      616E646C 
 11272      657200
 11273              	.LASF71:
 11274 0fca 62617564 		.ascii	"baud_rate\000"
 11274      5F726174 
 11274      6500
 11275              	.LASF144:
 11276 0fd4 66617374 		.ascii	"fast_act_threshold\000"
 11276      5F616374 
 11276      5F746872 
 11276      6573686F 
 11276      6C6400
 11277              	.LASF115:
 11278 0fe7 5350495F 		.ascii	"SPI_read_delay\000"
 11278      72656164 
 11278      5F64656C 
 11278      617900
 11279              	.LASF3:
 11280 0ff6 73686F72 		.ascii	"short unsigned int\000"
 11280      7420756E 
 11280      7369676E 
 11280      65642069 
 11280      6E7400
 11281              	.LASF99:
 11282 1009 73745F65 		.ascii	"st_encoder\000"
 11282      6E636F64 
 11282      657200
 11283              	.LASF281:
 11284 1014 675F6164 		.ascii	"g_adc_meas\000"
 11284      635F6D65 
 11284      617300
 11285              	.LASF139:
 11286 101f 6D61785F 		.ascii	"max_residual_current\000"
 11286      72657369 
 11286      6475616C 
 11286      5F637572 
 11286      72656E74 
 11287              	.LASF198:
 11288 1034 454E435F 		.ascii	"ENC_L\000"
 11288      4C00
 11289              	.LASF146:
 11290 103a 73745F65 		.ascii	"st_eeprom\000"
 11290      6570726F 
 11290      6D00
 11291              	.LASF303:
 11292 1044 6A6F795F 		.ascii	"joy_LR_status\000"
 11292      4C525F73 
 11292      74617475 
 11292      7300
 11293              	.LASF326:
 11294 1052 2E2E5C73 		.ascii	"..\\src\\interruptions.c\000"
 11294      72635C69 
 11294      6E746572 
 11294      72757074 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 251


 11294      696F6E73 
 11295              	.LASF194:
 11296 1069 73745F72 		.ascii	"st_refOld_p\000"
 11296      65664F6C 
 11296      645F7000 
 11297              	.LASF16:
 11298 1075 696E7433 		.ascii	"int32\000"
 11298      3200
 11299              	.LASF313:
 11300 107b 4E554D5F 		.ascii	"NUM_OF_ANALOG_INPUTS\000"
 11300      4F465F41 
 11300      4E414C4F 
 11300      475F494E 
 11300      50555453 
 11301              	.LASF74:
 11302 1090 73745F6D 		.ascii	"st_motor\000"
 11302      6F746F72 
 11302      00
 11303              	.LASF39:
 11304 1099 46535F46 		.ascii	"FS_FILE\000"
 11304      494C4500 
 11305              	.LASF87:
 11306 10a1 706F735F 		.ascii	"pos_lim_flag\000"
 11306      6C696D5F 
 11306      666C6167 
 11306      00
 11307              	.LASF238:
 11308 10ae 4C525F6D 		.ascii	"LR_mean_value\000"
 11308      65616E5F 
 11308      76616C75 
 11308      6500
 11309              	.LASF280:
 11310 10bc 675F6D65 		.ascii	"g_measOld\000"
 11310      61734F6C 
 11310      6400
 11311              	.LASF272:
 11312 10c6 726F775F 		.ascii	"row_end\000"
 11312      656E6400 
 11313              	.LASF35:
 11314 10ce 434F4E54 		.ascii	"CONTROL_ANGLE\000"
 11314      524F4C5F 
 11314      414E474C 
 11314      4500
 11315              	.LASF9:
 11316 10dc 5F5F696E 		.ascii	"__int32_t\000"
 11316      7433325F 
 11316      7400
 11317              	.LASF58:
 11318 10e6 77697265 		.ascii	"wire_disp\000"
 11318      5F646973 
 11318      7000
 11319              	.LASF308:
 11320 10f0 63616E5F 		.ascii	"can_write\000"
 11320      77726974 
 11320      6500
 11321              	.LASF109:
 11322 10fa 656D675F 		.ascii	"emg_max_value\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc0KVeSv.s 			page 252


 11322      6D61785F 
 11322      76616C75 
 11322      6500
 11323              	.LASF93:
 11324 1108 63757272 		.ascii	"current_limit\000"
 11324      656E745F 
 11324      6C696D69 
 11324      7400
 11325              	.LASF33:
 11326 1116 53485F69 		.ascii	"SH_input_mode\000"
 11326      6E707574 
 11326      5F6D6F64 
 11326      6500
 11327              	.LASF173:
 11328 1124 4E4F4E45 		.ascii	"NONE\000"
 11328      00
 11329              	.LASF143:
 11330 1129 61637469 		.ascii	"activation_mode\000"
 11330      76617469 
 11330      6F6E5F6D 
 11330      6F646500 
 11331              	.LASF12:
 11332 1139 75696E74 		.ascii	"uint16\000"
 11332      313600
 11333              	.LASF128:
 11334 1140 72657374 		.ascii	"rest_delay\000"
 11334      5F64656C 
 11334      617900
 11335              	.LASF159:
 11336 114b 73745F66 		.ascii	"st_filter\000"
 11336      696C7465 
 11336      7200
 11337              	.LASF228:
 11338 1155 76765F76 		.ascii	"vv_value\000"
 11338      616C7565 
 11338      00
 11339              	.LASF83:
 11340 115e 6B5F645F 		.ascii	"k_d_c_dl\000"
 11340      635F646C 
 11340      00
 11341              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
