ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"command_processing.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	EEPROM_ADDR
  20              		.data
  21              		.align	2
  22              		.type	EEPROM_ADDR, %object
  23              		.size	EEPROM_ADDR, 4
  24              	EEPROM_ADDR:
  25 0000 00800040 		.word	1073774592
  26              		.section	.text.commProcess,"ax",%progbits
  27              		.align	2
  28              		.global	commProcess
  29              		.thumb
  30              		.thumb_func
  31              		.type	commProcess, %function
  32              	commProcess:
  33              	.LFB64:
  34              		.file 1 "..\\src\\command_processing.c"
   1:..\src/command_processing.c **** // ----------------------------------------------------------------------------
   2:..\src/command_processing.c **** // BSD 3-Clause License
   3:..\src/command_processing.c **** 
   4:..\src/command_processing.c **** // Copyright (c) 2016, qbrobotics
   5:..\src/command_processing.c **** // Copyright (c) 2017-2020, Centro "E.Piaggio"
   6:..\src/command_processing.c **** // All rights reserved.
   7:..\src/command_processing.c **** 
   8:..\src/command_processing.c **** // Redistribution and use in source and binary forms, with or without
   9:..\src/command_processing.c **** // modification, are permitted provided that the following conditions are met:
  10:..\src/command_processing.c **** 
  11:..\src/command_processing.c **** // * Redistributions of source code must retain the above copyright notice, this
  12:..\src/command_processing.c **** //   list of conditions and the following disclaimer.
  13:..\src/command_processing.c **** 
  14:..\src/command_processing.c **** // * Redistributions in binary form must reproduce the above copyright notice,
  15:..\src/command_processing.c **** //   this list of conditions and the following disclaimer in the documentation
  16:..\src/command_processing.c **** //   and/or other materials provided with the distribution.
  17:..\src/command_processing.c **** 
  18:..\src/command_processing.c **** // * Neither the name of the copyright holder nor the names of its
  19:..\src/command_processing.c **** //   contributors may be used to endorse or promote products derived from
  20:..\src/command_processing.c **** //   this software without specific prior written permission.
  21:..\src/command_processing.c **** 
  22:..\src/command_processing.c **** // THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  23:..\src/command_processing.c **** // AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 2


  24:..\src/command_processing.c **** // IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  25:..\src/command_processing.c **** // DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  26:..\src/command_processing.c **** // FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  27:..\src/command_processing.c **** // DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  28:..\src/command_processing.c **** // SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:..\src/command_processing.c **** // CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  30:..\src/command_processing.c **** // OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  31:..\src/command_processing.c **** // OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  32:..\src/command_processing.c **** // POSSIBILITY OF SUCH DAMAGE.
  33:..\src/command_processing.c **** // ----------------------------------------------------------------------------
  34:..\src/command_processing.c **** 
  35:..\src/command_processing.c **** 
  36:..\src/command_processing.c **** /**
  37:..\src/command_processing.c **** * \file         command_processing.c
  38:..\src/command_processing.c **** *
  39:..\src/command_processing.c **** 
  40:..\src/command_processing.c **** * \brief        Command processing functions.
  41:..\src/command_processing.c **** * \date         March 20th, 2020
  42:..\src/command_processing.c **** * \author       _Centro "E.Piaggio"_
  43:..\src/command_processing.c **** * \copyright    (C) 2012-2016 qbrobotics. All rights reserved.
  44:..\src/command_processing.c **** * \copyright    (C) 2017-2020 Centro "E.Piaggio". All rights reserved.
  45:..\src/command_processing.c **** */
  46:..\src/command_processing.c **** //=================================================================     includes
  47:..\src/command_processing.c **** #include "command_processing.h"
  48:..\src/command_processing.c **** 
  49:..\src/command_processing.c **** //================================================================     variables
  50:..\src/command_processing.c **** 
  51:..\src/command_processing.c **** reg8 * EEPROM_ADDR = (reg8 *) CYDEV_EE_BASE;
  52:..\src/command_processing.c **** 
  53:..\src/command_processing.c **** //==============================================================================
  54:..\src/command_processing.c **** //                                                            RX DATA PROCESSING
  55:..\src/command_processing.c **** //==============================================================================
  56:..\src/command_processing.c **** //  This function checks for the availability of a data packet and process it:
  57:..\src/command_processing.c **** //      - Verify checksum;
  58:..\src/command_processing.c **** //      - Process commands;
  59:..\src/command_processing.c **** //==============================================================================
  60:..\src/command_processing.c **** 
  61:..\src/command_processing.c **** void commProcess(void){
  35              		.loc 1 61 0
  36              		.cfi_startproc
  37              		@ args = 0, pretend = 0, frame = 48
  38              		@ frame_needed = 1, uses_anonymous_args = 0
  39 0000 80B5     		push	{r7, lr}
  40              		.cfi_def_cfa_offset 8
  41              		.cfi_offset 7, -8
  42              		.cfi_offset 14, -4
  43 0002 8CB0     		sub	sp, sp, #48
  44              		.cfi_def_cfa_offset 56
  45 0004 00AF     		add	r7, sp, #0
  46              		.cfi_def_cfa_register 7
  62:..\src/command_processing.c **** 
  63:..\src/command_processing.c ****     uint8 CYDATA rx_cmd;
  64:..\src/command_processing.c ****     rx_cmd = g_rx.buffer[0];
  47              		.loc 1 64 0
  48 0006 E44B     		ldr	r3, .L53
  49 0008 1B78     		ldrb	r3, [r3]
  50 000a 87F82F30 		strb	r3, [r7, #47]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 3


  65:..\src/command_processing.c **** 
  66:..\src/command_processing.c **** //==========================================================     verify checksum
  67:..\src/command_processing.c **** 
  68:..\src/command_processing.c ****     if (!(LCRChecksum(g_rx.buffer, g_rx.length - 1) == g_rx.buffer[g_rx.length - 1])){
  51              		.loc 1 68 0
  52 000e E24B     		ldr	r3, .L53
  53 0010 B3F98030 		ldrsh	r3, [r3, #128]
  54 0014 DBB2     		uxtb	r3, r3
  55 0016 013B     		subs	r3, r3, #1
  56 0018 DBB2     		uxtb	r3, r3
  57 001a 1946     		mov	r1, r3
  58 001c DE48     		ldr	r0, .L53
  59 001e FFF7FEFF 		bl	LCRChecksum
  60 0022 0346     		mov	r3, r0
  61 0024 1946     		mov	r1, r3
  62 0026 DC4B     		ldr	r3, .L53
  63 0028 B3F98030 		ldrsh	r3, [r3, #128]
  64 002c 013B     		subs	r3, r3, #1
  65 002e DA4A     		ldr	r2, .L53
  66 0030 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
  67 0032 9942     		cmp	r1, r3
  68 0034 04D0     		beq	.L2
  69:..\src/command_processing.c ****         // Wrong checksum
  70:..\src/command_processing.c ****         g_rx.ready = 0;
  69              		.loc 1 70 0
  70 0036 D84B     		ldr	r3, .L53
  71 0038 0022     		movs	r2, #0
  72 003a 83F88420 		strb	r2, [r3, #132]
  71:..\src/command_processing.c ****         return;
  73              		.loc 1 71 0
  74 003e 61E2     		b	.L1
  75              	.L2:
  72:..\src/command_processing.c ****     }
  73:..\src/command_processing.c **** 
  74:..\src/command_processing.c ****     switch(rx_cmd) {
  76              		.loc 1 74 0
  77 0040 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
  78 0044 A82B     		cmp	r3, #168
  79 0046 00F25C82 		bhi	.L52
  80 004a 01A2     		adr	r2, .L6
  81 004c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
  82              		.p2align 2
  83              	.L6:
  84 0050 79030000 		.word	.L5+1
  85 0054 5B030000 		.word	.L7+1
  86 0058 03050000 		.word	.L52+1
  87 005c 7F030000 		.word	.L8+1
  88 0060 85030000 		.word	.L9+1
  89 0064 A9030000 		.word	.L10+1
  90 0068 43030000 		.word	.L11+1
  91 006c 03050000 		.word	.L52+1
  92 0070 03050000 		.word	.L52+1
  93 0074 DD030000 		.word	.L12+1
  94 0078 C3030000 		.word	.L13+1
  95 007c 03050000 		.word	.L52+1
  96 0080 61030000 		.word	.L14+1
  97 0084 FF030000 		.word	.L15+1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 4


  98 0088 03050000 		.word	.L52+1
  99 008c 03050000 		.word	.L52+1
 100 0090 03050000 		.word	.L52+1
 101 0094 03050000 		.word	.L52+1
 102 0098 03050000 		.word	.L52+1
 103 009c 03050000 		.word	.L52+1
 104 00a0 03050000 		.word	.L52+1
 105 00a4 03050000 		.word	.L52+1
 106 00a8 03050000 		.word	.L52+1
 107 00ac 03050000 		.word	.L52+1
 108 00b0 03050000 		.word	.L52+1
 109 00b4 03050000 		.word	.L52+1
 110 00b8 03050000 		.word	.L52+1
 111 00bc 03050000 		.word	.L52+1
 112 00c0 03050000 		.word	.L52+1
 113 00c4 03050000 		.word	.L52+1
 114 00c8 03050000 		.word	.L52+1
 115 00cc 03050000 		.word	.L52+1
 116 00d0 03050000 		.word	.L52+1
 117 00d4 03050000 		.word	.L52+1
 118 00d8 03050000 		.word	.L52+1
 119 00dc 03050000 		.word	.L52+1
 120 00e0 03050000 		.word	.L52+1
 121 00e4 03050000 		.word	.L52+1
 122 00e8 03050000 		.word	.L52+1
 123 00ec 03050000 		.word	.L52+1
 124 00f0 03050000 		.word	.L52+1
 125 00f4 03050000 		.word	.L52+1
 126 00f8 03050000 		.word	.L52+1
 127 00fc 03050000 		.word	.L52+1
 128 0100 03050000 		.word	.L52+1
 129 0104 03050000 		.word	.L52+1
 130 0108 03050000 		.word	.L52+1
 131 010c 03050000 		.word	.L52+1
 132 0110 03050000 		.word	.L52+1
 133 0114 03050000 		.word	.L52+1
 134 0118 03050000 		.word	.L52+1
 135 011c 03050000 		.word	.L52+1
 136 0120 03050000 		.word	.L52+1
 137 0124 03050000 		.word	.L52+1
 138 0128 03050000 		.word	.L52+1
 139 012c 03050000 		.word	.L52+1
 140 0130 03050000 		.word	.L52+1
 141 0134 03050000 		.word	.L52+1
 142 0138 03050000 		.word	.L52+1
 143 013c 03050000 		.word	.L52+1
 144 0140 03050000 		.word	.L52+1
 145 0144 03050000 		.word	.L52+1
 146 0148 03050000 		.word	.L52+1
 147 014c 03050000 		.word	.L52+1
 148 0150 03050000 		.word	.L52+1
 149 0154 03050000 		.word	.L52+1
 150 0158 03050000 		.word	.L52+1
 151 015c 03050000 		.word	.L52+1
 152 0160 03050000 		.word	.L52+1
 153 0164 03050000 		.word	.L52+1
 154 0168 03050000 		.word	.L52+1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 5


 155 016c 03050000 		.word	.L52+1
 156 0170 03050000 		.word	.L52+1
 157 0174 03050000 		.word	.L52+1
 158 0178 03050000 		.word	.L52+1
 159 017c 03050000 		.word	.L52+1
 160 0180 03050000 		.word	.L52+1
 161 0184 03050000 		.word	.L52+1
 162 0188 03050000 		.word	.L52+1
 163 018c 03050000 		.word	.L52+1
 164 0190 03050000 		.word	.L52+1
 165 0194 03050000 		.word	.L52+1
 166 0198 03050000 		.word	.L52+1
 167 019c 03050000 		.word	.L52+1
 168 01a0 03050000 		.word	.L52+1
 169 01a4 03050000 		.word	.L52+1
 170 01a8 03050000 		.word	.L52+1
 171 01ac 03050000 		.word	.L52+1
 172 01b0 03050000 		.word	.L52+1
 173 01b4 03050000 		.word	.L52+1
 174 01b8 03050000 		.word	.L52+1
 175 01bc 03050000 		.word	.L52+1
 176 01c0 03050000 		.word	.L52+1
 177 01c4 03050000 		.word	.L52+1
 178 01c8 03050000 		.word	.L52+1
 179 01cc 03050000 		.word	.L52+1
 180 01d0 03050000 		.word	.L52+1
 181 01d4 03050000 		.word	.L52+1
 182 01d8 03050000 		.word	.L52+1
 183 01dc 03050000 		.word	.L52+1
 184 01e0 03050000 		.word	.L52+1
 185 01e4 03050000 		.word	.L52+1
 186 01e8 03050000 		.word	.L52+1
 187 01ec 03050000 		.word	.L52+1
 188 01f0 03050000 		.word	.L52+1
 189 01f4 03050000 		.word	.L52+1
 190 01f8 03050000 		.word	.L52+1
 191 01fc 03050000 		.word	.L52+1
 192 0200 03050000 		.word	.L52+1
 193 0204 03050000 		.word	.L52+1
 194 0208 03050000 		.word	.L52+1
 195 020c 03050000 		.word	.L52+1
 196 0210 03050000 		.word	.L52+1
 197 0214 03050000 		.word	.L52+1
 198 0218 03050000 		.word	.L52+1
 199 021c 03050000 		.word	.L52+1
 200 0220 03050000 		.word	.L52+1
 201 0224 03050000 		.word	.L52+1
 202 0228 03050000 		.word	.L52+1
 203 022c 03050000 		.word	.L52+1
 204 0230 03050000 		.word	.L52+1
 205 0234 03050000 		.word	.L52+1
 206 0238 03050000 		.word	.L52+1
 207 023c 03050000 		.word	.L52+1
 208 0240 03050000 		.word	.L52+1
 209 0244 03050000 		.word	.L52+1
 210 0248 03050000 		.word	.L52+1
 211 024c 03050000 		.word	.L52+1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 6


 212 0250 F5020000 		.word	.L16+1
 213 0254 31030000 		.word	.L17+1
 214 0258 FB020000 		.word	.L18+1
 215 025c 3D030000 		.word	.L19+1
 216 0260 01030000 		.word	.L20+1
 217 0264 0D030000 		.word	.L21+1
 218 0268 07030000 		.word	.L22+1
 219 026c 03050000 		.word	.L52+1
 220 0270 2B030000 		.word	.L23+1
 221 0274 19030000 		.word	.L24+1
 222 0278 03050000 		.word	.L52+1
 223 027c 1F030000 		.word	.L25+1
 224 0280 13030000 		.word	.L26+1
 225 0284 03050000 		.word	.L52+1
 226 0288 03050000 		.word	.L52+1
 227 028c 03050000 		.word	.L52+1
 228 0290 37030000 		.word	.L27+1
 229 0294 03050000 		.word	.L52+1
 230 0298 25030000 		.word	.L28+1
 231 029c 03050000 		.word	.L52+1
 232 02a0 03050000 		.word	.L52+1
 233 02a4 03050000 		.word	.L52+1
 234 02a8 03050000 		.word	.L52+1
 235 02ac 03050000 		.word	.L52+1
 236 02b0 03050000 		.word	.L52+1
 237 02b4 03050000 		.word	.L52+1
 238 02b8 03050000 		.word	.L52+1
 239 02bc 03050000 		.word	.L52+1
 240 02c0 03050000 		.word	.L52+1
 241 02c4 03050000 		.word	.L52+1
 242 02c8 03050000 		.word	.L52+1
 243 02cc 03050000 		.word	.L52+1
 244 02d0 03050000 		.word	.L52+1
 245 02d4 9D040000 		.word	.L29+1
 246 02d8 A3040000 		.word	.L30+1
 247 02dc BB040000 		.word	.L31+1
 248 02e0 C1040000 		.word	.L32+1
 249 02e4 C7040000 		.word	.L33+1
 250 02e8 CD040000 		.word	.L34+1
 251 02ec D3040000 		.word	.L35+1
 252 02f0 EB040000 		.word	.L36+1
 253              		.p2align 1
 254              	.L16:
  75:..\src/command_processing.c **** 
  76:..\src/command_processing.c **** //=============================================================     CMD_ACTIVATE
  77:..\src/command_processing.c ****         case CMD_ACTIVATE:
  78:..\src/command_processing.c ****             cmd_activate();
 255              		.loc 1 78 0
 256 02f4 FFF7FEFF 		bl	cmd_activate
  79:..\src/command_processing.c ****             break;
 257              		.loc 1 79 0
 258 02f8 04E1     		b	.L1
 259              	.L18:
  80:..\src/command_processing.c **** 
  81:..\src/command_processing.c **** //===========================================================     CMD_SET_INPUTS
  82:..\src/command_processing.c **** 
  83:..\src/command_processing.c ****         case CMD_SET_INPUTS:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 7


  84:..\src/command_processing.c ****             cmd_set_inputs();
 260              		.loc 1 84 0
 261 02fa FFF7FEFF 		bl	cmd_set_inputs
  85:..\src/command_processing.c ****             break;
 262              		.loc 1 85 0
 263 02fe 01E1     		b	.L1
 264              	.L20:
  86:..\src/command_processing.c **** 
  87:..\src/command_processing.c **** //=====================================================     CMD_GET_MEASUREMENTS
  88:..\src/command_processing.c **** 
  89:..\src/command_processing.c ****         case CMD_GET_MEASUREMENTS:
  90:..\src/command_processing.c ****             cmd_get_measurements();
 265              		.loc 1 90 0
 266 0300 FFF7FEFF 		bl	cmd_get_measurements
  91:..\src/command_processing.c ****             break;
 267              		.loc 1 91 0
 268 0304 FEE0     		b	.L1
 269              	.L22:
  92:..\src/command_processing.c **** 
  93:..\src/command_processing.c **** //=====================================================     CMD_GET_CURR_AND_MEAS
  94:..\src/command_processing.c **** 
  95:..\src/command_processing.c ****         case CMD_GET_CURR_AND_MEAS:
  96:..\src/command_processing.c ****             cmd_get_curr_and_meas();
 270              		.loc 1 96 0
 271 0306 FFF7FEFF 		bl	cmd_get_curr_and_meas
  97:..\src/command_processing.c ****             break;
 272              		.loc 1 97 0
 273 030a FBE0     		b	.L1
 274              	.L21:
  98:..\src/command_processing.c ****             
  99:..\src/command_processing.c **** //=========================================================     CMD_GET_CURRENTS
 100:..\src/command_processing.c **** 
 101:..\src/command_processing.c ****         case CMD_GET_CURRENTS:
 102:..\src/command_processing.c ****             cmd_get_currents();
 275              		.loc 1 102 0
 276 030c FFF7FEFF 		bl	cmd_get_currents
 103:..\src/command_processing.c ****             break;
 277              		.loc 1 103 0
 278 0310 F8E0     		b	.L1
 279              	.L26:
 104:..\src/command_processing.c **** 
 105:..\src/command_processing.c **** //=========================================================     CMD_GET_CURR_DIFF
 106:..\src/command_processing.c ****          
 107:..\src/command_processing.c ****         case CMD_GET_CURR_DIFF:
 108:..\src/command_processing.c ****             cmd_get_currents_for_cuff();
 280              		.loc 1 108 0
 281 0312 FFF7FEFF 		bl	cmd_get_currents_for_cuff
 109:..\src/command_processing.c ****             break;
 282              		.loc 1 109 0
 283 0316 F5E0     		b	.L1
 284              	.L24:
 110:..\src/command_processing.c ****             
 111:..\src/command_processing.c **** //=========================================================     CMD_GET_CURR_DIFF
 112:..\src/command_processing.c ****         
 113:..\src/command_processing.c ****         case CMD_GET_VELOCITIES:
 114:..\src/command_processing.c ****             cmd_get_velocities();
 285              		.loc 1 114 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 8


 286 0318 FFF7FEFF 		bl	cmd_get_velocities
 115:..\src/command_processing.c ****             break;
 287              		.loc 1 115 0
 288 031c F2E0     		b	.L1
 289              	.L25:
 116:..\src/command_processing.c ****             
 117:..\src/command_processing.c **** //=========================================================     CMD_GET_CURR_DIFF
 118:..\src/command_processing.c **** 
 119:..\src/command_processing.c ****         case CMD_GET_ACCEL:
 120:..\src/command_processing.c ****             cmd_get_accelerations();
 290              		.loc 1 120 0
 291 031e FFF7FEFF 		bl	cmd_get_accelerations
 121:..\src/command_processing.c ****             break;
 292              		.loc 1 121 0
 293 0322 EFE0     		b	.L1
 294              	.L28:
 122:..\src/command_processing.c **** 
 123:..\src/command_processing.c **** //=========================================================     CMD_GET_JOYSTICK
 124:..\src/command_processing.c **** 
 125:..\src/command_processing.c ****         case CMD_GET_JOYSTICK:
 126:..\src/command_processing.c ****             cmd_get_joystick();
 295              		.loc 1 126 0
 296 0324 FFF7FEFF 		bl	cmd_get_joystick
 127:..\src/command_processing.c ****         break;
 297              		.loc 1 127 0
 298 0328 ECE0     		b	.L1
 299              	.L23:
 128:..\src/command_processing.c ****             
 129:..\src/command_processing.c **** //=========================================================     CMD_GET_EMG
 130:..\src/command_processing.c **** 
 131:..\src/command_processing.c ****         case CMD_GET_EMG:
 132:..\src/command_processing.c ****             cmd_get_emg();
 300              		.loc 1 132 0
 301 032a FFF7FEFF 		bl	cmd_get_emg
 133:..\src/command_processing.c ****             break;
 302              		.loc 1 133 0
 303 032e E9E0     		b	.L1
 304              	.L17:
 134:..\src/command_processing.c ****             
 135:..\src/command_processing.c **** //=========================================================     CMD_GET_ACTIVATE
 136:..\src/command_processing.c ****             
 137:..\src/command_processing.c ****         case CMD_GET_ACTIVATE:
 138:..\src/command_processing.c ****             cmd_get_activate();
 305              		.loc 1 138 0
 306 0330 FFF7FEFF 		bl	cmd_get_activate
 139:..\src/command_processing.c ****             break;
 307              		.loc 1 139 0
 308 0334 E6E0     		b	.L1
 309              	.L27:
 140:..\src/command_processing.c ****             
 141:..\src/command_processing.c **** //=========================================================     CMD_SET_BAUDRATE
 142:..\src/command_processing.c ****             
 143:..\src/command_processing.c ****         case CMD_SET_BAUDRATE:
 144:..\src/command_processing.c ****             cmd_set_baudrate();
 310              		.loc 1 144 0
 311 0336 FFF7FEFF 		bl	cmd_set_baudrate
 145:..\src/command_processing.c ****             break;  
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 9


 312              		.loc 1 145 0
 313 033a E3E0     		b	.L1
 314              	.L19:
 146:..\src/command_processing.c ****             
 147:..\src/command_processing.c **** //============================================================     CMD_GET_INPUT
 148:..\src/command_processing.c **** 
 149:..\src/command_processing.c ****         case CMD_GET_INPUTS:
 150:..\src/command_processing.c ****             cmd_get_inputs();
 315              		.loc 1 150 0
 316 033c FFF7FEFF 		bl	cmd_get_inputs
 151:..\src/command_processing.c ****             break;
 317              		.loc 1 151 0
 318 0340 E0E0     		b	.L1
 319              	.L11:
 152:..\src/command_processing.c **** 
 153:..\src/command_processing.c **** //=============================================================     CMD_GET_INFO
 154:..\src/command_processing.c **** 
 155:..\src/command_processing.c ****         case CMD_GET_INFO:
 156:..\src/command_processing.c ****             infoGet(  __REV16(*((uint16 *) &g_rx.buffer[1])) );
 320              		.loc 1 156 0
 321 0342 164B     		ldr	r3, .L53+4
 322 0344 1B88     		ldrh	r3, [r3]
 323 0346 BB61     		str	r3, [r7, #24]
 324              	.LBB12:
 325              	.LBB13:
 326              		.file 2 "Generated_Source\\PSoC5/cmsis_gcc.h"
   1:Generated_Source\PSoC5/cmsis_gcc.h **** /**************************************************************************//**
   2:Generated_Source\PSoC5/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Generated_Source\PSoC5/cmsis_gcc.h ****  * @brief    CMSIS Cortex-M Core Function/Instruction Header File
   4:Generated_Source\PSoC5/cmsis_gcc.h ****  * @version  V5.00
   5:Generated_Source\PSoC5/cmsis_gcc.h ****  * @date     28. October 2016
   6:Generated_Source\PSoC5/cmsis_gcc.h ****  ******************************************************************************/
   7:Generated_Source\PSoC5/cmsis_gcc.h **** /*
   8:Generated_Source\PSoC5/cmsis_gcc.h ****  * Copyright (c) 2009-2016 ARM Limited. All rights reserved.
   9:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  10:Generated_Source\PSoC5/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  12:Generated_Source\PSoC5/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Generated_Source\PSoC5/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Generated_Source\PSoC5/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  16:Generated_Source\PSoC5/cmsis_gcc.h ****  * http://www.apache.org/licenses/LICENSE-2.0
  17:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  18:Generated_Source\PSoC5/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Generated_Source\PSoC5/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Generated_Source\PSoC5/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Generated_Source\PSoC5/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Generated_Source\PSoC5/cmsis_gcc.h ****  * limitations under the License.
  23:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  24:Generated_Source\PSoC5/cmsis_gcc.h **** 
  25:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Generated_Source\PSoC5/cmsis_gcc.h **** 
  28:Generated_Source\PSoC5/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 10


  32:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Generated_Source\PSoC5/cmsis_gcc.h **** 
  34:Generated_Source\PSoC5/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  35:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __ASM
  36:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __ASM                     __asm
  37:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  38:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __INLINE
  39:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __INLINE                  inline
  40:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  41:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  42:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __STATIC_INLINE           static inline
  43:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  44:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __NO_RETURN
  45:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __NO_RETURN               __attribute__((noreturn))
  46:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  47:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __USED
  48:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __USED                    __attribute__((used))
  49:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  50:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   _WEAK
  51:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __WEAK                    __attribute__((weak))
  52:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  53:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32
  54:Generated_Source\PSoC5/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  55:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)     (((struct T_UINT32 *)(x))->v)
  56:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  57:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __ALIGNED
  58:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __ALIGNED(x)              __attribute__((aligned(x)))
  59:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  60:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __PACKED
  61:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __PACKED                  __attribute__((packed, aligned(1)))
  62:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  63:Generated_Source\PSoC5/cmsis_gcc.h **** 
  64:Generated_Source\PSoC5/cmsis_gcc.h **** 
  65:Generated_Source\PSoC5/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  66:Generated_Source\PSoC5/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  67:Generated_Source\PSoC5/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  68:Generated_Source\PSoC5/cmsis_gcc.h ****   @{
  69:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  70:Generated_Source\PSoC5/cmsis_gcc.h **** 
  71:Generated_Source\PSoC5/cmsis_gcc.h **** /**
  72:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  73:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  74:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  75:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  76:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __enable_irq(void)
  77:Generated_Source\PSoC5/cmsis_gcc.h **** {
  78:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  79:Generated_Source\PSoC5/cmsis_gcc.h **** }
  80:Generated_Source\PSoC5/cmsis_gcc.h **** 
  81:Generated_Source\PSoC5/cmsis_gcc.h **** 
  82:Generated_Source\PSoC5/cmsis_gcc.h **** /**
  83:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  84:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  85:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  86:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  87:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __disable_irq(void)
  88:Generated_Source\PSoC5/cmsis_gcc.h **** {
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 11


  89:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  90:Generated_Source\PSoC5/cmsis_gcc.h **** }
  91:Generated_Source\PSoC5/cmsis_gcc.h **** 
  92:Generated_Source\PSoC5/cmsis_gcc.h **** 
  93:Generated_Source\PSoC5/cmsis_gcc.h **** /**
  94:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Control Register
  95:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the Control Register.
  96:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Control Register value
  97:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  98:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_CONTROL(void)
  99:Generated_Source\PSoC5/cmsis_gcc.h **** {
 100:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 101:Generated_Source\PSoC5/cmsis_gcc.h **** 
 102:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 103:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 104:Generated_Source\PSoC5/cmsis_gcc.h **** }
 105:Generated_Source\PSoC5/cmsis_gcc.h **** 
 106:Generated_Source\PSoC5/cmsis_gcc.h **** 
 107:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 108:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 109:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 110:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 111:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               non-secure Control Register value
 112:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 113:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_CONTROL_NS(void)
 114:Generated_Source\PSoC5/cmsis_gcc.h **** {
 115:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 116:Generated_Source\PSoC5/cmsis_gcc.h **** 
 117:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 118:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 119:Generated_Source\PSoC5/cmsis_gcc.h **** }
 120:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 121:Generated_Source\PSoC5/cmsis_gcc.h **** 
 122:Generated_Source\PSoC5/cmsis_gcc.h **** 
 123:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 124:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Control Register
 125:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 126:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 127:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 128:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_CONTROL(uint32_t control)
 129:Generated_Source\PSoC5/cmsis_gcc.h **** {
 130:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 131:Generated_Source\PSoC5/cmsis_gcc.h **** }
 132:Generated_Source\PSoC5/cmsis_gcc.h **** 
 133:Generated_Source\PSoC5/cmsis_gcc.h **** 
 134:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 135:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 136:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 137:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 138:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 139:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 140:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_CONTROL_NS(uint32_t control)
 141:Generated_Source\PSoC5/cmsis_gcc.h **** {
 142:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 143:Generated_Source\PSoC5/cmsis_gcc.h **** }
 144:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 145:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 12


 146:Generated_Source\PSoC5/cmsis_gcc.h **** 
 147:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 148:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get IPSR Register
 149:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 150:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               IPSR Register value
 151:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 152:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_IPSR(void)
 153:Generated_Source\PSoC5/cmsis_gcc.h **** {
 154:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 155:Generated_Source\PSoC5/cmsis_gcc.h **** 
 156:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 157:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 158:Generated_Source\PSoC5/cmsis_gcc.h **** }
 159:Generated_Source\PSoC5/cmsis_gcc.h **** 
 160:Generated_Source\PSoC5/cmsis_gcc.h **** 
 161:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 162:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get APSR Register
 163:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 164:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               APSR Register value
 165:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 166:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_APSR(void)
 167:Generated_Source\PSoC5/cmsis_gcc.h **** {
 168:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 169:Generated_Source\PSoC5/cmsis_gcc.h **** 
 170:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 171:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 172:Generated_Source\PSoC5/cmsis_gcc.h **** }
 173:Generated_Source\PSoC5/cmsis_gcc.h **** 
 174:Generated_Source\PSoC5/cmsis_gcc.h **** 
 175:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 176:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get xPSR Register
 177:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 178:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               xPSR Register value
 179:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 180:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_xPSR(void)
 181:Generated_Source\PSoC5/cmsis_gcc.h **** {
 182:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 183:Generated_Source\PSoC5/cmsis_gcc.h **** 
 184:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 185:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 186:Generated_Source\PSoC5/cmsis_gcc.h **** }
 187:Generated_Source\PSoC5/cmsis_gcc.h **** 
 188:Generated_Source\PSoC5/cmsis_gcc.h **** 
 189:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 190:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 191:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 192:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSP Register value
 193:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 194:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PSP(void)
 195:Generated_Source\PSoC5/cmsis_gcc.h **** {
 196:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 197:Generated_Source\PSoC5/cmsis_gcc.h **** 
 198:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 199:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 200:Generated_Source\PSoC5/cmsis_gcc.h **** }
 201:Generated_Source\PSoC5/cmsis_gcc.h **** 
 202:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 13


 203:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 204:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 205:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 206:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 207:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSP Register value
 208:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 209:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PSP_NS(void)
 210:Generated_Source\PSoC5/cmsis_gcc.h **** {
 211:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 212:Generated_Source\PSoC5/cmsis_gcc.h **** 
 213:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 214:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 215:Generated_Source\PSoC5/cmsis_gcc.h **** }
 216:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 217:Generated_Source\PSoC5/cmsis_gcc.h **** 
 218:Generated_Source\PSoC5/cmsis_gcc.h **** 
 219:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 220:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 221:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 222:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 223:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 224:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 225:Generated_Source\PSoC5/cmsis_gcc.h **** {
 226:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : "sp");
 227:Generated_Source\PSoC5/cmsis_gcc.h **** }
 228:Generated_Source\PSoC5/cmsis_gcc.h **** 
 229:Generated_Source\PSoC5/cmsis_gcc.h **** 
 230:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 231:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 232:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 233:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 234:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 235:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 236:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 237:Generated_Source\PSoC5/cmsis_gcc.h **** {
 238:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : "sp");
 239:Generated_Source\PSoC5/cmsis_gcc.h **** }
 240:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 241:Generated_Source\PSoC5/cmsis_gcc.h **** 
 242:Generated_Source\PSoC5/cmsis_gcc.h **** 
 243:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 244:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 245:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 246:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSP Register value
 247:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 248:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_MSP(void)
 249:Generated_Source\PSoC5/cmsis_gcc.h **** {
 250:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 251:Generated_Source\PSoC5/cmsis_gcc.h **** 
 252:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 253:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 254:Generated_Source\PSoC5/cmsis_gcc.h **** }
 255:Generated_Source\PSoC5/cmsis_gcc.h **** 
 256:Generated_Source\PSoC5/cmsis_gcc.h **** 
 257:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 258:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 259:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 14


 260:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 261:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSP Register value
 262:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 263:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_MSP_NS(void)
 264:Generated_Source\PSoC5/cmsis_gcc.h **** {
 265:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 266:Generated_Source\PSoC5/cmsis_gcc.h **** 
 267:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 268:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 269:Generated_Source\PSoC5/cmsis_gcc.h **** }
 270:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 271:Generated_Source\PSoC5/cmsis_gcc.h **** 
 272:Generated_Source\PSoC5/cmsis_gcc.h **** 
 273:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 274:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 275:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 276:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 277:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 278:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 279:Generated_Source\PSoC5/cmsis_gcc.h **** {
 280:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : "sp");
 281:Generated_Source\PSoC5/cmsis_gcc.h **** }
 282:Generated_Source\PSoC5/cmsis_gcc.h **** 
 283:Generated_Source\PSoC5/cmsis_gcc.h **** 
 284:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 285:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 286:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 287:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 288:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 289:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 290:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 291:Generated_Source\PSoC5/cmsis_gcc.h **** {
 292:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : "sp");
 293:Generated_Source\PSoC5/cmsis_gcc.h **** }
 294:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 295:Generated_Source\PSoC5/cmsis_gcc.h **** 
 296:Generated_Source\PSoC5/cmsis_gcc.h **** 
 297:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 298:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Priority Mask
 299:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 300:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Priority Mask value
 301:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 302:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 303:Generated_Source\PSoC5/cmsis_gcc.h **** {
 304:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 305:Generated_Source\PSoC5/cmsis_gcc.h **** 
 306:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 307:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 308:Generated_Source\PSoC5/cmsis_gcc.h **** }
 309:Generated_Source\PSoC5/cmsis_gcc.h **** 
 310:Generated_Source\PSoC5/cmsis_gcc.h **** 
 311:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 312:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 313:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 314:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 315:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Priority Mask value
 316:Generated_Source\PSoC5/cmsis_gcc.h ****  */
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 15


 317:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PRIMASK_NS(void)
 318:Generated_Source\PSoC5/cmsis_gcc.h **** {
 319:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 320:Generated_Source\PSoC5/cmsis_gcc.h **** 
 321:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) );
 322:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 323:Generated_Source\PSoC5/cmsis_gcc.h **** }
 324:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 325:Generated_Source\PSoC5/cmsis_gcc.h **** 
 326:Generated_Source\PSoC5/cmsis_gcc.h **** 
 327:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 328:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Priority Mask
 329:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 330:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 331:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 332:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 333:Generated_Source\PSoC5/cmsis_gcc.h **** {
 334:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 335:Generated_Source\PSoC5/cmsis_gcc.h **** }
 336:Generated_Source\PSoC5/cmsis_gcc.h **** 
 337:Generated_Source\PSoC5/cmsis_gcc.h **** 
 338:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 339:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 340:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 341:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 342:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 343:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 344:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 345:Generated_Source\PSoC5/cmsis_gcc.h **** {
 346:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 347:Generated_Source\PSoC5/cmsis_gcc.h **** }
 348:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 349:Generated_Source\PSoC5/cmsis_gcc.h **** 
 350:Generated_Source\PSoC5/cmsis_gcc.h **** 
 351:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 352:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 353:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 354:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 355:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Enable FIQ
 356:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 357:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 358:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 359:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __enable_fault_irq(void)
 360:Generated_Source\PSoC5/cmsis_gcc.h **** {
 361:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 362:Generated_Source\PSoC5/cmsis_gcc.h **** }
 363:Generated_Source\PSoC5/cmsis_gcc.h **** 
 364:Generated_Source\PSoC5/cmsis_gcc.h **** 
 365:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 366:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Disable FIQ
 367:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 368:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 369:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 370:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __disable_fault_irq(void)
 371:Generated_Source\PSoC5/cmsis_gcc.h **** {
 372:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 373:Generated_Source\PSoC5/cmsis_gcc.h **** }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 16


 374:Generated_Source\PSoC5/cmsis_gcc.h **** 
 375:Generated_Source\PSoC5/cmsis_gcc.h **** 
 376:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 377:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Base Priority
 378:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 379:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Base Priority register value
 380:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 381:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_BASEPRI(void)
 382:Generated_Source\PSoC5/cmsis_gcc.h **** {
 383:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 384:Generated_Source\PSoC5/cmsis_gcc.h **** 
 385:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 386:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 387:Generated_Source\PSoC5/cmsis_gcc.h **** }
 388:Generated_Source\PSoC5/cmsis_gcc.h **** 
 389:Generated_Source\PSoC5/cmsis_gcc.h **** 
 390:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 391:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 392:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 393:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 394:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Base Priority register value
 395:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 396:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_BASEPRI_NS(void)
 397:Generated_Source\PSoC5/cmsis_gcc.h **** {
 398:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 399:Generated_Source\PSoC5/cmsis_gcc.h **** 
 400:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 401:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 402:Generated_Source\PSoC5/cmsis_gcc.h **** }
 403:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 404:Generated_Source\PSoC5/cmsis_gcc.h **** 
 405:Generated_Source\PSoC5/cmsis_gcc.h **** 
 406:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 407:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Base Priority
 408:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 409:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 410:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 411:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_BASEPRI(uint32_t basePri)
 412:Generated_Source\PSoC5/cmsis_gcc.h **** {
 413:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 414:Generated_Source\PSoC5/cmsis_gcc.h **** }
 415:Generated_Source\PSoC5/cmsis_gcc.h **** 
 416:Generated_Source\PSoC5/cmsis_gcc.h **** 
 417:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 418:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 419:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 420:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 421:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 422:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 423:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 424:Generated_Source\PSoC5/cmsis_gcc.h **** {
 425:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 426:Generated_Source\PSoC5/cmsis_gcc.h **** }
 427:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 428:Generated_Source\PSoC5/cmsis_gcc.h **** 
 429:Generated_Source\PSoC5/cmsis_gcc.h **** 
 430:Generated_Source\PSoC5/cmsis_gcc.h **** /**
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 17


 431:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 432:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 433:Generated_Source\PSoC5/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 434:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 435:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 436:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_BASEPRI_MAX(uint32_t basePri)
 437:Generated_Source\PSoC5/cmsis_gcc.h **** {
 438:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 439:Generated_Source\PSoC5/cmsis_gcc.h **** }
 440:Generated_Source\PSoC5/cmsis_gcc.h **** 
 441:Generated_Source\PSoC5/cmsis_gcc.h **** 
 442:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 443:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Fault Mask
 444:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 445:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Fault Mask register value
 446:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 447:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_FAULTMASK(void)
 448:Generated_Source\PSoC5/cmsis_gcc.h **** {
 449:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 450:Generated_Source\PSoC5/cmsis_gcc.h **** 
 451:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 452:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 453:Generated_Source\PSoC5/cmsis_gcc.h **** }
 454:Generated_Source\PSoC5/cmsis_gcc.h **** 
 455:Generated_Source\PSoC5/cmsis_gcc.h **** 
 456:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 457:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 458:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 459:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 460:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Fault Mask register value
 461:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 462:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 463:Generated_Source\PSoC5/cmsis_gcc.h **** {
 464:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 465:Generated_Source\PSoC5/cmsis_gcc.h **** 
 466:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 467:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 468:Generated_Source\PSoC5/cmsis_gcc.h **** }
 469:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 470:Generated_Source\PSoC5/cmsis_gcc.h **** 
 471:Generated_Source\PSoC5/cmsis_gcc.h **** 
 472:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 473:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Fault Mask
 474:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 475:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 476:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 477:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 478:Generated_Source\PSoC5/cmsis_gcc.h **** {
 479:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 480:Generated_Source\PSoC5/cmsis_gcc.h **** }
 481:Generated_Source\PSoC5/cmsis_gcc.h **** 
 482:Generated_Source\PSoC5/cmsis_gcc.h **** 
 483:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 484:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 485:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 486:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 487:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 18


 488:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 489:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 490:Generated_Source\PSoC5/cmsis_gcc.h **** {
 491:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 492:Generated_Source\PSoC5/cmsis_gcc.h **** }
 493:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 494:Generated_Source\PSoC5/cmsis_gcc.h **** 
 495:Generated_Source\PSoC5/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 496:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 497:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 498:Generated_Source\PSoC5/cmsis_gcc.h **** 
 499:Generated_Source\PSoC5/cmsis_gcc.h **** 
 500:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1U)) || \
 501:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1U))    )
 502:Generated_Source\PSoC5/cmsis_gcc.h **** 
 503:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 504:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 505:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 506:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSPLIM Register value
 507:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 508:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PSPLIM(void)
 509:Generated_Source\PSoC5/cmsis_gcc.h **** {
 510:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 511:Generated_Source\PSoC5/cmsis_gcc.h **** 
 512:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 513:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 514:Generated_Source\PSoC5/cmsis_gcc.h **** }
 515:Generated_Source\PSoC5/cmsis_gcc.h **** 
 516:Generated_Source\PSoC5/cmsis_gcc.h **** 
 517:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 518:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 519:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 520:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 521:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 522:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSPLIM Register value
 523:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 524:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PSPLIM_NS(void)
 525:Generated_Source\PSoC5/cmsis_gcc.h **** {
 526:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 527:Generated_Source\PSoC5/cmsis_gcc.h **** 
 528:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 529:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 530:Generated_Source\PSoC5/cmsis_gcc.h **** }
 531:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 532:Generated_Source\PSoC5/cmsis_gcc.h **** 
 533:Generated_Source\PSoC5/cmsis_gcc.h **** 
 534:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 535:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 536:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 537:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 538:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 539:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 540:Generated_Source\PSoC5/cmsis_gcc.h **** {
 541:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 542:Generated_Source\PSoC5/cmsis_gcc.h **** }
 543:Generated_Source\PSoC5/cmsis_gcc.h **** 
 544:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 19


 545:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 546:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 547:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 548:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 549:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 550:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 551:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 552:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 553:Generated_Source\PSoC5/cmsis_gcc.h **** {
 554:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 555:Generated_Source\PSoC5/cmsis_gcc.h **** }
 556:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 557:Generated_Source\PSoC5/cmsis_gcc.h **** 
 558:Generated_Source\PSoC5/cmsis_gcc.h **** 
 559:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 560:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 561:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 562:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSPLIM Register value
 563:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 564:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_MSPLIM(void)
 565:Generated_Source\PSoC5/cmsis_gcc.h **** {
 566:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 567:Generated_Source\PSoC5/cmsis_gcc.h **** 
 568:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 569:Generated_Source\PSoC5/cmsis_gcc.h **** 
 570:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 571:Generated_Source\PSoC5/cmsis_gcc.h **** }
 572:Generated_Source\PSoC5/cmsis_gcc.h **** 
 573:Generated_Source\PSoC5/cmsis_gcc.h **** 
 574:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 575:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 576:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 577:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 578:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 579:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSPLIM Register value
 580:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 581:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_MSPLIM_NS(void)
 582:Generated_Source\PSoC5/cmsis_gcc.h **** {
 583:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 584:Generated_Source\PSoC5/cmsis_gcc.h **** 
 585:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 586:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 587:Generated_Source\PSoC5/cmsis_gcc.h **** }
 588:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 589:Generated_Source\PSoC5/cmsis_gcc.h **** 
 590:Generated_Source\PSoC5/cmsis_gcc.h **** 
 591:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 592:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 593:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 594:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 595:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 596:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 597:Generated_Source\PSoC5/cmsis_gcc.h **** {
 598:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 599:Generated_Source\PSoC5/cmsis_gcc.h **** }
 600:Generated_Source\PSoC5/cmsis_gcc.h **** 
 601:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 20


 602:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 603:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 604:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 605:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 606:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 607:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 608:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 609:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 610:Generated_Source\PSoC5/cmsis_gcc.h **** {
 611:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 612:Generated_Source\PSoC5/cmsis_gcc.h **** }
 613:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 614:Generated_Source\PSoC5/cmsis_gcc.h **** 
 615:Generated_Source\PSoC5/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1U)) || \
 616:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1U))    ) */
 617:Generated_Source\PSoC5/cmsis_gcc.h **** 
 618:Generated_Source\PSoC5/cmsis_gcc.h **** 
 619:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 620:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 621:Generated_Source\PSoC5/cmsis_gcc.h **** 
 622:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 623:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get FPSCR
 624:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 625:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 626:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 627:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_FPSCR(void)
 628:Generated_Source\PSoC5/cmsis_gcc.h **** {
 629:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 630:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 631:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 632:Generated_Source\PSoC5/cmsis_gcc.h **** 
 633:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");                                 /* Empty asm statement works as a scheduling
 634:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 635:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");
 636:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 637:Generated_Source\PSoC5/cmsis_gcc.h **** #else
 638:Generated_Source\PSoC5/cmsis_gcc.h ****    return(0U);
 639:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 640:Generated_Source\PSoC5/cmsis_gcc.h **** }
 641:Generated_Source\PSoC5/cmsis_gcc.h **** 
 642:Generated_Source\PSoC5/cmsis_gcc.h **** 
 643:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 644:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set FPSCR
 645:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 646:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 647:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 648:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 649:Generated_Source\PSoC5/cmsis_gcc.h **** {
 650:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 651:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 652:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");                                           /* Empty asm statement works as a 
 653:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc");
 654:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");
 655:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 656:Generated_Source\PSoC5/cmsis_gcc.h **** }
 657:Generated_Source\PSoC5/cmsis_gcc.h **** 
 658:Generated_Source\PSoC5/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 21


 659:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 660:Generated_Source\PSoC5/cmsis_gcc.h **** 
 661:Generated_Source\PSoC5/cmsis_gcc.h **** 
 662:Generated_Source\PSoC5/cmsis_gcc.h **** 
 663:Generated_Source\PSoC5/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 664:Generated_Source\PSoC5/cmsis_gcc.h **** 
 665:Generated_Source\PSoC5/cmsis_gcc.h **** 
 666:Generated_Source\PSoC5/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 667:Generated_Source\PSoC5/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 668:Generated_Source\PSoC5/cmsis_gcc.h ****   Access to dedicated instructions
 669:Generated_Source\PSoC5/cmsis_gcc.h ****   @{
 670:Generated_Source\PSoC5/cmsis_gcc.h **** */
 671:Generated_Source\PSoC5/cmsis_gcc.h **** 
 672:Generated_Source\PSoC5/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 673:Generated_Source\PSoC5/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 674:Generated_Source\PSoC5/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 675:Generated_Source\PSoC5/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 676:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 677:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 678:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 679:Generated_Source\PSoC5/cmsis_gcc.h **** #else
 680:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 681:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 682:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 683:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 684:Generated_Source\PSoC5/cmsis_gcc.h **** 
 685:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 686:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   No Operation
 687:Generated_Source\PSoC5/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 688:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 689:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 690:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 691:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("nop");
 692:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 693:Generated_Source\PSoC5/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")       /* This implementation gen
 694:Generated_Source\PSoC5/cmsis_gcc.h **** 
 695:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 696:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Wait For Interrupt
 697:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 698:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 699:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __WFI(void)
 700:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 701:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("wfi");
 702:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 703:Generated_Source\PSoC5/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")       /* This implementation gen
 704:Generated_Source\PSoC5/cmsis_gcc.h **** 
 705:Generated_Source\PSoC5/cmsis_gcc.h **** 
 706:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 707:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Wait For Event
 708:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 709:Generated_Source\PSoC5/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 710:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 711:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __WFE(void)
 712:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 713:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("wfe");
 714:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 715:Generated_Source\PSoC5/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")       /* This implementation gen
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 22


 716:Generated_Source\PSoC5/cmsis_gcc.h **** 
 717:Generated_Source\PSoC5/cmsis_gcc.h **** 
 718:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 719:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Send Event
 720:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 721:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 722:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __SEV(void)
 723:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 724:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("sev");
 725:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 726:Generated_Source\PSoC5/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")       /* This implementation gen
 727:Generated_Source\PSoC5/cmsis_gcc.h **** 
 728:Generated_Source\PSoC5/cmsis_gcc.h **** 
 729:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 730:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 731:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 732:Generated_Source\PSoC5/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 733:Generated_Source\PSoC5/cmsis_gcc.h ****            after the instruction has been completed.
 734:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 735:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __ISB(void)
 736:Generated_Source\PSoC5/cmsis_gcc.h **** {
 737:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 738:Generated_Source\PSoC5/cmsis_gcc.h **** }
 739:Generated_Source\PSoC5/cmsis_gcc.h **** 
 740:Generated_Source\PSoC5/cmsis_gcc.h **** 
 741:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 742:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 743:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 744:Generated_Source\PSoC5/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 745:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 746:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DSB(void)
 747:Generated_Source\PSoC5/cmsis_gcc.h **** {
 748:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 749:Generated_Source\PSoC5/cmsis_gcc.h **** }
 750:Generated_Source\PSoC5/cmsis_gcc.h **** 
 751:Generated_Source\PSoC5/cmsis_gcc.h **** 
 752:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 753:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Data Memory Barrier
 754:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 755:Generated_Source\PSoC5/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 756:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 757:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DMB(void)
 758:Generated_Source\PSoC5/cmsis_gcc.h **** {
 759:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 760:Generated_Source\PSoC5/cmsis_gcc.h **** }
 761:Generated_Source\PSoC5/cmsis_gcc.h **** 
 762:Generated_Source\PSoC5/cmsis_gcc.h **** 
 763:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 764:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 765:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Reverses the byte order in integer value.
 766:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 767:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Reversed value
 768:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 769:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV(uint32_t value)
 770:Generated_Source\PSoC5/cmsis_gcc.h **** {
 771:Generated_Source\PSoC5/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 772:Generated_Source\PSoC5/cmsis_gcc.h ****   return __builtin_bswap32(value);
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 23


 773:Generated_Source\PSoC5/cmsis_gcc.h **** #else
 774:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 775:Generated_Source\PSoC5/cmsis_gcc.h **** 
 776:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 777:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 778:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 779:Generated_Source\PSoC5/cmsis_gcc.h **** }
 780:Generated_Source\PSoC5/cmsis_gcc.h **** 
 781:Generated_Source\PSoC5/cmsis_gcc.h **** 
 782:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 783:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 784:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Reverses the byte order in two unsigned short values.
 785:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 786:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Reversed value
 787:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 788:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV16(uint32_t value)
 789:Generated_Source\PSoC5/cmsis_gcc.h **** {
 790:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 791:Generated_Source\PSoC5/cmsis_gcc.h **** 
 792:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 327              		.loc 2 792 0
 328 0348 BB69     		ldr	r3, [r7, #24]
 329              		.syntax unified
 330              	@ 792 "Generated_Source\PSoC5/cmsis_gcc.h" 1
 331 034a 5BBA     		rev16 r3, r3
 332              	@ 0 "" 2
 333              		.thumb
 334              		.syntax unified
 335 034c 7B61     		str	r3, [r7, #20]
 793:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 336              		.loc 2 793 0
 337 034e 7B69     		ldr	r3, [r7, #20]
 338              	.LBE13:
 339              	.LBE12:
 340              		.loc 1 156 0
 341 0350 9BB2     		uxth	r3, r3
 342 0352 1846     		mov	r0, r3
 343 0354 FFF7FEFF 		bl	infoGet
 157:..\src/command_processing.c ****             break;
 344              		.loc 1 157 0
 345 0358 D4E0     		b	.L1
 346              	.L7:
 158:..\src/command_processing.c **** 
 159:..\src/command_processing.c **** //============================================================     CMD_SET_PARAM
 160:..\src/command_processing.c **** 
 161:..\src/command_processing.c ****         case CMD_SET_ZEROS:
 162:..\src/command_processing.c ****             setZeros();
 347              		.loc 1 162 0
 348 035a FFF7FEFF 		bl	setZeros
 163:..\src/command_processing.c ****             break;
 349              		.loc 1 163 0
 350 035e D1E0     		b	.L1
 351              	.L14:
 164:..\src/command_processing.c **** 
 165:..\src/command_processing.c **** //============================================================     CMD_GET_PARAM
 166:..\src/command_processing.c **** 
 167:..\src/command_processing.c ****         case CMD_GET_PARAM_LIST:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 24


 168:..\src/command_processing.c ****             manage_param_list( __REV16(*((uint16 *) &g_rx.buffer[1])) );
 352              		.loc 1 168 0
 353 0360 0E4B     		ldr	r3, .L53+4
 354 0362 1B88     		ldrh	r3, [r3]
 355 0364 BB62     		str	r3, [r7, #40]
 356              	.LBB14:
 357              	.LBB15:
 792:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 358              		.loc 2 792 0
 359 0366 BB6A     		ldr	r3, [r7, #40]
 360              		.syntax unified
 361              	@ 792 "Generated_Source\PSoC5/cmsis_gcc.h" 1
 362 0368 5BBA     		rev16 r3, r3
 363              	@ 0 "" 2
 364              		.thumb
 365              		.syntax unified
 366 036a 3B61     		str	r3, [r7, #16]
 367              		.loc 2 793 0
 368 036c 3B69     		ldr	r3, [r7, #16]
 369              	.LBE15:
 370              	.LBE14:
 371              		.loc 1 168 0
 372 036e 9BB2     		uxth	r3, r3
 373 0370 1846     		mov	r0, r3
 374 0372 FFF7FEFF 		bl	manage_param_list
 169:..\src/command_processing.c ****             break;
 375              		.loc 1 169 0
 376 0376 C5E0     		b	.L1
 377              	.L5:
 170:..\src/command_processing.c **** 
 171:..\src/command_processing.c **** //=================================================================     CMD_PING
 172:..\src/command_processing.c ****             
 173:..\src/command_processing.c ****         case CMD_PING:
 174:..\src/command_processing.c ****             cmd_ping();
 378              		.loc 1 174 0
 379 0378 FFF7FEFF 		bl	cmd_ping
 175:..\src/command_processing.c ****             break;
 380              		.loc 1 175 0
 381 037c C2E0     		b	.L1
 382              	.L8:
 176:..\src/command_processing.c **** 
 177:..\src/command_processing.c **** //=========================================================     CMD_STORE_PARAMS
 178:..\src/command_processing.c ****             
 179:..\src/command_processing.c ****         case CMD_STORE_PARAMS:
 180:..\src/command_processing.c ****             cmd_store_params();
 383              		.loc 1 180 0
 384 037e FFF7FEFF 		bl	cmd_store_params
 181:..\src/command_processing.c ****             break;
 385              		.loc 1 181 0
 386 0382 BFE0     		b	.L1
 387              	.L9:
 182:..\src/command_processing.c **** 
 183:..\src/command_processing.c **** //=================================================     CMD_STORE_DEFAULT_PARAMS
 184:..\src/command_processing.c **** 
 185:..\src/command_processing.c ****         case CMD_STORE_DEFAULT_PARAMS:
 186:..\src/command_processing.c ****             if(memStore(DEFAULT_EEPROM_DISPLACEMENT))
 388              		.loc 1 186 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 25


 389 0384 3220     		movs	r0, #50
 390 0386 FFF7FEFF 		bl	memStore
 391 038a 0346     		mov	r3, r0
 392 038c 002B     		cmp	r3, #0
 393 038e 07D0     		beq	.L39
 187:..\src/command_processing.c ****                 sendAcknowledgment(ACK_OK);
 394              		.loc 1 187 0
 395 0390 0120     		movs	r0, #1
 396 0392 FFF7FEFF 		bl	sendAcknowledgment
 188:..\src/command_processing.c ****             else
 189:..\src/command_processing.c ****                 sendAcknowledgment(ACK_ERROR);
 190:..\src/command_processing.c ****             break;
 397              		.loc 1 190 0
 398 0396 B5E0     		b	.L1
 399              	.L54:
 400              		.align	2
 401              	.L53:
 402 0398 00000000 		.word	g_rx
 403 039c 01000000 		.word	g_rx+1
 404              	.L39:
 189:..\src/command_processing.c ****             break;
 405              		.loc 1 189 0
 406 03a0 0020     		movs	r0, #0
 407 03a2 FFF7FEFF 		bl	sendAcknowledgment
 408              		.loc 1 190 0
 409 03a6 ADE0     		b	.L1
 410              	.L10:
 191:..\src/command_processing.c **** 
 192:..\src/command_processing.c **** //=======================================================     CMD_RESTORE_PARAMS
 193:..\src/command_processing.c **** 
 194:..\src/command_processing.c ****         case CMD_RESTORE_PARAMS:
 195:..\src/command_processing.c ****             if(memRestore())
 411              		.loc 1 195 0
 412 03a8 FFF7FEFF 		bl	memRestore
 413 03ac 0346     		mov	r3, r0
 414 03ae 002B     		cmp	r3, #0
 415 03b0 03D0     		beq	.L41
 196:..\src/command_processing.c ****                 sendAcknowledgment(ACK_OK);
 416              		.loc 1 196 0
 417 03b2 0120     		movs	r0, #1
 418 03b4 FFF7FEFF 		bl	sendAcknowledgment
 197:..\src/command_processing.c ****             else
 198:..\src/command_processing.c ****                 sendAcknowledgment(ACK_ERROR);
 199:..\src/command_processing.c ****             break;
 419              		.loc 1 199 0
 420 03b8 A4E0     		b	.L1
 421              	.L41:
 198:..\src/command_processing.c ****             break;
 422              		.loc 1 198 0
 423 03ba 0020     		movs	r0, #0
 424 03bc FFF7FEFF 		bl	sendAcknowledgment
 425              		.loc 1 199 0
 426 03c0 A0E0     		b	.L1
 427              	.L13:
 200:..\src/command_processing.c **** 
 201:..\src/command_processing.c **** //=============================================================     CMD_INIT_MEM
 202:..\src/command_processing.c **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 26


 203:..\src/command_processing.c ****         case CMD_INIT_MEM:            
 204:..\src/command_processing.c ****             if(memInit())
 428              		.loc 1 204 0
 429 03c2 FFF7FEFF 		bl	memInit
 430 03c6 0346     		mov	r3, r0
 431 03c8 002B     		cmp	r3, #0
 432 03ca 03D0     		beq	.L43
 205:..\src/command_processing.c ****                 sendAcknowledgment(ACK_OK);
 433              		.loc 1 205 0
 434 03cc 0120     		movs	r0, #1
 435 03ce FFF7FEFF 		bl	sendAcknowledgment
 206:..\src/command_processing.c ****             else
 207:..\src/command_processing.c ****                 sendAcknowledgment(ACK_ERROR);
 208:..\src/command_processing.c ****             break;
 436              		.loc 1 208 0
 437 03d2 97E0     		b	.L1
 438              	.L43:
 207:..\src/command_processing.c ****             break;
 439              		.loc 1 207 0
 440 03d4 0020     		movs	r0, #0
 441 03d6 FFF7FEFF 		bl	sendAcknowledgment
 442              		.loc 1 208 0
 443 03da 93E0     		b	.L1
 444              	.L12:
 209:..\src/command_processing.c **** 
 210:..\src/command_processing.c **** //===========================================================     CMD_BOOTLOADER
 211:..\src/command_processing.c **** 
 212:..\src/command_processing.c ****         case CMD_BOOTLOADER:
 213:..\src/command_processing.c ****             //Not sure if ACK_OK is correct, should check
 214:..\src/command_processing.c ****             sendAcknowledgment(ACK_OK);
 445              		.loc 1 214 0
 446 03dc 0120     		movs	r0, #1
 447 03de FFF7FEFF 		bl	sendAcknowledgment
 215:..\src/command_processing.c ****             CyDelay(1000);
 448              		.loc 1 215 0
 449 03e2 4FF47A70 		mov	r0, #1000
 450 03e6 FFF7FEFF 		bl	CyDelay
 216:..\src/command_processing.c ****             FTDI_ENABLE_Write(0x00);
 451              		.loc 1 216 0
 452 03ea 0020     		movs	r0, #0
 453 03ec FFF7FEFF 		bl	FTDI_ENABLE_Write
 217:..\src/command_processing.c ****             CyDelay(1000);
 454              		.loc 1 217 0
 455 03f0 4FF47A70 		mov	r0, #1000
 456 03f4 FFF7FEFF 		bl	CyDelay
 218:..\src/command_processing.c ****             Bootloadable_Load();
 457              		.loc 1 218 0
 458 03f8 FFF7FEFF 		bl	Bootloadable_Load
 219:..\src/command_processing.c ****             break;
 459              		.loc 1 219 0
 460 03fc 82E0     		b	.L1
 461              	.L15:
 220:..\src/command_processing.c **** 
 221:..\src/command_processing.c **** //============================================================     CMD_HAND_CALIBRATE
 222:..\src/command_processing.c **** 
 223:..\src/command_processing.c ****         case CMD_HAND_CALIBRATE:
 224:..\src/command_processing.c ****             calib.speed = (int16)(g_rx.buffer[1]<<8 | g_rx.buffer[2]);
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 27


 462              		.loc 1 224 0
 463 03fe 434B     		ldr	r3, .L55
 464 0400 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 465 0402 1B02     		lsls	r3, r3, #8
 466 0404 1AB2     		sxth	r2, r3
 467 0406 414B     		ldr	r3, .L55
 468 0408 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 469 040a 1BB2     		sxth	r3, r3
 470 040c 1343     		orrs	r3, r3, r2
 471 040e 1AB2     		sxth	r2, r3
 472 0410 3F4B     		ldr	r3, .L55+4
 473 0412 5A80     		strh	r2, [r3, #2]	@ movhi
 225:..\src/command_processing.c ****             calib.repetitions = (int16)(g_rx.buffer[3]<<8 | g_rx.buffer[4]);
 474              		.loc 1 225 0
 475 0414 3D4B     		ldr	r3, .L55
 476 0416 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 477 0418 1B02     		lsls	r3, r3, #8
 478 041a 1AB2     		sxth	r2, r3
 479 041c 3B4B     		ldr	r3, .L55
 480 041e 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 481 0420 1BB2     		sxth	r3, r3
 482 0422 1343     		orrs	r3, r3, r2
 483 0424 1AB2     		sxth	r2, r3
 484 0426 3A4B     		ldr	r3, .L55+4
 485 0428 9A80     		strh	r2, [r3, #4]	@ movhi
 226:..\src/command_processing.c ****             
 227:..\src/command_processing.c ****             if(calib.speed == -1 && calib.repetitions == -1) {
 486              		.loc 1 227 0
 487 042a 394B     		ldr	r3, .L55+4
 488 042c B3F90230 		ldrsh	r3, [r3, #2]
 489 0430 B3F1FF3F 		cmp	r3, #-1
 490 0434 0FD1     		bne	.L45
 491              		.loc 1 227 0 is_stmt 0 discriminator 1
 492 0436 364B     		ldr	r3, .L55+4
 493 0438 B3F90430 		ldrsh	r3, [r3, #4]
 494 043c B3F1FF3F 		cmp	r3, #-1
 495 0440 09D1     		bne	.L45
 228:..\src/command_processing.c ****                 calib.enabled = FALSE;
 496              		.loc 1 228 0 is_stmt 1
 497 0442 334B     		ldr	r3, .L55+4
 498 0444 0022     		movs	r2, #0
 499 0446 1A70     		strb	r2, [r3]
 229:..\src/command_processing.c ****                 calib.speed = 0;
 500              		.loc 1 229 0
 501 0448 314B     		ldr	r3, .L55+4
 502 044a 0022     		movs	r2, #0
 503 044c 5A80     		strh	r2, [r3, #2]	@ movhi
 230:..\src/command_processing.c ****                 calib.repetitions = 0;
 504              		.loc 1 230 0
 505 044e 304B     		ldr	r3, .L55+4
 506 0450 0022     		movs	r2, #0
 507 0452 9A80     		strh	r2, [r3, #4]	@ movhi
 231:..\src/command_processing.c ****                 break;
 508              		.loc 1 231 0
 509 0454 56E0     		b	.L1
 510              	.L45:
 232:..\src/command_processing.c ****             }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 28


 233:..\src/command_processing.c ****             // Speed & repetitions saturations
 234:..\src/command_processing.c ****             if (calib.speed < 0) {
 511              		.loc 1 234 0
 512 0456 2E4B     		ldr	r3, .L55+4
 513 0458 B3F90230 		ldrsh	r3, [r3, #2]
 514 045c 002B     		cmp	r3, #0
 515 045e 03DA     		bge	.L46
 235:..\src/command_processing.c ****                 calib.speed = 0;
 516              		.loc 1 235 0
 517 0460 2B4B     		ldr	r3, .L55+4
 518 0462 0022     		movs	r2, #0
 519 0464 5A80     		strh	r2, [r3, #2]	@ movhi
 520 0466 07E0     		b	.L47
 521              	.L46:
 236:..\src/command_processing.c ****             } else if (calib.speed > 200) {
 522              		.loc 1 236 0
 523 0468 294B     		ldr	r3, .L55+4
 524 046a B3F90230 		ldrsh	r3, [r3, #2]
 525 046e C82B     		cmp	r3, #200
 526 0470 02DD     		ble	.L47
 237:..\src/command_processing.c ****                 calib.speed = 200;
 527              		.loc 1 237 0
 528 0472 274B     		ldr	r3, .L55+4
 529 0474 C822     		movs	r2, #200
 530 0476 5A80     		strh	r2, [r3, #2]	@ movhi
 531              	.L47:
 238:..\src/command_processing.c ****             }
 239:..\src/command_processing.c ****             if (calib.repetitions < 0) {
 532              		.loc 1 239 0
 533 0478 254B     		ldr	r3, .L55+4
 534 047a B3F90430 		ldrsh	r3, [r3, #4]
 535 047e 002B     		cmp	r3, #0
 536 0480 02DA     		bge	.L48
 240:..\src/command_processing.c ****                 calib.repetitions = 0;
 537              		.loc 1 240 0
 538 0482 234B     		ldr	r3, .L55+4
 539 0484 0022     		movs	r2, #0
 540 0486 9A80     		strh	r2, [r3, #4]	@ movhi
 541              	.L48:
 241:..\src/command_processing.c ****             } else if (calib.repetitions > 32767) {
 242:..\src/command_processing.c ****                 calib.repetitions = 32767;
 243:..\src/command_processing.c ****             }
 244:..\src/command_processing.c ****             
 245:..\src/command_processing.c ****             g_refNew[0].pos = 0;                    // SoftHand is on motor 1
 542              		.loc 1 245 0
 543 0488 224B     		ldr	r3, .L55+8
 544 048a 0022     		movs	r2, #0
 545 048c 1A60     		str	r2, [r3]
 246:..\src/command_processing.c ****             calib.enabled = TRUE;
 546              		.loc 1 246 0
 547 048e 204B     		ldr	r3, .L55+4
 548 0490 0122     		movs	r2, #1
 549 0492 1A70     		strb	r2, [r3]
 247:..\src/command_processing.c ****          
 248:..\src/command_processing.c ****             sendAcknowledgment(ACK_OK);
 550              		.loc 1 248 0
 551 0494 0120     		movs	r0, #1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 29


 552 0496 FFF7FEFF 		bl	sendAcknowledgment
 249:..\src/command_processing.c ****             break;
 553              		.loc 1 249 0
 554 049a 33E0     		b	.L1
 555              	.L29:
 250:..\src/command_processing.c ****             
 251:..\src/command_processing.c **** //=====================================================     CMD_GET_IMU_READINGS
 252:..\src/command_processing.c **** 
 253:..\src/command_processing.c ****         case CMD_GET_IMU_READINGS:
 254:..\src/command_processing.c ****             cmd_get_imu_readings();
 556              		.loc 1 254 0
 557 049c FFF7FEFF 		bl	cmd_get_imu_readings
 255:..\src/command_processing.c ****             break; 
 558              		.loc 1 255 0
 559 04a0 30E0     		b	.L1
 560              	.L30:
 256:..\src/command_processing.c ****             
 257:..\src/command_processing.c **** //=====================================================     CMD_GET_IMU_PARAM
 258:..\src/command_processing.c **** 
 259:..\src/command_processing.c ****         case CMD_GET_IMU_PARAM:
 260:..\src/command_processing.c ****             get_IMU_param_list( __REV16(*((uint16 *) &g_rx.buffer[1])) );
 561              		.loc 1 260 0
 562 04a2 1D4B     		ldr	r3, .L55+12
 563 04a4 1B88     		ldrh	r3, [r3]
 564 04a6 7B62     		str	r3, [r7, #36]
 565              	.LBB16:
 566              	.LBB17:
 792:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 567              		.loc 2 792 0
 568 04a8 7B6A     		ldr	r3, [r7, #36]
 569              		.syntax unified
 570              	@ 792 "Generated_Source\PSoC5/cmsis_gcc.h" 1
 571 04aa 5BBA     		rev16 r3, r3
 572              	@ 0 "" 2
 573              		.thumb
 574              		.syntax unified
 575 04ac FB60     		str	r3, [r7, #12]
 576              		.loc 2 793 0
 577 04ae FB68     		ldr	r3, [r7, #12]
 578              	.LBE17:
 579              	.LBE16:
 580              		.loc 1 260 0
 581 04b0 9BB2     		uxth	r3, r3
 582 04b2 1846     		mov	r0, r3
 583 04b4 FFF7FEFF 		bl	get_IMU_param_list
 261:..\src/command_processing.c ****             break;             
 584              		.loc 1 261 0
 585 04b8 24E0     		b	.L1
 586              	.L31:
 262:..\src/command_processing.c ****             
 263:..\src/command_processing.c **** //=====================================================     CMD_GET_ENCODER_CONF
 264:..\src/command_processing.c **** 
 265:..\src/command_processing.c ****         case CMD_GET_ENCODER_CONF:
 266:..\src/command_processing.c ****             cmd_get_encoder_map();
 587              		.loc 1 266 0
 588 04ba FFF7FEFF 		bl	cmd_get_encoder_map
 267:..\src/command_processing.c ****             break; 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 30


 589              		.loc 1 267 0
 590 04be 21E0     		b	.L1
 591              	.L32:
 268:..\src/command_processing.c **** 
 269:..\src/command_processing.c **** //=====================================================     CMD_GET_ENCODER_RAW
 270:..\src/command_processing.c **** 
 271:..\src/command_processing.c ****         case CMD_GET_ENCODER_RAW:
 272:..\src/command_processing.c ****             cmd_get_encoder_raw();
 592              		.loc 1 272 0
 593 04c0 FFF7FEFF 		bl	cmd_get_encoder_raw
 273:..\src/command_processing.c ****             break; 
 594              		.loc 1 273 0
 595 04c4 1EE0     		b	.L1
 596              	.L33:
 274:..\src/command_processing.c **** 
 275:..\src/command_processing.c **** //=====================================================     CMD_GET_ADC_CONF
 276:..\src/command_processing.c **** 
 277:..\src/command_processing.c ****         case CMD_GET_ADC_CONF:
 278:..\src/command_processing.c ****             cmd_get_ADC_map();
 597              		.loc 1 278 0
 598 04c6 FFF7FEFF 		bl	cmd_get_ADC_map
 279:..\src/command_processing.c ****             break; 
 599              		.loc 1 279 0
 600 04ca 1BE0     		b	.L1
 601              	.L34:
 280:..\src/command_processing.c ****             
 281:..\src/command_processing.c **** //=====================================================     CMD_GET_ADC_RAW
 282:..\src/command_processing.c **** 
 283:..\src/command_processing.c ****         case CMD_GET_ADC_RAW:
 284:..\src/command_processing.c ****             cmd_get_ADC_raw();
 602              		.loc 1 284 0
 603 04cc FFF7FEFF 		bl	cmd_get_ADC_raw
 285:..\src/command_processing.c ****             break; 
 604              		.loc 1 285 0
 605 04d0 18E0     		b	.L1
 606              	.L35:
 286:..\src/command_processing.c ****             
 287:..\src/command_processing.c **** //=====================================================     CMD_GET_SD_SINGLE_FILE
 288:..\src/command_processing.c **** 
 289:..\src/command_processing.c ****         case CMD_GET_SD_SINGLE_FILE:
 290:..\src/command_processing.c ****             cmd_get_SD_file( __REV16(*((uint16 *) &g_rx.buffer[1])) );
 607              		.loc 1 290 0
 608 04d2 114B     		ldr	r3, .L55+12
 609 04d4 1B88     		ldrh	r3, [r3]
 610 04d6 3B62     		str	r3, [r7, #32]
 611              	.LBB18:
 612              	.LBB19:
 792:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 613              		.loc 2 792 0
 614 04d8 3B6A     		ldr	r3, [r7, #32]
 615              		.syntax unified
 616              	@ 792 "Generated_Source\PSoC5/cmsis_gcc.h" 1
 617 04da 5BBA     		rev16 r3, r3
 618              	@ 0 "" 2
 619              		.thumb
 620              		.syntax unified
 621 04dc BB60     		str	r3, [r7, #8]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 31


 622              		.loc 2 793 0
 623 04de BB68     		ldr	r3, [r7, #8]
 624              	.LBE19:
 625              	.LBE18:
 626              		.loc 1 290 0
 627 04e0 9BB2     		uxth	r3, r3
 628 04e2 1846     		mov	r0, r3
 629 04e4 FFF7FEFF 		bl	cmd_get_SD_file
 291:..\src/command_processing.c ****             break;   
 630              		.loc 1 291 0
 631 04e8 0CE0     		b	.L1
 632              	.L36:
 292:..\src/command_processing.c ****             
 293:..\src/command_processing.c **** //=====================================================     CMD_REMOVE_SD_SINGLE_FILE
 294:..\src/command_processing.c **** 
 295:..\src/command_processing.c ****         case CMD_REMOVE_SD_SINGLE_FILE:
 296:..\src/command_processing.c ****             cmd_remove_SD_file( __REV16(*((uint16 *) &g_rx.buffer[1])) );
 633              		.loc 1 296 0
 634 04ea 0B4B     		ldr	r3, .L55+12
 635 04ec 1B88     		ldrh	r3, [r3]
 636 04ee FB61     		str	r3, [r7, #28]
 637              	.LBB20:
 638              	.LBB21:
 792:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 639              		.loc 2 792 0
 640 04f0 FB69     		ldr	r3, [r7, #28]
 641              		.syntax unified
 642              	@ 792 "Generated_Source\PSoC5/cmsis_gcc.h" 1
 643 04f2 5BBA     		rev16 r3, r3
 644              	@ 0 "" 2
 645              		.thumb
 646              		.syntax unified
 647 04f4 7B60     		str	r3, [r7, #4]
 648              		.loc 2 793 0
 649 04f6 7B68     		ldr	r3, [r7, #4]
 650              	.LBE21:
 651              	.LBE20:
 652              		.loc 1 296 0
 653 04f8 9BB2     		uxth	r3, r3
 654 04fa 1846     		mov	r0, r3
 655 04fc FFF7FEFF 		bl	cmd_remove_SD_file
 297:..\src/command_processing.c ****             break;               
 656              		.loc 1 297 0
 657 0500 00E0     		b	.L1
 658              	.L52:
 298:..\src/command_processing.c ****             
 299:..\src/command_processing.c **** //=========================================================== ALL OTHER COMMANDS
 300:..\src/command_processing.c ****         default:
 301:..\src/command_processing.c ****             break;
 659              		.loc 1 301 0
 660 0502 00BF     		nop
 661              	.L1:
 302:..\src/command_processing.c **** 
 303:..\src/command_processing.c ****     }
 304:..\src/command_processing.c **** }  
 662              		.loc 1 304 0
 663 0504 3037     		adds	r7, r7, #48
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 32


 664              		.cfi_def_cfa_offset 8
 665 0506 BD46     		mov	sp, r7
 666              		.cfi_def_cfa_register 13
 667              		@ sp needed
 668 0508 80BD     		pop	{r7, pc}
 669              	.L56:
 670 050a 00BF     		.align	2
 671              	.L55:
 672 050c 00000000 		.word	g_rx
 673 0510 00000000 		.word	calib
 674 0514 00000000 		.word	g_refNew
 675 0518 01000000 		.word	g_rx+1
 676              		.cfi_endproc
 677              	.LFE64:
 678              		.size	commProcess, .-commProcess
 679              		.section	.text.infoSend,"ax",%progbits
 680              		.align	2
 681              		.global	infoSend
 682              		.thumb
 683              		.thumb_func
 684              		.type	infoSend, %function
 685              	infoSend:
 686              	.LFB65:
 305:..\src/command_processing.c **** 
 306:..\src/command_processing.c **** //==============================================================================
 307:..\src/command_processing.c **** //                                                                     INFO SEND
 308:..\src/command_processing.c **** //==============================================================================
 309:..\src/command_processing.c **** 
 310:..\src/command_processing.c **** void infoSend(void){
 687              		.loc 1 310 0
 688              		.cfi_startproc
 689              		@ args = 0, pretend = 0, frame = 1504
 690              		@ frame_needed = 1, uses_anonymous_args = 0
 691 0000 80B5     		push	{r7, lr}
 692              		.cfi_def_cfa_offset 8
 693              		.cfi_offset 7, -8
 694              		.cfi_offset 14, -4
 695 0002 ADF5BC6D 		sub	sp, sp, #1504
 696              		.cfi_def_cfa_offset 1512
 697 0006 00AF     		add	r7, sp, #0
 698              		.cfi_def_cfa_register 7
 311:..\src/command_processing.c ****     char packet_string[1500];
 312:..\src/command_processing.c ****     
 313:..\src/command_processing.c ****     prepare_generic_info(packet_string);
 699              		.loc 1 313 0
 700 0008 3B1D     		adds	r3, r7, #4
 701 000a 1846     		mov	r0, r3
 702 000c FFF7FEFF 		bl	prepare_generic_info
 314:..\src/command_processing.c ****     UART_RS485_PutString(packet_string);
 703              		.loc 1 314 0
 704 0010 3B1D     		adds	r3, r7, #4
 705 0012 1846     		mov	r0, r3
 706 0014 FFF7FEFF 		bl	UART_RS485_PutString
 315:..\src/command_processing.c **** }
 707              		.loc 1 315 0
 708 0018 00BF     		nop
 709 001a 07F5BC67 		add	r7, r7, #1504
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 33


 710              		.cfi_def_cfa_offset 8
 711 001e BD46     		mov	sp, r7
 712              		.cfi_def_cfa_register 13
 713              		@ sp needed
 714 0020 80BD     		pop	{r7, pc}
 715              		.cfi_endproc
 716              	.LFE65:
 717              		.size	infoSend, .-infoSend
 718 0022 00BF     		.section	.text.infoGet,"ax",%progbits
 719              		.align	2
 720              		.global	infoGet
 721              		.thumb
 722              		.thumb_func
 723              		.type	infoGet, %function
 724              	infoGet:
 725              	.LFB66:
 316:..\src/command_processing.c **** 
 317:..\src/command_processing.c **** 
 318:..\src/command_processing.c **** //==============================================================================
 319:..\src/command_processing.c **** //                                                              COMMAND GET INFO
 320:..\src/command_processing.c **** //==============================================================================
 321:..\src/command_processing.c **** 
 322:..\src/command_processing.c **** void infoGet(uint16 info_type) {
 726              		.loc 1 322 0
 727              		.cfi_startproc
 728              		@ args = 0, pretend = 0, frame = 24008
 729              		@ frame_needed = 1, uses_anonymous_args = 0
 730 0000 80B5     		push	{r7, lr}
 731              		.cfi_def_cfa_offset 8
 732              		.cfi_offset 7, -8
 733              		.cfi_offset 14, -4
 734 0002 ADF5BB4D 		sub	sp, sp, #23936
 735              		.cfi_def_cfa_offset 23944
 736 0006 92B0     		sub	sp, sp, #72
 737              		.cfi_def_cfa_offset 24016
 738 0008 00AF     		add	r7, sp, #0
 739              		.cfi_def_cfa_register 7
 740 000a 0246     		mov	r2, r0
 741 000c 07F14803 		add	r3, r7, #72
 742 0010 423B     		subs	r3, r3, #66
 743 0012 1A80     		strh	r2, [r3]	@ movhi
 323:..\src/command_processing.c ****     char CYDATA packet_string[4000] = "";
 744              		.loc 1 323 0
 745 0014 07F59C43 		add	r3, r7, #19968
 746 0018 03F12803 		add	r3, r3, #40
 747 001c 0022     		movs	r2, #0
 748 001e 1A60     		str	r2, [r3]
 749 0020 0433     		adds	r3, r3, #4
 750 0022 40F69C72 		movw	r2, #3996
 751 0026 0021     		movs	r1, #0
 752 0028 1846     		mov	r0, r3
 753 002a FFF7FEFF 		bl	memset
 324:..\src/command_processing.c ****     char CYDATA str_sd_data[20000] = "";
 754              		.loc 1 324 0
 755 002e 07F14803 		add	r3, r7, #72
 756 0032 403B     		subs	r3, r3, #64
 757 0034 0022     		movs	r2, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 34


 758 0036 1A60     		str	r2, [r3]
 759 0038 0433     		adds	r3, r3, #4
 760 003a 44F61C62 		movw	r2, #19996
 761 003e 0021     		movs	r1, #0
 762 0040 1846     		mov	r0, r3
 763 0042 FFF7FEFF 		bl	memset
 325:..\src/command_processing.c ****     //==================================     choose info type and prepare string
 326:..\src/command_processing.c **** 
 327:..\src/command_processing.c ****     switch (info_type) {
 764              		.loc 1 327 0
 765 0046 07F14803 		add	r3, r7, #72
 766 004a 423B     		subs	r3, r3, #66
 767 004c 1B88     		ldrh	r3, [r3]
 768 004e 062B     		cmp	r3, #6
 769 0050 7DD8     		bhi	.L69
 770 0052 01A2     		adr	r2, .L61
 771 0054 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 772              		.p2align 2
 773              	.L61:
 774 0058 75000000 		.word	.L60+1
 775 005c 97000000 		.word	.L62+1
 776 0060 B9000000 		.word	.L63+1
 777 0064 E1000000 		.word	.L64+1
 778 0068 03010000 		.word	.L65+1
 779 006c 21010000 		.word	.L66+1
 780 0070 27010000 		.word	.L67+1
 781              		.p2align 1
 782              	.L60:
 328:..\src/command_processing.c ****         case INFO_ALL:
 329:..\src/command_processing.c ****             prepare_generic_info(packet_string);
 783              		.loc 1 329 0
 784 0074 07F59C43 		add	r3, r7, #19968
 785 0078 03F12803 		add	r3, r3, #40
 786 007c 1846     		mov	r0, r3
 787 007e FFF7FEFF 		bl	prepare_generic_info
 330:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer(); 
 788              		.loc 1 330 0
 789 0082 FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 331:..\src/command_processing.c ****             UART_RS485_PutString(packet_string);
 790              		.loc 1 331 0
 791 0086 07F59C43 		add	r3, r7, #19968
 792 008a 03F12803 		add	r3, r3, #40
 793 008e 1846     		mov	r0, r3
 794 0090 FFF7FEFF 		bl	UART_RS485_PutString
 332:..\src/command_processing.c ****             break;
 795              		.loc 1 332 0
 796 0094 5CE0     		b	.L68
 797              	.L62:
 333:..\src/command_processing.c ****         case CYCLES_INFO:
 334:..\src/command_processing.c ****             prepare_counter_info(packet_string);
 798              		.loc 1 334 0
 799 0096 07F59C43 		add	r3, r7, #19968
 800 009a 03F12803 		add	r3, r3, #40
 801 009e 1846     		mov	r0, r3
 802 00a0 FFF7FEFF 		bl	prepare_counter_info
 335:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 803              		.loc 1 335 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 35


 804 00a4 FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 336:..\src/command_processing.c ****             UART_RS485_PutString(packet_string);
 805              		.loc 1 336 0
 806 00a8 07F59C43 		add	r3, r7, #19968
 807 00ac 03F12803 		add	r3, r3, #40
 808 00b0 1846     		mov	r0, r3
 809 00b2 FFF7FEFF 		bl	UART_RS485_PutString
 337:..\src/command_processing.c ****             break;
 810              		.loc 1 337 0
 811 00b6 4BE0     		b	.L68
 812              	.L63:
 338:..\src/command_processing.c ****         case GET_SD_PARAM:
 339:..\src/command_processing.c ****             Read_SD_Closed_File(sdParam, packet_string, sizeof(packet_string));
 813              		.loc 1 339 0
 814 00b8 07F59C43 		add	r3, r7, #19968
 815 00bc 03F12803 		add	r3, r3, #40
 816 00c0 4FF47A62 		mov	r2, #4000
 817 00c4 1946     		mov	r1, r3
 818 00c6 2548     		ldr	r0, .L70
 819 00c8 FFF7FEFF 		bl	Read_SD_Closed_File
 340:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 820              		.loc 1 340 0
 821 00cc FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 341:..\src/command_processing.c ****             UART_RS485_PutString(packet_string);
 822              		.loc 1 341 0
 823 00d0 07F59C43 		add	r3, r7, #19968
 824 00d4 03F12803 		add	r3, r3, #40
 825 00d8 1846     		mov	r0, r3
 826 00da FFF7FEFF 		bl	UART_RS485_PutString
 342:..\src/command_processing.c ****             break;
 827              		.loc 1 342 0
 828 00de 37E0     		b	.L68
 829              	.L64:
 343:..\src/command_processing.c ****         case GET_SD_DATA:
 344:..\src/command_processing.c ****             Read_SD_Current_Data(str_sd_data, sizeof(str_sd_data));
 830              		.loc 1 344 0
 831 00e0 07F14803 		add	r3, r7, #72
 832 00e4 403B     		subs	r3, r3, #64
 833 00e6 44F62061 		movw	r1, #20000
 834 00ea 1846     		mov	r0, r3
 835 00ec FFF7FEFF 		bl	Read_SD_Current_Data
 345:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 836              		.loc 1 345 0
 837 00f0 FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 346:..\src/command_processing.c ****             UART_RS485_PutString(str_sd_data);
 838              		.loc 1 346 0
 839 00f4 07F14803 		add	r3, r7, #72
 840 00f8 403B     		subs	r3, r3, #64
 841 00fa 1846     		mov	r0, r3
 842 00fc FFF7FEFF 		bl	UART_RS485_PutString
 347:..\src/command_processing.c ****             break;
 843              		.loc 1 347 0
 844 0100 26E0     		b	.L68
 845              	.L65:
 348:..\src/command_processing.c ****         case GET_SD_FS_TREE:
 349:..\src/command_processing.c ****             Get_SD_FS(str_sd_data);
 846              		.loc 1 349 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 36


 847 0102 07F14803 		add	r3, r7, #72
 848 0106 403B     		subs	r3, r3, #64
 849 0108 1846     		mov	r0, r3
 850 010a FFF7FEFF 		bl	Get_SD_FS
 350:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 851              		.loc 1 350 0
 852 010e FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 351:..\src/command_processing.c ****             UART_RS485_PutString(str_sd_data);
 853              		.loc 1 351 0
 854 0112 07F14803 		add	r3, r7, #72
 855 0116 403B     		subs	r3, r3, #64
 856 0118 1846     		mov	r0, r3
 857 011a FFF7FEFF 		bl	UART_RS485_PutString
 352:..\src/command_processing.c ****             break;
 858              		.loc 1 352 0
 859 011e 17E0     		b	.L68
 860              	.L66:
 353:..\src/command_processing.c ****         case GET_SD_EMG_HIST:
 354:..\src/command_processing.c ****             // Send every single byte inside the function, since it could be a large file to send
 355:..\src/command_processing.c ****             Read_SD_EMG_History_Data();
 861              		.loc 1 355 0
 862 0120 FFF7FEFF 		bl	Read_SD_EMG_History_Data
 356:..\src/command_processing.c ****             break;
 863              		.loc 1 356 0
 864 0124 14E0     		b	.L68
 865              	.L67:
 357:..\src/command_processing.c ****         case GET_SD_R01_SUMM:
 358:..\src/command_processing.c ****             Read_SD_Closed_File(sdR01File, packet_string, sizeof(packet_string));
 866              		.loc 1 358 0
 867 0126 07F59C43 		add	r3, r7, #19968
 868 012a 03F12803 		add	r3, r3, #40
 869 012e 4FF47A62 		mov	r2, #4000
 870 0132 1946     		mov	r1, r3
 871 0134 0A48     		ldr	r0, .L70+4
 872 0136 FFF7FEFF 		bl	Read_SD_Closed_File
 359:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 873              		.loc 1 359 0
 874 013a FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 360:..\src/command_processing.c ****             UART_RS485_PutString(packet_string);
 875              		.loc 1 360 0
 876 013e 07F59C43 		add	r3, r7, #19968
 877 0142 03F12803 		add	r3, r3, #40
 878 0146 1846     		mov	r0, r3
 879 0148 FFF7FEFF 		bl	UART_RS485_PutString
 361:..\src/command_processing.c ****             break;            
 880              		.loc 1 361 0
 881 014c 00E0     		b	.L68
 882              	.L69:
 362:..\src/command_processing.c ****         default:
 363:..\src/command_processing.c ****             break;
 883              		.loc 1 363 0
 884 014e 00BF     		nop
 885              	.L68:
 364:..\src/command_processing.c ****     }
 365:..\src/command_processing.c **** }
 886              		.loc 1 365 0 discriminator 1
 887 0150 00BF     		nop
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 37


 888 0152 07F5BB47 		add	r7, r7, #23936
 889 0156 4837     		adds	r7, r7, #72
 890              		.cfi_def_cfa_offset 8
 891 0158 BD46     		mov	sp, r7
 892              		.cfi_def_cfa_register 13
 893              		@ sp needed
 894 015a 80BD     		pop	{r7, pc}
 895              	.L71:
 896              		.align	2
 897              	.L70:
 898 015c 00000000 		.word	sdParam
 899 0160 00000000 		.word	sdR01File
 900              		.cfi_endproc
 901              	.LFE66:
 902              		.size	infoGet, .-infoGet
 903              		.global	__aeabi_i2f
 904              		.global	__aeabi_fdiv
 905              		.section	.rodata
 906              		.align	2
 907              	.LC88:
 908 0000 20557362 		.ascii	" Usb\000"
 908      00
 909 0005 000000   		.align	2
 910              	.LC89:
 911 0008 2048616E 		.ascii	" Handle\000"
 911      646C6500 
 912              		.align	2
 913              	.LC90:
 914 0010 20454D47 		.ascii	" EMG proportional\000"
 914      2070726F 
 914      706F7274 
 914      696F6E61 
 914      6C00
 915 0022 0000     		.align	2
 916              	.LC91:
 917 0024 20454D47 		.ascii	" EMG integral\000"
 917      20696E74 
 917      65677261 
 917      6C00
 918 0032 0000     		.align	2
 919              	.LC92:
 920 0034 20454D47 		.ascii	" EMG FCFS\000"
 920      20464346 
 920      5300
 921 003e 0000     		.align	2
 922              	.LC93:
 923 0040 20454D47 		.ascii	" EMG FCFS Advanced\000"
 923      20464346 
 923      53204164 
 923      76616E63 
 923      656400
 924 0053 00       		.align	2
 925              	.LC94:
 926 0054 204A6F79 		.ascii	" Joystick\000"
 926      73746963 
 926      6B00
 927 005e 0000     		.align	2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 38


 928              	.LC95:
 929 0060 20454D47 		.ascii	" EMG proportional Normally Closed\000"
 929      2070726F 
 929      706F7274 
 929      696F6E61 
 929      6C204E6F 
 930 0082 0000     		.align	2
 931              	.LC96:
 932 0084 20506F73 		.ascii	" Position\000"
 932      6974696F 
 932      6E00
 933 008e 0000     		.align	2
 934              	.LC97:
 935 0090 2050574D 		.ascii	" PWM\000"
 935      00
 936 0095 000000   		.align	2
 937              	.LC98:
 938 0098 20437572 		.ascii	" Current\000"
 938      72656E74 
 938      00
 939 00a1 000000   		.align	2
 940              	.LC99:
 941 00a4 20506F73 		.ascii	" Position and Current\000"
 941      6974696F 
 941      6E20616E 
 941      64204375 
 941      7272656E 
 942 00ba 0000     		.align	2
 943              	.LC100:
 944 00bc 20594553 		.ascii	" YES\000\000"
 944      0000
 945 00c2 0000     		.align	2
 946              	.LC101:
 947 00c4 204E4F00 		.ascii	" NO\000\000"
 947      00
 948 00c9 000000   		.align	2
 949              	.LC102:
 950 00cc 20526967 		.ascii	" Right\000\000"
 950      68740000 
 951              		.align	2
 952              	.LC103:
 953 00d4 204C6566 		.ascii	" Left\000\000"
 953      740000
 954 00db 00       		.align	2
 955              	.LC104:
 956 00dc 204F4646 		.ascii	" OFF\000\000"
 956      0000
 957 00e2 0000     		.align	2
 958              	.LC105:
 959 00e4 204F4E00 		.ascii	" ON\000\000"
 959      00
 960 00e9 000000   		.align	2
 961              	.LC106:
 962 00ec 204E6F6E 		.ascii	" None\000\000"
 962      650000
 963 00f3 00       		.align	2
 964              	.LC107:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 39


 965 00f4 2053442F 		.ascii	" SD/RTC board\000\000"
 965      52544320 
 965      626F6172 
 965      640000
 966 0103 00       		.align	2
 967              	.LC108:
 968 0104 20576946 		.ascii	" WiFi board [N/A]\000\000"
 968      6920626F 
 968      61726420 
 968      5B4E2F41 
 968      5D0000
 969 0117 00       		.align	2
 970              	.LC109:
 971 0118 204F7468 		.ascii	" Other [N/A]\000\000"
 971      6572205B 
 971      4E2F415D 
 971      0000
 972 0126 0000     		.align	2
 973              	.LC110:
 974 0128 204C6F77 		.ascii	" Low\000\000"
 974      0000
 975 012e 0000     		.align	2
 976              	.LC111:
 977 0130 20486967 		.ascii	" High\000\000"
 977      680000
 978 0137 00       		.align	2
 979              	.LC112:
 980 0138 2047454E 		.ascii	" GENERIC USER\000\000"
 980      45524943 
 980      20555345 
 980      520000
 981 0147 00       		.align	2
 982              	.LC113:
 983 0148 204D4152 		.ascii	" MARIA\000\000"
 983      49410000 
 984              		.align	2
 985              	.LC114:
 986 0150 20523031 		.ascii	" R01\000\000"
 986      0000
 987 0156 0000     		.align	2
 988              	.LC115:
 989 0158 20333020 		.ascii	" 30 Hz\000\000"
 989      487A0000 
 990              		.align	2
 991              	.LC116:
 992 0160 20313030 		.ascii	" 100 Hz\000\000"
 992      20487A00 
 992      00
 993 0169 000000   		.align	2
 994              	.LC117:
 995 016c 20333030 		.ascii	" 300 Hz\000\000"
 995      20487A00 
 995      00
 996 0175 000000   		.align	2
 997              	.LC118:
 998 0178 2031204B 		.ascii	" 1 KHz\000\000"
 998      487A0000 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 40


 999              		.align	2
 1000              	.LC119:
 1001 0180 2033204B 		.ascii	" 3 KHz\000\000"
 1001      487A0000 
 1002              		.align	2
 1003              	.LC120:
 1004 0188 20534F46 		.ascii	" SOFTHAND PRO\000\000"
 1004      5448414E 
 1004      44205052 
 1004      4F0000
 1005 0197 00       		.align	2
 1006              	.LC121:
 1007 0198 2047454E 		.ascii	" GENERIC 2 MOTORS\000\000"
 1007      45524943 
 1007      2032204D 
 1007      4F544F52 
 1007      530000
 1008 01ab 00       		.align	2
 1009              	.LC122:
 1010 01ac 20414952 		.ascii	" AIR CHAMBERS\000\000"
 1010      20434841 
 1010      4D424552 
 1010      530000
 1011 01bb 00       		.align	2
 1012              	.LC123:
 1013 01bc 204F5454 		.ascii	" OTTOBOCK WRIST\000\000"
 1013      4F424F43 
 1013      4B205752 
 1013      49535400 
 1013      00
 1014 01cd 000000   		.align	2
 1015              	.LC124:
 1016 01d0 20534F46 		.ascii	" SOFTHAND 2 MOTORS\000\000"
 1016      5448414E 
 1016      44203220 
 1016      4D4F544F 
 1016      52530000 
 1017              		.align	2
 1018              	.LC125:
 1019 01e4 20466173 		.ascii	" Fast:syn2, Slow:syn1\000\000"
 1019      743A7379 
 1019      6E322C20 
 1019      536C6F77 
 1019      3A73796E 
 1020 01fb 00       		.align	2
 1021              	.LC126:
 1022 01fc 20466173 		.ascii	" Fast:wrist,Slow:hand\000\000"
 1022      743A7772 
 1022      6973742C 
 1022      536C6F77 
 1022      3A68616E 
 1023 0213 00       		.align	2
 1024              	.LC127:
 1025 0214 20536C6F 		.ascii	" Slow:syn2, Fast:syn1\000\000"
 1025      773A7379 
 1025      6E322C20 
 1025      46617374 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 41


 1025      3A73796E 
 1026 022b 00       		.align	2
 1027              	.LC128:
 1028 022c 20536C6F 		.ascii	" Slow:wrist,Fast:hand\000\000"
 1028      773A7772 
 1028      6973742C 
 1028      46617374 
 1028      3A68616E 
 1029 0243 00       		.align	2
 1030              	.LC129:
 1031 0244 20436C6F 		.ascii	" Close:CW, Open:CCW\000\000"
 1031      73653A43 
 1031      572C204F 
 1031      70656E3A 
 1031      43435700 
 1032 0259 000000   		.align	2
 1033              	.LC130:
 1034 025c 20436C6F 		.ascii	" Close:CCW, Open:CW\000\000"
 1034      73653A43 
 1034      43572C20 
 1034      4F70656E 
 1034      3A435700 
 1035              		.section	.text.get_param_list,"ax",%progbits
 1036              		.align	2
 1037              		.global	get_param_list
 1038              		.thumb
 1039              		.thumb_func
 1040              		.type	get_param_list, %function
 1041              	get_param_list:
 1042              	.LFB67:
 366:..\src/command_processing.c **** 
 367:..\src/command_processing.c **** 
 368:..\src/command_processing.c **** //==============================================================================
 369:..\src/command_processing.c **** //                                                                GET PARAM LIST
 370:..\src/command_processing.c **** //==============================================================================
 371:..\src/command_processing.c **** 
 372:..\src/command_processing.c **** void get_param_list (uint8* VAR_P[NUM_OF_PARAMS], uint8 TYPES[NUM_OF_PARAMS], 
 373:..\src/command_processing.c ****                      uint8 NUM_ITEMS[NUM_OF_PARAMS], uint8 NUM_STRUCT[NUM_OF_PARAMS],
 374:..\src/command_processing.c ****                      uint8* NUM_MENU, const char* PARAMS_STR[NUM_OF_PARAMS], 
 375:..\src/command_processing.c ****                      uint8 CUSTOM_PARAM_GET[NUM_OF_PARAMS], const char* MENU_STR[NUM_OF_PARAMS_MENU
 1043              		.loc 1 375 0
 1044              		.cfi_startproc
 1045              		@ args = 16, pretend = 0, frame = 4904
 1046              		@ frame_needed = 1, uses_anonymous_args = 0
 1047 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1048              		.cfi_def_cfa_offset 20
 1049              		.cfi_offset 4, -20
 1050              		.cfi_offset 5, -16
 1051              		.cfi_offset 6, -12
 1052              		.cfi_offset 7, -8
 1053              		.cfi_offset 14, -4
 1054 0002 ADF5995D 		sub	sp, sp, #4896
 1055              		.cfi_def_cfa_offset 4916
 1056 0006 83B0     		sub	sp, sp, #12
 1057              		.cfi_def_cfa_offset 4928
 1058 0008 00AF     		add	r7, sp, #0
 1059              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 42


 1060 000a 07F12804 		add	r4, r7, #40
 1061 000e 1C3C     		subs	r4, r4, #28
 1062 0010 2060     		str	r0, [r4]
 1063 0012 07F10800 		add	r0, r7, #8
 1064 0016 0160     		str	r1, [r0]
 1065 0018 07F10801 		add	r1, r7, #8
 1066 001c 0439     		subs	r1, r1, #4
 1067 001e 0A60     		str	r2, [r1]
 1068 0020 07F10802 		add	r2, r7, #8
 1069 0024 083A     		subs	r2, r2, #8
 1070 0026 1360     		str	r3, [r2]
 376:..\src/command_processing.c ****     
 377:..\src/command_processing.c ****     //Package to be sent variables
 378:..\src/command_processing.c ****     uint8 packet_data[PARAM_BYTE_SLOT*NUM_OF_DEV_PARAMS + PARAM_MENU_SLOT*NUM_OF_DEV_PARAM_MENUS + 
 1071              		.loc 1 378 0
 1072 0028 07F16803 		add	r3, r7, #104
 1073 002c 143B     		subs	r3, r3, #20
 1074 002e 0022     		movs	r2, #0
 1075 0030 1A60     		str	r2, [r3]
 1076 0032 0433     		adds	r3, r3, #4
 1077 0034 41F2BC22 		movw	r2, #4796
 1078 0038 0021     		movs	r1, #0
 1079 003a 1846     		mov	r0, r3
 1080 003c FFF7FEFF 		bl	memset
 379:..\src/command_processing.c ****     uint16 packet_lenght = PARAM_BYTE_SLOT*NUM_OF_DEV_PARAMS + PARAM_MENU_SLOT*NUM_OF_DEV_PARAM_MEN
 1081              		.loc 1 379 0
 1082 0040 4FF49653 		mov	r3, #4800
 1083 0044 07F59952 		add	r2, r7, #4896
 1084 0048 1380     		strh	r3, [r2]	@ movhi
 380:..\src/command_processing.c **** 
 381:..\src/command_processing.c ****     //Auxiliary variables
 382:..\src/command_processing.c ****     uint8 CYDATA i, j;
 383:..\src/command_processing.c ****     uint8 CYDATA idx = 0;       //Parameter number
 1085              		.loc 1 383 0
 1086 004a 0023     		movs	r3, #0
 1087 004c 07F59952 		add	r2, r7, #4896
 1088 0050 02F10502 		add	r2, r2, #5
 1089 0054 1370     		strb	r3, [r2]
 384:..\src/command_processing.c ****     uint8 CYDATA idx_menu = 0;
 1090              		.loc 1 384 0
 1091 0056 0023     		movs	r3, #0
 1092 0058 07F59952 		add	r2, r7, #4896
 1093 005c 02F10402 		add	r2, r2, #4
 1094 0060 1370     		strb	r3, [r2]
 385:..\src/command_processing.c ****     uint8 CYDATA sod = 0;       //sizeof data
 1095              		.loc 1 385 0
 1096 0062 0023     		movs	r3, #0
 1097 0064 07F59952 		add	r2, r7, #4896
 1098 0068 02F10302 		add	r2, r2, #3
 1099 006c 1370     		strb	r3, [r2]
 386:..\src/command_processing.c ****     uint8 CYDATA string_lenght;
 387:..\src/command_processing.c ****     char CYDATA aux_str[50] = "";
 1100              		.loc 1 387 0
 1101 006e 07F12803 		add	r3, r7, #40
 1102 0072 083B     		subs	r3, r3, #8
 1103 0074 0022     		movs	r2, #0
 1104 0076 1A60     		str	r2, [r3]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 43


 1105 0078 0433     		adds	r3, r3, #4
 1106 007a 2E22     		movs	r2, #46
 1107 007c 0021     		movs	r1, #0
 1108 007e 1846     		mov	r0, r3
 1109 0080 FFF7FEFF 		bl	memset
 388:..\src/command_processing.c ****     float aux_float;
 389:..\src/command_processing.c ****     int16 aux_int16;
 390:..\src/command_processing.c ****     uint16 aux_uint16;
 391:..\src/command_processing.c ****     int32 aux_int32;
 392:..\src/command_processing.c ****     uint32 aux_uint32;
 393:..\src/command_processing.c **** 
 394:..\src/command_processing.c ****     uint8 MOTOR_IDX = 0;
 1110              		.loc 1 394 0
 1111 0084 0023     		movs	r3, #0
 1112 0086 07F59852 		add	r2, r7, #4864
 1113 008a 02F11F02 		add	r2, r2, #31
 1114 008e 1370     		strb	r3, [r2]
 395:..\src/command_processing.c ****     uint8 SECOND_MOTOR_IDX = 1;
 1115              		.loc 1 395 0
 1116 0090 0123     		movs	r3, #1
 1117 0092 07F59852 		add	r2, r7, #4864
 1118 0096 02F11E02 		add	r2, r2, #30
 1119 009a 1370     		strb	r3, [r2]
 396:..\src/command_processing.c ****   
 397:..\src/command_processing.c ****     uint8* m_addr = (uint8*)VAR_P[0];
 1120              		.loc 1 397 0
 1121 009c 07F12803 		add	r3, r7, #40
 1122 00a0 1C3B     		subs	r3, r3, #28
 1123 00a2 1B68     		ldr	r3, [r3]
 1124 00a4 1B68     		ldr	r3, [r3]
 1125 00a6 07F59852 		add	r2, r7, #4864
 1126 00aa 02F11802 		add	r2, r2, #24
 1127 00ae 1360     		str	r3, [r2]
 398:..\src/command_processing.c ****     uint8* m_tmp = m_addr;
 1128              		.loc 1 398 0
 1129 00b0 07F59853 		add	r3, r7, #4864
 1130 00b4 03F11803 		add	r3, r3, #24
 1131 00b8 1B68     		ldr	r3, [r3]
 1132 00ba 07F59852 		add	r2, r7, #4864
 1133 00be 02F11402 		add	r2, r2, #20
 1134 00c2 1360     		str	r3, [r2]
 399:..\src/command_processing.c ****         
 400:..\src/command_processing.c ****     packet_data[0] = CMD_GET_PARAM_LIST;
 1135              		.loc 1 400 0
 1136 00c4 07F16803 		add	r3, r7, #104
 1137 00c8 143B     		subs	r3, r3, #20
 1138 00ca 0C22     		movs	r2, #12
 1139 00cc 1A70     		strb	r2, [r3]
 401:..\src/command_processing.c ****     packet_data[1] = NUM_OF_DEV_PARAMS;
 1140              		.loc 1 401 0
 1141 00ce 07F16803 		add	r3, r7, #104
 1142 00d2 143B     		subs	r3, r3, #20
 1143 00d4 4122     		movs	r2, #65
 1144 00d6 5A70     		strb	r2, [r3, #1]
 402:..\src/command_processing.c ****     
 403:..\src/command_processing.c ****     for (idx = 0; idx < NUM_OF_DEV_PARAMS; idx++) {
 1145              		.loc 1 403 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 44


 1146 00d8 0023     		movs	r3, #0
 1147 00da 07F59952 		add	r2, r7, #4896
 1148 00de 02F10502 		add	r2, r2, #5
 1149 00e2 1370     		strb	r3, [r2]
 1150 00e4 03F048B8 		b	.L73
 1151              	.L281:
 404:..\src/command_processing.c ****         
 405:..\src/command_processing.c ****         // Assign m_addr memory address
 406:..\src/command_processing.c ****         m_addr = (uint8*)VAR_P[idx];
 1152              		.loc 1 406 0
 1153 00e8 07F59953 		add	r3, r7, #4896
 1154 00ec 03F10503 		add	r3, r3, #5
 1155 00f0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1156 00f2 9A00     		lsls	r2, r3, #2
 1157 00f4 07F12803 		add	r3, r7, #40
 1158 00f8 1C3B     		subs	r3, r3, #28
 1159 00fa 1B68     		ldr	r3, [r3]
 1160 00fc 1344     		add	r3, r3, r2
 1161 00fe 1B68     		ldr	r3, [r3]
 1162 0100 07F59852 		add	r2, r7, #4864
 1163 0104 02F11802 		add	r2, r2, #24
 1164 0108 1360     		str	r3, [r2]
 407:..\src/command_processing.c ****         
 408:..\src/command_processing.c ****         // Add parameter type and size to packet
 409:..\src/command_processing.c ****         packet_data[2 + PARAM_BYTE_SLOT*idx] = TYPES[idx];
 1165              		.loc 1 409 0
 1166 010a 07F59953 		add	r3, r7, #4896
 1167 010e 03F10503 		add	r3, r3, #5
 1168 0112 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1169 0114 3222     		movs	r2, #50
 1170 0116 02FB03F3 		mul	r3, r2, r3
 1171 011a 9A1C     		adds	r2, r3, #2
 1172 011c 07F59953 		add	r3, r7, #4896
 1173 0120 03F10503 		add	r3, r3, #5
 1174 0124 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1175 0126 07F10801 		add	r1, r7, #8
 1176 012a 0968     		ldr	r1, [r1]
 1177 012c 0B44     		add	r3, r3, r1
 1178 012e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1179 0130 07F16803 		add	r3, r7, #104
 1180 0134 143B     		subs	r3, r3, #20
 1181 0136 9954     		strb	r1, [r3, r2]
 410:..\src/command_processing.c ****         packet_data[3 + PARAM_BYTE_SLOT*idx] = NUM_ITEMS[idx];
 1182              		.loc 1 410 0
 1183 0138 07F59953 		add	r3, r7, #4896
 1184 013c 03F10503 		add	r3, r3, #5
 1185 0140 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1186 0142 3222     		movs	r2, #50
 1187 0144 02FB03F3 		mul	r3, r2, r3
 1188 0148 DA1C     		adds	r2, r3, #3
 1189 014a 07F59953 		add	r3, r7, #4896
 1190 014e 03F10503 		add	r3, r3, #5
 1191 0152 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1192 0154 07F10803 		add	r3, r7, #8
 1193 0158 043B     		subs	r3, r3, #4
 1194 015a 1B68     		ldr	r3, [r3]
 1195 015c 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 45


 1196 015e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1197 0160 07F16803 		add	r3, r7, #104
 1198 0164 143B     		subs	r3, r3, #20
 1199 0166 9954     		strb	r1, [r3, r2]
 411:..\src/command_processing.c ****         
 412:..\src/command_processing.c ****         // Find size of data
 413:..\src/command_processing.c ****         switch (TYPES[idx]) {
 1200              		.loc 1 413 0
 1201 0168 07F59953 		add	r3, r7, #4896
 1202 016c 03F10503 		add	r3, r3, #5
 1203 0170 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1204 0172 07F10802 		add	r2, r7, #8
 1205 0176 1268     		ldr	r2, [r2]
 1206 0178 1344     		add	r3, r3, r2
 1207 017a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1208 017c 092B     		cmp	r3, #9
 1209 017e 2CD8     		bhi	.L74
 1210 0180 01A2     		adr	r2, .L76
 1211 0182 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1212 0186 00BF     		.p2align 2
 1213              	.L76:
 1214 0188 B1010000 		.word	.L75+1
 1215 018c B1010000 		.word	.L75+1
 1216 0190 B1010000 		.word	.L75+1
 1217 0194 BF010000 		.word	.L77+1
 1218 0198 BF010000 		.word	.L77+1
 1219 019c CD010000 		.word	.L78+1
 1220 01a0 CD010000 		.word	.L78+1
 1221 01a4 CD010000 		.word	.L78+1
 1222 01a8 DB010000 		.word	.L74+1
 1223 01ac B1010000 		.word	.L75+1
 1224              		.p2align 1
 1225              	.L75:
 414:..\src/command_processing.c ****             case TYPE_FLAG: case TYPE_INT8: case TYPE_UINT8: case TYPE_STRING:
 415:..\src/command_processing.c ****                 sod = 1; break;
 1226              		.loc 1 415 0
 1227 01b0 0123     		movs	r3, #1
 1228 01b2 07F59952 		add	r2, r7, #4896
 1229 01b6 02F10302 		add	r2, r2, #3
 1230 01ba 1370     		strb	r3, [r2]
 1231 01bc 0DE0     		b	.L74
 1232              	.L77:
 416:..\src/command_processing.c ****             case TYPE_INT16: case TYPE_UINT16:
 417:..\src/command_processing.c ****                 sod = 2; break;
 1233              		.loc 1 417 0
 1234 01be 0223     		movs	r3, #2
 1235 01c0 07F59952 		add	r2, r7, #4896
 1236 01c4 02F10302 		add	r2, r2, #3
 1237 01c8 1370     		strb	r3, [r2]
 1238 01ca 06E0     		b	.L74
 1239              	.L78:
 418:..\src/command_processing.c ****             case TYPE_INT32: case TYPE_UINT32: case TYPE_FLOAT:
 419:..\src/command_processing.c ****                 sod = 4; break;
 1240              		.loc 1 419 0
 1241 01cc 0423     		movs	r3, #4
 1242 01ce 07F59952 		add	r2, r7, #4896
 1243 01d2 02F10302 		add	r2, r2, #3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 46


 1244 01d6 1370     		strb	r3, [r2]
 1245 01d8 00BF     		nop
 1246              	.L74:
 420:..\src/command_processing.c ****         }
 421:..\src/command_processing.c ****             
 422:..\src/command_processing.c ****         if (!CUSTOM_PARAM_GET[idx]) {       // Default param get
 1247              		.loc 1 422 0
 1248 01da 07F59953 		add	r3, r7, #4896
 1249 01de 03F10503 		add	r3, r3, #5
 1250 01e2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1251 01e4 07F59A52 		add	r2, r7, #4928
 1252 01e8 02F10802 		add	r2, r2, #8
 1253 01ec 1268     		ldr	r2, [r2]
 1254 01ee 1344     		add	r3, r3, r2
 1255 01f0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1256 01f2 002B     		cmp	r3, #0
 1257 01f4 40F0DA83 		bne	.L79
 423:..\src/command_processing.c ****             
 424:..\src/command_processing.c ****             // Add parameter data to packet
 425:..\src/command_processing.c ****             switch (TYPES[idx]) {
 1258              		.loc 1 425 0
 1259 01f8 07F59953 		add	r3, r7, #4896
 1260 01fc 03F10503 		add	r3, r3, #5
 1261 0200 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1262 0202 07F10802 		add	r2, r7, #8
 1263 0206 1268     		ldr	r2, [r2]
 1264 0208 1344     		add	r3, r3, r2
 1265 020a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1266 020c 092B     		cmp	r3, #9
 1267 020e 02F25881 		bhi	.L113
 1268 0212 01A2     		adr	r2, .L82
 1269 0214 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1270              		.p2align 2
 1271              	.L82:
 1272 0218 41020000 		.word	.L81+1
 1273 021c FD020000 		.word	.L83+1
 1274 0220 41020000 		.word	.L81+1
 1275 0224 B9030000 		.word	.L84+1
 1276 0228 EB040000 		.word	.L85+1
 1277 022c 1B060000 		.word	.L86+1
 1278 0230 4B070000 		.word	.L87+1
 1279 0234 7B080000 		.word	.L88+1
 1280 0238 C3240000 		.word	.L113+1
 1281 023c 41020000 		.word	.L81+1
 1282              		.p2align 1
 1283              	.L81:
 426:..\src/command_processing.c ****                 case TYPE_FLAG: case TYPE_UINT8: case TYPE_STRING:
 427:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1284              		.loc 1 427 0
 1285 0240 0023     		movs	r3, #0
 1286 0242 07F59952 		add	r2, r7, #4896
 1287 0246 02F10702 		add	r2, r2, #7
 1288 024a 1370     		strb	r3, [r2]
 1289 024c 42E0     		b	.L89
 1290              	.L90:
 428:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1291              		.loc 1 428 0 discriminator 3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 47


 1292 024e 07F59953 		add	r3, r7, #4896
 1293 0252 03F10703 		add	r3, r3, #7
 1294 0256 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1295 0258 07F59952 		add	r2, r7, #4896
 1296 025c 02F10302 		add	r2, r2, #3
 1297 0260 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1298 0262 02FB03F3 		mul	r3, r2, r3
 1299 0266 1A46     		mov	r2, r3
 1300 0268 07F59853 		add	r3, r7, #4864
 1301 026c 03F11803 		add	r3, r3, #24
 1302 0270 1B68     		ldr	r3, [r3]
 1303 0272 1344     		add	r3, r3, r2
 1304 0274 07F59852 		add	r2, r7, #4864
 1305 0278 02F11402 		add	r2, r2, #20
 1306 027c 1360     		str	r3, [r2]
 429:..\src/command_processing.c ****                         packet_data[4 + PARAM_BYTE_SLOT*idx + i*sod] = *m_tmp;
 1307              		.loc 1 429 0 discriminator 3
 1308 027e 07F59953 		add	r3, r7, #4896
 1309 0282 03F10503 		add	r3, r3, #5
 1310 0286 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1311 0288 3222     		movs	r2, #50
 1312 028a 02FB03F3 		mul	r3, r2, r3
 1313 028e 1A1D     		adds	r2, r3, #4
 1314 0290 07F59953 		add	r3, r7, #4896
 1315 0294 03F10703 		add	r3, r3, #7
 1316 0298 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1317 029a 07F59951 		add	r1, r7, #4896
 1318 029e 01F10301 		add	r1, r1, #3
 1319 02a2 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1320 02a4 01FB03F3 		mul	r3, r1, r3
 1321 02a8 1A44     		add	r2, r2, r3
 1322 02aa 07F59853 		add	r3, r7, #4864
 1323 02ae 03F11403 		add	r3, r3, #20
 1324 02b2 1B68     		ldr	r3, [r3]
 1325 02b4 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1326 02b6 07F16803 		add	r3, r7, #104
 1327 02ba 143B     		subs	r3, r3, #20
 1328 02bc 9954     		strb	r1, [r3, r2]
 427:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1329              		.loc 1 427 0 discriminator 3
 1330 02be 07F59953 		add	r3, r7, #4896
 1331 02c2 03F10703 		add	r3, r3, #7
 1332 02c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1333 02c8 0133     		adds	r3, r3, #1
 1334 02ca 07F59952 		add	r2, r7, #4896
 1335 02ce 02F10702 		add	r2, r2, #7
 1336 02d2 1370     		strb	r3, [r2]
 1337              	.L89:
 427:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1338              		.loc 1 427 0 is_stmt 0 discriminator 1
 1339 02d4 07F59953 		add	r3, r7, #4896
 1340 02d8 03F10503 		add	r3, r3, #5
 1341 02dc 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1342 02de 07F10803 		add	r3, r7, #8
 1343 02e2 043B     		subs	r3, r3, #4
 1344 02e4 1B68     		ldr	r3, [r3]
 1345 02e6 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 48


 1346 02e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1347 02ea 07F59952 		add	r2, r7, #4896
 1348 02ee 02F10702 		add	r2, r2, #7
 1349 02f2 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1350 02f4 9A42     		cmp	r2, r3
 1351 02f6 AAD3     		bcc	.L90
 430:..\src/command_processing.c ****                     }
 431:..\src/command_processing.c ****                     break;                
 1352              		.loc 1 431 0 is_stmt 1
 1353 02f8 02F0E3B8 		b	.L113
 1354              	.L83:
 432:..\src/command_processing.c ****                 case TYPE_INT8:
 433:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1355              		.loc 1 433 0
 1356 02fc 0023     		movs	r3, #0
 1357 02fe 07F59952 		add	r2, r7, #4896
 1358 0302 02F10702 		add	r2, r2, #7
 1359 0306 1370     		strb	r3, [r2]
 1360 0308 42E0     		b	.L91
 1361              	.L92:
 434:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1362              		.loc 1 434 0 discriminator 3
 1363 030a 07F59953 		add	r3, r7, #4896
 1364 030e 03F10703 		add	r3, r3, #7
 1365 0312 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1366 0314 07F59952 		add	r2, r7, #4896
 1367 0318 02F10302 		add	r2, r2, #3
 1368 031c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1369 031e 02FB03F3 		mul	r3, r2, r3
 1370 0322 1A46     		mov	r2, r3
 1371 0324 07F59853 		add	r3, r7, #4864
 1372 0328 03F11803 		add	r3, r3, #24
 1373 032c 1B68     		ldr	r3, [r3]
 1374 032e 1344     		add	r3, r3, r2
 1375 0330 07F59852 		add	r2, r7, #4864
 1376 0334 02F11402 		add	r2, r2, #20
 1377 0338 1360     		str	r3, [r2]
 435:..\src/command_processing.c ****                         packet_data[4 + PARAM_BYTE_SLOT*idx + i*sod] = *m_tmp;
 1378              		.loc 1 435 0 discriminator 3
 1379 033a 07F59953 		add	r3, r7, #4896
 1380 033e 03F10503 		add	r3, r3, #5
 1381 0342 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1382 0344 3222     		movs	r2, #50
 1383 0346 02FB03F3 		mul	r3, r2, r3
 1384 034a 1A1D     		adds	r2, r3, #4
 1385 034c 07F59953 		add	r3, r7, #4896
 1386 0350 03F10703 		add	r3, r3, #7
 1387 0354 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1388 0356 07F59951 		add	r1, r7, #4896
 1389 035a 01F10301 		add	r1, r1, #3
 1390 035e 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1391 0360 01FB03F3 		mul	r3, r1, r3
 1392 0364 1A44     		add	r2, r2, r3
 1393 0366 07F59853 		add	r3, r7, #4864
 1394 036a 03F11403 		add	r3, r3, #20
 1395 036e 1B68     		ldr	r3, [r3]
 1396 0370 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 49


 1397 0372 07F16803 		add	r3, r7, #104
 1398 0376 143B     		subs	r3, r3, #20
 1399 0378 9954     		strb	r1, [r3, r2]
 433:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1400              		.loc 1 433 0 discriminator 3
 1401 037a 07F59953 		add	r3, r7, #4896
 1402 037e 03F10703 		add	r3, r3, #7
 1403 0382 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1404 0384 0133     		adds	r3, r3, #1
 1405 0386 07F59952 		add	r2, r7, #4896
 1406 038a 02F10702 		add	r2, r2, #7
 1407 038e 1370     		strb	r3, [r2]
 1408              	.L91:
 433:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1409              		.loc 1 433 0 is_stmt 0 discriminator 1
 1410 0390 07F59953 		add	r3, r7, #4896
 1411 0394 03F10503 		add	r3, r3, #5
 1412 0398 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1413 039a 07F10803 		add	r3, r7, #8
 1414 039e 043B     		subs	r3, r3, #4
 1415 03a0 1B68     		ldr	r3, [r3]
 1416 03a2 1344     		add	r3, r3, r2
 1417 03a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1418 03a6 07F59952 		add	r2, r7, #4896
 1419 03aa 02F10702 		add	r2, r2, #7
 1420 03ae 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1421 03b0 9A42     		cmp	r2, r3
 1422 03b2 AAD3     		bcc	.L92
 436:..\src/command_processing.c ****                     }
 437:..\src/command_processing.c ****                     break;
 1423              		.loc 1 437 0 is_stmt 1
 1424 03b4 02F085B8 		b	.L113
 1425              	.L84:
 438:..\src/command_processing.c ****                 case TYPE_INT16:
 439:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1426              		.loc 1 439 0
 1427 03b8 0023     		movs	r3, #0
 1428 03ba 07F59952 		add	r2, r7, #4896
 1429 03be 02F10702 		add	r2, r2, #7
 1430 03c2 1370     		strb	r3, [r2]
 1431 03c4 7CE0     		b	.L93
 1432              	.L96:
 440:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1433              		.loc 1 440 0
 1434 03c6 07F59953 		add	r3, r7, #4896
 1435 03ca 03F10703 		add	r3, r3, #7
 1436 03ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1437 03d0 07F59952 		add	r2, r7, #4896
 1438 03d4 02F10302 		add	r2, r2, #3
 1439 03d8 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1440 03da 02FB03F3 		mul	r3, r2, r3
 1441 03de 1A46     		mov	r2, r3
 1442 03e0 07F59853 		add	r3, r7, #4864
 1443 03e4 03F11803 		add	r3, r3, #24
 1444 03e8 1B68     		ldr	r3, [r3]
 1445 03ea 1344     		add	r3, r3, r2
 1446 03ec 07F59852 		add	r2, r7, #4864
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 50


 1447 03f0 02F11402 		add	r2, r2, #20
 1448 03f4 1360     		str	r3, [r2]
 441:..\src/command_processing.c ****                         aux_int16 = *((int16*)m_tmp);
 1449              		.loc 1 441 0
 1450 03f6 07F59853 		add	r3, r7, #4864
 1451 03fa 03F11403 		add	r3, r3, #20
 1452 03fe 1B68     		ldr	r3, [r3]
 1453 0400 B3F90020 		ldrsh	r2, [r3]
 1454 0404 07F12803 		add	r3, r7, #40
 1455 0408 0E3B     		subs	r3, r3, #14
 1456 040a 1A80     		strh	r2, [r3]	@ movhi
 442:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1457              		.loc 1 442 0
 1458 040c 0023     		movs	r3, #0
 1459 040e 07F59952 		add	r2, r7, #4896
 1460 0412 02F10602 		add	r2, r2, #6
 1461 0416 1370     		strb	r3, [r2]
 1462 0418 3BE0     		b	.L94
 1463              	.L95:
 443:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1464              		.loc 1 443 0 discriminator 3
 1465 041a 07F59953 		add	r3, r7, #4896
 1466 041e 03F10503 		add	r3, r3, #5
 1467 0422 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1468 0424 3222     		movs	r2, #50
 1469 0426 02FB03F3 		mul	r3, r2, r3
 1470 042a 1A1D     		adds	r2, r3, #4
 1471 042c 07F59953 		add	r3, r7, #4896
 1472 0430 03F10703 		add	r3, r3, #7
 1473 0434 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1474 0436 07F59951 		add	r1, r7, #4896
 1475 043a 01F10301 		add	r1, r1, #3
 1476 043e 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1477 0440 01FB03F3 		mul	r3, r1, r3
 1478 0444 1A44     		add	r2, r2, r3
 1479 0446 07F59953 		add	r3, r7, #4896
 1480 044a 03F10303 		add	r3, r3, #3
 1481 044e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1482 0450 1A44     		add	r2, r2, r3
 1483 0452 07F59953 		add	r3, r7, #4896
 1484 0456 03F10603 		add	r3, r3, #6
 1485 045a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1486 045c D31A     		subs	r3, r2, r3
 1487 045e 5A1E     		subs	r2, r3, #1
 1488 0460 07F59953 		add	r3, r7, #4896
 1489 0464 03F10603 		add	r3, r3, #6
 1490 0468 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1491 046a 07F12803 		add	r3, r7, #40
 1492 046e 0E3B     		subs	r3, r3, #14
 1493 0470 0B44     		add	r3, r3, r1
 1494 0472 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1495 0474 07F16803 		add	r3, r7, #104
 1496 0478 143B     		subs	r3, r3, #20
 1497 047a 9954     		strb	r1, [r3, r2]
 442:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1498              		.loc 1 442 0 discriminator 3
 1499 047c 07F59953 		add	r3, r7, #4896
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 51


 1500 0480 03F10603 		add	r3, r3, #6
 1501 0484 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1502 0486 0133     		adds	r3, r3, #1
 1503 0488 07F59952 		add	r2, r7, #4896
 1504 048c 02F10602 		add	r2, r2, #6
 1505 0490 1370     		strb	r3, [r2]
 1506              	.L94:
 442:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1507              		.loc 1 442 0 is_stmt 0 discriminator 1
 1508 0492 07F59953 		add	r3, r7, #4896
 1509 0496 03F10603 		add	r3, r3, #6
 1510 049a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1511 049c 07F59953 		add	r3, r7, #4896
 1512 04a0 03F10303 		add	r3, r3, #3
 1513 04a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1514 04a6 9A42     		cmp	r2, r3
 1515 04a8 B7D3     		bcc	.L95
 439:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1516              		.loc 1 439 0 is_stmt 1 discriminator 2
 1517 04aa 07F59953 		add	r3, r7, #4896
 1518 04ae 03F10703 		add	r3, r3, #7
 1519 04b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1520 04b4 0133     		adds	r3, r3, #1
 1521 04b6 07F59952 		add	r2, r7, #4896
 1522 04ba 02F10702 		add	r2, r2, #7
 1523 04be 1370     		strb	r3, [r2]
 1524              	.L93:
 439:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1525              		.loc 1 439 0 is_stmt 0 discriminator 1
 1526 04c0 07F59953 		add	r3, r7, #4896
 1527 04c4 03F10503 		add	r3, r3, #5
 1528 04c8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1529 04ca 07F10803 		add	r3, r7, #8
 1530 04ce 043B     		subs	r3, r3, #4
 1531 04d0 1B68     		ldr	r3, [r3]
 1532 04d2 1344     		add	r3, r3, r2
 1533 04d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1534 04d6 07F59952 		add	r2, r7, #4896
 1535 04da 02F10702 		add	r2, r2, #7
 1536 04de 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1537 04e0 9A42     		cmp	r2, r3
 1538 04e2 FFF470AF 		bcc	.L96
 444:..\src/command_processing.c ****                         }
 445:..\src/command_processing.c ****                     }
 446:..\src/command_processing.c ****                     break;
 1539              		.loc 1 446 0 is_stmt 1
 1540 04e6 01F0ECBF 		b	.L113
 1541              	.L85:
 447:..\src/command_processing.c ****                 case TYPE_UINT16:
 448:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1542              		.loc 1 448 0
 1543 04ea 0023     		movs	r3, #0
 1544 04ec 07F59952 		add	r2, r7, #4896
 1545 04f0 02F10702 		add	r2, r2, #7
 1546 04f4 1370     		strb	r3, [r2]
 1547 04f6 7BE0     		b	.L97
 1548              	.L100:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 52


 449:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1549              		.loc 1 449 0
 1550 04f8 07F59953 		add	r3, r7, #4896
 1551 04fc 03F10703 		add	r3, r3, #7
 1552 0500 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1553 0502 07F59952 		add	r2, r7, #4896
 1554 0506 02F10302 		add	r2, r2, #3
 1555 050a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1556 050c 02FB03F3 		mul	r3, r2, r3
 1557 0510 1A46     		mov	r2, r3
 1558 0512 07F59853 		add	r3, r7, #4864
 1559 0516 03F11803 		add	r3, r3, #24
 1560 051a 1B68     		ldr	r3, [r3]
 1561 051c 1344     		add	r3, r3, r2
 1562 051e 07F59852 		add	r2, r7, #4864
 1563 0522 02F11402 		add	r2, r2, #20
 1564 0526 1360     		str	r3, [r2]
 450:..\src/command_processing.c ****                         aux_uint16 = *((uint16*)m_tmp);
 1565              		.loc 1 450 0
 1566 0528 07F59853 		add	r3, r7, #4864
 1567 052c 03F11403 		add	r3, r3, #20
 1568 0530 1B68     		ldr	r3, [r3]
 1569 0532 1A88     		ldrh	r2, [r3]
 1570 0534 07F12803 		add	r3, r7, #40
 1571 0538 103B     		subs	r3, r3, #16
 1572 053a 1A80     		strh	r2, [r3]	@ movhi
 451:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1573              		.loc 1 451 0
 1574 053c 0023     		movs	r3, #0
 1575 053e 07F59952 		add	r2, r7, #4896
 1576 0542 02F10602 		add	r2, r2, #6
 1577 0546 1370     		strb	r3, [r2]
 1578 0548 3BE0     		b	.L98
 1579              	.L99:
 452:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1580              		.loc 1 452 0 discriminator 3
 1581 054a 07F59953 		add	r3, r7, #4896
 1582 054e 03F10503 		add	r3, r3, #5
 1583 0552 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1584 0554 3222     		movs	r2, #50
 1585 0556 02FB03F3 		mul	r3, r2, r3
 1586 055a 1A1D     		adds	r2, r3, #4
 1587 055c 07F59953 		add	r3, r7, #4896
 1588 0560 03F10703 		add	r3, r3, #7
 1589 0564 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1590 0566 07F59951 		add	r1, r7, #4896
 1591 056a 01F10301 		add	r1, r1, #3
 1592 056e 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1593 0570 01FB03F3 		mul	r3, r1, r3
 1594 0574 1A44     		add	r2, r2, r3
 1595 0576 07F59953 		add	r3, r7, #4896
 1596 057a 03F10303 		add	r3, r3, #3
 1597 057e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1598 0580 1A44     		add	r2, r2, r3
 1599 0582 07F59953 		add	r3, r7, #4896
 1600 0586 03F10603 		add	r3, r3, #6
 1601 058a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 53


 1602 058c D31A     		subs	r3, r2, r3
 1603 058e 5A1E     		subs	r2, r3, #1
 1604 0590 07F59953 		add	r3, r7, #4896
 1605 0594 03F10603 		add	r3, r3, #6
 1606 0598 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1607 059a 07F12803 		add	r3, r7, #40
 1608 059e 103B     		subs	r3, r3, #16
 1609 05a0 0B44     		add	r3, r3, r1
 1610 05a2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1611 05a4 07F16803 		add	r3, r7, #104
 1612 05a8 143B     		subs	r3, r3, #20
 1613 05aa 9954     		strb	r1, [r3, r2]
 451:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1614              		.loc 1 451 0 discriminator 3
 1615 05ac 07F59953 		add	r3, r7, #4896
 1616 05b0 03F10603 		add	r3, r3, #6
 1617 05b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1618 05b6 0133     		adds	r3, r3, #1
 1619 05b8 07F59952 		add	r2, r7, #4896
 1620 05bc 02F10602 		add	r2, r2, #6
 1621 05c0 1370     		strb	r3, [r2]
 1622              	.L98:
 451:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1623              		.loc 1 451 0 is_stmt 0 discriminator 1
 1624 05c2 07F59953 		add	r3, r7, #4896
 1625 05c6 03F10603 		add	r3, r3, #6
 1626 05ca 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1627 05cc 07F59953 		add	r3, r7, #4896
 1628 05d0 03F10303 		add	r3, r3, #3
 1629 05d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1630 05d6 9A42     		cmp	r2, r3
 1631 05d8 B7D3     		bcc	.L99
 448:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1632              		.loc 1 448 0 is_stmt 1 discriminator 2
 1633 05da 07F59953 		add	r3, r7, #4896
 1634 05de 03F10703 		add	r3, r3, #7
 1635 05e2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1636 05e4 0133     		adds	r3, r3, #1
 1637 05e6 07F59952 		add	r2, r7, #4896
 1638 05ea 02F10702 		add	r2, r2, #7
 1639 05ee 1370     		strb	r3, [r2]
 1640              	.L97:
 448:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1641              		.loc 1 448 0 is_stmt 0 discriminator 1
 1642 05f0 07F59953 		add	r3, r7, #4896
 1643 05f4 03F10503 		add	r3, r3, #5
 1644 05f8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1645 05fa 07F10803 		add	r3, r7, #8
 1646 05fe 043B     		subs	r3, r3, #4
 1647 0600 1B68     		ldr	r3, [r3]
 1648 0602 1344     		add	r3, r3, r2
 1649 0604 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1650 0606 07F59952 		add	r2, r7, #4896
 1651 060a 02F10702 		add	r2, r2, #7
 1652 060e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1653 0610 9A42     		cmp	r2, r3
 1654 0612 FFF471AF 		bcc	.L100
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 54


 453:..\src/command_processing.c ****                         }
 454:..\src/command_processing.c ****                     }
 455:..\src/command_processing.c ****                     break;
 1655              		.loc 1 455 0 is_stmt 1
 1656 0616 01F054BF 		b	.L113
 1657              	.L86:
 456:..\src/command_processing.c ****                 case TYPE_INT32: 
 457:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1658              		.loc 1 457 0
 1659 061a 0023     		movs	r3, #0
 1660 061c 07F59952 		add	r2, r7, #4896
 1661 0620 02F10702 		add	r2, r2, #7
 1662 0624 1370     		strb	r3, [r2]
 1663 0626 7BE0     		b	.L101
 1664              	.L104:
 458:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1665              		.loc 1 458 0
 1666 0628 07F59953 		add	r3, r7, #4896
 1667 062c 03F10703 		add	r3, r3, #7
 1668 0630 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1669 0632 07F59952 		add	r2, r7, #4896
 1670 0636 02F10302 		add	r2, r2, #3
 1671 063a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1672 063c 02FB03F3 		mul	r3, r2, r3
 1673 0640 1A46     		mov	r2, r3
 1674 0642 07F59853 		add	r3, r7, #4864
 1675 0646 03F11803 		add	r3, r3, #24
 1676 064a 1B68     		ldr	r3, [r3]
 1677 064c 1344     		add	r3, r3, r2
 1678 064e 07F59852 		add	r2, r7, #4864
 1679 0652 02F11402 		add	r2, r2, #20
 1680 0656 1360     		str	r3, [r2]
 459:..\src/command_processing.c ****                         aux_int32 = *((int32*)m_tmp);
 1681              		.loc 1 459 0
 1682 0658 07F59853 		add	r3, r7, #4864
 1683 065c 03F11403 		add	r3, r3, #20
 1684 0660 1B68     		ldr	r3, [r3]
 1685 0662 1A68     		ldr	r2, [r3]
 1686 0664 07F12803 		add	r3, r7, #40
 1687 0668 143B     		subs	r3, r3, #20
 1688 066a 1A60     		str	r2, [r3]
 460:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1689              		.loc 1 460 0
 1690 066c 0023     		movs	r3, #0
 1691 066e 07F59952 		add	r2, r7, #4896
 1692 0672 02F10602 		add	r2, r2, #6
 1693 0676 1370     		strb	r3, [r2]
 1694 0678 3BE0     		b	.L102
 1695              	.L103:
 461:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1696              		.loc 1 461 0 discriminator 3
 1697 067a 07F59953 		add	r3, r7, #4896
 1698 067e 03F10503 		add	r3, r3, #5
 1699 0682 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1700 0684 3222     		movs	r2, #50
 1701 0686 02FB03F3 		mul	r3, r2, r3
 1702 068a 1A1D     		adds	r2, r3, #4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 55


 1703 068c 07F59953 		add	r3, r7, #4896
 1704 0690 03F10703 		add	r3, r3, #7
 1705 0694 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1706 0696 07F59951 		add	r1, r7, #4896
 1707 069a 01F10301 		add	r1, r1, #3
 1708 069e 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1709 06a0 01FB03F3 		mul	r3, r1, r3
 1710 06a4 1A44     		add	r2, r2, r3
 1711 06a6 07F59953 		add	r3, r7, #4896
 1712 06aa 03F10303 		add	r3, r3, #3
 1713 06ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1714 06b0 1A44     		add	r2, r2, r3
 1715 06b2 07F59953 		add	r3, r7, #4896
 1716 06b6 03F10603 		add	r3, r3, #6
 1717 06ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1718 06bc D31A     		subs	r3, r2, r3
 1719 06be 5A1E     		subs	r2, r3, #1
 1720 06c0 07F59953 		add	r3, r7, #4896
 1721 06c4 03F10603 		add	r3, r3, #6
 1722 06c8 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1723 06ca 07F12803 		add	r3, r7, #40
 1724 06ce 143B     		subs	r3, r3, #20
 1725 06d0 0B44     		add	r3, r3, r1
 1726 06d2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1727 06d4 07F16803 		add	r3, r7, #104
 1728 06d8 143B     		subs	r3, r3, #20
 1729 06da 9954     		strb	r1, [r3, r2]
 460:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1730              		.loc 1 460 0 discriminator 3
 1731 06dc 07F59953 		add	r3, r7, #4896
 1732 06e0 03F10603 		add	r3, r3, #6
 1733 06e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1734 06e6 0133     		adds	r3, r3, #1
 1735 06e8 07F59952 		add	r2, r7, #4896
 1736 06ec 02F10602 		add	r2, r2, #6
 1737 06f0 1370     		strb	r3, [r2]
 1738              	.L102:
 460:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1739              		.loc 1 460 0 is_stmt 0 discriminator 1
 1740 06f2 07F59953 		add	r3, r7, #4896
 1741 06f6 03F10603 		add	r3, r3, #6
 1742 06fa 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1743 06fc 07F59953 		add	r3, r7, #4896
 1744 0700 03F10303 		add	r3, r3, #3
 1745 0704 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1746 0706 9A42     		cmp	r2, r3
 1747 0708 B7D3     		bcc	.L103
 457:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1748              		.loc 1 457 0 is_stmt 1 discriminator 2
 1749 070a 07F59953 		add	r3, r7, #4896
 1750 070e 03F10703 		add	r3, r3, #7
 1751 0712 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1752 0714 0133     		adds	r3, r3, #1
 1753 0716 07F59952 		add	r2, r7, #4896
 1754 071a 02F10702 		add	r2, r2, #7
 1755 071e 1370     		strb	r3, [r2]
 1756              	.L101:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 56


 457:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1757              		.loc 1 457 0 is_stmt 0 discriminator 1
 1758 0720 07F59953 		add	r3, r7, #4896
 1759 0724 03F10503 		add	r3, r3, #5
 1760 0728 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1761 072a 07F10803 		add	r3, r7, #8
 1762 072e 043B     		subs	r3, r3, #4
 1763 0730 1B68     		ldr	r3, [r3]
 1764 0732 1344     		add	r3, r3, r2
 1765 0734 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1766 0736 07F59952 		add	r2, r7, #4896
 1767 073a 02F10702 		add	r2, r2, #7
 1768 073e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1769 0740 9A42     		cmp	r2, r3
 1770 0742 FFF471AF 		bcc	.L104
 462:..\src/command_processing.c ****                         }
 463:..\src/command_processing.c ****                     }
 464:..\src/command_processing.c ****                     break;
 1771              		.loc 1 464 0 is_stmt 1
 1772 0746 01F0BCBE 		b	.L113
 1773              	.L87:
 465:..\src/command_processing.c ****                 case TYPE_UINT32: 
 466:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1774              		.loc 1 466 0
 1775 074a 0023     		movs	r3, #0
 1776 074c 07F59952 		add	r2, r7, #4896
 1777 0750 02F10702 		add	r2, r2, #7
 1778 0754 1370     		strb	r3, [r2]
 1779 0756 7BE0     		b	.L105
 1780              	.L108:
 467:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1781              		.loc 1 467 0
 1782 0758 07F59953 		add	r3, r7, #4896
 1783 075c 03F10703 		add	r3, r3, #7
 1784 0760 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1785 0762 07F59952 		add	r2, r7, #4896
 1786 0766 02F10302 		add	r2, r2, #3
 1787 076a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1788 076c 02FB03F3 		mul	r3, r2, r3
 1789 0770 1A46     		mov	r2, r3
 1790 0772 07F59853 		add	r3, r7, #4864
 1791 0776 03F11803 		add	r3, r3, #24
 1792 077a 1B68     		ldr	r3, [r3]
 1793 077c 1344     		add	r3, r3, r2
 1794 077e 07F59852 		add	r2, r7, #4864
 1795 0782 02F11402 		add	r2, r2, #20
 1796 0786 1360     		str	r3, [r2]
 468:..\src/command_processing.c ****                         aux_uint32 = *((uint32*)m_tmp);
 1797              		.loc 1 468 0
 1798 0788 07F59853 		add	r3, r7, #4864
 1799 078c 03F11403 		add	r3, r3, #20
 1800 0790 1B68     		ldr	r3, [r3]
 1801 0792 1A68     		ldr	r2, [r3]
 1802 0794 07F12803 		add	r3, r7, #40
 1803 0798 183B     		subs	r3, r3, #24
 1804 079a 1A60     		str	r2, [r3]
 469:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 57


 1805              		.loc 1 469 0
 1806 079c 0023     		movs	r3, #0
 1807 079e 07F59952 		add	r2, r7, #4896
 1808 07a2 02F10602 		add	r2, r2, #6
 1809 07a6 1370     		strb	r3, [r2]
 1810 07a8 3BE0     		b	.L106
 1811              	.L107:
 470:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1812              		.loc 1 470 0 discriminator 3
 1813 07aa 07F59953 		add	r3, r7, #4896
 1814 07ae 03F10503 		add	r3, r3, #5
 1815 07b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1816 07b4 3222     		movs	r2, #50
 1817 07b6 02FB03F3 		mul	r3, r2, r3
 1818 07ba 1A1D     		adds	r2, r3, #4
 1819 07bc 07F59953 		add	r3, r7, #4896
 1820 07c0 03F10703 		add	r3, r3, #7
 1821 07c4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1822 07c6 07F59951 		add	r1, r7, #4896
 1823 07ca 01F10301 		add	r1, r1, #3
 1824 07ce 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1825 07d0 01FB03F3 		mul	r3, r1, r3
 1826 07d4 1A44     		add	r2, r2, r3
 1827 07d6 07F59953 		add	r3, r7, #4896
 1828 07da 03F10303 		add	r3, r3, #3
 1829 07de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1830 07e0 1A44     		add	r2, r2, r3
 1831 07e2 07F59953 		add	r3, r7, #4896
 1832 07e6 03F10603 		add	r3, r3, #6
 1833 07ea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1834 07ec D31A     		subs	r3, r2, r3
 1835 07ee 5A1E     		subs	r2, r3, #1
 1836 07f0 07F59953 		add	r3, r7, #4896
 1837 07f4 03F10603 		add	r3, r3, #6
 1838 07f8 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1839 07fa 07F12803 		add	r3, r7, #40
 1840 07fe 183B     		subs	r3, r3, #24
 1841 0800 0B44     		add	r3, r3, r1
 1842 0802 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1843 0804 07F16803 		add	r3, r7, #104
 1844 0808 143B     		subs	r3, r3, #20
 1845 080a 9954     		strb	r1, [r3, r2]
 469:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1846              		.loc 1 469 0 discriminator 3
 1847 080c 07F59953 		add	r3, r7, #4896
 1848 0810 03F10603 		add	r3, r3, #6
 1849 0814 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1850 0816 0133     		adds	r3, r3, #1
 1851 0818 07F59952 		add	r2, r7, #4896
 1852 081c 02F10602 		add	r2, r2, #6
 1853 0820 1370     		strb	r3, [r2]
 1854              	.L106:
 469:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1855              		.loc 1 469 0 is_stmt 0 discriminator 1
 1856 0822 07F59953 		add	r3, r7, #4896
 1857 0826 03F10603 		add	r3, r3, #6
 1858 082a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 58


 1859 082c 07F59953 		add	r3, r7, #4896
 1860 0830 03F10303 		add	r3, r3, #3
 1861 0834 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1862 0836 9A42     		cmp	r2, r3
 1863 0838 B7D3     		bcc	.L107
 466:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1864              		.loc 1 466 0 is_stmt 1 discriminator 2
 1865 083a 07F59953 		add	r3, r7, #4896
 1866 083e 03F10703 		add	r3, r3, #7
 1867 0842 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1868 0844 0133     		adds	r3, r3, #1
 1869 0846 07F59952 		add	r2, r7, #4896
 1870 084a 02F10702 		add	r2, r2, #7
 1871 084e 1370     		strb	r3, [r2]
 1872              	.L105:
 466:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1873              		.loc 1 466 0 is_stmt 0 discriminator 1
 1874 0850 07F59953 		add	r3, r7, #4896
 1875 0854 03F10503 		add	r3, r3, #5
 1876 0858 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1877 085a 07F10803 		add	r3, r7, #8
 1878 085e 043B     		subs	r3, r3, #4
 1879 0860 1B68     		ldr	r3, [r3]
 1880 0862 1344     		add	r3, r3, r2
 1881 0864 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1882 0866 07F59952 		add	r2, r7, #4896
 1883 086a 02F10702 		add	r2, r2, #7
 1884 086e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1885 0870 9A42     		cmp	r2, r3
 1886 0872 FFF471AF 		bcc	.L108
 471:..\src/command_processing.c ****                         }
 472:..\src/command_processing.c ****                     }
 473:..\src/command_processing.c ****                     break;
 1887              		.loc 1 473 0 is_stmt 1
 1888 0876 01F024BE 		b	.L113
 1889              	.L88:
 474:..\src/command_processing.c ****                     
 475:..\src/command_processing.c ****                 case TYPE_FLOAT:
 476:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1890              		.loc 1 476 0
 1891 087a 0023     		movs	r3, #0
 1892 087c 07F59952 		add	r2, r7, #4896
 1893 0880 02F10702 		add	r2, r2, #7
 1894 0884 1370     		strb	r3, [r2]
 1895 0886 7BE0     		b	.L109
 1896              	.L112:
 477:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1897              		.loc 1 477 0
 1898 0888 07F59953 		add	r3, r7, #4896
 1899 088c 03F10703 		add	r3, r3, #7
 1900 0890 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1901 0892 07F59952 		add	r2, r7, #4896
 1902 0896 02F10302 		add	r2, r2, #3
 1903 089a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1904 089c 02FB03F3 		mul	r3, r2, r3
 1905 08a0 1A46     		mov	r2, r3
 1906 08a2 07F59853 		add	r3, r7, #4864
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 59


 1907 08a6 03F11803 		add	r3, r3, #24
 1908 08aa 1B68     		ldr	r3, [r3]
 1909 08ac 1344     		add	r3, r3, r2
 1910 08ae 07F59852 		add	r2, r7, #4864
 1911 08b2 02F11402 		add	r2, r2, #20
 1912 08b6 1360     		str	r3, [r2]
 478:..\src/command_processing.c ****                         aux_float = *((float*)m_tmp);
 1913              		.loc 1 478 0
 1914 08b8 07F59853 		add	r3, r7, #4864
 1915 08bc 03F11403 		add	r3, r3, #20
 1916 08c0 1B68     		ldr	r3, [r3]
 1917 08c2 1A68     		ldr	r2, [r3]	@ float
 1918 08c4 07F12803 		add	r3, r7, #40
 1919 08c8 0C3B     		subs	r3, r3, #12
 1920 08ca 1A60     		str	r2, [r3]	@ float
 479:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1921              		.loc 1 479 0
 1922 08cc 0023     		movs	r3, #0
 1923 08ce 07F59952 		add	r2, r7, #4896
 1924 08d2 02F10602 		add	r2, r2, #6
 1925 08d6 1370     		strb	r3, [r2]
 1926 08d8 3BE0     		b	.L110
 1927              	.L111:
 480:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1928              		.loc 1 480 0 discriminator 3
 1929 08da 07F59953 		add	r3, r7, #4896
 1930 08de 03F10503 		add	r3, r3, #5
 1931 08e2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1932 08e4 3222     		movs	r2, #50
 1933 08e6 02FB03F3 		mul	r3, r2, r3
 1934 08ea 1A1D     		adds	r2, r3, #4
 1935 08ec 07F59953 		add	r3, r7, #4896
 1936 08f0 03F10703 		add	r3, r3, #7
 1937 08f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1938 08f6 07F59951 		add	r1, r7, #4896
 1939 08fa 01F10301 		add	r1, r1, #3
 1940 08fe 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1941 0900 01FB03F3 		mul	r3, r1, r3
 1942 0904 1A44     		add	r2, r2, r3
 1943 0906 07F59953 		add	r3, r7, #4896
 1944 090a 03F10303 		add	r3, r3, #3
 1945 090e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1946 0910 1A44     		add	r2, r2, r3
 1947 0912 07F59953 		add	r3, r7, #4896
 1948 0916 03F10603 		add	r3, r3, #6
 1949 091a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1950 091c D31A     		subs	r3, r2, r3
 1951 091e 5A1E     		subs	r2, r3, #1
 1952 0920 07F59953 		add	r3, r7, #4896
 1953 0924 03F10603 		add	r3, r3, #6
 1954 0928 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1955 092a 07F12803 		add	r3, r7, #40
 1956 092e 0C3B     		subs	r3, r3, #12
 1957 0930 0B44     		add	r3, r3, r1
 1958 0932 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1959 0934 07F16803 		add	r3, r7, #104
 1960 0938 143B     		subs	r3, r3, #20
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 60


 1961 093a 9954     		strb	r1, [r3, r2]
 479:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1962              		.loc 1 479 0 discriminator 3
 1963 093c 07F59953 		add	r3, r7, #4896
 1964 0940 03F10603 		add	r3, r3, #6
 1965 0944 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1966 0946 0133     		adds	r3, r3, #1
 1967 0948 07F59952 		add	r2, r7, #4896
 1968 094c 02F10602 		add	r2, r2, #6
 1969 0950 1370     		strb	r3, [r2]
 1970              	.L110:
 479:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1971              		.loc 1 479 0 is_stmt 0 discriminator 1
 1972 0952 07F59953 		add	r3, r7, #4896
 1973 0956 03F10603 		add	r3, r3, #6
 1974 095a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1975 095c 07F59953 		add	r3, r7, #4896
 1976 0960 03F10303 		add	r3, r3, #3
 1977 0964 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1978 0966 9A42     		cmp	r2, r3
 1979 0968 B7D3     		bcc	.L111
 476:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1980              		.loc 1 476 0 is_stmt 1 discriminator 2
 1981 096a 07F59953 		add	r3, r7, #4896
 1982 096e 03F10703 		add	r3, r3, #7
 1983 0972 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1984 0974 0133     		adds	r3, r3, #1
 1985 0976 07F59952 		add	r2, r7, #4896
 1986 097a 02F10702 		add	r2, r2, #7
 1987 097e 1370     		strb	r3, [r2]
 1988              	.L109:
 476:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1989              		.loc 1 476 0 is_stmt 0 discriminator 1
 1990 0980 07F59953 		add	r3, r7, #4896
 1991 0984 03F10503 		add	r3, r3, #5
 1992 0988 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1993 098a 07F10803 		add	r3, r7, #8
 1994 098e 043B     		subs	r3, r3, #4
 1995 0990 1B68     		ldr	r3, [r3]
 1996 0992 1344     		add	r3, r3, r2
 1997 0994 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1998 0996 07F59952 		add	r2, r7, #4896
 1999 099a 02F10702 		add	r2, r2, #7
 2000 099e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2001 09a0 9A42     		cmp	r2, r3
 2002 09a2 FFF471AF 		bcc	.L112
 481:..\src/command_processing.c ****                         }
 482:..\src/command_processing.c ****                     }
 483:..\src/command_processing.c ****                     break;   
 2003              		.loc 1 483 0 is_stmt 1 discriminator 7
 2004 09a6 00BF     		nop
 2005 09a8 01F08BBD 		b	.L113
 2006              	.L79:
 484:..\src/command_processing.c ****             }
 485:..\src/command_processing.c ****         }
 486:..\src/command_processing.c ****         else {
 487:..\src/command_processing.c ****             
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 61


 488:..\src/command_processing.c **** // DO NOT MODIFY THE FUNCTION BEFORE THIS LINE
 489:..\src/command_processing.c ****             
 490:..\src/command_processing.c **** // MODIFY CUSTOM PARAM            
 491:..\src/command_processing.c ****                 switch(idx+1){
 2007              		.loc 1 491 0
 2008 09ac 07F59953 		add	r3, r7, #4896
 2009 09b0 03F10503 		add	r3, r3, #5
 2010 09b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2011 09b6 0133     		adds	r3, r3, #1
 2012 09b8 023B     		subs	r3, r3, #2
 2013 09ba 332B     		cmp	r3, #51
 2014 09bc 01F28085 		bhi	.L286
 2015 09c0 01A2     		adr	r2, .L116
 2016 09c2 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2017 09c6 00BF     		.p2align 2
 2018              	.L116:
 2019 09c8 990A0000 		.word	.L115+1
 2020 09cc 650F0000 		.word	.L117+1
 2021 09d0 C1240000 		.word	.L286+1
 2022 09d4 C1240000 		.word	.L286+1
 2023 09d8 C1240000 		.word	.L286+1
 2024 09dc C1240000 		.word	.L286+1
 2025 09e0 2F140000 		.word	.L118+1
 2026 09e4 C1240000 		.word	.L286+1
 2027 09e8 C1240000 		.word	.L286+1
 2028 09ec A3150000 		.word	.L119+1
 2029 09f0 C1240000 		.word	.L286+1
 2030 09f4 C1240000 		.word	.L286+1
 2031 09f8 C1240000 		.word	.L286+1
 2032 09fc C1240000 		.word	.L286+1
 2033 0a00 C1240000 		.word	.L286+1
 2034 0a04 C1240000 		.word	.L286+1
 2035 0a08 C1240000 		.word	.L286+1
 2036 0a0c C1240000 		.word	.L286+1
 2037 0a10 C1240000 		.word	.L286+1
 2038 0a14 C1240000 		.word	.L286+1
 2039 0a18 C1240000 		.word	.L286+1
 2040 0a1c 71170000 		.word	.L120+1
 2041 0a20 C1240000 		.word	.L286+1
 2042 0a24 C1240000 		.word	.L286+1
 2043 0a28 C1240000 		.word	.L286+1
 2044 0a2c C1240000 		.word	.L286+1
 2045 0a30 C1240000 		.word	.L286+1
 2046 0a34 C1240000 		.word	.L286+1
 2047 0a38 C1240000 		.word	.L286+1
 2048 0a3c C1240000 		.word	.L286+1
 2049 0a40 C1240000 		.word	.L286+1
 2050 0a44 C1240000 		.word	.L286+1
 2051 0a48 C1240000 		.word	.L286+1
 2052 0a4c C1240000 		.word	.L286+1
 2053 0a50 C1240000 		.word	.L286+1
 2054 0a54 C1240000 		.word	.L286+1
 2055 0a58 C1240000 		.word	.L286+1
 2056 0a5c C1240000 		.word	.L286+1
 2057 0a60 C1240000 		.word	.L286+1
 2058 0a64 C1240000 		.word	.L286+1
 2059 0a68 C1240000 		.word	.L286+1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 62


 2060 0a6c C1240000 		.word	.L286+1
 2061 0a70 3B180000 		.word	.L121+1
 2062 0a74 091D0000 		.word	.L122+1
 2063 0a78 C1240000 		.word	.L286+1
 2064 0a7c C1240000 		.word	.L286+1
 2065 0a80 C1240000 		.word	.L286+1
 2066 0a84 C1240000 		.word	.L286+1
 2067 0a88 D3210000 		.word	.L123+1
 2068 0a8c C1240000 		.word	.L286+1
 2069 0a90 C1240000 		.word	.L286+1
 2070 0a94 F7220000 		.word	.L124+1
 2071              		.p2align 1
 2072              	.L115:
 492:..\src/command_processing.c ****                     case 2:         // Position PID
 493:..\src/command_processing.c ****                         if(c_mem.motor[MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 2073              		.loc 1 493 0
 2074 0a98 07F59853 		add	r3, r7, #4864
 2075 0a9c 03F11F03 		add	r3, r3, #31
 2076 0aa0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2077 0aa2 AC49     		ldr	r1, .L293
 2078 0aa4 1346     		mov	r3, r2
 2079 0aa6 DB00     		lsls	r3, r3, #3
 2080 0aa8 9B1A     		subs	r3, r3, r2
 2081 0aaa 1B01     		lsls	r3, r3, #4
 2082 0aac 0B44     		add	r3, r3, r1
 2083 0aae 03F20F13 		addw	r3, r3, #271
 2084 0ab2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2085 0ab4 032B     		cmp	r3, #3
 2086 0ab6 00F02981 		beq	.L125
 494:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_p / 65536;
 2087              		.loc 1 494 0
 2088 0aba 07F59853 		add	r3, r7, #4864
 2089 0abe 03F11F03 		add	r3, r3, #31
 2090 0ac2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2091 0ac4 A349     		ldr	r1, .L293
 2092 0ac6 1346     		mov	r3, r2
 2093 0ac8 DB00     		lsls	r3, r3, #3
 2094 0aca 9B1A     		subs	r3, r3, r2
 2095 0acc 1B01     		lsls	r3, r3, #4
 2096 0ace 0B44     		add	r3, r3, r1
 2097 0ad0 B033     		adds	r3, r3, #176
 2098 0ad2 1B68     		ldr	r3, [r3]
 2099 0ad4 1846     		mov	r0, r3
 2100 0ad6 FFF7FEFF 		bl	__aeabi_i2f
 2101 0ada 0346     		mov	r3, r0
 2102 0adc 4FF08F41 		mov	r1, #1199570944
 2103 0ae0 1846     		mov	r0, r3
 2104 0ae2 FFF7FEFF 		bl	__aeabi_fdiv
 2105 0ae6 0346     		mov	r3, r0
 2106 0ae8 1A46     		mov	r2, r3
 2107 0aea 07F12803 		add	r3, r7, #40
 2108 0aee 0C3B     		subs	r3, r3, #12
 2109 0af0 1A60     		str	r2, [r3]	@ float
 495:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2110              		.loc 1 495 0
 2111 0af2 0023     		movs	r3, #0
 2112 0af4 07F59952 		add	r2, r7, #4896
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 63


 2113 0af8 02F10702 		add	r2, r2, #7
 2114 0afc 1370     		strb	r3, [r2]
 2115 0afe 2EE0     		b	.L126
 2116              	.L127:
 496:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2117              		.loc 1 496 0 discriminator 3
 2118 0b00 07F59953 		add	r3, r7, #4896
 2119 0b04 03F10503 		add	r3, r3, #5
 2120 0b08 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2121 0b0a 3222     		movs	r2, #50
 2122 0b0c 02FB03F3 		mul	r3, r2, r3
 2123 0b10 1A1D     		adds	r2, r3, #4
 2124 0b12 07F59953 		add	r3, r7, #4896
 2125 0b16 03F10303 		add	r3, r3, #3
 2126 0b1a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2127 0b1c 1A44     		add	r2, r2, r3
 2128 0b1e 07F59953 		add	r3, r7, #4896
 2129 0b22 03F10703 		add	r3, r3, #7
 2130 0b26 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2131 0b28 D31A     		subs	r3, r2, r3
 2132 0b2a 5A1E     		subs	r2, r3, #1
 2133 0b2c 07F59953 		add	r3, r7, #4896
 2134 0b30 03F10703 		add	r3, r3, #7
 2135 0b34 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2136 0b36 07F12803 		add	r3, r7, #40
 2137 0b3a 0C3B     		subs	r3, r3, #12
 2138 0b3c 0B44     		add	r3, r3, r1
 2139 0b3e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2140 0b40 07F16803 		add	r3, r7, #104
 2141 0b44 143B     		subs	r3, r3, #20
 2142 0b46 9954     		strb	r1, [r3, r2]
 495:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2143              		.loc 1 495 0 discriminator 3
 2144 0b48 07F59953 		add	r3, r7, #4896
 2145 0b4c 03F10703 		add	r3, r3, #7
 2146 0b50 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2147 0b52 0133     		adds	r3, r3, #1
 2148 0b54 07F59952 		add	r2, r7, #4896
 2149 0b58 02F10702 		add	r2, r2, #7
 2150 0b5c 1370     		strb	r3, [r2]
 2151              	.L126:
 495:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2152              		.loc 1 495 0 is_stmt 0 discriminator 1
 2153 0b5e 07F59953 		add	r3, r7, #4896
 2154 0b62 03F10703 		add	r3, r3, #7
 2155 0b66 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2156 0b68 07F59953 		add	r3, r7, #4896
 2157 0b6c 03F10303 		add	r3, r3, #3
 2158 0b70 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2159 0b72 9A42     		cmp	r2, r3
 2160 0b74 C4D3     		bcc	.L127
 497:..\src/command_processing.c ****                             }
 498:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_i / 65536;
 2161              		.loc 1 498 0 is_stmt 1
 2162 0b76 07F59853 		add	r3, r7, #4864
 2163 0b7a 03F11F03 		add	r3, r3, #31
 2164 0b7e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 64


 2165 0b80 7449     		ldr	r1, .L293
 2166 0b82 1346     		mov	r3, r2
 2167 0b84 DB00     		lsls	r3, r3, #3
 2168 0b86 9B1A     		subs	r3, r3, r2
 2169 0b88 1B01     		lsls	r3, r3, #4
 2170 0b8a 0B44     		add	r3, r3, r1
 2171 0b8c B433     		adds	r3, r3, #180
 2172 0b8e 1B68     		ldr	r3, [r3]
 2173 0b90 1846     		mov	r0, r3
 2174 0b92 FFF7FEFF 		bl	__aeabi_i2f
 2175 0b96 0346     		mov	r3, r0
 2176 0b98 4FF08F41 		mov	r1, #1199570944
 2177 0b9c 1846     		mov	r0, r3
 2178 0b9e FFF7FEFF 		bl	__aeabi_fdiv
 2179 0ba2 0346     		mov	r3, r0
 2180 0ba4 1A46     		mov	r2, r3
 2181 0ba6 07F12803 		add	r3, r7, #40
 2182 0baa 0C3B     		subs	r3, r3, #12
 2183 0bac 1A60     		str	r2, [r3]	@ float
 499:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2184              		.loc 1 499 0
 2185 0bae 0023     		movs	r3, #0
 2186 0bb0 07F59952 		add	r2, r7, #4896
 2187 0bb4 02F10702 		add	r2, r2, #7
 2188 0bb8 1370     		strb	r3, [r2]
 2189 0bba 34E0     		b	.L128
 2190              	.L129:
 500:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2191              		.loc 1 500 0 discriminator 3
 2192 0bbc 07F59953 		add	r3, r7, #4896
 2193 0bc0 03F10503 		add	r3, r3, #5
 2194 0bc4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2195 0bc6 3222     		movs	r2, #50
 2196 0bc8 02FB03F3 		mul	r3, r2, r3
 2197 0bcc 1A1D     		adds	r2, r3, #4
 2198 0bce 07F59953 		add	r3, r7, #4896
 2199 0bd2 03F10303 		add	r3, r3, #3
 2200 0bd6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2201 0bd8 1A44     		add	r2, r2, r3
 2202 0bda 07F59953 		add	r3, r7, #4896
 2203 0bde 03F10303 		add	r3, r3, #3
 2204 0be2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2205 0be4 1A44     		add	r2, r2, r3
 2206 0be6 07F59953 		add	r3, r7, #4896
 2207 0bea 03F10703 		add	r3, r3, #7
 2208 0bee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2209 0bf0 D31A     		subs	r3, r2, r3
 2210 0bf2 5A1E     		subs	r2, r3, #1
 2211 0bf4 07F59953 		add	r3, r7, #4896
 2212 0bf8 03F10703 		add	r3, r3, #7
 2213 0bfc 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2214 0bfe 07F12803 		add	r3, r7, #40
 2215 0c02 0C3B     		subs	r3, r3, #12
 2216 0c04 0B44     		add	r3, r3, r1
 2217 0c06 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2218 0c08 07F16803 		add	r3, r7, #104
 2219 0c0c 143B     		subs	r3, r3, #20
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 65


 2220 0c0e 9954     		strb	r1, [r3, r2]
 499:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2221              		.loc 1 499 0 discriminator 3
 2222 0c10 07F59953 		add	r3, r7, #4896
 2223 0c14 03F10703 		add	r3, r3, #7
 2224 0c18 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2225 0c1a 0133     		adds	r3, r3, #1
 2226 0c1c 07F59952 		add	r2, r7, #4896
 2227 0c20 02F10702 		add	r2, r2, #7
 2228 0c24 1370     		strb	r3, [r2]
 2229              	.L128:
 499:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2230              		.loc 1 499 0 is_stmt 0 discriminator 1
 2231 0c26 07F59953 		add	r3, r7, #4896
 2232 0c2a 03F10703 		add	r3, r3, #7
 2233 0c2e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2234 0c30 07F59953 		add	r3, r7, #4896
 2235 0c34 03F10303 		add	r3, r3, #3
 2236 0c38 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2237 0c3a 9A42     		cmp	r2, r3
 2238 0c3c BED3     		bcc	.L129
 501:..\src/command_processing.c ****                             }
 502:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_d / 65536;
 2239              		.loc 1 502 0 is_stmt 1
 2240 0c3e 07F59853 		add	r3, r7, #4864
 2241 0c42 03F11F03 		add	r3, r3, #31
 2242 0c46 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2243 0c48 4249     		ldr	r1, .L293
 2244 0c4a 1346     		mov	r3, r2
 2245 0c4c DB00     		lsls	r3, r3, #3
 2246 0c4e 9B1A     		subs	r3, r3, r2
 2247 0c50 1B01     		lsls	r3, r3, #4
 2248 0c52 0B44     		add	r3, r3, r1
 2249 0c54 B833     		adds	r3, r3, #184
 2250 0c56 1B68     		ldr	r3, [r3]
 2251 0c58 1846     		mov	r0, r3
 2252 0c5a FFF7FEFF 		bl	__aeabi_i2f
 2253 0c5e 0346     		mov	r3, r0
 2254 0c60 4FF08F41 		mov	r1, #1199570944
 2255 0c64 1846     		mov	r0, r3
 2256 0c66 FFF7FEFF 		bl	__aeabi_fdiv
 2257 0c6a 0346     		mov	r3, r0
 2258 0c6c 1A46     		mov	r2, r3
 2259 0c6e 07F12803 		add	r3, r7, #40
 2260 0c72 0C3B     		subs	r3, r3, #12
 2261 0c74 1A60     		str	r2, [r3]	@ float
 503:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2262              		.loc 1 503 0
 2263 0c76 0023     		movs	r3, #0
 2264 0c78 07F59952 		add	r2, r7, #4896
 2265 0c7c 02F10702 		add	r2, r2, #7
 2266 0c80 1370     		strb	r3, [r2]
 2267 0c82 35E0     		b	.L130
 2268              	.L131:
 504:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2269              		.loc 1 504 0 discriminator 3
 2270 0c84 07F59953 		add	r3, r7, #4896
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 66


 2271 0c88 03F10503 		add	r3, r3, #5
 2272 0c8c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2273 0c8e 3222     		movs	r2, #50
 2274 0c90 02FB03F3 		mul	r3, r2, r3
 2275 0c94 1A1D     		adds	r2, r3, #4
 2276 0c96 07F59953 		add	r3, r7, #4896
 2277 0c9a 03F10303 		add	r3, r3, #3
 2278 0c9e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2279 0ca0 5B00     		lsls	r3, r3, #1
 2280 0ca2 1A44     		add	r2, r2, r3
 2281 0ca4 07F59953 		add	r3, r7, #4896
 2282 0ca8 03F10303 		add	r3, r3, #3
 2283 0cac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2284 0cae 1A44     		add	r2, r2, r3
 2285 0cb0 07F59953 		add	r3, r7, #4896
 2286 0cb4 03F10703 		add	r3, r3, #7
 2287 0cb8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2288 0cba D31A     		subs	r3, r2, r3
 2289 0cbc 5A1E     		subs	r2, r3, #1
 2290 0cbe 07F59953 		add	r3, r7, #4896
 2291 0cc2 03F10703 		add	r3, r3, #7
 2292 0cc6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2293 0cc8 07F12803 		add	r3, r7, #40
 2294 0ccc 0C3B     		subs	r3, r3, #12
 2295 0cce 0B44     		add	r3, r3, r1
 2296 0cd0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2297 0cd2 07F16803 		add	r3, r7, #104
 2298 0cd6 143B     		subs	r3, r3, #20
 2299 0cd8 9954     		strb	r1, [r3, r2]
 503:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2300              		.loc 1 503 0 discriminator 3
 2301 0cda 07F59953 		add	r3, r7, #4896
 2302 0cde 03F10703 		add	r3, r3, #7
 2303 0ce2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2304 0ce4 0133     		adds	r3, r3, #1
 2305 0ce6 07F59952 		add	r2, r7, #4896
 2306 0cea 02F10702 		add	r2, r2, #7
 2307 0cee 1370     		strb	r3, [r2]
 2308              	.L130:
 503:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2309              		.loc 1 503 0 is_stmt 0 discriminator 1
 2310 0cf0 07F59953 		add	r3, r7, #4896
 2311 0cf4 03F10703 		add	r3, r3, #7
 2312 0cf8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2313 0cfa 07F59953 		add	r3, r7, #4896
 2314 0cfe 03F10303 		add	r3, r3, #3
 2315 0d02 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2316 0d04 9A42     		cmp	r2, r3
 2317 0d06 BDD3     		bcc	.L131
 505:..\src/command_processing.c ****                             } 
 506:..\src/command_processing.c ****                         }
 507:..\src/command_processing.c ****                         else {
 508:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_p_dl / 65536;
 509:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 510:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 511:..\src/command_processing.c ****                             }
 512:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_i_dl / 65536;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 67


 513:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 514:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 515:..\src/command_processing.c ****                             }
 516:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_d_dl / 65536;
 517:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 518:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 519:..\src/command_processing.c ****                             }
 520:..\src/command_processing.c ****                         }
 521:..\src/command_processing.c ****                         break;
 2318              		.loc 1 521 0 is_stmt 1
 2319 0d08 01F0DBBB 		b	.L113
 2320              	.L125:
 508:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2321              		.loc 1 508 0
 2322 0d0c 07F59853 		add	r3, r7, #4864
 2323 0d10 03F11F03 		add	r3, r3, #31
 2324 0d14 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2325 0d16 0F49     		ldr	r1, .L293
 2326 0d18 1346     		mov	r3, r2
 2327 0d1a DB00     		lsls	r3, r3, #3
 2328 0d1c 9B1A     		subs	r3, r3, r2
 2329 0d1e 1B01     		lsls	r3, r3, #4
 2330 0d20 0B44     		add	r3, r3, r1
 2331 0d22 C833     		adds	r3, r3, #200
 2332 0d24 1B68     		ldr	r3, [r3]
 2333 0d26 1846     		mov	r0, r3
 2334 0d28 FFF7FEFF 		bl	__aeabi_i2f
 2335 0d2c 0346     		mov	r3, r0
 2336 0d2e 4FF08F41 		mov	r1, #1199570944
 2337 0d32 1846     		mov	r0, r3
 2338 0d34 FFF7FEFF 		bl	__aeabi_fdiv
 2339 0d38 0346     		mov	r3, r0
 2340 0d3a 1A46     		mov	r2, r3
 2341 0d3c 07F12803 		add	r3, r7, #40
 2342 0d40 0C3B     		subs	r3, r3, #12
 2343 0d42 1A60     		str	r2, [r3]	@ float
 509:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2344              		.loc 1 509 0
 2345 0d44 0023     		movs	r3, #0
 2346 0d46 07F59952 		add	r2, r7, #4896
 2347 0d4a 02F10702 		add	r2, r2, #7
 2348 0d4e 1370     		strb	r3, [r2]
 2349 0d50 31E0     		b	.L133
 2350              	.L294:
 2351 0d52 00BF     		.align	2
 2352              	.L293:
 2353 0d54 00000000 		.word	c_mem
 2354              	.L134:
 510:..\src/command_processing.c ****                             }
 2355              		.loc 1 510 0 discriminator 3
 2356 0d58 07F59953 		add	r3, r7, #4896
 2357 0d5c 03F10503 		add	r3, r3, #5
 2358 0d60 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2359 0d62 3222     		movs	r2, #50
 2360 0d64 02FB03F3 		mul	r3, r2, r3
 2361 0d68 1A1D     		adds	r2, r3, #4
 2362 0d6a 07F59953 		add	r3, r7, #4896
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 68


 2363 0d6e 03F10303 		add	r3, r3, #3
 2364 0d72 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2365 0d74 1A44     		add	r2, r2, r3
 2366 0d76 07F59953 		add	r3, r7, #4896
 2367 0d7a 03F10703 		add	r3, r3, #7
 2368 0d7e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2369 0d80 D31A     		subs	r3, r2, r3
 2370 0d82 5A1E     		subs	r2, r3, #1
 2371 0d84 07F59953 		add	r3, r7, #4896
 2372 0d88 03F10703 		add	r3, r3, #7
 2373 0d8c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2374 0d8e 07F12803 		add	r3, r7, #40
 2375 0d92 0C3B     		subs	r3, r3, #12
 2376 0d94 0B44     		add	r3, r3, r1
 2377 0d96 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2378 0d98 07F16803 		add	r3, r7, #104
 2379 0d9c 143B     		subs	r3, r3, #20
 2380 0d9e 9954     		strb	r1, [r3, r2]
 509:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2381              		.loc 1 509 0 discriminator 3
 2382 0da0 07F59953 		add	r3, r7, #4896
 2383 0da4 03F10703 		add	r3, r3, #7
 2384 0da8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2385 0daa 0133     		adds	r3, r3, #1
 2386 0dac 07F59952 		add	r2, r7, #4896
 2387 0db0 02F10702 		add	r2, r2, #7
 2388 0db4 1370     		strb	r3, [r2]
 2389              	.L133:
 509:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2390              		.loc 1 509 0 is_stmt 0 discriminator 1
 2391 0db6 07F59953 		add	r3, r7, #4896
 2392 0dba 03F10703 		add	r3, r3, #7
 2393 0dbe 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2394 0dc0 07F59953 		add	r3, r7, #4896
 2395 0dc4 03F10303 		add	r3, r3, #3
 2396 0dc8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2397 0dca 9A42     		cmp	r2, r3
 2398 0dcc C4D3     		bcc	.L134
 512:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2399              		.loc 1 512 0 is_stmt 1
 2400 0dce 07F59853 		add	r3, r7, #4864
 2401 0dd2 03F11F03 		add	r3, r3, #31
 2402 0dd6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2403 0dd8 AB49     		ldr	r1, .L295
 2404 0dda 1346     		mov	r3, r2
 2405 0ddc DB00     		lsls	r3, r3, #3
 2406 0dde 9B1A     		subs	r3, r3, r2
 2407 0de0 1B01     		lsls	r3, r3, #4
 2408 0de2 0B44     		add	r3, r3, r1
 2409 0de4 CC33     		adds	r3, r3, #204
 2410 0de6 1B68     		ldr	r3, [r3]
 2411 0de8 1846     		mov	r0, r3
 2412 0dea FFF7FEFF 		bl	__aeabi_i2f
 2413 0dee 0346     		mov	r3, r0
 2414 0df0 4FF08F41 		mov	r1, #1199570944
 2415 0df4 1846     		mov	r0, r3
 2416 0df6 FFF7FEFF 		bl	__aeabi_fdiv
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 69


 2417 0dfa 0346     		mov	r3, r0
 2418 0dfc 1A46     		mov	r2, r3
 2419 0dfe 07F12803 		add	r3, r7, #40
 2420 0e02 0C3B     		subs	r3, r3, #12
 2421 0e04 1A60     		str	r2, [r3]	@ float
 513:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2422              		.loc 1 513 0
 2423 0e06 0023     		movs	r3, #0
 2424 0e08 07F59952 		add	r2, r7, #4896
 2425 0e0c 02F10702 		add	r2, r2, #7
 2426 0e10 1370     		strb	r3, [r2]
 2427 0e12 34E0     		b	.L135
 2428              	.L136:
 514:..\src/command_processing.c ****                             }
 2429              		.loc 1 514 0 discriminator 3
 2430 0e14 07F59953 		add	r3, r7, #4896
 2431 0e18 03F10503 		add	r3, r3, #5
 2432 0e1c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2433 0e1e 3222     		movs	r2, #50
 2434 0e20 02FB03F3 		mul	r3, r2, r3
 2435 0e24 1A1D     		adds	r2, r3, #4
 2436 0e26 07F59953 		add	r3, r7, #4896
 2437 0e2a 03F10303 		add	r3, r3, #3
 2438 0e2e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2439 0e30 1A44     		add	r2, r2, r3
 2440 0e32 07F59953 		add	r3, r7, #4896
 2441 0e36 03F10303 		add	r3, r3, #3
 2442 0e3a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2443 0e3c 1A44     		add	r2, r2, r3
 2444 0e3e 07F59953 		add	r3, r7, #4896
 2445 0e42 03F10703 		add	r3, r3, #7
 2446 0e46 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2447 0e48 D31A     		subs	r3, r2, r3
 2448 0e4a 5A1E     		subs	r2, r3, #1
 2449 0e4c 07F59953 		add	r3, r7, #4896
 2450 0e50 03F10703 		add	r3, r3, #7
 2451 0e54 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2452 0e56 07F12803 		add	r3, r7, #40
 2453 0e5a 0C3B     		subs	r3, r3, #12
 2454 0e5c 0B44     		add	r3, r3, r1
 2455 0e5e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2456 0e60 07F16803 		add	r3, r7, #104
 2457 0e64 143B     		subs	r3, r3, #20
 2458 0e66 9954     		strb	r1, [r3, r2]
 513:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2459              		.loc 1 513 0 discriminator 3
 2460 0e68 07F59953 		add	r3, r7, #4896
 2461 0e6c 03F10703 		add	r3, r3, #7
 2462 0e70 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2463 0e72 0133     		adds	r3, r3, #1
 2464 0e74 07F59952 		add	r2, r7, #4896
 2465 0e78 02F10702 		add	r2, r2, #7
 2466 0e7c 1370     		strb	r3, [r2]
 2467              	.L135:
 513:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2468              		.loc 1 513 0 is_stmt 0 discriminator 1
 2469 0e7e 07F59953 		add	r3, r7, #4896
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 70


 2470 0e82 03F10703 		add	r3, r3, #7
 2471 0e86 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2472 0e88 07F59953 		add	r3, r7, #4896
 2473 0e8c 03F10303 		add	r3, r3, #3
 2474 0e90 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2475 0e92 9A42     		cmp	r2, r3
 2476 0e94 BED3     		bcc	.L136
 516:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2477              		.loc 1 516 0 is_stmt 1
 2478 0e96 07F59853 		add	r3, r7, #4864
 2479 0e9a 03F11F03 		add	r3, r3, #31
 2480 0e9e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2481 0ea0 7949     		ldr	r1, .L295
 2482 0ea2 1346     		mov	r3, r2
 2483 0ea4 DB00     		lsls	r3, r3, #3
 2484 0ea6 9B1A     		subs	r3, r3, r2
 2485 0ea8 1B01     		lsls	r3, r3, #4
 2486 0eaa 0B44     		add	r3, r3, r1
 2487 0eac D033     		adds	r3, r3, #208
 2488 0eae 1B68     		ldr	r3, [r3]
 2489 0eb0 1846     		mov	r0, r3
 2490 0eb2 FFF7FEFF 		bl	__aeabi_i2f
 2491 0eb6 0346     		mov	r3, r0
 2492 0eb8 4FF08F41 		mov	r1, #1199570944
 2493 0ebc 1846     		mov	r0, r3
 2494 0ebe FFF7FEFF 		bl	__aeabi_fdiv
 2495 0ec2 0346     		mov	r3, r0
 2496 0ec4 1A46     		mov	r2, r3
 2497 0ec6 07F12803 		add	r3, r7, #40
 2498 0eca 0C3B     		subs	r3, r3, #12
 2499 0ecc 1A60     		str	r2, [r3]	@ float
 517:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2500              		.loc 1 517 0
 2501 0ece 0023     		movs	r3, #0
 2502 0ed0 07F59952 		add	r2, r7, #4896
 2503 0ed4 02F10702 		add	r2, r2, #7
 2504 0ed8 1370     		strb	r3, [r2]
 2505 0eda 35E0     		b	.L137
 2506              	.L138:
 518:..\src/command_processing.c ****                             }
 2507              		.loc 1 518 0 discriminator 3
 2508 0edc 07F59953 		add	r3, r7, #4896
 2509 0ee0 03F10503 		add	r3, r3, #5
 2510 0ee4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2511 0ee6 3222     		movs	r2, #50
 2512 0ee8 02FB03F3 		mul	r3, r2, r3
 2513 0eec 1A1D     		adds	r2, r3, #4
 2514 0eee 07F59953 		add	r3, r7, #4896
 2515 0ef2 03F10303 		add	r3, r3, #3
 2516 0ef6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2517 0ef8 5B00     		lsls	r3, r3, #1
 2518 0efa 1A44     		add	r2, r2, r3
 2519 0efc 07F59953 		add	r3, r7, #4896
 2520 0f00 03F10303 		add	r3, r3, #3
 2521 0f04 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2522 0f06 1A44     		add	r2, r2, r3
 2523 0f08 07F59953 		add	r3, r7, #4896
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 71


 2524 0f0c 03F10703 		add	r3, r3, #7
 2525 0f10 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2526 0f12 D31A     		subs	r3, r2, r3
 2527 0f14 5A1E     		subs	r2, r3, #1
 2528 0f16 07F59953 		add	r3, r7, #4896
 2529 0f1a 03F10703 		add	r3, r3, #7
 2530 0f1e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2531 0f20 07F12803 		add	r3, r7, #40
 2532 0f24 0C3B     		subs	r3, r3, #12
 2533 0f26 0B44     		add	r3, r3, r1
 2534 0f28 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2535 0f2a 07F16803 		add	r3, r7, #104
 2536 0f2e 143B     		subs	r3, r3, #20
 2537 0f30 9954     		strb	r1, [r3, r2]
 517:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2538              		.loc 1 517 0 discriminator 3
 2539 0f32 07F59953 		add	r3, r7, #4896
 2540 0f36 03F10703 		add	r3, r3, #7
 2541 0f3a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2542 0f3c 0133     		adds	r3, r3, #1
 2543 0f3e 07F59952 		add	r2, r7, #4896
 2544 0f42 02F10702 		add	r2, r2, #7
 2545 0f46 1370     		strb	r3, [r2]
 2546              	.L137:
 517:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2547              		.loc 1 517 0 is_stmt 0 discriminator 1
 2548 0f48 07F59953 		add	r3, r7, #4896
 2549 0f4c 03F10703 		add	r3, r3, #7
 2550 0f50 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2551 0f52 07F59953 		add	r3, r7, #4896
 2552 0f56 03F10303 		add	r3, r3, #3
 2553 0f5a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2554 0f5c 9A42     		cmp	r2, r3
 2555 0f5e BDD3     		bcc	.L138
 2556              		.loc 1 521 0 is_stmt 1
 2557 0f60 01F0AFBA 		b	.L113
 2558              	.L117:
 522:..\src/command_processing.c ****                         
 523:..\src/command_processing.c ****                     case 3:         //Current PID
 524:..\src/command_processing.c ****                         if(c_mem.motor[MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 2559              		.loc 1 524 0
 2560 0f64 07F59853 		add	r3, r7, #4864
 2561 0f68 03F11F03 		add	r3, r3, #31
 2562 0f6c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2563 0f6e 4649     		ldr	r1, .L295
 2564 0f70 1346     		mov	r3, r2
 2565 0f72 DB00     		lsls	r3, r3, #3
 2566 0f74 9B1A     		subs	r3, r3, r2
 2567 0f76 1B01     		lsls	r3, r3, #4
 2568 0f78 0B44     		add	r3, r3, r1
 2569 0f7a 03F20F13 		addw	r3, r3, #271
 2570 0f7e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2571 0f80 032B     		cmp	r3, #3
 2572 0f82 00F02B81 		beq	.L139
 525:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_p_c / 65536;
 2573              		.loc 1 525 0
 2574 0f86 07F59853 		add	r3, r7, #4864
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 72


 2575 0f8a 03F11F03 		add	r3, r3, #31
 2576 0f8e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2577 0f90 3D49     		ldr	r1, .L295
 2578 0f92 1346     		mov	r3, r2
 2579 0f94 DB00     		lsls	r3, r3, #3
 2580 0f96 9B1A     		subs	r3, r3, r2
 2581 0f98 1B01     		lsls	r3, r3, #4
 2582 0f9a 0B44     		add	r3, r3, r1
 2583 0f9c BC33     		adds	r3, r3, #188
 2584 0f9e 1B68     		ldr	r3, [r3]
 2585 0fa0 1846     		mov	r0, r3
 2586 0fa2 FFF7FEFF 		bl	__aeabi_i2f
 2587 0fa6 0346     		mov	r3, r0
 2588 0fa8 4FF08F41 		mov	r1, #1199570944
 2589 0fac 1846     		mov	r0, r3
 2590 0fae FFF7FEFF 		bl	__aeabi_fdiv
 2591 0fb2 0346     		mov	r3, r0
 2592 0fb4 1A46     		mov	r2, r3
 2593 0fb6 07F12803 		add	r3, r7, #40
 2594 0fba 0C3B     		subs	r3, r3, #12
 2595 0fbc 1A60     		str	r2, [r3]	@ float
 526:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2596              		.loc 1 526 0
 2597 0fbe 0023     		movs	r3, #0
 2598 0fc0 07F59952 		add	r2, r7, #4896
 2599 0fc4 02F10702 		add	r2, r2, #7
 2600 0fc8 1370     		strb	r3, [r2]
 2601 0fca 2EE0     		b	.L140
 2602              	.L141:
 527:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2603              		.loc 1 527 0 discriminator 3
 2604 0fcc 07F59953 		add	r3, r7, #4896
 2605 0fd0 03F10503 		add	r3, r3, #5
 2606 0fd4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2607 0fd6 3222     		movs	r2, #50
 2608 0fd8 02FB03F3 		mul	r3, r2, r3
 2609 0fdc 1A1D     		adds	r2, r3, #4
 2610 0fde 07F59953 		add	r3, r7, #4896
 2611 0fe2 03F10303 		add	r3, r3, #3
 2612 0fe6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2613 0fe8 1A44     		add	r2, r2, r3
 2614 0fea 07F59953 		add	r3, r7, #4896
 2615 0fee 03F10703 		add	r3, r3, #7
 2616 0ff2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2617 0ff4 D31A     		subs	r3, r2, r3
 2618 0ff6 5A1E     		subs	r2, r3, #1
 2619 0ff8 07F59953 		add	r3, r7, #4896
 2620 0ffc 03F10703 		add	r3, r3, #7
 2621 1000 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2622 1002 07F12803 		add	r3, r7, #40
 2623 1006 0C3B     		subs	r3, r3, #12
 2624 1008 0B44     		add	r3, r3, r1
 2625 100a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2626 100c 07F16803 		add	r3, r7, #104
 2627 1010 143B     		subs	r3, r3, #20
 2628 1012 9954     		strb	r1, [r3, r2]
 526:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 73


 2629              		.loc 1 526 0 discriminator 3
 2630 1014 07F59953 		add	r3, r7, #4896
 2631 1018 03F10703 		add	r3, r3, #7
 2632 101c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2633 101e 0133     		adds	r3, r3, #1
 2634 1020 07F59952 		add	r2, r7, #4896
 2635 1024 02F10702 		add	r2, r2, #7
 2636 1028 1370     		strb	r3, [r2]
 2637              	.L140:
 526:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2638              		.loc 1 526 0 is_stmt 0 discriminator 1
 2639 102a 07F59953 		add	r3, r7, #4896
 2640 102e 03F10703 		add	r3, r3, #7
 2641 1032 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2642 1034 07F59953 		add	r3, r7, #4896
 2643 1038 03F10303 		add	r3, r3, #3
 2644 103c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2645 103e 9A42     		cmp	r2, r3
 2646 1040 C4D3     		bcc	.L141
 528:..\src/command_processing.c ****                             }
 529:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_i_c / 65536;
 2647              		.loc 1 529 0 is_stmt 1
 2648 1042 07F59853 		add	r3, r7, #4864
 2649 1046 03F11F03 		add	r3, r3, #31
 2650 104a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2651 104c 0E49     		ldr	r1, .L295
 2652 104e 1346     		mov	r3, r2
 2653 1050 DB00     		lsls	r3, r3, #3
 2654 1052 9B1A     		subs	r3, r3, r2
 2655 1054 1B01     		lsls	r3, r3, #4
 2656 1056 0B44     		add	r3, r3, r1
 2657 1058 C033     		adds	r3, r3, #192
 2658 105a 1B68     		ldr	r3, [r3]
 2659 105c 1846     		mov	r0, r3
 2660 105e FFF7FEFF 		bl	__aeabi_i2f
 2661 1062 0346     		mov	r3, r0
 2662 1064 4FF08F41 		mov	r1, #1199570944
 2663 1068 1846     		mov	r0, r3
 2664 106a FFF7FEFF 		bl	__aeabi_fdiv
 2665 106e 0346     		mov	r3, r0
 2666 1070 1A46     		mov	r2, r3
 2667 1072 07F12803 		add	r3, r7, #40
 2668 1076 0C3B     		subs	r3, r3, #12
 2669 1078 1A60     		str	r2, [r3]	@ float
 530:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2670              		.loc 1 530 0
 2671 107a 0023     		movs	r3, #0
 2672 107c 07F59952 		add	r2, r7, #4896
 2673 1080 02F10702 		add	r2, r2, #7
 2674 1084 1370     		strb	r3, [r2]
 2675 1086 36E0     		b	.L142
 2676              	.L296:
 2677              		.align	2
 2678              	.L295:
 2679 1088 00000000 		.word	c_mem
 2680              	.L143:
 531:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 74


 2681              		.loc 1 531 0 discriminator 3
 2682 108c 07F59953 		add	r3, r7, #4896
 2683 1090 03F10503 		add	r3, r3, #5
 2684 1094 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2685 1096 3222     		movs	r2, #50
 2686 1098 02FB03F3 		mul	r3, r2, r3
 2687 109c 1A1D     		adds	r2, r3, #4
 2688 109e 07F59953 		add	r3, r7, #4896
 2689 10a2 03F10303 		add	r3, r3, #3
 2690 10a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2691 10a8 1A44     		add	r2, r2, r3
 2692 10aa 07F59953 		add	r3, r7, #4896
 2693 10ae 03F10303 		add	r3, r3, #3
 2694 10b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2695 10b4 1A44     		add	r2, r2, r3
 2696 10b6 07F59953 		add	r3, r7, #4896
 2697 10ba 03F10703 		add	r3, r3, #7
 2698 10be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2699 10c0 D31A     		subs	r3, r2, r3
 2700 10c2 5A1E     		subs	r2, r3, #1
 2701 10c4 07F59953 		add	r3, r7, #4896
 2702 10c8 03F10703 		add	r3, r3, #7
 2703 10cc 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2704 10ce 07F12803 		add	r3, r7, #40
 2705 10d2 0C3B     		subs	r3, r3, #12
 2706 10d4 0B44     		add	r3, r3, r1
 2707 10d6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2708 10d8 07F16803 		add	r3, r7, #104
 2709 10dc 143B     		subs	r3, r3, #20
 2710 10de 9954     		strb	r1, [r3, r2]
 530:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2711              		.loc 1 530 0 discriminator 3
 2712 10e0 07F59953 		add	r3, r7, #4896
 2713 10e4 03F10703 		add	r3, r3, #7
 2714 10e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2715 10ea 0133     		adds	r3, r3, #1
 2716 10ec 07F59952 		add	r2, r7, #4896
 2717 10f0 02F10702 		add	r2, r2, #7
 2718 10f4 1370     		strb	r3, [r2]
 2719              	.L142:
 530:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2720              		.loc 1 530 0 is_stmt 0 discriminator 1
 2721 10f6 07F59953 		add	r3, r7, #4896
 2722 10fa 03F10703 		add	r3, r3, #7
 2723 10fe 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2724 1100 07F59953 		add	r3, r7, #4896
 2725 1104 03F10303 		add	r3, r3, #3
 2726 1108 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2727 110a 9A42     		cmp	r2, r3
 2728 110c BED3     		bcc	.L143
 532:..\src/command_processing.c ****                             }
 533:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_d_c / 65536;
 2729              		.loc 1 533 0 is_stmt 1
 2730 110e 07F59853 		add	r3, r7, #4864
 2731 1112 03F11F03 		add	r3, r3, #31
 2732 1116 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2733 1118 C849     		ldr	r1, .L297
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 75


 2734 111a 1346     		mov	r3, r2
 2735 111c DB00     		lsls	r3, r3, #3
 2736 111e 9B1A     		subs	r3, r3, r2
 2737 1120 1B01     		lsls	r3, r3, #4
 2738 1122 0B44     		add	r3, r3, r1
 2739 1124 C433     		adds	r3, r3, #196
 2740 1126 1B68     		ldr	r3, [r3]
 2741 1128 1846     		mov	r0, r3
 2742 112a FFF7FEFF 		bl	__aeabi_i2f
 2743 112e 0346     		mov	r3, r0
 2744 1130 4FF08F41 		mov	r1, #1199570944
 2745 1134 1846     		mov	r0, r3
 2746 1136 FFF7FEFF 		bl	__aeabi_fdiv
 2747 113a 0346     		mov	r3, r0
 2748 113c 1A46     		mov	r2, r3
 2749 113e 07F12803 		add	r3, r7, #40
 2750 1142 0C3B     		subs	r3, r3, #12
 2751 1144 1A60     		str	r2, [r3]	@ float
 534:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2752              		.loc 1 534 0
 2753 1146 0023     		movs	r3, #0
 2754 1148 07F59952 		add	r2, r7, #4896
 2755 114c 02F10702 		add	r2, r2, #7
 2756 1150 1370     		strb	r3, [r2]
 2757 1152 35E0     		b	.L144
 2758              	.L145:
 535:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2759              		.loc 1 535 0 discriminator 3
 2760 1154 07F59953 		add	r3, r7, #4896
 2761 1158 03F10503 		add	r3, r3, #5
 2762 115c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2763 115e 3222     		movs	r2, #50
 2764 1160 02FB03F3 		mul	r3, r2, r3
 2765 1164 1A1D     		adds	r2, r3, #4
 2766 1166 07F59953 		add	r3, r7, #4896
 2767 116a 03F10303 		add	r3, r3, #3
 2768 116e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2769 1170 5B00     		lsls	r3, r3, #1
 2770 1172 1A44     		add	r2, r2, r3
 2771 1174 07F59953 		add	r3, r7, #4896
 2772 1178 03F10303 		add	r3, r3, #3
 2773 117c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2774 117e 1A44     		add	r2, r2, r3
 2775 1180 07F59953 		add	r3, r7, #4896
 2776 1184 03F10703 		add	r3, r3, #7
 2777 1188 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2778 118a D31A     		subs	r3, r2, r3
 2779 118c 5A1E     		subs	r2, r3, #1
 2780 118e 07F59953 		add	r3, r7, #4896
 2781 1192 03F10703 		add	r3, r3, #7
 2782 1196 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2783 1198 07F12803 		add	r3, r7, #40
 2784 119c 0C3B     		subs	r3, r3, #12
 2785 119e 0B44     		add	r3, r3, r1
 2786 11a0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2787 11a2 07F16803 		add	r3, r7, #104
 2788 11a6 143B     		subs	r3, r3, #20
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 76


 2789 11a8 9954     		strb	r1, [r3, r2]
 534:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2790              		.loc 1 534 0 discriminator 3
 2791 11aa 07F59953 		add	r3, r7, #4896
 2792 11ae 03F10703 		add	r3, r3, #7
 2793 11b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2794 11b4 0133     		adds	r3, r3, #1
 2795 11b6 07F59952 		add	r2, r7, #4896
 2796 11ba 02F10702 		add	r2, r2, #7
 2797 11be 1370     		strb	r3, [r2]
 2798              	.L144:
 534:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2799              		.loc 1 534 0 is_stmt 0 discriminator 1
 2800 11c0 07F59953 		add	r3, r7, #4896
 2801 11c4 03F10703 		add	r3, r3, #7
 2802 11c8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2803 11ca 07F59953 		add	r3, r7, #4896
 2804 11ce 03F10303 		add	r3, r3, #3
 2805 11d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2806 11d4 9A42     		cmp	r2, r3
 2807 11d6 BDD3     		bcc	.L145
 536:..\src/command_processing.c ****                             }
 537:..\src/command_processing.c ****                         }
 538:..\src/command_processing.c ****                         else {
 539:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_p_c_dl / 65536;
 540:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 541:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 542:..\src/command_processing.c ****                             }
 543:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_i_c_dl / 65536;
 544:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 545:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 546:..\src/command_processing.c ****                             }
 547:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_d_c_dl / 65536;
 548:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 549:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 550:..\src/command_processing.c ****                             }
 551:..\src/command_processing.c ****                         }            
 552:..\src/command_processing.c ****                         break;  
 2808              		.loc 1 552 0 is_stmt 1
 2809 11d8 01F073B9 		b	.L113
 2810              	.L139:
 539:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2811              		.loc 1 539 0
 2812 11dc 07F59853 		add	r3, r7, #4864
 2813 11e0 03F11F03 		add	r3, r3, #31
 2814 11e4 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2815 11e6 9549     		ldr	r1, .L297
 2816 11e8 1346     		mov	r3, r2
 2817 11ea DB00     		lsls	r3, r3, #3
 2818 11ec 9B1A     		subs	r3, r3, r2
 2819 11ee 1B01     		lsls	r3, r3, #4
 2820 11f0 0B44     		add	r3, r3, r1
 2821 11f2 D433     		adds	r3, r3, #212
 2822 11f4 1B68     		ldr	r3, [r3]
 2823 11f6 1846     		mov	r0, r3
 2824 11f8 FFF7FEFF 		bl	__aeabi_i2f
 2825 11fc 0346     		mov	r3, r0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 77


 2826 11fe 4FF08F41 		mov	r1, #1199570944
 2827 1202 1846     		mov	r0, r3
 2828 1204 FFF7FEFF 		bl	__aeabi_fdiv
 2829 1208 0346     		mov	r3, r0
 2830 120a 1A46     		mov	r2, r3
 2831 120c 07F12803 		add	r3, r7, #40
 2832 1210 0C3B     		subs	r3, r3, #12
 2833 1212 1A60     		str	r2, [r3]	@ float
 540:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2834              		.loc 1 540 0
 2835 1214 0023     		movs	r3, #0
 2836 1216 07F59952 		add	r2, r7, #4896
 2837 121a 02F10702 		add	r2, r2, #7
 2838 121e 1370     		strb	r3, [r2]
 2839 1220 2EE0     		b	.L147
 2840              	.L148:
 541:..\src/command_processing.c ****                             }
 2841              		.loc 1 541 0 discriminator 3
 2842 1222 07F59953 		add	r3, r7, #4896
 2843 1226 03F10503 		add	r3, r3, #5
 2844 122a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2845 122c 3222     		movs	r2, #50
 2846 122e 02FB03F3 		mul	r3, r2, r3
 2847 1232 1A1D     		adds	r2, r3, #4
 2848 1234 07F59953 		add	r3, r7, #4896
 2849 1238 03F10303 		add	r3, r3, #3
 2850 123c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2851 123e 1A44     		add	r2, r2, r3
 2852 1240 07F59953 		add	r3, r7, #4896
 2853 1244 03F10703 		add	r3, r3, #7
 2854 1248 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2855 124a D31A     		subs	r3, r2, r3
 2856 124c 5A1E     		subs	r2, r3, #1
 2857 124e 07F59953 		add	r3, r7, #4896
 2858 1252 03F10703 		add	r3, r3, #7
 2859 1256 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2860 1258 07F12803 		add	r3, r7, #40
 2861 125c 0C3B     		subs	r3, r3, #12
 2862 125e 0B44     		add	r3, r3, r1
 2863 1260 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2864 1262 07F16803 		add	r3, r7, #104
 2865 1266 143B     		subs	r3, r3, #20
 2866 1268 9954     		strb	r1, [r3, r2]
 540:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2867              		.loc 1 540 0 discriminator 3
 2868 126a 07F59953 		add	r3, r7, #4896
 2869 126e 03F10703 		add	r3, r3, #7
 2870 1272 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2871 1274 0133     		adds	r3, r3, #1
 2872 1276 07F59952 		add	r2, r7, #4896
 2873 127a 02F10702 		add	r2, r2, #7
 2874 127e 1370     		strb	r3, [r2]
 2875              	.L147:
 540:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2876              		.loc 1 540 0 is_stmt 0 discriminator 1
 2877 1280 07F59953 		add	r3, r7, #4896
 2878 1284 03F10703 		add	r3, r3, #7
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 78


 2879 1288 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2880 128a 07F59953 		add	r3, r7, #4896
 2881 128e 03F10303 		add	r3, r3, #3
 2882 1292 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2883 1294 9A42     		cmp	r2, r3
 2884 1296 C4D3     		bcc	.L148
 543:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2885              		.loc 1 543 0 is_stmt 1
 2886 1298 07F59853 		add	r3, r7, #4864
 2887 129c 03F11F03 		add	r3, r3, #31
 2888 12a0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2889 12a2 6649     		ldr	r1, .L297
 2890 12a4 1346     		mov	r3, r2
 2891 12a6 DB00     		lsls	r3, r3, #3
 2892 12a8 9B1A     		subs	r3, r3, r2
 2893 12aa 1B01     		lsls	r3, r3, #4
 2894 12ac 0B44     		add	r3, r3, r1
 2895 12ae D833     		adds	r3, r3, #216
 2896 12b0 1B68     		ldr	r3, [r3]
 2897 12b2 1846     		mov	r0, r3
 2898 12b4 FFF7FEFF 		bl	__aeabi_i2f
 2899 12b8 0346     		mov	r3, r0
 2900 12ba 4FF08F41 		mov	r1, #1199570944
 2901 12be 1846     		mov	r0, r3
 2902 12c0 FFF7FEFF 		bl	__aeabi_fdiv
 2903 12c4 0346     		mov	r3, r0
 2904 12c6 1A46     		mov	r2, r3
 2905 12c8 07F12803 		add	r3, r7, #40
 2906 12cc 0C3B     		subs	r3, r3, #12
 2907 12ce 1A60     		str	r2, [r3]	@ float
 544:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2908              		.loc 1 544 0
 2909 12d0 0023     		movs	r3, #0
 2910 12d2 07F59952 		add	r2, r7, #4896
 2911 12d6 02F10702 		add	r2, r2, #7
 2912 12da 1370     		strb	r3, [r2]
 2913 12dc 34E0     		b	.L149
 2914              	.L150:
 545:..\src/command_processing.c ****                             }
 2915              		.loc 1 545 0 discriminator 3
 2916 12de 07F59953 		add	r3, r7, #4896
 2917 12e2 03F10503 		add	r3, r3, #5
 2918 12e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2919 12e8 3222     		movs	r2, #50
 2920 12ea 02FB03F3 		mul	r3, r2, r3
 2921 12ee 1A1D     		adds	r2, r3, #4
 2922 12f0 07F59953 		add	r3, r7, #4896
 2923 12f4 03F10303 		add	r3, r3, #3
 2924 12f8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2925 12fa 1A44     		add	r2, r2, r3
 2926 12fc 07F59953 		add	r3, r7, #4896
 2927 1300 03F10303 		add	r3, r3, #3
 2928 1304 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2929 1306 1A44     		add	r2, r2, r3
 2930 1308 07F59953 		add	r3, r7, #4896
 2931 130c 03F10703 		add	r3, r3, #7
 2932 1310 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 79


 2933 1312 D31A     		subs	r3, r2, r3
 2934 1314 5A1E     		subs	r2, r3, #1
 2935 1316 07F59953 		add	r3, r7, #4896
 2936 131a 03F10703 		add	r3, r3, #7
 2937 131e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2938 1320 07F12803 		add	r3, r7, #40
 2939 1324 0C3B     		subs	r3, r3, #12
 2940 1326 0B44     		add	r3, r3, r1
 2941 1328 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2942 132a 07F16803 		add	r3, r7, #104
 2943 132e 143B     		subs	r3, r3, #20
 2944 1330 9954     		strb	r1, [r3, r2]
 544:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2945              		.loc 1 544 0 discriminator 3
 2946 1332 07F59953 		add	r3, r7, #4896
 2947 1336 03F10703 		add	r3, r3, #7
 2948 133a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2949 133c 0133     		adds	r3, r3, #1
 2950 133e 07F59952 		add	r2, r7, #4896
 2951 1342 02F10702 		add	r2, r2, #7
 2952 1346 1370     		strb	r3, [r2]
 2953              	.L149:
 544:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2954              		.loc 1 544 0 is_stmt 0 discriminator 1
 2955 1348 07F59953 		add	r3, r7, #4896
 2956 134c 03F10703 		add	r3, r3, #7
 2957 1350 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2958 1352 07F59953 		add	r3, r7, #4896
 2959 1356 03F10303 		add	r3, r3, #3
 2960 135a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2961 135c 9A42     		cmp	r2, r3
 2962 135e BED3     		bcc	.L150
 547:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2963              		.loc 1 547 0 is_stmt 1
 2964 1360 07F59853 		add	r3, r7, #4864
 2965 1364 03F11F03 		add	r3, r3, #31
 2966 1368 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2967 136a 3449     		ldr	r1, .L297
 2968 136c 1346     		mov	r3, r2
 2969 136e DB00     		lsls	r3, r3, #3
 2970 1370 9B1A     		subs	r3, r3, r2
 2971 1372 1B01     		lsls	r3, r3, #4
 2972 1374 0B44     		add	r3, r3, r1
 2973 1376 DC33     		adds	r3, r3, #220
 2974 1378 1B68     		ldr	r3, [r3]
 2975 137a 1846     		mov	r0, r3
 2976 137c FFF7FEFF 		bl	__aeabi_i2f
 2977 1380 0346     		mov	r3, r0
 2978 1382 4FF08F41 		mov	r1, #1199570944
 2979 1386 1846     		mov	r0, r3
 2980 1388 FFF7FEFF 		bl	__aeabi_fdiv
 2981 138c 0346     		mov	r3, r0
 2982 138e 1A46     		mov	r2, r3
 2983 1390 07F12803 		add	r3, r7, #40
 2984 1394 0C3B     		subs	r3, r3, #12
 2985 1396 1A60     		str	r2, [r3]	@ float
 548:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 80


 2986              		.loc 1 548 0
 2987 1398 0023     		movs	r3, #0
 2988 139a 07F59952 		add	r2, r7, #4896
 2989 139e 02F10702 		add	r2, r2, #7
 2990 13a2 1370     		strb	r3, [r2]
 2991 13a4 35E0     		b	.L151
 2992              	.L152:
 549:..\src/command_processing.c ****                             }
 2993              		.loc 1 549 0 discriminator 3
 2994 13a6 07F59953 		add	r3, r7, #4896
 2995 13aa 03F10503 		add	r3, r3, #5
 2996 13ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2997 13b0 3222     		movs	r2, #50
 2998 13b2 02FB03F3 		mul	r3, r2, r3
 2999 13b6 1A1D     		adds	r2, r3, #4
 3000 13b8 07F59953 		add	r3, r7, #4896
 3001 13bc 03F10303 		add	r3, r3, #3
 3002 13c0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3003 13c2 5B00     		lsls	r3, r3, #1
 3004 13c4 1A44     		add	r2, r2, r3
 3005 13c6 07F59953 		add	r3, r7, #4896
 3006 13ca 03F10303 		add	r3, r3, #3
 3007 13ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3008 13d0 1A44     		add	r2, r2, r3
 3009 13d2 07F59953 		add	r3, r7, #4896
 3010 13d6 03F10703 		add	r3, r3, #7
 3011 13da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3012 13dc D31A     		subs	r3, r2, r3
 3013 13de 5A1E     		subs	r2, r3, #1
 3014 13e0 07F59953 		add	r3, r7, #4896
 3015 13e4 03F10703 		add	r3, r3, #7
 3016 13e8 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3017 13ea 07F12803 		add	r3, r7, #40
 3018 13ee 0C3B     		subs	r3, r3, #12
 3019 13f0 0B44     		add	r3, r3, r1
 3020 13f2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3021 13f4 07F16803 		add	r3, r7, #104
 3022 13f8 143B     		subs	r3, r3, #20
 3023 13fa 9954     		strb	r1, [r3, r2]
 548:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 3024              		.loc 1 548 0 discriminator 3
 3025 13fc 07F59953 		add	r3, r7, #4896
 3026 1400 03F10703 		add	r3, r3, #7
 3027 1404 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3028 1406 0133     		adds	r3, r3, #1
 3029 1408 07F59952 		add	r2, r7, #4896
 3030 140c 02F10702 		add	r2, r2, #7
 3031 1410 1370     		strb	r3, [r2]
 3032              	.L151:
 548:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 3033              		.loc 1 548 0 is_stmt 0 discriminator 1
 3034 1412 07F59953 		add	r3, r7, #4896
 3035 1416 03F10703 		add	r3, r3, #7
 3036 141a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3037 141c 07F59953 		add	r3, r7, #4896
 3038 1420 03F10303 		add	r3, r3, #3
 3039 1424 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 81


 3040 1426 9A42     		cmp	r2, r3
 3041 1428 BDD3     		bcc	.L152
 3042              		.loc 1 552 0 is_stmt 1
 3043 142a 01F04AB8 		b	.L113
 3044              	.L118:
 553:..\src/command_processing.c **** 
 554:..\src/command_processing.c ****                     case 8:         //Measurement Offset
 555:..\src/command_processing.c ****                         for (i=0; i<NUM_ITEMS[idx]; i++){
 3045              		.loc 1 555 0
 3046 142e 0023     		movs	r3, #0
 3047 1430 07F59952 		add	r2, r7, #4896
 3048 1434 02F10702 		add	r2, r2, #7
 3049 1438 1370     		strb	r3, [r2]
 3050 143a 9DE0     		b	.L153
 3051              	.L298:
 3052              		.align	2
 3053              	.L297:
 3054 143c 00000000 		.word	c_mem
 3055              	.L156:
 556:..\src/command_processing.c ****                             aux_int16 = (c_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] >>
 3056              		.loc 1 556 0
 3057 1440 07F59853 		add	r3, r7, #4864
 3058 1444 03F11F03 		add	r3, r3, #31
 3059 1448 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3060 144a C749     		ldr	r1, .L299
 3061 144c 1346     		mov	r3, r2
 3062 144e DB00     		lsls	r3, r3, #3
 3063 1450 9B1A     		subs	r3, r3, r2
 3064 1452 1B01     		lsls	r3, r3, #4
 3065 1454 0B44     		add	r3, r3, r1
 3066 1456 03F58873 		add	r3, r3, #272
 3067 145a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3068 145c 1846     		mov	r0, r3
 3069 145e 07F59953 		add	r3, r7, #4896
 3070 1462 03F10703 		add	r3, r3, #7
 3071 1466 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3072 1468 C049     		ldr	r1, .L299+4
 3073 146a 0346     		mov	r3, r0
 3074 146c 5B00     		lsls	r3, r3, #1
 3075 146e 0344     		add	r3, r3, r0
 3076 1470 9B00     		lsls	r3, r3, #2
 3077 1472 1344     		add	r3, r3, r2
 3078 1474 6633     		adds	r3, r3, #102
 3079 1476 51F82310 		ldr	r1, [r1, r3, lsl #2]
 3080 147a 07F59853 		add	r3, r7, #4864
 3081 147e 03F11F03 		add	r3, r3, #31
 3082 1482 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3083 1484 B848     		ldr	r0, .L299
 3084 1486 1346     		mov	r3, r2
 3085 1488 DB00     		lsls	r3, r3, #3
 3086 148a 9B1A     		subs	r3, r3, r2
 3087 148c 1B01     		lsls	r3, r3, #4
 3088 148e 0344     		add	r3, r3, r0
 3089 1490 03F58873 		add	r3, r3, #272
 3090 1494 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3091 1496 1C46     		mov	r4, r3
 3092 1498 07F59953 		add	r3, r7, #4896
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 82


 3093 149c 03F10703 		add	r3, r3, #7
 3094 14a0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3095 14a2 B248     		ldr	r0, .L299+4
 3096 14a4 2346     		mov	r3, r4
 3097 14a6 5B00     		lsls	r3, r3, #1
 3098 14a8 2344     		add	r3, r3, r4
 3099 14aa 1B01     		lsls	r3, r3, #4
 3100 14ac 0344     		add	r3, r3, r0
 3101 14ae 1344     		add	r3, r3, r2
 3102 14b0 03F29513 		addw	r3, r3, #405
 3103 14b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3104 14b6 41FA03F3 		asr	r3, r1, r3
 3105 14ba 1AB2     		sxth	r2, r3
 3106 14bc 07F12803 		add	r3, r7, #40
 3107 14c0 0E3B     		subs	r3, r3, #14
 3108 14c2 1A80     		strh	r2, [r3]	@ movhi
 557:..\src/command_processing.c ****                             for(j = 0; j < sod; j++) {
 3109              		.loc 1 557 0
 3110 14c4 0023     		movs	r3, #0
 3111 14c6 07F59952 		add	r2, r7, #4896
 3112 14ca 02F10602 		add	r2, r2, #6
 3113 14ce 1370     		strb	r3, [r2]
 3114 14d0 3BE0     		b	.L154
 3115              	.L155:
 558:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((cha
 3116              		.loc 1 558 0 discriminator 3
 3117 14d2 07F59953 		add	r3, r7, #4896
 3118 14d6 03F10503 		add	r3, r3, #5
 3119 14da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3120 14dc 3222     		movs	r2, #50
 3121 14de 02FB03F3 		mul	r3, r2, r3
 3122 14e2 1A1D     		adds	r2, r3, #4
 3123 14e4 07F59953 		add	r3, r7, #4896
 3124 14e8 03F10703 		add	r3, r3, #7
 3125 14ec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3126 14ee 07F59951 		add	r1, r7, #4896
 3127 14f2 01F10301 		add	r1, r1, #3
 3128 14f6 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 3129 14f8 01FB03F3 		mul	r3, r1, r3
 3130 14fc 1A44     		add	r2, r2, r3
 3131 14fe 07F59953 		add	r3, r7, #4896
 3132 1502 03F10303 		add	r3, r3, #3
 3133 1506 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3134 1508 1A44     		add	r2, r2, r3
 3135 150a 07F59953 		add	r3, r7, #4896
 3136 150e 03F10603 		add	r3, r3, #6
 3137 1512 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3138 1514 D31A     		subs	r3, r2, r3
 3139 1516 5A1E     		subs	r2, r3, #1
 3140 1518 07F59953 		add	r3, r7, #4896
 3141 151c 03F10603 		add	r3, r3, #6
 3142 1520 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3143 1522 07F12803 		add	r3, r7, #40
 3144 1526 0E3B     		subs	r3, r3, #14
 3145 1528 0B44     		add	r3, r3, r1
 3146 152a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3147 152c 07F16803 		add	r3, r7, #104
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 83


 3148 1530 143B     		subs	r3, r3, #20
 3149 1532 9954     		strb	r1, [r3, r2]
 557:..\src/command_processing.c ****                             for(j = 0; j < sod; j++) {
 3150              		.loc 1 557 0 discriminator 3
 3151 1534 07F59953 		add	r3, r7, #4896
 3152 1538 03F10603 		add	r3, r3, #6
 3153 153c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3154 153e 0133     		adds	r3, r3, #1
 3155 1540 07F59952 		add	r2, r7, #4896
 3156 1544 02F10602 		add	r2, r2, #6
 3157 1548 1370     		strb	r3, [r2]
 3158              	.L154:
 557:..\src/command_processing.c ****                             for(j = 0; j < sod; j++) {
 3159              		.loc 1 557 0 is_stmt 0 discriminator 1
 3160 154a 07F59953 		add	r3, r7, #4896
 3161 154e 03F10603 		add	r3, r3, #6
 3162 1552 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3163 1554 07F59953 		add	r3, r7, #4896
 3164 1558 03F10303 		add	r3, r3, #3
 3165 155c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3166 155e 9A42     		cmp	r2, r3
 3167 1560 B7D3     		bcc	.L155
 555:..\src/command_processing.c ****                             aux_int16 = (c_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] >>
 3168              		.loc 1 555 0 is_stmt 1 discriminator 2
 3169 1562 07F59953 		add	r3, r7, #4896
 3170 1566 03F10703 		add	r3, r3, #7
 3171 156a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3172 156c 0133     		adds	r3, r3, #1
 3173 156e 07F59952 		add	r2, r7, #4896
 3174 1572 02F10702 		add	r2, r2, #7
 3175 1576 1370     		strb	r3, [r2]
 3176              	.L153:
 555:..\src/command_processing.c ****                             aux_int16 = (c_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] >>
 3177              		.loc 1 555 0 is_stmt 0 discriminator 1
 3178 1578 07F59953 		add	r3, r7, #4896
 3179 157c 03F10503 		add	r3, r3, #5
 3180 1580 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3181 1582 07F10803 		add	r3, r7, #8
 3182 1586 043B     		subs	r3, r3, #4
 3183 1588 1B68     		ldr	r3, [r3]
 3184 158a 1344     		add	r3, r3, r2
 3185 158c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3186 158e 07F59952 		add	r2, r7, #4896
 3187 1592 02F10702 		add	r2, r2, #7
 3188 1596 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3189 1598 9A42     		cmp	r2, r3
 3190 159a FFF451AF 		bcc	.L156
 559:..\src/command_processing.c ****                             }
 560:..\src/command_processing.c ****                         }
 561:..\src/command_processing.c ****                         break;
 3191              		.loc 1 561 0 is_stmt 1
 3192 159e 00F090BF 		b	.L113
 3193              	.L119:
 562:..\src/command_processing.c ****                 
 563:..\src/command_processing.c ****                     case 11:        //Position limits
 564:..\src/command_processing.c ****                         aux_int32 = (c_mem.motor[MOTOR_IDX].pos_lim_inf >> c_mem.enc[g_mem.motor[MO
 3194              		.loc 1 564 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 84


 3195 15a2 07F59853 		add	r3, r7, #4864
 3196 15a6 03F11F03 		add	r3, r3, #31
 3197 15aa 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3198 15ac 6F49     		ldr	r1, .L299+4
 3199 15ae 1346     		mov	r3, r2
 3200 15b0 DB00     		lsls	r3, r3, #3
 3201 15b2 9B1A     		subs	r3, r3, r2
 3202 15b4 1B01     		lsls	r3, r3, #4
 3203 15b6 0B44     		add	r3, r3, r1
 3204 15b8 E433     		adds	r3, r3, #228
 3205 15ba 1968     		ldr	r1, [r3]
 3206 15bc 07F59853 		add	r3, r7, #4864
 3207 15c0 03F11F03 		add	r3, r3, #31
 3208 15c4 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3209 15c6 6848     		ldr	r0, .L299
 3210 15c8 1346     		mov	r3, r2
 3211 15ca DB00     		lsls	r3, r3, #3
 3212 15cc 9B1A     		subs	r3, r3, r2
 3213 15ce 1B01     		lsls	r3, r3, #4
 3214 15d0 0344     		add	r3, r3, r0
 3215 15d2 03F58873 		add	r3, r3, #272
 3216 15d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3217 15d8 1846     		mov	r0, r3
 3218 15da 644A     		ldr	r2, .L299+4
 3219 15dc 0346     		mov	r3, r0
 3220 15de 5B00     		lsls	r3, r3, #1
 3221 15e0 0344     		add	r3, r3, r0
 3222 15e2 1B01     		lsls	r3, r3, #4
 3223 15e4 1344     		add	r3, r3, r2
 3224 15e6 03F29513 		addw	r3, r3, #405
 3225 15ea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3226 15ec 41FA03F2 		asr	r2, r1, r3
 3227 15f0 07F12803 		add	r3, r7, #40
 3228 15f4 143B     		subs	r3, r3, #20
 3229 15f6 1A60     		str	r2, [r3]
 565:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3230              		.loc 1 565 0
 3231 15f8 0023     		movs	r3, #0
 3232 15fa 07F59952 		add	r2, r7, #4896
 3233 15fe 02F10602 		add	r2, r2, #6
 3234 1602 1370     		strb	r3, [r2]
 3235 1604 2EE0     		b	.L157
 3236              	.L158:
 566:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - j -1] = ((char*)(&aux_int
 3237              		.loc 1 566 0 discriminator 3
 3238 1606 07F59953 		add	r3, r7, #4896
 3239 160a 03F10503 		add	r3, r3, #5
 3240 160e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3241 1610 3222     		movs	r2, #50
 3242 1612 02FB03F3 		mul	r3, r2, r3
 3243 1616 1A1D     		adds	r2, r3, #4
 3244 1618 07F59953 		add	r3, r7, #4896
 3245 161c 03F10303 		add	r3, r3, #3
 3246 1620 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3247 1622 1A44     		add	r2, r2, r3
 3248 1624 07F59953 		add	r3, r7, #4896
 3249 1628 03F10603 		add	r3, r3, #6
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 85


 3250 162c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3251 162e D31A     		subs	r3, r2, r3
 3252 1630 5A1E     		subs	r2, r3, #1
 3253 1632 07F59953 		add	r3, r7, #4896
 3254 1636 03F10603 		add	r3, r3, #6
 3255 163a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3256 163c 07F12803 		add	r3, r7, #40
 3257 1640 143B     		subs	r3, r3, #20
 3258 1642 0B44     		add	r3, r3, r1
 3259 1644 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3260 1646 07F16803 		add	r3, r7, #104
 3261 164a 143B     		subs	r3, r3, #20
 3262 164c 9954     		strb	r1, [r3, r2]
 565:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3263              		.loc 1 565 0 discriminator 3
 3264 164e 07F59953 		add	r3, r7, #4896
 3265 1652 03F10603 		add	r3, r3, #6
 3266 1656 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3267 1658 0133     		adds	r3, r3, #1
 3268 165a 07F59952 		add	r2, r7, #4896
 3269 165e 02F10602 		add	r2, r2, #6
 3270 1662 1370     		strb	r3, [r2]
 3271              	.L157:
 565:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3272              		.loc 1 565 0 is_stmt 0 discriminator 1
 3273 1664 07F59953 		add	r3, r7, #4896
 3274 1668 03F10603 		add	r3, r3, #6
 3275 166c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3276 166e 07F59953 		add	r3, r7, #4896
 3277 1672 03F10303 		add	r3, r3, #3
 3278 1676 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3279 1678 9A42     		cmp	r2, r3
 3280 167a C4D3     		bcc	.L158
 567:..\src/command_processing.c ****                         }
 568:..\src/command_processing.c ****                         aux_int32 = (c_mem.motor[MOTOR_IDX].pos_lim_sup >> c_mem.enc[g_mem.motor[MO
 3281              		.loc 1 568 0 is_stmt 1
 3282 167c 07F59853 		add	r3, r7, #4864
 3283 1680 03F11F03 		add	r3, r3, #31
 3284 1684 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3285 1686 3949     		ldr	r1, .L299+4
 3286 1688 1346     		mov	r3, r2
 3287 168a DB00     		lsls	r3, r3, #3
 3288 168c 9B1A     		subs	r3, r3, r2
 3289 168e 1B01     		lsls	r3, r3, #4
 3290 1690 0B44     		add	r3, r3, r1
 3291 1692 E833     		adds	r3, r3, #232
 3292 1694 1968     		ldr	r1, [r3]
 3293 1696 07F59853 		add	r3, r7, #4864
 3294 169a 03F11F03 		add	r3, r3, #31
 3295 169e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3296 16a0 3148     		ldr	r0, .L299
 3297 16a2 1346     		mov	r3, r2
 3298 16a4 DB00     		lsls	r3, r3, #3
 3299 16a6 9B1A     		subs	r3, r3, r2
 3300 16a8 1B01     		lsls	r3, r3, #4
 3301 16aa 0344     		add	r3, r3, r0
 3302 16ac 03F58873 		add	r3, r3, #272
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 86


 3303 16b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3304 16b2 1846     		mov	r0, r3
 3305 16b4 2D4A     		ldr	r2, .L299+4
 3306 16b6 0346     		mov	r3, r0
 3307 16b8 5B00     		lsls	r3, r3, #1
 3308 16ba 0344     		add	r3, r3, r0
 3309 16bc 1B01     		lsls	r3, r3, #4
 3310 16be 1344     		add	r3, r3, r2
 3311 16c0 03F29513 		addw	r3, r3, #405
 3312 16c4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3313 16c6 41FA03F2 		asr	r2, r1, r3
 3314 16ca 07F12803 		add	r3, r7, #40
 3315 16ce 143B     		subs	r3, r3, #20
 3316 16d0 1A60     		str	r2, [r3]
 569:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3317              		.loc 1 569 0
 3318 16d2 0023     		movs	r3, #0
 3319 16d4 07F59952 		add	r2, r7, #4896
 3320 16d8 02F10602 		add	r2, r2, #6
 3321 16dc 1370     		strb	r3, [r2]
 3322 16de 34E0     		b	.L159
 3323              	.L160:
 570:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - j -1] = ((char*)(&a
 3324              		.loc 1 570 0 discriminator 3
 3325 16e0 07F59953 		add	r3, r7, #4896
 3326 16e4 03F10503 		add	r3, r3, #5
 3327 16e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3328 16ea 3222     		movs	r2, #50
 3329 16ec 02FB03F3 		mul	r3, r2, r3
 3330 16f0 1A1D     		adds	r2, r3, #4
 3331 16f2 07F59953 		add	r3, r7, #4896
 3332 16f6 03F10303 		add	r3, r3, #3
 3333 16fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3334 16fc 1A44     		add	r2, r2, r3
 3335 16fe 07F59953 		add	r3, r7, #4896
 3336 1702 03F10303 		add	r3, r3, #3
 3337 1706 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3338 1708 1A44     		add	r2, r2, r3
 3339 170a 07F59953 		add	r3, r7, #4896
 3340 170e 03F10603 		add	r3, r3, #6
 3341 1712 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3342 1714 D31A     		subs	r3, r2, r3
 3343 1716 5A1E     		subs	r2, r3, #1
 3344 1718 07F59953 		add	r3, r7, #4896
 3345 171c 03F10603 		add	r3, r3, #6
 3346 1720 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3347 1722 07F12803 		add	r3, r7, #40
 3348 1726 143B     		subs	r3, r3, #20
 3349 1728 0B44     		add	r3, r3, r1
 3350 172a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3351 172c 07F16803 		add	r3, r7, #104
 3352 1730 143B     		subs	r3, r3, #20
 3353 1732 9954     		strb	r1, [r3, r2]
 569:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3354              		.loc 1 569 0 discriminator 3
 3355 1734 07F59953 		add	r3, r7, #4896
 3356 1738 03F10603 		add	r3, r3, #6
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 87


 3357 173c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3358 173e 0133     		adds	r3, r3, #1
 3359 1740 07F59952 		add	r2, r7, #4896
 3360 1744 02F10602 		add	r2, r2, #6
 3361 1748 1370     		strb	r3, [r2]
 3362              	.L159:
 569:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3363              		.loc 1 569 0 is_stmt 0 discriminator 1
 3364 174a 07F59953 		add	r3, r7, #4896
 3365 174e 03F10603 		add	r3, r3, #6
 3366 1752 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3367 1754 07F59953 		add	r3, r7, #4896
 3368 1758 03F10303 		add	r3, r3, #3
 3369 175c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3370 175e 9A42     		cmp	r2, r3
 3371 1760 BED3     		bcc	.L160
 571:..\src/command_processing.c ****                         }
 572:..\src/command_processing.c ****                         break;            
 3372              		.loc 1 572 0 is_stmt 1
 3373 1762 00F0AEBE 		b	.L113
 3374              	.L300:
 3375 1766 00BF     		.align	2
 3376              	.L299:
 3377 1768 00000000 		.word	g_mem
 3378 176c 00000000 		.word	c_mem
 3379              	.L120:
 573:..\src/command_processing.c **** 
 574:..\src/command_processing.c ****                     case 23:        //Rest Position
 575:..\src/command_processing.c ****                         aux_int32 = (c_mem.SH.rest_pos >> c_mem.enc[g_mem.motor[MOTOR_IDX].encoder_
 3380              		.loc 1 575 0
 3381 1770 CF4B     		ldr	r3, .L301
 3382 1772 D3F8A012 		ldr	r1, [r3, #672]
 3383 1776 07F59853 		add	r3, r7, #4864
 3384 177a 03F11F03 		add	r3, r3, #31
 3385 177e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3386 1780 CC48     		ldr	r0, .L301+4
 3387 1782 1346     		mov	r3, r2
 3388 1784 DB00     		lsls	r3, r3, #3
 3389 1786 9B1A     		subs	r3, r3, r2
 3390 1788 1B01     		lsls	r3, r3, #4
 3391 178a 0344     		add	r3, r3, r0
 3392 178c 03F58873 		add	r3, r3, #272
 3393 1790 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3394 1792 1846     		mov	r0, r3
 3395 1794 C64A     		ldr	r2, .L301
 3396 1796 0346     		mov	r3, r0
 3397 1798 5B00     		lsls	r3, r3, #1
 3398 179a 0344     		add	r3, r3, r0
 3399 179c 1B01     		lsls	r3, r3, #4
 3400 179e 1344     		add	r3, r3, r2
 3401 17a0 03F29513 		addw	r3, r3, #405
 3402 17a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3403 17a6 41FA03F2 		asr	r2, r1, r3
 3404 17aa 07F12803 		add	r3, r7, #40
 3405 17ae 143B     		subs	r3, r3, #20
 3406 17b0 1A60     		str	r2, [r3]
 576:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 88


 3407              		.loc 1 576 0
 3408 17b2 0023     		movs	r3, #0
 3409 17b4 07F59952 		add	r2, r7, #4896
 3410 17b8 02F10602 		add	r2, r2, #6
 3411 17bc 1370     		strb	r3, [r2]
 3412 17be 2EE0     		b	.L161
 3413              	.L162:
 577:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - j -1] = ((char*)(&aux_int
 3414              		.loc 1 577 0 discriminator 3
 3415 17c0 07F59953 		add	r3, r7, #4896
 3416 17c4 03F10503 		add	r3, r3, #5
 3417 17c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3418 17ca 3222     		movs	r2, #50
 3419 17cc 02FB03F3 		mul	r3, r2, r3
 3420 17d0 1A1D     		adds	r2, r3, #4
 3421 17d2 07F59953 		add	r3, r7, #4896
 3422 17d6 03F10303 		add	r3, r3, #3
 3423 17da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3424 17dc 1A44     		add	r2, r2, r3
 3425 17de 07F59953 		add	r3, r7, #4896
 3426 17e2 03F10603 		add	r3, r3, #6
 3427 17e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3428 17e8 D31A     		subs	r3, r2, r3
 3429 17ea 5A1E     		subs	r2, r3, #1
 3430 17ec 07F59953 		add	r3, r7, #4896
 3431 17f0 03F10603 		add	r3, r3, #6
 3432 17f4 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3433 17f6 07F12803 		add	r3, r7, #40
 3434 17fa 143B     		subs	r3, r3, #20
 3435 17fc 0B44     		add	r3, r3, r1
 3436 17fe 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3437 1800 07F16803 		add	r3, r7, #104
 3438 1804 143B     		subs	r3, r3, #20
 3439 1806 9954     		strb	r1, [r3, r2]
 576:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3440              		.loc 1 576 0 discriminator 3
 3441 1808 07F59953 		add	r3, r7, #4896
 3442 180c 03F10603 		add	r3, r3, #6
 3443 1810 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3444 1812 0133     		adds	r3, r3, #1
 3445 1814 07F59952 		add	r2, r7, #4896
 3446 1818 02F10602 		add	r2, r2, #6
 3447 181c 1370     		strb	r3, [r2]
 3448              	.L161:
 576:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3449              		.loc 1 576 0 is_stmt 0 discriminator 1
 3450 181e 07F59953 		add	r3, r7, #4896
 3451 1822 03F10603 		add	r3, r3, #6
 3452 1826 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3453 1828 07F59953 		add	r3, r7, #4896
 3454 182c 03F10303 		add	r3, r3, #3
 3455 1830 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3456 1832 9A42     		cmp	r2, r3
 3457 1834 C4D3     		bcc	.L162
 578:..\src/command_processing.c ****                         }
 579:..\src/command_processing.c ****                         break; 
 3458              		.loc 1 579 0 is_stmt 1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 89


 3459 1836 00F044BE 		b	.L113
 3460              	.L121:
 580:..\src/command_processing.c ****                         
 581:..\src/command_processing.c ****                     case 44:         // Second Motor Position PID
 582:..\src/command_processing.c ****                         if(c_mem.motor[SECOND_MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 3461              		.loc 1 582 0
 3462 183a 07F59853 		add	r3, r7, #4864
 3463 183e 03F11E03 		add	r3, r3, #30
 3464 1842 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3465 1844 9A49     		ldr	r1, .L301
 3466 1846 1346     		mov	r3, r2
 3467 1848 DB00     		lsls	r3, r3, #3
 3468 184a 9B1A     		subs	r3, r3, r2
 3469 184c 1B01     		lsls	r3, r3, #4
 3470 184e 0B44     		add	r3, r3, r1
 3471 1850 03F20F13 		addw	r3, r3, #271
 3472 1854 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3473 1856 032B     		cmp	r3, #3
 3474 1858 00F02E81 		beq	.L163
 583:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_p / 65536;
 3475              		.loc 1 583 0
 3476 185c 07F59853 		add	r3, r7, #4864
 3477 1860 03F11E03 		add	r3, r3, #30
 3478 1864 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3479 1866 9249     		ldr	r1, .L301
 3480 1868 1346     		mov	r3, r2
 3481 186a DB00     		lsls	r3, r3, #3
 3482 186c 9B1A     		subs	r3, r3, r2
 3483 186e 1B01     		lsls	r3, r3, #4
 3484 1870 0B44     		add	r3, r3, r1
 3485 1872 B033     		adds	r3, r3, #176
 3486 1874 1B68     		ldr	r3, [r3]
 3487 1876 1846     		mov	r0, r3
 3488 1878 FFF7FEFF 		bl	__aeabi_i2f
 3489 187c 0346     		mov	r3, r0
 3490 187e 4FF08F41 		mov	r1, #1199570944
 3491 1882 1846     		mov	r0, r3
 3492 1884 FFF7FEFF 		bl	__aeabi_fdiv
 3493 1888 0346     		mov	r3, r0
 3494 188a 1A46     		mov	r2, r3
 3495 188c 07F12803 		add	r3, r7, #40
 3496 1890 0C3B     		subs	r3, r3, #12
 3497 1892 1A60     		str	r2, [r3]	@ float
 584:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3498              		.loc 1 584 0
 3499 1894 0023     		movs	r3, #0
 3500 1896 07F59952 		add	r2, r7, #4896
 3501 189a 02F10702 		add	r2, r2, #7
 3502 189e 1370     		strb	r3, [r2]
 3503 18a0 2EE0     		b	.L164
 3504              	.L165:
 585:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 3505              		.loc 1 585 0 discriminator 3
 3506 18a2 07F59953 		add	r3, r7, #4896
 3507 18a6 03F10503 		add	r3, r3, #5
 3508 18aa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3509 18ac 3222     		movs	r2, #50
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 90


 3510 18ae 02FB03F3 		mul	r3, r2, r3
 3511 18b2 1A1D     		adds	r2, r3, #4
 3512 18b4 07F59953 		add	r3, r7, #4896
 3513 18b8 03F10303 		add	r3, r3, #3
 3514 18bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3515 18be 1A44     		add	r2, r2, r3
 3516 18c0 07F59953 		add	r3, r7, #4896
 3517 18c4 03F10703 		add	r3, r3, #7
 3518 18c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3519 18ca D31A     		subs	r3, r2, r3
 3520 18cc 5A1E     		subs	r2, r3, #1
 3521 18ce 07F59953 		add	r3, r7, #4896
 3522 18d2 03F10703 		add	r3, r3, #7
 3523 18d6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3524 18d8 07F12803 		add	r3, r7, #40
 3525 18dc 0C3B     		subs	r3, r3, #12
 3526 18de 0B44     		add	r3, r3, r1
 3527 18e0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3528 18e2 07F16803 		add	r3, r7, #104
 3529 18e6 143B     		subs	r3, r3, #20
 3530 18e8 9954     		strb	r1, [r3, r2]
 584:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3531              		.loc 1 584 0 discriminator 3
 3532 18ea 07F59953 		add	r3, r7, #4896
 3533 18ee 03F10703 		add	r3, r3, #7
 3534 18f2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3535 18f4 0133     		adds	r3, r3, #1
 3536 18f6 07F59952 		add	r2, r7, #4896
 3537 18fa 02F10702 		add	r2, r2, #7
 3538 18fe 1370     		strb	r3, [r2]
 3539              	.L164:
 584:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3540              		.loc 1 584 0 is_stmt 0 discriminator 1
 3541 1900 07F59953 		add	r3, r7, #4896
 3542 1904 03F10703 		add	r3, r3, #7
 3543 1908 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3544 190a 07F59953 		add	r3, r7, #4896
 3545 190e 03F10303 		add	r3, r3, #3
 3546 1912 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3547 1914 9A42     		cmp	r2, r3
 3548 1916 C4D3     		bcc	.L165
 586:..\src/command_processing.c ****                             }
 587:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_i / 65536;
 3549              		.loc 1 587 0 is_stmt 1
 3550 1918 07F59853 		add	r3, r7, #4864
 3551 191c 03F11E03 		add	r3, r3, #30
 3552 1920 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3553 1922 6349     		ldr	r1, .L301
 3554 1924 1346     		mov	r3, r2
 3555 1926 DB00     		lsls	r3, r3, #3
 3556 1928 9B1A     		subs	r3, r3, r2
 3557 192a 1B01     		lsls	r3, r3, #4
 3558 192c 0B44     		add	r3, r3, r1
 3559 192e B433     		adds	r3, r3, #180
 3560 1930 1B68     		ldr	r3, [r3]
 3561 1932 1846     		mov	r0, r3
 3562 1934 FFF7FEFF 		bl	__aeabi_i2f
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 91


 3563 1938 0346     		mov	r3, r0
 3564 193a 4FF08F41 		mov	r1, #1199570944
 3565 193e 1846     		mov	r0, r3
 3566 1940 FFF7FEFF 		bl	__aeabi_fdiv
 3567 1944 0346     		mov	r3, r0
 3568 1946 1A46     		mov	r2, r3
 3569 1948 07F12803 		add	r3, r7, #40
 3570 194c 0C3B     		subs	r3, r3, #12
 3571 194e 1A60     		str	r2, [r3]	@ float
 588:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3572              		.loc 1 588 0
 3573 1950 0023     		movs	r3, #0
 3574 1952 07F59952 		add	r2, r7, #4896
 3575 1956 02F10702 		add	r2, r2, #7
 3576 195a 1370     		strb	r3, [r2]
 3577 195c 34E0     		b	.L166
 3578              	.L167:
 589:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 3579              		.loc 1 589 0 discriminator 3
 3580 195e 07F59953 		add	r3, r7, #4896
 3581 1962 03F10503 		add	r3, r3, #5
 3582 1966 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3583 1968 3222     		movs	r2, #50
 3584 196a 02FB03F3 		mul	r3, r2, r3
 3585 196e 1A1D     		adds	r2, r3, #4
 3586 1970 07F59953 		add	r3, r7, #4896
 3587 1974 03F10303 		add	r3, r3, #3
 3588 1978 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3589 197a 1A44     		add	r2, r2, r3
 3590 197c 07F59953 		add	r3, r7, #4896
 3591 1980 03F10303 		add	r3, r3, #3
 3592 1984 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3593 1986 1A44     		add	r2, r2, r3
 3594 1988 07F59953 		add	r3, r7, #4896
 3595 198c 03F10703 		add	r3, r3, #7
 3596 1990 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3597 1992 D31A     		subs	r3, r2, r3
 3598 1994 5A1E     		subs	r2, r3, #1
 3599 1996 07F59953 		add	r3, r7, #4896
 3600 199a 03F10703 		add	r3, r3, #7
 3601 199e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3602 19a0 07F12803 		add	r3, r7, #40
 3603 19a4 0C3B     		subs	r3, r3, #12
 3604 19a6 0B44     		add	r3, r3, r1
 3605 19a8 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3606 19aa 07F16803 		add	r3, r7, #104
 3607 19ae 143B     		subs	r3, r3, #20
 3608 19b0 9954     		strb	r1, [r3, r2]
 588:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3609              		.loc 1 588 0 discriminator 3
 3610 19b2 07F59953 		add	r3, r7, #4896
 3611 19b6 03F10703 		add	r3, r3, #7
 3612 19ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3613 19bc 0133     		adds	r3, r3, #1
 3614 19be 07F59952 		add	r2, r7, #4896
 3615 19c2 02F10702 		add	r2, r2, #7
 3616 19c6 1370     		strb	r3, [r2]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 92


 3617              	.L166:
 588:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3618              		.loc 1 588 0 is_stmt 0 discriminator 1
 3619 19c8 07F59953 		add	r3, r7, #4896
 3620 19cc 03F10703 		add	r3, r3, #7
 3621 19d0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3622 19d2 07F59953 		add	r3, r7, #4896
 3623 19d6 03F10303 		add	r3, r3, #3
 3624 19da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3625 19dc 9A42     		cmp	r2, r3
 3626 19de BED3     		bcc	.L167
 590:..\src/command_processing.c ****                             }
 591:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_d / 65536;
 3627              		.loc 1 591 0 is_stmt 1
 3628 19e0 07F59853 		add	r3, r7, #4864
 3629 19e4 03F11E03 		add	r3, r3, #30
 3630 19e8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3631 19ea 3149     		ldr	r1, .L301
 3632 19ec 1346     		mov	r3, r2
 3633 19ee DB00     		lsls	r3, r3, #3
 3634 19f0 9B1A     		subs	r3, r3, r2
 3635 19f2 1B01     		lsls	r3, r3, #4
 3636 19f4 0B44     		add	r3, r3, r1
 3637 19f6 B833     		adds	r3, r3, #184
 3638 19f8 1B68     		ldr	r3, [r3]
 3639 19fa 1846     		mov	r0, r3
 3640 19fc FFF7FEFF 		bl	__aeabi_i2f
 3641 1a00 0346     		mov	r3, r0
 3642 1a02 4FF08F41 		mov	r1, #1199570944
 3643 1a06 1846     		mov	r0, r3
 3644 1a08 FFF7FEFF 		bl	__aeabi_fdiv
 3645 1a0c 0346     		mov	r3, r0
 3646 1a0e 1A46     		mov	r2, r3
 3647 1a10 07F12803 		add	r3, r7, #40
 3648 1a14 0C3B     		subs	r3, r3, #12
 3649 1a16 1A60     		str	r2, [r3]	@ float
 592:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3650              		.loc 1 592 0
 3651 1a18 0023     		movs	r3, #0
 3652 1a1a 07F59952 		add	r2, r7, #4896
 3653 1a1e 02F10702 		add	r2, r2, #7
 3654 1a22 1370     		strb	r3, [r2]
 3655 1a24 35E0     		b	.L168
 3656              	.L169:
 593:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 3657              		.loc 1 593 0 discriminator 3
 3658 1a26 07F59953 		add	r3, r7, #4896
 3659 1a2a 03F10503 		add	r3, r3, #5
 3660 1a2e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3661 1a30 3222     		movs	r2, #50
 3662 1a32 02FB03F3 		mul	r3, r2, r3
 3663 1a36 1A1D     		adds	r2, r3, #4
 3664 1a38 07F59953 		add	r3, r7, #4896
 3665 1a3c 03F10303 		add	r3, r3, #3
 3666 1a40 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3667 1a42 5B00     		lsls	r3, r3, #1
 3668 1a44 1A44     		add	r2, r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 93


 3669 1a46 07F59953 		add	r3, r7, #4896
 3670 1a4a 03F10303 		add	r3, r3, #3
 3671 1a4e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3672 1a50 1A44     		add	r2, r2, r3
 3673 1a52 07F59953 		add	r3, r7, #4896
 3674 1a56 03F10703 		add	r3, r3, #7
 3675 1a5a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3676 1a5c D31A     		subs	r3, r2, r3
 3677 1a5e 5A1E     		subs	r2, r3, #1
 3678 1a60 07F59953 		add	r3, r7, #4896
 3679 1a64 03F10703 		add	r3, r3, #7
 3680 1a68 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3681 1a6a 07F12803 		add	r3, r7, #40
 3682 1a6e 0C3B     		subs	r3, r3, #12
 3683 1a70 0B44     		add	r3, r3, r1
 3684 1a72 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3685 1a74 07F16803 		add	r3, r7, #104
 3686 1a78 143B     		subs	r3, r3, #20
 3687 1a7a 9954     		strb	r1, [r3, r2]
 592:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3688              		.loc 1 592 0 discriminator 3
 3689 1a7c 07F59953 		add	r3, r7, #4896
 3690 1a80 03F10703 		add	r3, r3, #7
 3691 1a84 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3692 1a86 0133     		adds	r3, r3, #1
 3693 1a88 07F59952 		add	r2, r7, #4896
 3694 1a8c 02F10702 		add	r2, r2, #7
 3695 1a90 1370     		strb	r3, [r2]
 3696              	.L168:
 592:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3697              		.loc 1 592 0 is_stmt 0 discriminator 1
 3698 1a92 07F59953 		add	r3, r7, #4896
 3699 1a96 03F10703 		add	r3, r3, #7
 3700 1a9a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3701 1a9c 07F59953 		add	r3, r7, #4896
 3702 1aa0 03F10303 		add	r3, r3, #3
 3703 1aa4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3704 1aa6 9A42     		cmp	r2, r3
 3705 1aa8 BDD3     		bcc	.L169
 594:..\src/command_processing.c ****                             } 
 595:..\src/command_processing.c ****                         }
 596:..\src/command_processing.c ****                         else {
 597:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_p_dl / 65536;
 598:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 599:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 600:..\src/command_processing.c ****                             }
 601:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_i_dl / 65536;
 602:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 603:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 604:..\src/command_processing.c ****                             }
 605:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_d_dl / 65536;
 606:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 607:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 608:..\src/command_processing.c ****                             }
 609:..\src/command_processing.c ****                         }
 610:..\src/command_processing.c ****                         break;
 3706              		.loc 1 610 0 is_stmt 1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 94


 3707 1aaa 00F00ABD 		b	.L113
 3708              	.L302:
 3709 1aae 00BF     		.align	2
 3710              	.L301:
 3711 1ab0 00000000 		.word	c_mem
 3712 1ab4 00000000 		.word	g_mem
 3713              	.L163:
 597:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3714              		.loc 1 597 0
 3715 1ab8 07F59853 		add	r3, r7, #4864
 3716 1abc 03F11E03 		add	r3, r3, #30
 3717 1ac0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3718 1ac2 AB49     		ldr	r1, .L303
 3719 1ac4 1346     		mov	r3, r2
 3720 1ac6 DB00     		lsls	r3, r3, #3
 3721 1ac8 9B1A     		subs	r3, r3, r2
 3722 1aca 1B01     		lsls	r3, r3, #4
 3723 1acc 0B44     		add	r3, r3, r1
 3724 1ace C833     		adds	r3, r3, #200
 3725 1ad0 1B68     		ldr	r3, [r3]
 3726 1ad2 1846     		mov	r0, r3
 3727 1ad4 FFF7FEFF 		bl	__aeabi_i2f
 3728 1ad8 0346     		mov	r3, r0
 3729 1ada 4FF08F41 		mov	r1, #1199570944
 3730 1ade 1846     		mov	r0, r3
 3731 1ae0 FFF7FEFF 		bl	__aeabi_fdiv
 3732 1ae4 0346     		mov	r3, r0
 3733 1ae6 1A46     		mov	r2, r3
 3734 1ae8 07F12803 		add	r3, r7, #40
 3735 1aec 0C3B     		subs	r3, r3, #12
 3736 1aee 1A60     		str	r2, [r3]	@ float
 598:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 3737              		.loc 1 598 0
 3738 1af0 0023     		movs	r3, #0
 3739 1af2 07F59952 		add	r2, r7, #4896
 3740 1af6 02F10702 		add	r2, r2, #7
 3741 1afa 1370     		strb	r3, [r2]
 3742 1afc 2EE0     		b	.L171
 3743              	.L172:
 599:..\src/command_processing.c ****                             }
 3744              		.loc 1 599 0 discriminator 3
 3745 1afe 07F59953 		add	r3, r7, #4896
 3746 1b02 03F10503 		add	r3, r3, #5
 3747 1b06 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3748 1b08 3222     		movs	r2, #50
 3749 1b0a 02FB03F3 		mul	r3, r2, r3
 3750 1b0e 1A1D     		adds	r2, r3, #4
 3751 1b10 07F59953 		add	r3, r7, #4896
 3752 1b14 03F10303 		add	r3, r3, #3
 3753 1b18 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3754 1b1a 1A44     		add	r2, r2, r3
 3755 1b1c 07F59953 		add	r3, r7, #4896
 3756 1b20 03F10703 		add	r3, r3, #7
 3757 1b24 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3758 1b26 D31A     		subs	r3, r2, r3
 3759 1b28 5A1E     		subs	r2, r3, #1
 3760 1b2a 07F59953 		add	r3, r7, #4896
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 95


 3761 1b2e 03F10703 		add	r3, r3, #7
 3762 1b32 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3763 1b34 07F12803 		add	r3, r7, #40
 3764 1b38 0C3B     		subs	r3, r3, #12
 3765 1b3a 0B44     		add	r3, r3, r1
 3766 1b3c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3767 1b3e 07F16803 		add	r3, r7, #104
 3768 1b42 143B     		subs	r3, r3, #20
 3769 1b44 9954     		strb	r1, [r3, r2]
 598:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 3770              		.loc 1 598 0 discriminator 3
 3771 1b46 07F59953 		add	r3, r7, #4896
 3772 1b4a 03F10703 		add	r3, r3, #7
 3773 1b4e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3774 1b50 0133     		adds	r3, r3, #1
 3775 1b52 07F59952 		add	r2, r7, #4896
 3776 1b56 02F10702 		add	r2, r2, #7
 3777 1b5a 1370     		strb	r3, [r2]
 3778              	.L171:
 598:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 3779              		.loc 1 598 0 is_stmt 0 discriminator 1
 3780 1b5c 07F59953 		add	r3, r7, #4896
 3781 1b60 03F10703 		add	r3, r3, #7
 3782 1b64 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3783 1b66 07F59953 		add	r3, r7, #4896
 3784 1b6a 03F10303 		add	r3, r3, #3
 3785 1b6e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3786 1b70 9A42     		cmp	r2, r3
 3787 1b72 C4D3     		bcc	.L172
 601:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3788              		.loc 1 601 0 is_stmt 1
 3789 1b74 07F59853 		add	r3, r7, #4864
 3790 1b78 03F11E03 		add	r3, r3, #30
 3791 1b7c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3792 1b7e 7C49     		ldr	r1, .L303
 3793 1b80 1346     		mov	r3, r2
 3794 1b82 DB00     		lsls	r3, r3, #3
 3795 1b84 9B1A     		subs	r3, r3, r2
 3796 1b86 1B01     		lsls	r3, r3, #4
 3797 1b88 0B44     		add	r3, r3, r1
 3798 1b8a CC33     		adds	r3, r3, #204
 3799 1b8c 1B68     		ldr	r3, [r3]
 3800 1b8e 1846     		mov	r0, r3
 3801 1b90 FFF7FEFF 		bl	__aeabi_i2f
 3802 1b94 0346     		mov	r3, r0
 3803 1b96 4FF08F41 		mov	r1, #1199570944
 3804 1b9a 1846     		mov	r0, r3
 3805 1b9c FFF7FEFF 		bl	__aeabi_fdiv
 3806 1ba0 0346     		mov	r3, r0
 3807 1ba2 1A46     		mov	r2, r3
 3808 1ba4 07F12803 		add	r3, r7, #40
 3809 1ba8 0C3B     		subs	r3, r3, #12
 3810 1baa 1A60     		str	r2, [r3]	@ float
 602:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 3811              		.loc 1 602 0
 3812 1bac 0023     		movs	r3, #0
 3813 1bae 07F59952 		add	r2, r7, #4896
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 96


 3814 1bb2 02F10702 		add	r2, r2, #7
 3815 1bb6 1370     		strb	r3, [r2]
 3816 1bb8 34E0     		b	.L173
 3817              	.L174:
 603:..\src/command_processing.c ****                             }
 3818              		.loc 1 603 0 discriminator 3
 3819 1bba 07F59953 		add	r3, r7, #4896
 3820 1bbe 03F10503 		add	r3, r3, #5
 3821 1bc2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3822 1bc4 3222     		movs	r2, #50
 3823 1bc6 02FB03F3 		mul	r3, r2, r3
 3824 1bca 1A1D     		adds	r2, r3, #4
 3825 1bcc 07F59953 		add	r3, r7, #4896
 3826 1bd0 03F10303 		add	r3, r3, #3
 3827 1bd4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3828 1bd6 1A44     		add	r2, r2, r3
 3829 1bd8 07F59953 		add	r3, r7, #4896
 3830 1bdc 03F10303 		add	r3, r3, #3
 3831 1be0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3832 1be2 1A44     		add	r2, r2, r3
 3833 1be4 07F59953 		add	r3, r7, #4896
 3834 1be8 03F10703 		add	r3, r3, #7
 3835 1bec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3836 1bee D31A     		subs	r3, r2, r3
 3837 1bf0 5A1E     		subs	r2, r3, #1
 3838 1bf2 07F59953 		add	r3, r7, #4896
 3839 1bf6 03F10703 		add	r3, r3, #7
 3840 1bfa 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3841 1bfc 07F12803 		add	r3, r7, #40
 3842 1c00 0C3B     		subs	r3, r3, #12
 3843 1c02 0B44     		add	r3, r3, r1
 3844 1c04 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3845 1c06 07F16803 		add	r3, r7, #104
 3846 1c0a 143B     		subs	r3, r3, #20
 3847 1c0c 9954     		strb	r1, [r3, r2]
 602:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 3848              		.loc 1 602 0 discriminator 3
 3849 1c0e 07F59953 		add	r3, r7, #4896
 3850 1c12 03F10703 		add	r3, r3, #7
 3851 1c16 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3852 1c18 0133     		adds	r3, r3, #1
 3853 1c1a 07F59952 		add	r2, r7, #4896
 3854 1c1e 02F10702 		add	r2, r2, #7
 3855 1c22 1370     		strb	r3, [r2]
 3856              	.L173:
 602:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 3857              		.loc 1 602 0 is_stmt 0 discriminator 1
 3858 1c24 07F59953 		add	r3, r7, #4896
 3859 1c28 03F10703 		add	r3, r3, #7
 3860 1c2c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3861 1c2e 07F59953 		add	r3, r7, #4896
 3862 1c32 03F10303 		add	r3, r3, #3
 3863 1c36 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3864 1c38 9A42     		cmp	r2, r3
 3865 1c3a BED3     		bcc	.L174
 605:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3866              		.loc 1 605 0 is_stmt 1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 97


 3867 1c3c 07F59853 		add	r3, r7, #4864
 3868 1c40 03F11E03 		add	r3, r3, #30
 3869 1c44 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3870 1c46 4A49     		ldr	r1, .L303
 3871 1c48 1346     		mov	r3, r2
 3872 1c4a DB00     		lsls	r3, r3, #3
 3873 1c4c 9B1A     		subs	r3, r3, r2
 3874 1c4e 1B01     		lsls	r3, r3, #4
 3875 1c50 0B44     		add	r3, r3, r1
 3876 1c52 D033     		adds	r3, r3, #208
 3877 1c54 1B68     		ldr	r3, [r3]
 3878 1c56 1846     		mov	r0, r3
 3879 1c58 FFF7FEFF 		bl	__aeabi_i2f
 3880 1c5c 0346     		mov	r3, r0
 3881 1c5e 4FF08F41 		mov	r1, #1199570944
 3882 1c62 1846     		mov	r0, r3
 3883 1c64 FFF7FEFF 		bl	__aeabi_fdiv
 3884 1c68 0346     		mov	r3, r0
 3885 1c6a 1A46     		mov	r2, r3
 3886 1c6c 07F12803 		add	r3, r7, #40
 3887 1c70 0C3B     		subs	r3, r3, #12
 3888 1c72 1A60     		str	r2, [r3]	@ float
 606:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 3889              		.loc 1 606 0
 3890 1c74 0023     		movs	r3, #0
 3891 1c76 07F59952 		add	r2, r7, #4896
 3892 1c7a 02F10702 		add	r2, r2, #7
 3893 1c7e 1370     		strb	r3, [r2]
 3894 1c80 35E0     		b	.L175
 3895              	.L176:
 607:..\src/command_processing.c ****                             }
 3896              		.loc 1 607 0 discriminator 3
 3897 1c82 07F59953 		add	r3, r7, #4896
 3898 1c86 03F10503 		add	r3, r3, #5
 3899 1c8a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3900 1c8c 3222     		movs	r2, #50
 3901 1c8e 02FB03F3 		mul	r3, r2, r3
 3902 1c92 1A1D     		adds	r2, r3, #4
 3903 1c94 07F59953 		add	r3, r7, #4896
 3904 1c98 03F10303 		add	r3, r3, #3
 3905 1c9c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3906 1c9e 5B00     		lsls	r3, r3, #1
 3907 1ca0 1A44     		add	r2, r2, r3
 3908 1ca2 07F59953 		add	r3, r7, #4896
 3909 1ca6 03F10303 		add	r3, r3, #3
 3910 1caa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3911 1cac 1A44     		add	r2, r2, r3
 3912 1cae 07F59953 		add	r3, r7, #4896
 3913 1cb2 03F10703 		add	r3, r3, #7
 3914 1cb6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3915 1cb8 D31A     		subs	r3, r2, r3
 3916 1cba 5A1E     		subs	r2, r3, #1
 3917 1cbc 07F59953 		add	r3, r7, #4896
 3918 1cc0 03F10703 		add	r3, r3, #7
 3919 1cc4 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3920 1cc6 07F12803 		add	r3, r7, #40
 3921 1cca 0C3B     		subs	r3, r3, #12
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 98


 3922 1ccc 0B44     		add	r3, r3, r1
 3923 1cce 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3924 1cd0 07F16803 		add	r3, r7, #104
 3925 1cd4 143B     		subs	r3, r3, #20
 3926 1cd6 9954     		strb	r1, [r3, r2]
 606:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 3927              		.loc 1 606 0 discriminator 3
 3928 1cd8 07F59953 		add	r3, r7, #4896
 3929 1cdc 03F10703 		add	r3, r3, #7
 3930 1ce0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3931 1ce2 0133     		adds	r3, r3, #1
 3932 1ce4 07F59952 		add	r2, r7, #4896
 3933 1ce8 02F10702 		add	r2, r2, #7
 3934 1cec 1370     		strb	r3, [r2]
 3935              	.L175:
 606:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 3936              		.loc 1 606 0 is_stmt 0 discriminator 1
 3937 1cee 07F59953 		add	r3, r7, #4896
 3938 1cf2 03F10703 		add	r3, r3, #7
 3939 1cf6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3940 1cf8 07F59953 		add	r3, r7, #4896
 3941 1cfc 03F10303 		add	r3, r3, #3
 3942 1d00 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3943 1d02 9A42     		cmp	r2, r3
 3944 1d04 BDD3     		bcc	.L176
 3945              		.loc 1 610 0 is_stmt 1
 3946 1d06 DCE3     		b	.L113
 3947              	.L122:
 611:..\src/command_processing.c ****                         
 612:..\src/command_processing.c ****                     case 45:         // Second Motor Current PID
 613:..\src/command_processing.c ****                         if(c_mem.motor[SECOND_MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 3948              		.loc 1 613 0
 3949 1d08 07F59853 		add	r3, r7, #4864
 3950 1d0c 03F11E03 		add	r3, r3, #30
 3951 1d10 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3952 1d12 1749     		ldr	r1, .L303
 3953 1d14 1346     		mov	r3, r2
 3954 1d16 DB00     		lsls	r3, r3, #3
 3955 1d18 9B1A     		subs	r3, r3, r2
 3956 1d1a 1B01     		lsls	r3, r3, #4
 3957 1d1c 0B44     		add	r3, r3, r1
 3958 1d1e 03F20F13 		addw	r3, r3, #271
 3959 1d22 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3960 1d24 032B     		cmp	r3, #3
 3961 1d26 00F02A81 		beq	.L177
 614:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_p_c / 65536;
 3962              		.loc 1 614 0
 3963 1d2a 07F59853 		add	r3, r7, #4864
 3964 1d2e 03F11E03 		add	r3, r3, #30
 3965 1d32 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3966 1d34 0E49     		ldr	r1, .L303
 3967 1d36 1346     		mov	r3, r2
 3968 1d38 DB00     		lsls	r3, r3, #3
 3969 1d3a 9B1A     		subs	r3, r3, r2
 3970 1d3c 1B01     		lsls	r3, r3, #4
 3971 1d3e 0B44     		add	r3, r3, r1
 3972 1d40 BC33     		adds	r3, r3, #188
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 99


 3973 1d42 1B68     		ldr	r3, [r3]
 3974 1d44 1846     		mov	r0, r3
 3975 1d46 FFF7FEFF 		bl	__aeabi_i2f
 3976 1d4a 0346     		mov	r3, r0
 3977 1d4c 4FF08F41 		mov	r1, #1199570944
 3978 1d50 1846     		mov	r0, r3
 3979 1d52 FFF7FEFF 		bl	__aeabi_fdiv
 3980 1d56 0346     		mov	r3, r0
 3981 1d58 1A46     		mov	r2, r3
 3982 1d5a 07F12803 		add	r3, r7, #40
 3983 1d5e 0C3B     		subs	r3, r3, #12
 3984 1d60 1A60     		str	r2, [r3]	@ float
 615:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3985              		.loc 1 615 0
 3986 1d62 0023     		movs	r3, #0
 3987 1d64 07F59952 		add	r2, r7, #4896
 3988 1d68 02F10702 		add	r2, r2, #7
 3989 1d6c 1370     		strb	r3, [r2]
 3990 1d6e 30E0     		b	.L178
 3991              	.L304:
 3992              		.align	2
 3993              	.L303:
 3994 1d70 00000000 		.word	c_mem
 3995              	.L179:
 616:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 3996              		.loc 1 616 0 discriminator 3
 3997 1d74 07F59953 		add	r3, r7, #4896
 3998 1d78 03F10503 		add	r3, r3, #5
 3999 1d7c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4000 1d7e 3222     		movs	r2, #50
 4001 1d80 02FB03F3 		mul	r3, r2, r3
 4002 1d84 1A1D     		adds	r2, r3, #4
 4003 1d86 07F59953 		add	r3, r7, #4896
 4004 1d8a 03F10303 		add	r3, r3, #3
 4005 1d8e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4006 1d90 1A44     		add	r2, r2, r3
 4007 1d92 07F59953 		add	r3, r7, #4896
 4008 1d96 03F10703 		add	r3, r3, #7
 4009 1d9a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4010 1d9c D31A     		subs	r3, r2, r3
 4011 1d9e 5A1E     		subs	r2, r3, #1
 4012 1da0 07F59953 		add	r3, r7, #4896
 4013 1da4 03F10703 		add	r3, r3, #7
 4014 1da8 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4015 1daa 07F12803 		add	r3, r7, #40
 4016 1dae 0C3B     		subs	r3, r3, #12
 4017 1db0 0B44     		add	r3, r3, r1
 4018 1db2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4019 1db4 07F16803 		add	r3, r7, #104
 4020 1db8 143B     		subs	r3, r3, #20
 4021 1dba 9954     		strb	r1, [r3, r2]
 615:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4022              		.loc 1 615 0 discriminator 3
 4023 1dbc 07F59953 		add	r3, r7, #4896
 4024 1dc0 03F10703 		add	r3, r3, #7
 4025 1dc4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4026 1dc6 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 100


 4027 1dc8 07F59952 		add	r2, r7, #4896
 4028 1dcc 02F10702 		add	r2, r2, #7
 4029 1dd0 1370     		strb	r3, [r2]
 4030              	.L178:
 615:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4031              		.loc 1 615 0 is_stmt 0 discriminator 1
 4032 1dd2 07F59953 		add	r3, r7, #4896
 4033 1dd6 03F10703 		add	r3, r3, #7
 4034 1dda 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4035 1ddc 07F59953 		add	r3, r7, #4896
 4036 1de0 03F10303 		add	r3, r3, #3
 4037 1de4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4038 1de6 9A42     		cmp	r2, r3
 4039 1de8 C4D3     		bcc	.L179
 617:..\src/command_processing.c ****                             }
 618:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_i_c / 65536;
 4040              		.loc 1 618 0 is_stmt 1
 4041 1dea 07F59853 		add	r3, r7, #4864
 4042 1dee 03F11E03 		add	r3, r3, #30
 4043 1df2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4044 1df4 A249     		ldr	r1, .L305
 4045 1df6 1346     		mov	r3, r2
 4046 1df8 DB00     		lsls	r3, r3, #3
 4047 1dfa 9B1A     		subs	r3, r3, r2
 4048 1dfc 1B01     		lsls	r3, r3, #4
 4049 1dfe 0B44     		add	r3, r3, r1
 4050 1e00 C033     		adds	r3, r3, #192
 4051 1e02 1B68     		ldr	r3, [r3]
 4052 1e04 1846     		mov	r0, r3
 4053 1e06 FFF7FEFF 		bl	__aeabi_i2f
 4054 1e0a 0346     		mov	r3, r0
 4055 1e0c 4FF08F41 		mov	r1, #1199570944
 4056 1e10 1846     		mov	r0, r3
 4057 1e12 FFF7FEFF 		bl	__aeabi_fdiv
 4058 1e16 0346     		mov	r3, r0
 4059 1e18 1A46     		mov	r2, r3
 4060 1e1a 07F12803 		add	r3, r7, #40
 4061 1e1e 0C3B     		subs	r3, r3, #12
 4062 1e20 1A60     		str	r2, [r3]	@ float
 619:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4063              		.loc 1 619 0
 4064 1e22 0023     		movs	r3, #0
 4065 1e24 07F59952 		add	r2, r7, #4896
 4066 1e28 02F10702 		add	r2, r2, #7
 4067 1e2c 1370     		strb	r3, [r2]
 4068 1e2e 34E0     		b	.L180
 4069              	.L181:
 620:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 4070              		.loc 1 620 0 discriminator 3
 4071 1e30 07F59953 		add	r3, r7, #4896
 4072 1e34 03F10503 		add	r3, r3, #5
 4073 1e38 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4074 1e3a 3222     		movs	r2, #50
 4075 1e3c 02FB03F3 		mul	r3, r2, r3
 4076 1e40 1A1D     		adds	r2, r3, #4
 4077 1e42 07F59953 		add	r3, r7, #4896
 4078 1e46 03F10303 		add	r3, r3, #3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 101


 4079 1e4a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4080 1e4c 1A44     		add	r2, r2, r3
 4081 1e4e 07F59953 		add	r3, r7, #4896
 4082 1e52 03F10303 		add	r3, r3, #3
 4083 1e56 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4084 1e58 1A44     		add	r2, r2, r3
 4085 1e5a 07F59953 		add	r3, r7, #4896
 4086 1e5e 03F10703 		add	r3, r3, #7
 4087 1e62 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4088 1e64 D31A     		subs	r3, r2, r3
 4089 1e66 5A1E     		subs	r2, r3, #1
 4090 1e68 07F59953 		add	r3, r7, #4896
 4091 1e6c 03F10703 		add	r3, r3, #7
 4092 1e70 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4093 1e72 07F12803 		add	r3, r7, #40
 4094 1e76 0C3B     		subs	r3, r3, #12
 4095 1e78 0B44     		add	r3, r3, r1
 4096 1e7a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4097 1e7c 07F16803 		add	r3, r7, #104
 4098 1e80 143B     		subs	r3, r3, #20
 4099 1e82 9954     		strb	r1, [r3, r2]
 619:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4100              		.loc 1 619 0 discriminator 3
 4101 1e84 07F59953 		add	r3, r7, #4896
 4102 1e88 03F10703 		add	r3, r3, #7
 4103 1e8c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4104 1e8e 0133     		adds	r3, r3, #1
 4105 1e90 07F59952 		add	r2, r7, #4896
 4106 1e94 02F10702 		add	r2, r2, #7
 4107 1e98 1370     		strb	r3, [r2]
 4108              	.L180:
 619:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4109              		.loc 1 619 0 is_stmt 0 discriminator 1
 4110 1e9a 07F59953 		add	r3, r7, #4896
 4111 1e9e 03F10703 		add	r3, r3, #7
 4112 1ea2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4113 1ea4 07F59953 		add	r3, r7, #4896
 4114 1ea8 03F10303 		add	r3, r3, #3
 4115 1eac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4116 1eae 9A42     		cmp	r2, r3
 4117 1eb0 BED3     		bcc	.L181
 621:..\src/command_processing.c ****                             }
 622:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_d_c / 65536;
 4118              		.loc 1 622 0 is_stmt 1
 4119 1eb2 07F59853 		add	r3, r7, #4864
 4120 1eb6 03F11E03 		add	r3, r3, #30
 4121 1eba 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4122 1ebc 7049     		ldr	r1, .L305
 4123 1ebe 1346     		mov	r3, r2
 4124 1ec0 DB00     		lsls	r3, r3, #3
 4125 1ec2 9B1A     		subs	r3, r3, r2
 4126 1ec4 1B01     		lsls	r3, r3, #4
 4127 1ec6 0B44     		add	r3, r3, r1
 4128 1ec8 C433     		adds	r3, r3, #196
 4129 1eca 1B68     		ldr	r3, [r3]
 4130 1ecc 1846     		mov	r0, r3
 4131 1ece FFF7FEFF 		bl	__aeabi_i2f
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 102


 4132 1ed2 0346     		mov	r3, r0
 4133 1ed4 4FF08F41 		mov	r1, #1199570944
 4134 1ed8 1846     		mov	r0, r3
 4135 1eda FFF7FEFF 		bl	__aeabi_fdiv
 4136 1ede 0346     		mov	r3, r0
 4137 1ee0 1A46     		mov	r2, r3
 4138 1ee2 07F12803 		add	r3, r7, #40
 4139 1ee6 0C3B     		subs	r3, r3, #12
 4140 1ee8 1A60     		str	r2, [r3]	@ float
 623:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4141              		.loc 1 623 0
 4142 1eea 0023     		movs	r3, #0
 4143 1eec 07F59952 		add	r2, r7, #4896
 4144 1ef0 02F10702 		add	r2, r2, #7
 4145 1ef4 1370     		strb	r3, [r2]
 4146 1ef6 35E0     		b	.L182
 4147              	.L183:
 624:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 4148              		.loc 1 624 0 discriminator 3
 4149 1ef8 07F59953 		add	r3, r7, #4896
 4150 1efc 03F10503 		add	r3, r3, #5
 4151 1f00 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4152 1f02 3222     		movs	r2, #50
 4153 1f04 02FB03F3 		mul	r3, r2, r3
 4154 1f08 1A1D     		adds	r2, r3, #4
 4155 1f0a 07F59953 		add	r3, r7, #4896
 4156 1f0e 03F10303 		add	r3, r3, #3
 4157 1f12 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4158 1f14 5B00     		lsls	r3, r3, #1
 4159 1f16 1A44     		add	r2, r2, r3
 4160 1f18 07F59953 		add	r3, r7, #4896
 4161 1f1c 03F10303 		add	r3, r3, #3
 4162 1f20 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4163 1f22 1A44     		add	r2, r2, r3
 4164 1f24 07F59953 		add	r3, r7, #4896
 4165 1f28 03F10703 		add	r3, r3, #7
 4166 1f2c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4167 1f2e D31A     		subs	r3, r2, r3
 4168 1f30 5A1E     		subs	r2, r3, #1
 4169 1f32 07F59953 		add	r3, r7, #4896
 4170 1f36 03F10703 		add	r3, r3, #7
 4171 1f3a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4172 1f3c 07F12803 		add	r3, r7, #40
 4173 1f40 0C3B     		subs	r3, r3, #12
 4174 1f42 0B44     		add	r3, r3, r1
 4175 1f44 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4176 1f46 07F16803 		add	r3, r7, #104
 4177 1f4a 143B     		subs	r3, r3, #20
 4178 1f4c 9954     		strb	r1, [r3, r2]
 623:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4179              		.loc 1 623 0 discriminator 3
 4180 1f4e 07F59953 		add	r3, r7, #4896
 4181 1f52 03F10703 		add	r3, r3, #7
 4182 1f56 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4183 1f58 0133     		adds	r3, r3, #1
 4184 1f5a 07F59952 		add	r2, r7, #4896
 4185 1f5e 02F10702 		add	r2, r2, #7
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 103


 4186 1f62 1370     		strb	r3, [r2]
 4187              	.L182:
 623:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4188              		.loc 1 623 0 is_stmt 0 discriminator 1
 4189 1f64 07F59953 		add	r3, r7, #4896
 4190 1f68 03F10703 		add	r3, r3, #7
 4191 1f6c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4192 1f6e 07F59953 		add	r3, r7, #4896
 4193 1f72 03F10303 		add	r3, r3, #3
 4194 1f76 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4195 1f78 9A42     		cmp	r2, r3
 4196 1f7a BDD3     		bcc	.L183
 625:..\src/command_processing.c ****                             }
 626:..\src/command_processing.c ****                         }
 627:..\src/command_processing.c ****                         else {
 628:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_p_c_dl / 65536;
 629:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 630:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 631:..\src/command_processing.c ****                             }
 632:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_i_c_dl / 65536;
 633:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 634:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 635:..\src/command_processing.c ****                             }
 636:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_d_c_dl / 65536;
 637:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 638:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 639:..\src/command_processing.c ****                             }
 640:..\src/command_processing.c ****                         }            
 641:..\src/command_processing.c ****                         break;  
 4197              		.loc 1 641 0 is_stmt 1
 4198 1f7c A1E2     		b	.L113
 4199              	.L177:
 628:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4200              		.loc 1 628 0
 4201 1f7e 07F59853 		add	r3, r7, #4864
 4202 1f82 03F11E03 		add	r3, r3, #30
 4203 1f86 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4204 1f88 3D49     		ldr	r1, .L305
 4205 1f8a 1346     		mov	r3, r2
 4206 1f8c DB00     		lsls	r3, r3, #3
 4207 1f8e 9B1A     		subs	r3, r3, r2
 4208 1f90 1B01     		lsls	r3, r3, #4
 4209 1f92 0B44     		add	r3, r3, r1
 4210 1f94 D433     		adds	r3, r3, #212
 4211 1f96 1B68     		ldr	r3, [r3]
 4212 1f98 1846     		mov	r0, r3
 4213 1f9a FFF7FEFF 		bl	__aeabi_i2f
 4214 1f9e 0346     		mov	r3, r0
 4215 1fa0 4FF08F41 		mov	r1, #1199570944
 4216 1fa4 1846     		mov	r0, r3
 4217 1fa6 FFF7FEFF 		bl	__aeabi_fdiv
 4218 1faa 0346     		mov	r3, r0
 4219 1fac 1A46     		mov	r2, r3
 4220 1fae 07F12803 		add	r3, r7, #40
 4221 1fb2 0C3B     		subs	r3, r3, #12
 4222 1fb4 1A60     		str	r2, [r3]	@ float
 629:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 104


 4223              		.loc 1 629 0
 4224 1fb6 0023     		movs	r3, #0
 4225 1fb8 07F59952 		add	r2, r7, #4896
 4226 1fbc 02F10702 		add	r2, r2, #7
 4227 1fc0 1370     		strb	r3, [r2]
 4228 1fc2 2EE0     		b	.L185
 4229              	.L186:
 630:..\src/command_processing.c ****                             }
 4230              		.loc 1 630 0 discriminator 3
 4231 1fc4 07F59953 		add	r3, r7, #4896
 4232 1fc8 03F10503 		add	r3, r3, #5
 4233 1fcc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4234 1fce 3222     		movs	r2, #50
 4235 1fd0 02FB03F3 		mul	r3, r2, r3
 4236 1fd4 1A1D     		adds	r2, r3, #4
 4237 1fd6 07F59953 		add	r3, r7, #4896
 4238 1fda 03F10303 		add	r3, r3, #3
 4239 1fde 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4240 1fe0 1A44     		add	r2, r2, r3
 4241 1fe2 07F59953 		add	r3, r7, #4896
 4242 1fe6 03F10703 		add	r3, r3, #7
 4243 1fea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4244 1fec D31A     		subs	r3, r2, r3
 4245 1fee 5A1E     		subs	r2, r3, #1
 4246 1ff0 07F59953 		add	r3, r7, #4896
 4247 1ff4 03F10703 		add	r3, r3, #7
 4248 1ff8 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4249 1ffa 07F12803 		add	r3, r7, #40
 4250 1ffe 0C3B     		subs	r3, r3, #12
 4251 2000 0B44     		add	r3, r3, r1
 4252 2002 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4253 2004 07F16803 		add	r3, r7, #104
 4254 2008 143B     		subs	r3, r3, #20
 4255 200a 9954     		strb	r1, [r3, r2]
 629:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 4256              		.loc 1 629 0 discriminator 3
 4257 200c 07F59953 		add	r3, r7, #4896
 4258 2010 03F10703 		add	r3, r3, #7
 4259 2014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4260 2016 0133     		adds	r3, r3, #1
 4261 2018 07F59952 		add	r2, r7, #4896
 4262 201c 02F10702 		add	r2, r2, #7
 4263 2020 1370     		strb	r3, [r2]
 4264              	.L185:
 629:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 4265              		.loc 1 629 0 is_stmt 0 discriminator 1
 4266 2022 07F59953 		add	r3, r7, #4896
 4267 2026 03F10703 		add	r3, r3, #7
 4268 202a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4269 202c 07F59953 		add	r3, r7, #4896
 4270 2030 03F10303 		add	r3, r3, #3
 4271 2034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4272 2036 9A42     		cmp	r2, r3
 4273 2038 C4D3     		bcc	.L186
 632:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4274              		.loc 1 632 0 is_stmt 1
 4275 203a 07F59853 		add	r3, r7, #4864
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 105


 4276 203e 03F11E03 		add	r3, r3, #30
 4277 2042 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4278 2044 0E49     		ldr	r1, .L305
 4279 2046 1346     		mov	r3, r2
 4280 2048 DB00     		lsls	r3, r3, #3
 4281 204a 9B1A     		subs	r3, r3, r2
 4282 204c 1B01     		lsls	r3, r3, #4
 4283 204e 0B44     		add	r3, r3, r1
 4284 2050 D833     		adds	r3, r3, #216
 4285 2052 1B68     		ldr	r3, [r3]
 4286 2054 1846     		mov	r0, r3
 4287 2056 FFF7FEFF 		bl	__aeabi_i2f
 4288 205a 0346     		mov	r3, r0
 4289 205c 4FF08F41 		mov	r1, #1199570944
 4290 2060 1846     		mov	r0, r3
 4291 2062 FFF7FEFF 		bl	__aeabi_fdiv
 4292 2066 0346     		mov	r3, r0
 4293 2068 1A46     		mov	r2, r3
 4294 206a 07F12803 		add	r3, r7, #40
 4295 206e 0C3B     		subs	r3, r3, #12
 4296 2070 1A60     		str	r2, [r3]	@ float
 633:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 4297              		.loc 1 633 0
 4298 2072 0023     		movs	r3, #0
 4299 2074 07F59952 		add	r2, r7, #4896
 4300 2078 02F10702 		add	r2, r2, #7
 4301 207c 1370     		strb	r3, [r2]
 4302 207e 36E0     		b	.L187
 4303              	.L306:
 4304              		.align	2
 4305              	.L305:
 4306 2080 00000000 		.word	c_mem
 4307              	.L188:
 634:..\src/command_processing.c ****                             }
 4308              		.loc 1 634 0 discriminator 3
 4309 2084 07F59953 		add	r3, r7, #4896
 4310 2088 03F10503 		add	r3, r3, #5
 4311 208c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4312 208e 3222     		movs	r2, #50
 4313 2090 02FB03F3 		mul	r3, r2, r3
 4314 2094 1A1D     		adds	r2, r3, #4
 4315 2096 07F59953 		add	r3, r7, #4896
 4316 209a 03F10303 		add	r3, r3, #3
 4317 209e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4318 20a0 1A44     		add	r2, r2, r3
 4319 20a2 07F59953 		add	r3, r7, #4896
 4320 20a6 03F10303 		add	r3, r3, #3
 4321 20aa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4322 20ac 1A44     		add	r2, r2, r3
 4323 20ae 07F59953 		add	r3, r7, #4896
 4324 20b2 03F10703 		add	r3, r3, #7
 4325 20b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4326 20b8 D31A     		subs	r3, r2, r3
 4327 20ba 5A1E     		subs	r2, r3, #1
 4328 20bc 07F59953 		add	r3, r7, #4896
 4329 20c0 03F10703 		add	r3, r3, #7
 4330 20c4 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 106


 4331 20c6 07F12803 		add	r3, r7, #40
 4332 20ca 0C3B     		subs	r3, r3, #12
 4333 20cc 0B44     		add	r3, r3, r1
 4334 20ce 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4335 20d0 07F16803 		add	r3, r7, #104
 4336 20d4 143B     		subs	r3, r3, #20
 4337 20d6 9954     		strb	r1, [r3, r2]
 633:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 4338              		.loc 1 633 0 discriminator 3
 4339 20d8 07F59953 		add	r3, r7, #4896
 4340 20dc 03F10703 		add	r3, r3, #7
 4341 20e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4342 20e2 0133     		adds	r3, r3, #1
 4343 20e4 07F59952 		add	r2, r7, #4896
 4344 20e8 02F10702 		add	r2, r2, #7
 4345 20ec 1370     		strb	r3, [r2]
 4346              	.L187:
 633:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 4347              		.loc 1 633 0 is_stmt 0 discriminator 1
 4348 20ee 07F59953 		add	r3, r7, #4896
 4349 20f2 03F10703 		add	r3, r3, #7
 4350 20f6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4351 20f8 07F59953 		add	r3, r7, #4896
 4352 20fc 03F10303 		add	r3, r3, #3
 4353 2100 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4354 2102 9A42     		cmp	r2, r3
 4355 2104 BED3     		bcc	.L188
 636:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4356              		.loc 1 636 0 is_stmt 1
 4357 2106 07F59853 		add	r3, r7, #4864
 4358 210a 03F11E03 		add	r3, r3, #30
 4359 210e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4360 2110 C849     		ldr	r1, .L307
 4361 2112 1346     		mov	r3, r2
 4362 2114 DB00     		lsls	r3, r3, #3
 4363 2116 9B1A     		subs	r3, r3, r2
 4364 2118 1B01     		lsls	r3, r3, #4
 4365 211a 0B44     		add	r3, r3, r1
 4366 211c DC33     		adds	r3, r3, #220
 4367 211e 1B68     		ldr	r3, [r3]
 4368 2120 1846     		mov	r0, r3
 4369 2122 FFF7FEFF 		bl	__aeabi_i2f
 4370 2126 0346     		mov	r3, r0
 4371 2128 4FF08F41 		mov	r1, #1199570944
 4372 212c 1846     		mov	r0, r3
 4373 212e FFF7FEFF 		bl	__aeabi_fdiv
 4374 2132 0346     		mov	r3, r0
 4375 2134 1A46     		mov	r2, r3
 4376 2136 07F12803 		add	r3, r7, #40
 4377 213a 0C3B     		subs	r3, r3, #12
 4378 213c 1A60     		str	r2, [r3]	@ float
 637:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 4379              		.loc 1 637 0
 4380 213e 0023     		movs	r3, #0
 4381 2140 07F59952 		add	r2, r7, #4896
 4382 2144 02F10702 		add	r2, r2, #7
 4383 2148 1370     		strb	r3, [r2]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 107


 4384 214a 35E0     		b	.L189
 4385              	.L190:
 638:..\src/command_processing.c ****                             }
 4386              		.loc 1 638 0 discriminator 3
 4387 214c 07F59953 		add	r3, r7, #4896
 4388 2150 03F10503 		add	r3, r3, #5
 4389 2154 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4390 2156 3222     		movs	r2, #50
 4391 2158 02FB03F3 		mul	r3, r2, r3
 4392 215c 1A1D     		adds	r2, r3, #4
 4393 215e 07F59953 		add	r3, r7, #4896
 4394 2162 03F10303 		add	r3, r3, #3
 4395 2166 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4396 2168 5B00     		lsls	r3, r3, #1
 4397 216a 1A44     		add	r2, r2, r3
 4398 216c 07F59953 		add	r3, r7, #4896
 4399 2170 03F10303 		add	r3, r3, #3
 4400 2174 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4401 2176 1A44     		add	r2, r2, r3
 4402 2178 07F59953 		add	r3, r7, #4896
 4403 217c 03F10703 		add	r3, r3, #7
 4404 2180 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4405 2182 D31A     		subs	r3, r2, r3
 4406 2184 5A1E     		subs	r2, r3, #1
 4407 2186 07F59953 		add	r3, r7, #4896
 4408 218a 03F10703 		add	r3, r3, #7
 4409 218e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4410 2190 07F12803 		add	r3, r7, #40
 4411 2194 0C3B     		subs	r3, r3, #12
 4412 2196 0B44     		add	r3, r3, r1
 4413 2198 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4414 219a 07F16803 		add	r3, r7, #104
 4415 219e 143B     		subs	r3, r3, #20
 4416 21a0 9954     		strb	r1, [r3, r2]
 637:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 4417              		.loc 1 637 0 discriminator 3
 4418 21a2 07F59953 		add	r3, r7, #4896
 4419 21a6 03F10703 		add	r3, r3, #7
 4420 21aa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4421 21ac 0133     		adds	r3, r3, #1
 4422 21ae 07F59952 		add	r2, r7, #4896
 4423 21b2 02F10702 		add	r2, r2, #7
 4424 21b6 1370     		strb	r3, [r2]
 4425              	.L189:
 637:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 4426              		.loc 1 637 0 is_stmt 0 discriminator 1
 4427 21b8 07F59953 		add	r3, r7, #4896
 4428 21bc 03F10703 		add	r3, r3, #7
 4429 21c0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4430 21c2 07F59953 		add	r3, r7, #4896
 4431 21c6 03F10303 		add	r3, r3, #3
 4432 21ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4433 21cc 9A42     		cmp	r2, r3
 4434 21ce BDD3     		bcc	.L190
 4435              		.loc 1 641 0 is_stmt 1
 4436 21d0 77E1     		b	.L113
 4437              	.L123:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 108


 642:..\src/command_processing.c **** 
 643:..\src/command_processing.c ****                     case 50:         // Second Motor Measurement Offset
 644:..\src/command_processing.c ****                         aux_int16 = (c_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i]
 4438              		.loc 1 644 0
 4439 21d2 07F59853 		add	r3, r7, #4864
 4440 21d6 03F11E03 		add	r3, r3, #30
 4441 21da 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4442 21dc 9649     		ldr	r1, .L307+4
 4443 21de 1346     		mov	r3, r2
 4444 21e0 DB00     		lsls	r3, r3, #3
 4445 21e2 9B1A     		subs	r3, r3, r2
 4446 21e4 1B01     		lsls	r3, r3, #4
 4447 21e6 0B44     		add	r3, r3, r1
 4448 21e8 03F58873 		add	r3, r3, #272
 4449 21ec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4450 21ee 1846     		mov	r0, r3
 4451 21f0 07F59953 		add	r3, r7, #4896
 4452 21f4 03F10703 		add	r3, r3, #7
 4453 21f8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4454 21fa 8E49     		ldr	r1, .L307
 4455 21fc 0346     		mov	r3, r0
 4456 21fe 5B00     		lsls	r3, r3, #1
 4457 2200 0344     		add	r3, r3, r0
 4458 2202 9B00     		lsls	r3, r3, #2
 4459 2204 1344     		add	r3, r3, r2
 4460 2206 6633     		adds	r3, r3, #102
 4461 2208 51F82310 		ldr	r1, [r1, r3, lsl #2]
 4462 220c 07F59853 		add	r3, r7, #4864
 4463 2210 03F11E03 		add	r3, r3, #30
 4464 2214 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4465 2216 8848     		ldr	r0, .L307+4
 4466 2218 1346     		mov	r3, r2
 4467 221a DB00     		lsls	r3, r3, #3
 4468 221c 9B1A     		subs	r3, r3, r2
 4469 221e 1B01     		lsls	r3, r3, #4
 4470 2220 0344     		add	r3, r3, r0
 4471 2222 03F58873 		add	r3, r3, #272
 4472 2226 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4473 2228 1C46     		mov	r4, r3
 4474 222a 07F59953 		add	r3, r7, #4896
 4475 222e 03F10703 		add	r3, r3, #7
 4476 2232 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4477 2234 7F48     		ldr	r0, .L307
 4478 2236 2346     		mov	r3, r4
 4479 2238 5B00     		lsls	r3, r3, #1
 4480 223a 2344     		add	r3, r3, r4
 4481 223c 1B01     		lsls	r3, r3, #4
 4482 223e 0344     		add	r3, r3, r0
 4483 2240 1344     		add	r3, r3, r2
 4484 2242 03F29513 		addw	r3, r3, #405
 4485 2246 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4486 2248 41FA03F3 		asr	r3, r1, r3
 4487 224c 1AB2     		sxth	r2, r3
 4488 224e 07F12803 		add	r3, r7, #40
 4489 2252 0E3B     		subs	r3, r3, #14
 4490 2254 1A80     		strh	r2, [r3]	@ movhi
 645:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 109


 4491              		.loc 1 645 0
 4492 2256 0023     		movs	r3, #0
 4493 2258 07F59952 		add	r2, r7, #4896
 4494 225c 02F10602 		add	r2, r2, #6
 4495 2260 1370     		strb	r3, [r2]
 4496 2262 3BE0     		b	.L191
 4497              	.L192:
 646:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 4498              		.loc 1 646 0 discriminator 3
 4499 2264 07F59953 		add	r3, r7, #4896
 4500 2268 03F10503 		add	r3, r3, #5
 4501 226c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4502 226e 3222     		movs	r2, #50
 4503 2270 02FB03F3 		mul	r3, r2, r3
 4504 2274 1A1D     		adds	r2, r3, #4
 4505 2276 07F59953 		add	r3, r7, #4896
 4506 227a 03F10703 		add	r3, r3, #7
 4507 227e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4508 2280 07F59951 		add	r1, r7, #4896
 4509 2284 01F10301 		add	r1, r1, #3
 4510 2288 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 4511 228a 01FB03F3 		mul	r3, r1, r3
 4512 228e 1A44     		add	r2, r2, r3
 4513 2290 07F59953 		add	r3, r7, #4896
 4514 2294 03F10303 		add	r3, r3, #3
 4515 2298 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4516 229a 1A44     		add	r2, r2, r3
 4517 229c 07F59953 		add	r3, r7, #4896
 4518 22a0 03F10603 		add	r3, r3, #6
 4519 22a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4520 22a6 D31A     		subs	r3, r2, r3
 4521 22a8 5A1E     		subs	r2, r3, #1
 4522 22aa 07F59953 		add	r3, r7, #4896
 4523 22ae 03F10603 		add	r3, r3, #6
 4524 22b2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4525 22b4 07F12803 		add	r3, r7, #40
 4526 22b8 0E3B     		subs	r3, r3, #14
 4527 22ba 0B44     		add	r3, r3, r1
 4528 22bc 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4529 22be 07F16803 		add	r3, r7, #104
 4530 22c2 143B     		subs	r3, r3, #20
 4531 22c4 9954     		strb	r1, [r3, r2]
 645:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4532              		.loc 1 645 0 discriminator 3
 4533 22c6 07F59953 		add	r3, r7, #4896
 4534 22ca 03F10603 		add	r3, r3, #6
 4535 22ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4536 22d0 0133     		adds	r3, r3, #1
 4537 22d2 07F59952 		add	r2, r7, #4896
 4538 22d6 02F10602 		add	r2, r2, #6
 4539 22da 1370     		strb	r3, [r2]
 4540              	.L191:
 645:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4541              		.loc 1 645 0 is_stmt 0 discriminator 1
 4542 22dc 07F59953 		add	r3, r7, #4896
 4543 22e0 03F10603 		add	r3, r3, #6
 4544 22e4 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 110


 4545 22e6 07F59953 		add	r3, r7, #4896
 4546 22ea 03F10303 		add	r3, r3, #3
 4547 22ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4548 22f0 9A42     		cmp	r2, r3
 4549 22f2 B7D3     		bcc	.L192
 647:..\src/command_processing.c ****                         }
 648:..\src/command_processing.c ****                         break;
 4550              		.loc 1 648 0 is_stmt 1
 4551 22f4 E5E0     		b	.L113
 4552              	.L124:
 649:..\src/command_processing.c ****                 
 650:..\src/command_processing.c ****                     case 53:        // Second Motor Position limits
 651:..\src/command_processing.c ****                         aux_int32 = (c_mem.motor[SECOND_MOTOR_IDX].pos_lim_inf >> c_mem.enc[g_mem.m
 4553              		.loc 1 651 0
 4554 22f6 07F59853 		add	r3, r7, #4864
 4555 22fa 03F11E03 		add	r3, r3, #30
 4556 22fe 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4557 2300 4C49     		ldr	r1, .L307
 4558 2302 1346     		mov	r3, r2
 4559 2304 DB00     		lsls	r3, r3, #3
 4560 2306 9B1A     		subs	r3, r3, r2
 4561 2308 1B01     		lsls	r3, r3, #4
 4562 230a 0B44     		add	r3, r3, r1
 4563 230c E433     		adds	r3, r3, #228
 4564 230e 1968     		ldr	r1, [r3]
 4565 2310 07F59853 		add	r3, r7, #4864
 4566 2314 03F11E03 		add	r3, r3, #30
 4567 2318 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4568 231a 4748     		ldr	r0, .L307+4
 4569 231c 1346     		mov	r3, r2
 4570 231e DB00     		lsls	r3, r3, #3
 4571 2320 9B1A     		subs	r3, r3, r2
 4572 2322 1B01     		lsls	r3, r3, #4
 4573 2324 0344     		add	r3, r3, r0
 4574 2326 03F58873 		add	r3, r3, #272
 4575 232a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4576 232c 1846     		mov	r0, r3
 4577 232e 414A     		ldr	r2, .L307
 4578 2330 0346     		mov	r3, r0
 4579 2332 5B00     		lsls	r3, r3, #1
 4580 2334 0344     		add	r3, r3, r0
 4581 2336 1B01     		lsls	r3, r3, #4
 4582 2338 1344     		add	r3, r3, r2
 4583 233a 03F29513 		addw	r3, r3, #405
 4584 233e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4585 2340 41FA03F2 		asr	r2, r1, r3
 4586 2344 07F12803 		add	r3, r7, #40
 4587 2348 143B     		subs	r3, r3, #20
 4588 234a 1A60     		str	r2, [r3]
 652:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4589              		.loc 1 652 0
 4590 234c 0023     		movs	r3, #0
 4591 234e 07F59952 		add	r2, r7, #4896
 4592 2352 02F10602 		add	r2, r2, #6
 4593 2356 1370     		strb	r3, [r2]
 4594 2358 2EE0     		b	.L193
 4595              	.L194:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 111


 653:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - j -1] = ((char*)(&aux_int
 4596              		.loc 1 653 0 discriminator 3
 4597 235a 07F59953 		add	r3, r7, #4896
 4598 235e 03F10503 		add	r3, r3, #5
 4599 2362 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4600 2364 3222     		movs	r2, #50
 4601 2366 02FB03F3 		mul	r3, r2, r3
 4602 236a 1A1D     		adds	r2, r3, #4
 4603 236c 07F59953 		add	r3, r7, #4896
 4604 2370 03F10303 		add	r3, r3, #3
 4605 2374 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4606 2376 1A44     		add	r2, r2, r3
 4607 2378 07F59953 		add	r3, r7, #4896
 4608 237c 03F10603 		add	r3, r3, #6
 4609 2380 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4610 2382 D31A     		subs	r3, r2, r3
 4611 2384 5A1E     		subs	r2, r3, #1
 4612 2386 07F59953 		add	r3, r7, #4896
 4613 238a 03F10603 		add	r3, r3, #6
 4614 238e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4615 2390 07F12803 		add	r3, r7, #40
 4616 2394 143B     		subs	r3, r3, #20
 4617 2396 0B44     		add	r3, r3, r1
 4618 2398 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4619 239a 07F16803 		add	r3, r7, #104
 4620 239e 143B     		subs	r3, r3, #20
 4621 23a0 9954     		strb	r1, [r3, r2]
 652:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4622              		.loc 1 652 0 discriminator 3
 4623 23a2 07F59953 		add	r3, r7, #4896
 4624 23a6 03F10603 		add	r3, r3, #6
 4625 23aa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4626 23ac 0133     		adds	r3, r3, #1
 4627 23ae 07F59952 		add	r2, r7, #4896
 4628 23b2 02F10602 		add	r2, r2, #6
 4629 23b6 1370     		strb	r3, [r2]
 4630              	.L193:
 652:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4631              		.loc 1 652 0 is_stmt 0 discriminator 1
 4632 23b8 07F59953 		add	r3, r7, #4896
 4633 23bc 03F10603 		add	r3, r3, #6
 4634 23c0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4635 23c2 07F59953 		add	r3, r7, #4896
 4636 23c6 03F10303 		add	r3, r3, #3
 4637 23ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4638 23cc 9A42     		cmp	r2, r3
 4639 23ce C4D3     		bcc	.L194
 654:..\src/command_processing.c ****                         }
 655:..\src/command_processing.c ****                         aux_int32 = (c_mem.motor[SECOND_MOTOR_IDX].pos_lim_sup >> c_mem.enc[g_mem.m
 4640              		.loc 1 655 0 is_stmt 1
 4641 23d0 07F59853 		add	r3, r7, #4864
 4642 23d4 03F11E03 		add	r3, r3, #30
 4643 23d8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4644 23da 1649     		ldr	r1, .L307
 4645 23dc 1346     		mov	r3, r2
 4646 23de DB00     		lsls	r3, r3, #3
 4647 23e0 9B1A     		subs	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 112


 4648 23e2 1B01     		lsls	r3, r3, #4
 4649 23e4 0B44     		add	r3, r3, r1
 4650 23e6 E833     		adds	r3, r3, #232
 4651 23e8 1968     		ldr	r1, [r3]
 4652 23ea 07F59853 		add	r3, r7, #4864
 4653 23ee 03F11E03 		add	r3, r3, #30
 4654 23f2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4655 23f4 1048     		ldr	r0, .L307+4
 4656 23f6 1346     		mov	r3, r2
 4657 23f8 DB00     		lsls	r3, r3, #3
 4658 23fa 9B1A     		subs	r3, r3, r2
 4659 23fc 1B01     		lsls	r3, r3, #4
 4660 23fe 0344     		add	r3, r3, r0
 4661 2400 03F58873 		add	r3, r3, #272
 4662 2404 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4663 2406 1846     		mov	r0, r3
 4664 2408 0A4A     		ldr	r2, .L307
 4665 240a 0346     		mov	r3, r0
 4666 240c 5B00     		lsls	r3, r3, #1
 4667 240e 0344     		add	r3, r3, r0
 4668 2410 1B01     		lsls	r3, r3, #4
 4669 2412 1344     		add	r3, r3, r2
 4670 2414 03F29513 		addw	r3, r3, #405
 4671 2418 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4672 241a 41FA03F2 		asr	r2, r1, r3
 4673 241e 07F12803 		add	r3, r7, #40
 4674 2422 143B     		subs	r3, r3, #20
 4675 2424 1A60     		str	r2, [r3]
 656:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4676              		.loc 1 656 0
 4677 2426 0023     		movs	r3, #0
 4678 2428 07F59952 		add	r2, r7, #4896
 4679 242c 02F10602 		add	r2, r2, #6
 4680 2430 1370     		strb	r3, [r2]
 4681 2432 38E0     		b	.L195
 4682              	.L308:
 4683              		.align	2
 4684              	.L307:
 4685 2434 00000000 		.word	c_mem
 4686 2438 00000000 		.word	g_mem
 4687              	.L196:
 657:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - j -1] = ((char*)(&a
 4688              		.loc 1 657 0 discriminator 3
 4689 243c 07F59953 		add	r3, r7, #4896
 4690 2440 03F10503 		add	r3, r3, #5
 4691 2444 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4692 2446 3222     		movs	r2, #50
 4693 2448 02FB03F3 		mul	r3, r2, r3
 4694 244c 1A1D     		adds	r2, r3, #4
 4695 244e 07F59953 		add	r3, r7, #4896
 4696 2452 03F10303 		add	r3, r3, #3
 4697 2456 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4698 2458 1A44     		add	r2, r2, r3
 4699 245a 07F59953 		add	r3, r7, #4896
 4700 245e 03F10303 		add	r3, r3, #3
 4701 2462 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4702 2464 1A44     		add	r2, r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 113


 4703 2466 07F59953 		add	r3, r7, #4896
 4704 246a 03F10603 		add	r3, r3, #6
 4705 246e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4706 2470 D31A     		subs	r3, r2, r3
 4707 2472 5A1E     		subs	r2, r3, #1
 4708 2474 07F59953 		add	r3, r7, #4896
 4709 2478 03F10603 		add	r3, r3, #6
 4710 247c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4711 247e 07F12803 		add	r3, r7, #40
 4712 2482 143B     		subs	r3, r3, #20
 4713 2484 0B44     		add	r3, r3, r1
 4714 2486 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4715 2488 07F16803 		add	r3, r7, #104
 4716 248c 143B     		subs	r3, r3, #20
 4717 248e 9954     		strb	r1, [r3, r2]
 656:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4718              		.loc 1 656 0 discriminator 3
 4719 2490 07F59953 		add	r3, r7, #4896
 4720 2494 03F10603 		add	r3, r3, #6
 4721 2498 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4722 249a 0133     		adds	r3, r3, #1
 4723 249c 07F59952 		add	r2, r7, #4896
 4724 24a0 02F10602 		add	r2, r2, #6
 4725 24a4 1370     		strb	r3, [r2]
 4726              	.L195:
 656:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4727              		.loc 1 656 0 is_stmt 0 discriminator 1
 4728 24a6 07F59953 		add	r3, r7, #4896
 4729 24aa 03F10603 		add	r3, r3, #6
 4730 24ae 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4731 24b0 07F59953 		add	r3, r7, #4896
 4732 24b4 03F10303 		add	r3, r3, #3
 4733 24b8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4734 24ba 9A42     		cmp	r2, r3
 4735 24bc BED3     		bcc	.L196
 658:..\src/command_processing.c ****                         }
 659:..\src/command_processing.c ****                         break;
 4736              		.loc 1 659 0 is_stmt 1
 4737 24be 00E0     		b	.L113
 4738              	.L286:
 660:..\src/command_processing.c ****                         
 661:..\src/command_processing.c ****                     default:
 662:..\src/command_processing.c ****                         break;
 4739              		.loc 1 662 0
 4740 24c0 00BF     		nop
 4741              	.L113:
 663:..\src/command_processing.c ****                 }
 664:..\src/command_processing.c **** // END OF MODIFY CUSTOM PARAM  
 665:..\src/command_processing.c ****                         
 666:..\src/command_processing.c **** // DO NOT MODIFY THE FUNCTION UNDER THIS LINE
 667:..\src/command_processing.c ****         }
 668:..\src/command_processing.c ****         
 669:..\src/command_processing.c ****         sprintf(aux_str, (char*)PARAMS_STR[idx]);
 4742              		.loc 1 669 0
 4743 24c2 07F59953 		add	r3, r7, #4896
 4744 24c6 03F10503 		add	r3, r3, #5
 4745 24ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 114


 4746 24cc 9B00     		lsls	r3, r3, #2
 4747 24ce 07F59A52 		add	r2, r7, #4928
 4748 24d2 02F10402 		add	r2, r2, #4
 4749 24d6 1268     		ldr	r2, [r2]
 4750 24d8 1344     		add	r3, r3, r2
 4751 24da 1A68     		ldr	r2, [r3]
 4752 24dc 07F12803 		add	r3, r7, #40
 4753 24e0 083B     		subs	r3, r3, #8
 4754 24e2 1146     		mov	r1, r2
 4755 24e4 1846     		mov	r0, r3
 4756 24e6 FFF7FEFF 		bl	sprintf
 670:..\src/command_processing.c ****         string_lenght = strlen(aux_str);
 4757              		.loc 1 670 0
 4758 24ea 07F12803 		add	r3, r7, #40
 4759 24ee 083B     		subs	r3, r3, #8
 4760 24f0 1846     		mov	r0, r3
 4761 24f2 FFF7FEFF 		bl	strlen
 4762 24f6 0346     		mov	r3, r0
 4763 24f8 07F59952 		add	r2, r7, #4896
 4764 24fc 02F10202 		add	r2, r2, #2
 4765 2500 1370     		strb	r3, [r2]
 671:..\src/command_processing.c ****         
 672:..\src/command_processing.c ****         // Parameters with a menu
 673:..\src/command_processing.c ****         if (TYPES[idx] == TYPE_FLAG){
 4766              		.loc 1 673 0
 4767 2502 07F59953 		add	r3, r7, #4896
 4768 2506 03F10503 		add	r3, r3, #5
 4769 250a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4770 250c 07F10802 		add	r2, r7, #8
 4771 2510 1268     		ldr	r2, [r2]
 4772 2512 1344     		add	r3, r3, r2
 4773 2514 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4774 2516 002B     		cmp	r3, #0
 4775 2518 40F00185 		bne	.L197
 674:..\src/command_processing.c ****             switch(NUM_MENU[idx_menu]){
 4776              		.loc 1 674 0
 4777 251c 07F59953 		add	r3, r7, #4896
 4778 2520 03F10403 		add	r3, r3, #4
 4779 2524 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4780 2526 07F59A52 		add	r2, r7, #4928
 4781 252a 1268     		ldr	r2, [r2]
 4782 252c 1344     		add	r3, r3, r2
 4783 252e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4784 2530 013B     		subs	r3, r3, #1
 4785 2532 0B2B     		cmp	r3, #11
 4786 2534 00F2E584 		bhi	.L198
 4787 2538 01A2     		adr	r2, .L200
 4788 253a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4789 253e 00BF     		.p2align 2
 4790              	.L200:
 4791 2540 71250000 		.word	.L199+1
 4792 2544 1B270000 		.word	.L201+1
 4793 2548 F1270000 		.word	.L202+1
 4794 254c 45280000 		.word	.L203+1
 4795 2550 A9280000 		.word	.L204+1
 4796 2554 05290000 		.word	.L205+1
 4797 2558 212A0000 		.word	.L206+1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 115


 4798 255c A92A0000 		.word	.L207+1
 4799 2560 3D2B0000 		.word	.L208+1
 4800 2564 2F2C0000 		.word	.L209+1
 4801 2568 892D0000 		.word	.L210+1
 4802 256c 7D2E0000 		.word	.L211+1
 4803              		.p2align 1
 4804              	.L199:
 675:..\src/command_processing.c ****                 case 1:     // input mode menu
 676:..\src/command_processing.c ****                     switch(*m_addr) {
 4805              		.loc 1 676 0
 4806 2570 07F59853 		add	r3, r7, #4864
 4807 2574 03F11803 		add	r3, r3, #24
 4808 2578 1B68     		ldr	r3, [r3]
 4809 257a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4810 257c 072B     		cmp	r3, #7
 4811 257e 00F2B784 		bhi	.L287
 4812 2582 01A2     		adr	r2, .L214
 4813 2584 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4814              		.p2align 2
 4815              	.L214:
 4816 2588 A9250000 		.word	.L213+1
 4817 258c CD250000 		.word	.L215+1
 4818 2590 F3250000 		.word	.L216+1
 4819 2594 21260000 		.word	.L217+1
 4820 2598 4D260000 		.word	.L218+1
 4821 259c 77260000 		.word	.L219+1
 4822 25a0 AB260000 		.word	.L220+1
 4823 25a4 D5260000 		.word	.L221+1
 4824              		.p2align 1
 4825              	.L213:
 677:..\src/command_processing.c ****                         case INPUT_MODE_EXTERNAL:
 678:..\src/command_processing.c ****                             strcat(aux_str, " Usb");
 4826              		.loc 1 678 0
 4827 25a8 07F12803 		add	r3, r7, #40
 4828 25ac 083B     		subs	r3, r3, #8
 4829 25ae 1846     		mov	r0, r3
 4830 25b0 FFF7FEFF 		bl	strlen
 4831 25b4 0346     		mov	r3, r0
 4832 25b6 1A46     		mov	r2, r3
 4833 25b8 07F12803 		add	r3, r7, #40
 4834 25bc 083B     		subs	r3, r3, #8
 4835 25be 1344     		add	r3, r3, r2
 4836 25c0 DA4A     		ldr	r2, .L309
 4837 25c2 1068     		ldr	r0, [r2]	@ unaligned
 4838 25c4 1860     		str	r0, [r3]	@ unaligned
 4839 25c6 1279     		ldrb	r2, [r2, #4]
 4840 25c8 1A71     		strb	r2, [r3, #4]
 679:..\src/command_processing.c ****                         break;
 4841              		.loc 1 679 0
 4842 25ca A5E0     		b	.L212
 4843              	.L215:
 680:..\src/command_processing.c ****                         case INPUT_MODE_ENCODER3:
 681:..\src/command_processing.c ****                             strcat(aux_str, " Handle");
 4844              		.loc 1 681 0
 4845 25cc 07F12803 		add	r3, r7, #40
 4846 25d0 083B     		subs	r3, r3, #8
 4847 25d2 1846     		mov	r0, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 116


 4848 25d4 FFF7FEFF 		bl	strlen
 4849 25d8 0346     		mov	r3, r0
 4850 25da 1A46     		mov	r2, r3
 4851 25dc 07F12803 		add	r3, r7, #40
 4852 25e0 083B     		subs	r3, r3, #8
 4853 25e2 1344     		add	r3, r3, r2
 4854 25e4 D249     		ldr	r1, .L309+4
 4855 25e6 1A46     		mov	r2, r3
 4856 25e8 0B46     		mov	r3, r1
 4857 25ea 03CB     		ldmia	r3!, {r0, r1}
 4858 25ec 1060     		str	r0, [r2]	@ unaligned
 4859 25ee 5160     		str	r1, [r2, #4]	@ unaligned
 682:..\src/command_processing.c ****                         break;
 4860              		.loc 1 682 0
 4861 25f0 92E0     		b	.L212
 4862              	.L216:
 683:..\src/command_processing.c ****                         case INPUT_MODE_EMG_PROPORTIONAL:
 684:..\src/command_processing.c ****                             strcat(aux_str, " EMG proportional");
 4863              		.loc 1 684 0
 4864 25f2 07F12803 		add	r3, r7, #40
 4865 25f6 083B     		subs	r3, r3, #8
 4866 25f8 1846     		mov	r0, r3
 4867 25fa FFF7FEFF 		bl	strlen
 4868 25fe 0346     		mov	r3, r0
 4869 2600 1A46     		mov	r2, r3
 4870 2602 07F12803 		add	r3, r7, #40
 4871 2606 083B     		subs	r3, r3, #8
 4872 2608 1344     		add	r3, r3, r2
 4873 260a CA4A     		ldr	r2, .L309+8
 4874 260c 1D46     		mov	r5, r3
 4875 260e 1446     		mov	r4, r2
 4876 2610 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 4877 2612 2860     		str	r0, [r5]	@ unaligned
 4878 2614 6960     		str	r1, [r5, #4]	@ unaligned
 4879 2616 AA60     		str	r2, [r5, #8]	@ unaligned
 4880 2618 EB60     		str	r3, [r5, #12]	@ unaligned
 4881 261a 2388     		ldrh	r3, [r4]	@ unaligned
 4882 261c 2B82     		strh	r3, [r5, #16]	@ unaligned
 685:..\src/command_processing.c ****                         break;
 4883              		.loc 1 685 0
 4884 261e 7BE0     		b	.L212
 4885              	.L217:
 686:..\src/command_processing.c ****                         case INPUT_MODE_EMG_INTEGRAL:
 687:..\src/command_processing.c ****                             strcat(aux_str, " EMG integral");
 4886              		.loc 1 687 0
 4887 2620 07F12803 		add	r3, r7, #40
 4888 2624 083B     		subs	r3, r3, #8
 4889 2626 1846     		mov	r0, r3
 4890 2628 FFF7FEFF 		bl	strlen
 4891 262c 0346     		mov	r3, r0
 4892 262e 1A46     		mov	r2, r3
 4893 2630 07F12803 		add	r3, r7, #40
 4894 2634 083B     		subs	r3, r3, #8
 4895 2636 1344     		add	r3, r3, r2
 4896 2638 BF4A     		ldr	r2, .L309+12
 4897 263a 1C46     		mov	r4, r3
 4898 263c 1346     		mov	r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 117


 4899 263e 07CB     		ldmia	r3!, {r0, r1, r2}
 4900 2640 2060     		str	r0, [r4]	@ unaligned
 4901 2642 6160     		str	r1, [r4, #4]	@ unaligned
 4902 2644 A260     		str	r2, [r4, #8]	@ unaligned
 4903 2646 1B88     		ldrh	r3, [r3]	@ unaligned
 4904 2648 A381     		strh	r3, [r4, #12]	@ unaligned
 688:..\src/command_processing.c ****                         break;
 4905              		.loc 1 688 0
 4906 264a 65E0     		b	.L212
 4907              	.L218:
 689:..\src/command_processing.c ****                         case INPUT_MODE_EMG_FCFS:
 690:..\src/command_processing.c ****                             strcat(aux_str, " EMG FCFS");
 4908              		.loc 1 690 0
 4909 264c 07F12803 		add	r3, r7, #40
 4910 2650 083B     		subs	r3, r3, #8
 4911 2652 1846     		mov	r0, r3
 4912 2654 FFF7FEFF 		bl	strlen
 4913 2658 0346     		mov	r3, r0
 4914 265a 1A46     		mov	r2, r3
 4915 265c 07F12803 		add	r3, r7, #40
 4916 2660 083B     		subs	r3, r3, #8
 4917 2662 1344     		add	r3, r3, r2
 4918 2664 B549     		ldr	r1, .L309+16
 4919 2666 1A46     		mov	r2, r3
 4920 2668 0B46     		mov	r3, r1
 4921 266a 03CB     		ldmia	r3!, {r0, r1}
 4922 266c 1060     		str	r0, [r2]	@ unaligned
 4923 266e 5160     		str	r1, [r2, #4]	@ unaligned
 4924 2670 1B88     		ldrh	r3, [r3]	@ unaligned
 4925 2672 1381     		strh	r3, [r2, #8]	@ unaligned
 691:..\src/command_processing.c ****                         break;
 4926              		.loc 1 691 0
 4927 2674 50E0     		b	.L212
 4928              	.L219:
 692:..\src/command_processing.c ****                         case INPUT_MODE_EMG_FCFS_ADV:
 693:..\src/command_processing.c ****                             strcat(aux_str, " EMG FCFS Advanced");
 4929              		.loc 1 693 0
 4930 2676 07F12803 		add	r3, r7, #40
 4931 267a 083B     		subs	r3, r3, #8
 4932 267c 1846     		mov	r0, r3
 4933 267e FFF7FEFF 		bl	strlen
 4934 2682 0346     		mov	r3, r0
 4935 2684 1A46     		mov	r2, r3
 4936 2686 07F12803 		add	r3, r7, #40
 4937 268a 083B     		subs	r3, r3, #8
 4938 268c 1344     		add	r3, r3, r2
 4939 268e AC4A     		ldr	r2, .L309+20
 4940 2690 1D46     		mov	r5, r3
 4941 2692 1446     		mov	r4, r2
 4942 2694 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 4943 2696 2860     		str	r0, [r5]	@ unaligned
 4944 2698 6960     		str	r1, [r5, #4]	@ unaligned
 4945 269a AA60     		str	r2, [r5, #8]	@ unaligned
 4946 269c EB60     		str	r3, [r5, #12]	@ unaligned
 4947 269e 2388     		ldrh	r3, [r4]	@ unaligned
 4948 26a0 A278     		ldrb	r2, [r4, #2]
 4949 26a2 2B82     		strh	r3, [r5, #16]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 118


 4950 26a4 1346     		mov	r3, r2
 4951 26a6 AB74     		strb	r3, [r5, #18]
 694:..\src/command_processing.c ****                         break;
 4952              		.loc 1 694 0
 4953 26a8 36E0     		b	.L212
 4954              	.L220:
 695:..\src/command_processing.c ****                         case INPUT_MODE_JOYSTICK:
 696:..\src/command_processing.c ****                             strcat(aux_str, " Joystick");
 4955              		.loc 1 696 0
 4956 26aa 07F12803 		add	r3, r7, #40
 4957 26ae 083B     		subs	r3, r3, #8
 4958 26b0 1846     		mov	r0, r3
 4959 26b2 FFF7FEFF 		bl	strlen
 4960 26b6 0346     		mov	r3, r0
 4961 26b8 1A46     		mov	r2, r3
 4962 26ba 07F12803 		add	r3, r7, #40
 4963 26be 083B     		subs	r3, r3, #8
 4964 26c0 1344     		add	r3, r3, r2
 4965 26c2 A049     		ldr	r1, .L309+24
 4966 26c4 1A46     		mov	r2, r3
 4967 26c6 0B46     		mov	r3, r1
 4968 26c8 03CB     		ldmia	r3!, {r0, r1}
 4969 26ca 1060     		str	r0, [r2]	@ unaligned
 4970 26cc 5160     		str	r1, [r2, #4]	@ unaligned
 4971 26ce 1B88     		ldrh	r3, [r3]	@ unaligned
 4972 26d0 1381     		strh	r3, [r2, #8]	@ unaligned
 697:..\src/command_processing.c ****                         break;
 4973              		.loc 1 697 0
 4974 26d2 21E0     		b	.L212
 4975              	.L221:
 698:..\src/command_processing.c ****                         case INPUT_MODE_EMG_PROPORTIONAL_NC:
 699:..\src/command_processing.c ****                             strcat(aux_str, " EMG proportional Normally Closed");
 4976              		.loc 1 699 0
 4977 26d4 07F12803 		add	r3, r7, #40
 4978 26d8 083B     		subs	r3, r3, #8
 4979 26da 1846     		mov	r0, r3
 4980 26dc FFF7FEFF 		bl	strlen
 4981 26e0 0346     		mov	r3, r0
 4982 26e2 1A46     		mov	r2, r3
 4983 26e4 07F12803 		add	r3, r7, #40
 4984 26e8 083B     		subs	r3, r3, #8
 4985 26ea 1344     		add	r3, r3, r2
 4986 26ec 964A     		ldr	r2, .L309+28
 4987 26ee 1446     		mov	r4, r2
 4988 26f0 9E46     		mov	lr, r3
 4989 26f2 04F1200C 		add	ip, r4, #32
 4990              	.L222:
 4991 26f6 7546     		mov	r5, lr
 4992 26f8 2646     		mov	r6, r4
 4993 26fa 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 4994 26fc 2860     		str	r0, [r5]	@ unaligned
 4995 26fe 6960     		str	r1, [r5, #4]	@ unaligned
 4996 2700 AA60     		str	r2, [r5, #8]	@ unaligned
 4997 2702 EB60     		str	r3, [r5, #12]	@ unaligned
 4998 2704 1034     		adds	r4, r4, #16
 4999 2706 0EF1100E 		add	lr, lr, #16
 5000 270a 6445     		cmp	r4, ip
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 119


 5001 270c F3D1     		bne	.L222
 5002 270e 7246     		mov	r2, lr
 5003 2710 2346     		mov	r3, r4
 5004 2712 1B88     		ldrh	r3, [r3]	@ unaligned
 5005 2714 1380     		strh	r3, [r2]	@ unaligned
 700:..\src/command_processing.c ****                         break;
 5006              		.loc 1 700 0
 5007 2716 00BF     		nop
 5008              	.L212:
 701:..\src/command_processing.c ****                     }
 702:..\src/command_processing.c ****                     break;
 5009              		.loc 1 702 0
 5010 2718 EAE3     		b	.L287
 5011              	.L201:
 703:..\src/command_processing.c ****                 case 2:     // control mode menu
 704:..\src/command_processing.c ****                     switch(*m_addr){
 5012              		.loc 1 704 0
 5013 271a 07F59853 		add	r3, r7, #4864
 5014 271e 03F11803 		add	r3, r3, #24
 5015 2722 1B68     		ldr	r3, [r3]
 5016 2724 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5017 2726 032B     		cmp	r3, #3
 5018 2728 00F2E483 		bhi	.L288
 5019 272c 01A2     		adr	r2, .L225
 5020 272e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 5021 2732 00BF     		.p2align 2
 5022              	.L225:
 5023 2734 45270000 		.word	.L224+1
 5024 2738 6F270000 		.word	.L226+1
 5025 273c 93270000 		.word	.L227+1
 5026 2740 BD270000 		.word	.L228+1
 5027              		.p2align 1
 5028              	.L224:
 705:..\src/command_processing.c ****                         case CONTROL_ANGLE:
 706:..\src/command_processing.c ****                             strcat(aux_str, " Position");
 5029              		.loc 1 706 0
 5030 2744 07F12803 		add	r3, r7, #40
 5031 2748 083B     		subs	r3, r3, #8
 5032 274a 1846     		mov	r0, r3
 5033 274c FFF7FEFF 		bl	strlen
 5034 2750 0346     		mov	r3, r0
 5035 2752 1A46     		mov	r2, r3
 5036 2754 07F12803 		add	r3, r7, #40
 5037 2758 083B     		subs	r3, r3, #8
 5038 275a 1344     		add	r3, r3, r2
 5039 275c 7B49     		ldr	r1, .L309+32
 5040 275e 1A46     		mov	r2, r3
 5041 2760 0B46     		mov	r3, r1
 5042 2762 03CB     		ldmia	r3!, {r0, r1}
 5043 2764 1060     		str	r0, [r2]	@ unaligned
 5044 2766 5160     		str	r1, [r2, #4]	@ unaligned
 5045 2768 1B88     		ldrh	r3, [r3]	@ unaligned
 5046 276a 1381     		strh	r3, [r2, #8]	@ unaligned
 707:..\src/command_processing.c ****                         break;
 5047              		.loc 1 707 0
 5048 276c 3FE0     		b	.L223
 5049              	.L226:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 120


 708:..\src/command_processing.c ****                         case CONTROL_PWM:
 709:..\src/command_processing.c ****                             strcat(aux_str, " PWM");
 5050              		.loc 1 709 0
 5051 276e 07F12803 		add	r3, r7, #40
 5052 2772 083B     		subs	r3, r3, #8
 5053 2774 1846     		mov	r0, r3
 5054 2776 FFF7FEFF 		bl	strlen
 5055 277a 0346     		mov	r3, r0
 5056 277c 1A46     		mov	r2, r3
 5057 277e 07F12803 		add	r3, r7, #40
 5058 2782 083B     		subs	r3, r3, #8
 5059 2784 1344     		add	r3, r3, r2
 5060 2786 724A     		ldr	r2, .L309+36
 5061 2788 1068     		ldr	r0, [r2]	@ unaligned
 5062 278a 1860     		str	r0, [r3]	@ unaligned
 5063 278c 1279     		ldrb	r2, [r2, #4]
 5064 278e 1A71     		strb	r2, [r3, #4]
 710:..\src/command_processing.c ****                         break;
 5065              		.loc 1 710 0
 5066 2790 2DE0     		b	.L223
 5067              	.L227:
 711:..\src/command_processing.c ****                         case CONTROL_CURRENT:
 712:..\src/command_processing.c ****                             strcat(aux_str, " Current");
 5068              		.loc 1 712 0
 5069 2792 07F12803 		add	r3, r7, #40
 5070 2796 083B     		subs	r3, r3, #8
 5071 2798 1846     		mov	r0, r3
 5072 279a FFF7FEFF 		bl	strlen
 5073 279e 0346     		mov	r3, r0
 5074 27a0 1A46     		mov	r2, r3
 5075 27a2 07F12803 		add	r3, r7, #40
 5076 27a6 083B     		subs	r3, r3, #8
 5077 27a8 1344     		add	r3, r3, r2
 5078 27aa 6A49     		ldr	r1, .L309+40
 5079 27ac 1A46     		mov	r2, r3
 5080 27ae 0B46     		mov	r3, r1
 5081 27b0 03CB     		ldmia	r3!, {r0, r1}
 5082 27b2 1060     		str	r0, [r2]	@ unaligned
 5083 27b4 5160     		str	r1, [r2, #4]	@ unaligned
 5084 27b6 1B78     		ldrb	r3, [r3]
 5085 27b8 1372     		strb	r3, [r2, #8]
 713:..\src/command_processing.c ****                         break;
 5086              		.loc 1 713 0
 5087 27ba 18E0     		b	.L223
 5088              	.L228:
 714:..\src/command_processing.c ****                         case CURR_AND_POS_CONTROL:
 715:..\src/command_processing.c ****                             strcat(aux_str, " Position and Current");
 5089              		.loc 1 715 0
 5090 27bc 07F12803 		add	r3, r7, #40
 5091 27c0 083B     		subs	r3, r3, #8
 5092 27c2 1846     		mov	r0, r3
 5093 27c4 FFF7FEFF 		bl	strlen
 5094 27c8 0346     		mov	r3, r0
 5095 27ca 1A46     		mov	r2, r3
 5096 27cc 07F12803 		add	r3, r7, #40
 5097 27d0 083B     		subs	r3, r3, #8
 5098 27d2 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 121


 5099 27d4 604A     		ldr	r2, .L309+44
 5100 27d6 1D46     		mov	r5, r3
 5101 27d8 1446     		mov	r4, r2
 5102 27da 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5103 27dc 2860     		str	r0, [r5]	@ unaligned
 5104 27de 6960     		str	r1, [r5, #4]	@ unaligned
 5105 27e0 AA60     		str	r2, [r5, #8]	@ unaligned
 5106 27e2 EB60     		str	r3, [r5, #12]	@ unaligned
 5107 27e4 2068     		ldr	r0, [r4]	@ unaligned
 5108 27e6 2861     		str	r0, [r5, #16]	@ unaligned
 5109 27e8 A388     		ldrh	r3, [r4, #4]	@ unaligned
 5110 27ea AB82     		strh	r3, [r5, #20]	@ unaligned
 716:..\src/command_processing.c ****                         break;
 5111              		.loc 1 716 0
 5112 27ec 00BF     		nop
 5113              	.L223:
 717:..\src/command_processing.c ****                     }
 718:..\src/command_processing.c ****                     break;
 5114              		.loc 1 718 0
 5115 27ee 81E3     		b	.L288
 5116              	.L202:
 719:..\src/command_processing.c ****                 case 3:     // yes/no menu
 720:..\src/command_processing.c ****                     if(*m_addr){
 5117              		.loc 1 720 0
 5118 27f0 07F59853 		add	r3, r7, #4864
 5119 27f4 03F11803 		add	r3, r3, #24
 5120 27f8 1B68     		ldr	r3, [r3]
 5121 27fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5122 27fc 002B     		cmp	r3, #0
 5123 27fe 11D0     		beq	.L229
 721:..\src/command_processing.c ****                         strcat(aux_str, " YES\0");
 5124              		.loc 1 721 0
 5125 2800 07F12803 		add	r3, r7, #40
 5126 2804 083B     		subs	r3, r3, #8
 5127 2806 1846     		mov	r0, r3
 5128 2808 FFF7FEFF 		bl	strlen
 5129 280c 0346     		mov	r3, r0
 5130 280e 1A46     		mov	r2, r3
 5131 2810 07F12803 		add	r3, r7, #40
 5132 2814 083B     		subs	r3, r3, #8
 5133 2816 1344     		add	r3, r3, r2
 5134 2818 504A     		ldr	r2, .L309+48
 5135 281a 1068     		ldr	r0, [r2]	@ unaligned
 5136 281c 1860     		str	r0, [r3]	@ unaligned
 5137 281e 1279     		ldrb	r2, [r2, #4]
 5138 2820 1A71     		strb	r2, [r3, #4]
 722:..\src/command_processing.c ****                     }
 723:..\src/command_processing.c ****                     else {
 724:..\src/command_processing.c ****                         strcat(aux_str, " NO\0");
 725:..\src/command_processing.c ****                     }
 726:..\src/command_processing.c ****                     break;    
 5139              		.loc 1 726 0
 5140 2822 6EE3     		b	.L198
 5141              	.L229:
 724:..\src/command_processing.c ****                     }
 5142              		.loc 1 724 0
 5143 2824 07F12803 		add	r3, r7, #40
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 122


 5144 2828 083B     		subs	r3, r3, #8
 5145 282a 1846     		mov	r0, r3
 5146 282c FFF7FEFF 		bl	strlen
 5147 2830 0346     		mov	r3, r0
 5148 2832 1A46     		mov	r2, r3
 5149 2834 07F12803 		add	r3, r7, #40
 5150 2838 083B     		subs	r3, r3, #8
 5151 283a 1344     		add	r3, r3, r2
 5152 283c 484A     		ldr	r2, .L309+52
 5153 283e 1068     		ldr	r0, [r2]	@ unaligned
 5154 2840 1860     		str	r0, [r3]	@ unaligned
 5155              		.loc 1 726 0
 5156 2842 5EE3     		b	.L198
 5157              	.L203:
 727:..\src/command_processing.c ****                 case 4:     // right/lef menu
 728:..\src/command_processing.c ****                     switch(*m_addr){
 5158              		.loc 1 728 0
 5159 2844 07F59853 		add	r3, r7, #4864
 5160 2848 03F11803 		add	r3, r3, #24
 5161 284c 1B68     		ldr	r3, [r3]
 5162 284e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5163 2850 002B     		cmp	r3, #0
 5164 2852 02D0     		beq	.L232
 5165 2854 012B     		cmp	r3, #1
 5166 2856 14D0     		beq	.L233
 729:..\src/command_processing.c ****                         case RIGHT_HAND:
 730:..\src/command_processing.c ****                             strcat(aux_str, " Right\0");
 731:..\src/command_processing.c ****                         break;
 732:..\src/command_processing.c ****                         case LEFT_HAND:
 733:..\src/command_processing.c ****                             strcat(aux_str, " Left\0");
 734:..\src/command_processing.c ****                         break;
 735:..\src/command_processing.c ****                     }
 736:..\src/command_processing.c ****                     break;
 5167              		.loc 1 736 0
 5168 2858 53E3     		b	.L198
 5169              	.L232:
 730:..\src/command_processing.c ****                         break;
 5170              		.loc 1 730 0
 5171 285a 07F12803 		add	r3, r7, #40
 5172 285e 083B     		subs	r3, r3, #8
 5173 2860 1846     		mov	r0, r3
 5174 2862 FFF7FEFF 		bl	strlen
 5175 2866 0346     		mov	r3, r0
 5176 2868 1A46     		mov	r2, r3
 5177 286a 07F12803 		add	r3, r7, #40
 5178 286e 083B     		subs	r3, r3, #8
 5179 2870 1344     		add	r3, r3, r2
 5180 2872 3C4A     		ldr	r2, .L309+56
 5181 2874 1068     		ldr	r0, [r2]	@ unaligned
 5182 2876 1860     		str	r0, [r3]	@ unaligned
 5183 2878 9188     		ldrh	r1, [r2, #4]	@ unaligned
 5184 287a 9279     		ldrb	r2, [r2, #6]
 5185 287c 9980     		strh	r1, [r3, #4]	@ unaligned
 5186 287e 9A71     		strb	r2, [r3, #6]
 731:..\src/command_processing.c ****                         case LEFT_HAND:
 5187              		.loc 1 731 0
 5188 2880 11E0     		b	.L231
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 123


 5189              	.L233:
 733:..\src/command_processing.c ****                         break;
 5190              		.loc 1 733 0
 5191 2882 07F12803 		add	r3, r7, #40
 5192 2886 083B     		subs	r3, r3, #8
 5193 2888 1846     		mov	r0, r3
 5194 288a FFF7FEFF 		bl	strlen
 5195 288e 0346     		mov	r3, r0
 5196 2890 1A46     		mov	r2, r3
 5197 2892 07F12803 		add	r3, r7, #40
 5198 2896 083B     		subs	r3, r3, #8
 5199 2898 1344     		add	r3, r3, r2
 5200 289a 334A     		ldr	r2, .L309+60
 5201 289c 1068     		ldr	r0, [r2]	@ unaligned
 5202 289e 1860     		str	r0, [r3]	@ unaligned
 5203 28a0 9288     		ldrh	r2, [r2, #4]	@ unaligned
 5204 28a2 9A80     		strh	r2, [r3, #4]	@ unaligned
 734:..\src/command_processing.c ****                     }
 5205              		.loc 1 734 0
 5206 28a4 00BF     		nop
 5207              	.L231:
 5208              		.loc 1 736 0
 5209 28a6 2CE3     		b	.L198
 5210              	.L204:
 737:..\src/command_processing.c ****                 case 5:     // on/off menu
 738:..\src/command_processing.c ****                     switch(*m_addr){
 5211              		.loc 1 738 0
 5212 28a8 07F59853 		add	r3, r7, #4864
 5213 28ac 03F11803 		add	r3, r3, #24
 5214 28b0 1B68     		ldr	r3, [r3]
 5215 28b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5216 28b4 002B     		cmp	r3, #0
 5217 28b6 02D0     		beq	.L235
 5218 28b8 012B     		cmp	r3, #1
 5219 28ba 12D0     		beq	.L236
 739:..\src/command_processing.c ****                         case 0:
 740:..\src/command_processing.c ****                             strcat(aux_str, " OFF\0");
 741:..\src/command_processing.c ****                         break;
 742:..\src/command_processing.c ****                         case 1:
 743:..\src/command_processing.c ****                             strcat(aux_str, " ON\0");
 744:..\src/command_processing.c ****                         break;
 745:..\src/command_processing.c ****                     }
 746:..\src/command_processing.c ****                     break;
 5220              		.loc 1 746 0
 5221 28bc 21E3     		b	.L198
 5222              	.L235:
 740:..\src/command_processing.c ****                         break;
 5223              		.loc 1 740 0
 5224 28be 07F12803 		add	r3, r7, #40
 5225 28c2 083B     		subs	r3, r3, #8
 5226 28c4 1846     		mov	r0, r3
 5227 28c6 FFF7FEFF 		bl	strlen
 5228 28ca 0346     		mov	r3, r0
 5229 28cc 1A46     		mov	r2, r3
 5230 28ce 07F12803 		add	r3, r7, #40
 5231 28d2 083B     		subs	r3, r3, #8
 5232 28d4 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 124


 5233 28d6 254A     		ldr	r2, .L309+64
 5234 28d8 1068     		ldr	r0, [r2]	@ unaligned
 5235 28da 1860     		str	r0, [r3]	@ unaligned
 5236 28dc 1279     		ldrb	r2, [r2, #4]
 5237 28de 1A71     		strb	r2, [r3, #4]
 741:..\src/command_processing.c ****                         case 1:
 5238              		.loc 1 741 0
 5239 28e0 0FE0     		b	.L234
 5240              	.L236:
 743:..\src/command_processing.c ****                         break;
 5241              		.loc 1 743 0
 5242 28e2 07F12803 		add	r3, r7, #40
 5243 28e6 083B     		subs	r3, r3, #8
 5244 28e8 1846     		mov	r0, r3
 5245 28ea FFF7FEFF 		bl	strlen
 5246 28ee 0346     		mov	r3, r0
 5247 28f0 1A46     		mov	r2, r3
 5248 28f2 07F12803 		add	r3, r7, #40
 5249 28f6 083B     		subs	r3, r3, #8
 5250 28f8 1344     		add	r3, r3, r2
 5251 28fa 1D4A     		ldr	r2, .L309+68
 5252 28fc 1068     		ldr	r0, [r2]	@ unaligned
 5253 28fe 1860     		str	r0, [r3]	@ unaligned
 744:..\src/command_processing.c ****                     }
 5254              		.loc 1 744 0
 5255 2900 00BF     		nop
 5256              	.L234:
 5257              		.loc 1 746 0
 5258 2902 FEE2     		b	.L198
 5259              	.L205:
 747:..\src/command_processing.c ****                 case 6:     // expansion port menu
 748:..\src/command_processing.c ****                     switch(*m_addr){
 5260              		.loc 1 748 0
 5261 2904 07F59853 		add	r3, r7, #4864
 5262 2908 03F11803 		add	r3, r3, #24
 5263 290c 1B68     		ldr	r3, [r3]
 5264 290e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5265 2910 032B     		cmp	r3, #3
 5266 2912 00F2F182 		bhi	.L289
 5267 2916 01A2     		adr	r2, .L239
 5268 2918 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 5269              		.p2align 2
 5270              	.L239:
 5271 291c 75290000 		.word	.L238+1
 5272 2920 99290000 		.word	.L240+1
 5273 2924 C5290000 		.word	.L241+1
 5274 2928 F3290000 		.word	.L242+1
 5275              		.p2align 1
 5276              	.L310:
 5277              		.align	2
 5278              	.L309:
 5279 292c 00000000 		.word	.LC88
 5280 2930 08000000 		.word	.LC89
 5281 2934 10000000 		.word	.LC90
 5282 2938 24000000 		.word	.LC91
 5283 293c 34000000 		.word	.LC92
 5284 2940 40000000 		.word	.LC93
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 125


 5285 2944 54000000 		.word	.LC94
 5286 2948 60000000 		.word	.LC95
 5287 294c 84000000 		.word	.LC96
 5288 2950 90000000 		.word	.LC97
 5289 2954 98000000 		.word	.LC98
 5290 2958 A4000000 		.word	.LC99
 5291 295c BC000000 		.word	.LC100
 5292 2960 C4000000 		.word	.LC101
 5293 2964 CC000000 		.word	.LC102
 5294 2968 D4000000 		.word	.LC103
 5295 296c DC000000 		.word	.LC104
 5296 2970 E4000000 		.word	.LC105
 5297              	.L238:
 749:..\src/command_processing.c ****                         case EXP_NONE:
 750:..\src/command_processing.c ****                             strcat(aux_str, " None\0");
 5298              		.loc 1 750 0
 5299 2974 07F12803 		add	r3, r7, #40
 5300 2978 083B     		subs	r3, r3, #8
 5301 297a 1846     		mov	r0, r3
 5302 297c FFF7FEFF 		bl	strlen
 5303 2980 0346     		mov	r3, r0
 5304 2982 1A46     		mov	r2, r3
 5305 2984 07F12803 		add	r3, r7, #40
 5306 2988 083B     		subs	r3, r3, #8
 5307 298a 1344     		add	r3, r3, r2
 5308 298c D54A     		ldr	r2, .L311
 5309 298e 1068     		ldr	r0, [r2]	@ unaligned
 5310 2990 1860     		str	r0, [r3]	@ unaligned
 5311 2992 9288     		ldrh	r2, [r2, #4]	@ unaligned
 5312 2994 9A80     		strh	r2, [r3, #4]	@ unaligned
 751:..\src/command_processing.c ****                             break;
 5313              		.loc 1 751 0
 5314 2996 42E0     		b	.L237
 5315              	.L240:
 752:..\src/command_processing.c ****                         case EXP_SD_RTC:
 753:..\src/command_processing.c ****                             strcat(aux_str, " SD/RTC board\0");
 5316              		.loc 1 753 0
 5317 2998 07F12803 		add	r3, r7, #40
 5318 299c 083B     		subs	r3, r3, #8
 5319 299e 1846     		mov	r0, r3
 5320 29a0 FFF7FEFF 		bl	strlen
 5321 29a4 0346     		mov	r3, r0
 5322 29a6 1A46     		mov	r2, r3
 5323 29a8 07F12803 		add	r3, r7, #40
 5324 29ac 083B     		subs	r3, r3, #8
 5325 29ae 1344     		add	r3, r3, r2
 5326 29b0 CD4A     		ldr	r2, .L311+4
 5327 29b2 1C46     		mov	r4, r3
 5328 29b4 1346     		mov	r3, r2
 5329 29b6 07CB     		ldmia	r3!, {r0, r1, r2}
 5330 29b8 2060     		str	r0, [r4]	@ unaligned
 5331 29ba 6160     		str	r1, [r4, #4]	@ unaligned
 5332 29bc A260     		str	r2, [r4, #8]	@ unaligned
 5333 29be 1B88     		ldrh	r3, [r3]	@ unaligned
 5334 29c0 A381     		strh	r3, [r4, #12]	@ unaligned
 754:..\src/command_processing.c ****                             break;
 5335              		.loc 1 754 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 126


 5336 29c2 2CE0     		b	.L237
 5337              	.L241:
 755:..\src/command_processing.c ****                         case EXP_WIFI:
 756:..\src/command_processing.c ****         					strcat(aux_str, " WiFi board [N/A]\0");
 5338              		.loc 1 756 0
 5339 29c4 07F12803 		add	r3, r7, #40
 5340 29c8 083B     		subs	r3, r3, #8
 5341 29ca 1846     		mov	r0, r3
 5342 29cc FFF7FEFF 		bl	strlen
 5343 29d0 0346     		mov	r3, r0
 5344 29d2 1A46     		mov	r2, r3
 5345 29d4 07F12803 		add	r3, r7, #40
 5346 29d8 083B     		subs	r3, r3, #8
 5347 29da 1344     		add	r3, r3, r2
 5348 29dc C34A     		ldr	r2, .L311+8
 5349 29de 1D46     		mov	r5, r3
 5350 29e0 1446     		mov	r4, r2
 5351 29e2 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5352 29e4 2860     		str	r0, [r5]	@ unaligned
 5353 29e6 6960     		str	r1, [r5, #4]	@ unaligned
 5354 29e8 AA60     		str	r2, [r5, #8]	@ unaligned
 5355 29ea EB60     		str	r3, [r5, #12]	@ unaligned
 5356 29ec 2388     		ldrh	r3, [r4]	@ unaligned
 5357 29ee 2B82     		strh	r3, [r5, #16]	@ unaligned
 757:..\src/command_processing.c ****         					break;
 5358              		.loc 1 757 0
 5359 29f0 15E0     		b	.L237
 5360              	.L242:
 758:..\src/command_processing.c ****                         case EXP_OTHER:
 759:..\src/command_processing.c ****         					strcat(aux_str, " Other [N/A]\0");
 5361              		.loc 1 759 0
 5362 29f2 07F12803 		add	r3, r7, #40
 5363 29f6 083B     		subs	r3, r3, #8
 5364 29f8 1846     		mov	r0, r3
 5365 29fa FFF7FEFF 		bl	strlen
 5366 29fe 0346     		mov	r3, r0
 5367 2a00 1A46     		mov	r2, r3
 5368 2a02 07F12803 		add	r3, r7, #40
 5369 2a06 083B     		subs	r3, r3, #8
 5370 2a08 1344     		add	r3, r3, r2
 5371 2a0a B94A     		ldr	r2, .L311+12
 5372 2a0c 1C46     		mov	r4, r3
 5373 2a0e 1346     		mov	r3, r2
 5374 2a10 07CB     		ldmia	r3!, {r0, r1, r2}
 5375 2a12 2060     		str	r0, [r4]	@ unaligned
 5376 2a14 6160     		str	r1, [r4, #4]	@ unaligned
 5377 2a16 A260     		str	r2, [r4, #8]	@ unaligned
 5378 2a18 1B78     		ldrb	r3, [r3]
 5379 2a1a 2373     		strb	r3, [r4, #12]
 760:..\src/command_processing.c ****         					break;
 5380              		.loc 1 760 0
 5381 2a1c 00BF     		nop
 5382              	.L237:
 761:..\src/command_processing.c ****                     }
 762:..\src/command_processing.c ****                     break;
 5383              		.loc 1 762 0
 5384 2a1e 6BE2     		b	.L289
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 127


 5385              	.L206:
 763:..\src/command_processing.c ****                 case 7:     // spi read delay menu
 764:..\src/command_processing.c ****                     switch(*m_addr){
 5386              		.loc 1 764 0
 5387 2a20 07F59853 		add	r3, r7, #4864
 5388 2a24 03F11803 		add	r3, r3, #24
 5389 2a28 1B68     		ldr	r3, [r3]
 5390 2a2a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5391 2a2c 012B     		cmp	r3, #1
 5392 2a2e 16D0     		beq	.L244
 5393 2a30 022B     		cmp	r3, #2
 5394 2a32 26D0     		beq	.L245
 5395 2a34 002B     		cmp	r3, #0
 5396 2a36 00D0     		beq	.L246
 765:..\src/command_processing.c ****                         case 0: 
 766:..\src/command_processing.c ****                             strcat(aux_str, " None\0"); 
 767:..\src/command_processing.c ****                             break;
 768:..\src/command_processing.c ****                         case 1: 
 769:..\src/command_processing.c ****                             strcat(aux_str, " Low\0"); 
 770:..\src/command_processing.c ****                             break;
 771:..\src/command_processing.c ****                         case 2: 
 772:..\src/command_processing.c ****                             strcat(aux_str, " High\0");
 773:..\src/command_processing.c ****                             break;
 774:..\src/command_processing.c ****                         default:
 775:..\src/command_processing.c ****                             break;
 5397              		.loc 1 775 0
 5398 2a38 35E0     		b	.L247
 5399              	.L246:
 766:..\src/command_processing.c ****                             break;
 5400              		.loc 1 766 0
 5401 2a3a 07F12803 		add	r3, r7, #40
 5402 2a3e 083B     		subs	r3, r3, #8
 5403 2a40 1846     		mov	r0, r3
 5404 2a42 FFF7FEFF 		bl	strlen
 5405 2a46 0346     		mov	r3, r0
 5406 2a48 1A46     		mov	r2, r3
 5407 2a4a 07F12803 		add	r3, r7, #40
 5408 2a4e 083B     		subs	r3, r3, #8
 5409 2a50 1344     		add	r3, r3, r2
 5410 2a52 A44A     		ldr	r2, .L311
 5411 2a54 1068     		ldr	r0, [r2]	@ unaligned
 5412 2a56 1860     		str	r0, [r3]	@ unaligned
 5413 2a58 9288     		ldrh	r2, [r2, #4]	@ unaligned
 5414 2a5a 9A80     		strh	r2, [r3, #4]	@ unaligned
 767:..\src/command_processing.c ****                         case 1: 
 5415              		.loc 1 767 0
 5416 2a5c 23E0     		b	.L247
 5417              	.L244:
 769:..\src/command_processing.c ****                             break;
 5418              		.loc 1 769 0
 5419 2a5e 07F12803 		add	r3, r7, #40
 5420 2a62 083B     		subs	r3, r3, #8
 5421 2a64 1846     		mov	r0, r3
 5422 2a66 FFF7FEFF 		bl	strlen
 5423 2a6a 0346     		mov	r3, r0
 5424 2a6c 1A46     		mov	r2, r3
 5425 2a6e 07F12803 		add	r3, r7, #40
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 128


 5426 2a72 083B     		subs	r3, r3, #8
 5427 2a74 1344     		add	r3, r3, r2
 5428 2a76 9F4A     		ldr	r2, .L311+16
 5429 2a78 1068     		ldr	r0, [r2]	@ unaligned
 5430 2a7a 1860     		str	r0, [r3]	@ unaligned
 5431 2a7c 1279     		ldrb	r2, [r2, #4]
 5432 2a7e 1A71     		strb	r2, [r3, #4]
 770:..\src/command_processing.c ****                         case 2: 
 5433              		.loc 1 770 0
 5434 2a80 11E0     		b	.L247
 5435              	.L245:
 772:..\src/command_processing.c ****                             break;
 5436              		.loc 1 772 0
 5437 2a82 07F12803 		add	r3, r7, #40
 5438 2a86 083B     		subs	r3, r3, #8
 5439 2a88 1846     		mov	r0, r3
 5440 2a8a FFF7FEFF 		bl	strlen
 5441 2a8e 0346     		mov	r3, r0
 5442 2a90 1A46     		mov	r2, r3
 5443 2a92 07F12803 		add	r3, r7, #40
 5444 2a96 083B     		subs	r3, r3, #8
 5445 2a98 1344     		add	r3, r3, r2
 5446 2a9a 974A     		ldr	r2, .L311+20
 5447 2a9c 1068     		ldr	r0, [r2]	@ unaligned
 5448 2a9e 1860     		str	r0, [r3]	@ unaligned
 5449 2aa0 9288     		ldrh	r2, [r2, #4]	@ unaligned
 5450 2aa2 9A80     		strh	r2, [r3, #4]	@ unaligned
 773:..\src/command_processing.c ****                         default:
 5451              		.loc 1 773 0
 5452 2aa4 00BF     		nop
 5453              	.L247:
 776:..\src/command_processing.c ****                     } 
 777:..\src/command_processing.c ****                     break;
 5454              		.loc 1 777 0 discriminator 12
 5455 2aa6 2CE2     		b	.L198
 5456              	.L207:
 778:..\src/command_processing.c ****                 case 8:     // user menu          
 779:..\src/command_processing.c ****                     switch(*m_addr){
 5457              		.loc 1 779 0
 5458 2aa8 07F59853 		add	r3, r7, #4864
 5459 2aac 03F11803 		add	r3, r3, #24
 5460 2ab0 1B68     		ldr	r3, [r3]
 5461 2ab2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5462 2ab4 012B     		cmp	r3, #1
 5463 2ab6 1AD0     		beq	.L249
 5464 2ab8 022B     		cmp	r3, #2
 5465 2aba 2CD0     		beq	.L250
 5466 2abc 002B     		cmp	r3, #0
 5467 2abe 00D0     		beq	.L251
 780:..\src/command_processing.c ****                         case GENERIC_USER:
 781:..\src/command_processing.c ****                             strcat(aux_str, " GENERIC USER\0");
 782:..\src/command_processing.c ****                         break;
 783:..\src/command_processing.c ****                         case MARIA:
 784:..\src/command_processing.c ****                             strcat(aux_str, " MARIA\0");
 785:..\src/command_processing.c ****                         break;
 786:..\src/command_processing.c ****                         case R01:
 787:..\src/command_processing.c ****                             strcat(aux_str, " R01\0");
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 129


 788:..\src/command_processing.c ****                         break;
 789:..\src/command_processing.c ****                     }   
 790:..\src/command_processing.c ****                     break;                    
 5468              		.loc 1 790 0
 5469 2ac0 1FE2     		b	.L198
 5470              	.L251:
 781:..\src/command_processing.c ****                         break;
 5471              		.loc 1 781 0
 5472 2ac2 07F12803 		add	r3, r7, #40
 5473 2ac6 083B     		subs	r3, r3, #8
 5474 2ac8 1846     		mov	r0, r3
 5475 2aca FFF7FEFF 		bl	strlen
 5476 2ace 0346     		mov	r3, r0
 5477 2ad0 1A46     		mov	r2, r3
 5478 2ad2 07F12803 		add	r3, r7, #40
 5479 2ad6 083B     		subs	r3, r3, #8
 5480 2ad8 1344     		add	r3, r3, r2
 5481 2ada 884A     		ldr	r2, .L311+24
 5482 2adc 1C46     		mov	r4, r3
 5483 2ade 1346     		mov	r3, r2
 5484 2ae0 07CB     		ldmia	r3!, {r0, r1, r2}
 5485 2ae2 2060     		str	r0, [r4]	@ unaligned
 5486 2ae4 6160     		str	r1, [r4, #4]	@ unaligned
 5487 2ae6 A260     		str	r2, [r4, #8]	@ unaligned
 5488 2ae8 1B88     		ldrh	r3, [r3]	@ unaligned
 5489 2aea A381     		strh	r3, [r4, #12]	@ unaligned
 782:..\src/command_processing.c ****                         case MARIA:
 5490              		.loc 1 782 0
 5491 2aec 25E0     		b	.L248
 5492              	.L249:
 784:..\src/command_processing.c ****                         break;
 5493              		.loc 1 784 0
 5494 2aee 07F12803 		add	r3, r7, #40
 5495 2af2 083B     		subs	r3, r3, #8
 5496 2af4 1846     		mov	r0, r3
 5497 2af6 FFF7FEFF 		bl	strlen
 5498 2afa 0346     		mov	r3, r0
 5499 2afc 1A46     		mov	r2, r3
 5500 2afe 07F12803 		add	r3, r7, #40
 5501 2b02 083B     		subs	r3, r3, #8
 5502 2b04 1344     		add	r3, r3, r2
 5503 2b06 7E4A     		ldr	r2, .L311+28
 5504 2b08 1068     		ldr	r0, [r2]	@ unaligned
 5505 2b0a 1860     		str	r0, [r3]	@ unaligned
 5506 2b0c 9188     		ldrh	r1, [r2, #4]	@ unaligned
 5507 2b0e 9279     		ldrb	r2, [r2, #6]
 5508 2b10 9980     		strh	r1, [r3, #4]	@ unaligned
 5509 2b12 9A71     		strb	r2, [r3, #6]
 785:..\src/command_processing.c ****                         case R01:
 5510              		.loc 1 785 0
 5511 2b14 11E0     		b	.L248
 5512              	.L250:
 787:..\src/command_processing.c ****                         break;
 5513              		.loc 1 787 0
 5514 2b16 07F12803 		add	r3, r7, #40
 5515 2b1a 083B     		subs	r3, r3, #8
 5516 2b1c 1846     		mov	r0, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 130


 5517 2b1e FFF7FEFF 		bl	strlen
 5518 2b22 0346     		mov	r3, r0
 5519 2b24 1A46     		mov	r2, r3
 5520 2b26 07F12803 		add	r3, r7, #40
 5521 2b2a 083B     		subs	r3, r3, #8
 5522 2b2c 1344     		add	r3, r3, r2
 5523 2b2e 754A     		ldr	r2, .L311+32
 5524 2b30 1068     		ldr	r0, [r2]	@ unaligned
 5525 2b32 1860     		str	r0, [r3]	@ unaligned
 5526 2b34 1279     		ldrb	r2, [r2, #4]
 5527 2b36 1A71     		strb	r2, [r3, #4]
 788:..\src/command_processing.c ****                     }   
 5528              		.loc 1 788 0
 5529 2b38 00BF     		nop
 5530              	.L248:
 5531              		.loc 1 790 0
 5532 2b3a E2E1     		b	.L198
 5533              	.L208:
 791:..\src/command_processing.c ****                 case 9:     // driver type menu
 792:..\src/command_processing.c ****                     switch(*m_addr){
 5534              		.loc 1 792 0
 5535 2b3c 07F59853 		add	r3, r7, #4864
 5536 2b40 03F11803 		add	r3, r3, #24
 5537 2b44 1B68     		ldr	r3, [r3]
 5538 2b46 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5539 2b48 042B     		cmp	r3, #4
 5540 2b4a 00F2D781 		bhi	.L290
 5541 2b4e 01A2     		adr	r2, .L254
 5542 2b50 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 5543              		.p2align 2
 5544              	.L254:
 5545 2b54 692B0000 		.word	.L253+1
 5546 2b58 912B0000 		.word	.L255+1
 5547 2b5c B72B0000 		.word	.L256+1
 5548 2b60 DD2B0000 		.word	.L257+1
 5549 2b64 052C0000 		.word	.L258+1
 5550              		.p2align 1
 5551              	.L253:
 793:..\src/command_processing.c ****                         case FREQ_30HZ:
 794:..\src/command_processing.c ****                             strcat(aux_str, " 30 Hz\0");
 5552              		.loc 1 794 0
 5553 2b68 07F12803 		add	r3, r7, #40
 5554 2b6c 083B     		subs	r3, r3, #8
 5555 2b6e 1846     		mov	r0, r3
 5556 2b70 FFF7FEFF 		bl	strlen
 5557 2b74 0346     		mov	r3, r0
 5558 2b76 1A46     		mov	r2, r3
 5559 2b78 07F12803 		add	r3, r7, #40
 5560 2b7c 083B     		subs	r3, r3, #8
 5561 2b7e 1344     		add	r3, r3, r2
 5562 2b80 614A     		ldr	r2, .L311+36
 5563 2b82 1068     		ldr	r0, [r2]	@ unaligned
 5564 2b84 1860     		str	r0, [r3]	@ unaligned
 5565 2b86 9188     		ldrh	r1, [r2, #4]	@ unaligned
 5566 2b88 9279     		ldrb	r2, [r2, #6]
 5567 2b8a 9980     		strh	r1, [r3, #4]	@ unaligned
 5568 2b8c 9A71     		strb	r2, [r3, #6]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 131


 795:..\src/command_processing.c ****                             break;
 5569              		.loc 1 795 0
 5570 2b8e 4DE0     		b	.L252
 5571              	.L255:
 796:..\src/command_processing.c ****                         case FREQ_100HZ:
 797:..\src/command_processing.c ****                             strcat(aux_str, " 100 Hz\0");
 5572              		.loc 1 797 0
 5573 2b90 07F12803 		add	r3, r7, #40
 5574 2b94 083B     		subs	r3, r3, #8
 5575 2b96 1846     		mov	r0, r3
 5576 2b98 FFF7FEFF 		bl	strlen
 5577 2b9c 0346     		mov	r3, r0
 5578 2b9e 1A46     		mov	r2, r3
 5579 2ba0 07F12803 		add	r3, r7, #40
 5580 2ba4 083B     		subs	r3, r3, #8
 5581 2ba6 1344     		add	r3, r3, r2
 5582 2ba8 5849     		ldr	r1, .L311+40
 5583 2baa 1A46     		mov	r2, r3
 5584 2bac 0B46     		mov	r3, r1
 5585 2bae 03CB     		ldmia	r3!, {r0, r1}
 5586 2bb0 1060     		str	r0, [r2]	@ unaligned
 5587 2bb2 5160     		str	r1, [r2, #4]	@ unaligned
 798:..\src/command_processing.c ****                             break;
 5588              		.loc 1 798 0
 5589 2bb4 3AE0     		b	.L252
 5590              	.L256:
 799:..\src/command_processing.c ****                         case FREQ_300HZ:
 800:..\src/command_processing.c ****                             strcat(aux_str, " 300 Hz\0");
 5591              		.loc 1 800 0
 5592 2bb6 07F12803 		add	r3, r7, #40
 5593 2bba 083B     		subs	r3, r3, #8
 5594 2bbc 1846     		mov	r0, r3
 5595 2bbe FFF7FEFF 		bl	strlen
 5596 2bc2 0346     		mov	r3, r0
 5597 2bc4 1A46     		mov	r2, r3
 5598 2bc6 07F12803 		add	r3, r7, #40
 5599 2bca 083B     		subs	r3, r3, #8
 5600 2bcc 1344     		add	r3, r3, r2
 5601 2bce 5049     		ldr	r1, .L311+44
 5602 2bd0 1A46     		mov	r2, r3
 5603 2bd2 0B46     		mov	r3, r1
 5604 2bd4 03CB     		ldmia	r3!, {r0, r1}
 5605 2bd6 1060     		str	r0, [r2]	@ unaligned
 5606 2bd8 5160     		str	r1, [r2, #4]	@ unaligned
 801:..\src/command_processing.c ****                             break;
 5607              		.loc 1 801 0
 5608 2bda 27E0     		b	.L252
 5609              	.L257:
 802:..\src/command_processing.c ****                         case FREQ_1000HZ:
 803:..\src/command_processing.c ****                             strcat(aux_str, " 1 KHz\0");
 5610              		.loc 1 803 0
 5611 2bdc 07F12803 		add	r3, r7, #40
 5612 2be0 083B     		subs	r3, r3, #8
 5613 2be2 1846     		mov	r0, r3
 5614 2be4 FFF7FEFF 		bl	strlen
 5615 2be8 0346     		mov	r3, r0
 5616 2bea 1A46     		mov	r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 132


 5617 2bec 07F12803 		add	r3, r7, #40
 5618 2bf0 083B     		subs	r3, r3, #8
 5619 2bf2 1344     		add	r3, r3, r2
 5620 2bf4 474A     		ldr	r2, .L311+48
 5621 2bf6 1068     		ldr	r0, [r2]	@ unaligned
 5622 2bf8 1860     		str	r0, [r3]	@ unaligned
 5623 2bfa 9188     		ldrh	r1, [r2, #4]	@ unaligned
 5624 2bfc 9279     		ldrb	r2, [r2, #6]
 5625 2bfe 9980     		strh	r1, [r3, #4]	@ unaligned
 5626 2c00 9A71     		strb	r2, [r3, #6]
 804:..\src/command_processing.c ****                             break;
 5627              		.loc 1 804 0
 5628 2c02 13E0     		b	.L252
 5629              	.L258:
 805:..\src/command_processing.c ****                         case FREQ_3000HZ:
 806:..\src/command_processing.c ****                             strcat(aux_str, " 3 KHz\0");
 5630              		.loc 1 806 0
 5631 2c04 07F12803 		add	r3, r7, #40
 5632 2c08 083B     		subs	r3, r3, #8
 5633 2c0a 1846     		mov	r0, r3
 5634 2c0c FFF7FEFF 		bl	strlen
 5635 2c10 0346     		mov	r3, r0
 5636 2c12 1A46     		mov	r2, r3
 5637 2c14 07F12803 		add	r3, r7, #40
 5638 2c18 083B     		subs	r3, r3, #8
 5639 2c1a 1344     		add	r3, r3, r2
 5640 2c1c 3E4A     		ldr	r2, .L311+52
 5641 2c1e 1068     		ldr	r0, [r2]	@ unaligned
 5642 2c20 1860     		str	r0, [r3]	@ unaligned
 5643 2c22 9188     		ldrh	r1, [r2, #4]	@ unaligned
 5644 2c24 9279     		ldrb	r2, [r2, #6]
 5645 2c26 9980     		strh	r1, [r3, #4]	@ unaligned
 5646 2c28 9A71     		strb	r2, [r3, #6]
 807:..\src/command_processing.c ****                             break;
 5647              		.loc 1 807 0
 5648 2c2a 00BF     		nop
 5649              	.L252:
 808:..\src/command_processing.c ****                     }
 809:..\src/command_processing.c ****                     break;
 5650              		.loc 1 809 0
 5651 2c2c 66E1     		b	.L290
 5652              	.L209:
 810:..\src/command_processing.c ****                 case 10:    // device type menu
 811:..\src/command_processing.c ****                     switch(*m_addr){
 5653              		.loc 1 811 0
 5654 2c2e 07F59853 		add	r3, r7, #4864
 5655 2c32 03F11803 		add	r3, r3, #24
 5656 2c36 1B68     		ldr	r3, [r3]
 5657 2c38 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5658 2c3a 042B     		cmp	r3, #4
 5659 2c3c 00F26081 		bhi	.L291
 5660 2c40 01A2     		adr	r2, .L261
 5661 2c42 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 5662 2c46 00BF     		.p2align 2
 5663              	.L261:
 5664 2c48 5D2C0000 		.word	.L260+1
 5665 2c4c 892C0000 		.word	.L262+1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 133


 5666 2c50 B72C0000 		.word	.L263+1
 5667 2c54 292D0000 		.word	.L264+1
 5668 2c58 532D0000 		.word	.L265+1
 5669              		.p2align 1
 5670              	.L260:
 812:..\src/command_processing.c ****                         case 0:
 813:..\src/command_processing.c ****                             strcat(aux_str, " SOFTHAND PRO\0");
 5671              		.loc 1 813 0
 5672 2c5c 07F12803 		add	r3, r7, #40
 5673 2c60 083B     		subs	r3, r3, #8
 5674 2c62 1846     		mov	r0, r3
 5675 2c64 FFF7FEFF 		bl	strlen
 5676 2c68 0346     		mov	r3, r0
 5677 2c6a 1A46     		mov	r2, r3
 5678 2c6c 07F12803 		add	r3, r7, #40
 5679 2c70 083B     		subs	r3, r3, #8
 5680 2c72 1344     		add	r3, r3, r2
 5681 2c74 294A     		ldr	r2, .L311+56
 5682 2c76 1C46     		mov	r4, r3
 5683 2c78 1346     		mov	r3, r2
 5684 2c7a 07CB     		ldmia	r3!, {r0, r1, r2}
 5685 2c7c 2060     		str	r0, [r4]	@ unaligned
 5686 2c7e 6160     		str	r1, [r4, #4]	@ unaligned
 5687 2c80 A260     		str	r2, [r4, #8]	@ unaligned
 5688 2c82 1B88     		ldrh	r3, [r3]	@ unaligned
 5689 2c84 A381     		strh	r3, [r4, #12]	@ unaligned
 814:..\src/command_processing.c ****                         break;
 5690              		.loc 1 814 0
 5691 2c86 7EE0     		b	.L259
 5692              	.L262:
 815:..\src/command_processing.c ****                         case 1:
 816:..\src/command_processing.c ****                             strcat(aux_str, " GENERIC 2 MOTORS\0");
 5693              		.loc 1 816 0
 5694 2c88 07F12803 		add	r3, r7, #40
 5695 2c8c 083B     		subs	r3, r3, #8
 5696 2c8e 1846     		mov	r0, r3
 5697 2c90 FFF7FEFF 		bl	strlen
 5698 2c94 0346     		mov	r3, r0
 5699 2c96 1A46     		mov	r2, r3
 5700 2c98 07F12803 		add	r3, r7, #40
 5701 2c9c 083B     		subs	r3, r3, #8
 5702 2c9e 1344     		add	r3, r3, r2
 5703 2ca0 1F4A     		ldr	r2, .L311+60
 5704 2ca2 1D46     		mov	r5, r3
 5705 2ca4 1446     		mov	r4, r2
 5706 2ca6 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5707 2ca8 2860     		str	r0, [r5]	@ unaligned
 5708 2caa 6960     		str	r1, [r5, #4]	@ unaligned
 5709 2cac AA60     		str	r2, [r5, #8]	@ unaligned
 5710 2cae EB60     		str	r3, [r5, #12]	@ unaligned
 5711 2cb0 2388     		ldrh	r3, [r4]	@ unaligned
 5712 2cb2 2B82     		strh	r3, [r5, #16]	@ unaligned
 817:..\src/command_processing.c ****                         break;
 5713              		.loc 1 817 0
 5714 2cb4 67E0     		b	.L259
 5715              	.L263:
 818:..\src/command_processing.c ****                         case 2:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 134


 819:..\src/command_processing.c ****                             strcat(aux_str, " AIR CHAMBERS\0");
 5716              		.loc 1 819 0
 5717 2cb6 07F12803 		add	r3, r7, #40
 5718 2cba 083B     		subs	r3, r3, #8
 5719 2cbc 1846     		mov	r0, r3
 5720 2cbe FFF7FEFF 		bl	strlen
 5721 2cc2 0346     		mov	r3, r0
 5722 2cc4 1A46     		mov	r2, r3
 5723 2cc6 07F12803 		add	r3, r7, #40
 5724 2cca 083B     		subs	r3, r3, #8
 5725 2ccc 1344     		add	r3, r3, r2
 5726 2cce 154A     		ldr	r2, .L311+64
 5727 2cd0 1C46     		mov	r4, r3
 5728 2cd2 1346     		mov	r3, r2
 5729 2cd4 07CB     		ldmia	r3!, {r0, r1, r2}
 5730 2cd6 2060     		str	r0, [r4]	@ unaligned
 5731 2cd8 6160     		str	r1, [r4, #4]	@ unaligned
 5732 2cda A260     		str	r2, [r4, #8]	@ unaligned
 5733 2cdc 1B88     		ldrh	r3, [r3]	@ unaligned
 5734 2cde A381     		strh	r3, [r4, #12]	@ unaligned
 820:..\src/command_processing.c ****                         break;
 5735              		.loc 1 820 0
 5736 2ce0 51E0     		b	.L259
 5737              	.L312:
 5738 2ce2 00BF     		.align	2
 5739              	.L311:
 5740 2ce4 EC000000 		.word	.LC106
 5741 2ce8 F4000000 		.word	.LC107
 5742 2cec 04010000 		.word	.LC108
 5743 2cf0 18010000 		.word	.LC109
 5744 2cf4 28010000 		.word	.LC110
 5745 2cf8 30010000 		.word	.LC111
 5746 2cfc 38010000 		.word	.LC112
 5747 2d00 48010000 		.word	.LC113
 5748 2d04 50010000 		.word	.LC114
 5749 2d08 58010000 		.word	.LC115
 5750 2d0c 60010000 		.word	.LC116
 5751 2d10 6C010000 		.word	.LC117
 5752 2d14 78010000 		.word	.LC118
 5753 2d18 80010000 		.word	.LC119
 5754 2d1c 88010000 		.word	.LC120
 5755 2d20 98010000 		.word	.LC121
 5756 2d24 AC010000 		.word	.LC122
 5757              	.L264:
 821:..\src/command_processing.c ****                         case 3:
 822:..\src/command_processing.c ****                             strcat(aux_str, " OTTOBOCK WRIST\0");
 5758              		.loc 1 822 0
 5759 2d28 07F12803 		add	r3, r7, #40
 5760 2d2c 083B     		subs	r3, r3, #8
 5761 2d2e 1846     		mov	r0, r3
 5762 2d30 FFF7FEFF 		bl	strlen
 5763 2d34 0346     		mov	r3, r0
 5764 2d36 1A46     		mov	r2, r3
 5765 2d38 07F12803 		add	r3, r7, #40
 5766 2d3c 083B     		subs	r3, r3, #8
 5767 2d3e 1344     		add	r3, r3, r2
 5768 2d40 7C4A     		ldr	r2, .L313
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 135


 5769 2d42 1C46     		mov	r4, r3
 5770 2d44 1546     		mov	r5, r2
 5771 2d46 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 5772 2d48 2060     		str	r0, [r4]	@ unaligned
 5773 2d4a 6160     		str	r1, [r4, #4]	@ unaligned
 5774 2d4c A260     		str	r2, [r4, #8]	@ unaligned
 5775 2d4e E360     		str	r3, [r4, #12]	@ unaligned
 823:..\src/command_processing.c ****                         break;
 5776              		.loc 1 823 0
 5777 2d50 19E0     		b	.L259
 5778              	.L265:
 824:..\src/command_processing.c ****                         case 4:
 825:..\src/command_processing.c ****                             strcat(aux_str, " SOFTHAND 2 MOTORS\0");
 5779              		.loc 1 825 0
 5780 2d52 07F12803 		add	r3, r7, #40
 5781 2d56 083B     		subs	r3, r3, #8
 5782 2d58 1846     		mov	r0, r3
 5783 2d5a FFF7FEFF 		bl	strlen
 5784 2d5e 0346     		mov	r3, r0
 5785 2d60 1A46     		mov	r2, r3
 5786 2d62 07F12803 		add	r3, r7, #40
 5787 2d66 083B     		subs	r3, r3, #8
 5788 2d68 1344     		add	r3, r3, r2
 5789 2d6a 734A     		ldr	r2, .L313+4
 5790 2d6c 1D46     		mov	r5, r3
 5791 2d6e 1446     		mov	r4, r2
 5792 2d70 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5793 2d72 2860     		str	r0, [r5]	@ unaligned
 5794 2d74 6960     		str	r1, [r5, #4]	@ unaligned
 5795 2d76 AA60     		str	r2, [r5, #8]	@ unaligned
 5796 2d78 EB60     		str	r3, [r5, #12]	@ unaligned
 5797 2d7a 2388     		ldrh	r3, [r4]	@ unaligned
 5798 2d7c A278     		ldrb	r2, [r4, #2]
 5799 2d7e 2B82     		strh	r3, [r5, #16]	@ unaligned
 5800 2d80 1346     		mov	r3, r2
 5801 2d82 AB74     		strb	r3, [r5, #18]
 826:..\src/command_processing.c ****                         break;
 5802              		.loc 1 826 0
 5803 2d84 00BF     		nop
 5804              	.L259:
 827:..\src/command_processing.c ****                     }
 828:..\src/command_processing.c ****                     break;
 5805              		.loc 1 828 0
 5806 2d86 BBE0     		b	.L291
 5807              	.L210:
 829:..\src/command_processing.c ****                 case 11:    // fsm activation mode menu
 830:..\src/command_processing.c ****                     switch(*m_addr){
 5808              		.loc 1 830 0
 5809 2d88 07F59853 		add	r3, r7, #4864
 5810 2d8c 03F11803 		add	r3, r3, #24
 5811 2d90 1B68     		ldr	r3, [r3]
 5812 2d92 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5813 2d94 002B     		cmp	r3, #0
 5814 2d96 02D0     		beq	.L267
 5815 2d98 012B     		cmp	r3, #1
 5816 2d9a 37D0     		beq	.L268
 831:..\src/command_processing.c ****                         case 0:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 136


 832:..\src/command_processing.c ****                             if (c_mem.dev.dev_type == SOFTHAND_2_MOTORS){
 833:..\src/command_processing.c ****                                 strcat(aux_str, " Fast:syn2, Slow:syn1\0");
 834:..\src/command_processing.c ****                             }
 835:..\src/command_processing.c ****                             else {
 836:..\src/command_processing.c ****                                 strcat(aux_str, " Fast:wrist,Slow:hand\0");
 837:..\src/command_processing.c ****                             }                            
 838:..\src/command_processing.c ****                         break;
 839:..\src/command_processing.c ****                         case 1:
 840:..\src/command_processing.c ****                             if (c_mem.dev.dev_type == SOFTHAND_2_MOTORS){
 841:..\src/command_processing.c ****                                 strcat(aux_str, " Slow:syn2, Fast:syn1\0");
 842:..\src/command_processing.c ****                             }
 843:..\src/command_processing.c ****                             else {
 844:..\src/command_processing.c ****                                 strcat(aux_str, " Slow:wrist,Fast:hand\0");
 845:..\src/command_processing.c ****                             }
 846:..\src/command_processing.c ****                         break;
 847:..\src/command_processing.c ****                     }
 848:..\src/command_processing.c ****                     break;
 5817              		.loc 1 848 0
 5818 2d9c B1E0     		b	.L198
 5819              	.L267:
 832:..\src/command_processing.c ****                                 strcat(aux_str, " Fast:syn2, Slow:syn1\0");
 5820              		.loc 1 832 0
 5821 2d9e 674B     		ldr	r3, .L313+8
 5822 2da0 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 5823 2da4 042B     		cmp	r3, #4
 5824 2da6 18D1     		bne	.L269
 833:..\src/command_processing.c ****                             }
 5825              		.loc 1 833 0
 5826 2da8 07F12803 		add	r3, r7, #40
 5827 2dac 083B     		subs	r3, r3, #8
 5828 2dae 1846     		mov	r0, r3
 5829 2db0 FFF7FEFF 		bl	strlen
 5830 2db4 0346     		mov	r3, r0
 5831 2db6 1A46     		mov	r2, r3
 5832 2db8 07F12803 		add	r3, r7, #40
 5833 2dbc 083B     		subs	r3, r3, #8
 5834 2dbe 1344     		add	r3, r3, r2
 5835 2dc0 5F4A     		ldr	r2, .L313+12
 5836 2dc2 1D46     		mov	r5, r3
 5837 2dc4 1446     		mov	r4, r2
 5838 2dc6 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5839 2dc8 2860     		str	r0, [r5]	@ unaligned
 5840 2dca 6960     		str	r1, [r5, #4]	@ unaligned
 5841 2dcc AA60     		str	r2, [r5, #8]	@ unaligned
 5842 2dce EB60     		str	r3, [r5, #12]	@ unaligned
 5843 2dd0 2068     		ldr	r0, [r4]	@ unaligned
 5844 2dd2 2861     		str	r0, [r5, #16]	@ unaligned
 5845 2dd4 A388     		ldrh	r3, [r4, #4]	@ unaligned
 5846 2dd6 AB82     		strh	r3, [r5, #20]	@ unaligned
 838:..\src/command_processing.c ****                         case 1:
 5847              		.loc 1 838 0
 5848 2dd8 4FE0     		b	.L266
 5849              	.L269:
 836:..\src/command_processing.c ****                             }                            
 5850              		.loc 1 836 0
 5851 2dda 07F12803 		add	r3, r7, #40
 5852 2dde 083B     		subs	r3, r3, #8
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 137


 5853 2de0 1846     		mov	r0, r3
 5854 2de2 FFF7FEFF 		bl	strlen
 5855 2de6 0346     		mov	r3, r0
 5856 2de8 1A46     		mov	r2, r3
 5857 2dea 07F12803 		add	r3, r7, #40
 5858 2dee 083B     		subs	r3, r3, #8
 5859 2df0 1344     		add	r3, r3, r2
 5860 2df2 544A     		ldr	r2, .L313+16
 5861 2df4 1D46     		mov	r5, r3
 5862 2df6 1446     		mov	r4, r2
 5863 2df8 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5864 2dfa 2860     		str	r0, [r5]	@ unaligned
 5865 2dfc 6960     		str	r1, [r5, #4]	@ unaligned
 5866 2dfe AA60     		str	r2, [r5, #8]	@ unaligned
 5867 2e00 EB60     		str	r3, [r5, #12]	@ unaligned
 5868 2e02 2068     		ldr	r0, [r4]	@ unaligned
 5869 2e04 2861     		str	r0, [r5, #16]	@ unaligned
 5870 2e06 A388     		ldrh	r3, [r4, #4]	@ unaligned
 5871 2e08 AB82     		strh	r3, [r5, #20]	@ unaligned
 838:..\src/command_processing.c ****                         case 1:
 5872              		.loc 1 838 0
 5873 2e0a 36E0     		b	.L266
 5874              	.L268:
 840:..\src/command_processing.c ****                                 strcat(aux_str, " Slow:syn2, Fast:syn1\0");
 5875              		.loc 1 840 0
 5876 2e0c 4B4B     		ldr	r3, .L313+8
 5877 2e0e 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 5878 2e12 042B     		cmp	r3, #4
 5879 2e14 18D1     		bne	.L271
 841:..\src/command_processing.c ****                             }
 5880              		.loc 1 841 0
 5881 2e16 07F12803 		add	r3, r7, #40
 5882 2e1a 083B     		subs	r3, r3, #8
 5883 2e1c 1846     		mov	r0, r3
 5884 2e1e FFF7FEFF 		bl	strlen
 5885 2e22 0346     		mov	r3, r0
 5886 2e24 1A46     		mov	r2, r3
 5887 2e26 07F12803 		add	r3, r7, #40
 5888 2e2a 083B     		subs	r3, r3, #8
 5889 2e2c 1344     		add	r3, r3, r2
 5890 2e2e 464A     		ldr	r2, .L313+20
 5891 2e30 1D46     		mov	r5, r3
 5892 2e32 1446     		mov	r4, r2
 5893 2e34 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5894 2e36 2860     		str	r0, [r5]	@ unaligned
 5895 2e38 6960     		str	r1, [r5, #4]	@ unaligned
 5896 2e3a AA60     		str	r2, [r5, #8]	@ unaligned
 5897 2e3c EB60     		str	r3, [r5, #12]	@ unaligned
 5898 2e3e 2068     		ldr	r0, [r4]	@ unaligned
 5899 2e40 2861     		str	r0, [r5, #16]	@ unaligned
 5900 2e42 A388     		ldrh	r3, [r4, #4]	@ unaligned
 5901 2e44 AB82     		strh	r3, [r5, #20]	@ unaligned
 846:..\src/command_processing.c ****                     }
 5902              		.loc 1 846 0
 5903 2e46 17E0     		b	.L292
 5904              	.L271:
 844:..\src/command_processing.c ****                             }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 138


 5905              		.loc 1 844 0
 5906 2e48 07F12803 		add	r3, r7, #40
 5907 2e4c 083B     		subs	r3, r3, #8
 5908 2e4e 1846     		mov	r0, r3
 5909 2e50 FFF7FEFF 		bl	strlen
 5910 2e54 0346     		mov	r3, r0
 5911 2e56 1A46     		mov	r2, r3
 5912 2e58 07F12803 		add	r3, r7, #40
 5913 2e5c 083B     		subs	r3, r3, #8
 5914 2e5e 1344     		add	r3, r3, r2
 5915 2e60 3A4A     		ldr	r2, .L313+24
 5916 2e62 1D46     		mov	r5, r3
 5917 2e64 1446     		mov	r4, r2
 5918 2e66 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5919 2e68 2860     		str	r0, [r5]	@ unaligned
 5920 2e6a 6960     		str	r1, [r5, #4]	@ unaligned
 5921 2e6c AA60     		str	r2, [r5, #8]	@ unaligned
 5922 2e6e EB60     		str	r3, [r5, #12]	@ unaligned
 5923 2e70 2068     		ldr	r0, [r4]	@ unaligned
 5924 2e72 2861     		str	r0, [r5, #16]	@ unaligned
 5925 2e74 A388     		ldrh	r3, [r4, #4]	@ unaligned
 5926 2e76 AB82     		strh	r3, [r5, #20]	@ unaligned
 5927              	.L292:
 846:..\src/command_processing.c ****                     }
 5928              		.loc 1 846 0
 5929 2e78 00BF     		nop
 5930              	.L266:
 5931              		.loc 1 848 0 discriminator 13
 5932 2e7a 42E0     		b	.L198
 5933              	.L211:
 849:..\src/command_processing.c ****                 case 12:    // wrist direction association menu
 850:..\src/command_processing.c ****                     switch(*m_addr){
 5934              		.loc 1 850 0
 5935 2e7c 07F59853 		add	r3, r7, #4864
 5936 2e80 03F11803 		add	r3, r3, #24
 5937 2e84 1B68     		ldr	r3, [r3]
 5938 2e86 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5939 2e88 002B     		cmp	r3, #0
 5940 2e8a 02D0     		beq	.L274
 5941 2e8c 012B     		cmp	r3, #1
 5942 2e8e 17D0     		beq	.L275
 851:..\src/command_processing.c ****                         case 0:
 852:..\src/command_processing.c ****                             strcat(aux_str, " Close:CW, Open:CCW\0");
 853:..\src/command_processing.c ****                         break;
 854:..\src/command_processing.c ****                         case 1:
 855:..\src/command_processing.c ****                             strcat(aux_str, " Close:CCW, Open:CW\0");
 856:..\src/command_processing.c ****                         break;
 857:..\src/command_processing.c ****                     }
 858:..\src/command_processing.c ****                     break;
 5943              		.loc 1 858 0
 5944 2e90 37E0     		b	.L198
 5945              	.L274:
 852:..\src/command_processing.c ****                         break;
 5946              		.loc 1 852 0
 5947 2e92 07F12803 		add	r3, r7, #40
 5948 2e96 083B     		subs	r3, r3, #8
 5949 2e98 1846     		mov	r0, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 139


 5950 2e9a FFF7FEFF 		bl	strlen
 5951 2e9e 0346     		mov	r3, r0
 5952 2ea0 1A46     		mov	r2, r3
 5953 2ea2 07F12803 		add	r3, r7, #40
 5954 2ea6 083B     		subs	r3, r3, #8
 5955 2ea8 1344     		add	r3, r3, r2
 5956 2eaa 294A     		ldr	r2, .L313+28
 5957 2eac 1D46     		mov	r5, r3
 5958 2eae 1446     		mov	r4, r2
 5959 2eb0 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5960 2eb2 2860     		str	r0, [r5]	@ unaligned
 5961 2eb4 6960     		str	r1, [r5, #4]	@ unaligned
 5962 2eb6 AA60     		str	r2, [r5, #8]	@ unaligned
 5963 2eb8 EB60     		str	r3, [r5, #12]	@ unaligned
 5964 2eba 2068     		ldr	r0, [r4]	@ unaligned
 5965 2ebc 2861     		str	r0, [r5, #16]	@ unaligned
 853:..\src/command_processing.c ****                         case 1:
 5966              		.loc 1 853 0
 5967 2ebe 16E0     		b	.L273
 5968              	.L275:
 855:..\src/command_processing.c ****                         break;
 5969              		.loc 1 855 0
 5970 2ec0 07F12803 		add	r3, r7, #40
 5971 2ec4 083B     		subs	r3, r3, #8
 5972 2ec6 1846     		mov	r0, r3
 5973 2ec8 FFF7FEFF 		bl	strlen
 5974 2ecc 0346     		mov	r3, r0
 5975 2ece 1A46     		mov	r2, r3
 5976 2ed0 07F12803 		add	r3, r7, #40
 5977 2ed4 083B     		subs	r3, r3, #8
 5978 2ed6 1344     		add	r3, r3, r2
 5979 2ed8 1E4A     		ldr	r2, .L313+32
 5980 2eda 1D46     		mov	r5, r3
 5981 2edc 1446     		mov	r4, r2
 5982 2ede 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5983 2ee0 2860     		str	r0, [r5]	@ unaligned
 5984 2ee2 6960     		str	r1, [r5, #4]	@ unaligned
 5985 2ee4 AA60     		str	r2, [r5, #8]	@ unaligned
 5986 2ee6 EB60     		str	r3, [r5, #12]	@ unaligned
 5987 2ee8 2068     		ldr	r0, [r4]	@ unaligned
 5988 2eea 2861     		str	r0, [r5, #16]	@ unaligned
 856:..\src/command_processing.c ****                     }
 5989              		.loc 1 856 0
 5990 2eec 00BF     		nop
 5991              	.L273:
 5992              		.loc 1 858 0
 5993 2eee 08E0     		b	.L198
 5994              	.L287:
 702:..\src/command_processing.c ****                 case 2:     // control mode menu
 5995              		.loc 1 702 0
 5996 2ef0 00BF     		nop
 5997 2ef2 06E0     		b	.L198
 5998              	.L288:
 718:..\src/command_processing.c ****                 case 3:     // yes/no menu
 5999              		.loc 1 718 0
 6000 2ef4 00BF     		nop
 6001 2ef6 04E0     		b	.L198
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 140


 6002              	.L289:
 762:..\src/command_processing.c ****                 case 7:     // spi read delay menu
 6003              		.loc 1 762 0
 6004 2ef8 00BF     		nop
 6005 2efa 02E0     		b	.L198
 6006              	.L290:
 809:..\src/command_processing.c ****                 case 10:    // device type menu
 6007              		.loc 1 809 0
 6008 2efc 00BF     		nop
 6009 2efe 00E0     		b	.L198
 6010              	.L291:
 828:..\src/command_processing.c ****                 case 11:    // fsm activation mode menu
 6011              		.loc 1 828 0
 6012 2f00 00BF     		nop
 6013              	.L198:
 859:..\src/command_processing.c ****             }
 860:..\src/command_processing.c ****             //Recomputes string lenght
 861:..\src/command_processing.c ****             string_lenght = strlen(aux_str)+1;
 6014              		.loc 1 861 0
 6015 2f02 07F12803 		add	r3, r7, #40
 6016 2f06 083B     		subs	r3, r3, #8
 6017 2f08 1846     		mov	r0, r3
 6018 2f0a FFF7FEFF 		bl	strlen
 6019 2f0e 0346     		mov	r3, r0
 6020 2f10 DBB2     		uxtb	r3, r3
 6021 2f12 0133     		adds	r3, r3, #1
 6022 2f14 07F59952 		add	r2, r7, #4896
 6023 2f18 02F10202 		add	r2, r2, #2
 6024 2f1c 1370     		strb	r3, [r2]
 6025              	.L197:
 862:..\src/command_processing.c ****         }
 863:..\src/command_processing.c **** 
 864:..\src/command_processing.c ****         // Add parameter string to packet
 865:..\src/command_processing.c ****         for(i = string_lenght; i != 0; i--)
 6026              		.loc 1 865 0
 6027 2f1e 07F59953 		add	r3, r7, #4896
 6028 2f22 03F10203 		add	r3, r3, #2
 6029 2f26 1B78     		ldrb	r3, [r3]
 6030 2f28 07F59952 		add	r2, r7, #4896
 6031 2f2c 02F10702 		add	r2, r2, #7
 6032 2f30 1370     		strb	r3, [r2]
 6033 2f32 57E0     		b	.L276
 6034              	.L314:
 6035              		.align	2
 6036              	.L313:
 6037 2f34 BC010000 		.word	.LC123
 6038 2f38 D0010000 		.word	.LC124
 6039 2f3c 00000000 		.word	c_mem
 6040 2f40 E4010000 		.word	.LC125
 6041 2f44 FC010000 		.word	.LC126
 6042 2f48 14020000 		.word	.LC127
 6043 2f4c 2C020000 		.word	.LC128
 6044 2f50 44020000 		.word	.LC129
 6045 2f54 5C020000 		.word	.LC130
 6046              	.L277:
 866:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght - i] = aux
 6047              		.loc 1 866 0 discriminator 3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 141


 6048 2f58 07F59953 		add	r3, r7, #4896
 6049 2f5c 03F10503 		add	r3, r3, #5
 6050 2f60 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6051 2f62 3222     		movs	r2, #50
 6052 2f64 02FB03F3 		mul	r3, r2, r3
 6053 2f68 1A1D     		adds	r2, r3, #4
 6054 2f6a 07F59953 		add	r3, r7, #4896
 6055 2f6e 03F10303 		add	r3, r3, #3
 6056 2f72 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 6057 2f74 07F59953 		add	r3, r7, #4896
 6058 2f78 03F10503 		add	r3, r3, #5
 6059 2f7c 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 6060 2f7e 07F10803 		add	r3, r7, #8
 6061 2f82 043B     		subs	r3, r3, #4
 6062 2f84 1B68     		ldr	r3, [r3]
 6063 2f86 0344     		add	r3, r3, r0
 6064 2f88 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6065 2f8a 03FB01F3 		mul	r3, r3, r1
 6066 2f8e 1A44     		add	r2, r2, r3
 6067 2f90 07F59953 		add	r3, r7, #4896
 6068 2f94 03F10203 		add	r3, r3, #2
 6069 2f98 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6070 2f9a 1A44     		add	r2, r2, r3
 6071 2f9c 07F59953 		add	r3, r7, #4896
 6072 2fa0 03F10703 		add	r3, r3, #7
 6073 2fa4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6074 2fa6 D21A     		subs	r2, r2, r3
 6075 2fa8 07F59953 		add	r3, r7, #4896
 6076 2fac 03F10203 		add	r3, r3, #2
 6077 2fb0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 6078 2fb2 07F59953 		add	r3, r7, #4896
 6079 2fb6 03F10703 		add	r3, r3, #7
 6080 2fba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6081 2fbc C91A     		subs	r1, r1, r3
 6082 2fbe 07F12803 		add	r3, r7, #40
 6083 2fc2 083B     		subs	r3, r3, #8
 6084 2fc4 595C     		ldrb	r1, [r3, r1]	@ zero_extendqisi2
 6085 2fc6 07F16803 		add	r3, r7, #104
 6086 2fca 143B     		subs	r3, r3, #20
 6087 2fcc 9954     		strb	r1, [r3, r2]
 865:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght - i] = aux
 6088              		.loc 1 865 0 discriminator 3
 6089 2fce 07F59953 		add	r3, r7, #4896
 6090 2fd2 03F10703 		add	r3, r3, #7
 6091 2fd6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6092 2fd8 013B     		subs	r3, r3, #1
 6093 2fda 07F59952 		add	r2, r7, #4896
 6094 2fde 02F10702 		add	r2, r2, #7
 6095 2fe2 1370     		strb	r3, [r2]
 6096              	.L276:
 865:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght - i] = aux
 6097              		.loc 1 865 0 is_stmt 0 discriminator 1
 6098 2fe4 07F59953 		add	r3, r7, #4896
 6099 2fe8 03F10703 		add	r3, r3, #7
 6100 2fec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6101 2fee 002B     		cmp	r3, #0
 6102 2ff0 B2D1     		bne	.L277
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 142


 867:..\src/command_processing.c ****         //The following byte indicates the number of menus at the end of the packet to send
 868:..\src/command_processing.c ****         if (TYPES[idx] == TYPE_FLAG){
 6103              		.loc 1 868 0 is_stmt 1
 6104 2ff2 07F59953 		add	r3, r7, #4896
 6105 2ff6 03F10503 		add	r3, r3, #5
 6106 2ffa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6107 2ffc 07F10802 		add	r2, r7, #8
 6108 3000 1268     		ldr	r2, [r2]
 6109 3002 1344     		add	r3, r3, r2
 6110 3004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6111 3006 002B     		cmp	r3, #0
 6112 3008 3AD1     		bne	.L278
 869:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght] = NUM_MEN
 6113              		.loc 1 869 0
 6114 300a 07F59953 		add	r3, r7, #4896
 6115 300e 03F10503 		add	r3, r3, #5
 6116 3012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6117 3014 3222     		movs	r2, #50
 6118 3016 02FB03F3 		mul	r3, r2, r3
 6119 301a 1A1D     		adds	r2, r3, #4
 6120 301c 07F59953 		add	r3, r7, #4896
 6121 3020 03F10303 		add	r3, r3, #3
 6122 3024 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 6123 3026 07F59953 		add	r3, r7, #4896
 6124 302a 03F10503 		add	r3, r3, #5
 6125 302e 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 6126 3030 07F10803 		add	r3, r7, #8
 6127 3034 043B     		subs	r3, r3, #4
 6128 3036 1B68     		ldr	r3, [r3]
 6129 3038 0344     		add	r3, r3, r0
 6130 303a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6131 303c 03FB01F3 		mul	r3, r3, r1
 6132 3040 1A44     		add	r2, r2, r3
 6133 3042 07F59953 		add	r3, r7, #4896
 6134 3046 03F10203 		add	r3, r3, #2
 6135 304a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6136 304c 1A44     		add	r2, r2, r3
 6137 304e 07F59953 		add	r3, r7, #4896
 6138 3052 03F10403 		add	r3, r3, #4
 6139 3056 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6140 3058 07F59A51 		add	r1, r7, #4928
 6141 305c 0968     		ldr	r1, [r1]
 6142 305e 0B44     		add	r3, r3, r1
 6143 3060 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 6144 3062 07F16803 		add	r3, r7, #104
 6145 3066 143B     		subs	r3, r3, #20
 6146 3068 9954     		strb	r1, [r3, r2]
 870:..\src/command_processing.c ****             idx_menu = idx_menu + 1;
 6147              		.loc 1 870 0
 6148 306a 07F59953 		add	r3, r7, #4896
 6149 306e 03F10403 		add	r3, r3, #4
 6150 3072 1B78     		ldrb	r3, [r3]
 6151 3074 0133     		adds	r3, r3, #1
 6152 3076 07F59952 		add	r2, r7, #4896
 6153 307a 02F10402 		add	r2, r2, #4
 6154 307e 1370     		strb	r3, [r2]
 6155              	.L278:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 143


 871:..\src/command_processing.c ****         }      
 872:..\src/command_processing.c ****         
 873:..\src/command_processing.c ****         // Add struct index after an empty bit
 874:..\src/command_processing.c ****         // Note: added here at the end of packets is transparent to old parameters retrieving versi
 875:..\src/command_processing.c ****         if (TYPES[idx] == TYPE_FLAG){
 6156              		.loc 1 875 0
 6157 3080 07F59953 		add	r3, r7, #4896
 6158 3084 03F10503 		add	r3, r3, #5
 6159 3088 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6160 308a 07F10802 		add	r2, r7, #8
 6161 308e 1268     		ldr	r2, [r2]
 6162 3090 1344     		add	r3, r3, r2
 6163 3092 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6164 3094 002B     		cmp	r3, #0
 6165 3096 32D1     		bne	.L279
 876:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght + 2] = NUM
 6166              		.loc 1 876 0
 6167 3098 07F59953 		add	r3, r7, #4896
 6168 309c 03F10503 		add	r3, r3, #5
 6169 30a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6170 30a2 3222     		movs	r2, #50
 6171 30a4 02FB03F3 		mul	r3, r2, r3
 6172 30a8 1A1D     		adds	r2, r3, #4
 6173 30aa 07F59953 		add	r3, r7, #4896
 6174 30ae 03F10303 		add	r3, r3, #3
 6175 30b2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 6176 30b4 07F59953 		add	r3, r7, #4896
 6177 30b8 03F10503 		add	r3, r3, #5
 6178 30bc 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 6179 30be 07F10803 		add	r3, r7, #8
 6180 30c2 043B     		subs	r3, r3, #4
 6181 30c4 1B68     		ldr	r3, [r3]
 6182 30c6 0344     		add	r3, r3, r0
 6183 30c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6184 30ca 03FB01F3 		mul	r3, r3, r1
 6185 30ce 1A44     		add	r2, r2, r3
 6186 30d0 07F59953 		add	r3, r7, #4896
 6187 30d4 03F10203 		add	r3, r3, #2
 6188 30d8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6189 30da 1344     		add	r3, r3, r2
 6190 30dc 9A1C     		adds	r2, r3, #2
 6191 30de 07F59953 		add	r3, r7, #4896
 6192 30e2 03F10503 		add	r3, r3, #5
 6193 30e6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 6194 30e8 07F10803 		add	r3, r7, #8
 6195 30ec 083B     		subs	r3, r3, #8
 6196 30ee 1B68     		ldr	r3, [r3]
 6197 30f0 0B44     		add	r3, r3, r1
 6198 30f2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 6199 30f4 07F16803 		add	r3, r7, #104
 6200 30f8 143B     		subs	r3, r3, #20
 6201 30fa 9954     		strb	r1, [r3, r2]
 6202 30fc 31E0     		b	.L280
 6203              	.L279:
 877:..\src/command_processing.c ****         }
 878:..\src/command_processing.c ****         else {
 879:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght + 1] = NUM
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 144


 6204              		.loc 1 879 0
 6205 30fe 07F59953 		add	r3, r7, #4896
 6206 3102 03F10503 		add	r3, r3, #5
 6207 3106 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6208 3108 3222     		movs	r2, #50
 6209 310a 02FB03F3 		mul	r3, r2, r3
 6210 310e 1A1D     		adds	r2, r3, #4
 6211 3110 07F59953 		add	r3, r7, #4896
 6212 3114 03F10303 		add	r3, r3, #3
 6213 3118 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 6214 311a 07F59953 		add	r3, r7, #4896
 6215 311e 03F10503 		add	r3, r3, #5
 6216 3122 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 6217 3124 07F10803 		add	r3, r7, #8
 6218 3128 043B     		subs	r3, r3, #4
 6219 312a 1B68     		ldr	r3, [r3]
 6220 312c 0344     		add	r3, r3, r0
 6221 312e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6222 3130 03FB01F3 		mul	r3, r3, r1
 6223 3134 1A44     		add	r2, r2, r3
 6224 3136 07F59953 		add	r3, r7, #4896
 6225 313a 03F10203 		add	r3, r3, #2
 6226 313e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6227 3140 1344     		add	r3, r3, r2
 6228 3142 5A1C     		adds	r2, r3, #1
 6229 3144 07F59953 		add	r3, r7, #4896
 6230 3148 03F10503 		add	r3, r3, #5
 6231 314c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 6232 314e 07F10803 		add	r3, r7, #8
 6233 3152 083B     		subs	r3, r3, #8
 6234 3154 1B68     		ldr	r3, [r3]
 6235 3156 0B44     		add	r3, r3, r1
 6236 3158 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 6237 315a 07F16803 		add	r3, r7, #104
 6238 315e 143B     		subs	r3, r3, #20
 6239 3160 9954     		strb	r1, [r3, r2]
 6240              	.L280:
 403:..\src/command_processing.c ****         
 6241              		.loc 1 403 0 discriminator 2
 6242 3162 07F59953 		add	r3, r7, #4896
 6243 3166 03F10503 		add	r3, r3, #5
 6244 316a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6245 316c 0133     		adds	r3, r3, #1
 6246 316e 07F59952 		add	r2, r7, #4896
 6247 3172 02F10502 		add	r2, r2, #5
 6248 3176 1370     		strb	r3, [r2]
 6249              	.L73:
 403:..\src/command_processing.c ****         
 6250              		.loc 1 403 0 is_stmt 0 discriminator 1
 6251 3178 07F59953 		add	r3, r7, #4896
 6252 317c 03F10503 		add	r3, r3, #5
 6253 3180 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6254 3182 402B     		cmp	r3, #64
 6255 3184 7CF6B0AF 		bls	.L281
 880:..\src/command_processing.c ****         }
 881:..\src/command_processing.c ****     }
 882:..\src/command_processing.c **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 145


 883:..\src/command_processing.c ****     // Add menu
 884:..\src/command_processing.c ****     for (j = 0; j < NUM_OF_DEV_PARAM_MENUS; j++) {
 6256              		.loc 1 884 0 is_stmt 1
 6257 3188 0023     		movs	r3, #0
 6258 318a 07F59952 		add	r2, r7, #4896
 6259 318e 02F10602 		add	r2, r2, #6
 6260 3192 1370     		strb	r3, [r2]
 6261 3194 71E0     		b	.L282
 6262              	.L285:
 885:..\src/command_processing.c ****         string_lenght = strlen((char*)MENU_STR[j]);
 6263              		.loc 1 885 0
 6264 3196 07F59953 		add	r3, r7, #4896
 6265 319a 03F10603 		add	r3, r3, #6
 6266 319e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6267 31a0 9B00     		lsls	r3, r3, #2
 6268 31a2 07F59A52 		add	r2, r7, #4928
 6269 31a6 02F10C02 		add	r2, r2, #12
 6270 31aa 1268     		ldr	r2, [r2]
 6271 31ac 1344     		add	r3, r3, r2
 6272 31ae 1B68     		ldr	r3, [r3]
 6273 31b0 1846     		mov	r0, r3
 6274 31b2 FFF7FEFF 		bl	strlen
 6275 31b6 0346     		mov	r3, r0
 6276 31b8 07F59952 		add	r2, r7, #4896
 6277 31bc 02F10202 		add	r2, r2, #2
 6278 31c0 1370     		strb	r3, [r2]
 886:..\src/command_processing.c ****         for(i = string_lenght; i != 0; i--)
 6279              		.loc 1 886 0
 6280 31c2 07F59953 		add	r3, r7, #4896
 6281 31c6 03F10203 		add	r3, r3, #2
 6282 31ca 1B78     		ldrb	r3, [r3]
 6283 31cc 07F59952 		add	r2, r7, #4896
 6284 31d0 02F10702 		add	r2, r2, #7
 6285 31d4 1370     		strb	r3, [r2]
 6286 31d6 3EE0     		b	.L283
 6287              	.L284:
 887:..\src/command_processing.c ****             packet_data[PARAM_BYTE_SLOT*NUM_OF_DEV_PARAMS + 2 + j*PARAM_MENU_SLOT + string_lenght -
 6288              		.loc 1 887 0 discriminator 3
 6289 31d8 07F59953 		add	r3, r7, #4896
 6290 31dc 03F10603 		add	r3, r3, #6
 6291 31e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6292 31e2 9622     		movs	r2, #150
 6293 31e4 02FB03F3 		mul	r3, r2, r3
 6294 31e8 03F6B442 		addw	r2, r3, #3252
 6295 31ec 07F59953 		add	r3, r7, #4896
 6296 31f0 03F10203 		add	r3, r3, #2
 6297 31f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6298 31f6 1A44     		add	r2, r2, r3
 6299 31f8 07F59953 		add	r3, r7, #4896
 6300 31fc 03F10703 		add	r3, r3, #7
 6301 3200 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6302 3202 D21A     		subs	r2, r2, r3
 6303 3204 07F59953 		add	r3, r7, #4896
 6304 3208 03F10603 		add	r3, r3, #6
 6305 320c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6306 320e 9B00     		lsls	r3, r3, #2
 6307 3210 07F59A51 		add	r1, r7, #4928
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 146


 6308 3214 01F10C01 		add	r1, r1, #12
 6309 3218 0968     		ldr	r1, [r1]
 6310 321a 0B44     		add	r3, r3, r1
 6311 321c 1B68     		ldr	r3, [r3]
 6312 321e 07F59951 		add	r1, r7, #4896
 6313 3222 01F10201 		add	r1, r1, #2
 6314 3226 0878     		ldrb	r0, [r1]	@ zero_extendqisi2
 6315 3228 07F59951 		add	r1, r7, #4896
 6316 322c 01F10701 		add	r1, r1, #7
 6317 3230 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 6318 3232 411A     		subs	r1, r0, r1
 6319 3234 0B44     		add	r3, r3, r1
 6320 3236 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 6321 3238 07F16803 		add	r3, r7, #104
 6322 323c 143B     		subs	r3, r3, #20
 6323 323e 9954     		strb	r1, [r3, r2]
 886:..\src/command_processing.c ****         for(i = string_lenght; i != 0; i--)
 6324              		.loc 1 886 0 discriminator 3
 6325 3240 07F59953 		add	r3, r7, #4896
 6326 3244 03F10703 		add	r3, r3, #7
 6327 3248 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6328 324a 013B     		subs	r3, r3, #1
 6329 324c 07F59952 		add	r2, r7, #4896
 6330 3250 02F10702 		add	r2, r2, #7
 6331 3254 1370     		strb	r3, [r2]
 6332              	.L283:
 886:..\src/command_processing.c ****         for(i = string_lenght; i != 0; i--)
 6333              		.loc 1 886 0 is_stmt 0 discriminator 1
 6334 3256 07F59953 		add	r3, r7, #4896
 6335 325a 03F10703 		add	r3, r3, #7
 6336 325e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6337 3260 002B     		cmp	r3, #0
 6338 3262 B9D1     		bne	.L284
 884:..\src/command_processing.c ****         string_lenght = strlen((char*)MENU_STR[j]);
 6339              		.loc 1 884 0 is_stmt 1 discriminator 2
 6340 3264 07F59953 		add	r3, r7, #4896
 6341 3268 03F10603 		add	r3, r3, #6
 6342 326c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6343 326e 0133     		adds	r3, r3, #1
 6344 3270 07F59952 		add	r2, r7, #4896
 6345 3274 02F10602 		add	r2, r2, #6
 6346 3278 1370     		strb	r3, [r2]
 6347              	.L282:
 884:..\src/command_processing.c ****         string_lenght = strlen((char*)MENU_STR[j]);
 6348              		.loc 1 884 0 is_stmt 0 discriminator 1
 6349 327a 07F59953 		add	r3, r7, #4896
 6350 327e 03F10603 		add	r3, r3, #6
 6351 3282 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6352 3284 092B     		cmp	r3, #9
 6353 3286 86D9     		bls	.L285
 888:..\src/command_processing.c ****     }
 889:..\src/command_processing.c ****     
 890:..\src/command_processing.c ****     packet_data[packet_lenght - 1] = LCRChecksum(packet_data,packet_lenght - 1);
 6354              		.loc 1 890 0 is_stmt 1
 6355 3288 07F59953 		add	r3, r7, #4896
 6356 328c 1B88     		ldrh	r3, [r3]
 6357 328e 5C1E     		subs	r4, r3, #1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 147


 6358 3290 07F59953 		add	r3, r7, #4896
 6359 3294 1B88     		ldrh	r3, [r3]	@ movhi
 6360 3296 DBB2     		uxtb	r3, r3
 6361 3298 013B     		subs	r3, r3, #1
 6362 329a DAB2     		uxtb	r2, r3
 6363 329c 07F16803 		add	r3, r7, #104
 6364 32a0 143B     		subs	r3, r3, #20
 6365 32a2 1146     		mov	r1, r2
 6366 32a4 1846     		mov	r0, r3
 6367 32a6 FFF7FEFF 		bl	LCRChecksum
 6368 32aa 0346     		mov	r3, r0
 6369 32ac 1A46     		mov	r2, r3
 6370 32ae 07F16803 		add	r3, r7, #104
 6371 32b2 143B     		subs	r3, r3, #20
 6372 32b4 1A55     		strb	r2, [r3, r4]
 891:..\src/command_processing.c ****     commWrite(packet_data, packet_lenght);
 6373              		.loc 1 891 0
 6374 32b6 07F59953 		add	r3, r7, #4896
 6375 32ba 1A88     		ldrh	r2, [r3]
 6376 32bc 07F16803 		add	r3, r7, #104
 6377 32c0 143B     		subs	r3, r3, #20
 6378 32c2 1146     		mov	r1, r2
 6379 32c4 1846     		mov	r0, r3
 6380 32c6 FFF7FEFF 		bl	commWrite
 892:..\src/command_processing.c **** }
 6381              		.loc 1 892 0
 6382 32ca 00BF     		nop
 6383 32cc 07F59957 		add	r7, r7, #4896
 6384 32d0 0C37     		adds	r7, r7, #12
 6385              		.cfi_def_cfa_offset 20
 6386 32d2 BD46     		mov	sp, r7
 6387              		.cfi_def_cfa_register 13
 6388              		@ sp needed
 6389 32d4 F0BD     		pop	{r4, r5, r6, r7, pc}
 6390              		.cfi_endproc
 6391              	.LFE67:
 6392              		.size	get_param_list, .-get_param_list
 6393 32d6 00BF     		.section	.rodata
 6394 0271 000000   		.align	2
 6395              	.LC132:
 6396 0274 30202D3E 		.ascii	"0 -> None\0121 -> Low (%u us delay for each 8-bit r"
 6396      204E6F6E 
 6396      650A3120 
 6396      2D3E204C 
 6396      6F772028 
 6397 02a4 65676973 		.ascii	"egister read)\0122 -> High (%u us delay for each 8-"
 6397      74657220 
 6397      72656164 
 6397      290A3220 
 6397      2D3E2048 
 6398 02d4 62697420 		.ascii	"bit register read)\012\000"
 6398      72656769 
 6398      73746572 
 6398      20726561 
 6398      64290A00 
 6399              		.align	2
 6400              	.LC133:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 148


 6401 02e8 30202D3E 		.ascii	"0 -> Fast:syn2, Slow:syn1\0121 -> Slow:syn2, Fast:s"
 6401      20466173 
 6401      743A7379 
 6401      6E322C20 
 6401      536C6F77 
 6402 0318 796E310A 		.ascii	"yn1\012\000"
 6402      00
 6403 031d 000000   		.align	2
 6404              	.LC134:
 6405 0320 30202D3E 		.ascii	"0 -> Fast:wrist,Slow:hand\0121 -> Slow:wrist,Fast:h"
 6405      20466173 
 6405      743A7772 
 6405      6973742C 
 6405      536C6F77 
 6406 0350 616E640A 		.ascii	"and\012\000"
 6406      00
 6407 0355 000000   		.align	2
 6408              	.LC135:
 6409 0358 30202D3E 		.ascii	"0 -> Usb\0121 -> Handle\0122 -> EMG proportional\012"
 6409      20557362 
 6409      0A31202D 
 6409      3E204861 
 6409      6E646C65 
 6410 0383 33202D3E 		.ascii	"3 -> EMG Integral\0124 -> EMG FCFS\0125 -> EMG FCFS"
 6410      20454D47 
 6410      20496E74 
 6410      65677261 
 6410      6C0A3420 
 6411 03b0 20416476 		.ascii	" Advanced\0126 -> Joystick\0127 -> EMG proportional"
 6411      616E6365 
 6411      640A3620 
 6411      2D3E204A 
 6411      6F797374 
 6412 03dd 204E430A 		.ascii	" NC\012\000"
 6412      00
 6413 03e2 0000     		.align	2
 6414              	.LC136:
 6415 03e4 30202D3E 		.ascii	"0 -> Position\0121 -> PWM\0122 -> Current\0123 -> P"
 6415      20506F73 
 6415      6974696F 
 6415      6E0A3120 
 6415      2D3E2050 
 6416 040e 6F736974 		.ascii	"osition and Current\012\000"
 6416      696F6E20 
 6416      616E6420 
 6416      43757272 
 6416      656E740A 
 6417 0423 00       		.align	2
 6418              	.LC137:
 6419 0424 30202D3E 		.ascii	"0 -> Deactivate [NO]\0121 -> Activate [YES]\012\000"
 6419      20446561 
 6419      63746976 
 6419      61746520 
 6419      5B4E4F5D 
 6420 044e 0000     		.align	2
 6421              	.LC138:
 6422 0450 30202D3E 		.ascii	"0 -> Right\0121 -> Left\012\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 149


 6422      20526967 
 6422      68740A31 
 6422      202D3E20 
 6422      4C656674 
 6423 0466 0000     		.align	2
 6424              	.LC139:
 6425 0468 30202D3E 		.ascii	"0 -> OFF\0121 -> ON\012The board will reset\012\000"
 6425      204F4646 
 6425      0A31202D 
 6425      3E204F4E 
 6425      0A546865 
 6426 048f 00       		.align	2
 6427              	.LC140:
 6428 0490 30202D3E 		.ascii	"0 -> None\0121 -> SD/RTC board\0122 -> WiFi board ["
 6428      204E6F6E 
 6428      650A3120 
 6428      2D3E2053 
 6428      442F5254 
 6429 04bd 4E2F415D 		.ascii	"N/A]\0123 -> Other [N/A]\012The board will reset\012"
 6429      0A33202D 
 6429      3E204F74 
 6429      68657220 
 6429      5B4E2F41 
 6430 04e8 00       		.ascii	"\000"
 6431 04e9 000000   		.align	2
 6432              	.LC141:
 6433 04ec 30202D3E 		.ascii	"0 -> Generic user\0121 -> Maria\0122 -> R01\012The "
 6433      2047656E 
 6433      65726963 
 6433      20757365 
 6433      720A3120 
 6434 0516 626F6172 		.ascii	"board will reset\012\000"
 6434      64207769 
 6434      6C6C2072 
 6434      65736574 
 6434      0A00
 6435              		.align	2
 6436              	.LC142:
 6437 0528 30202D3E 		.ascii	"0 -> 30 Hz\0121 -> 100 Hz\0122 -> 300 Hz\0123 -> 1 "
 6437      20333020 
 6437      487A0A31 
 6437      202D3E20 
 6437      31303020 
 6438 0552 4B487A0A 		.ascii	"KHz\0124 -> 3 KHz\012The board will reset\012\000"
 6438      34202D3E 
 6438      2033204B 
 6438      487A0A54 
 6438      68652062 
 6439 0577 00       		.align	2
 6440              	.LC143:
 6441 0578 30202D3E 		.ascii	"0 -> SOFTHAND PRO\0121 -> GENERIC 2 MOTORS\0122 -> "
 6441      20534F46 
 6441      5448414E 
 6441      44205052 
 6441      4F0A3120 
 6442 05a5 41495220 		.ascii	"AIR CHAMBERS\0123 -> OTTOBOCK WRIST\0124 -> SOFTHAN"
 6442      4348414D 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 150


 6442      42455253 
 6442      0A33202D 
 6442      3E204F54 
 6443 05d2 44203220 		.ascii	"D 2 MOTORS\012The board will reset\012\000"
 6443      4D4F544F 
 6443      52530A54 
 6443      68652062 
 6443      6F617264 
 6444 05f3 00       		.align	2
 6445              	.LC144:
 6446 05f4 30202D3E 		.ascii	"0 -> Close:CW, Open:CCW\0121 -> Close:CCW, Open:CW\012"
 6446      20436C6F 
 6446      73653A43 
 6446      572C204F 
 6446      70656E3A 
 6447 0624 00       		.ascii	"\000"
 6448 0625 000000   		.align	2
 6449              	.LC0:
 6450 0628 02       		.byte	2
 6451 0629 07       		.byte	7
 6452 062a 07       		.byte	7
 6453 062b 00       		.byte	0
 6454 062c 00       		.byte	0
 6455 062d 00       		.byte	0
 6456 062e 02       		.byte	2
 6457 062f 03       		.byte	3
 6458 0630 07       		.byte	7
 6459 0631 00       		.byte	0
 6460 0632 05       		.byte	5
 6461 0633 05       		.byte	5
 6462 0634 03       		.byte	3
 6463 0635 04       		.byte	4
 6464 0636 00       		.byte	0
 6465 0637 06       		.byte	6
 6466 0638 02       		.byte	2
 6467 0639 00       		.byte	0
 6468 063a 01       		.byte	1
 6469 063b 00       		.byte	0
 6470 063c 07       		.byte	7
 6471 063d 02       		.byte	2
 6472 063e 05       		.byte	5
 6473 063f 05       		.byte	5
 6474 0640 05       		.byte	5
 6475 0641 00       		.byte	0
 6476 0642 00       		.byte	0
 6477 0643 00       		.byte	0
 6478 0644 00       		.byte	0
 6479 0645 00       		.byte	0
 6480 0646 00       		.byte	0
 6481 0647 02       		.byte	2
 6482 0648 00       		.byte	0
 6483 0649 02       		.byte	2
 6484 064a 00       		.byte	0
 6485 064b 09       		.byte	9
 6486 064c 02       		.byte	2
 6487 064d 00       		.byte	0
 6488 064e 02       		.byte	2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 151


 6489 064f 00       		.byte	0
 6490 0650 02       		.byte	2
 6491 0651 01       		.byte	1
 6492 0652 00       		.byte	0
 6493 0653 07       		.byte	7
 6494 0654 07       		.byte	7
 6495 0655 00       		.byte	0
 6496 0656 00       		.byte	0
 6497 0657 00       		.byte	0
 6498 0658 02       		.byte	2
 6499 0659 03       		.byte	3
 6500 065a 07       		.byte	7
 6501 065b 00       		.byte	0
 6502 065c 05       		.byte	5
 6503 065d 05       		.byte	5
 6504 065e 03       		.byte	3
 6505 065f 00       		.byte	0
 6506 0660 01       		.byte	1
 6507 0661 00       		.byte	0
 6508 0662 07       		.byte	7
 6509 0663 02       		.byte	2
 6510 0664 00       		.byte	0
 6511 0665 02       		.byte	2
 6512 0666 00       		.byte	0
 6513 0667 02       		.byte	2
 6514 0668 01       		.byte	1
 6515 0669 02       		.byte	2
 6516 066a 02       		.byte	2
 6517 066b 00       		.byte	0
 6518 066c 02       		.byte	2
 6519 066d 02       		.byte	2
 6520 066e 00       		.byte	0
 6521 066f 04       		.byte	4
 6522 0670 03       		.byte	3
 6523 0671 04       		.byte	4
 6524 0672 00       		.byte	0
 6525 0673 00       		.byte	0
 6526 0674 04       		.byte	4
 6527 0675 00       		.byte	0
 6528 0676 00       		.byte	0
 6529 0677 02       		.byte	2
 6530 0678 05       		.byte	5
 6531 0679 07       		.byte	7
 6532 067a 07       		.byte	7
 6533 067b 00       		.align	2
 6534              	.LC1:
 6535 067c 31202D20 		.ascii	"1 - Device ID:\000"
 6535      44657669 
 6535      63652049 
 6535      443A00
 6536 068b 00       		.align	2
 6537              	.LC2:
 6538 068c 32202D20 		.ascii	"2 - Position PID [P, I, D]:\000"
 6538      506F7369 
 6538      74696F6E 
 6538      20504944 
 6538      205B502C 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 152


 6539              		.align	2
 6540              	.LC3:
 6541 06a8 33202D20 		.ascii	"3 - Current PID [P, I, D]:\000"
 6541      43757272 
 6541      656E7420 
 6541      50494420 
 6541      5B502C20 
 6542 06c3 00       		.align	2
 6543              	.LC4:
 6544 06c4 34202D20 		.ascii	"4 - Startup Activation:\000"
 6544      53746172 
 6544      74757020 
 6544      41637469 
 6544      76617469 
 6545              		.align	2
 6546              	.LC5:
 6547 06dc 35202D20 		.ascii	"5 - Input mode:\000"
 6547      496E7075 
 6547      74206D6F 
 6547      64653A00 
 6548              		.align	2
 6549              	.LC6:
 6550 06ec 36202D20 		.ascii	"6 - Control mode:\000"
 6550      436F6E74 
 6550      726F6C20 
 6550      6D6F6465 
 6550      3A00
 6551 06fe 0000     		.align	2
 6552              	.LC7:
 6553 0700 37202D20 		.ascii	"7 - Resolutions:\000"
 6553      5265736F 
 6553      6C757469 
 6553      6F6E733A 
 6553      00
 6554 0711 000000   		.align	2
 6555              	.LC8:
 6556 0714 38202D20 		.ascii	"8 - Measurement Offsets:\000"
 6556      4D656173 
 6556      7572656D 
 6556      656E7420 
 6556      4F666673 
 6557 072d 000000   		.align	2
 6558              	.LC9:
 6559 0730 39202D20 		.ascii	"9 - Multipliers:\000"
 6559      4D756C74 
 6559      69706C69 
 6559      6572733A 
 6559      00
 6560 0741 000000   		.align	2
 6561              	.LC10:
 6562 0744 3130202D 		.ascii	"10 - Pos. limit active:\000"
 6562      20506F73 
 6562      2E206C69 
 6562      6D697420 
 6562      61637469 
 6563              		.align	2
 6564              	.LC11:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 153


 6565 075c 3131202D 		.ascii	"11 - Pos. limits [inf, sup]:\000"
 6565      20506F73 
 6565      2E206C69 
 6565      6D697473 
 6565      205B696E 
 6566 0779 000000   		.align	2
 6567              	.LC12:
 6568 077c 3132202D 		.ascii	"12 - Max steps [neg, pos]:\000"
 6568      204D6178 
 6568      20737465 
 6568      7073205B 
 6568      6E65672C 
 6569 0797 00       		.align	2
 6570              	.LC13:
 6571 0798 3133202D 		.ascii	"13 - Current limit:\000"
 6571      20437572 
 6571      72656E74 
 6571      206C696D 
 6571      69743A00 
 6572              		.align	2
 6573              	.LC14:
 6574 07ac 3134202D 		.ascii	"14 - EMG thresholds:\000"
 6574      20454D47 
 6574      20746872 
 6574      6573686F 
 6574      6C64733A 
 6575 07c1 000000   		.align	2
 6576              	.LC15:
 6577 07c4 3135202D 		.ascii	"15 - EMG calibration on startup:\000"
 6577      20454D47 
 6577      2063616C 
 6577      69627261 
 6577      74696F6E 
 6578 07e5 000000   		.align	2
 6579              	.LC16:
 6580 07e8 3136202D 		.ascii	"16 - EMG max values:\000"
 6580      20454D47 
 6580      206D6178 
 6580      2076616C 
 6580      7565733A 
 6581 07fd 000000   		.align	2
 6582              	.LC17:
 6583 0800 3137202D 		.ascii	"17 - EMG max speeds:\000"
 6583      20454D47 
 6583      206D6178 
 6583      20737065 
 6583      6564733A 
 6584 0815 000000   		.align	2
 6585              	.LC18:
 6586 0818 3138202D 		.ascii	"18 - Absolute encoder position:\000"
 6586      20416273 
 6586      6F6C7574 
 6586      6520656E 
 6586      636F6465 
 6587              		.align	2
 6588              	.LC19:
 6589 0838 3139202D 		.ascii	"19 - Motor handle ratio:\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 154


 6589      204D6F74 
 6589      6F722068 
 6589      616E646C 
 6589      65207261 
 6590 0851 000000   		.align	2
 6591              	.LC20:
 6592 0854 3230202D 		.ascii	"20 - PWM rescaling:\000"
 6592      2050574D 
 6592      20726573 
 6592      63616C69 
 6592      6E673A00 
 6593              		.align	2
 6594              	.LC21:
 6595 0868 3231202D 		.ascii	"21 - Current lookup:\000"
 6595      20437572 
 6595      72656E74 
 6595      206C6F6F 
 6595      6B75703A 
 6596 087d 000000   		.align	2
 6597              	.LC22:
 6598 0880 3232202D 		.ascii	"22 - Date of maintenance [D/M/Y]:\000"
 6598      20446174 
 6598      65206F66 
 6598      206D6169 
 6598      6E74656E 
 6599 08a2 0000     		.align	2
 6600              	.LC23:
 6601 08a4 3233202D 		.ascii	"23 - Rest position:\000"
 6601      20526573 
 6601      7420706F 
 6601      73697469 
 6601      6F6E3A00 
 6602              		.align	2
 6603              	.LC24:
 6604 08b8 3234202D 		.ascii	"24 - Rest position time delay (ms):\000"
 6604      20526573 
 6604      7420706F 
 6604      73697469 
 6604      6F6E2074 
 6605              		.align	2
 6606              	.LC25:
 6607 08dc 3235202D 		.ascii	"25 - Rest vel closure (ticks/sec):\000"
 6607      20526573 
 6607      74207665 
 6607      6C20636C 
 6607      6F737572 
 6608 08ff 00       		.align	2
 6609              	.LC26:
 6610 0900 3236202D 		.ascii	"26 - Rest position enabled:\000"
 6610      20526573 
 6610      7420706F 
 6610      73697469 
 6610      6F6E2065 
 6611              		.align	2
 6612              	.LC27:
 6613 091c 3237202D 		.ascii	"27 - EMG inversion:\000"
 6613      20454D47 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 155


 6613      20696E76 
 6613      65727369 
 6613      6F6E3A00 
 6614              		.align	2
 6615              	.LC28:
 6616 0930 3238202D 		.ascii	"28 - Hand side:\000"
 6616      2048616E 
 6616      64207369 
 6616      64653A00 
 6617              		.align	2
 6618              	.LC29:
 6619 0940 3239202D 		.ascii	"29 - Enable IMUs:\000"
 6619      20456E61 
 6619      626C6520 
 6619      494D5573 
 6619      3A00
 6620 0952 0000     		.align	2
 6621              	.LC30:
 6622 0954 3330202D 		.ascii	"30 - Read Expansion port:\000"
 6622      20526561 
 6622      64204578 
 6622      70616E73 
 6622      696F6E20 
 6623 096e 0000     		.align	2
 6624              	.LC31:
 6625 0970 3331202D 		.ascii	"31 - Reset counters:\000"
 6625      20526573 
 6625      65742063 
 6625      6F756E74 
 6625      6572733A 
 6626 0985 000000   		.align	2
 6627              	.LC32:
 6628 0988 3332202D 		.ascii	"32 - Last checked Time [D/M/Y H:M:S]:\000"
 6628      204C6173 
 6628      74206368 
 6628      65636B65 
 6628      64205469 
 6629 09ae 0000     		.align	2
 6630              	.LC33:
 6631 09b0 3333202D 		.ascii	"33 - SPI read delay (IMU):\000"
 6631      20535049 
 6631      20726561 
 6631      64206465 
 6631      6C617920 
 6632 09cb 00       		.align	2
 6633              	.LC34:
 6634 09cc 3334202D 		.ascii	"34 - On board IMU conf. [a,g,m,q,t]:\000"
 6634      204F6E20 
 6634      626F6172 
 6634      6420494D 
 6634      5520636F 
 6635 09f1 000000   		.align	2
 6636              	.LC35:
 6637 09f4 3335202D 		.ascii	"35 - User ID:\000"
 6637      20557365 
 6637      72204944 
 6637      3A00
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 156


 6638 0a02 0000     		.align	2
 6639              	.LC36:
 6640 0a04 3336202D 		.ascii	"36 - User code:\000"
 6640      20557365 
 6640      7220636F 
 6640      64653A00 
 6641              		.align	2
 6642              	.LC37:
 6643 0a14 3337202D 		.ascii	"37 - Associated encoder line:\000"
 6643      20417373 
 6643      6F636961 
 6643      74656420 
 6643      656E636F 
 6644 0a32 0000     		.align	2
 6645              	.LC38:
 6646 0a34 3338202D 		.ascii	"38 - Driver type:\000"
 6646      20447269 
 6646      76657220 
 6646      74797065 
 6646      3A00
 6647 0a46 0000     		.align	2
 6648              	.LC39:
 6649 0a48 3339202D 		.ascii	"39 - PWM rate limiter:\000"
 6649      2050574D 
 6649      20726174 
 6649      65206C69 
 6649      6D697465 
 6650 0a5f 00       		.align	2
 6651              	.LC40:
 6652 0a60 3430202D 		.ascii	"40 - Not reversible:\000"
 6652      204E6F74 
 6652      20726576 
 6652      65727369 
 6652      626C653A 
 6653 0a75 000000   		.align	2
 6654              	.LC41:
 6655 0a78 3431202D 		.ascii	"41 - Enc idx used for control:\000"
 6655      20456E63 
 6655      20696478 
 6655      20757365 
 6655      6420666F 
 6656 0a97 00       		.align	2
 6657              	.LC42:
 6658 0a98 3432202D 		.ascii	"42 - Gear params[N1, N2, I1]:\000"
 6658      20476561 
 6658      72207061 
 6658      72616D73 
 6658      5B4E312C 
 6659 0ab6 0000     		.align	2
 6660              	.LC43:
 6661 0ab8 3433202D 		.ascii	"43 - Use second motor:\000"
 6661      20557365 
 6661      20736563 
 6661      6F6E6420 
 6661      6D6F746F 
 6662 0acf 00       		.align	2
 6663              	.LC44:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 157


 6664 0ad0 3434202D 		.ascii	"44 - Position PID [P, I, D]:\000"
 6664      20506F73 
 6664      6974696F 
 6664      6E205049 
 6664      44205B50 
 6665 0aed 000000   		.align	2
 6666              	.LC45:
 6667 0af0 3435202D 		.ascii	"45 - Current PID [P, I, D]:\000"
 6667      20437572 
 6667      72656E74 
 6667      20504944 
 6667      205B502C 
 6668              		.align	2
 6669              	.LC46:
 6670 0b0c 3436202D 		.ascii	"46 - Startup Activation:\000"
 6670      20537461 
 6670      72747570 
 6670      20416374 
 6670      69766174 
 6671 0b25 000000   		.align	2
 6672              	.LC47:
 6673 0b28 3437202D 		.ascii	"47 - Input mode:\000"
 6673      20496E70 
 6673      7574206D 
 6673      6F64653A 
 6673      00
 6674 0b39 000000   		.align	2
 6675              	.LC48:
 6676 0b3c 3438202D 		.ascii	"48 - Control mode:\000"
 6676      20436F6E 
 6676      74726F6C 
 6676      206D6F64 
 6676      653A00
 6677 0b4f 00       		.align	2
 6678              	.LC49:
 6679 0b50 3439202D 		.ascii	"49 - Resolutions:\000"
 6679      20526573 
 6679      6F6C7574 
 6679      696F6E73 
 6679      3A00
 6680 0b62 0000     		.align	2
 6681              	.LC50:
 6682 0b64 3530202D 		.ascii	"50 - Measurement Offsets:\000"
 6682      204D6561 
 6682      73757265 
 6682      6D656E74 
 6682      204F6666 
 6683 0b7e 0000     		.align	2
 6684              	.LC51:
 6685 0b80 3531202D 		.ascii	"51 - Multipliers:\000"
 6685      204D756C 
 6685      7469706C 
 6685      69657273 
 6685      3A00
 6686 0b92 0000     		.align	2
 6687              	.LC52:
 6688 0b94 3532202D 		.ascii	"52 - Pos. limit active:\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 158


 6688      20506F73 
 6688      2E206C69 
 6688      6D697420 
 6688      61637469 
 6689              		.align	2
 6690              	.LC53:
 6691 0bac 3533202D 		.ascii	"53 - Pos. limits [inf, sup]:\000"
 6691      20506F73 
 6691      2E206C69 
 6691      6D697473 
 6691      205B696E 
 6692 0bc9 000000   		.align	2
 6693              	.LC54:
 6694 0bcc 3534202D 		.ascii	"54 - Max steps [neg, pos]:\000"
 6694      204D6178 
 6694      20737465 
 6694      7073205B 
 6694      6E65672C 
 6695 0be7 00       		.align	2
 6696              	.LC55:
 6697 0be8 3535202D 		.ascii	"55 - Current limit:\000"
 6697      20437572 
 6697      72656E74 
 6697      206C696D 
 6697      69743A00 
 6698              		.align	2
 6699              	.LC56:
 6700 0bfc 3536202D 		.ascii	"56 - Absolute encoder position:\000"
 6700      20416273 
 6700      6F6C7574 
 6700      6520656E 
 6700      636F6465 
 6701              		.align	2
 6702              	.LC57:
 6703 0c1c 3537202D 		.ascii	"57 - Motor handle ratio:\000"
 6703      204D6F74 
 6703      6F722068 
 6703      616E646C 
 6703      65207261 
 6704 0c35 000000   		.align	2
 6705              	.LC58:
 6706 0c38 3538202D 		.ascii	"58 - PWM rescaling:\000"
 6706      2050574D 
 6706      20726573 
 6706      63616C69 
 6706      6E673A00 
 6707              		.align	2
 6708              	.LC59:
 6709 0c4c 3539202D 		.ascii	"59 - Current lookup:\000"
 6709      20437572 
 6709      72656E74 
 6709      206C6F6F 
 6709      6B75703A 
 6710 0c61 000000   		.align	2
 6711              	.LC60:
 6712 0c64 3630202D 		.ascii	"60 - Associated encoder line:\000"
 6712      20417373 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 159


 6712      6F636961 
 6712      74656420 
 6712      656E636F 
 6713 0c82 0000     		.align	2
 6714              	.LC61:
 6715 0c84 3631202D 		.ascii	"61 - PWM Frequency:\000"
 6715      2050574D 
 6715      20467265 
 6715      7175656E 
 6715      63793A00 
 6716              		.align	2
 6717              	.LC62:
 6718 0c98 3632202D 		.ascii	"62 - PWM rate limiter:\000"
 6718      2050574D 
 6718      20726174 
 6718      65206C69 
 6718      6D697465 
 6719 0caf 00       		.align	2
 6720              	.LC63:
 6721 0cb0 3633202D 		.ascii	"63 - Not reversible:\000"
 6721      204E6F74 
 6721      20726576 
 6721      65727369 
 6721      626C653A 
 6722 0cc5 000000   		.align	2
 6723              	.LC64:
 6724 0cc8 3634202D 		.ascii	"64 - Enc idx used for control:\000"
 6724      20456E63 
 6724      20696478 
 6724      20757365 
 6724      6420666F 
 6725 0ce7 00       		.align	2
 6726              	.LC65:
 6727 0ce8 3635202D 		.ascii	"65 - Gear params[N1, N2, I1]:\000"
 6727      20476561 
 6727      72207061 
 6727      72616D73 
 6727      5B4E312C 
 6728 0d06 0000     		.align	2
 6729              	.LC66:
 6730 0d08 3636202D 		.ascii	"66 - Read enc raw line 0:\000"
 6730      20526561 
 6730      6420656E 
 6730      63207261 
 6730      77206C69 
 6731 0d22 0000     		.align	2
 6732              	.LC67:
 6733 0d24 3637202D 		.ascii	"67 - Read enc raw line 1:\000"
 6733      20526561 
 6733      6420656E 
 6733      63207261 
 6733      77206C69 
 6734 0d3e 0000     		.align	2
 6735              	.LC68:
 6736 0d40 3638202D 		.ascii	"68 - Read additional ADC port:\000"
 6736      20526561 
 6736      64206164 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 160


 6736      64697469 
 6736      6F6E616C 
 6737 0d5f 00       		.align	2
 6738              	.LC69:
 6739 0d60 3639202D 		.ascii	"69 - ADC channel [1-6]:\000"
 6739      20414443 
 6739      20636861 
 6739      6E6E656C 
 6739      205B312D 
 6740              		.align	2
 6741              	.LC70:
 6742 0d78 3730202D 		.ascii	"70 - ADC channel [7-12]:\000"
 6742      20414443 
 6742      20636861 
 6742      6E6E656C 
 6742      205B372D 
 6743 0d91 000000   		.align	2
 6744              	.LC71:
 6745 0d94 3731202D 		.ascii	"71 - Record EMG on SD card:\000"
 6745      20526563 
 6745      6F726420 
 6745      454D4720 
 6745      6F6E2053 
 6746              		.align	2
 6747              	.LC72:
 6748 0db0 3732202D 		.ascii	"72 - Joystick closure speed:\000"
 6748      204A6F79 
 6748      73746963 
 6748      6B20636C 
 6748      6F737572 
 6749 0dcd 000000   		.align	2
 6750              	.LC73:
 6751 0dd0 3733202D 		.ascii	"73 - Joystick threshold:\000"
 6751      204A6F79 
 6751      73746963 
 6751      6B207468 
 6751      72657368 
 6752 0de9 000000   		.align	2
 6753              	.LC74:
 6754 0dec 3734202D 		.ascii	"74 - Joystick gains:\000"
 6754      204A6F79 
 6754      73746963 
 6754      6B206761 
 6754      696E733A 
 6755 0e01 000000   		.align	2
 6756              	.LC75:
 6757 0e04 3735202D 		.ascii	"75 - Device type:\000"
 6757      20446576 
 6757      69636520 
 6757      74797065 
 6757      3A00
 6758 0e16 0000     		.align	2
 6759              	.LC76:
 6760 0e18 3736202D 		.ascii	"76 - EMG FSM act.mode:\000"
 6760      20454D47 
 6760      2046534D 
 6760      20616374 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 161


 6760      2E6D6F64 
 6761 0e2f 00       		.align	2
 6762              	.LC77:
 6763 0e30 3737202D 		.ascii	"77 - Fast act.thresholds:\000"
 6763      20466173 
 6763      74206163 
 6763      742E7468 
 6763      72657368 
 6764 0e4a 0000     		.align	2
 6765              	.LC78:
 6766 0e4c 3738202D 		.ascii	"78 - Wrist direction:\000"
 6766      20577269 
 6766      73742064 
 6766      69726563 
 6766      74696F6E 
 6767 0e62 0000     		.align	2
 6768              	.LC79:
 6769 0e64 3739202D 		.ascii	"79 - Slave communication active:\000"
 6769      20536C61 
 6769      76652063 
 6769      6F6D6D75 
 6769      6E696361 
 6770 0e85 000000   		.align	2
 6771              	.LC80:
 6772 0e88 3830202D 		.ascii	"80 - Slave ID:\000"
 6772      20536C61 
 6772      76652049 
 6772      443A00
 6773 0e97 00       		.align	2
 6774              	.LC81:
 6775 0e98 3831202D 		.ascii	"81 - Maximum slave residual current:\000"
 6775      204D6178 
 6775      696D756D 
 6775      20736C61 
 6775      76652072 
 6776 0ebd 000000   		.align	2
 6777              	.LC82:
 6778 0ec0 3832202D 		.ascii	"82 - Maximum pressure feedback (kPa):\000"
 6778      204D6178 
 6778      696D756D 
 6778      20707265 
 6778      73737572 
 6779 0ee6 0000     		.align	2
 6780              	.LC83:
 6781 0ee8 3833202D 		.ascii	"83 - Proportional pressure error gain:\000"
 6781      2050726F 
 6781      706F7274 
 6781      696F6E61 
 6781      6C207072 
 6782 0f0f 00       		.align	2
 6783              	.LC131:
 6784 0f10 7C060000 		.word	.LC1
 6785 0f14 8C060000 		.word	.LC2
 6786 0f18 A8060000 		.word	.LC3
 6787 0f1c C4060000 		.word	.LC4
 6788 0f20 DC060000 		.word	.LC5
 6789 0f24 EC060000 		.word	.LC6
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 162


 6790 0f28 00070000 		.word	.LC7
 6791 0f2c 14070000 		.word	.LC8
 6792 0f30 30070000 		.word	.LC9
 6793 0f34 44070000 		.word	.LC10
 6794 0f38 5C070000 		.word	.LC11
 6795 0f3c 7C070000 		.word	.LC12
 6796 0f40 98070000 		.word	.LC13
 6797 0f44 AC070000 		.word	.LC14
 6798 0f48 C4070000 		.word	.LC15
 6799 0f4c E8070000 		.word	.LC16
 6800 0f50 00080000 		.word	.LC17
 6801 0f54 18080000 		.word	.LC18
 6802 0f58 38080000 		.word	.LC19
 6803 0f5c 54080000 		.word	.LC20
 6804 0f60 68080000 		.word	.LC21
 6805 0f64 80080000 		.word	.LC22
 6806 0f68 A4080000 		.word	.LC23
 6807 0f6c B8080000 		.word	.LC24
 6808 0f70 DC080000 		.word	.LC25
 6809 0f74 00090000 		.word	.LC26
 6810 0f78 1C090000 		.word	.LC27
 6811 0f7c 30090000 		.word	.LC28
 6812 0f80 40090000 		.word	.LC29
 6813 0f84 54090000 		.word	.LC30
 6814 0f88 70090000 		.word	.LC31
 6815 0f8c 88090000 		.word	.LC32
 6816 0f90 B0090000 		.word	.LC33
 6817 0f94 CC090000 		.word	.LC34
 6818 0f98 F4090000 		.word	.LC35
 6819 0f9c 040A0000 		.word	.LC36
 6820 0fa0 140A0000 		.word	.LC37
 6821 0fa4 340A0000 		.word	.LC38
 6822 0fa8 480A0000 		.word	.LC39
 6823 0fac 600A0000 		.word	.LC40
 6824 0fb0 780A0000 		.word	.LC41
 6825 0fb4 980A0000 		.word	.LC42
 6826 0fb8 B80A0000 		.word	.LC43
 6827 0fbc D00A0000 		.word	.LC44
 6828 0fc0 F00A0000 		.word	.LC45
 6829 0fc4 0C0B0000 		.word	.LC46
 6830 0fc8 280B0000 		.word	.LC47
 6831 0fcc 3C0B0000 		.word	.LC48
 6832 0fd0 500B0000 		.word	.LC49
 6833 0fd4 640B0000 		.word	.LC50
 6834 0fd8 800B0000 		.word	.LC51
 6835 0fdc 940B0000 		.word	.LC52
 6836 0fe0 AC0B0000 		.word	.LC53
 6837 0fe4 CC0B0000 		.word	.LC54
 6838 0fe8 E80B0000 		.word	.LC55
 6839 0fec FC0B0000 		.word	.LC56
 6840 0ff0 1C0C0000 		.word	.LC57
 6841 0ff4 380C0000 		.word	.LC58
 6842 0ff8 4C0C0000 		.word	.LC59
 6843 0ffc 640C0000 		.word	.LC60
 6844 1000 840C0000 		.word	.LC61
 6845 1004 980C0000 		.word	.LC62
 6846 1008 B00C0000 		.word	.LC63
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 163


 6847 100c C80C0000 		.word	.LC64
 6848 1010 E80C0000 		.word	.LC65
 6849 1014 080D0000 		.word	.LC66
 6850 1018 240D0000 		.word	.LC67
 6851 101c 400D0000 		.word	.LC68
 6852 1020 600D0000 		.word	.LC69
 6853 1024 780D0000 		.word	.LC70
 6854 1028 940D0000 		.word	.LC71
 6855 102c B00D0000 		.word	.LC72
 6856 1030 D00D0000 		.word	.LC73
 6857 1034 EC0D0000 		.word	.LC74
 6858 1038 040E0000 		.word	.LC75
 6859 103c 180E0000 		.word	.LC76
 6860 1040 300E0000 		.word	.LC77
 6861 1044 4C0E0000 		.word	.LC78
 6862 1048 640E0000 		.word	.LC79
 6863 104c 880E0000 		.word	.LC80
 6864 1050 980E0000 		.word	.LC81
 6865 1054 C00E0000 		.word	.LC82
 6866 1058 E80E0000 		.word	.LC83
 6867              		.align	2
 6868              	.LC85:
 6869 105c 03       		.byte	3
 6870 105d 01       		.byte	1
 6871 105e 02       		.byte	2
 6872 105f 03       		.byte	3
 6873 1060 03       		.byte	3
 6874 1061 03       		.byte	3
 6875 1062 03       		.byte	3
 6876 1063 03       		.byte	3
 6877 1064 03       		.byte	3
 6878 1065 04       		.byte	4
 6879 1066 05       		.byte	5
 6880 1067 06       		.byte	6
 6881 1068 03       		.byte	3
 6882 1069 07       		.byte	7
 6883 106a 08       		.byte	8
 6884 106b 09       		.byte	9
 6885 106c 03       		.byte	3
 6886 106d 05       		.byte	5
 6887 106e 03       		.byte	3
 6888 106f 01       		.byte	1
 6889 1070 02       		.byte	2
 6890 1071 03       		.byte	3
 6891 1072 03       		.byte	3
 6892 1073 03       		.byte	3
 6893 1074 09       		.byte	9
 6894 1075 03       		.byte	3
 6895 1076 05       		.byte	5
 6896 1077 03       		.byte	3
 6897 1078 0A       		.byte	10
 6898 1079 0B       		.byte	11
 6899 107a 0C       		.byte	12
 6900 107b 03       		.byte	3
 6901              		.align	2
 6902              	.LC86:
 6903 107c 02       		.byte	2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 164


 6904 107d 03       		.byte	3
 6905 107e 08       		.byte	8
 6906 107f 0B       		.byte	11
 6907 1080 17       		.byte	23
 6908 1081 2C       		.byte	44
 6909 1082 2D       		.byte	45
 6910 1083 32       		.byte	50
 6911 1084 35       		.byte	53
 6912 1085 000000   		.align	2
 6913              	.LC87:
 6914 1088 02       		.byte	2
 6915 1089 03       		.byte	3
 6916 108a 05       		.byte	5
 6917 108b 08       		.byte	8
 6918 108c 0B       		.byte	11
 6919 108d 17       		.byte	23
 6920 108e 18       		.byte	24
 6921 108f 1C       		.byte	28
 6922 1090 1F       		.byte	31
 6923 1091 20       		.byte	32
 6924 1092 26       		.byte	38
 6925 1093 2C       		.byte	44
 6926 1094 2D       		.byte	45
 6927 1095 2F       		.byte	47
 6928 1096 32       		.byte	50
 6929 1097 35       		.byte	53
 6930 1098 3D       		.byte	61
 6931 1099 4B       		.byte	75
 6932              		.section	.text.manage_param_list,"ax",%progbits
 6933              		.align	2
 6934              		.global	manage_param_list
 6935              		.thumb
 6936              		.thumb_func
 6937              		.type	manage_param_list, %function
 6938              	manage_param_list:
 6939              	.LFB68:
 893:..\src/command_processing.c **** 
 894:..\src/command_processing.c **** //==============================================================================
 895:..\src/command_processing.c **** //                                                             MANAGE PARAM LIST
 896:..\src/command_processing.c **** //==============================================================================
 897:..\src/command_processing.c **** 
 898:..\src/command_processing.c **** void manage_param_list(uint16 index) {
 6940              		.loc 1 898 0
 6941              		.cfi_startproc
 6942              		@ args = 0, pretend = 0, frame = 1416
 6943              		@ frame_needed = 1, uses_anonymous_args = 0
 6944 0000 B0B5     		push	{r4, r5, r7, lr}
 6945              		.cfi_def_cfa_offset 16
 6946              		.cfi_offset 4, -16
 6947              		.cfi_offset 5, -12
 6948              		.cfi_offset 7, -8
 6949              		.cfi_offset 14, -4
 6950 0002 ADF5B36D 		sub	sp, sp, #1432
 6951              		.cfi_def_cfa_offset 1448
 6952 0006 04AF     		add	r7, sp, #16
 6953              		.cfi_def_cfa 7, 1432
 6954 0008 0246     		mov	r2, r0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 165


 6955 000a BB1D     		adds	r3, r7, #6
 6956 000c 1A80     		strh	r2, [r3]	@ movhi
 899:..\src/command_processing.c ****     uint8 CYDATA i, j;
 900:..\src/command_processing.c ****     uint8 CYDATA sod;
 901:..\src/command_processing.c ****     uint8 PARAM_IDX;
 902:..\src/command_processing.c ****     int16 aux_int16;
 903:..\src/command_processing.c ****     uint16 aux_uint16;
 904:..\src/command_processing.c ****     int32 aux_int32;
 905:..\src/command_processing.c ****     uint32 aux_uint32;
 906:..\src/command_processing.c ****     float aux_float;
 907:..\src/command_processing.c ****  
 908:..\src/command_processing.c ****     uint8 MOTOR_IDX = 0;
 6957              		.loc 1 908 0
 6958 000e 0023     		movs	r3, #0
 6959 0010 87F87D35 		strb	r3, [r7, #1405]
 909:..\src/command_processing.c ****     uint8 SECOND_MOTOR_IDX = 1;
 6960              		.loc 1 909 0
 6961 0014 0123     		movs	r3, #1
 6962 0016 87F87C35 		strb	r3, [r7, #1404]
 910:..\src/command_processing.c ****     
 911:..\src/command_processing.c ****     // Arrays
 912:..\src/command_processing.c ****     struct st_eeprom* MEM_P = &c_mem;   // c_mem is used for param reading
 6963              		.loc 1 912 0
 6964 001a 054B     		ldr	r3, .L379
 6965 001c C7F88035 		str	r3, [r7, #1408]
 913:..\src/command_processing.c ****     
 914:..\src/command_processing.c ****     if (index){                         // Switch from c_mem to g_mem
 6966              		.loc 1 914 0
 6967 0020 BB1D     		adds	r3, r7, #6
 6968 0022 1B88     		ldrh	r3, [r3]
 6969 0024 002B     		cmp	r3, #0
 6970 0026 07D0     		beq	.L316
 915:..\src/command_processing.c ****         MEM_P = &g_mem;                 // g_mem is used for param setting
 6971              		.loc 1 915 0
 6972 0028 024B     		ldr	r3, .L379+4
 6973 002a C7F88035 		str	r3, [r7, #1408]
 6974 002e 03E0     		b	.L380
 6975              	.L381:
 6976              		.align	2
 6977              	.L379:
 6978 0030 00000000 		.word	c_mem
 6979 0034 00000000 		.word	g_mem
 6980              	.L380:
 6981              	.L316:
 916:..\src/command_processing.c ****     }
 917:..\src/command_processing.c ****  
 918:..\src/command_processing.c ****     
 919:..\src/command_processing.c **** //------------------ BEGIN OF PARAMETERS VARIABLES --------------------//    
 920:..\src/command_processing.c ****     uint8* VAR_P[NUM_OF_PARAMS] = { 
 921:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6982              		.loc 1 921 0
 6983 0038 D7F88035 		ldr	r3, [r7, #1408]
 6984 003c 03F1A002 		add	r2, r3, #160
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6985              		.loc 1 920 0
 6986 0040 07F21C43 		addw	r3, r7, #1052
 6987 0044 1A60     		str	r2, [r3]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 166


 922:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].k_p),
 6988              		.loc 1 922 0
 6989 0046 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 6990 004a 1346     		mov	r3, r2
 6991 004c DB00     		lsls	r3, r3, #3
 6992 004e 9B1A     		subs	r3, r3, r2
 6993 0050 1B01     		lsls	r3, r3, #4
 6994 0052 B033     		adds	r3, r3, #176
 6995 0054 D7F88025 		ldr	r2, [r7, #1408]
 6996 0058 1A44     		add	r2, r2, r3
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6997              		.loc 1 920 0
 6998 005a 07F21C43 		addw	r3, r7, #1052
 6999 005e 5A60     		str	r2, [r3, #4]
 923:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].k_p_c), 
 7000              		.loc 1 923 0
 7001 0060 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7002 0064 1346     		mov	r3, r2
 7003 0066 DB00     		lsls	r3, r3, #3
 7004 0068 9B1A     		subs	r3, r3, r2
 7005 006a 1B01     		lsls	r3, r3, #4
 7006 006c B833     		adds	r3, r3, #184
 7007 006e D7F88025 		ldr	r2, [r7, #1408]
 7008 0072 1344     		add	r3, r3, r2
 7009 0074 1A1D     		adds	r2, r3, #4
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7010              		.loc 1 920 0
 7011 0076 07F21C43 		addw	r3, r7, #1052
 7012 007a 9A60     		str	r2, [r3, #8]
 924:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].activ),
 7013              		.loc 1 924 0
 7014 007c 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7015 0080 1346     		mov	r3, r2
 7016 0082 DB00     		lsls	r3, r3, #3
 7017 0084 9B1A     		subs	r3, r3, r2
 7018 0086 1B01     		lsls	r3, r3, #4
 7019 0088 E033     		adds	r3, r3, #224
 7020 008a D7F88025 		ldr	r2, [r7, #1408]
 7021 008e 1A44     		add	r2, r2, r3
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7022              		.loc 1 920 0
 7023 0090 07F21C43 		addw	r3, r7, #1052
 7024 0094 DA60     		str	r2, [r3, #12]
 925:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].input_mode),
 7025              		.loc 1 925 0
 7026 0096 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7027 009a 1346     		mov	r3, r2
 7028 009c DB00     		lsls	r3, r3, #3
 7029 009e 9B1A     		subs	r3, r3, r2
 7030 00a0 1B01     		lsls	r3, r3, #4
 7031 00a2 03F58473 		add	r3, r3, #264
 7032 00a6 D7F88025 		ldr	r2, [r7, #1408]
 7033 00aa 1344     		add	r3, r3, r2
 7034 00ac 9A1D     		adds	r2, r3, #6
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7035              		.loc 1 920 0
 7036 00ae 07F21C43 		addw	r3, r7, #1052
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 167


 7037 00b2 1A61     		str	r2, [r3, #16]
 926:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].control_mode), 
 7038              		.loc 1 926 0
 7039 00b4 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7040 00b8 1346     		mov	r3, r2
 7041 00ba DB00     		lsls	r3, r3, #3
 7042 00bc 9B1A     		subs	r3, r3, r2
 7043 00be 1B01     		lsls	r3, r3, #4
 7044 00c0 03F58473 		add	r3, r3, #264
 7045 00c4 D7F88025 		ldr	r2, [r7, #1408]
 7046 00c8 1344     		add	r3, r3, r2
 7047 00ca DA1D     		adds	r2, r3, #7
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7048              		.loc 1 920 0
 7049 00cc 07F21C43 		addw	r3, r7, #1052
 7050 00d0 5A61     		str	r2, [r3, #20]
 927:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].res),
 7051              		.loc 1 927 0
 7052 00d2 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7053 00d6 D7F88015 		ldr	r1, [r7, #1408]
 7054 00da 1346     		mov	r3, r2
 7055 00dc DB00     		lsls	r3, r3, #3
 7056 00de 9B1A     		subs	r3, r3, r2
 7057 00e0 1B01     		lsls	r3, r3, #4
 7058 00e2 0B44     		add	r3, r3, r1
 7059 00e4 03F58873 		add	r3, r3, #272
 7060 00e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7061 00ea 1A46     		mov	r2, r3
 7062 00ec 1346     		mov	r3, r2
 7063 00ee 5B00     		lsls	r3, r3, #1
 7064 00f0 1344     		add	r3, r3, r2
 7065 00f2 1B01     		lsls	r3, r3, #4
 7066 00f4 03F5C873 		add	r3, r3, #400
 7067 00f8 D7F88025 		ldr	r2, [r7, #1408]
 7068 00fc 1344     		add	r3, r3, r2
 7069 00fe 5A1D     		adds	r2, r3, #5
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7070              		.loc 1 920 0
 7071 0100 07F21C43 		addw	r3, r7, #1052
 7072 0104 9A61     		str	r2, [r3, #24]
 928:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].m_off[0]),
 7073              		.loc 1 928 0
 7074 0106 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7075 010a D7F88015 		ldr	r1, [r7, #1408]
 7076 010e 1346     		mov	r3, r2
 7077 0110 DB00     		lsls	r3, r3, #3
 7078 0112 9B1A     		subs	r3, r3, r2
 7079 0114 1B01     		lsls	r3, r3, #4
 7080 0116 0B44     		add	r3, r3, r1
 7081 0118 03F58873 		add	r3, r3, #272
 7082 011c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7083 011e 1A46     		mov	r2, r3
 7084 0120 1346     		mov	r3, r2
 7085 0122 5B00     		lsls	r3, r3, #1
 7086 0124 1344     		add	r3, r3, r2
 7087 0126 1B01     		lsls	r3, r3, #4
 7088 0128 03F5CC73 		add	r3, r3, #408
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 168


 7089 012c D7F88025 		ldr	r2, [r7, #1408]
 7090 0130 1A44     		add	r2, r2, r3
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7091              		.loc 1 920 0
 7092 0132 07F21C43 		addw	r3, r7, #1052
 7093 0136 DA61     		str	r2, [r3, #28]
 929:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].m_mult[0]),
 7094              		.loc 1 929 0
 7095 0138 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7096 013c D7F88015 		ldr	r1, [r7, #1408]
 7097 0140 1346     		mov	r3, r2
 7098 0142 DB00     		lsls	r3, r3, #3
 7099 0144 9B1A     		subs	r3, r3, r2
 7100 0146 1B01     		lsls	r3, r3, #4
 7101 0148 0B44     		add	r3, r3, r1
 7102 014a 03F58873 		add	r3, r3, #272
 7103 014e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7104 0150 1A46     		mov	r2, r3
 7105 0152 1346     		mov	r3, r2
 7106 0154 5B00     		lsls	r3, r3, #1
 7107 0156 1344     		add	r3, r3, r2
 7108 0158 1B01     		lsls	r3, r3, #4
 7109 015a 03F5D073 		add	r3, r3, #416
 7110 015e D7F88025 		ldr	r2, [r7, #1408]
 7111 0162 1344     		add	r3, r3, r2
 7112 0164 1A1D     		adds	r2, r3, #4
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7113              		.loc 1 920 0
 7114 0166 07F21C43 		addw	r3, r7, #1052
 7115 016a 1A62     		str	r2, [r3, #32]
 930:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].pos_lim_flag),                                    //10
 7116              		.loc 1 930 0
 7117 016c 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7118 0170 1346     		mov	r3, r2
 7119 0172 DB00     		lsls	r3, r3, #3
 7120 0174 9B1A     		subs	r3, r3, r2
 7121 0176 1B01     		lsls	r3, r3, #4
 7122 0178 E033     		adds	r3, r3, #224
 7123 017a D7F88025 		ldr	r2, [r7, #1408]
 7124 017e 1344     		add	r3, r3, r2
 7125 0180 DA1C     		adds	r2, r3, #3
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7126              		.loc 1 920 0
 7127 0182 07F21C43 		addw	r3, r7, #1052
 7128 0186 5A62     		str	r2, [r3, #36]
 931:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].pos_lim_inf), 
 7129              		.loc 1 931 0
 7130 0188 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7131 018c 1346     		mov	r3, r2
 7132 018e DB00     		lsls	r3, r3, #3
 7133 0190 9B1A     		subs	r3, r3, r2
 7134 0192 1B01     		lsls	r3, r3, #4
 7135 0194 E033     		adds	r3, r3, #224
 7136 0196 D7F88025 		ldr	r2, [r7, #1408]
 7137 019a 1344     		add	r3, r3, r2
 7138 019c 1A1D     		adds	r2, r3, #4
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 169


 7139              		.loc 1 920 0
 7140 019e 07F21C43 		addw	r3, r7, #1052
 7141 01a2 9A62     		str	r2, [r3, #40]
 932:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].max_step_neg),
 7142              		.loc 1 932 0
 7143 01a4 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7144 01a8 1346     		mov	r3, r2
 7145 01aa DB00     		lsls	r3, r3, #3
 7146 01ac 9B1A     		subs	r3, r3, r2
 7147 01ae 1B01     		lsls	r3, r3, #4
 7148 01b0 E833     		adds	r3, r3, #232
 7149 01b2 D7F88025 		ldr	r2, [r7, #1408]
 7150 01b6 1344     		add	r3, r3, r2
 7151 01b8 1A1D     		adds	r2, r3, #4
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7152              		.loc 1 920 0
 7153 01ba 07F21C43 		addw	r3, r7, #1052
 7154 01be DA62     		str	r2, [r3, #44]
 933:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].current_limit),
 7155              		.loc 1 933 0
 7156 01c0 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7157 01c4 1346     		mov	r3, r2
 7158 01c6 DB00     		lsls	r3, r3, #3
 7159 01c8 9B1A     		subs	r3, r3, r2
 7160 01ca 1B01     		lsls	r3, r3, #4
 7161 01cc 03F58473 		add	r3, r3, #264
 7162 01d0 D7F88025 		ldr	r2, [r7, #1408]
 7163 01d4 1344     		add	r3, r3, r2
 7164 01d6 1A1D     		adds	r2, r3, #4
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7165              		.loc 1 920 0
 7166 01d8 07F21C43 		addw	r3, r7, #1052
 7167 01dc 1A63     		str	r2, [r3, #48]
 934:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.emg_threshold[0]),
 7168              		.loc 1 934 0
 7169 01de D7F88035 		ldr	r3, [r7, #1408]
 7170 01e2 03F5F872 		add	r2, r3, #496
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7171              		.loc 1 920 0
 7172 01e6 07F21C43 		addw	r3, r7, #1052
 7173 01ea 5A63     		str	r2, [r3, #52]
 935:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.emg_calibration_flag),
 7174              		.loc 1 935 0
 7175 01ec D7F88035 		ldr	r3, [r7, #1408]
 7176 01f0 03F5FF72 		add	r2, r3, #510
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7177              		.loc 1 920 0
 7178 01f4 07F21C43 		addw	r3, r7, #1052
 7179 01f8 9A63     		str	r2, [r3, #56]
 936:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.emg_max_value[0]),
 7180              		.loc 1 936 0
 7181 01fa D7F88035 		ldr	r3, [r7, #1408]
 7182 01fe 03F5FA72 		add	r2, r3, #500
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7183              		.loc 1 920 0
 7184 0202 07F21C43 		addw	r3, r7, #1052
 7185 0206 DA63     		str	r2, [r3, #60]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 170


 937:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.emg_speed[0]), 
 7186              		.loc 1 937 0
 7187 0208 D7F88035 		ldr	r3, [r7, #1408]
 7188 020c 03F5FE72 		add	r2, r3, #508
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7189              		.loc 1 920 0
 7190 0210 07F21C43 		addw	r3, r7, #1052
 7191 0214 1A64     		str	r2, [r3, #64]
 938:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].double_encoder_on_off),
 7192              		.loc 1 938 0
 7193 0216 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7194 021a D7F88015 		ldr	r1, [r7, #1408]
 7195 021e 1346     		mov	r3, r2
 7196 0220 DB00     		lsls	r3, r3, #3
 7197 0222 9B1A     		subs	r3, r3, r2
 7198 0224 1B01     		lsls	r3, r3, #4
 7199 0226 0B44     		add	r3, r3, r1
 7200 0228 03F58873 		add	r3, r3, #272
 7201 022c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7202 022e 1A46     		mov	r2, r3
 7203 0230 1346     		mov	r3, r2
 7204 0232 5B00     		lsls	r3, r3, #1
 7205 0234 1344     		add	r3, r3, r2
 7206 0236 1B01     		lsls	r3, r3, #4
 7207 0238 03F5D873 		add	r3, r3, #432
 7208 023c D7F88025 		ldr	r2, [r7, #1408]
 7209 0240 1A44     		add	r2, r2, r3
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7210              		.loc 1 920 0
 7211 0242 07F21C43 		addw	r3, r7, #1052
 7212 0246 5A64     		str	r2, [r3, #68]
 939:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].motor_handle_ratio),
 7213              		.loc 1 939 0
 7214 0248 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7215 024c D7F88015 		ldr	r1, [r7, #1408]
 7216 0250 1346     		mov	r3, r2
 7217 0252 DB00     		lsls	r3, r3, #3
 7218 0254 9B1A     		subs	r3, r3, r2
 7219 0256 1B01     		lsls	r3, r3, #4
 7220 0258 0B44     		add	r3, r3, r1
 7221 025a 03F58873 		add	r3, r3, #272
 7222 025e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7223 0260 1A46     		mov	r2, r3
 7224 0262 1346     		mov	r3, r2
 7225 0264 5B00     		lsls	r3, r3, #1
 7226 0266 1344     		add	r3, r3, r2
 7227 0268 1B01     		lsls	r3, r3, #4
 7228 026a 03F5D873 		add	r3, r3, #432
 7229 026e D7F88025 		ldr	r2, [r7, #1408]
 7230 0272 1344     		add	r3, r3, r2
 7231 0274 1A1D     		adds	r2, r3, #4
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7232              		.loc 1 920 0
 7233 0276 07F21C43 		addw	r3, r7, #1052
 7234 027a 9A64     		str	r2, [r3, #72]
 940:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].activate_pwm_rescaling),                          //20
 7235              		.loc 1 940 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 171


 7236 027c 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7237 0280 1346     		mov	r3, r2
 7238 0282 DB00     		lsls	r3, r3, #3
 7239 0284 9B1A     		subs	r3, r3, r2
 7240 0286 1B01     		lsls	r3, r3, #4
 7241 0288 E033     		adds	r3, r3, #224
 7242 028a D7F88025 		ldr	r2, [r7, #1408]
 7243 028e 1344     		add	r3, r3, r2
 7244 0290 5A1C     		adds	r2, r3, #1
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7245              		.loc 1 920 0
 7246 0292 07F21C43 		addw	r3, r7, #1052
 7247 0296 DA64     		str	r2, [r3, #76]
 941:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].curr_lookup[0]),
 7248              		.loc 1 941 0
 7249 0298 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7250 029c 1346     		mov	r3, r2
 7251 029e DB00     		lsls	r3, r3, #3
 7252 02a0 9B1A     		subs	r3, r3, r2
 7253 02a2 1B01     		lsls	r3, r3, #4
 7254 02a4 F033     		adds	r3, r3, #240
 7255 02a6 D7F88025 		ldr	r2, [r7, #1408]
 7256 02aa 1344     		add	r3, r3, r2
 7257 02ac 1A1D     		adds	r2, r3, #4
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7258              		.loc 1 920 0
 7259 02ae 07F21C43 		addw	r3, r7, #1052
 7260 02b2 1A65     		str	r2, [r3, #80]
 942:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.hw_maint_date),
 7261              		.loc 1 942 0
 7262 02b4 D7F88035 		ldr	r3, [r7, #1408]
 7263 02b8 03F1A102 		add	r2, r3, #161
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7264              		.loc 1 920 0
 7265 02bc 07F21C43 		addw	r3, r7, #1052
 7266 02c0 5A65     		str	r2, [r3, #84]
 943:..\src/command_processing.c ****     	(uint8*)&(MEM_P->SH.rest_pos), 
 7267              		.loc 1 943 0
 7268 02c2 D7F88035 		ldr	r3, [r7, #1408]
 7269 02c6 03F52872 		add	r2, r3, #672
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7270              		.loc 1 920 0
 7271 02ca 07F21C43 		addw	r3, r7, #1052
 7272 02ce 9A65     		str	r2, [r3, #88]
 944:..\src/command_processing.c ****     	(uint8*)&(MEM_P->SH.rest_delay),
 7273              		.loc 1 944 0
 7274 02d0 D7F88035 		ldr	r3, [r7, #1408]
 7275 02d4 03F52972 		add	r2, r3, #676
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7276              		.loc 1 920 0
 7277 02d8 07F21C43 		addw	r3, r7, #1052
 7278 02dc DA65     		str	r2, [r3, #92]
 945:..\src/command_processing.c ****     	(uint8*)&(MEM_P->SH.rest_vel),
 7279              		.loc 1 945 0
 7280 02de D7F88035 		ldr	r3, [r7, #1408]
 7281 02e2 03F52A72 		add	r2, r3, #680
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 172


 7282              		.loc 1 920 0
 7283 02e6 07F21C43 		addw	r3, r7, #1052
 7284 02ea 1A66     		str	r2, [r3, #96]
 946:..\src/command_processing.c ****     	(uint8*)&(MEM_P->SH.rest_position_flag),
 7285              		.loc 1 946 0
 7286 02ec D7F88035 		ldr	r3, [r7, #1408]
 7287 02f0 03F52B72 		add	r2, r3, #684
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7288              		.loc 1 920 0
 7289 02f4 07F21C43 		addw	r3, r7, #1052
 7290 02f8 5A66     		str	r2, [r3, #100]
 947:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.switch_emg), 
 7291              		.loc 1 947 0
 7292 02fa D7F88035 		ldr	r3, [r7, #1408]
 7293 02fe 03F2FF12 		addw	r2, r3, #511
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7294              		.loc 1 920 0
 7295 0302 07F21C43 		addw	r3, r7, #1052
 7296 0306 9A66     		str	r2, [r3, #104]
 948:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.right_left),
 7297              		.loc 1 948 0
 7298 0308 D7F88035 		ldr	r3, [r7, #1408]
 7299 030c 03F1A702 		add	r2, r3, #167
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7300              		.loc 1 920 0
 7301 0310 07F21C43 		addw	r3, r7, #1052
 7302 0314 DA66     		str	r2, [r3, #108]
 949:..\src/command_processing.c ****     	(uint8*)&(MEM_P->imu.read_imu_flag),
 7303              		.loc 1 949 0
 7304 0316 D7F88035 		ldr	r3, [r7, #1408]
 7305 031a 03F50072 		add	r2, r3, #512
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7306              		.loc 1 920 0
 7307 031e 07F21C43 		addw	r3, r7, #1052
 7308 0322 1A67     		str	r2, [r3, #112]
 950:..\src/command_processing.c ****     	(uint8*)&(MEM_P->exp.read_exp_port_flag),                                   //30
 7309              		.loc 1 950 0
 7310 0324 D7F88035 		ldr	r3, [r7, #1408]
 7311 0328 03F22622 		addw	r2, r3, #550
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7312              		.loc 1 920 0
 7313 032c 07F21C43 		addw	r3, r7, #1052
 7314 0330 5A67     		str	r2, [r3, #116]
 951:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.reset_counters),
 7315              		.loc 1 951 0
 7316 0332 D7F88035 		ldr	r3, [r7, #1408]
 7317 0336 03F1A802 		add	r2, r3, #168
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7318              		.loc 1 920 0
 7319 033a 07F21C43 		addw	r3, r7, #1052
 7320 033e 9A67     		str	r2, [r3, #120]
 952:..\src/command_processing.c ****     	(uint8*)&(MEM_P->exp.curr_time[0]),
 7321              		.loc 1 952 0
 7322 0340 D7F88035 		ldr	r3, [r7, #1408]
 7323 0344 03F50872 		add	r2, r3, #544
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7324              		.loc 1 920 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 173


 7325 0348 07F21C43 		addw	r3, r7, #1052
 7326 034c DA67     		str	r2, [r3, #124]
 953:..\src/command_processing.c ****     	(uint8*)&(MEM_P->imu.SPI_read_delay),
 7327              		.loc 1 953 0
 7328 034e D7F88035 		ldr	r3, [r7, #1408]
 7329 0352 03F20122 		addw	r2, r3, #513
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7330              		.loc 1 920 0
 7331 0356 07F21C43 		addw	r3, r7, #1052
 7332 035a C3F88020 		str	r2, [r3, #128]
 954:..\src/command_processing.c ****     	(uint8*)&(MEM_P->imu.IMU_conf[0][0]),
 7333              		.loc 1 954 0
 7334 035e D7F88035 		ldr	r3, [r7, #1408]
 7335 0362 03F20222 		addw	r2, r3, #514
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7336              		.loc 1 920 0
 7337 0366 07F21C43 		addw	r3, r7, #1052
 7338 036a C3F88420 		str	r2, [r3, #132]
 955:..\src/command_processing.c ****         (uint8*)&(MEM_P->dev.user_id),
 7339              		.loc 1 955 0
 7340 036e D7F88035 		ldr	r3, [r7, #1408]
 7341 0372 03F1AB02 		add	r2, r3, #171
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7342              		.loc 1 920 0
 7343 0376 07F21C43 		addw	r3, r7, #1052
 7344 037a C3F88820 		str	r2, [r3, #136]
 956:..\src/command_processing.c ****         (uint8*)&(MEM_P->user[MEM_P->dev.user_id].user_code_string),
 7345              		.loc 1 956 0
 7346 037e D7F88035 		ldr	r3, [r7, #1408]
 7347 0382 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 7348 0386 1233     		adds	r3, r3, #18
 7349 0388 5B01     		lsls	r3, r3, #5
 7350 038a D7F88025 		ldr	r2, [r7, #1408]
 7351 038e 1A44     		add	r2, r2, r3
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7352              		.loc 1 920 0
 7353 0390 07F21C43 		addw	r3, r7, #1052
 7354 0394 C3F88C20 		str	r2, [r3, #140]
 957:..\src/command_processing.c ****         
 958:..\src/command_processing.c ****         // GENERIC PARAMS
 959:..\src/command_processing.c **** 		(uint8*)&(MEM_P->motor[MOTOR_IDX].encoder_line),			// other params of 1st motor
 7355              		.loc 1 959 0
 7356 0398 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7357 039c 1346     		mov	r3, r2
 7358 039e DB00     		lsls	r3, r3, #3
 7359 03a0 9B1A     		subs	r3, r3, r2
 7360 03a2 1B01     		lsls	r3, r3, #4
 7361 03a4 03F58873 		add	r3, r3, #272
 7362 03a8 D7F88025 		ldr	r2, [r7, #1408]
 7363 03ac 1A44     		add	r2, r2, r3
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7364              		.loc 1 920 0
 7365 03ae 07F21C43 		addw	r3, r7, #1052
 7366 03b2 C3F89020 		str	r2, [r3, #144]
 960:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].motor_pwm_frequency),
 7367              		.loc 1 960 0
 7368 03b6 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 174


 7369 03ba 1346     		mov	r3, r2
 7370 03bc DB00     		lsls	r3, r3, #3
 7371 03be 9B1A     		subs	r3, r3, r2
 7372 03c0 1B01     		lsls	r3, r3, #4
 7373 03c2 E033     		adds	r3, r3, #224
 7374 03c4 D7F88025 		ldr	r2, [r7, #1408]
 7375 03c8 1344     		add	r3, r3, r2
 7376 03ca 9A1C     		adds	r2, r3, #2
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7377              		.loc 1 920 0
 7378 03cc 07F21C43 		addw	r3, r7, #1052
 7379 03d0 C3F89420 		str	r2, [r3, #148]
 961:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[MOTOR_IDX].pwm_rate_limiter),
 7380              		.loc 1 961 0
 7381 03d4 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7382 03d8 1346     		mov	r3, r2
 7383 03da DB00     		lsls	r3, r3, #3
 7384 03dc 9B1A     		subs	r3, r3, r2
 7385 03de 1B01     		lsls	r3, r3, #4
 7386 03e0 03F58873 		add	r3, r3, #272
 7387 03e4 D7F88025 		ldr	r2, [r7, #1408]
 7388 03e8 1344     		add	r3, r3, r2
 7389 03ea 5A1C     		adds	r2, r3, #1
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7390              		.loc 1 920 0
 7391 03ec 07F21C43 		addw	r3, r7, #1052
 7392 03f0 C3F89820 		str	r2, [r3, #152]
 962:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[MOTOR_IDX].not_revers_motor_flag), 	//40 
 7393              		.loc 1 962 0
 7394 03f4 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7395 03f8 1346     		mov	r3, r2
 7396 03fa DB00     		lsls	r3, r3, #3
 7397 03fc 9B1A     		subs	r3, r3, r2
 7398 03fe 1B01     		lsls	r3, r3, #4
 7399 0400 03F58873 		add	r3, r3, #272
 7400 0404 D7F88025 		ldr	r2, [r7, #1408]
 7401 0408 1344     		add	r3, r3, r2
 7402 040a 9A1C     		adds	r2, r3, #2
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7403              		.loc 1 920 0
 7404 040c 07F21C43 		addw	r3, r7, #1052
 7405 0410 C3F89C20 		str	r2, [r3, #156]
 963:..\src/command_processing.c ****         (uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].Enc_idx_use_for_control),
 7406              		.loc 1 963 0
 7407 0414 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7408 0418 D7F88015 		ldr	r1, [r7, #1408]
 7409 041c 1346     		mov	r3, r2
 7410 041e DB00     		lsls	r3, r3, #3
 7411 0420 9B1A     		subs	r3, r3, r2
 7412 0422 1B01     		lsls	r3, r3, #4
 7413 0424 0B44     		add	r3, r3, r1
 7414 0426 03F58873 		add	r3, r3, #272
 7415 042a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7416 042c 1A46     		mov	r2, r3
 7417 042e 1346     		mov	r3, r2
 7418 0430 5B00     		lsls	r3, r3, #1
 7419 0432 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 175


 7420 0434 1B01     		lsls	r3, r3, #4
 7421 0436 03F5D873 		add	r3, r3, #432
 7422 043a D7F88025 		ldr	r2, [r7, #1408]
 7423 043e 1344     		add	r3, r3, r2
 7424 0440 5A1C     		adds	r2, r3, #1
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7425              		.loc 1 920 0
 7426 0442 07F21C43 		addw	r3, r7, #1052
 7427 0446 C3F8A020 		str	r2, [r3, #160]
 964:..\src/command_processing.c ****         (uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].gears_params),        
 7428              		.loc 1 964 0
 7429 044a 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7430 044e D7F88015 		ldr	r1, [r7, #1408]
 7431 0452 1346     		mov	r3, r2
 7432 0454 DB00     		lsls	r3, r3, #3
 7433 0456 9B1A     		subs	r3, r3, r2
 7434 0458 1B01     		lsls	r3, r3, #4
 7435 045a 0B44     		add	r3, r3, r1
 7436 045c 03F58873 		add	r3, r3, #272
 7437 0460 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7438 0462 1A46     		mov	r2, r3
 7439 0464 1346     		mov	r3, r2
 7440 0466 5B00     		lsls	r3, r3, #1
 7441 0468 1344     		add	r3, r3, r2
 7442 046a 1B01     		lsls	r3, r3, #4
 7443 046c 03F5D873 		add	r3, r3, #432
 7444 0470 D7F88025 		ldr	r2, [r7, #1408]
 7445 0474 1344     		add	r3, r3, r2
 7446 0476 5A1D     		adds	r2, r3, #5
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7447              		.loc 1 920 0
 7448 0478 07F21C43 		addw	r3, r7, #1052
 7449 047c C3F8A420 		str	r2, [r3, #164]
 965:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.use_2nd_motor_flag),					// second motor config and params
 7450              		.loc 1 965 0
 7451 0480 D7F88035 		ldr	r3, [r7, #1408]
 7452 0484 03F1A902 		add	r2, r3, #169
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7453              		.loc 1 920 0
 7454 0488 07F21C43 		addw	r3, r7, #1052
 7455 048c C3F8A820 		str	r2, [r3, #168]
 966:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].k_p),
 7456              		.loc 1 966 0
 7457 0490 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7458 0494 1346     		mov	r3, r2
 7459 0496 DB00     		lsls	r3, r3, #3
 7460 0498 9B1A     		subs	r3, r3, r2
 7461 049a 1B01     		lsls	r3, r3, #4
 7462 049c B033     		adds	r3, r3, #176
 7463 049e D7F88025 		ldr	r2, [r7, #1408]
 7464 04a2 1A44     		add	r2, r2, r3
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7465              		.loc 1 920 0
 7466 04a4 07F21C43 		addw	r3, r7, #1052
 7467 04a8 C3F8AC20 		str	r2, [r3, #172]
 967:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].k_p_c), 
 7468              		.loc 1 967 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 176


 7469 04ac 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7470 04b0 1346     		mov	r3, r2
 7471 04b2 DB00     		lsls	r3, r3, #3
 7472 04b4 9B1A     		subs	r3, r3, r2
 7473 04b6 1B01     		lsls	r3, r3, #4
 7474 04b8 B833     		adds	r3, r3, #184
 7475 04ba D7F88025 		ldr	r2, [r7, #1408]
 7476 04be 1344     		add	r3, r3, r2
 7477 04c0 1A1D     		adds	r2, r3, #4
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7478              		.loc 1 920 0
 7479 04c2 07F21C43 		addw	r3, r7, #1052
 7480 04c6 C3F8B020 		str	r2, [r3, #176]
 968:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].activ),
 7481              		.loc 1 968 0
 7482 04ca 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7483 04ce 1346     		mov	r3, r2
 7484 04d0 DB00     		lsls	r3, r3, #3
 7485 04d2 9B1A     		subs	r3, r3, r2
 7486 04d4 1B01     		lsls	r3, r3, #4
 7487 04d6 E033     		adds	r3, r3, #224
 7488 04d8 D7F88025 		ldr	r2, [r7, #1408]
 7489 04dc 1A44     		add	r2, r2, r3
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7490              		.loc 1 920 0
 7491 04de 07F21C43 		addw	r3, r7, #1052
 7492 04e2 C3F8B420 		str	r2, [r3, #180]
 969:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].input_mode),
 7493              		.loc 1 969 0
 7494 04e6 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7495 04ea 1346     		mov	r3, r2
 7496 04ec DB00     		lsls	r3, r3, #3
 7497 04ee 9B1A     		subs	r3, r3, r2
 7498 04f0 1B01     		lsls	r3, r3, #4
 7499 04f2 03F58473 		add	r3, r3, #264
 7500 04f6 D7F88025 		ldr	r2, [r7, #1408]
 7501 04fa 1344     		add	r3, r3, r2
 7502 04fc 9A1D     		adds	r2, r3, #6
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7503              		.loc 1 920 0
 7504 04fe 07F21C43 		addw	r3, r7, #1052
 7505 0502 C3F8B820 		str	r2, [r3, #184]
 970:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].control_mode), 
 7506              		.loc 1 970 0
 7507 0506 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7508 050a 1346     		mov	r3, r2
 7509 050c DB00     		lsls	r3, r3, #3
 7510 050e 9B1A     		subs	r3, r3, r2
 7511 0510 1B01     		lsls	r3, r3, #4
 7512 0512 03F58473 		add	r3, r3, #264
 7513 0516 D7F88025 		ldr	r2, [r7, #1408]
 7514 051a 1344     		add	r3, r3, r2
 7515 051c DA1D     		adds	r2, r3, #7
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7516              		.loc 1 920 0
 7517 051e 07F21C43 		addw	r3, r7, #1052
 7518 0522 C3F8BC20 		str	r2, [r3, #188]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 177


 971:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].res),
 7519              		.loc 1 971 0
 7520 0526 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7521 052a D7F88015 		ldr	r1, [r7, #1408]
 7522 052e 1346     		mov	r3, r2
 7523 0530 DB00     		lsls	r3, r3, #3
 7524 0532 9B1A     		subs	r3, r3, r2
 7525 0534 1B01     		lsls	r3, r3, #4
 7526 0536 0B44     		add	r3, r3, r1
 7527 0538 03F58873 		add	r3, r3, #272
 7528 053c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7529 053e 1A46     		mov	r2, r3
 7530 0540 1346     		mov	r3, r2
 7531 0542 5B00     		lsls	r3, r3, #1
 7532 0544 1344     		add	r3, r3, r2
 7533 0546 1B01     		lsls	r3, r3, #4
 7534 0548 03F5C873 		add	r3, r3, #400
 7535 054c D7F88025 		ldr	r2, [r7, #1408]
 7536 0550 1344     		add	r3, r3, r2
 7537 0552 5A1D     		adds	r2, r3, #5
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7538              		.loc 1 920 0
 7539 0554 07F21C43 		addw	r3, r7, #1052
 7540 0558 C3F8C020 		str	r2, [r3, #192]
 972:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].m_off[0]),    //50
 7541              		.loc 1 972 0
 7542 055c 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7543 0560 D7F88015 		ldr	r1, [r7, #1408]
 7544 0564 1346     		mov	r3, r2
 7545 0566 DB00     		lsls	r3, r3, #3
 7546 0568 9B1A     		subs	r3, r3, r2
 7547 056a 1B01     		lsls	r3, r3, #4
 7548 056c 0B44     		add	r3, r3, r1
 7549 056e 03F58873 		add	r3, r3, #272
 7550 0572 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7551 0574 1A46     		mov	r2, r3
 7552 0576 1346     		mov	r3, r2
 7553 0578 5B00     		lsls	r3, r3, #1
 7554 057a 1344     		add	r3, r3, r2
 7555 057c 1B01     		lsls	r3, r3, #4
 7556 057e 03F5CC73 		add	r3, r3, #408
 7557 0582 D7F88025 		ldr	r2, [r7, #1408]
 7558 0586 1A44     		add	r2, r2, r3
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7559              		.loc 1 920 0
 7560 0588 07F21C43 		addw	r3, r7, #1052
 7561 058c C3F8C420 		str	r2, [r3, #196]
 973:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].m_mult[0]),
 7562              		.loc 1 973 0
 7563 0590 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7564 0594 D7F88015 		ldr	r1, [r7, #1408]
 7565 0598 1346     		mov	r3, r2
 7566 059a DB00     		lsls	r3, r3, #3
 7567 059c 9B1A     		subs	r3, r3, r2
 7568 059e 1B01     		lsls	r3, r3, #4
 7569 05a0 0B44     		add	r3, r3, r1
 7570 05a2 03F58873 		add	r3, r3, #272
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 178


 7571 05a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7572 05a8 1A46     		mov	r2, r3
 7573 05aa 1346     		mov	r3, r2
 7574 05ac 5B00     		lsls	r3, r3, #1
 7575 05ae 1344     		add	r3, r3, r2
 7576 05b0 1B01     		lsls	r3, r3, #4
 7577 05b2 03F5D073 		add	r3, r3, #416
 7578 05b6 D7F88025 		ldr	r2, [r7, #1408]
 7579 05ba 1344     		add	r3, r3, r2
 7580 05bc 1A1D     		adds	r2, r3, #4
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7581              		.loc 1 920 0
 7582 05be 07F21C43 		addw	r3, r7, #1052
 7583 05c2 C3F8C820 		str	r2, [r3, #200]
 974:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].pos_lim_flag),
 7584              		.loc 1 974 0
 7585 05c6 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7586 05ca 1346     		mov	r3, r2
 7587 05cc DB00     		lsls	r3, r3, #3
 7588 05ce 9B1A     		subs	r3, r3, r2
 7589 05d0 1B01     		lsls	r3, r3, #4
 7590 05d2 E033     		adds	r3, r3, #224
 7591 05d4 D7F88025 		ldr	r2, [r7, #1408]
 7592 05d8 1344     		add	r3, r3, r2
 7593 05da DA1C     		adds	r2, r3, #3
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7594              		.loc 1 920 0
 7595 05dc 07F21C43 		addw	r3, r7, #1052
 7596 05e0 C3F8CC20 		str	r2, [r3, #204]
 975:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].pos_lim_inf), 
 7597              		.loc 1 975 0
 7598 05e4 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7599 05e8 1346     		mov	r3, r2
 7600 05ea DB00     		lsls	r3, r3, #3
 7601 05ec 9B1A     		subs	r3, r3, r2
 7602 05ee 1B01     		lsls	r3, r3, #4
 7603 05f0 E033     		adds	r3, r3, #224
 7604 05f2 D7F88025 		ldr	r2, [r7, #1408]
 7605 05f6 1344     		add	r3, r3, r2
 7606 05f8 1A1D     		adds	r2, r3, #4
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7607              		.loc 1 920 0
 7608 05fa 07F21C43 		addw	r3, r7, #1052
 7609 05fe C3F8D020 		str	r2, [r3, #208]
 976:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].max_step_neg),
 7610              		.loc 1 976 0
 7611 0602 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7612 0606 1346     		mov	r3, r2
 7613 0608 DB00     		lsls	r3, r3, #3
 7614 060a 9B1A     		subs	r3, r3, r2
 7615 060c 1B01     		lsls	r3, r3, #4
 7616 060e E833     		adds	r3, r3, #232
 7617 0610 D7F88025 		ldr	r2, [r7, #1408]
 7618 0614 1344     		add	r3, r3, r2
 7619 0616 1A1D     		adds	r2, r3, #4
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7620              		.loc 1 920 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 179


 7621 0618 07F21C43 		addw	r3, r7, #1052
 7622 061c C3F8D420 		str	r2, [r3, #212]
 977:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].current_limit),
 7623              		.loc 1 977 0
 7624 0620 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7625 0624 1346     		mov	r3, r2
 7626 0626 DB00     		lsls	r3, r3, #3
 7627 0628 9B1A     		subs	r3, r3, r2
 7628 062a 1B01     		lsls	r3, r3, #4
 7629 062c 03F58473 		add	r3, r3, #264
 7630 0630 D7F88025 		ldr	r2, [r7, #1408]
 7631 0634 1344     		add	r3, r3, r2
 7632 0636 1A1D     		adds	r2, r3, #4
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7633              		.loc 1 920 0
 7634 0638 07F21C43 		addw	r3, r7, #1052
 7635 063c C3F8D820 		str	r2, [r3, #216]
 978:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].double_encoder_on_off),
 7636              		.loc 1 978 0
 7637 0640 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7638 0644 D7F88015 		ldr	r1, [r7, #1408]
 7639 0648 1346     		mov	r3, r2
 7640 064a DB00     		lsls	r3, r3, #3
 7641 064c 9B1A     		subs	r3, r3, r2
 7642 064e 1B01     		lsls	r3, r3, #4
 7643 0650 0B44     		add	r3, r3, r1
 7644 0652 03F58873 		add	r3, r3, #272
 7645 0656 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7646 0658 1A46     		mov	r2, r3
 7647 065a 1346     		mov	r3, r2
 7648 065c 5B00     		lsls	r3, r3, #1
 7649 065e 1344     		add	r3, r3, r2
 7650 0660 1B01     		lsls	r3, r3, #4
 7651 0662 03F5D873 		add	r3, r3, #432
 7652 0666 D7F88025 		ldr	r2, [r7, #1408]
 7653 066a 1A44     		add	r2, r2, r3
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7654              		.loc 1 920 0
 7655 066c 07F21C43 		addw	r3, r7, #1052
 7656 0670 C3F8DC20 		str	r2, [r3, #220]
 979:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].motor_handle_ratio),
 7657              		.loc 1 979 0
 7658 0674 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7659 0678 D7F88015 		ldr	r1, [r7, #1408]
 7660 067c 1346     		mov	r3, r2
 7661 067e DB00     		lsls	r3, r3, #3
 7662 0680 9B1A     		subs	r3, r3, r2
 7663 0682 1B01     		lsls	r3, r3, #4
 7664 0684 0B44     		add	r3, r3, r1
 7665 0686 03F58873 		add	r3, r3, #272
 7666 068a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7667 068c 1A46     		mov	r2, r3
 7668 068e 1346     		mov	r3, r2
 7669 0690 5B00     		lsls	r3, r3, #1
 7670 0692 1344     		add	r3, r3, r2
 7671 0694 1B01     		lsls	r3, r3, #4
 7672 0696 03F5D873 		add	r3, r3, #432
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 180


 7673 069a D7F88025 		ldr	r2, [r7, #1408]
 7674 069e 1344     		add	r3, r3, r2
 7675 06a0 1A1D     		adds	r2, r3, #4
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7676              		.loc 1 920 0
 7677 06a2 07F21C43 		addw	r3, r7, #1052
 7678 06a6 C3F8E020 		str	r2, [r3, #224]
 980:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].activate_pwm_rescaling),
 7679              		.loc 1 980 0
 7680 06aa 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7681 06ae 1346     		mov	r3, r2
 7682 06b0 DB00     		lsls	r3, r3, #3
 7683 06b2 9B1A     		subs	r3, r3, r2
 7684 06b4 1B01     		lsls	r3, r3, #4
 7685 06b6 E033     		adds	r3, r3, #224
 7686 06b8 D7F88025 		ldr	r2, [r7, #1408]
 7687 06bc 1344     		add	r3, r3, r2
 7688 06be 5A1C     		adds	r2, r3, #1
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7689              		.loc 1 920 0
 7690 06c0 07F21C43 		addw	r3, r7, #1052
 7691 06c4 C3F8E420 		str	r2, [r3, #228]
 981:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].curr_lookup[0]),
 7692              		.loc 1 981 0
 7693 06c8 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7694 06cc 1346     		mov	r3, r2
 7695 06ce DB00     		lsls	r3, r3, #3
 7696 06d0 9B1A     		subs	r3, r3, r2
 7697 06d2 1B01     		lsls	r3, r3, #4
 7698 06d4 F033     		adds	r3, r3, #240
 7699 06d6 D7F88025 		ldr	r2, [r7, #1408]
 7700 06da 1344     		add	r3, r3, r2
 7701 06dc 1A1D     		adds	r2, r3, #4
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7702              		.loc 1 920 0
 7703 06de 07F21C43 		addw	r3, r7, #1052
 7704 06e2 C3F8E820 		str	r2, [r3, #232]
 982:..\src/command_processing.c **** 		(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].encoder_line),         //60
 7705              		.loc 1 982 0
 7706 06e6 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7707 06ea 1346     		mov	r3, r2
 7708 06ec DB00     		lsls	r3, r3, #3
 7709 06ee 9B1A     		subs	r3, r3, r2
 7710 06f0 1B01     		lsls	r3, r3, #4
 7711 06f2 03F58873 		add	r3, r3, #272
 7712 06f6 D7F88025 		ldr	r2, [r7, #1408]
 7713 06fa 1A44     		add	r2, r2, r3
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7714              		.loc 1 920 0
 7715 06fc 07F21C43 		addw	r3, r7, #1052
 7716 0700 C3F8EC20 		str	r2, [r3, #236]
 983:..\src/command_processing.c **** 		(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].motor_pwm_frequency),
 7717              		.loc 1 983 0
 7718 0704 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7719 0708 1346     		mov	r3, r2
 7720 070a DB00     		lsls	r3, r3, #3
 7721 070c 9B1A     		subs	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 181


 7722 070e 1B01     		lsls	r3, r3, #4
 7723 0710 E033     		adds	r3, r3, #224
 7724 0712 D7F88025 		ldr	r2, [r7, #1408]
 7725 0716 1344     		add	r3, r3, r2
 7726 0718 9A1C     		adds	r2, r3, #2
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7727              		.loc 1 920 0
 7728 071a 07F21C43 		addw	r3, r7, #1052
 7729 071e C3F8F020 		str	r2, [r3, #240]
 984:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].pwm_rate_limiter),
 7730              		.loc 1 984 0
 7731 0722 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7732 0726 1346     		mov	r3, r2
 7733 0728 DB00     		lsls	r3, r3, #3
 7734 072a 9B1A     		subs	r3, r3, r2
 7735 072c 1B01     		lsls	r3, r3, #4
 7736 072e 03F58873 		add	r3, r3, #272
 7737 0732 D7F88025 		ldr	r2, [r7, #1408]
 7738 0736 1344     		add	r3, r3, r2
 7739 0738 5A1C     		adds	r2, r3, #1
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7740              		.loc 1 920 0
 7741 073a 07F21C43 		addw	r3, r7, #1052
 7742 073e C3F8F420 		str	r2, [r3, #244]
 985:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].not_revers_motor_flag),
 7743              		.loc 1 985 0
 7744 0742 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7745 0746 1346     		mov	r3, r2
 7746 0748 DB00     		lsls	r3, r3, #3
 7747 074a 9B1A     		subs	r3, r3, r2
 7748 074c 1B01     		lsls	r3, r3, #4
 7749 074e 03F58873 		add	r3, r3, #272
 7750 0752 D7F88025 		ldr	r2, [r7, #1408]
 7751 0756 1344     		add	r3, r3, r2
 7752 0758 9A1C     		adds	r2, r3, #2
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7753              		.loc 1 920 0
 7754 075a 07F21C43 		addw	r3, r7, #1052
 7755 075e C3F8F820 		str	r2, [r3, #248]
 986:..\src/command_processing.c ****         (uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].Enc_idx_use_for_control),
 7756              		.loc 1 986 0
 7757 0762 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7758 0766 D7F88015 		ldr	r1, [r7, #1408]
 7759 076a 1346     		mov	r3, r2
 7760 076c DB00     		lsls	r3, r3, #3
 7761 076e 9B1A     		subs	r3, r3, r2
 7762 0770 1B01     		lsls	r3, r3, #4
 7763 0772 0B44     		add	r3, r3, r1
 7764 0774 03F58873 		add	r3, r3, #272
 7765 0778 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7766 077a 1A46     		mov	r2, r3
 7767 077c 1346     		mov	r3, r2
 7768 077e 5B00     		lsls	r3, r3, #1
 7769 0780 1344     		add	r3, r3, r2
 7770 0782 1B01     		lsls	r3, r3, #4
 7771 0784 03F5D873 		add	r3, r3, #432
 7772 0788 D7F88025 		ldr	r2, [r7, #1408]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 182


 7773 078c 1344     		add	r3, r3, r2
 7774 078e 5A1C     		adds	r2, r3, #1
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7775              		.loc 1 920 0
 7776 0790 07F21C43 		addw	r3, r7, #1052
 7777 0794 C3F8FC20 		str	r2, [r3, #252]
 987:..\src/command_processing.c ****         (uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].gears_params),
 7778              		.loc 1 987 0
 7779 0798 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7780 079c D7F88015 		ldr	r1, [r7, #1408]
 7781 07a0 1346     		mov	r3, r2
 7782 07a2 DB00     		lsls	r3, r3, #3
 7783 07a4 9B1A     		subs	r3, r3, r2
 7784 07a6 1B01     		lsls	r3, r3, #4
 7785 07a8 0B44     		add	r3, r3, r1
 7786 07aa 03F58873 		add	r3, r3, #272
 7787 07ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7788 07b0 1A46     		mov	r2, r3
 7789 07b2 1346     		mov	r3, r2
 7790 07b4 5B00     		lsls	r3, r3, #1
 7791 07b6 1344     		add	r3, r3, r2
 7792 07b8 1B01     		lsls	r3, r3, #4
 7793 07ba 03F5D873 		add	r3, r3, #432
 7794 07be D7F88025 		ldr	r2, [r7, #1408]
 7795 07c2 1344     		add	r3, r3, r2
 7796 07c4 5A1D     		adds	r2, r3, #5
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7797              		.loc 1 920 0
 7798 07c6 07F21C43 		addw	r3, r7, #1052
 7799 07ca C3F80021 		str	r2, [r3, #256]
 988:..\src/command_processing.c ****         
 989:..\src/command_processing.c **** 		(uint8*)&(MEM_P->enc[0].Enc_raw_read_conf[0]),					// additional generic params
 7800              		.loc 1 989 0
 7801 07ce D7F88035 		ldr	r3, [r7, #1408]
 7802 07d2 03F5C872 		add	r2, r3, #400
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7803              		.loc 1 920 0
 7804 07d6 07F21C43 		addw	r3, r7, #1052
 7805 07da C3F80421 		str	r2, [r3, #260]
 990:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[1].Enc_raw_read_conf[0]),
 7806              		.loc 1 990 0
 7807 07de D7F88035 		ldr	r3, [r7, #1408]
 7808 07e2 03F5E072 		add	r2, r3, #448
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7809              		.loc 1 920 0
 7810 07e6 07F21C43 		addw	r3, r7, #1052
 7811 07ea C3F80821 		str	r2, [r3, #264]
 991:..\src/command_processing.c ****         (uint8*)&(MEM_P->exp.read_ADC_sensors_port_flag),		
 7812              		.loc 1 991 0
 7813 07ee D7F88035 		ldr	r3, [r7, #1408]
 7814 07f2 03F22722 		addw	r2, r3, #551
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7815              		.loc 1 920 0
 7816 07f6 07F21C43 		addw	r3, r7, #1052
 7817 07fa C3F80C21 		str	r2, [r3, #268]
 992:..\src/command_processing.c ****     	(uint8*)&(MEM_P->exp.ADC_conf[0]),
 7818              		.loc 1 992 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 183


 7819 07fe D7F88035 		ldr	r3, [r7, #1408]
 7820 0802 03F50A72 		add	r2, r3, #552
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7821              		.loc 1 920 0
 7822 0806 07F21C43 		addw	r3, r7, #1052
 7823 080a C3F81021 		str	r2, [r3, #272]
 993:..\src/command_processing.c ****     	(uint8*)&(MEM_P->exp.ADC_conf[6]),                          //70  
 7824              		.loc 1 993 0
 7825 080e D7F88035 		ldr	r3, [r7, #1408]
 7826 0812 03F22E22 		addw	r2, r3, #558
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7827              		.loc 1 920 0
 7828 0816 07F21C43 		addw	r3, r7, #1052
 7829 081a C3F81421 		str	r2, [r3, #276]
 994:..\src/command_processing.c ****         (uint8*)&(MEM_P->exp.record_EMG_history_on_SD),
 7830              		.loc 1 994 0
 7831 081e D7F88035 		ldr	r3, [r7, #1408]
 7832 0822 03F50D72 		add	r2, r3, #564
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7833              		.loc 1 920 0
 7834 0826 07F21C43 		addw	r3, r7, #1052
 7835 082a C3F81821 		str	r2, [r3, #280]
 995:..\src/command_processing.c ****         (uint8*)&(MEM_P->JOY_spec.joystick_closure_speed),
 7836              		.loc 1 995 0
 7837 082e D7F88035 		ldr	r3, [r7, #1408]
 7838 0832 03F52C72 		add	r2, r3, #688
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7839              		.loc 1 920 0
 7840 0836 07F21C43 		addw	r3, r7, #1052
 7841 083a C3F81C21 		str	r2, [r3, #284]
 996:..\src/command_processing.c ****         (uint8*)&(MEM_P->JOY_spec.joystick_threshold),
 7842              		.loc 1 996 0
 7843 083e D7F88035 		ldr	r3, [r7, #1408]
 7844 0842 03F2B222 		addw	r2, r3, #690
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7845              		.loc 1 920 0
 7846 0846 07F21C43 		addw	r3, r7, #1052
 7847 084a C3F82021 		str	r2, [r3, #288]
 997:..\src/command_processing.c ****         (uint8*)&(MEM_P->JOY_spec.joystick_gains[0]),
 7848              		.loc 1 997 0
 7849 084e D7F88035 		ldr	r3, [r7, #1408]
 7850 0852 03F52D72 		add	r2, r3, #692
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7851              		.loc 1 920 0
 7852 0856 07F21C43 		addw	r3, r7, #1052
 7853 085a C3F82421 		str	r2, [r3, #292]
 998:..\src/command_processing.c ****         (uint8*)&(MEM_P->dev.dev_type),
 7854              		.loc 1 998 0
 7855 085e D7F88035 		ldr	r3, [r7, #1408]
 7856 0862 03F1AC02 		add	r2, r3, #172
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7857              		.loc 1 920 0
 7858 0866 07F21C43 		addw	r3, r7, #1052
 7859 086a C3F82821 		str	r2, [r3, #296]
 999:..\src/command_processing.c ****         (uint8*)&(MEM_P->WR.activation_mode),                           
 7860              		.loc 1 999 0
 7861 086e D7F88035 		ldr	r3, [r7, #1408]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 184


 7862 0872 03F53872 		add	r2, r3, #736
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7863              		.loc 1 920 0
 7864 0876 07F21C43 		addw	r3, r7, #1052
 7865 087a C3F82C21 		str	r2, [r3, #300]
1000:..\src/command_processing.c ****         (uint8*)&(MEM_P->WR.fast_act_threshold[0]),
 7866              		.loc 1 1000 0
 7867 087e D7F88035 		ldr	r3, [r7, #1408]
 7868 0882 03F2E222 		addw	r2, r3, #738
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7869              		.loc 1 920 0
 7870 0886 07F21C43 		addw	r3, r7, #1052
 7871 088a C3F83021 		str	r2, [r3, #304]
1001:..\src/command_processing.c ****         
1002:..\src/command_processing.c ****         (uint8*)&(MEM_P->WR.wrist_direction_association),              // additional wrist params
 7872              		.loc 1 1002 0
 7873 088e D7F88035 		ldr	r3, [r7, #1408]
 7874 0892 03F2E622 		addw	r2, r3, #742
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7875              		.loc 1 920 0
 7876 0896 07F21C43 		addw	r3, r7, #1052
 7877 089a C3F83421 		str	r2, [r3, #308]
1003:..\src/command_processing.c ****         
1004:..\src/command_processing.c ****         (uint8*)&(MEM_P->MS.slave_comm_active),                        // additional master params
 7878              		.loc 1 1004 0
 7879 089e D7F88035 		ldr	r3, [r7, #1408]
 7880 08a2 03F53072 		add	r2, r3, #704
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7881              		.loc 1 920 0
 7882 08a6 07F21C43 		addw	r3, r7, #1052
 7883 08aa C3F83821 		str	r2, [r3, #312]
1005:..\src/command_processing.c ****         (uint8*)&(MEM_P->MS.slave_ID),
 7884              		.loc 1 1005 0
 7885 08ae D7F88035 		ldr	r3, [r7, #1408]
 7886 08b2 03F2C122 		addw	r2, r3, #705
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7887              		.loc 1 920 0
 7888 08b6 07F21C43 		addw	r3, r7, #1052
 7889 08ba C3F83C21 		str	r2, [r3, #316]
1006:..\src/command_processing.c ****         
1007:..\src/command_processing.c ****         (uint8*)&(MEM_P->FB.max_residual_current),                     // additional feedback param
 7890              		.loc 1 1007 0
 7891 08be D7F88035 		ldr	r3, [r7, #1408]
 7892 08c2 03F53472 		add	r2, r3, #720
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7893              		.loc 1 920 0
 7894 08c6 07F21C43 		addw	r3, r7, #1052
 7895 08ca C3F84021 		str	r2, [r3, #320]
1008:..\src/command_processing.c ****         (uint8*)&(MEM_P->FB.maximum_pressure_kPa),
 7896              		.loc 1 1008 0
 7897 08ce D7F88035 		ldr	r3, [r7, #1408]
 7898 08d2 03F53572 		add	r2, r3, #724
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7899              		.loc 1 920 0
 7900 08d6 07F21C43 		addw	r3, r7, #1052
 7901 08da C3F84421 		str	r2, [r3, #324]
1009:..\src/command_processing.c ****         (uint8*)&(MEM_P->FB.prop_err_fb_gain)
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 185


 7902              		.loc 1 1009 0
 7903 08de D7F88035 		ldr	r3, [r7, #1408]
 7904 08e2 03F53672 		add	r2, r3, #728
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7905              		.loc 1 920 0
 7906 08e6 07F21C43 		addw	r3, r7, #1052
 7907 08ea C3F84821 		str	r2, [r3, #328]
1010:..\src/command_processing.c ****         
1011:..\src/command_processing.c **** 
1012:..\src/command_processing.c ****     };
1013:..\src/command_processing.c ****     
1014:..\src/command_processing.c ****     uint8 TYPES[NUM_OF_PARAMS] = {
 7908              		.loc 1 1014 0
 7909 08ee 07F57273 		add	r3, r7, #968
 7910 08f2 F64A     		ldr	r2, .L382
 7911 08f4 1846     		mov	r0, r3
 7912 08f6 1146     		mov	r1, r2
 7913 08f8 5323     		movs	r3, #83
 7914 08fa 1A46     		mov	r2, r3
 7915 08fc FFF7FEFF 		bl	memcpy
1015:..\src/command_processing.c ****         TYPE_UINT8, TYPE_FLOAT, TYPE_FLOAT, TYPE_FLAG, 
1016:..\src/command_processing.c ****         TYPE_FLAG, TYPE_FLAG, TYPE_UINT8, TYPE_INT16, 
1017:..\src/command_processing.c ****         TYPE_FLOAT, TYPE_FLAG, TYPE_INT32, TYPE_INT32, 
1018:..\src/command_processing.c ****         TYPE_INT16, TYPE_UINT16, TYPE_FLAG, TYPE_UINT32, 
1019:..\src/command_processing.c ****         TYPE_UINT8, TYPE_FLAG, TYPE_INT8, TYPE_FLAG, 
1020:..\src/command_processing.c ****         TYPE_FLOAT, TYPE_UINT8, TYPE_INT32, TYPE_INT32,
1021:..\src/command_processing.c ****         TYPE_INT32, TYPE_FLAG, TYPE_FLAG, TYPE_FLAG, 
1022:..\src/command_processing.c ****         TYPE_FLAG, TYPE_FLAG, TYPE_FLAG, TYPE_UINT8, 
1023:..\src/command_processing.c ****         TYPE_FLAG, TYPE_UINT8, TYPE_FLAG, TYPE_STRING,
1024:..\src/command_processing.c ****         
1025:..\src/command_processing.c ****         // GENERIC PARAMS
1026:..\src/command_processing.c ****         TYPE_UINT8, TYPE_FLAG, TYPE_UINT8, TYPE_FLAG,
1027:..\src/command_processing.c ****         TYPE_UINT8, TYPE_INT8, TYPE_FLAG, TYPE_FLOAT, 
1028:..\src/command_processing.c ****         TYPE_FLOAT, TYPE_FLAG, TYPE_FLAG, TYPE_FLAG,
1029:..\src/command_processing.c ****         TYPE_UINT8, TYPE_INT16, TYPE_FLOAT, TYPE_FLAG, 
1030:..\src/command_processing.c ****         TYPE_INT32, TYPE_INT32, TYPE_INT16, TYPE_FLAG,
1031:..\src/command_processing.c ****         TYPE_INT8,  TYPE_FLAG, TYPE_FLOAT, TYPE_UINT8,
1032:..\src/command_processing.c ****         TYPE_FLAG,  TYPE_UINT8, TYPE_FLAG, TYPE_UINT8,
1033:..\src/command_processing.c ****         TYPE_INT8, TYPE_UINT8, TYPE_UINT8, TYPE_FLAG,
1034:..\src/command_processing.c ****         TYPE_UINT8, TYPE_UINT8, TYPE_FLAG, TYPE_UINT16, 
1035:..\src/command_processing.c ****         TYPE_INT16, TYPE_UINT16, TYPE_FLAG, TYPE_FLAG,
1036:..\src/command_processing.c ****         TYPE_UINT16,
1037:..\src/command_processing.c ****         
1038:..\src/command_processing.c ****                     TYPE_FLAG, TYPE_FLAG, TYPE_UINT8,
1039:..\src/command_processing.c ****         TYPE_INT32, TYPE_FLOAT, TYPE_FLOAT
1040:..\src/command_processing.c ****     };
1041:..\src/command_processing.c **** 
1042:..\src/command_processing.c ****     uint8 NUM_ITEMS[NUM_OF_PARAMS] = {
 7916              		.loc 1 1042 0
 7917 0900 07F55D73 		add	r3, r7, #884
 7918 0904 0122     		movs	r2, #1
 7919 0906 1A70     		strb	r2, [r3]
 7920 0908 07F55D73 		add	r3, r7, #884
 7921 090c 0322     		movs	r2, #3
 7922 090e 5A70     		strb	r2, [r3, #1]
 7923 0910 07F55D73 		add	r3, r7, #884
 7924 0914 0322     		movs	r2, #3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 186


 7925 0916 9A70     		strb	r2, [r3, #2]
 7926 0918 07F55D73 		add	r3, r7, #884
 7927 091c 0122     		movs	r2, #1
 7928 091e DA70     		strb	r2, [r3, #3]
 7929 0920 07F55D73 		add	r3, r7, #884
 7930 0924 0122     		movs	r2, #1
 7931 0926 1A71     		strb	r2, [r3, #4]
 7932 0928 07F55D73 		add	r3, r7, #884
 7933 092c 0122     		movs	r2, #1
 7934 092e 5A71     		strb	r2, [r3, #5]
 7935 0930 07F55D73 		add	r3, r7, #884
 7936 0934 0322     		movs	r2, #3
 7937 0936 9A71     		strb	r2, [r3, #6]
 7938 0938 07F55D73 		add	r3, r7, #884
 7939 093c 0322     		movs	r2, #3
 7940 093e DA71     		strb	r2, [r3, #7]
 7941 0940 07F55D73 		add	r3, r7, #884
 7942 0944 0322     		movs	r2, #3
 7943 0946 1A72     		strb	r2, [r3, #8]
 7944 0948 07F55D73 		add	r3, r7, #884
 7945 094c 0122     		movs	r2, #1
 7946 094e 5A72     		strb	r2, [r3, #9]
 7947 0950 07F55D73 		add	r3, r7, #884
 7948 0954 0222     		movs	r2, #2
 7949 0956 9A72     		strb	r2, [r3, #10]
 7950 0958 07F55D73 		add	r3, r7, #884
 7951 095c 0222     		movs	r2, #2
 7952 095e DA72     		strb	r2, [r3, #11]
 7953 0960 07F55D73 		add	r3, r7, #884
 7954 0964 0122     		movs	r2, #1
 7955 0966 1A73     		strb	r2, [r3, #12]
 7956 0968 07F55D73 		add	r3, r7, #884
 7957 096c 0222     		movs	r2, #2
 7958 096e 5A73     		strb	r2, [r3, #13]
 7959 0970 07F55D73 		add	r3, r7, #884
 7960 0974 0122     		movs	r2, #1
 7961 0976 9A73     		strb	r2, [r3, #14]
 7962 0978 07F55D73 		add	r3, r7, #884
 7963 097c 0222     		movs	r2, #2
 7964 097e DA73     		strb	r2, [r3, #15]
 7965 0980 07F55D73 		add	r3, r7, #884
 7966 0984 0222     		movs	r2, #2
 7967 0986 1A74     		strb	r2, [r3, #16]
 7968 0988 07F55D73 		add	r3, r7, #884
 7969 098c 0122     		movs	r2, #1
 7970 098e 5A74     		strb	r2, [r3, #17]
 7971 0990 07F55D73 		add	r3, r7, #884
 7972 0994 0122     		movs	r2, #1
 7973 0996 9A74     		strb	r2, [r3, #18]
 7974 0998 07F55D73 		add	r3, r7, #884
 7975 099c 0122     		movs	r2, #1
 7976 099e DA74     		strb	r2, [r3, #19]
 7977 09a0 07F55D73 		add	r3, r7, #884
 7978 09a4 0622     		movs	r2, #6
 7979 09a6 1A75     		strb	r2, [r3, #20]
 7980 09a8 07F55D73 		add	r3, r7, #884
 7981 09ac 0322     		movs	r2, #3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 187


 7982 09ae 5A75     		strb	r2, [r3, #21]
 7983 09b0 07F55D73 		add	r3, r7, #884
 7984 09b4 0122     		movs	r2, #1
 7985 09b6 9A75     		strb	r2, [r3, #22]
 7986 09b8 07F55D73 		add	r3, r7, #884
 7987 09bc 0122     		movs	r2, #1
 7988 09be DA75     		strb	r2, [r3, #23]
 7989 09c0 07F55D73 		add	r3, r7, #884
 7990 09c4 0122     		movs	r2, #1
 7991 09c6 1A76     		strb	r2, [r3, #24]
 7992 09c8 07F55D73 		add	r3, r7, #884
 7993 09cc 0122     		movs	r2, #1
 7994 09ce 5A76     		strb	r2, [r3, #25]
 7995 09d0 07F55D73 		add	r3, r7, #884
 7996 09d4 0122     		movs	r2, #1
 7997 09d6 9A76     		strb	r2, [r3, #26]
 7998 09d8 07F55D73 		add	r3, r7, #884
 7999 09dc 0122     		movs	r2, #1
 8000 09de DA76     		strb	r2, [r3, #27]
 8001 09e0 07F55D73 		add	r3, r7, #884
 8002 09e4 0122     		movs	r2, #1
 8003 09e6 1A77     		strb	r2, [r3, #28]
 8004 09e8 07F55D73 		add	r3, r7, #884
 8005 09ec 0122     		movs	r2, #1
 8006 09ee 5A77     		strb	r2, [r3, #29]
 8007 09f0 07F55D73 		add	r3, r7, #884
 8008 09f4 0122     		movs	r2, #1
 8009 09f6 9A77     		strb	r2, [r3, #30]
 8010 09f8 07F55D73 		add	r3, r7, #884
 8011 09fc 0622     		movs	r2, #6
 8012 09fe DA77     		strb	r2, [r3, #31]
 8013 0a00 07F55D73 		add	r3, r7, #884
 8014 0a04 0122     		movs	r2, #1
 8015 0a06 83F82020 		strb	r2, [r3, #32]
 8016 0a0a 07F55D73 		add	r3, r7, #884
 8017 0a0e 0522     		movs	r2, #5
 8018 0a10 83F82120 		strb	r2, [r3, #33]
 8019 0a14 07F55D73 		add	r3, r7, #884
 8020 0a18 0122     		movs	r2, #1
 8021 0a1a 83F82220 		strb	r2, [r3, #34]
 8022 0a1e 07F55D73 		add	r3, r7, #884
 8023 0a22 0622     		movs	r2, #6
 8024 0a24 83F82320 		strb	r2, [r3, #35]
 8025 0a28 07F55D73 		add	r3, r7, #884
 8026 0a2c 0122     		movs	r2, #1
 8027 0a2e 83F82420 		strb	r2, [r3, #36]
 8028 0a32 07F55D73 		add	r3, r7, #884
 8029 0a36 0122     		movs	r2, #1
 8030 0a38 83F82520 		strb	r2, [r3, #37]
 8031 0a3c 07F55D73 		add	r3, r7, #884
 8032 0a40 0122     		movs	r2, #1
 8033 0a42 83F82620 		strb	r2, [r3, #38]
 8034 0a46 07F55D73 		add	r3, r7, #884
 8035 0a4a 0122     		movs	r2, #1
 8036 0a4c 83F82720 		strb	r2, [r3, #39]
 8037 0a50 07F55D73 		add	r3, r7, #884
 8038 0a54 0322     		movs	r2, #3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 188


 8039 0a56 83F82820 		strb	r2, [r3, #40]
 8040 0a5a 07F55D73 		add	r3, r7, #884
 8041 0a5e 0322     		movs	r2, #3
 8042 0a60 83F82920 		strb	r2, [r3, #41]
 8043 0a64 07F55D73 		add	r3, r7, #884
 8044 0a68 0122     		movs	r2, #1
 8045 0a6a 83F82A20 		strb	r2, [r3, #42]
 8046 0a6e 07F55D73 		add	r3, r7, #884
 8047 0a72 0322     		movs	r2, #3
 8048 0a74 83F82B20 		strb	r2, [r3, #43]
 8049 0a78 07F55D73 		add	r3, r7, #884
 8050 0a7c 0322     		movs	r2, #3
 8051 0a7e 83F82C20 		strb	r2, [r3, #44]
 8052 0a82 07F55D73 		add	r3, r7, #884
 8053 0a86 0122     		movs	r2, #1
 8054 0a88 83F82D20 		strb	r2, [r3, #45]
 8055 0a8c 07F55D73 		add	r3, r7, #884
 8056 0a90 0122     		movs	r2, #1
 8057 0a92 83F82E20 		strb	r2, [r3, #46]
 8058 0a96 07F55D73 		add	r3, r7, #884
 8059 0a9a 0122     		movs	r2, #1
 8060 0a9c 83F82F20 		strb	r2, [r3, #47]
 8061 0aa0 07F55D73 		add	r3, r7, #884
 8062 0aa4 0322     		movs	r2, #3
 8063 0aa6 83F83020 		strb	r2, [r3, #48]
 8064 0aaa 07F55D73 		add	r3, r7, #884
 8065 0aae 0322     		movs	r2, #3
 8066 0ab0 83F83120 		strb	r2, [r3, #49]
 8067 0ab4 07F55D73 		add	r3, r7, #884
 8068 0ab8 0322     		movs	r2, #3
 8069 0aba 83F83220 		strb	r2, [r3, #50]
 8070 0abe 07F55D73 		add	r3, r7, #884
 8071 0ac2 0122     		movs	r2, #1
 8072 0ac4 83F83320 		strb	r2, [r3, #51]
 8073 0ac8 07F55D73 		add	r3, r7, #884
 8074 0acc 0222     		movs	r2, #2
 8075 0ace 83F83420 		strb	r2, [r3, #52]
 8076 0ad2 07F55D73 		add	r3, r7, #884
 8077 0ad6 0222     		movs	r2, #2
 8078 0ad8 83F83520 		strb	r2, [r3, #53]
 8079 0adc 07F55D73 		add	r3, r7, #884
 8080 0ae0 0122     		movs	r2, #1
 8081 0ae2 83F83620 		strb	r2, [r3, #54]
 8082 0ae6 07F55D73 		add	r3, r7, #884
 8083 0aea 0122     		movs	r2, #1
 8084 0aec 83F83720 		strb	r2, [r3, #55]
 8085 0af0 07F55D73 		add	r3, r7, #884
 8086 0af4 0122     		movs	r2, #1
 8087 0af6 83F83820 		strb	r2, [r3, #56]
 8088 0afa 07F55D73 		add	r3, r7, #884
 8089 0afe 0122     		movs	r2, #1
 8090 0b00 83F83920 		strb	r2, [r3, #57]
 8091 0b04 07F55D73 		add	r3, r7, #884
 8092 0b08 0622     		movs	r2, #6
 8093 0b0a 83F83A20 		strb	r2, [r3, #58]
 8094 0b0e 07F55D73 		add	r3, r7, #884
 8095 0b12 0122     		movs	r2, #1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 189


 8096 0b14 83F83B20 		strb	r2, [r3, #59]
 8097 0b18 07F55D73 		add	r3, r7, #884
 8098 0b1c 0122     		movs	r2, #1
 8099 0b1e 83F83C20 		strb	r2, [r3, #60]
 8100 0b22 07F55D73 		add	r3, r7, #884
 8101 0b26 0122     		movs	r2, #1
 8102 0b28 83F83D20 		strb	r2, [r3, #61]
 8103 0b2c 07F55D73 		add	r3, r7, #884
 8104 0b30 0122     		movs	r2, #1
 8105 0b32 83F83E20 		strb	r2, [r3, #62]
 8106 0b36 07F55D73 		add	r3, r7, #884
 8107 0b3a 0322     		movs	r2, #3
 8108 0b3c 83F83F20 		strb	r2, [r3, #63]
 8109 0b40 07F55D73 		add	r3, r7, #884
 8110 0b44 0322     		movs	r2, #3
 8111 0b46 83F84020 		strb	r2, [r3, #64]
1043:..\src/command_processing.c ****         1, 3, 3, 1, 
1044:..\src/command_processing.c ****         1, 1, 3, 3,
1045:..\src/command_processing.c ****         3, 1, 2, 2, 
1046:..\src/command_processing.c ****         1, 2, 1, 2,
1047:..\src/command_processing.c ****         2, 1, 1, 1, 
1048:..\src/command_processing.c ****         6, 3, 1, 1,
1049:..\src/command_processing.c ****         1, 1, 1, 1, 
1050:..\src/command_processing.c ****         1, 1, 1, 6,
1051:..\src/command_processing.c ****         1, 5, 1, 6,
1052:..\src/command_processing.c ****         
1053:..\src/command_processing.c ****         // GENERIC PARAMS
1054:..\src/command_processing.c ****         1, 1, 1, 1,
1055:..\src/command_processing.c ****         3, 3, 1, 3,
1056:..\src/command_processing.c ****         3, 1, 1, 1,
1057:..\src/command_processing.c ****         3, 3, 3, 1,
1058:..\src/command_processing.c ****         2, 2, 1, 1,
1059:..\src/command_processing.c ****         1, 1, 6, 1,
1060:..\src/command_processing.c ****         1, 1, 1, 3, 
1061:..\src/command_processing.c ****         3, N_Encoder_Line_Connected[0], N_Encoder_Line_Connected[1], 1,
 8112              		.loc 1 1061 0
 8113 0b4a 614B     		ldr	r3, .L382+4
 8114 0b4c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
1042:..\src/command_processing.c ****         1, 3, 3, 1, 
 8115              		.loc 1 1042 0
 8116 0b4e 07F55D73 		add	r3, r7, #884
 8117 0b52 83F84120 		strb	r2, [r3, #65]
 8118              		.loc 1 1061 0
 8119 0b56 5E4B     		ldr	r3, .L382+4
 8120 0b58 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
1042:..\src/command_processing.c ****         1, 3, 3, 1, 
 8121              		.loc 1 1042 0
 8122 0b5a 07F55D73 		add	r3, r7, #884
 8123 0b5e 83F84220 		strb	r2, [r3, #66]
 8124 0b62 07F55D73 		add	r3, r7, #884
 8125 0b66 0122     		movs	r2, #1
 8126 0b68 83F84320 		strb	r2, [r3, #67]
 8127 0b6c 07F55D73 		add	r3, r7, #884
 8128 0b70 0622     		movs	r2, #6
 8129 0b72 83F84420 		strb	r2, [r3, #68]
 8130 0b76 07F55D73 		add	r3, r7, #884
 8131 0b7a 0622     		movs	r2, #6
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 190


 8132 0b7c 83F84520 		strb	r2, [r3, #69]
 8133 0b80 07F55D73 		add	r3, r7, #884
 8134 0b84 0122     		movs	r2, #1
 8135 0b86 83F84620 		strb	r2, [r3, #70]
 8136 0b8a 07F55D73 		add	r3, r7, #884
 8137 0b8e 0122     		movs	r2, #1
 8138 0b90 83F84720 		strb	r2, [r3, #71]
 8139 0b94 07F55D73 		add	r3, r7, #884
 8140 0b98 0122     		movs	r2, #1
 8141 0b9a 83F84820 		strb	r2, [r3, #72]
 8142 0b9e 07F55D73 		add	r3, r7, #884
 8143 0ba2 0222     		movs	r2, #2
 8144 0ba4 83F84920 		strb	r2, [r3, #73]
 8145 0ba8 07F55D73 		add	r3, r7, #884
 8146 0bac 0122     		movs	r2, #1
 8147 0bae 83F84A20 		strb	r2, [r3, #74]
 8148 0bb2 07F55D73 		add	r3, r7, #884
 8149 0bb6 0122     		movs	r2, #1
 8150 0bb8 83F84B20 		strb	r2, [r3, #75]
 8151 0bbc 07F55D73 		add	r3, r7, #884
 8152 0bc0 0222     		movs	r2, #2
 8153 0bc2 83F84C20 		strb	r2, [r3, #76]
 8154 0bc6 07F55D73 		add	r3, r7, #884
 8155 0bca 0122     		movs	r2, #1
 8156 0bcc 83F84D20 		strb	r2, [r3, #77]
 8157 0bd0 07F55D73 		add	r3, r7, #884
 8158 0bd4 0122     		movs	r2, #1
 8159 0bd6 83F84E20 		strb	r2, [r3, #78]
 8160 0bda 07F55D73 		add	r3, r7, #884
 8161 0bde 0122     		movs	r2, #1
 8162 0be0 83F84F20 		strb	r2, [r3, #79]
 8163 0be4 07F55D73 		add	r3, r7, #884
 8164 0be8 0122     		movs	r2, #1
 8165 0bea 83F85020 		strb	r2, [r3, #80]
 8166 0bee 07F55D73 		add	r3, r7, #884
 8167 0bf2 0122     		movs	r2, #1
 8168 0bf4 83F85120 		strb	r2, [r3, #81]
 8169 0bf8 07F55D73 		add	r3, r7, #884
 8170 0bfc 0122     		movs	r2, #1
 8171 0bfe 83F85220 		strb	r2, [r3, #82]
1062:..\src/command_processing.c ****         6, 6, 1, 1,
1063:..\src/command_processing.c ****         1, 2, 1, 1,
1064:..\src/command_processing.c ****         2,
1065:..\src/command_processing.c ****         
1066:..\src/command_processing.c ****            1, 1, 1, 
1067:..\src/command_processing.c ****         1, 1, 1
1068:..\src/command_processing.c ****     };
1069:..\src/command_processing.c ****     
1070:..\src/command_processing.c ****     uint8 NUM_STRUCT[NUM_OF_PARAMS] = {     // see STRUCTURES INDEX in globals.h
 8172              		.loc 1 1070 0
 8173 0c02 07F54873 		add	r3, r7, #800
 8174 0c06 0022     		movs	r2, #0
 8175 0c08 1A70     		strb	r2, [r3]
 8176 0c0a 97F87D35 		ldrb	r3, [r7, #1405]
 8177 0c0e 0A33     		adds	r3, r3, #10
 8178 0c10 DAB2     		uxtb	r2, r3
 8179 0c12 07F54873 		add	r3, r7, #800
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 191


 8180 0c16 5A70     		strb	r2, [r3, #1]
 8181 0c18 97F87D35 		ldrb	r3, [r7, #1405]
 8182 0c1c 0A33     		adds	r3, r3, #10
 8183 0c1e DAB2     		uxtb	r2, r3
 8184 0c20 07F54873 		add	r3, r7, #800
 8185 0c24 9A70     		strb	r2, [r3, #2]
 8186 0c26 97F87D35 		ldrb	r3, [r7, #1405]
 8187 0c2a 0A33     		adds	r3, r3, #10
 8188 0c2c DAB2     		uxtb	r2, r3
 8189 0c2e 07F54873 		add	r3, r7, #800
 8190 0c32 DA70     		strb	r2, [r3, #3]
 8191 0c34 97F87D35 		ldrb	r3, [r7, #1405]
 8192 0c38 0A33     		adds	r3, r3, #10
 8193 0c3a DAB2     		uxtb	r2, r3
 8194 0c3c 07F54873 		add	r3, r7, #800
 8195 0c40 1A71     		strb	r2, [r3, #4]
 8196 0c42 97F87D35 		ldrb	r3, [r7, #1405]
 8197 0c46 0A33     		adds	r3, r3, #10
 8198 0c48 DAB2     		uxtb	r2, r3
 8199 0c4a 07F54873 		add	r3, r7, #800
 8200 0c4e 5A71     		strb	r2, [r3, #5]
1071:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
1072:..\src/command_processing.c ****         ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_ENCODER+(MEM_P->motor[MOTOR_IDX].encoder_line), 
 8201              		.loc 1 1072 0
 8202 0c50 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 8203 0c54 D7F88015 		ldr	r1, [r7, #1408]
 8204 0c58 1346     		mov	r3, r2
 8205 0c5a DB00     		lsls	r3, r3, #3
 8206 0c5c 9B1A     		subs	r3, r3, r2
 8207 0c5e 1B01     		lsls	r3, r3, #4
 8208 0c60 0B44     		add	r3, r3, r1
 8209 0c62 03F58873 		add	r3, r3, #272
 8210 0c66 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1070:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8211              		.loc 1 1070 0
 8212 0c68 1433     		adds	r3, r3, #20
 8213 0c6a DAB2     		uxtb	r2, r3
 8214 0c6c 07F54873 		add	r3, r7, #800
 8215 0c70 9A71     		strb	r2, [r3, #6]
 8216              		.loc 1 1072 0
 8217 0c72 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 8218 0c76 D7F88015 		ldr	r1, [r7, #1408]
 8219 0c7a 1346     		mov	r3, r2
 8220 0c7c DB00     		lsls	r3, r3, #3
 8221 0c7e 9B1A     		subs	r3, r3, r2
 8222 0c80 1B01     		lsls	r3, r3, #4
 8223 0c82 0B44     		add	r3, r3, r1
 8224 0c84 03F58873 		add	r3, r3, #272
 8225 0c88 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1070:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8226              		.loc 1 1070 0
 8227 0c8a 1433     		adds	r3, r3, #20
 8228 0c8c DAB2     		uxtb	r2, r3
 8229 0c8e 07F54873 		add	r3, r7, #800
 8230 0c92 DA71     		strb	r2, [r3, #7]
1073:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[MOTOR_IDX].encoder_line), ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8231              		.loc 1 1073 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 192


 8232 0c94 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 8233 0c98 D7F88015 		ldr	r1, [r7, #1408]
 8234 0c9c 1346     		mov	r3, r2
 8235 0c9e DB00     		lsls	r3, r3, #3
 8236 0ca0 9B1A     		subs	r3, r3, r2
 8237 0ca2 1B01     		lsls	r3, r3, #4
 8238 0ca4 0B44     		add	r3, r3, r1
 8239 0ca6 03F58873 		add	r3, r3, #272
 8240 0caa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1070:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8241              		.loc 1 1070 0
 8242 0cac 1433     		adds	r3, r3, #20
 8243 0cae DAB2     		uxtb	r2, r3
 8244 0cb0 07F54873 		add	r3, r7, #800
 8245 0cb4 1A72     		strb	r2, [r3, #8]
 8246 0cb6 97F87D35 		ldrb	r3, [r7, #1405]
 8247 0cba 0A33     		adds	r3, r3, #10
 8248 0cbc DAB2     		uxtb	r2, r3
 8249 0cbe 07F54873 		add	r3, r7, #800
 8250 0cc2 5A72     		strb	r2, [r3, #9]
 8251 0cc4 97F87D35 		ldrb	r3, [r7, #1405]
 8252 0cc8 04E0     		b	.L383
 8253              	.L384:
 8254 0cca 00BF     		.align	2
 8255              	.L382:
 8256 0ccc 28060000 		.word	.LC0
 8257 0cd0 00000000 		.word	N_Encoder_Line_Connected
 8258              	.L383:
 8259 0cd4 0A33     		adds	r3, r3, #10
 8260 0cd6 DAB2     		uxtb	r2, r3
 8261 0cd8 07F54873 		add	r3, r7, #800
 8262 0cdc 9A72     		strb	r2, [r3, #10]
 8263 0cde 97F87D35 		ldrb	r3, [r7, #1405]
 8264 0ce2 0A33     		adds	r3, r3, #10
 8265 0ce4 DAB2     		uxtb	r2, r3
 8266 0ce6 07F54873 		add	r3, r7, #800
 8267 0cea DA72     		strb	r2, [r3, #11]
 8268 0cec 97F87D35 		ldrb	r3, [r7, #1405]
 8269 0cf0 0A33     		adds	r3, r3, #10
 8270 0cf2 DAB2     		uxtb	r2, r3
 8271 0cf4 07F54873 		add	r3, r7, #800
 8272 0cf8 1A73     		strb	r2, [r3, #12]
 8273 0cfa 07F54873 		add	r3, r7, #800
 8274 0cfe 1E22     		movs	r2, #30
 8275 0d00 5A73     		strb	r2, [r3, #13]
 8276 0d02 07F54873 		add	r3, r7, #800
 8277 0d06 1E22     		movs	r2, #30
 8278 0d08 9A73     		strb	r2, [r3, #14]
 8279 0d0a 07F54873 		add	r3, r7, #800
 8280 0d0e 1E22     		movs	r2, #30
 8281 0d10 DA73     		strb	r2, [r3, #15]
 8282 0d12 07F54873 		add	r3, r7, #800
 8283 0d16 1E22     		movs	r2, #30
 8284 0d18 1A74     		strb	r2, [r3, #16]
1074:..\src/command_processing.c ****         ST_MOTOR+MOTOR_IDX, ST_EMG, ST_EMG, ST_EMG, 
1075:..\src/command_processing.c ****         ST_EMG, ST_ENCODER+(MEM_P->motor[MOTOR_IDX].encoder_line), ST_ENCODER+(MEM_P->motor[MOTOR_I
 8285              		.loc 1 1075 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 193


 8286 0d1a 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 8287 0d1e D7F88015 		ldr	r1, [r7, #1408]
 8288 0d22 1346     		mov	r3, r2
 8289 0d24 DB00     		lsls	r3, r3, #3
 8290 0d26 9B1A     		subs	r3, r3, r2
 8291 0d28 1B01     		lsls	r3, r3, #4
 8292 0d2a 0B44     		add	r3, r3, r1
 8293 0d2c 03F58873 		add	r3, r3, #272
 8294 0d30 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1070:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8295              		.loc 1 1070 0
 8296 0d32 1433     		adds	r3, r3, #20
 8297 0d34 DAB2     		uxtb	r2, r3
 8298 0d36 07F54873 		add	r3, r7, #800
 8299 0d3a 5A74     		strb	r2, [r3, #17]
 8300              		.loc 1 1075 0
 8301 0d3c 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 8302 0d40 D7F88015 		ldr	r1, [r7, #1408]
 8303 0d44 1346     		mov	r3, r2
 8304 0d46 DB00     		lsls	r3, r3, #3
 8305 0d48 9B1A     		subs	r3, r3, r2
 8306 0d4a 1B01     		lsls	r3, r3, #4
 8307 0d4c 0B44     		add	r3, r3, r1
 8308 0d4e 03F58873 		add	r3, r3, #272
 8309 0d52 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1070:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8310              		.loc 1 1070 0
 8311 0d54 1433     		adds	r3, r3, #20
 8312 0d56 DAB2     		uxtb	r2, r3
 8313 0d58 07F54873 		add	r3, r7, #800
 8314 0d5c 9A74     		strb	r2, [r3, #18]
 8315 0d5e 97F87D35 		ldrb	r3, [r7, #1405]
 8316 0d62 0A33     		adds	r3, r3, #10
 8317 0d64 DAB2     		uxtb	r2, r3
 8318 0d66 07F54873 		add	r3, r7, #800
 8319 0d6a DA74     		strb	r2, [r3, #19]
 8320 0d6c 97F87D35 		ldrb	r3, [r7, #1405]
 8321 0d70 0A33     		adds	r3, r3, #10
 8322 0d72 DAB2     		uxtb	r2, r3
 8323 0d74 07F54873 		add	r3, r7, #800
 8324 0d78 1A75     		strb	r2, [r3, #20]
 8325 0d7a 07F54873 		add	r3, r7, #800
 8326 0d7e 0022     		movs	r2, #0
 8327 0d80 5A75     		strb	r2, [r3, #21]
 8328 0d82 07F54873 		add	r3, r7, #800
 8329 0d86 4622     		movs	r2, #70
 8330 0d88 9A75     		strb	r2, [r3, #22]
 8331 0d8a 07F54873 		add	r3, r7, #800
 8332 0d8e 4622     		movs	r2, #70
 8333 0d90 DA75     		strb	r2, [r3, #23]
 8334 0d92 07F54873 		add	r3, r7, #800
 8335 0d96 4622     		movs	r2, #70
 8336 0d98 1A76     		strb	r2, [r3, #24]
 8337 0d9a 07F54873 		add	r3, r7, #800
 8338 0d9e 4622     		movs	r2, #70
 8339 0da0 5A76     		strb	r2, [r3, #25]
 8340 0da2 07F54873 		add	r3, r7, #800
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 194


 8341 0da6 1E22     		movs	r2, #30
 8342 0da8 9A76     		strb	r2, [r3, #26]
 8343 0daa 07F54873 		add	r3, r7, #800
 8344 0dae 0022     		movs	r2, #0
 8345 0db0 DA76     		strb	r2, [r3, #27]
 8346 0db2 07F54873 		add	r3, r7, #800
 8347 0db6 2822     		movs	r2, #40
 8348 0db8 1A77     		strb	r2, [r3, #28]
 8349 0dba 07F54873 		add	r3, r7, #800
 8350 0dbe 3222     		movs	r2, #50
 8351 0dc0 5A77     		strb	r2, [r3, #29]
 8352 0dc2 07F54873 		add	r3, r7, #800
 8353 0dc6 0022     		movs	r2, #0
 8354 0dc8 9A77     		strb	r2, [r3, #30]
 8355 0dca 07F54873 		add	r3, r7, #800
 8356 0dce 3222     		movs	r2, #50
 8357 0dd0 DA77     		strb	r2, [r3, #31]
 8358 0dd2 07F54873 		add	r3, r7, #800
 8359 0dd6 2822     		movs	r2, #40
 8360 0dd8 83F82020 		strb	r2, [r3, #32]
 8361 0ddc 07F54873 		add	r3, r7, #800
 8362 0de0 2822     		movs	r2, #40
 8363 0de2 83F82120 		strb	r2, [r3, #33]
 8364 0de6 07F54873 		add	r3, r7, #800
 8365 0dea 0022     		movs	r2, #0
 8366 0dec 83F82220 		strb	r2, [r3, #34]
1076:..\src/command_processing.c ****         ST_MOTOR+MOTOR_IDX, ST_DEVICE, ST_SH_SPEC, ST_SH_SPEC,
1077:..\src/command_processing.c ****         ST_SH_SPEC, ST_SH_SPEC, ST_EMG, ST_DEVICE,
1078:..\src/command_processing.c ****         ST_IMU, ST_EXPANSION, ST_DEVICE, ST_EXPANSION,
1079:..\src/command_processing.c ****         ST_IMU, ST_IMU, ST_DEVICE, ST_USER+(MEM_P->dev.user_id),
 8367              		.loc 1 1079 0
 8368 0df0 D7F88035 		ldr	r3, [r7, #1408]
 8369 0df4 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
1070:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8370              		.loc 1 1070 0
 8371 0df8 3C33     		adds	r3, r3, #60
 8372 0dfa DAB2     		uxtb	r2, r3
 8373 0dfc 07F54873 		add	r3, r7, #800
 8374 0e00 83F82320 		strb	r2, [r3, #35]
 8375 0e04 97F87D35 		ldrb	r3, [r7, #1405]
 8376 0e08 0A33     		adds	r3, r3, #10
 8377 0e0a DAB2     		uxtb	r2, r3
 8378 0e0c 07F54873 		add	r3, r7, #800
 8379 0e10 83F82420 		strb	r2, [r3, #36]
 8380 0e14 97F87D35 		ldrb	r3, [r7, #1405]
 8381 0e18 0A33     		adds	r3, r3, #10
 8382 0e1a DAB2     		uxtb	r2, r3
 8383 0e1c 07F54873 		add	r3, r7, #800
 8384 0e20 83F82520 		strb	r2, [r3, #37]
 8385 0e24 97F87D35 		ldrb	r3, [r7, #1405]
 8386 0e28 0A33     		adds	r3, r3, #10
 8387 0e2a DAB2     		uxtb	r2, r3
 8388 0e2c 07F54873 		add	r3, r7, #800
 8389 0e30 83F82620 		strb	r2, [r3, #38]
 8390 0e34 97F87D35 		ldrb	r3, [r7, #1405]
 8391 0e38 0A33     		adds	r3, r3, #10
 8392 0e3a DAB2     		uxtb	r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 195


 8393 0e3c 07F54873 		add	r3, r7, #800
 8394 0e40 83F82720 		strb	r2, [r3, #39]
1080:..\src/command_processing.c ****         
1081:..\src/command_processing.c ****         // GENERIC PARAMS
1082:..\src/command_processing.c ****         ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX,
1083:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[MOTOR_IDX].encoder_line), ST_ENCODER+(MEM_P->motor[MOTOR_IDX].enco
 8395              		.loc 1 1083 0
 8396 0e44 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 8397 0e48 D7F88015 		ldr	r1, [r7, #1408]
 8398 0e4c 1346     		mov	r3, r2
 8399 0e4e DB00     		lsls	r3, r3, #3
 8400 0e50 9B1A     		subs	r3, r3, r2
 8401 0e52 1B01     		lsls	r3, r3, #4
 8402 0e54 0B44     		add	r3, r3, r1
 8403 0e56 03F58873 		add	r3, r3, #272
 8404 0e5a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1070:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8405              		.loc 1 1070 0
 8406 0e5c 1433     		adds	r3, r3, #20
 8407 0e5e DAB2     		uxtb	r2, r3
 8408 0e60 07F54873 		add	r3, r7, #800
 8409 0e64 83F82820 		strb	r2, [r3, #40]
 8410              		.loc 1 1083 0
 8411 0e68 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 8412 0e6c D7F88015 		ldr	r1, [r7, #1408]
 8413 0e70 1346     		mov	r3, r2
 8414 0e72 DB00     		lsls	r3, r3, #3
 8415 0e74 9B1A     		subs	r3, r3, r2
 8416 0e76 1B01     		lsls	r3, r3, #4
 8417 0e78 0B44     		add	r3, r3, r1
 8418 0e7a 03F58873 		add	r3, r3, #272
 8419 0e7e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1070:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8420              		.loc 1 1070 0
 8421 0e80 1433     		adds	r3, r3, #20
 8422 0e82 DAB2     		uxtb	r2, r3
 8423 0e84 07F54873 		add	r3, r7, #800
 8424 0e88 83F82920 		strb	r2, [r3, #41]
 8425 0e8c 07F54873 		add	r3, r7, #800
 8426 0e90 0022     		movs	r2, #0
 8427 0e92 83F82A20 		strb	r2, [r3, #42]
 8428 0e96 97F87C35 		ldrb	r3, [r7, #1404]
 8429 0e9a 0A33     		adds	r3, r3, #10
 8430 0e9c DAB2     		uxtb	r2, r3
 8431 0e9e 07F54873 		add	r3, r7, #800
 8432 0ea2 83F82B20 		strb	r2, [r3, #43]
 8433 0ea6 97F87C35 		ldrb	r3, [r7, #1404]
 8434 0eaa 0A33     		adds	r3, r3, #10
 8435 0eac DAB2     		uxtb	r2, r3
 8436 0eae 07F54873 		add	r3, r7, #800
 8437 0eb2 83F82C20 		strb	r2, [r3, #44]
 8438 0eb6 97F87C35 		ldrb	r3, [r7, #1404]
 8439 0eba 0A33     		adds	r3, r3, #10
 8440 0ebc DAB2     		uxtb	r2, r3
 8441 0ebe 07F54873 		add	r3, r7, #800
 8442 0ec2 83F82D20 		strb	r2, [r3, #45]
 8443 0ec6 97F87C35 		ldrb	r3, [r7, #1404]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 196


 8444 0eca 0A33     		adds	r3, r3, #10
 8445 0ecc DAB2     		uxtb	r2, r3
 8446 0ece 07F54873 		add	r3, r7, #800
 8447 0ed2 83F82E20 		strb	r2, [r3, #46]
 8448 0ed6 97F87C35 		ldrb	r3, [r7, #1404]
 8449 0eda 0A33     		adds	r3, r3, #10
 8450 0edc DAB2     		uxtb	r2, r3
 8451 0ede 07F54873 		add	r3, r7, #800
 8452 0ee2 83F82F20 		strb	r2, [r3, #47]
1084:..\src/command_processing.c ****         ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+S
1085:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[SECOND_MOTOR_IDX].encoder_line), ST_ENCODER+(MEM_P->motor[SECOND_M
 8453              		.loc 1 1085 0
 8454 0ee6 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 8455 0eea D7F88015 		ldr	r1, [r7, #1408]
 8456 0eee 1346     		mov	r3, r2
 8457 0ef0 DB00     		lsls	r3, r3, #3
 8458 0ef2 9B1A     		subs	r3, r3, r2
 8459 0ef4 1B01     		lsls	r3, r3, #4
 8460 0ef6 0B44     		add	r3, r3, r1
 8461 0ef8 03F58873 		add	r3, r3, #272
 8462 0efc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1070:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8463              		.loc 1 1070 0
 8464 0efe 1433     		adds	r3, r3, #20
 8465 0f00 DAB2     		uxtb	r2, r3
 8466 0f02 07F54873 		add	r3, r7, #800
 8467 0f06 83F83020 		strb	r2, [r3, #48]
 8468              		.loc 1 1085 0
 8469 0f0a 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 8470 0f0e D7F88015 		ldr	r1, [r7, #1408]
 8471 0f12 1346     		mov	r3, r2
 8472 0f14 DB00     		lsls	r3, r3, #3
 8473 0f16 9B1A     		subs	r3, r3, r2
 8474 0f18 1B01     		lsls	r3, r3, #4
 8475 0f1a 0B44     		add	r3, r3, r1
 8476 0f1c 03F58873 		add	r3, r3, #272
 8477 0f20 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1070:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8478              		.loc 1 1070 0
 8479 0f22 1433     		adds	r3, r3, #20
 8480 0f24 DAB2     		uxtb	r2, r3
 8481 0f26 07F54873 		add	r3, r7, #800
 8482 0f2a 83F83120 		strb	r2, [r3, #49]
 8483              		.loc 1 1085 0
 8484 0f2e 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 8485 0f32 D7F88015 		ldr	r1, [r7, #1408]
 8486 0f36 1346     		mov	r3, r2
 8487 0f38 DB00     		lsls	r3, r3, #3
 8488 0f3a 9B1A     		subs	r3, r3, r2
 8489 0f3c 1B01     		lsls	r3, r3, #4
 8490 0f3e 0B44     		add	r3, r3, r1
 8491 0f40 03F58873 		add	r3, r3, #272
 8492 0f44 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1070:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8493              		.loc 1 1070 0
 8494 0f46 1433     		adds	r3, r3, #20
 8495 0f48 DAB2     		uxtb	r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 197


 8496 0f4a 07F54873 		add	r3, r7, #800
 8497 0f4e 83F83220 		strb	r2, [r3, #50]
 8498 0f52 97F87C35 		ldrb	r3, [r7, #1404]
 8499 0f56 0A33     		adds	r3, r3, #10
 8500 0f58 DAB2     		uxtb	r2, r3
 8501 0f5a 07F54873 		add	r3, r7, #800
 8502 0f5e 83F83320 		strb	r2, [r3, #51]
 8503 0f62 97F87C35 		ldrb	r3, [r7, #1404]
 8504 0f66 0A33     		adds	r3, r3, #10
 8505 0f68 DAB2     		uxtb	r2, r3
 8506 0f6a 07F54873 		add	r3, r7, #800
 8507 0f6e 83F83420 		strb	r2, [r3, #52]
 8508 0f72 97F87C35 		ldrb	r3, [r7, #1404]
 8509 0f76 0A33     		adds	r3, r3, #10
 8510 0f78 DAB2     		uxtb	r2, r3
 8511 0f7a 07F54873 		add	r3, r7, #800
 8512 0f7e 83F83520 		strb	r2, [r3, #53]
 8513 0f82 97F87C35 		ldrb	r3, [r7, #1404]
 8514 0f86 0A33     		adds	r3, r3, #10
 8515 0f88 DAB2     		uxtb	r2, r3
 8516 0f8a 07F54873 		add	r3, r7, #800
 8517 0f8e 83F83620 		strb	r2, [r3, #54]
1086:..\src/command_processing.c ****         ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_ENCODER
 8518              		.loc 1 1086 0
 8519 0f92 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 8520 0f96 D7F88015 		ldr	r1, [r7, #1408]
 8521 0f9a 1346     		mov	r3, r2
 8522 0f9c DB00     		lsls	r3, r3, #3
 8523 0f9e 9B1A     		subs	r3, r3, r2
 8524 0fa0 1B01     		lsls	r3, r3, #4
 8525 0fa2 0B44     		add	r3, r3, r1
 8526 0fa4 03F58873 		add	r3, r3, #272
 8527 0fa8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1070:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8528              		.loc 1 1070 0
 8529 0faa 1433     		adds	r3, r3, #20
 8530 0fac DAB2     		uxtb	r2, r3
 8531 0fae 07F54873 		add	r3, r7, #800
 8532 0fb2 83F83720 		strb	r2, [r3, #55]
1087:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[SECOND_MOTOR_IDX].encoder_line), ST_MOTOR+SECOND_MOTOR_IDX, ST_MOT
 8533              		.loc 1 1087 0
 8534 0fb6 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 8535 0fba D7F88015 		ldr	r1, [r7, #1408]
 8536 0fbe 1346     		mov	r3, r2
 8537 0fc0 DB00     		lsls	r3, r3, #3
 8538 0fc2 9B1A     		subs	r3, r3, r2
 8539 0fc4 1B01     		lsls	r3, r3, #4
 8540 0fc6 0B44     		add	r3, r3, r1
 8541 0fc8 03F58873 		add	r3, r3, #272
 8542 0fcc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1070:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8543              		.loc 1 1070 0
 8544 0fce 1433     		adds	r3, r3, #20
 8545 0fd0 DAB2     		uxtb	r2, r3
 8546 0fd2 07F54873 		add	r3, r7, #800
 8547 0fd6 83F83820 		strb	r2, [r3, #56]
 8548 0fda 97F87C35 		ldrb	r3, [r7, #1404]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 198


 8549 0fde 0A33     		adds	r3, r3, #10
 8550 0fe0 DAB2     		uxtb	r2, r3
 8551 0fe2 07F54873 		add	r3, r7, #800
 8552 0fe6 83F83920 		strb	r2, [r3, #57]
 8553 0fea 97F87C35 		ldrb	r3, [r7, #1404]
 8554 0fee 0A33     		adds	r3, r3, #10
 8555 0ff0 DAB2     		uxtb	r2, r3
 8556 0ff2 07F54873 		add	r3, r7, #800
 8557 0ff6 83F83A20 		strb	r2, [r3, #58]
 8558 0ffa 97F87C35 		ldrb	r3, [r7, #1404]
 8559 0ffe 0A33     		adds	r3, r3, #10
 8560 1000 DAB2     		uxtb	r2, r3
 8561 1002 07F54873 		add	r3, r7, #800
 8562 1006 83F83B20 		strb	r2, [r3, #59]
 8563 100a 97F87C35 		ldrb	r3, [r7, #1404]
 8564 100e 0A33     		adds	r3, r3, #10
 8565 1010 DAB2     		uxtb	r2, r3
 8566 1012 07F54873 		add	r3, r7, #800
 8567 1016 83F83C20 		strb	r2, [r3, #60]
 8568 101a 97F87C35 		ldrb	r3, [r7, #1404]
 8569 101e 0A33     		adds	r3, r3, #10
 8570 1020 DAB2     		uxtb	r2, r3
 8571 1022 07F54873 		add	r3, r7, #800
 8572 1026 83F83D20 		strb	r2, [r3, #61]
 8573 102a 97F87C35 		ldrb	r3, [r7, #1404]
 8574 102e 0A33     		adds	r3, r3, #10
 8575 1030 DAB2     		uxtb	r2, r3
 8576 1032 07F54873 		add	r3, r7, #800
 8577 1036 83F83E20 		strb	r2, [r3, #62]
1088:..\src/command_processing.c ****         ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_ENCODER
 8578              		.loc 1 1088 0
 8579 103a 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 8580 103e D7F88015 		ldr	r1, [r7, #1408]
 8581 1042 1346     		mov	r3, r2
 8582 1044 DB00     		lsls	r3, r3, #3
 8583 1046 9B1A     		subs	r3, r3, r2
 8584 1048 1B01     		lsls	r3, r3, #4
 8585 104a 0B44     		add	r3, r3, r1
 8586 104c 03F58873 		add	r3, r3, #272
 8587 1050 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1070:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8588              		.loc 1 1070 0
 8589 1052 1433     		adds	r3, r3, #20
 8590 1054 DAB2     		uxtb	r2, r3
 8591 1056 07F54873 		add	r3, r7, #800
 8592 105a 83F83F20 		strb	r2, [r3, #63]
1089:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[SECOND_MOTOR_IDX].encoder_line), ST_ENCODER+0, ST_ENCODER+1, ST_EX
 8593              		.loc 1 1089 0
 8594 105e 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 8595 1062 D7F88015 		ldr	r1, [r7, #1408]
 8596 1066 1346     		mov	r3, r2
 8597 1068 DB00     		lsls	r3, r3, #3
 8598 106a 9B1A     		subs	r3, r3, r2
 8599 106c 1B01     		lsls	r3, r3, #4
 8600 106e 0B44     		add	r3, r3, r1
 8601 1070 03F58873 		add	r3, r3, #272
 8602 1074 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 199


1070:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8603              		.loc 1 1070 0
 8604 1076 1433     		adds	r3, r3, #20
 8605 1078 DAB2     		uxtb	r2, r3
 8606 107a 07F54873 		add	r3, r7, #800
 8607 107e 83F84020 		strb	r2, [r3, #64]
 8608 1082 07F54873 		add	r3, r7, #800
 8609 1086 1422     		movs	r2, #20
 8610 1088 83F84120 		strb	r2, [r3, #65]
 8611 108c 07F54873 		add	r3, r7, #800
 8612 1090 1522     		movs	r2, #21
 8613 1092 83F84220 		strb	r2, [r3, #66]
 8614 1096 07F54873 		add	r3, r7, #800
 8615 109a 3222     		movs	r2, #50
 8616 109c 83F84320 		strb	r2, [r3, #67]
 8617 10a0 07F54873 		add	r3, r7, #800
 8618 10a4 3222     		movs	r2, #50
 8619 10a6 83F84420 		strb	r2, [r3, #68]
 8620 10aa 07F54873 		add	r3, r7, #800
 8621 10ae 3222     		movs	r2, #50
 8622 10b0 83F84520 		strb	r2, [r3, #69]
 8623 10b4 07F54873 		add	r3, r7, #800
 8624 10b8 3222     		movs	r2, #50
 8625 10ba 83F84620 		strb	r2, [r3, #70]
 8626 10be 07F54873 		add	r3, r7, #800
 8627 10c2 6E22     		movs	r2, #110
 8628 10c4 83F84720 		strb	r2, [r3, #71]
 8629 10c8 07F54873 		add	r3, r7, #800
 8630 10cc 6E22     		movs	r2, #110
 8631 10ce 83F84820 		strb	r2, [r3, #72]
 8632 10d2 07F54873 		add	r3, r7, #800
 8633 10d6 6E22     		movs	r2, #110
 8634 10d8 83F84920 		strb	r2, [r3, #73]
 8635 10dc 07F54873 		add	r3, r7, #800
 8636 10e0 0022     		movs	r2, #0
 8637 10e2 83F84A20 		strb	r2, [r3, #74]
 8638 10e6 07F54873 		add	r3, r7, #800
 8639 10ea 6422     		movs	r2, #100
 8640 10ec 83F84B20 		strb	r2, [r3, #75]
 8641 10f0 07F54873 		add	r3, r7, #800
 8642 10f4 6422     		movs	r2, #100
 8643 10f6 83F84C20 		strb	r2, [r3, #76]
 8644 10fa 07F54873 		add	r3, r7, #800
 8645 10fe 6422     		movs	r2, #100
 8646 1100 83F84D20 		strb	r2, [r3, #77]
 8647 1104 07F54873 		add	r3, r7, #800
 8648 1108 5022     		movs	r2, #80
 8649 110a 83F84E20 		strb	r2, [r3, #78]
 8650 110e 07F54873 		add	r3, r7, #800
 8651 1112 5022     		movs	r2, #80
 8652 1114 83F84F20 		strb	r2, [r3, #79]
 8653 1118 07F54873 		add	r3, r7, #800
 8654 111c 5A22     		movs	r2, #90
 8655 111e 83F85020 		strb	r2, [r3, #80]
 8656 1122 07F54873 		add	r3, r7, #800
 8657 1126 5A22     		movs	r2, #90
 8658 1128 83F85120 		strb	r2, [r3, #81]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 200


 8659 112c 07F54873 		add	r3, r7, #800
 8660 1130 5A22     		movs	r2, #90
 8661 1132 83F85220 		strb	r2, [r3, #82]
1090:..\src/command_processing.c ****         ST_EXPANSION, ST_EXPANSION, ST_EXPANSION, ST_JOY_SPEC,
1091:..\src/command_processing.c ****         ST_JOY_SPEC, ST_JOY_SPEC, ST_DEVICE, ST_WR_SPEC, 
1092:..\src/command_processing.c ****         ST_WR_SPEC,
1093:..\src/command_processing.c ****         
1094:..\src/command_processing.c ****                     ST_WR_SPEC, ST_MS_SPEC, ST_MS_SPEC,
1095:..\src/command_processing.c ****         ST_FB_SPEC, ST_FB_SPEC, ST_FB_SPEC
1096:..\src/command_processing.c ****         
1097:..\src/command_processing.c ****     };
1098:..\src/command_processing.c ****     
1099:..\src/command_processing.c ****     const char* PARAMS_STR[NUM_OF_PARAMS] = {
 8662              		.loc 1 1099 0
 8663 1136 07F5EA73 		add	r3, r7, #468
 8664 113a CD4A     		ldr	r2, .L385
 8665 113c 1846     		mov	r0, r3
 8666 113e 1146     		mov	r1, r2
 8667 1140 4FF4A673 		mov	r3, #332
 8668 1144 1A46     		mov	r2, r3
 8669 1146 FFF7FEFF 		bl	memcpy
1100:..\src/command_processing.c ****         "1 - Device ID:", "2 - Position PID [P, I, D]:", "3 - Current PID [P, I, D]:", "4 - Startup
1101:..\src/command_processing.c ****         "5 - Input mode:", "6 - Control mode:", "7 - Resolutions:", "8 - Measurement Offsets:", 
1102:..\src/command_processing.c ****         "9 - Multipliers:", "10 - Pos. limit active:", "11 - Pos. limits [inf, sup]:", "12 - Max st
1103:..\src/command_processing.c ****         "13 - Current limit:", "14 - EMG thresholds:", "15 - EMG calibration on startup:", "16 - EM
1104:..\src/command_processing.c ****         "17 - EMG max speeds:", "18 - Absolute encoder position:", "19 - Motor handle ratio:", "20 
1105:..\src/command_processing.c ****         "21 - Current lookup:", "22 - Date of maintenance [D/M/Y]:", "23 - Rest position:", "24 - R
1106:..\src/command_processing.c ****         "25 - Rest vel closure (ticks/sec):", "26 - Rest position enabled:", "27 - EMG inversion:",
1107:..\src/command_processing.c ****         "29 - Enable IMUs:", "30 - Read Expansion port:", "31 - Reset counters:", "32 - Last checke
1108:..\src/command_processing.c ****         "33 - SPI read delay (IMU):", "34 - On board IMU conf. [a,g,m,q,t]:", "35 - User ID:", "36 
1109:..\src/command_processing.c ****         
1110:..\src/command_processing.c ****         // GENERIC PARAMS
1111:..\src/command_processing.c ****         "37 - Associated encoder line:", "38 - Driver type:", "39 - PWM rate limiter:", "40 - Not r
1112:..\src/command_processing.c ****         "41 - Enc idx used for control:", "42 - Gear params[N1, N2, I1]:", "43 - Use second motor:"
1113:..\src/command_processing.c ****         "45 - Current PID [P, I, D]:", "46 - Startup Activation:", "47 - Input mode:", "48 - Contro
1114:..\src/command_processing.c ****         "49 - Resolutions:", "50 - Measurement Offsets:", "51 - Multipliers:", "52 - Pos. limit act
1115:..\src/command_processing.c ****         "53 - Pos. limits [inf, sup]:", "54 - Max steps [neg, pos]:", "55 - Current limit:", "56 - 
1116:..\src/command_processing.c ****         "57 - Motor handle ratio:", "58 - PWM rescaling:", "59 - Current lookup:", "60 - Associated
1117:..\src/command_processing.c ****         "61 - PWM Frequency:", "62 - PWM rate limiter:", "63 - Not reversible:", "64 - Enc idx used
1118:..\src/command_processing.c ****         "65 - Gear params[N1, N2, I1]:", "66 - Read enc raw line 0:", "67 - Read enc raw line 1:", 
1119:..\src/command_processing.c ****         "69 - ADC channel [1-6]:", "70 - ADC channel [7-12]:", "71 - Record EMG on SD card:", "72 -
1120:..\src/command_processing.c ****         "73 - Joystick threshold:", "74 - Joystick gains:", "75 - Device type:", "76 - EMG FSM act.
1121:..\src/command_processing.c ****         "77 - Fast act.thresholds:",
1122:..\src/command_processing.c ****         
1123:..\src/command_processing.c ****                                      "78 - Wrist direction:", "79 - Slave communication active:", "
1124:..\src/command_processing.c ****         "81 - Maximum slave residual current:", "82 - Maximum pressure feedback (kPa):", "83 - Prop
1125:..\src/command_processing.c ****     };
1126:..\src/command_processing.c **** 
1127:..\src/command_processing.c ****     //Parameters menu
1128:..\src/command_processing.c ****     char spi_delay_menu[118]    = ""; 
 8670              		.loc 1 1128 0
 8671 114a 07F5AE73 		add	r3, r7, #348
 8672 114e 0022     		movs	r2, #0
 8673 1150 1A60     		str	r2, [r3]
 8674 1152 0433     		adds	r3, r3, #4
 8675 1154 7222     		movs	r2, #114
 8676 1156 0021     		movs	r1, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 201


 8677 1158 1846     		mov	r0, r3
 8678 115a FFF7FEFF 		bl	memset
1129:..\src/command_processing.c ****     sprintf(spi_delay_menu, "0 -> None\n1 -> Low (%u us delay for each 8-bit register read)\n2 -> H
 8679              		.loc 1 1129 0
 8680 115e 07F5AE70 		add	r0, r7, #348
 8681 1162 6423     		movs	r3, #100
 8682 1164 0A22     		movs	r2, #10
 8683 1166 C349     		ldr	r1, .L385+4
 8684 1168 FFF7FEFF 		bl	sprintf
1130:..\src/command_processing.c **** 
1131:..\src/command_processing.c ****     char fsm_activation_mode_menu[56] = "";
 8685              		.loc 1 1131 0
 8686 116c 07F59273 		add	r3, r7, #292
 8687 1170 0022     		movs	r2, #0
 8688 1172 1A60     		str	r2, [r3]
 8689 1174 0433     		adds	r3, r3, #4
 8690 1176 3422     		movs	r2, #52
 8691 1178 0021     		movs	r1, #0
 8692 117a 1846     		mov	r0, r3
 8693 117c FFF7FEFF 		bl	memset
1132:..\src/command_processing.c ****     if (MEM_P->dev.dev_type == SOFTHAND_2_MOTORS){
 8694              		.loc 1 1132 0
 8695 1180 D7F88035 		ldr	r3, [r7, #1408]
 8696 1184 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 8697 1188 042B     		cmp	r3, #4
 8698 118a 10D1     		bne	.L317
1133:..\src/command_processing.c ****         sprintf(fsm_activation_mode_menu, "0 -> Fast:syn2, Slow:syn1\n1 -> Slow:syn2, Fast:syn1\n")
 8699              		.loc 1 1133 0
 8700 118c 07F59273 		add	r3, r7, #292
 8701 1190 B94A     		ldr	r2, .L385+8
 8702 1192 1C46     		mov	r4, r3
 8703 1194 1546     		mov	r5, r2
 8704 1196 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 8705 1198 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8706 119a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 8707 119c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8708 119e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 8709 11a0 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8710 11a2 95E80300 		ldmia	r5, {r0, r1}
 8711 11a6 2060     		str	r0, [r4]
 8712 11a8 0434     		adds	r4, r4, #4
 8713 11aa 2170     		strb	r1, [r4]
 8714 11ac 0FE0     		b	.L318
 8715              	.L317:
1134:..\src/command_processing.c ****     }
1135:..\src/command_processing.c ****     else {
1136:..\src/command_processing.c ****         sprintf(fsm_activation_mode_menu, "0 -> Fast:wrist,Slow:hand\n1 -> Slow:wrist,Fast:hand\n")
 8716              		.loc 1 1136 0
 8717 11ae 07F59273 		add	r3, r7, #292
 8718 11b2 B24A     		ldr	r2, .L385+12
 8719 11b4 1C46     		mov	r4, r3
 8720 11b6 1546     		mov	r5, r2
 8721 11b8 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 8722 11ba 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8723 11bc 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 8724 11be 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8725 11c0 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 202


 8726 11c2 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8727 11c4 95E80300 		ldmia	r5, {r0, r1}
 8728 11c8 2060     		str	r0, [r4]
 8729 11ca 0434     		adds	r4, r4, #4
 8730 11cc 2170     		strb	r1, [r4]
 8731              	.L318:
1137:..\src/command_processing.c ****     }
1138:..\src/command_processing.c ****     
1139:..\src/command_processing.c ****     const char* MENU_STR[NUM_OF_PARAMS_MENU] = {
 8732              		.loc 1 1139 0
 8733 11ce 07F1F403 		add	r3, r7, #244
 8734 11d2 AB4A     		ldr	r2, .L385+16
 8735 11d4 1A60     		str	r2, [r3]
 8736 11d6 07F1F403 		add	r3, r7, #244
 8737 11da AA4A     		ldr	r2, .L385+20
 8738 11dc 5A60     		str	r2, [r3, #4]
 8739 11de 07F1F403 		add	r3, r7, #244
 8740 11e2 A94A     		ldr	r2, .L385+24
 8741 11e4 9A60     		str	r2, [r3, #8]
 8742 11e6 07F1F403 		add	r3, r7, #244
 8743 11ea A84A     		ldr	r2, .L385+28
 8744 11ec DA60     		str	r2, [r3, #12]
 8745 11ee 07F1F403 		add	r3, r7, #244
 8746 11f2 A74A     		ldr	r2, .L385+32
 8747 11f4 1A61     		str	r2, [r3, #16]
 8748 11f6 07F1F403 		add	r3, r7, #244
 8749 11fa A64A     		ldr	r2, .L385+36
 8750 11fc 5A61     		str	r2, [r3, #20]
 8751 11fe 07F1F403 		add	r3, r7, #244
 8752 1202 07F5AE72 		add	r2, r7, #348
 8753 1206 9A61     		str	r2, [r3, #24]
 8754 1208 07F1F403 		add	r3, r7, #244
 8755 120c A24A     		ldr	r2, .L385+40
 8756 120e DA61     		str	r2, [r3, #28]
 8757 1210 07F1F403 		add	r3, r7, #244
 8758 1214 A14A     		ldr	r2, .L385+44
 8759 1216 1A62     		str	r2, [r3, #32]
 8760 1218 07F1F403 		add	r3, r7, #244
 8761 121c A04A     		ldr	r2, .L385+48
 8762 121e 5A62     		str	r2, [r3, #36]
 8763 1220 07F1F403 		add	r3, r7, #244
 8764 1224 07F59272 		add	r2, r7, #292
 8765 1228 9A62     		str	r2, [r3, #40]
 8766 122a 07F1F403 		add	r3, r7, #244
 8767 122e 9D4A     		ldr	r2, .L385+52
 8768 1230 DA62     		str	r2, [r3, #44]
1140:..\src/command_processing.c ****         "0 -> Usb\n1 -> Handle\n2 -> EMG proportional\n3 -> EMG Integral\n4 -> EMG FCFS\n5 -> EMG F
1141:..\src/command_processing.c ****         "0 -> Position\n1 -> PWM\n2 -> Current\n3 -> Position and Current\n",                      
1142:..\src/command_processing.c ****         "0 -> Deactivate [NO]\n1 -> Activate [YES]\n",                                             
1143:..\src/command_processing.c ****         "0 -> Right\n1 -> Left\n",                                                                 
1144:..\src/command_processing.c ****         "0 -> OFF\n1 -> ON\nThe board will reset\n",                                               
1145:..\src/command_processing.c ****         "0 -> None\n1 -> SD/RTC board\n2 -> WiFi board [N/A]\n3 -> Other [N/A]\nThe board will rese
1146:..\src/command_processing.c ****         spi_delay_menu,                                                                            
1147:..\src/command_processing.c ****         "0 -> Generic user\n1 -> Maria\n2 -> R01\nThe board will reset\n",                         
1148:..\src/command_processing.c ****         "0 -> 30 Hz\n1 -> 100 Hz\n2 -> 300 Hz\n3 -> 1 KHz\n4 -> 3 KHz\nThe board will reset\n",    
1149:..\src/command_processing.c ****         "0 -> SOFTHAND PRO\n1 -> GENERIC 2 MOTORS\n2 -> AIR CHAMBERS\n3 -> OTTOBOCK WRIST\n4 -> SOF
1150:..\src/command_processing.c ****         fsm_activation_mode_menu,                                                                  
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 203


1151:..\src/command_processing.c ****         "0 -> Close:CW, Open:CCW\n1 -> Close:CCW, Open:CW\n"                                       
1152:..\src/command_processing.c ****     };   
1153:..\src/command_processing.c ****     
1154:..\src/command_processing.c ****     uint8 NUM_MENU[32] = {3, 1, 2, 3, 3, 3, 3, 3, 3, 4, 5, 6, 3, 7, 8, 9, 3, 5, 3, 1, 2, 3, 3, 3, 9
 8769              		.loc 1 1154 0
 8770 1232 07F1D403 		add	r3, r7, #212
 8771 1236 9C4A     		ldr	r2, .L385+56
 8772 1238 1C46     		mov	r4, r3
 8773 123a 1546     		mov	r5, r2
 8774 123c 2868     		ldr	r0, [r5]	@ unaligned
 8775 123e 6968     		ldr	r1, [r5, #4]	@ unaligned
 8776 1240 AA68     		ldr	r2, [r5, #8]	@ unaligned
 8777 1242 EB68     		ldr	r3, [r5, #12]	@ unaligned
 8778 1244 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8779 1246 2869     		ldr	r0, [r5, #16]	@ unaligned
 8780 1248 6969     		ldr	r1, [r5, #20]	@ unaligned
 8781 124a AA69     		ldr	r2, [r5, #24]	@ unaligned
 8782 124c EB69     		ldr	r3, [r5, #28]	@ unaligned
 8783 124e 0FC4     		stmia	r4!, {r0, r1, r2, r3}
1155:..\src/command_processing.c ****     uint8 CUSTOM_PARAM_GET_LIST[9]  = {2, 3, 8, 11, 23, 44, 45, 50, 53};
 8784              		.loc 1 1155 0
 8785 1250 07F1C803 		add	r3, r7, #200
 8786 1254 954A     		ldr	r2, .L385+60
 8787 1256 1068     		ldr	r0, [r2]	@ unaligned
 8788 1258 5168     		ldr	r1, [r2, #4]	@ unaligned
 8789 125a 03C3     		stmia	r3!, {r0, r1}
 8790 125c 127A     		ldrb	r2, [r2, #8]
 8791 125e 1A70     		strb	r2, [r3]
1156:..\src/command_processing.c ****     uint8 CUSTOM_PARAM_SET_LIST[18] = {2, 3, 5, 8, 11, 23, 24, 28, 31, 32, 38, 44, 45, 47, 50, 53, 
 8792              		.loc 1 1156 0
 8793 1260 07F1B403 		add	r3, r7, #180
 8794 1264 924A     		ldr	r2, .L385+64
 8795 1266 1C46     		mov	r4, r3
 8796 1268 1546     		mov	r5, r2
 8797 126a 2868     		ldr	r0, [r5]	@ unaligned
 8798 126c 6968     		ldr	r1, [r5, #4]	@ unaligned
 8799 126e AA68     		ldr	r2, [r5, #8]	@ unaligned
 8800 1270 EB68     		ldr	r3, [r5, #12]	@ unaligned
 8801 1272 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8802 1274 2B8A     		ldrh	r3, [r5, #16]	@ unaligned
 8803 1276 2380     		strh	r3, [r4]	@ unaligned
1157:..\src/command_processing.c ****     uint8 USER_ID_PARAM = 35;
 8804              		.loc 1 1157 0
 8805 1278 2323     		movs	r3, #35
 8806 127a 87F87B35 		strb	r3, [r7, #1403]
1158:..\src/command_processing.c **** 
1159:..\src/command_processing.c **** // Note: If a custom parameter change is needed, add to CUSTOM_PARAM_LIST, then change it
1160:..\src/command_processing.c **** // in the dedicated function set_custom_param()    
1161:..\src/command_processing.c ****     
1162:..\src/command_processing.c **** //------------------ END OF PARAMETERS VARIABLES --------------------//        
1163:..\src/command_processing.c **** 
1164:..\src/command_processing.c **** // DO NOT MODIFY THE FUNCTION UNDER THIS LINE
1165:..\src/command_processing.c ****     
1166:..\src/command_processing.c ****     uint8 CUSTOM_PARAM_GET[NUM_OF_PARAMS];
1167:..\src/command_processing.c ****     j = 0;
 8807              		.loc 1 1167 0
 8808 127e 0023     		movs	r3, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 204


 8809 1280 87F88635 		strb	r3, [r7, #1414]
1168:..\src/command_processing.c ****     for (i=0; i<NUM_OF_PARAMS; i++) {
 8810              		.loc 1 1168 0
 8811 1284 0023     		movs	r3, #0
 8812 1286 87F88735 		strb	r3, [r7, #1415]
 8813 128a 21E0     		b	.L319
 8814              	.L322:
1169:..\src/command_processing.c ****         if (CUSTOM_PARAM_GET_LIST[j] == i+1) {
 8815              		.loc 1 1169 0
 8816 128c 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 8817 1290 07F1C802 		add	r2, r7, #200
 8818 1294 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8819 1296 1A46     		mov	r2, r3
 8820 1298 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 8821 129c 0133     		adds	r3, r3, #1
 8822 129e 9A42     		cmp	r2, r3
 8823 12a0 0BD1     		bne	.L320
1170:..\src/command_processing.c ****             CUSTOM_PARAM_GET[i] = TRUE;
 8824              		.loc 1 1170 0
 8825 12a2 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 8826 12a6 07F16002 		add	r2, r7, #96
 8827 12aa 0121     		movs	r1, #1
 8828 12ac D154     		strb	r1, [r2, r3]
1171:..\src/command_processing.c ****             j++;
 8829              		.loc 1 1171 0
 8830 12ae 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 8831 12b2 0133     		adds	r3, r3, #1
 8832 12b4 87F88635 		strb	r3, [r7, #1414]
 8833 12b8 05E0     		b	.L321
 8834              	.L320:
1172:..\src/command_processing.c ****         }
1173:..\src/command_processing.c ****         else {
1174:..\src/command_processing.c ****             CUSTOM_PARAM_GET[i] = FALSE;
 8835              		.loc 1 1174 0
 8836 12ba 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 8837 12be 07F16002 		add	r2, r7, #96
 8838 12c2 0021     		movs	r1, #0
 8839 12c4 D154     		strb	r1, [r2, r3]
 8840              	.L321:
1168:..\src/command_processing.c ****         if (CUSTOM_PARAM_GET_LIST[j] == i+1) {
 8841              		.loc 1 1168 0 discriminator 2
 8842 12c6 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 8843 12ca 0133     		adds	r3, r3, #1
 8844 12cc 87F88735 		strb	r3, [r7, #1415]
 8845              	.L319:
1168:..\src/command_processing.c ****         if (CUSTOM_PARAM_GET_LIST[j] == i+1) {
 8846              		.loc 1 1168 0 is_stmt 0 discriminator 1
 8847 12d0 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 8848 12d4 522B     		cmp	r3, #82
 8849 12d6 D9D9     		bls	.L322
1175:..\src/command_processing.c ****         }
1176:..\src/command_processing.c ****     }   // All parameters can be get with default settings, except the following ones
1177:..\src/command_processing.c ****     uint8 CUSTOM_PARAM_SET[NUM_OF_PARAMS];
1178:..\src/command_processing.c ****     j = 0;
 8850              		.loc 1 1178 0 is_stmt 1
 8851 12d8 0023     		movs	r3, #0
 8852 12da 87F88635 		strb	r3, [r7, #1414]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 205


1179:..\src/command_processing.c ****     for (i=0; i<NUM_OF_PARAMS; i++) {
 8853              		.loc 1 1179 0
 8854 12de 0023     		movs	r3, #0
 8855 12e0 87F88735 		strb	r3, [r7, #1415]
 8856 12e4 21E0     		b	.L323
 8857              	.L326:
1180:..\src/command_processing.c ****         if (CUSTOM_PARAM_SET_LIST[j] == i+1) {
 8858              		.loc 1 1180 0
 8859 12e6 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 8860 12ea 07F1B402 		add	r2, r7, #180
 8861 12ee D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8862 12f0 1A46     		mov	r2, r3
 8863 12f2 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 8864 12f6 0133     		adds	r3, r3, #1
 8865 12f8 9A42     		cmp	r2, r3
 8866 12fa 0BD1     		bne	.L324
1181:..\src/command_processing.c ****             CUSTOM_PARAM_SET[i] = TRUE;
 8867              		.loc 1 1181 0
 8868 12fc 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 8869 1300 07F10C02 		add	r2, r7, #12
 8870 1304 0121     		movs	r1, #1
 8871 1306 D154     		strb	r1, [r2, r3]
1182:..\src/command_processing.c ****             j++;
 8872              		.loc 1 1182 0
 8873 1308 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 8874 130c 0133     		adds	r3, r3, #1
 8875 130e 87F88635 		strb	r3, [r7, #1414]
 8876 1312 05E0     		b	.L325
 8877              	.L324:
1183:..\src/command_processing.c ****         }
1184:..\src/command_processing.c ****         else {
1185:..\src/command_processing.c ****             CUSTOM_PARAM_SET[i] = FALSE;
 8878              		.loc 1 1185 0
 8879 1314 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 8880 1318 07F10C02 		add	r2, r7, #12
 8881 131c 0021     		movs	r1, #0
 8882 131e D154     		strb	r1, [r2, r3]
 8883              	.L325:
1179:..\src/command_processing.c ****         if (CUSTOM_PARAM_SET_LIST[j] == i+1) {
 8884              		.loc 1 1179 0 discriminator 2
 8885 1320 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 8886 1324 0133     		adds	r3, r3, #1
 8887 1326 87F88735 		strb	r3, [r7, #1415]
 8888              	.L323:
1179:..\src/command_processing.c ****         if (CUSTOM_PARAM_SET_LIST[j] == i+1) {
 8889              		.loc 1 1179 0 is_stmt 0 discriminator 1
 8890 132a 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 8891 132e 522B     		cmp	r3, #82
 8892 1330 D9D9     		bls	.L326
1186:..\src/command_processing.c ****         }
1187:..\src/command_processing.c ****     }   // All parameters can be setted with default settings, except the following ones
1188:..\src/command_processing.c ****         
1189:..\src/command_processing.c ****     if (!index) {
 8893              		.loc 1 1189 0 is_stmt 1
 8894 1332 BB1D     		adds	r3, r7, #6
 8895 1334 1B88     		ldrh	r3, [r3]
 8896 1336 002B     		cmp	r3, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 206


 8897 1338 17D1     		bne	.L327
1190:..\src/command_processing.c ****         // Get parameters list with relative types
1191:..\src/command_processing.c ****         get_param_list(VAR_P, TYPES, NUM_ITEMS, NUM_STRUCT, NUM_MENU, PARAMS_STR, CUSTOM_PARAM_GET,
 8898              		.loc 1 1191 0
 8899 133a 07F54874 		add	r4, r7, #800
 8900 133e 07F55D72 		add	r2, r7, #884
 8901 1342 07F57271 		add	r1, r7, #968
 8902 1346 07F21C40 		addw	r0, r7, #1052
 8903 134a 07F1F403 		add	r3, r7, #244
 8904 134e 0393     		str	r3, [sp, #12]
 8905 1350 07F16003 		add	r3, r7, #96
 8906 1354 0293     		str	r3, [sp, #8]
 8907 1356 07F5EA73 		add	r3, r7, #468
 8908 135a 0193     		str	r3, [sp, #4]
 8909 135c 07F1D403 		add	r3, r7, #212
 8910 1360 0093     		str	r3, [sp]
 8911 1362 2346     		mov	r3, r4
 8912 1364 FFF7FEFF 		bl	get_param_list
1192:..\src/command_processing.c ****     }
1193:..\src/command_processing.c ****     else {
1194:..\src/command_processing.c ****         // Set specific parameter        
1195:..\src/command_processing.c ****         PARAM_IDX = index -1;       // Get right vector param index
1196:..\src/command_processing.c ****         
1197:..\src/command_processing.c ****         // Find size of data
1198:..\src/command_processing.c ****         switch (TYPES[PARAM_IDX]) {
1199:..\src/command_processing.c ****             case TYPE_FLAG: case TYPE_INT8: case TYPE_UINT8: case TYPE_STRING:
1200:..\src/command_processing.c ****                 sod = 1; break;
1201:..\src/command_processing.c ****             case TYPE_INT16: case TYPE_UINT16:
1202:..\src/command_processing.c ****                 sod = 2; break;
1203:..\src/command_processing.c ****             case TYPE_INT32: case TYPE_UINT32: case TYPE_FLOAT:
1204:..\src/command_processing.c ****                 sod = 4; break;
1205:..\src/command_processing.c ****         }   
1206:..\src/command_processing.c ****             
1207:..\src/command_processing.c ****         if (!CUSTOM_PARAM_SET[PARAM_IDX]) {
1208:..\src/command_processing.c ****             // Use default specifications for param setting
1209:..\src/command_processing.c ****             switch(TYPES[PARAM_IDX]) {
1210:..\src/command_processing.c ****                 case TYPE_FLAG: case TYPE_UINT8:
1211:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1212:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
1213:..\src/command_processing.c ****                     }
1214:..\src/command_processing.c ****                     break;                
1215:..\src/command_processing.c ****                 case TYPE_STRING:
1216:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1217:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
1218:..\src/command_processing.c ****                     }
1219:..\src/command_processing.c ****                     *(VAR_P[PARAM_IDX] + i*sod) = '\0';
1220:..\src/command_processing.c ****                 break; 
1221:..\src/command_processing.c ****                 case TYPE_INT8:
1222:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1223:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = *((int8*) &g_rx.buffer[3 + i]);
1224:..\src/command_processing.c ****                     }
1225:..\src/command_processing.c ****                     break;                    
1226:..\src/command_processing.c ****                 case TYPE_INT16:
1227:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1228:..\src/command_processing.c ****                         aux_int16 = *((int16 *) &g_rx.buffer[3 + i*sod]);
1229:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1230:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int16))
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 207


1231:..\src/command_processing.c ****                         }
1232:..\src/command_processing.c ****                     }                   
1233:..\src/command_processing.c ****                     break;
1234:..\src/command_processing.c ****                 case TYPE_UINT16:
1235:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1236:..\src/command_processing.c ****                         aux_uint16 = *((uint16 *) &g_rx.buffer[3 + i*sod]);
1237:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1238:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint16)
1239:..\src/command_processing.c ****                         }
1240:..\src/command_processing.c ****                     }
1241:..\src/command_processing.c ****                     break;
1242:..\src/command_processing.c ****                 case TYPE_INT32:
1243:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1244:..\src/command_processing.c ****                         aux_int32 = *((int32 *) &g_rx.buffer[3 + i*sod]);
1245:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1246:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int32))
1247:..\src/command_processing.c ****                         }
1248:..\src/command_processing.c ****                     }
1249:..\src/command_processing.c ****                     break;
1250:..\src/command_processing.c ****                 case TYPE_UINT32:
1251:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1252:..\src/command_processing.c ****                         aux_uint32 = *((uint32 *) &g_rx.buffer[3 + i*sod]);
1253:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1254:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint32)
1255:..\src/command_processing.c ****                         }
1256:..\src/command_processing.c ****                     }
1257:..\src/command_processing.c ****                     break;
1258:..\src/command_processing.c ****                 case TYPE_FLOAT:
1259:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1260:..\src/command_processing.c ****                         aux_float = *((float *) &g_rx.buffer[3 + i*sod]);
1261:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1262:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_float))
1263:..\src/command_processing.c ****                         }
1264:..\src/command_processing.c ****                     }
1265:..\src/command_processing.c ****                     break;
1266:..\src/command_processing.c ****                 default:
1267:..\src/command_processing.c ****                     break;
1268:..\src/command_processing.c ****             }
1269:..\src/command_processing.c ****         }
1270:..\src/command_processing.c ****         else {  
1271:..\src/command_processing.c ****             // Use custom specifications for param setting
1272:..\src/command_processing.c ****             set_custom_param(index);
1273:..\src/command_processing.c ****         }
1274:..\src/command_processing.c ****         
1275:..\src/command_processing.c ****         // Store param also in user_emg structure
1276:..\src/command_processing.c ****         if (index != USER_ID_PARAM) {        // Not when changing user id
1277:..\src/command_processing.c ****             memcpy( &(MEM_P->user[MEM_P->dev.user_id].user_emg), &(MEM_P->emg), sizeof(MEM_P->emg) 
1278:..\src/command_processing.c ****         }
1279:..\src/command_processing.c ****         
1280:..\src/command_processing.c ****         // Perform chip reset if needed
1281:..\src/command_processing.c ****         if (TYPES[PARAM_IDX] == TYPE_FLAG){
1282:..\src/command_processing.c ****             uint8 idx = 0, menu_idx = -1;
1283:..\src/command_processing.c ****             do {
1284:..\src/command_processing.c ****                 if (TYPES[idx] == TYPE_FLAG) menu_idx++;    // Increment idx to find the right NUM_
1285:..\src/command_processing.c ****                 idx++;
1286:..\src/command_processing.c ****             } while (idx <= PARAM_IDX);
1287:..\src/command_processing.c ****             
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 208


1288:..\src/command_processing.c ****             if (NUM_MENU[menu_idx] == 5 || NUM_MENU[menu_idx] == 6 || NUM_MENU[menu_idx] == 8 || NU
1289:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
1290:..\src/command_processing.c ****             }   
1291:..\src/command_processing.c ****         }
1292:..\src/command_processing.c ****     }
1293:..\src/command_processing.c **** } 
 8913              		.loc 1 1293 0
 8914 1368 E0E2     		b	.L378
 8915              	.L327:
1195:..\src/command_processing.c ****         
 8916              		.loc 1 1195 0
 8917 136a BB1D     		adds	r3, r7, #6
 8918 136c 1B88     		ldrh	r3, [r3]	@ movhi
 8919 136e DBB2     		uxtb	r3, r3
 8920 1370 013B     		subs	r3, r3, #1
 8921 1372 87F87A35 		strb	r3, [r7, #1402]
1198:..\src/command_processing.c ****             case TYPE_FLAG: case TYPE_INT8: case TYPE_UINT8: case TYPE_STRING:
 8922              		.loc 1 1198 0
 8923 1376 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 8924 137a 07F57272 		add	r2, r7, #968
 8925 137e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8926 1380 092B     		cmp	r3, #9
 8927 1382 23D8     		bhi	.L329
 8928 1384 01A2     		adr	r2, .L331
 8929 1386 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 8930 138a 00BF     		.p2align 2
 8931              	.L331:
 8932 138c B5130000 		.word	.L330+1
 8933 1390 B5130000 		.word	.L330+1
 8934 1394 B5130000 		.word	.L330+1
 8935 1398 BD130000 		.word	.L332+1
 8936 139c BD130000 		.word	.L332+1
 8937 13a0 C5130000 		.word	.L333+1
 8938 13a4 C5130000 		.word	.L333+1
 8939 13a8 C5130000 		.word	.L333+1
 8940 13ac CD130000 		.word	.L329+1
 8941 13b0 B5130000 		.word	.L330+1
 8942              		.p2align 1
 8943              	.L330:
1200:..\src/command_processing.c ****             case TYPE_INT16: case TYPE_UINT16:
 8944              		.loc 1 1200 0
 8945 13b4 0123     		movs	r3, #1
 8946 13b6 87F88535 		strb	r3, [r7, #1413]
 8947 13ba 07E0     		b	.L329
 8948              	.L332:
1202:..\src/command_processing.c ****             case TYPE_INT32: case TYPE_UINT32: case TYPE_FLOAT:
 8949              		.loc 1 1202 0
 8950 13bc 0223     		movs	r3, #2
 8951 13be 87F88535 		strb	r3, [r7, #1413]
 8952 13c2 03E0     		b	.L329
 8953              	.L333:
1204:..\src/command_processing.c ****         }   
 8954              		.loc 1 1204 0
 8955 13c4 0423     		movs	r3, #4
 8956 13c6 87F88535 		strb	r3, [r7, #1413]
 8957 13ca 00BF     		nop
 8958              	.L329:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 209


1207:..\src/command_processing.c ****             // Use default specifications for param setting
 8959              		.loc 1 1207 0
 8960 13cc 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 8961 13d0 07F10C02 		add	r2, r7, #12
 8962 13d4 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8963 13d6 002B     		cmp	r3, #0
 8964 13d8 40F03B82 		bne	.L334
1209:..\src/command_processing.c ****                 case TYPE_FLAG: case TYPE_UINT8:
 8965              		.loc 1 1209 0
 8966 13dc 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 8967 13e0 07F57272 		add	r2, r7, #968
 8968 13e4 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8969 13e6 092B     		cmp	r3, #9
 8970 13e8 00F23C82 		bhi	.L377
 8971 13ec 01A2     		adr	r2, .L337
 8972 13ee 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 8973 13f2 00BF     		.p2align 2
 8974              	.L337:
 8975 13f4 1D140000 		.word	.L336+1
 8976 13f8 1B150000 		.word	.L338+1
 8977 13fc 1D140000 		.word	.L336+1
 8978 1400 6D150000 		.word	.L339+1
 8979 1404 03160000 		.word	.L340+1
 8980 1408 97160000 		.word	.L341+1
 8981 140c 2B170000 		.word	.L342+1
 8982 1410 BF170000 		.word	.L343+1
 8983 1414 65180000 		.word	.L377+1
 8984 1418 69140000 		.word	.L344+1
 8985              		.p2align 1
 8986              	.L336:
1211:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 8987              		.loc 1 1211 0
 8988 141c 0023     		movs	r3, #0
 8989 141e 87F88735 		strb	r3, [r7, #1415]
 8990 1422 17E0     		b	.L345
 8991              	.L346:
1212:..\src/command_processing.c ****                     }
 8992              		.loc 1 1212 0 discriminator 3
 8993 1424 97F87A25 		ldrb	r2, [r7, #1402]	@ zero_extendqisi2
 8994 1428 07F21C43 		addw	r3, r7, #1052
 8995 142c 53F82230 		ldr	r3, [r3, r2, lsl #2]
 8996 1430 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 8997 1434 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 8998 1438 01FB02F2 		mul	r2, r1, r2
 8999 143c 1344     		add	r3, r3, r2
 9000 143e 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 9001 1442 0332     		adds	r2, r2, #3
 9002 1444 1B49     		ldr	r1, .L385+68
 9003 1446 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 9004 1448 1A70     		strb	r2, [r3]
1211:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 9005              		.loc 1 1211 0 discriminator 3
 9006 144a 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9007 144e 0133     		adds	r3, r3, #1
 9008 1450 87F88735 		strb	r3, [r7, #1415]
 9009              	.L345:
1211:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 210


 9010              		.loc 1 1211 0 is_stmt 0 discriminator 1
 9011 1454 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 9012 1458 07F55D72 		add	r2, r7, #884
 9013 145c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9014 145e 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 9015 1462 9A42     		cmp	r2, r3
 9016 1464 DED3     		bcc	.L346
1214:..\src/command_processing.c ****                 case TYPE_STRING:
 9017              		.loc 1 1214 0 is_stmt 1
 9018 1466 FEE1     		b	.L372
 9019              	.L344:
1216:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 9020              		.loc 1 1216 0
 9021 1468 0023     		movs	r3, #0
 9022 146a 87F88735 		strb	r3, [r7, #1415]
 9023 146e 3BE0     		b	.L348
 9024              	.L386:
 9025              		.align	2
 9026              	.L385:
 9027 1470 100F0000 		.word	.LC131
 9028 1474 74020000 		.word	.LC132
 9029 1478 E8020000 		.word	.LC133
 9030 147c 20030000 		.word	.LC134
 9031 1480 58030000 		.word	.LC135
 9032 1484 E4030000 		.word	.LC136
 9033 1488 24040000 		.word	.LC137
 9034 148c 50040000 		.word	.LC138
 9035 1490 68040000 		.word	.LC139
 9036 1494 90040000 		.word	.LC140
 9037 1498 EC040000 		.word	.LC141
 9038 149c 28050000 		.word	.LC142
 9039 14a0 78050000 		.word	.LC143
 9040 14a4 F4050000 		.word	.LC144
 9041 14a8 5C100000 		.word	.LC85
 9042 14ac 7C100000 		.word	.LC86
 9043 14b0 88100000 		.word	.LC87
 9044 14b4 00000000 		.word	g_rx
 9045              	.L349:
1217:..\src/command_processing.c ****                     }
 9046              		.loc 1 1217 0 discriminator 3
 9047 14b8 97F87A25 		ldrb	r2, [r7, #1402]	@ zero_extendqisi2
 9048 14bc 07F21C43 		addw	r3, r7, #1052
 9049 14c0 53F82230 		ldr	r3, [r3, r2, lsl #2]
 9050 14c4 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 9051 14c8 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 9052 14cc 01FB02F2 		mul	r2, r1, r2
 9053 14d0 1344     		add	r3, r3, r2
 9054 14d2 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 9055 14d6 0332     		adds	r2, r2, #3
 9056 14d8 E149     		ldr	r1, .L387
 9057 14da 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 9058 14dc 1A70     		strb	r2, [r3]
1216:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 9059              		.loc 1 1216 0 discriminator 3
 9060 14de 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9061 14e2 0133     		adds	r3, r3, #1
 9062 14e4 87F88735 		strb	r3, [r7, #1415]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 211


 9063              	.L348:
1216:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 9064              		.loc 1 1216 0 is_stmt 0 discriminator 1
 9065 14e8 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 9066 14ec 07F55D72 		add	r2, r7, #884
 9067 14f0 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9068 14f2 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 9069 14f6 9A42     		cmp	r2, r3
 9070 14f8 DED3     		bcc	.L349
1219:..\src/command_processing.c ****                 break; 
 9071              		.loc 1 1219 0 is_stmt 1
 9072 14fa 97F87A25 		ldrb	r2, [r7, #1402]	@ zero_extendqisi2
 9073 14fe 07F21C43 		addw	r3, r7, #1052
 9074 1502 53F82230 		ldr	r3, [r3, r2, lsl #2]
 9075 1506 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 9076 150a 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 9077 150e 01FB02F2 		mul	r2, r1, r2
 9078 1512 1344     		add	r3, r3, r2
 9079 1514 0022     		movs	r2, #0
 9080 1516 1A70     		strb	r2, [r3]
1220:..\src/command_processing.c ****                 case TYPE_INT8:
 9081              		.loc 1 1220 0
 9082 1518 A5E1     		b	.L372
 9083              	.L338:
1222:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = *((int8*) &g_rx.buffer[3 + i]);
 9084              		.loc 1 1222 0
 9085 151a 0023     		movs	r3, #0
 9086 151c 87F88735 		strb	r3, [r7, #1415]
 9087 1520 1AE0     		b	.L350
 9088              	.L351:
1223:..\src/command_processing.c ****                     }
 9089              		.loc 1 1223 0 discriminator 3
 9090 1522 97F87A25 		ldrb	r2, [r7, #1402]	@ zero_extendqisi2
 9091 1526 07F21C43 		addw	r3, r7, #1052
 9092 152a 53F82230 		ldr	r3, [r3, r2, lsl #2]
 9093 152e 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 9094 1532 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 9095 1536 01FB02F2 		mul	r2, r1, r2
 9096 153a 1344     		add	r3, r3, r2
 9097 153c 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 9098 1540 0332     		adds	r2, r2, #3
 9099 1542 C749     		ldr	r1, .L387
 9100 1544 0A44     		add	r2, r2, r1
 9101 1546 92F90020 		ldrsb	r2, [r2]
 9102 154a D2B2     		uxtb	r2, r2
 9103 154c 1A70     		strb	r2, [r3]
1222:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = *((int8*) &g_rx.buffer[3 + i]);
 9104              		.loc 1 1222 0 discriminator 3
 9105 154e 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9106 1552 0133     		adds	r3, r3, #1
 9107 1554 87F88735 		strb	r3, [r7, #1415]
 9108              	.L350:
1222:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = *((int8*) &g_rx.buffer[3 + i]);
 9109              		.loc 1 1222 0 is_stmt 0 discriminator 1
 9110 1558 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 9111 155c 07F55D72 		add	r2, r7, #884
 9112 1560 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 212


 9113 1562 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 9114 1566 9A42     		cmp	r2, r3
 9115 1568 DBD3     		bcc	.L351
1225:..\src/command_processing.c ****                 case TYPE_INT16:
 9116              		.loc 1 1225 0 is_stmt 1
 9117 156a 7CE1     		b	.L372
 9118              	.L339:
1227:..\src/command_processing.c ****                         aux_int16 = *((int16 *) &g_rx.buffer[3 + i*sod]);
 9119              		.loc 1 1227 0
 9120 156c 0023     		movs	r3, #0
 9121 156e 87F88735 		strb	r3, [r7, #1415]
 9122 1572 3CE0     		b	.L352
 9123              	.L355:
1228:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 9124              		.loc 1 1228 0
 9125 1574 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9126 1578 97F88525 		ldrb	r2, [r7, #1413]	@ zero_extendqisi2
 9127 157c 02FB03F3 		mul	r3, r2, r3
 9128 1580 0333     		adds	r3, r3, #3
 9129 1582 B74A     		ldr	r2, .L387
 9130 1584 1344     		add	r3, r3, r2
 9131 1586 B3F90030 		ldrsh	r3, [r3]
 9132 158a A7F87835 		strh	r3, [r7, #1400]	@ movhi
1229:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int16))
 9133              		.loc 1 1229 0
 9134 158e 0023     		movs	r3, #0
 9135 1590 87F88635 		strb	r3, [r7, #1414]
 9136 1594 20E0     		b	.L353
 9137              	.L354:
1230:..\src/command_processing.c ****                         }
 9138              		.loc 1 1230 0 discriminator 3
 9139 1596 97F87A25 		ldrb	r2, [r7, #1402]	@ zero_extendqisi2
 9140 159a 07F21C43 		addw	r3, r7, #1052
 9141 159e 53F82220 		ldr	r2, [r3, r2, lsl #2]
 9142 15a2 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9143 15a6 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 9144 15aa 01FB03F3 		mul	r3, r1, r3
 9145 15ae 1846     		mov	r0, r3
 9146 15b0 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 9147 15b4 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 9148 15b8 CB1A     		subs	r3, r1, r3
 9149 15ba 0344     		add	r3, r3, r0
 9150 15bc 013B     		subs	r3, r3, #1
 9151 15be 1344     		add	r3, r3, r2
 9152 15c0 97F88625 		ldrb	r2, [r7, #1414]	@ zero_extendqisi2
 9153 15c4 07F5AF61 		add	r1, r7, #1400
 9154 15c8 0A44     		add	r2, r2, r1
 9155 15ca 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9156 15cc 1A70     		strb	r2, [r3]
1229:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int16))
 9157              		.loc 1 1229 0 discriminator 3
 9158 15ce 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 9159 15d2 0133     		adds	r3, r3, #1
 9160 15d4 87F88635 		strb	r3, [r7, #1414]
 9161              	.L353:
1229:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int16))
 9162              		.loc 1 1229 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 213


 9163 15d8 97F88625 		ldrb	r2, [r7, #1414]	@ zero_extendqisi2
 9164 15dc 97F88535 		ldrb	r3, [r7, #1413]	@ zero_extendqisi2
 9165 15e0 9A42     		cmp	r2, r3
 9166 15e2 D8D3     		bcc	.L354
1227:..\src/command_processing.c ****                         aux_int16 = *((int16 *) &g_rx.buffer[3 + i*sod]);
 9167              		.loc 1 1227 0 is_stmt 1 discriminator 2
 9168 15e4 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9169 15e8 0133     		adds	r3, r3, #1
 9170 15ea 87F88735 		strb	r3, [r7, #1415]
 9171              	.L352:
1227:..\src/command_processing.c ****                         aux_int16 = *((int16 *) &g_rx.buffer[3 + i*sod]);
 9172              		.loc 1 1227 0 is_stmt 0 discriminator 1
 9173 15ee 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 9174 15f2 07F55D72 		add	r2, r7, #884
 9175 15f6 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9176 15f8 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 9177 15fc 9A42     		cmp	r2, r3
 9178 15fe B9D3     		bcc	.L355
1233:..\src/command_processing.c ****                 case TYPE_UINT16:
 9179              		.loc 1 1233 0 is_stmt 1
 9180 1600 31E1     		b	.L372
 9181              	.L340:
1235:..\src/command_processing.c ****                         aux_uint16 = *((uint16 *) &g_rx.buffer[3 + i*sod]);
 9182              		.loc 1 1235 0
 9183 1602 0023     		movs	r3, #0
 9184 1604 87F88735 		strb	r3, [r7, #1415]
 9185 1608 3BE0     		b	.L356
 9186              	.L359:
1236:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 9187              		.loc 1 1236 0
 9188 160a 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9189 160e 97F88525 		ldrb	r2, [r7, #1413]	@ zero_extendqisi2
 9190 1612 02FB03F3 		mul	r3, r2, r3
 9191 1616 0333     		adds	r3, r3, #3
 9192 1618 914A     		ldr	r2, .L387
 9193 161a 1344     		add	r3, r3, r2
 9194 161c 1B88     		ldrh	r3, [r3]
 9195 161e A7F87635 		strh	r3, [r7, #1398]	@ movhi
1237:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint16)
 9196              		.loc 1 1237 0
 9197 1622 0023     		movs	r3, #0
 9198 1624 87F88635 		strb	r3, [r7, #1414]
 9199 1628 20E0     		b	.L357
 9200              	.L358:
1238:..\src/command_processing.c ****                         }
 9201              		.loc 1 1238 0 discriminator 3
 9202 162a 97F87A25 		ldrb	r2, [r7, #1402]	@ zero_extendqisi2
 9203 162e 07F21C43 		addw	r3, r7, #1052
 9204 1632 53F82220 		ldr	r2, [r3, r2, lsl #2]
 9205 1636 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9206 163a 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 9207 163e 01FB03F3 		mul	r3, r1, r3
 9208 1642 1846     		mov	r0, r3
 9209 1644 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 9210 1648 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 9211 164c CB1A     		subs	r3, r1, r3
 9212 164e 0344     		add	r3, r3, r0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 214


 9213 1650 013B     		subs	r3, r3, #1
 9214 1652 1344     		add	r3, r3, r2
 9215 1654 97F88625 		ldrb	r2, [r7, #1414]	@ zero_extendqisi2
 9216 1658 07F27651 		addw	r1, r7, #1398
 9217 165c 0A44     		add	r2, r2, r1
 9218 165e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9219 1660 1A70     		strb	r2, [r3]
1237:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint16)
 9220              		.loc 1 1237 0 discriminator 3
 9221 1662 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 9222 1666 0133     		adds	r3, r3, #1
 9223 1668 87F88635 		strb	r3, [r7, #1414]
 9224              	.L357:
1237:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint16)
 9225              		.loc 1 1237 0 is_stmt 0 discriminator 1
 9226 166c 97F88625 		ldrb	r2, [r7, #1414]	@ zero_extendqisi2
 9227 1670 97F88535 		ldrb	r3, [r7, #1413]	@ zero_extendqisi2
 9228 1674 9A42     		cmp	r2, r3
 9229 1676 D8D3     		bcc	.L358
1235:..\src/command_processing.c ****                         aux_uint16 = *((uint16 *) &g_rx.buffer[3 + i*sod]);
 9230              		.loc 1 1235 0 is_stmt 1 discriminator 2
 9231 1678 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9232 167c 0133     		adds	r3, r3, #1
 9233 167e 87F88735 		strb	r3, [r7, #1415]
 9234              	.L356:
1235:..\src/command_processing.c ****                         aux_uint16 = *((uint16 *) &g_rx.buffer[3 + i*sod]);
 9235              		.loc 1 1235 0 is_stmt 0 discriminator 1
 9236 1682 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 9237 1686 07F55D72 		add	r2, r7, #884
 9238 168a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9239 168c 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 9240 1690 9A42     		cmp	r2, r3
 9241 1692 BAD3     		bcc	.L359
1241:..\src/command_processing.c ****                 case TYPE_INT32:
 9242              		.loc 1 1241 0 is_stmt 1
 9243 1694 E7E0     		b	.L372
 9244              	.L341:
1243:..\src/command_processing.c ****                         aux_int32 = *((int32 *) &g_rx.buffer[3 + i*sod]);
 9245              		.loc 1 1243 0
 9246 1696 0023     		movs	r3, #0
 9247 1698 87F88735 		strb	r3, [r7, #1415]
 9248 169c 3BE0     		b	.L360
 9249              	.L363:
1244:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 9250              		.loc 1 1244 0
 9251 169e 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9252 16a2 97F88525 		ldrb	r2, [r7, #1413]	@ zero_extendqisi2
 9253 16a6 02FB03F3 		mul	r3, r2, r3
 9254 16aa 0333     		adds	r3, r3, #3
 9255 16ac 6C4A     		ldr	r2, .L387
 9256 16ae 1344     		add	r3, r3, r2
 9257 16b0 1B68     		ldr	r3, [r3]
 9258 16b2 C7F87035 		str	r3, [r7, #1392]
1245:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int32))
 9259              		.loc 1 1245 0
 9260 16b6 0023     		movs	r3, #0
 9261 16b8 87F88635 		strb	r3, [r7, #1414]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 215


 9262 16bc 20E0     		b	.L361
 9263              	.L362:
1246:..\src/command_processing.c ****                         }
 9264              		.loc 1 1246 0 discriminator 3
 9265 16be 97F87A25 		ldrb	r2, [r7, #1402]	@ zero_extendqisi2
 9266 16c2 07F21C43 		addw	r3, r7, #1052
 9267 16c6 53F82220 		ldr	r2, [r3, r2, lsl #2]
 9268 16ca 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9269 16ce 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 9270 16d2 01FB03F3 		mul	r3, r1, r3
 9271 16d6 1846     		mov	r0, r3
 9272 16d8 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 9273 16dc 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 9274 16e0 CB1A     		subs	r3, r1, r3
 9275 16e2 0344     		add	r3, r3, r0
 9276 16e4 013B     		subs	r3, r3, #1
 9277 16e6 1344     		add	r3, r3, r2
 9278 16e8 97F88625 		ldrb	r2, [r7, #1414]	@ zero_extendqisi2
 9279 16ec 07F5AE61 		add	r1, r7, #1392
 9280 16f0 0A44     		add	r2, r2, r1
 9281 16f2 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9282 16f4 1A70     		strb	r2, [r3]
1245:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int32))
 9283              		.loc 1 1245 0 discriminator 3
 9284 16f6 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 9285 16fa 0133     		adds	r3, r3, #1
 9286 16fc 87F88635 		strb	r3, [r7, #1414]
 9287              	.L361:
1245:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int32))
 9288              		.loc 1 1245 0 is_stmt 0 discriminator 1
 9289 1700 97F88625 		ldrb	r2, [r7, #1414]	@ zero_extendqisi2
 9290 1704 97F88535 		ldrb	r3, [r7, #1413]	@ zero_extendqisi2
 9291 1708 9A42     		cmp	r2, r3
 9292 170a D8D3     		bcc	.L362
1243:..\src/command_processing.c ****                         aux_int32 = *((int32 *) &g_rx.buffer[3 + i*sod]);
 9293              		.loc 1 1243 0 is_stmt 1 discriminator 2
 9294 170c 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9295 1710 0133     		adds	r3, r3, #1
 9296 1712 87F88735 		strb	r3, [r7, #1415]
 9297              	.L360:
1243:..\src/command_processing.c ****                         aux_int32 = *((int32 *) &g_rx.buffer[3 + i*sod]);
 9298              		.loc 1 1243 0 is_stmt 0 discriminator 1
 9299 1716 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 9300 171a 07F55D72 		add	r2, r7, #884
 9301 171e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9302 1720 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 9303 1724 9A42     		cmp	r2, r3
 9304 1726 BAD3     		bcc	.L363
1249:..\src/command_processing.c ****                 case TYPE_UINT32:
 9305              		.loc 1 1249 0 is_stmt 1
 9306 1728 9DE0     		b	.L372
 9307              	.L342:
1251:..\src/command_processing.c ****                         aux_uint32 = *((uint32 *) &g_rx.buffer[3 + i*sod]);
 9308              		.loc 1 1251 0
 9309 172a 0023     		movs	r3, #0
 9310 172c 87F88735 		strb	r3, [r7, #1415]
 9311 1730 3BE0     		b	.L364
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 216


 9312              	.L367:
1252:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 9313              		.loc 1 1252 0
 9314 1732 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9315 1736 97F88525 		ldrb	r2, [r7, #1413]	@ zero_extendqisi2
 9316 173a 02FB03F3 		mul	r3, r2, r3
 9317 173e 0333     		adds	r3, r3, #3
 9318 1740 474A     		ldr	r2, .L387
 9319 1742 1344     		add	r3, r3, r2
 9320 1744 1B68     		ldr	r3, [r3]
 9321 1746 C7F86C35 		str	r3, [r7, #1388]
1253:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint32)
 9322              		.loc 1 1253 0
 9323 174a 0023     		movs	r3, #0
 9324 174c 87F88635 		strb	r3, [r7, #1414]
 9325 1750 20E0     		b	.L365
 9326              	.L366:
1254:..\src/command_processing.c ****                         }
 9327              		.loc 1 1254 0 discriminator 3
 9328 1752 97F87A25 		ldrb	r2, [r7, #1402]	@ zero_extendqisi2
 9329 1756 07F21C43 		addw	r3, r7, #1052
 9330 175a 53F82220 		ldr	r2, [r3, r2, lsl #2]
 9331 175e 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9332 1762 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 9333 1766 01FB03F3 		mul	r3, r1, r3
 9334 176a 1846     		mov	r0, r3
 9335 176c 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 9336 1770 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 9337 1774 CB1A     		subs	r3, r1, r3
 9338 1776 0344     		add	r3, r3, r0
 9339 1778 013B     		subs	r3, r3, #1
 9340 177a 1344     		add	r3, r3, r2
 9341 177c 97F88625 		ldrb	r2, [r7, #1414]	@ zero_extendqisi2
 9342 1780 07F26C51 		addw	r1, r7, #1388
 9343 1784 0A44     		add	r2, r2, r1
 9344 1786 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9345 1788 1A70     		strb	r2, [r3]
1253:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint32)
 9346              		.loc 1 1253 0 discriminator 3
 9347 178a 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 9348 178e 0133     		adds	r3, r3, #1
 9349 1790 87F88635 		strb	r3, [r7, #1414]
 9350              	.L365:
1253:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint32)
 9351              		.loc 1 1253 0 is_stmt 0 discriminator 1
 9352 1794 97F88625 		ldrb	r2, [r7, #1414]	@ zero_extendqisi2
 9353 1798 97F88535 		ldrb	r3, [r7, #1413]	@ zero_extendqisi2
 9354 179c 9A42     		cmp	r2, r3
 9355 179e D8D3     		bcc	.L366
1251:..\src/command_processing.c ****                         aux_uint32 = *((uint32 *) &g_rx.buffer[3 + i*sod]);
 9356              		.loc 1 1251 0 is_stmt 1 discriminator 2
 9357 17a0 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9358 17a4 0133     		adds	r3, r3, #1
 9359 17a6 87F88735 		strb	r3, [r7, #1415]
 9360              	.L364:
1251:..\src/command_processing.c ****                         aux_uint32 = *((uint32 *) &g_rx.buffer[3 + i*sod]);
 9361              		.loc 1 1251 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 217


 9362 17aa 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 9363 17ae 07F55D72 		add	r2, r7, #884
 9364 17b2 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9365 17b4 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 9366 17b8 9A42     		cmp	r2, r3
 9367 17ba BAD3     		bcc	.L367
1257:..\src/command_processing.c ****                 case TYPE_FLOAT:
 9368              		.loc 1 1257 0 is_stmt 1
 9369 17bc 53E0     		b	.L372
 9370              	.L343:
1259:..\src/command_processing.c ****                         aux_float = *((float *) &g_rx.buffer[3 + i*sod]);
 9371              		.loc 1 1259 0
 9372 17be 0023     		movs	r3, #0
 9373 17c0 87F88735 		strb	r3, [r7, #1415]
 9374 17c4 3BE0     		b	.L368
 9375              	.L371:
1260:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 9376              		.loc 1 1260 0
 9377 17c6 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9378 17ca 97F88525 		ldrb	r2, [r7, #1413]	@ zero_extendqisi2
 9379 17ce 02FB03F3 		mul	r3, r2, r3
 9380 17d2 0333     		adds	r3, r3, #3
 9381 17d4 224A     		ldr	r2, .L387
 9382 17d6 1344     		add	r3, r3, r2
 9383 17d8 1B68     		ldr	r3, [r3]	@ float
 9384 17da C7F86835 		str	r3, [r7, #1384]	@ float
1261:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_float))
 9385              		.loc 1 1261 0
 9386 17de 0023     		movs	r3, #0
 9387 17e0 87F88635 		strb	r3, [r7, #1414]
 9388 17e4 20E0     		b	.L369
 9389              	.L370:
1262:..\src/command_processing.c ****                         }
 9390              		.loc 1 1262 0 discriminator 3
 9391 17e6 97F87A25 		ldrb	r2, [r7, #1402]	@ zero_extendqisi2
 9392 17ea 07F21C43 		addw	r3, r7, #1052
 9393 17ee 53F82220 		ldr	r2, [r3, r2, lsl #2]
 9394 17f2 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9395 17f6 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 9396 17fa 01FB03F3 		mul	r3, r1, r3
 9397 17fe 1846     		mov	r0, r3
 9398 1800 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 9399 1804 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 9400 1808 CB1A     		subs	r3, r1, r3
 9401 180a 0344     		add	r3, r3, r0
 9402 180c 013B     		subs	r3, r3, #1
 9403 180e 1344     		add	r3, r3, r2
 9404 1810 97F88625 		ldrb	r2, [r7, #1414]	@ zero_extendqisi2
 9405 1814 07F5AD61 		add	r1, r7, #1384
 9406 1818 0A44     		add	r2, r2, r1
 9407 181a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9408 181c 1A70     		strb	r2, [r3]
1261:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_float))
 9409              		.loc 1 1261 0 discriminator 3
 9410 181e 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 9411 1822 0133     		adds	r3, r3, #1
 9412 1824 87F88635 		strb	r3, [r7, #1414]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 218


 9413              	.L369:
1261:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_float))
 9414              		.loc 1 1261 0 is_stmt 0 discriminator 1
 9415 1828 97F88625 		ldrb	r2, [r7, #1414]	@ zero_extendqisi2
 9416 182c 97F88535 		ldrb	r3, [r7, #1413]	@ zero_extendqisi2
 9417 1830 9A42     		cmp	r2, r3
 9418 1832 D8D3     		bcc	.L370
1259:..\src/command_processing.c ****                         aux_float = *((float *) &g_rx.buffer[3 + i*sod]);
 9419              		.loc 1 1259 0 is_stmt 1 discriminator 2
 9420 1834 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9421 1838 0133     		adds	r3, r3, #1
 9422 183a 87F88735 		strb	r3, [r7, #1415]
 9423              	.L368:
1259:..\src/command_processing.c ****                         aux_float = *((float *) &g_rx.buffer[3 + i*sod]);
 9424              		.loc 1 1259 0 is_stmt 0 discriminator 1
 9425 183e 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 9426 1842 07F55D72 		add	r2, r7, #884
 9427 1846 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9428 1848 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 9429 184c 9A42     		cmp	r2, r3
 9430 184e BAD3     		bcc	.L371
1265:..\src/command_processing.c ****                 default:
 9431              		.loc 1 1265 0 is_stmt 1
 9432 1850 09E0     		b	.L372
 9433              	.L334:
1272:..\src/command_processing.c ****         }
 9434              		.loc 1 1272 0
 9435 1852 BB1D     		adds	r3, r7, #6
 9436 1854 1B88     		ldrh	r3, [r3]
 9437 1856 1846     		mov	r0, r3
 9438 1858 FFF7FEFF 		bl	set_custom_param
 9439 185c 03E0     		b	.L372
 9440              	.L388:
 9441 185e 00BF     		.align	2
 9442              	.L387:
 9443 1860 00000000 		.word	g_rx
 9444              	.L377:
1267:..\src/command_processing.c ****             }
 9445              		.loc 1 1267 0
 9446 1864 00BF     		nop
 9447              	.L372:
1276:..\src/command_processing.c ****             memcpy( &(MEM_P->user[MEM_P->dev.user_id].user_emg), &(MEM_P->emg), sizeof(MEM_P->emg) 
 9448              		.loc 1 1276 0
 9449 1866 97F87B35 		ldrb	r3, [r7, #1403]	@ zero_extendqisi2
 9450 186a 9BB2     		uxth	r3, r3
 9451 186c BA1D     		adds	r2, r7, #6
 9452 186e 1288     		ldrh	r2, [r2]
 9453 1870 9A42     		cmp	r2, r3
 9454 1872 11D0     		beq	.L373
1277:..\src/command_processing.c ****         }
 9455              		.loc 1 1277 0
 9456 1874 D7F88035 		ldr	r3, [r7, #1408]
 9457 1878 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 9458 187c 5B01     		lsls	r3, r3, #5
 9459 187e 03F51273 		add	r3, r3, #584
 9460 1882 D7F88025 		ldr	r2, [r7, #1408]
 9461 1886 D018     		adds	r0, r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 219


 9462 1888 D7F88035 		ldr	r3, [r7, #1408]
 9463 188c 03F5F873 		add	r3, r3, #496
 9464 1890 1022     		movs	r2, #16
 9465 1892 1946     		mov	r1, r3
 9466 1894 FFF7FEFF 		bl	memcpy
 9467              	.L373:
1281:..\src/command_processing.c ****             uint8 idx = 0, menu_idx = -1;
 9468              		.loc 1 1281 0
 9469 1898 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 9470 189c 07F57272 		add	r2, r7, #968
 9471 18a0 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9472 18a2 002B     		cmp	r3, #0
 9473 18a4 42D1     		bne	.L378
 9474              	.LBB22:
1282:..\src/command_processing.c ****             do {
 9475              		.loc 1 1282 0
 9476 18a6 0023     		movs	r3, #0
 9477 18a8 87F87F35 		strb	r3, [r7, #1407]
 9478 18ac FF23     		movs	r3, #255
 9479 18ae 87F87E35 		strb	r3, [r7, #1406]
 9480              	.L375:
1284:..\src/command_processing.c ****                 idx++;
 9481              		.loc 1 1284 0
 9482 18b2 97F87F35 		ldrb	r3, [r7, #1407]	@ zero_extendqisi2
 9483 18b6 07F57272 		add	r2, r7, #968
 9484 18ba D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9485 18bc 002B     		cmp	r3, #0
 9486 18be 04D1     		bne	.L374
1284:..\src/command_processing.c ****                 idx++;
 9487              		.loc 1 1284 0 is_stmt 0 discriminator 1
 9488 18c0 97F87E35 		ldrb	r3, [r7, #1406]	@ zero_extendqisi2
 9489 18c4 0133     		adds	r3, r3, #1
 9490 18c6 87F87E35 		strb	r3, [r7, #1406]
 9491              	.L374:
1285:..\src/command_processing.c ****             } while (idx <= PARAM_IDX);
 9492              		.loc 1 1285 0 is_stmt 1
 9493 18ca 97F87F35 		ldrb	r3, [r7, #1407]	@ zero_extendqisi2
 9494 18ce 0133     		adds	r3, r3, #1
 9495 18d0 87F87F35 		strb	r3, [r7, #1407]
1286:..\src/command_processing.c ****             
 9496              		.loc 1 1286 0
 9497 18d4 97F87F25 		ldrb	r2, [r7, #1407]	@ zero_extendqisi2
 9498 18d8 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 9499 18dc 9A42     		cmp	r2, r3
 9500 18de E8D9     		bls	.L375
1288:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 9501              		.loc 1 1288 0
 9502 18e0 97F87E35 		ldrb	r3, [r7, #1406]	@ zero_extendqisi2
 9503 18e4 07F1D402 		add	r2, r7, #212
 9504 18e8 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9505 18ea 052B     		cmp	r3, #5
 9506 18ec 1BD0     		beq	.L376
1288:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 9507              		.loc 1 1288 0 is_stmt 0 discriminator 1
 9508 18ee 97F87E35 		ldrb	r3, [r7, #1406]	@ zero_extendqisi2
 9509 18f2 07F1D402 		add	r2, r7, #212
 9510 18f6 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 220


 9511 18f8 062B     		cmp	r3, #6
 9512 18fa 14D0     		beq	.L376
1288:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 9513              		.loc 1 1288 0 discriminator 2
 9514 18fc 97F87E35 		ldrb	r3, [r7, #1406]	@ zero_extendqisi2
 9515 1900 07F1D402 		add	r2, r7, #212
 9516 1904 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9517 1906 082B     		cmp	r3, #8
 9518 1908 0DD0     		beq	.L376
1288:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 9519              		.loc 1 1288 0 discriminator 3
 9520 190a 97F87E35 		ldrb	r3, [r7, #1406]	@ zero_extendqisi2
 9521 190e 07F1D402 		add	r2, r7, #212
 9522 1912 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9523 1914 092B     		cmp	r3, #9
 9524 1916 06D0     		beq	.L376
1288:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 9525              		.loc 1 1288 0 discriminator 4
 9526 1918 97F87E35 		ldrb	r3, [r7, #1406]	@ zero_extendqisi2
 9527 191c 07F1D402 		add	r2, r7, #212
 9528 1920 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9529 1922 0A2B     		cmp	r3, #10
 9530 1924 02D1     		bne	.L378
 9531              	.L376:
1289:..\src/command_processing.c ****             }   
 9532              		.loc 1 1289 0 is_stmt 1
 9533 1926 044B     		ldr	r3, .L389
 9534 1928 0122     		movs	r2, #1
 9535 192a 1A70     		strb	r2, [r3]
 9536              	.L378:
 9537              	.LBE22:
 9538              		.loc 1 1293 0
 9539 192c 00BF     		nop
 9540 192e 07F5B167 		add	r7, r7, #1416
 9541              		.cfi_def_cfa_offset 16
 9542 1932 BD46     		mov	sp, r7
 9543              		.cfi_def_cfa_register 13
 9544              		@ sp needed
 9545 1934 B0BD     		pop	{r4, r5, r7, pc}
 9546              	.L390:
 9547 1936 00BF     		.align	2
 9548              	.L389:
 9549 1938 00000000 		.word	reset_PSoC_flag
 9550              		.cfi_endproc
 9551              	.LFE68:
 9552              		.size	manage_param_list, .-manage_param_list
 9553              		.global	__aeabi_fmul
 9554              		.global	__aeabi_f2iz
 9555              		.section	.text.set_custom_param,"ax",%progbits
 9556              		.align	2
 9557              		.global	set_custom_param
 9558              		.thumb
 9559              		.thumb_func
 9560              		.type	set_custom_param, %function
 9561              	set_custom_param:
 9562              	.LFB69:
1294:..\src/command_processing.c **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 221


1295:..\src/command_processing.c **** //==============================================================================
1296:..\src/command_processing.c **** //                                                              SET CUSTOM PARAM
1297:..\src/command_processing.c **** //==============================================================================
1298:..\src/command_processing.c **** 
1299:..\src/command_processing.c **** void set_custom_param(uint16 index) {
 9563              		.loc 1 1299 0
 9564              		.cfi_startproc
 9565              		@ args = 0, pretend = 0, frame = 24
 9566              		@ frame_needed = 1, uses_anonymous_args = 0
 9567 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 9568              		.cfi_def_cfa_offset 20
 9569              		.cfi_offset 4, -20
 9570              		.cfi_offset 5, -16
 9571              		.cfi_offset 6, -12
 9572              		.cfi_offset 7, -8
 9573              		.cfi_offset 14, -4
 9574 0002 87B0     		sub	sp, sp, #28
 9575              		.cfi_def_cfa_offset 48
 9576 0004 00AF     		add	r7, sp, #0
 9577              		.cfi_def_cfa_register 7
 9578 0006 0346     		mov	r3, r0
 9579 0008 FB80     		strh	r3, [r7, #6]	@ movhi
1300:..\src/command_processing.c **** 
1301:..\src/command_processing.c ****     uint8 CYDATA i, j;
1302:..\src/command_processing.c ****     uint8 aux_uchar;
1303:..\src/command_processing.c ****     float aux_float, aux_float2;
1304:..\src/command_processing.c **** 
1305:..\src/command_processing.c ****     uint8 MOTOR_IDX = 0;
 9580              		.loc 1 1305 0
 9581 000a 0023     		movs	r3, #0
 9582 000c 3B75     		strb	r3, [r7, #20]
1306:..\src/command_processing.c ****     uint8 SECOND_MOTOR_IDX = 1;
 9583              		.loc 1 1306 0
 9584 000e 0123     		movs	r3, #1
 9585 0010 FB74     		strb	r3, [r7, #19]
1307:..\src/command_processing.c ****     
1308:..\src/command_processing.c ****     switch(index){
 9586              		.loc 1 1308 0
 9587 0012 FB88     		ldrh	r3, [r7, #6]
 9588 0014 023B     		subs	r3, r3, #2
 9589 0016 492B     		cmp	r3, #73
 9590 0018 01F24C82 		bhi	.L486
 9591 001c 01A2     		adr	r2, .L394
 9592 001e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 9593 0022 00BF     		.p2align 2
 9594              	.L394:
 9595 0024 4D010000 		.word	.L393+1
 9596 0028 7F030000 		.word	.L395+1
 9597 002c B5140000 		.word	.L486+1
 9598 0030 C5050000 		.word	.L396+1
 9599 0034 B5140000 		.word	.L486+1
 9600 0038 B5140000 		.word	.L486+1
 9601 003c 0F060000 		.word	.L397+1
 9602 0040 B5140000 		.word	.L486+1
 9603 0044 B5140000 		.word	.L486+1
 9604 0048 49070000 		.word	.L398+1
 9605 004c B5140000 		.word	.L486+1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 222


 9606 0050 B5140000 		.word	.L486+1
 9607 0054 B5140000 		.word	.L486+1
 9608 0058 B5140000 		.word	.L486+1
 9609 005c B5140000 		.word	.L486+1
 9610 0060 B5140000 		.word	.L486+1
 9611 0064 B5140000 		.word	.L486+1
 9612 0068 B5140000 		.word	.L486+1
 9613 006c B5140000 		.word	.L486+1
 9614 0070 B5140000 		.word	.L486+1
 9615 0074 B5140000 		.word	.L486+1
 9616 0078 49080000 		.word	.L399+1
 9617 007c A7080000 		.word	.L400+1
 9618 0080 B5140000 		.word	.L486+1
 9619 0084 B5140000 		.word	.L486+1
 9620 0088 B5140000 		.word	.L486+1
 9621 008c E1080000 		.word	.L401+1
 9622 0090 B5140000 		.word	.L486+1
 9623 0094 B5140000 		.word	.L486+1
 9624 0098 5D0A0000 		.word	.L402+1
 9625 009c 090B0000 		.word	.L403+1
 9626 00a0 B5140000 		.word	.L486+1
 9627 00a4 B5140000 		.word	.L486+1
 9628 00a8 B5140000 		.word	.L486+1
 9629 00ac B5140000 		.word	.L486+1
 9630 00b0 B5140000 		.word	.L486+1
 9631 00b4 430B0000 		.word	.L404+1
 9632 00b8 B5140000 		.word	.L486+1
 9633 00bc B5140000 		.word	.L486+1
 9634 00c0 B5140000 		.word	.L486+1
 9635 00c4 B5140000 		.word	.L486+1
 9636 00c8 B5140000 		.word	.L486+1
 9637 00cc 630B0000 		.word	.L405+1
 9638 00d0 AB0D0000 		.word	.L406+1
 9639 00d4 B5140000 		.word	.L486+1
 9640 00d8 D90F0000 		.word	.L407+1
 9641 00dc B5140000 		.word	.L486+1
 9642 00e0 B5140000 		.word	.L486+1
 9643 00e4 21100000 		.word	.L408+1
 9644 00e8 B5140000 		.word	.L486+1
 9645 00ec B5140000 		.word	.L486+1
 9646 00f0 59110000 		.word	.L409+1
 9647 00f4 B5140000 		.word	.L486+1
 9648 00f8 B5140000 		.word	.L486+1
 9649 00fc B5140000 		.word	.L486+1
 9650 0100 B5140000 		.word	.L486+1
 9651 0104 B5140000 		.word	.L486+1
 9652 0108 B5140000 		.word	.L486+1
 9653 010c B5140000 		.word	.L486+1
 9654 0110 57120000 		.word	.L410+1
 9655 0114 B5140000 		.word	.L486+1
 9656 0118 B5140000 		.word	.L486+1
 9657 011c B5140000 		.word	.L486+1
 9658 0120 B5140000 		.word	.L486+1
 9659 0124 B5140000 		.word	.L486+1
 9660 0128 B5140000 		.word	.L486+1
 9661 012c B5140000 		.word	.L486+1
 9662 0130 B5140000 		.word	.L486+1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 223


 9663 0134 B5140000 		.word	.L486+1
 9664 0138 B5140000 		.word	.L486+1
 9665 013c B5140000 		.word	.L486+1
 9666 0140 B5140000 		.word	.L486+1
 9667 0144 B5140000 		.word	.L486+1
 9668 0148 85120000 		.word	.L411+1
 9669              		.p2align 1
 9670              	.L393:
1309:..\src/command_processing.c ****         case 2:         // Position PID
1310:..\src/command_processing.c ****             if(c_mem.motor[MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 9671              		.loc 1 1310 0
 9672 014c 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9673 014e AB49     		ldr	r1, .L492
 9674 0150 1346     		mov	r3, r2
 9675 0152 DB00     		lsls	r3, r3, #3
 9676 0154 9B1A     		subs	r3, r3, r2
 9677 0156 1B01     		lsls	r3, r3, #4
 9678 0158 0B44     		add	r3, r3, r1
 9679 015a 03F20F13 		addw	r3, r3, #271
 9680 015e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9681 0160 032B     		cmp	r3, #3
 9682 0162 00F08680 		beq	.L412
1311:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
 9683              		.loc 1 1311 0
 9684 0166 A64B     		ldr	r3, .L492+4
 9685 0168 1B68     		ldr	r3, [r3]	@ float
 9686 016a FB60     		str	r3, [r7, #12]	@ float
1312:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9687              		.loc 1 1312 0
 9688 016c 0023     		movs	r3, #0
 9689 016e BB75     		strb	r3, [r7, #22]
 9690 0170 0EE0     		b	.L413
 9691              	.L414:
1313:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9692              		.loc 1 1313 0 discriminator 3
 9693 0172 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9694 0174 C3F10303 		rsb	r3, r3, #3
 9695 0178 07F10802 		add	r2, r7, #8
 9696 017c 1344     		add	r3, r3, r2
 9697 017e BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9698 0180 07F10C01 		add	r1, r7, #12
 9699 0184 0A44     		add	r2, r2, r1
 9700 0186 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9701 0188 1A70     		strb	r2, [r3]
1312:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9702              		.loc 1 1312 0 discriminator 3
 9703 018a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9704 018c 0133     		adds	r3, r3, #1
 9705 018e BB75     		strb	r3, [r7, #22]
 9706              	.L413:
1312:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9707              		.loc 1 1312 0 is_stmt 0 discriminator 1
 9708 0190 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9709 0192 032B     		cmp	r3, #3
 9710 0194 EDD9     		bls	.L414
1314:..\src/command_processing.c ****                 }
1315:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_p = aux_float2 * 65536;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 224


 9711              		.loc 1 1315 0 is_stmt 1
 9712 0196 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9713 0198 BB68     		ldr	r3, [r7, #8]	@ float
 9714 019a 4FF08F41 		mov	r1, #1199570944
 9715 019e 1846     		mov	r0, r3
 9716 01a0 FFF7FEFF 		bl	__aeabi_fmul
 9717 01a4 0346     		mov	r3, r0
 9718 01a6 1846     		mov	r0, r3
 9719 01a8 FFF7FEFF 		bl	__aeabi_f2iz
 9720 01ac 0146     		mov	r1, r0
 9721 01ae 954A     		ldr	r2, .L492+8
 9722 01b0 2346     		mov	r3, r4
 9723 01b2 DB00     		lsls	r3, r3, #3
 9724 01b4 1B1B     		subs	r3, r3, r4
 9725 01b6 1B01     		lsls	r3, r3, #4
 9726 01b8 1344     		add	r3, r3, r2
 9727 01ba B033     		adds	r3, r3, #176
 9728 01bc 1960     		str	r1, [r3]
1316:..\src/command_processing.c ****                 
1317:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
 9729              		.loc 1 1317 0
 9730 01be 924B     		ldr	r3, .L492+12
 9731 01c0 1B68     		ldr	r3, [r3]	@ float
 9732 01c2 FB60     		str	r3, [r7, #12]	@ float
1318:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9733              		.loc 1 1318 0
 9734 01c4 0023     		movs	r3, #0
 9735 01c6 BB75     		strb	r3, [r7, #22]
 9736 01c8 0EE0     		b	.L415
 9737              	.L416:
1319:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9738              		.loc 1 1319 0 discriminator 3
 9739 01ca BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9740 01cc C3F10303 		rsb	r3, r3, #3
 9741 01d0 07F10802 		add	r2, r7, #8
 9742 01d4 1344     		add	r3, r3, r2
 9743 01d6 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9744 01d8 07F10C01 		add	r1, r7, #12
 9745 01dc 0A44     		add	r2, r2, r1
 9746 01de 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9747 01e0 1A70     		strb	r2, [r3]
1318:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9748              		.loc 1 1318 0 discriminator 3
 9749 01e2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9750 01e4 0133     		adds	r3, r3, #1
 9751 01e6 BB75     		strb	r3, [r7, #22]
 9752              	.L415:
1318:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9753              		.loc 1 1318 0 is_stmt 0 discriminator 1
 9754 01e8 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9755 01ea 032B     		cmp	r3, #3
 9756 01ec EDD9     		bls	.L416
1320:..\src/command_processing.c ****                 }
1321:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_i = aux_float2 * 65536;
 9757              		.loc 1 1321 0 is_stmt 1
 9758 01ee 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9759 01f0 BB68     		ldr	r3, [r7, #8]	@ float
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 225


 9760 01f2 4FF08F41 		mov	r1, #1199570944
 9761 01f6 1846     		mov	r0, r3
 9762 01f8 FFF7FEFF 		bl	__aeabi_fmul
 9763 01fc 0346     		mov	r3, r0
 9764 01fe 1846     		mov	r0, r3
 9765 0200 FFF7FEFF 		bl	__aeabi_f2iz
 9766 0204 0146     		mov	r1, r0
 9767 0206 7F4A     		ldr	r2, .L492+8
 9768 0208 2346     		mov	r3, r4
 9769 020a DB00     		lsls	r3, r3, #3
 9770 020c 1B1B     		subs	r3, r3, r4
 9771 020e 1B01     		lsls	r3, r3, #4
 9772 0210 1344     		add	r3, r3, r2
 9773 0212 B433     		adds	r3, r3, #180
 9774 0214 1960     		str	r1, [r3]
1322:..\src/command_processing.c ****                 
1323:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
 9775              		.loc 1 1323 0
 9776 0216 7D4B     		ldr	r3, .L492+16
 9777 0218 1B68     		ldr	r3, [r3]	@ float
 9778 021a FB60     		str	r3, [r7, #12]	@ float
1324:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9779              		.loc 1 1324 0
 9780 021c 0023     		movs	r3, #0
 9781 021e BB75     		strb	r3, [r7, #22]
 9782 0220 0EE0     		b	.L417
 9783              	.L418:
1325:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9784              		.loc 1 1325 0 discriminator 3
 9785 0222 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9786 0224 C3F10303 		rsb	r3, r3, #3
 9787 0228 07F10802 		add	r2, r7, #8
 9788 022c 1344     		add	r3, r3, r2
 9789 022e BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9790 0230 07F10C01 		add	r1, r7, #12
 9791 0234 0A44     		add	r2, r2, r1
 9792 0236 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9793 0238 1A70     		strb	r2, [r3]
1324:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9794              		.loc 1 1324 0 discriminator 3
 9795 023a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9796 023c 0133     		adds	r3, r3, #1
 9797 023e BB75     		strb	r3, [r7, #22]
 9798              	.L417:
1324:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9799              		.loc 1 1324 0 is_stmt 0 discriminator 1
 9800 0240 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9801 0242 032B     		cmp	r3, #3
 9802 0244 EDD9     		bls	.L418
1326:..\src/command_processing.c ****                 }
1327:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_d = aux_float2 * 65536;
 9803              		.loc 1 1327 0 is_stmt 1
 9804 0246 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9805 0248 BB68     		ldr	r3, [r7, #8]	@ float
 9806 024a 4FF08F41 		mov	r1, #1199570944
 9807 024e 1846     		mov	r0, r3
 9808 0250 FFF7FEFF 		bl	__aeabi_fmul
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 226


 9809 0254 0346     		mov	r3, r0
 9810 0256 1846     		mov	r0, r3
 9811 0258 FFF7FEFF 		bl	__aeabi_f2iz
 9812 025c 0146     		mov	r1, r0
 9813 025e 694A     		ldr	r2, .L492+8
 9814 0260 2346     		mov	r3, r4
 9815 0262 DB00     		lsls	r3, r3, #3
 9816 0264 1B1B     		subs	r3, r3, r4
 9817 0266 1B01     		lsls	r3, r3, #4
 9818 0268 1344     		add	r3, r3, r2
 9819 026a B833     		adds	r3, r3, #184
 9820 026c 1960     		str	r1, [r3]
1328:..\src/command_processing.c ****             }
1329:..\src/command_processing.c ****             else {
1330:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
1331:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1332:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1333:..\src/command_processing.c ****                 }
1334:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_p_dl = aux_float2 * 65536;
1335:..\src/command_processing.c ****                 
1336:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
1337:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1338:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1339:..\src/command_processing.c ****                 }
1340:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_i_dl = aux_float2 * 65536;
1341:..\src/command_processing.c ****                 
1342:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
1343:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1344:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1345:..\src/command_processing.c ****                 }
1346:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_d_dl = aux_float2 * 65536;
1347:..\src/command_processing.c ****             }
1348:..\src/command_processing.c ****             break;
 9821              		.loc 1 1348 0
 9822 026e 01F02CB9 		b	.L426
 9823              	.L412:
1330:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9824              		.loc 1 1330 0
 9825 0272 634B     		ldr	r3, .L492+4
 9826 0274 1B68     		ldr	r3, [r3]	@ float
 9827 0276 FB60     		str	r3, [r7, #12]	@ float
1331:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9828              		.loc 1 1331 0
 9829 0278 0023     		movs	r3, #0
 9830 027a BB75     		strb	r3, [r7, #22]
 9831 027c 0EE0     		b	.L420
 9832              	.L421:
1332:..\src/command_processing.c ****                 }
 9833              		.loc 1 1332 0 discriminator 3
 9834 027e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9835 0280 C3F10303 		rsb	r3, r3, #3
 9836 0284 07F10802 		add	r2, r7, #8
 9837 0288 1344     		add	r3, r3, r2
 9838 028a BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9839 028c 07F10C01 		add	r1, r7, #12
 9840 0290 0A44     		add	r2, r2, r1
 9841 0292 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 227


 9842 0294 1A70     		strb	r2, [r3]
1331:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9843              		.loc 1 1331 0 discriminator 3
 9844 0296 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9845 0298 0133     		adds	r3, r3, #1
 9846 029a BB75     		strb	r3, [r7, #22]
 9847              	.L420:
1331:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9848              		.loc 1 1331 0 is_stmt 0 discriminator 1
 9849 029c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9850 029e 032B     		cmp	r3, #3
 9851 02a0 EDD9     		bls	.L421
1334:..\src/command_processing.c ****                 
 9852              		.loc 1 1334 0 is_stmt 1
 9853 02a2 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9854 02a4 BB68     		ldr	r3, [r7, #8]	@ float
 9855 02a6 4FF08F41 		mov	r1, #1199570944
 9856 02aa 1846     		mov	r0, r3
 9857 02ac FFF7FEFF 		bl	__aeabi_fmul
 9858 02b0 0346     		mov	r3, r0
 9859 02b2 1846     		mov	r0, r3
 9860 02b4 FFF7FEFF 		bl	__aeabi_f2iz
 9861 02b8 0146     		mov	r1, r0
 9862 02ba 524A     		ldr	r2, .L492+8
 9863 02bc 2346     		mov	r3, r4
 9864 02be DB00     		lsls	r3, r3, #3
 9865 02c0 1B1B     		subs	r3, r3, r4
 9866 02c2 1B01     		lsls	r3, r3, #4
 9867 02c4 1344     		add	r3, r3, r2
 9868 02c6 C833     		adds	r3, r3, #200
 9869 02c8 1960     		str	r1, [r3]
1336:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9870              		.loc 1 1336 0
 9871 02ca 4F4B     		ldr	r3, .L492+12
 9872 02cc 1B68     		ldr	r3, [r3]	@ float
 9873 02ce FB60     		str	r3, [r7, #12]	@ float
1337:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9874              		.loc 1 1337 0
 9875 02d0 0023     		movs	r3, #0
 9876 02d2 BB75     		strb	r3, [r7, #22]
 9877 02d4 0EE0     		b	.L422
 9878              	.L423:
1338:..\src/command_processing.c ****                 }
 9879              		.loc 1 1338 0 discriminator 3
 9880 02d6 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9881 02d8 C3F10303 		rsb	r3, r3, #3
 9882 02dc 07F10802 		add	r2, r7, #8
 9883 02e0 1344     		add	r3, r3, r2
 9884 02e2 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9885 02e4 07F10C01 		add	r1, r7, #12
 9886 02e8 0A44     		add	r2, r2, r1
 9887 02ea 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9888 02ec 1A70     		strb	r2, [r3]
1337:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9889              		.loc 1 1337 0 discriminator 3
 9890 02ee BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9891 02f0 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 228


 9892 02f2 BB75     		strb	r3, [r7, #22]
 9893              	.L422:
1337:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9894              		.loc 1 1337 0 is_stmt 0 discriminator 1
 9895 02f4 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9896 02f6 032B     		cmp	r3, #3
 9897 02f8 EDD9     		bls	.L423
1340:..\src/command_processing.c ****                 
 9898              		.loc 1 1340 0 is_stmt 1
 9899 02fa 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9900 02fc BB68     		ldr	r3, [r7, #8]	@ float
 9901 02fe 4FF08F41 		mov	r1, #1199570944
 9902 0302 1846     		mov	r0, r3
 9903 0304 FFF7FEFF 		bl	__aeabi_fmul
 9904 0308 0346     		mov	r3, r0
 9905 030a 1846     		mov	r0, r3
 9906 030c FFF7FEFF 		bl	__aeabi_f2iz
 9907 0310 0146     		mov	r1, r0
 9908 0312 3C4A     		ldr	r2, .L492+8
 9909 0314 2346     		mov	r3, r4
 9910 0316 DB00     		lsls	r3, r3, #3
 9911 0318 1B1B     		subs	r3, r3, r4
 9912 031a 1B01     		lsls	r3, r3, #4
 9913 031c 1344     		add	r3, r3, r2
 9914 031e CC33     		adds	r3, r3, #204
 9915 0320 1960     		str	r1, [r3]
1342:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9916              		.loc 1 1342 0
 9917 0322 3A4B     		ldr	r3, .L492+16
 9918 0324 1B68     		ldr	r3, [r3]	@ float
 9919 0326 FB60     		str	r3, [r7, #12]	@ float
1343:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9920              		.loc 1 1343 0
 9921 0328 0023     		movs	r3, #0
 9922 032a BB75     		strb	r3, [r7, #22]
 9923 032c 0EE0     		b	.L424
 9924              	.L425:
1344:..\src/command_processing.c ****                 }
 9925              		.loc 1 1344 0 discriminator 3
 9926 032e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9927 0330 C3F10303 		rsb	r3, r3, #3
 9928 0334 07F10802 		add	r2, r7, #8
 9929 0338 1344     		add	r3, r3, r2
 9930 033a BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9931 033c 07F10C01 		add	r1, r7, #12
 9932 0340 0A44     		add	r2, r2, r1
 9933 0342 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9934 0344 1A70     		strb	r2, [r3]
1343:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9935              		.loc 1 1343 0 discriminator 3
 9936 0346 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9937 0348 0133     		adds	r3, r3, #1
 9938 034a BB75     		strb	r3, [r7, #22]
 9939              	.L424:
1343:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9940              		.loc 1 1343 0 is_stmt 0 discriminator 1
 9941 034c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 229


 9942 034e 032B     		cmp	r3, #3
 9943 0350 EDD9     		bls	.L425
1346:..\src/command_processing.c ****             }
 9944              		.loc 1 1346 0 is_stmt 1
 9945 0352 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9946 0354 BB68     		ldr	r3, [r7, #8]	@ float
 9947 0356 4FF08F41 		mov	r1, #1199570944
 9948 035a 1846     		mov	r0, r3
 9949 035c FFF7FEFF 		bl	__aeabi_fmul
 9950 0360 0346     		mov	r3, r0
 9951 0362 1846     		mov	r0, r3
 9952 0364 FFF7FEFF 		bl	__aeabi_f2iz
 9953 0368 0146     		mov	r1, r0
 9954 036a 264A     		ldr	r2, .L492+8
 9955 036c 2346     		mov	r3, r4
 9956 036e DB00     		lsls	r3, r3, #3
 9957 0370 1B1B     		subs	r3, r3, r4
 9958 0372 1B01     		lsls	r3, r3, #4
 9959 0374 1344     		add	r3, r3, r2
 9960 0376 D033     		adds	r3, r3, #208
 9961 0378 1960     		str	r1, [r3]
 9962              		.loc 1 1348 0
 9963 037a 01F0A6B8 		b	.L426
 9964              	.L395:
1349:..\src/command_processing.c ****             
1350:..\src/command_processing.c ****         case 3:         //Current PID
1351:..\src/command_processing.c ****             if(c_mem.motor[MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 9965              		.loc 1 1351 0
 9966 037e 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9967 0380 1E49     		ldr	r1, .L492
 9968 0382 1346     		mov	r3, r2
 9969 0384 DB00     		lsls	r3, r3, #3
 9970 0386 9B1A     		subs	r3, r3, r2
 9971 0388 1B01     		lsls	r3, r3, #4
 9972 038a 0B44     		add	r3, r3, r1
 9973 038c 03F20F13 		addw	r3, r3, #271
 9974 0390 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9975 0392 032B     		cmp	r3, #3
 9976 0394 00F09080 		beq	.L427
1352:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
 9977              		.loc 1 1352 0
 9978 0398 194B     		ldr	r3, .L492+4
 9979 039a 1B68     		ldr	r3, [r3]	@ float
 9980 039c FB60     		str	r3, [r7, #12]	@ float
1353:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9981              		.loc 1 1353 0
 9982 039e 0023     		movs	r3, #0
 9983 03a0 BB75     		strb	r3, [r7, #22]
 9984 03a2 0EE0     		b	.L428
 9985              	.L429:
1354:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9986              		.loc 1 1354 0 discriminator 3
 9987 03a4 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9988 03a6 C3F10303 		rsb	r3, r3, #3
 9989 03aa 07F10802 		add	r2, r7, #8
 9990 03ae 1344     		add	r3, r3, r2
 9991 03b0 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 230


 9992 03b2 07F10C01 		add	r1, r7, #12
 9993 03b6 0A44     		add	r2, r2, r1
 9994 03b8 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9995 03ba 1A70     		strb	r2, [r3]
1353:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9996              		.loc 1 1353 0 discriminator 3
 9997 03bc BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9998 03be 0133     		adds	r3, r3, #1
 9999 03c0 BB75     		strb	r3, [r7, #22]
 10000              	.L428:
1353:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10001              		.loc 1 1353 0 is_stmt 0 discriminator 1
 10002 03c2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10003 03c4 032B     		cmp	r3, #3
 10004 03c6 EDD9     		bls	.L429
1355:..\src/command_processing.c ****                 }
1356:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_p_c = aux_float2 * 65536;
 10005              		.loc 1 1356 0 is_stmt 1
 10006 03c8 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 10007 03ca BB68     		ldr	r3, [r7, #8]	@ float
 10008 03cc 4FF08F41 		mov	r1, #1199570944
 10009 03d0 1846     		mov	r0, r3
 10010 03d2 FFF7FEFF 		bl	__aeabi_fmul
 10011 03d6 0346     		mov	r3, r0
 10012 03d8 1846     		mov	r0, r3
 10013 03da FFF7FEFF 		bl	__aeabi_f2iz
 10014 03de 0146     		mov	r1, r0
 10015 03e0 084A     		ldr	r2, .L492+8
 10016 03e2 2346     		mov	r3, r4
 10017 03e4 DB00     		lsls	r3, r3, #3
 10018 03e6 1B1B     		subs	r3, r3, r4
 10019 03e8 1B01     		lsls	r3, r3, #4
 10020 03ea 1344     		add	r3, r3, r2
 10021 03ec BC33     		adds	r3, r3, #188
 10022 03ee 1960     		str	r1, [r3]
1357:..\src/command_processing.c ****                 
1358:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
 10023              		.loc 1 1358 0
 10024 03f0 054B     		ldr	r3, .L492+12
 10025 03f2 1B68     		ldr	r3, [r3]	@ float
 10026 03f4 FB60     		str	r3, [r7, #12]	@ float
1359:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10027              		.loc 1 1359 0
 10028 03f6 0023     		movs	r3, #0
 10029 03f8 BB75     		strb	r3, [r7, #22]
 10030 03fa 18E0     		b	.L430
 10031              	.L493:
 10032              		.align	2
 10033              	.L492:
 10034 03fc 00000000 		.word	c_mem
 10035 0400 03000000 		.word	g_rx+3
 10036 0404 00000000 		.word	g_mem
 10037 0408 07000000 		.word	g_rx+7
 10038 040c 0B000000 		.word	g_rx+11
 10039              	.L431:
1360:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10040              		.loc 1 1360 0 discriminator 3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 231


 10041 0410 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10042 0412 C3F10303 		rsb	r3, r3, #3
 10043 0416 07F10802 		add	r2, r7, #8
 10044 041a 1344     		add	r3, r3, r2
 10045 041c BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10046 041e 07F10C01 		add	r1, r7, #12
 10047 0422 0A44     		add	r2, r2, r1
 10048 0424 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10049 0426 1A70     		strb	r2, [r3]
1359:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10050              		.loc 1 1359 0 discriminator 3
 10051 0428 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10052 042a 0133     		adds	r3, r3, #1
 10053 042c BB75     		strb	r3, [r7, #22]
 10054              	.L430:
1359:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10055              		.loc 1 1359 0 is_stmt 0 discriminator 1
 10056 042e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10057 0430 032B     		cmp	r3, #3
 10058 0432 EDD9     		bls	.L431
1361:..\src/command_processing.c ****                 }
1362:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_i_c = aux_float2 * 65536;
 10059              		.loc 1 1362 0 is_stmt 1
 10060 0434 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 10061 0436 BB68     		ldr	r3, [r7, #8]	@ float
 10062 0438 4FF08F41 		mov	r1, #1199570944
 10063 043c 1846     		mov	r0, r3
 10064 043e FFF7FEFF 		bl	__aeabi_fmul
 10065 0442 0346     		mov	r3, r0
 10066 0444 1846     		mov	r0, r3
 10067 0446 FFF7FEFF 		bl	__aeabi_f2iz
 10068 044a 0146     		mov	r1, r0
 10069 044c B64A     		ldr	r2, .L494
 10070 044e 2346     		mov	r3, r4
 10071 0450 DB00     		lsls	r3, r3, #3
 10072 0452 1B1B     		subs	r3, r3, r4
 10073 0454 1B01     		lsls	r3, r3, #4
 10074 0456 1344     		add	r3, r3, r2
 10075 0458 C033     		adds	r3, r3, #192
 10076 045a 1960     		str	r1, [r3]
1363:..\src/command_processing.c ****                 
1364:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
 10077              		.loc 1 1364 0
 10078 045c B34B     		ldr	r3, .L494+4
 10079 045e 1B68     		ldr	r3, [r3]	@ float
 10080 0460 FB60     		str	r3, [r7, #12]	@ float
1365:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10081              		.loc 1 1365 0
 10082 0462 0023     		movs	r3, #0
 10083 0464 BB75     		strb	r3, [r7, #22]
 10084 0466 0EE0     		b	.L432
 10085              	.L433:
1366:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10086              		.loc 1 1366 0 discriminator 3
 10087 0468 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10088 046a C3F10303 		rsb	r3, r3, #3
 10089 046e 07F10802 		add	r2, r7, #8
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 232


 10090 0472 1344     		add	r3, r3, r2
 10091 0474 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10092 0476 07F10C01 		add	r1, r7, #12
 10093 047a 0A44     		add	r2, r2, r1
 10094 047c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10095 047e 1A70     		strb	r2, [r3]
1365:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10096              		.loc 1 1365 0 discriminator 3
 10097 0480 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10098 0482 0133     		adds	r3, r3, #1
 10099 0484 BB75     		strb	r3, [r7, #22]
 10100              	.L432:
1365:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10101              		.loc 1 1365 0 is_stmt 0 discriminator 1
 10102 0486 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10103 0488 032B     		cmp	r3, #3
 10104 048a EDD9     		bls	.L433
1367:..\src/command_processing.c ****                 }
1368:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_d_c = aux_float2 * 65536;
 10105              		.loc 1 1368 0 is_stmt 1
 10106 048c 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 10107 048e BB68     		ldr	r3, [r7, #8]	@ float
 10108 0490 4FF08F41 		mov	r1, #1199570944
 10109 0494 1846     		mov	r0, r3
 10110 0496 FFF7FEFF 		bl	__aeabi_fmul
 10111 049a 0346     		mov	r3, r0
 10112 049c 1846     		mov	r0, r3
 10113 049e FFF7FEFF 		bl	__aeabi_f2iz
 10114 04a2 0146     		mov	r1, r0
 10115 04a4 A04A     		ldr	r2, .L494
 10116 04a6 2346     		mov	r3, r4
 10117 04a8 DB00     		lsls	r3, r3, #3
 10118 04aa 1B1B     		subs	r3, r3, r4
 10119 04ac 1B01     		lsls	r3, r3, #4
 10120 04ae 1344     		add	r3, r3, r2
 10121 04b0 C433     		adds	r3, r3, #196
 10122 04b2 1960     		str	r1, [r3]
1369:..\src/command_processing.c ****             }
1370:..\src/command_processing.c ****             else {
1371:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
1372:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1373:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1374:..\src/command_processing.c ****                 }
1375:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_p_c_dl = aux_float2 * 65536;
1376:..\src/command_processing.c ****                 
1377:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
1378:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1379:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1380:..\src/command_processing.c ****                 }
1381:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_i_c_dl = aux_float2 * 65536;
1382:..\src/command_processing.c ****                 
1383:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
1384:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1385:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1386:..\src/command_processing.c ****                 }
1387:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_d_c_dl = aux_float2 * 65536;
1388:..\src/command_processing.c ****             }            
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 233


1389:..\src/command_processing.c ****             break;  
 10123              		.loc 1 1389 0
 10124 04b4 01F009B8 		b	.L426
 10125              	.L427:
1371:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10126              		.loc 1 1371 0
 10127 04b8 9D4B     		ldr	r3, .L494+8
 10128 04ba 1B68     		ldr	r3, [r3]	@ float
 10129 04bc FB60     		str	r3, [r7, #12]	@ float
1372:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10130              		.loc 1 1372 0
 10131 04be 0023     		movs	r3, #0
 10132 04c0 BB75     		strb	r3, [r7, #22]
 10133 04c2 0EE0     		b	.L435
 10134              	.L436:
1373:..\src/command_processing.c ****                 }
 10135              		.loc 1 1373 0 discriminator 3
 10136 04c4 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10137 04c6 C3F10303 		rsb	r3, r3, #3
 10138 04ca 07F10802 		add	r2, r7, #8
 10139 04ce 1344     		add	r3, r3, r2
 10140 04d0 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10141 04d2 07F10C01 		add	r1, r7, #12
 10142 04d6 0A44     		add	r2, r2, r1
 10143 04d8 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10144 04da 1A70     		strb	r2, [r3]
1372:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10145              		.loc 1 1372 0 discriminator 3
 10146 04dc BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10147 04de 0133     		adds	r3, r3, #1
 10148 04e0 BB75     		strb	r3, [r7, #22]
 10149              	.L435:
1372:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10150              		.loc 1 1372 0 is_stmt 0 discriminator 1
 10151 04e2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10152 04e4 032B     		cmp	r3, #3
 10153 04e6 EDD9     		bls	.L436
1375:..\src/command_processing.c ****                 
 10154              		.loc 1 1375 0 is_stmt 1
 10155 04e8 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 10156 04ea BB68     		ldr	r3, [r7, #8]	@ float
 10157 04ec 4FF08F41 		mov	r1, #1199570944
 10158 04f0 1846     		mov	r0, r3
 10159 04f2 FFF7FEFF 		bl	__aeabi_fmul
 10160 04f6 0346     		mov	r3, r0
 10161 04f8 1846     		mov	r0, r3
 10162 04fa FFF7FEFF 		bl	__aeabi_f2iz
 10163 04fe 0146     		mov	r1, r0
 10164 0500 894A     		ldr	r2, .L494
 10165 0502 2346     		mov	r3, r4
 10166 0504 DB00     		lsls	r3, r3, #3
 10167 0506 1B1B     		subs	r3, r3, r4
 10168 0508 1B01     		lsls	r3, r3, #4
 10169 050a 1344     		add	r3, r3, r2
 10170 050c D433     		adds	r3, r3, #212
 10171 050e 1960     		str	r1, [r3]
1377:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 234


 10172              		.loc 1 1377 0
 10173 0510 884B     		ldr	r3, .L494+12
 10174 0512 1B68     		ldr	r3, [r3]	@ float
 10175 0514 FB60     		str	r3, [r7, #12]	@ float
1378:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10176              		.loc 1 1378 0
 10177 0516 0023     		movs	r3, #0
 10178 0518 BB75     		strb	r3, [r7, #22]
 10179 051a 0EE0     		b	.L437
 10180              	.L438:
1379:..\src/command_processing.c ****                 }
 10181              		.loc 1 1379 0 discriminator 3
 10182 051c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10183 051e C3F10303 		rsb	r3, r3, #3
 10184 0522 07F10802 		add	r2, r7, #8
 10185 0526 1344     		add	r3, r3, r2
 10186 0528 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10187 052a 07F10C01 		add	r1, r7, #12
 10188 052e 0A44     		add	r2, r2, r1
 10189 0530 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10190 0532 1A70     		strb	r2, [r3]
1378:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10191              		.loc 1 1378 0 discriminator 3
 10192 0534 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10193 0536 0133     		adds	r3, r3, #1
 10194 0538 BB75     		strb	r3, [r7, #22]
 10195              	.L437:
1378:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10196              		.loc 1 1378 0 is_stmt 0 discriminator 1
 10197 053a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10198 053c 032B     		cmp	r3, #3
 10199 053e EDD9     		bls	.L438
1381:..\src/command_processing.c ****                 
 10200              		.loc 1 1381 0 is_stmt 1
 10201 0540 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 10202 0542 BB68     		ldr	r3, [r7, #8]	@ float
 10203 0544 4FF08F41 		mov	r1, #1199570944
 10204 0548 1846     		mov	r0, r3
 10205 054a FFF7FEFF 		bl	__aeabi_fmul
 10206 054e 0346     		mov	r3, r0
 10207 0550 1846     		mov	r0, r3
 10208 0552 FFF7FEFF 		bl	__aeabi_f2iz
 10209 0556 0146     		mov	r1, r0
 10210 0558 734A     		ldr	r2, .L494
 10211 055a 2346     		mov	r3, r4
 10212 055c DB00     		lsls	r3, r3, #3
 10213 055e 1B1B     		subs	r3, r3, r4
 10214 0560 1B01     		lsls	r3, r3, #4
 10215 0562 1344     		add	r3, r3, r2
 10216 0564 D833     		adds	r3, r3, #216
 10217 0566 1960     		str	r1, [r3]
1383:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10218              		.loc 1 1383 0
 10219 0568 704B     		ldr	r3, .L494+4
 10220 056a 1B68     		ldr	r3, [r3]	@ float
 10221 056c FB60     		str	r3, [r7, #12]	@ float
1384:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 235


 10222              		.loc 1 1384 0
 10223 056e 0023     		movs	r3, #0
 10224 0570 BB75     		strb	r3, [r7, #22]
 10225 0572 0EE0     		b	.L439
 10226              	.L440:
1385:..\src/command_processing.c ****                 }
 10227              		.loc 1 1385 0 discriminator 3
 10228 0574 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10229 0576 C3F10303 		rsb	r3, r3, #3
 10230 057a 07F10802 		add	r2, r7, #8
 10231 057e 1344     		add	r3, r3, r2
 10232 0580 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10233 0582 07F10C01 		add	r1, r7, #12
 10234 0586 0A44     		add	r2, r2, r1
 10235 0588 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10236 058a 1A70     		strb	r2, [r3]
1384:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10237              		.loc 1 1384 0 discriminator 3
 10238 058c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10239 058e 0133     		adds	r3, r3, #1
 10240 0590 BB75     		strb	r3, [r7, #22]
 10241              	.L439:
1384:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10242              		.loc 1 1384 0 is_stmt 0 discriminator 1
 10243 0592 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10244 0594 032B     		cmp	r3, #3
 10245 0596 EDD9     		bls	.L440
1387:..\src/command_processing.c ****             }            
 10246              		.loc 1 1387 0 is_stmt 1
 10247 0598 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 10248 059a BB68     		ldr	r3, [r7, #8]	@ float
 10249 059c 4FF08F41 		mov	r1, #1199570944
 10250 05a0 1846     		mov	r0, r3
 10251 05a2 FFF7FEFF 		bl	__aeabi_fmul
 10252 05a6 0346     		mov	r3, r0
 10253 05a8 1846     		mov	r0, r3
 10254 05aa FFF7FEFF 		bl	__aeabi_f2iz
 10255 05ae 0146     		mov	r1, r0
 10256 05b0 5D4A     		ldr	r2, .L494
 10257 05b2 2346     		mov	r3, r4
 10258 05b4 DB00     		lsls	r3, r3, #3
 10259 05b6 1B1B     		subs	r3, r3, r4
 10260 05b8 1B01     		lsls	r3, r3, #4
 10261 05ba 1344     		add	r3, r3, r2
 10262 05bc DC33     		adds	r3, r3, #220
 10263 05be 1960     		str	r1, [r3]
 10264              		.loc 1 1389 0
 10265 05c0 00F083BF 		b	.L426
 10266              	.L396:
1390:..\src/command_processing.c ****             
1391:..\src/command_processing.c ****         case 5:         //Input mode
1392:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].input_mode = g_rx.buffer[3];
 10267              		.loc 1 1392 0
 10268 05c4 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10269 05c6 5C4B     		ldr	r3, .L494+16
 10270 05c8 D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 10271 05ca 5749     		ldr	r1, .L494
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 236


 10272 05cc 1346     		mov	r3, r2
 10273 05ce DB00     		lsls	r3, r3, #3
 10274 05d0 9B1A     		subs	r3, r3, r2
 10275 05d2 1B01     		lsls	r3, r3, #4
 10276 05d4 0B44     		add	r3, r3, r1
 10277 05d6 03F58773 		add	r3, r3, #270
 10278 05da 0246     		mov	r2, r0
 10279 05dc 1A70     		strb	r2, [r3]
1393:..\src/command_processing.c ****             
1394:..\src/command_processing.c ****             // Hold the actual position
1395:..\src/command_processing.c ****             g_refNew[MOTOR_IDX].pos = g_meas[g_mem.motor[MOTOR_IDX].encoder_line].pos[0];
 10280              		.loc 1 1395 0
 10281 05de 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 10282 05e0 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10283 05e2 5148     		ldr	r0, .L494
 10284 05e4 1346     		mov	r3, r2
 10285 05e6 DB00     		lsls	r3, r3, #3
 10286 05e8 9B1A     		subs	r3, r3, r2
 10287 05ea 1B01     		lsls	r3, r3, #4
 10288 05ec 0344     		add	r3, r3, r0
 10289 05ee 03F58873 		add	r3, r3, #272
 10290 05f2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10291 05f4 1846     		mov	r0, r3
 10292 05f6 514A     		ldr	r2, .L494+20
 10293 05f8 3423     		movs	r3, #52
 10294 05fa 03FB00F3 		mul	r3, r3, r0
 10295 05fe 1344     		add	r3, r3, r2
 10296 0600 1A68     		ldr	r2, [r3]
 10297 0602 4F48     		ldr	r0, .L494+24
 10298 0604 0B01     		lsls	r3, r1, #4
 10299 0606 0344     		add	r3, r3, r0
 10300 0608 1A60     		str	r2, [r3]
1396:..\src/command_processing.c ****             break;   
 10301              		.loc 1 1396 0
 10302 060a 00F05EBF 		b	.L426
 10303              	.L397:
1397:..\src/command_processing.c **** 
1398:..\src/command_processing.c ****         case 8:         //Measurement Offset
1399:..\src/command_processing.c ****             for(i = 0; i < NUM_OF_SENSORS; i++) {
 10304              		.loc 1 1399 0
 10305 060e 0023     		movs	r3, #0
 10306 0610 FB75     		strb	r3, [r7, #23]
 10307 0612 7EE0     		b	.L441
 10308              	.L442:
1400:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffer[3 + i
 10309              		.loc 1 1400 0 discriminator 3
 10310 0614 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10311 0616 4449     		ldr	r1, .L494
 10312 0618 1346     		mov	r3, r2
 10313 061a DB00     		lsls	r3, r3, #3
 10314 061c 9B1A     		subs	r3, r3, r2
 10315 061e 1B01     		lsls	r3, r3, #4
 10316 0620 0B44     		add	r3, r3, r1
 10317 0622 03F58873 		add	r3, r3, #272
 10318 0626 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10319 0628 1C46     		mov	r4, r3
 10320 062a FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 237


 10321 062c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 10322 062e 5B00     		lsls	r3, r3, #1
 10323 0630 0333     		adds	r3, r3, #3
 10324 0632 4149     		ldr	r1, .L494+16
 10325 0634 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 10326 0636 1B02     		lsls	r3, r3, #8
 10327 0638 19B2     		sxth	r1, r3
 10328 063a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 10329 063c 0233     		adds	r3, r3, #2
 10330 063e 5B00     		lsls	r3, r3, #1
 10331 0640 3D48     		ldr	r0, .L494+16
 10332 0642 C35C     		ldrb	r3, [r0, r3]	@ zero_extendqisi2
 10333 0644 1BB2     		sxth	r3, r3
 10334 0646 0B43     		orrs	r3, r3, r1
 10335 0648 1BB2     		sxth	r3, r3
 10336 064a 1846     		mov	r0, r3
 10337 064c 3649     		ldr	r1, .L494
 10338 064e 2346     		mov	r3, r4
 10339 0650 5B00     		lsls	r3, r3, #1
 10340 0652 2344     		add	r3, r3, r4
 10341 0654 9B00     		lsls	r3, r3, #2
 10342 0656 1344     		add	r3, r3, r2
 10343 0658 6633     		adds	r3, r3, #102
 10344 065a 41F82300 		str	r0, [r1, r3, lsl #2]
1401:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] = g_mem.enc[g_mem.motor[MOT
 10345              		.loc 1 1401 0 discriminator 3
 10346 065e 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10347 0660 3149     		ldr	r1, .L494
 10348 0662 1346     		mov	r3, r2
 10349 0664 DB00     		lsls	r3, r3, #3
 10350 0666 9B1A     		subs	r3, r3, r2
 10351 0668 1B01     		lsls	r3, r3, #4
 10352 066a 0B44     		add	r3, r3, r1
 10353 066c 03F58873 		add	r3, r3, #272
 10354 0670 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10355 0672 1D46     		mov	r5, r3
 10356 0674 F97D     		ldrb	r1, [r7, #23]	@ zero_extendqisi2
 10357 0676 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10358 0678 2B48     		ldr	r0, .L494
 10359 067a 1346     		mov	r3, r2
 10360 067c DB00     		lsls	r3, r3, #3
 10361 067e 9B1A     		subs	r3, r3, r2
 10362 0680 1B01     		lsls	r3, r3, #4
 10363 0682 0344     		add	r3, r3, r0
 10364 0684 03F58873 		add	r3, r3, #272
 10365 0688 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10366 068a 1C46     		mov	r4, r3
 10367 068c FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 10368 068e 2648     		ldr	r0, .L494
 10369 0690 2346     		mov	r3, r4
 10370 0692 5B00     		lsls	r3, r3, #1
 10371 0694 2344     		add	r3, r3, r4
 10372 0696 9B00     		lsls	r3, r3, #2
 10373 0698 1344     		add	r3, r3, r2
 10374 069a 6633     		adds	r3, r3, #102
 10375 069c 50F82300 		ldr	r0, [r0, r3, lsl #2]
 10376 06a0 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 238


 10377 06a2 214C     		ldr	r4, .L494
 10378 06a4 1346     		mov	r3, r2
 10379 06a6 DB00     		lsls	r3, r3, #3
 10380 06a8 9B1A     		subs	r3, r3, r2
 10381 06aa 1B01     		lsls	r3, r3, #4
 10382 06ac 2344     		add	r3, r3, r4
 10383 06ae 03F58873 		add	r3, r3, #272
 10384 06b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10385 06b4 1E46     		mov	r6, r3
 10386 06b6 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 10387 06b8 1B4C     		ldr	r4, .L494
 10388 06ba 3346     		mov	r3, r6
 10389 06bc 5B00     		lsls	r3, r3, #1
 10390 06be 3344     		add	r3, r3, r6
 10391 06c0 1B01     		lsls	r3, r3, #4
 10392 06c2 2344     		add	r3, r3, r4
 10393 06c4 1344     		add	r3, r3, r2
 10394 06c6 03F29513 		addw	r3, r3, #405
 10395 06ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10396 06cc 00FA03F2 		lsl	r2, r0, r3
 10397 06d0 1548     		ldr	r0, .L494
 10398 06d2 2B46     		mov	r3, r5
 10399 06d4 5B00     		lsls	r3, r3, #1
 10400 06d6 2B44     		add	r3, r3, r5
 10401 06d8 9B00     		lsls	r3, r3, #2
 10402 06da 0B44     		add	r3, r3, r1
 10403 06dc 6633     		adds	r3, r3, #102
 10404 06de 40F82320 		str	r2, [r0, r3, lsl #2]
1402:..\src/command_processing.c **** 
1403:..\src/command_processing.c ****                 g_meas[g_mem.motor[MOTOR_IDX].encoder_line].rot[i] = 0;
 10405              		.loc 1 1403 0 discriminator 3
 10406 06e2 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10407 06e4 1049     		ldr	r1, .L494
 10408 06e6 1346     		mov	r3, r2
 10409 06e8 DB00     		lsls	r3, r3, #3
 10410 06ea 9B1A     		subs	r3, r3, r2
 10411 06ec 1B01     		lsls	r3, r3, #4
 10412 06ee 0B44     		add	r3, r3, r1
 10413 06f0 03F58873 		add	r3, r3, #272
 10414 06f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10415 06f6 1846     		mov	r0, r3
 10416 06f8 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 10417 06fa 1049     		ldr	r1, .L494+20
 10418 06fc 3422     		movs	r2, #52
 10419 06fe 02FB00F2 		mul	r2, r2, r0
 10420 0702 0A44     		add	r2, r2, r1
 10421 0704 1344     		add	r3, r3, r2
 10422 0706 1833     		adds	r3, r3, #24
 10423 0708 0022     		movs	r2, #0
 10424 070a 1A70     		strb	r2, [r3]
1399:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffer[3 + i
 10425              		.loc 1 1399 0 discriminator 3
 10426 070c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 10427 070e 0133     		adds	r3, r3, #1
 10428 0710 FB75     		strb	r3, [r7, #23]
 10429              	.L441:
1399:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffer[3 + i
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 239


 10430              		.loc 1 1399 0 is_stmt 0 discriminator 1
 10431 0712 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 10432 0714 022B     		cmp	r3, #2
 10433 0716 7FF67DAF 		bls	.L442
1404:..\src/command_processing.c ****             }
1405:..\src/command_processing.c ****             reset_last_value_flag[MOTOR_IDX] = 1;
 10434              		.loc 1 1405 0 is_stmt 1
 10435 071a 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
 10436 071c 094A     		ldr	r2, .L494+28
 10437 071e 0121     		movs	r1, #1
 10438 0720 D154     		strb	r1, [r2, r3]
1406:..\src/command_processing.c ****             break;
 10439              		.loc 1 1406 0
 10440 0722 00F0D2BE 		b	.L426
 10441              	.L495:
 10442 0726 00BF     		.align	2
 10443              	.L494:
 10444 0728 00000000 		.word	g_mem
 10445 072c 0B000000 		.word	g_rx+11
 10446 0730 03000000 		.word	g_rx+3
 10447 0734 07000000 		.word	g_rx+7
 10448 0738 00000000 		.word	g_rx
 10449 073c 00000000 		.word	g_meas
 10450 0740 00000000 		.word	g_refNew
 10451 0744 00000000 		.word	reset_last_value_flag
 10452              	.L398:
1407:..\src/command_processing.c ****     
1408:..\src/command_processing.c ****         case 11:        //Position limits
1409:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].pos_lim_inf = (int32)(g_rx.buffer[3]<<24 | g_rx.buffer[4]<<16 | 
 10453              		.loc 1 1409 0
 10454 0748 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10455 074a C14B     		ldr	r3, .L496
 10456 074c DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 10457 074e 1906     		lsls	r1, r3, #24
 10458 0750 BF4B     		ldr	r3, .L496
 10459 0752 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 10460 0754 1B04     		lsls	r3, r3, #16
 10461 0756 1943     		orrs	r1, r1, r3
 10462 0758 BD4B     		ldr	r3, .L496
 10463 075a 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 10464 075c 1B02     		lsls	r3, r3, #8
 10465 075e 0B43     		orrs	r3, r3, r1
 10466 0760 BB49     		ldr	r1, .L496
 10467 0762 8979     		ldrb	r1, [r1, #6]	@ zero_extendqisi2
 10468 0764 1943     		orrs	r1, r1, r3
 10469 0766 BB48     		ldr	r0, .L496+4
 10470 0768 1346     		mov	r3, r2
 10471 076a DB00     		lsls	r3, r3, #3
 10472 076c 9B1A     		subs	r3, r3, r2
 10473 076e 1B01     		lsls	r3, r3, #4
 10474 0770 0344     		add	r3, r3, r0
 10475 0772 E433     		adds	r3, r3, #228
 10476 0774 1960     		str	r1, [r3]
1410:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].pos_lim_sup = (int32)(g_rx.buffer[7]<<24 | g_rx.buffer[8]<<16 | 
 10477              		.loc 1 1410 0
 10478 0776 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10479 0778 B54B     		ldr	r3, .L496
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 240


 10480 077a DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 10481 077c 1906     		lsls	r1, r3, #24
 10482 077e B44B     		ldr	r3, .L496
 10483 0780 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 10484 0782 1B04     		lsls	r3, r3, #16
 10485 0784 1943     		orrs	r1, r1, r3
 10486 0786 B24B     		ldr	r3, .L496
 10487 0788 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 10488 078a 1B02     		lsls	r3, r3, #8
 10489 078c 0B43     		orrs	r3, r3, r1
 10490 078e B049     		ldr	r1, .L496
 10491 0790 897A     		ldrb	r1, [r1, #10]	@ zero_extendqisi2
 10492 0792 1943     		orrs	r1, r1, r3
 10493 0794 AF48     		ldr	r0, .L496+4
 10494 0796 1346     		mov	r3, r2
 10495 0798 DB00     		lsls	r3, r3, #3
 10496 079a 9B1A     		subs	r3, r3, r2
 10497 079c 1B01     		lsls	r3, r3, #4
 10498 079e 0344     		add	r3, r3, r0
 10499 07a0 E833     		adds	r3, r3, #232
 10500 07a2 1960     		str	r1, [r3]
1411:..\src/command_processing.c **** 
1412:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].pos_lim_inf = g_mem.motor[MOTOR_IDX].pos_lim_inf << g_mem.enc[g_
 10501              		.loc 1 1412 0
 10502 07a4 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10503 07a6 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 10504 07a8 AA48     		ldr	r0, .L496+4
 10505 07aa 0B46     		mov	r3, r1
 10506 07ac DB00     		lsls	r3, r3, #3
 10507 07ae 5B1A     		subs	r3, r3, r1
 10508 07b0 1B01     		lsls	r3, r3, #4
 10509 07b2 0344     		add	r3, r3, r0
 10510 07b4 E433     		adds	r3, r3, #228
 10511 07b6 1868     		ldr	r0, [r3]
 10512 07b8 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 10513 07ba A64C     		ldr	r4, .L496+4
 10514 07bc 0B46     		mov	r3, r1
 10515 07be DB00     		lsls	r3, r3, #3
 10516 07c0 5B1A     		subs	r3, r3, r1
 10517 07c2 1B01     		lsls	r3, r3, #4
 10518 07c4 2344     		add	r3, r3, r4
 10519 07c6 03F58873 		add	r3, r3, #272
 10520 07ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10521 07cc 1C46     		mov	r4, r3
 10522 07ce A149     		ldr	r1, .L496+4
 10523 07d0 2346     		mov	r3, r4
 10524 07d2 5B00     		lsls	r3, r3, #1
 10525 07d4 2344     		add	r3, r3, r4
 10526 07d6 1B01     		lsls	r3, r3, #4
 10527 07d8 0B44     		add	r3, r3, r1
 10528 07da 03F29513 		addw	r3, r3, #405
 10529 07de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10530 07e0 00FA03F1 		lsl	r1, r0, r3
 10531 07e4 9B48     		ldr	r0, .L496+4
 10532 07e6 1346     		mov	r3, r2
 10533 07e8 DB00     		lsls	r3, r3, #3
 10534 07ea 9B1A     		subs	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 241


 10535 07ec 1B01     		lsls	r3, r3, #4
 10536 07ee 0344     		add	r3, r3, r0
 10537 07f0 E433     		adds	r3, r3, #228
 10538 07f2 1960     		str	r1, [r3]
1413:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].pos_lim_sup = g_mem.motor[MOTOR_IDX].pos_lim_sup << g_mem.enc[g_
 10539              		.loc 1 1413 0
 10540 07f4 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10541 07f6 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 10542 07f8 9648     		ldr	r0, .L496+4
 10543 07fa 0B46     		mov	r3, r1
 10544 07fc DB00     		lsls	r3, r3, #3
 10545 07fe 5B1A     		subs	r3, r3, r1
 10546 0800 1B01     		lsls	r3, r3, #4
 10547 0802 0344     		add	r3, r3, r0
 10548 0804 E833     		adds	r3, r3, #232
 10549 0806 1868     		ldr	r0, [r3]
 10550 0808 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 10551 080a 924C     		ldr	r4, .L496+4
 10552 080c 0B46     		mov	r3, r1
 10553 080e DB00     		lsls	r3, r3, #3
 10554 0810 5B1A     		subs	r3, r3, r1
 10555 0812 1B01     		lsls	r3, r3, #4
 10556 0814 2344     		add	r3, r3, r4
 10557 0816 03F58873 		add	r3, r3, #272
 10558 081a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10559 081c 1C46     		mov	r4, r3
 10560 081e 8D49     		ldr	r1, .L496+4
 10561 0820 2346     		mov	r3, r4
 10562 0822 5B00     		lsls	r3, r3, #1
 10563 0824 2344     		add	r3, r3, r4
 10564 0826 1B01     		lsls	r3, r3, #4
 10565 0828 0B44     		add	r3, r3, r1
 10566 082a 03F29513 		addw	r3, r3, #405
 10567 082e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10568 0830 00FA03F1 		lsl	r1, r0, r3
 10569 0834 8748     		ldr	r0, .L496+4
 10570 0836 1346     		mov	r3, r2
 10571 0838 DB00     		lsls	r3, r3, #3
 10572 083a 9B1A     		subs	r3, r3, r2
 10573 083c 1B01     		lsls	r3, r3, #4
 10574 083e 0344     		add	r3, r3, r0
 10575 0840 E833     		adds	r3, r3, #232
 10576 0842 1960     		str	r1, [r3]
1414:..\src/command_processing.c ****             break;            
 10577              		.loc 1 1414 0
 10578 0844 00F041BE 		b	.L426
 10579              	.L399:
1415:..\src/command_processing.c **** 
1416:..\src/command_processing.c ****         case 23:        //Rest Position
1417:..\src/command_processing.c ****             g_mem.SH.rest_pos = (int32)(g_rx.buffer[3]<<24 | g_rx.buffer[4]<<16 | g_rx.buffer[5]<<8
 10580              		.loc 1 1417 0
 10581 0848 814B     		ldr	r3, .L496
 10582 084a DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 10583 084c 1A06     		lsls	r2, r3, #24
 10584 084e 804B     		ldr	r3, .L496
 10585 0850 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 10586 0852 1B04     		lsls	r3, r3, #16
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 242


 10587 0854 1A43     		orrs	r2, r2, r3
 10588 0856 7E4B     		ldr	r3, .L496
 10589 0858 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 10590 085a 1B02     		lsls	r3, r3, #8
 10591 085c 1343     		orrs	r3, r3, r2
 10592 085e 7C4A     		ldr	r2, .L496
 10593 0860 9279     		ldrb	r2, [r2, #6]	@ zero_extendqisi2
 10594 0862 1343     		orrs	r3, r3, r2
 10595 0864 7B4A     		ldr	r2, .L496+4
 10596 0866 C2F8A032 		str	r3, [r2, #672]
1418:..\src/command_processing.c ****             g_mem.SH.rest_pos = g_mem.SH.rest_pos << g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line]
 10597              		.loc 1 1418 0
 10598 086a 7A4B     		ldr	r3, .L496+4
 10599 086c D3F8A012 		ldr	r1, [r3, #672]
 10600 0870 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10601 0872 7848     		ldr	r0, .L496+4
 10602 0874 1346     		mov	r3, r2
 10603 0876 DB00     		lsls	r3, r3, #3
 10604 0878 9B1A     		subs	r3, r3, r2
 10605 087a 1B01     		lsls	r3, r3, #4
 10606 087c 0344     		add	r3, r3, r0
 10607 087e 03F58873 		add	r3, r3, #272
 10608 0882 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10609 0884 1846     		mov	r0, r3
 10610 0886 734A     		ldr	r2, .L496+4
 10611 0888 0346     		mov	r3, r0
 10612 088a 5B00     		lsls	r3, r3, #1
 10613 088c 0344     		add	r3, r3, r0
 10614 088e 1B01     		lsls	r3, r3, #4
 10615 0890 1344     		add	r3, r3, r2
 10616 0892 03F29513 		addw	r3, r3, #405
 10617 0896 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10618 0898 01FA03F3 		lsl	r3, r1, r3
 10619 089c 6D4A     		ldr	r2, .L496+4
 10620 089e C2F8A032 		str	r3, [r2, #672]
1419:..\src/command_processing.c ****             break; 
 10621              		.loc 1 1419 0
 10622 08a2 00F012BE 		b	.L426
 10623              	.L400:
1420:..\src/command_processing.c ****             
1421:..\src/command_processing.c ****         case 24:        //Rest Position Time Delay
1422:..\src/command_processing.c ****            g_mem.SH.rest_delay = (int32)(g_rx.buffer[3]<<24 | g_rx.buffer[4]<<16 | g_rx.buffer[5]<<
 10624              		.loc 1 1422 0
 10625 08a6 6A4B     		ldr	r3, .L496
 10626 08a8 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 10627 08aa 1A06     		lsls	r2, r3, #24
 10628 08ac 684B     		ldr	r3, .L496
 10629 08ae 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 10630 08b0 1B04     		lsls	r3, r3, #16
 10631 08b2 1A43     		orrs	r2, r2, r3
 10632 08b4 664B     		ldr	r3, .L496
 10633 08b6 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 10634 08b8 1B02     		lsls	r3, r3, #8
 10635 08ba 1343     		orrs	r3, r3, r2
 10636 08bc 644A     		ldr	r2, .L496
 10637 08be 9279     		ldrb	r2, [r2, #6]	@ zero_extendqisi2
 10638 08c0 1343     		orrs	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 243


 10639 08c2 644A     		ldr	r2, .L496+4
 10640 08c4 C2F8A432 		str	r3, [r2, #676]
1423:..\src/command_processing.c **** 		   if (g_mem.SH.rest_delay < 10) g_mem.SH.rest_delay = 10;
 10641              		.loc 1 1423 0
 10642 08c8 624B     		ldr	r3, .L496+4
 10643 08ca D3F8A432 		ldr	r3, [r3, #676]
 10644 08ce 092B     		cmp	r3, #9
 10645 08d0 00F3F285 		bgt	.L487
 10646              		.loc 1 1423 0 is_stmt 0 discriminator 1
 10647 08d4 5F4B     		ldr	r3, .L496+4
 10648 08d6 0A22     		movs	r2, #10
 10649 08d8 C3F8A422 		str	r2, [r3, #676]
1424:..\src/command_processing.c ****            break; 
 10650              		.loc 1 1424 0 is_stmt 1 discriminator 1
 10651 08dc 00F0ECBD 		b	.L487
 10652              	.L401:
1425:..\src/command_processing.c ****             
1426:..\src/command_processing.c ****         case 28:        //Right/Left hand flag
1427:..\src/command_processing.c ****             aux_uchar = *((uint8*) &g_rx.buffer[3]);
 10653              		.loc 1 1427 0
 10654 08e0 5B4B     		ldr	r3, .L496
 10655 08e2 DB78     		ldrb	r3, [r3, #3]
 10656 08e4 BB74     		strb	r3, [r7, #18]
1428:..\src/command_processing.c ****             if (aux_uchar) {    // 1
 10657              		.loc 1 1428 0
 10658 08e6 BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 10659 08e8 002B     		cmp	r3, #0
 10660 08ea 04D0     		beq	.L444
1429:..\src/command_processing.c ****                 g_mem.dev.right_left = LEFT_HAND;
 10661              		.loc 1 1429 0
 10662 08ec 594B     		ldr	r3, .L496+4
 10663 08ee 0122     		movs	r2, #1
 10664 08f0 83F8A720 		strb	r2, [r3, #167]
 10665 08f4 03E0     		b	.L445
 10666              	.L444:
1430:..\src/command_processing.c ****             } else {            // 0
1431:..\src/command_processing.c ****                 g_mem.dev.right_left = RIGHT_HAND;
 10667              		.loc 1 1431 0
 10668 08f6 574B     		ldr	r3, .L496+4
 10669 08f8 0022     		movs	r2, #0
 10670 08fa 83F8A720 		strb	r2, [r3, #167]
 10671              	.L445:
1432:..\src/command_processing.c ****             }
1433:..\src/command_processing.c **** 			reset_last_value_flag[MOTOR_IDX] = 1;
 10672              		.loc 1 1433 0
 10673 08fe 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
 10674 0900 554A     		ldr	r2, .L496+8
 10675 0902 0121     		movs	r1, #1
 10676 0904 D154     		strb	r1, [r2, r3]
1434:..\src/command_processing.c **** 
1435:..\src/command_processing.c ****             if (g_mem.dev.dev_type == SOFTHAND_PRO){    
 10677              		.loc 1 1435 0
 10678 0906 534B     		ldr	r3, .L496+4
 10679 0908 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 10680 090c 002B     		cmp	r3, #0
 10681 090e 40F0D585 		bne	.L488
1436:..\src/command_processing.c ****                 // Change also default encoder line (only with SoftHand FW)
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 244


1437:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].encoder_line = g_mem.dev.right_left;
 10682              		.loc 1 1437 0
 10683 0912 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10684 0914 4F4B     		ldr	r3, .L496+4
 10685 0916 93F8A700 		ldrb	r0, [r3, #167]	@ zero_extendqisi2
 10686 091a 4E49     		ldr	r1, .L496+4
 10687 091c 1346     		mov	r3, r2
 10688 091e DB00     		lsls	r3, r3, #3
 10689 0920 9B1A     		subs	r3, r3, r2
 10690 0922 1B01     		lsls	r3, r3, #4
 10691 0924 0B44     		add	r3, r3, r1
 10692 0926 03F58873 		add	r3, r3, #272
 10693 092a 0246     		mov	r2, r0
 10694 092c 1A70     		strb	r2, [r3]
1438:..\src/command_processing.c ****                 
1439:..\src/command_processing.c ****                 // Change also gears parameters
1440:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].double_encoder_on_off = TRUE;
 10695              		.loc 1 1440 0
 10696 092e 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10697 0930 4849     		ldr	r1, .L496+4
 10698 0932 1346     		mov	r3, r2
 10699 0934 DB00     		lsls	r3, r3, #3
 10700 0936 9B1A     		subs	r3, r3, r2
 10701 0938 1B01     		lsls	r3, r3, #4
 10702 093a 0B44     		add	r3, r3, r1
 10703 093c 03F58873 		add	r3, r3, #272
 10704 0940 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10705 0942 1946     		mov	r1, r3
 10706 0944 434A     		ldr	r2, .L496+4
 10707 0946 0B46     		mov	r3, r1
 10708 0948 5B00     		lsls	r3, r3, #1
 10709 094a 0B44     		add	r3, r3, r1
 10710 094c 1B01     		lsls	r3, r3, #4
 10711 094e 1344     		add	r3, r3, r2
 10712 0950 03F5D873 		add	r3, r3, #432
 10713 0954 0122     		movs	r2, #1
 10714 0956 1A70     		strb	r2, [r3]
1441:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[0] = SH_N1;
 10715              		.loc 1 1441 0
 10716 0958 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10717 095a 3E49     		ldr	r1, .L496+4
 10718 095c 1346     		mov	r3, r2
 10719 095e DB00     		lsls	r3, r3, #3
 10720 0960 9B1A     		subs	r3, r3, r2
 10721 0962 1B01     		lsls	r3, r3, #4
 10722 0964 0B44     		add	r3, r3, r1
 10723 0966 03F58873 		add	r3, r3, #272
 10724 096a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10725 096c 1946     		mov	r1, r3
 10726 096e 394A     		ldr	r2, .L496+4
 10727 0970 0B46     		mov	r3, r1
 10728 0972 5B00     		lsls	r3, r3, #1
 10729 0974 0B44     		add	r3, r3, r1
 10730 0976 1B01     		lsls	r3, r3, #4
 10731 0978 1344     		add	r3, r3, r2
 10732 097a 03F2B513 		addw	r3, r3, #437
 10733 097e 2322     		movs	r2, #35
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 245


 10734 0980 1A70     		strb	r2, [r3]
1442:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[1] = SH_N2;
 10735              		.loc 1 1442 0
 10736 0982 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10737 0984 3349     		ldr	r1, .L496+4
 10738 0986 1346     		mov	r3, r2
 10739 0988 DB00     		lsls	r3, r3, #3
 10740 098a 9B1A     		subs	r3, r3, r2
 10741 098c 1B01     		lsls	r3, r3, #4
 10742 098e 0B44     		add	r3, r3, r1
 10743 0990 03F58873 		add	r3, r3, #272
 10744 0994 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10745 0996 1946     		mov	r1, r3
 10746 0998 2E4A     		ldr	r2, .L496+4
 10747 099a 0B46     		mov	r3, r1
 10748 099c 5B00     		lsls	r3, r3, #1
 10749 099e 0B44     		add	r3, r3, r1
 10750 09a0 1B01     		lsls	r3, r3, #4
 10751 09a2 1344     		add	r3, r3, r2
 10752 09a4 03F5DB73 		add	r3, r3, #438
 10753 09a8 0322     		movs	r2, #3
 10754 09aa 1A70     		strb	r2, [r3]
1443:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[2] = SH_I1;
 10755              		.loc 1 1443 0
 10756 09ac 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10757 09ae 2949     		ldr	r1, .L496+4
 10758 09b0 1346     		mov	r3, r2
 10759 09b2 DB00     		lsls	r3, r3, #3
 10760 09b4 9B1A     		subs	r3, r3, r2
 10761 09b6 1B01     		lsls	r3, r3, #4
 10762 09b8 0B44     		add	r3, r3, r1
 10763 09ba 03F58873 		add	r3, r3, #272
 10764 09be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10765 09c0 1946     		mov	r1, r3
 10766 09c2 244A     		ldr	r2, .L496+4
 10767 09c4 0B46     		mov	r3, r1
 10768 09c6 5B00     		lsls	r3, r3, #1
 10769 09c8 0B44     		add	r3, r3, r1
 10770 09ca 1B01     		lsls	r3, r3, #4
 10771 09cc 1344     		add	r3, r3, r2
 10772 09ce 03F2B713 		addw	r3, r3, #439
 10773 09d2 FF22     		movs	r2, #255
 10774 09d4 1A70     		strb	r2, [r3]
1444:..\src/command_processing.c ****                 
1445:..\src/command_processing.c ****                 // Get CS0 encoder line for RIGHT HAND and CS1 line for LEFT HAND as default
1446:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pwm_rate_limiter = PWM_RATE_LIMITER_MAX;
 10775              		.loc 1 1446 0
 10776 09d6 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10777 09d8 1E49     		ldr	r1, .L496+4
 10778 09da 1346     		mov	r3, r2
 10779 09dc DB00     		lsls	r3, r3, #3
 10780 09de 9B1A     		subs	r3, r3, r2
 10781 09e0 1B01     		lsls	r3, r3, #4
 10782 09e2 0B44     		add	r3, r3, r1
 10783 09e4 03F21113 		addw	r3, r3, #273
 10784 09e8 0122     		movs	r2, #1
 10785 09ea 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 246


1447:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].not_revers_motor_flag = TRUE;       // SoftHand not reversib
 10786              		.loc 1 1447 0
 10787 09ec 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10788 09ee 1949     		ldr	r1, .L496+4
 10789 09f0 1346     		mov	r3, r2
 10790 09f2 DB00     		lsls	r3, r3, #3
 10791 09f4 9B1A     		subs	r3, r3, r2
 10792 09f6 1B01     		lsls	r3, r3, #4
 10793 09f8 0B44     		add	r3, r3, r1
 10794 09fa 03F58973 		add	r3, r3, #274
 10795 09fe 0122     		movs	r2, #1
 10796 0a00 1A70     		strb	r2, [r3]
1448:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pos_lim_inf = 0;
 10797              		.loc 1 1448 0
 10798 0a02 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10799 0a04 1349     		ldr	r1, .L496+4
 10800 0a06 1346     		mov	r3, r2
 10801 0a08 DB00     		lsls	r3, r3, #3
 10802 0a0a 9B1A     		subs	r3, r3, r2
 10803 0a0c 1B01     		lsls	r3, r3, #4
 10804 0a0e 0B44     		add	r3, r3, r1
 10805 0a10 E433     		adds	r3, r3, #228
 10806 0a12 0022     		movs	r2, #0
 10807 0a14 1A60     		str	r2, [r3]
1449:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pos_lim_sup = (int32)16000 << g_mem.enc[g_mem.motor[0].encod
 10808              		.loc 1 1449 0
 10809 0a16 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10810 0a18 0E4B     		ldr	r3, .L496+4
 10811 0a1a 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 10812 0a1e 1846     		mov	r0, r3
 10813 0a20 0C49     		ldr	r1, .L496+4
 10814 0a22 0346     		mov	r3, r0
 10815 0a24 5B00     		lsls	r3, r3, #1
 10816 0a26 0344     		add	r3, r3, r0
 10817 0a28 1B01     		lsls	r3, r3, #4
 10818 0a2a 0B44     		add	r3, r3, r1
 10819 0a2c 03F29513 		addw	r3, r3, #405
 10820 0a30 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10821 0a32 1946     		mov	r1, r3
 10822 0a34 4FF47A53 		mov	r3, #16000
 10823 0a38 03FA01F1 		lsl	r1, r3, r1
 10824 0a3c 0548     		ldr	r0, .L496+4
 10825 0a3e 1346     		mov	r3, r2
 10826 0a40 DB00     		lsls	r3, r3, #3
 10827 0a42 9B1A     		subs	r3, r3, r2
 10828 0a44 1B01     		lsls	r3, r3, #4
 10829 0a46 0344     		add	r3, r3, r0
 10830 0a48 E833     		adds	r3, r3, #232
 10831 0a4a 1960     		str	r1, [r3]
1450:..\src/command_processing.c ****             }    
1451:..\src/command_processing.c **** 
1452:..\src/command_processing.c ****             break; 
 10832              		.loc 1 1452 0
 10833 0a4c 00F036BD 		b	.L488
 10834              	.L497:
 10835              		.align	2
 10836              	.L496:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 247


 10837 0a50 00000000 		.word	g_rx
 10838 0a54 00000000 		.word	g_mem
 10839 0a58 00000000 		.word	reset_last_value_flag
 10840              	.L402:
1453:..\src/command_processing.c **** 
1454:..\src/command_processing.c ****         case 31:        //Reset counters - uint8
1455:..\src/command_processing.c ****             aux_uchar = *((uint8*) &g_rx.buffer[3]);
 10841              		.loc 1 1455 0
 10842 0a5c B94B     		ldr	r3, .L498
 10843 0a5e DB78     		ldrb	r3, [r3, #3]
 10844 0a60 BB74     		strb	r3, [r7, #18]
1456:..\src/command_processing.c ****             if (aux_uchar) {
 10845              		.loc 1 1456 0
 10846 0a62 BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 10847 0a64 002B     		cmp	r3, #0
 10848 0a66 05D0     		beq	.L447
1457:..\src/command_processing.c ****                 reset_counters();
 10849              		.loc 1 1457 0
 10850 0a68 FFF7FEFF 		bl	reset_counters
1458:..\src/command_processing.c ****                 g_mem.dev.reset_counters = FALSE;
 10851              		.loc 1 1458 0
 10852 0a6c B64B     		ldr	r3, .L498+4
 10853 0a6e 0022     		movs	r2, #0
 10854 0a70 83F8A820 		strb	r2, [r3, #168]
 10855              	.L447:
1459:..\src/command_processing.c ****             }
1460:..\src/command_processing.c ****             
1461:..\src/command_processing.c ****             if (c_mem.exp.read_exp_port_flag == EXP_SD_RTC) {
 10856              		.loc 1 1461 0
 10857 0a74 B54B     		ldr	r3, .L498+8
 10858 0a76 93F82632 		ldrb	r3, [r3, #550]	@ zero_extendqisi2
 10859 0a7a 012B     		cmp	r3, #1
 10860 0a7c 40F02085 		bne	.L489
1462:..\src/command_processing.c ****                 // Set date of maintenance from RTC
1463:..\src/command_processing.c ****                 aux_uchar = DS1302_read(DS1302_DATE_RD);
 10861              		.loc 1 1463 0
 10862 0a80 8720     		movs	r0, #135
 10863 0a82 FFF7FEFF 		bl	DS1302_read
 10864 0a86 0346     		mov	r3, r0
 10865 0a88 BB74     		strb	r3, [r7, #18]
1464:..\src/command_processing.c ****                 g_mem.dev.stats_period_begin_date[0] = (aux_uchar/16) * 10 + aux_uchar%16;    //day
 10866              		.loc 1 1464 0
 10867 0a8a BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 10868 0a8c 1B09     		lsrs	r3, r3, #4
 10869 0a8e DBB2     		uxtb	r3, r3
 10870 0a90 1A46     		mov	r2, r3
 10871 0a92 9200     		lsls	r2, r2, #2
 10872 0a94 1344     		add	r3, r3, r2
 10873 0a96 5B00     		lsls	r3, r3, #1
 10874 0a98 DAB2     		uxtb	r2, r3
 10875 0a9a BB7C     		ldrb	r3, [r7, #18]
 10876 0a9c 03F00F03 		and	r3, r3, #15
 10877 0aa0 DBB2     		uxtb	r3, r3
 10878 0aa2 1344     		add	r3, r3, r2
 10879 0aa4 DAB2     		uxtb	r2, r3
 10880 0aa6 A84B     		ldr	r3, .L498+4
 10881 0aa8 83F8A420 		strb	r2, [r3, #164]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 248


1465:..\src/command_processing.c ****                 aux_uchar = DS1302_read(DS1302_MONTH_RD);
 10882              		.loc 1 1465 0
 10883 0aac 8920     		movs	r0, #137
 10884 0aae FFF7FEFF 		bl	DS1302_read
 10885 0ab2 0346     		mov	r3, r0
 10886 0ab4 BB74     		strb	r3, [r7, #18]
1466:..\src/command_processing.c ****                 g_mem.dev.stats_period_begin_date[1] = (aux_uchar/16) * 10 + aux_uchar%16;    // mo
 10887              		.loc 1 1466 0
 10888 0ab6 BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 10889 0ab8 1B09     		lsrs	r3, r3, #4
 10890 0aba DBB2     		uxtb	r3, r3
 10891 0abc 1A46     		mov	r2, r3
 10892 0abe 9200     		lsls	r2, r2, #2
 10893 0ac0 1344     		add	r3, r3, r2
 10894 0ac2 5B00     		lsls	r3, r3, #1
 10895 0ac4 DAB2     		uxtb	r2, r3
 10896 0ac6 BB7C     		ldrb	r3, [r7, #18]
 10897 0ac8 03F00F03 		and	r3, r3, #15
 10898 0acc DBB2     		uxtb	r3, r3
 10899 0ace 1344     		add	r3, r3, r2
 10900 0ad0 DAB2     		uxtb	r2, r3
 10901 0ad2 9D4B     		ldr	r3, .L498+4
 10902 0ad4 83F8A520 		strb	r2, [r3, #165]
1467:..\src/command_processing.c ****                 aux_uchar = DS1302_read(DS1302_YEAR_RD);
 10903              		.loc 1 1467 0
 10904 0ad8 8D20     		movs	r0, #141
 10905 0ada FFF7FEFF 		bl	DS1302_read
 10906 0ade 0346     		mov	r3, r0
 10907 0ae0 BB74     		strb	r3, [r7, #18]
1468:..\src/command_processing.c ****                 g_mem.dev.stats_period_begin_date[2] = (aux_uchar/16) * 10 + aux_uchar%16;         
 10908              		.loc 1 1468 0
 10909 0ae2 BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 10910 0ae4 1B09     		lsrs	r3, r3, #4
 10911 0ae6 DBB2     		uxtb	r3, r3
 10912 0ae8 1A46     		mov	r2, r3
 10913 0aea 9200     		lsls	r2, r2, #2
 10914 0aec 1344     		add	r3, r3, r2
 10915 0aee 5B00     		lsls	r3, r3, #1
 10916 0af0 DAB2     		uxtb	r2, r3
 10917 0af2 BB7C     		ldrb	r3, [r7, #18]
 10918 0af4 03F00F03 		and	r3, r3, #15
 10919 0af8 DBB2     		uxtb	r3, r3
 10920 0afa 1344     		add	r3, r3, r2
 10921 0afc DAB2     		uxtb	r2, r3
 10922 0afe 924B     		ldr	r3, .L498+4
 10923 0b00 83F8A620 		strb	r2, [r3, #166]
1469:..\src/command_processing.c ****             }
1470:..\src/command_processing.c ****             break;             
 10924              		.loc 1 1470 0
 10925 0b04 00F0DCBC 		b	.L489
 10926              	.L403:
 10927              	.LBB23:
1471:..\src/command_processing.c ****             
1472:..\src/command_processing.c ****         case 32:         //Current Time
1473:..\src/command_processing.c ****             for (uint8 i=0; i<6; i++){
 10928              		.loc 1 1473 0
 10929 0b08 0023     		movs	r3, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 249


 10930 0b0a 7B75     		strb	r3, [r7, #21]
 10931 0b0c 0CE0     		b	.L449
 10932              	.L450:
1474:..\src/command_processing.c ****                 g_mem.exp.curr_time[i] = g_rx.buffer[3 + i];
 10933              		.loc 1 1474 0 discriminator 3
 10934 0b0e 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 10935 0b10 7A7D     		ldrb	r2, [r7, #21]	@ zero_extendqisi2
 10936 0b12 0332     		adds	r2, r2, #3
 10937 0b14 8B49     		ldr	r1, .L498
 10938 0b16 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 10939 0b18 8B4A     		ldr	r2, .L498+4
 10940 0b1a 1344     		add	r3, r3, r2
 10941 0b1c 0A46     		mov	r2, r1
 10942 0b1e 83F82022 		strb	r2, [r3, #544]
1473:..\src/command_processing.c ****                 g_mem.exp.curr_time[i] = g_rx.buffer[3 + i];
 10943              		.loc 1 1473 0 discriminator 3
 10944 0b22 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 10945 0b24 0133     		adds	r3, r3, #1
 10946 0b26 7B75     		strb	r3, [r7, #21]
 10947              	.L449:
1473:..\src/command_processing.c ****                 g_mem.exp.curr_time[i] = g_rx.buffer[3 + i];
 10948              		.loc 1 1473 0 is_stmt 0 discriminator 1
 10949 0b28 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 10950 0b2a 052B     		cmp	r3, #5
 10951 0b2c EFD9     		bls	.L450
 10952              	.LBE23:
1475:..\src/command_processing.c ****             }
1476:..\src/command_processing.c ****             
1477:..\src/command_processing.c ****             if (g_mem.exp.read_exp_port_flag == EXP_SD_RTC) {
 10953              		.loc 1 1477 0 is_stmt 1
 10954 0b2e 864B     		ldr	r3, .L498+4
 10955 0b30 93F82632 		ldrb	r3, [r3, #550]	@ zero_extendqisi2
 10956 0b34 012B     		cmp	r3, #1
 10957 0b36 40F0C584 		bne	.L490
1478:..\src/command_processing.c ****                 set_RTC_time();
 10958              		.loc 1 1478 0
 10959 0b3a FFF7FEFF 		bl	set_RTC_time
1479:..\src/command_processing.c ****             }
1480:..\src/command_processing.c ****             break;
 10960              		.loc 1 1480 0
 10961 0b3e 00F0C1BC 		b	.L490
 10962              	.L404:
1481:..\src/command_processing.c ****            
1482:..\src/command_processing.c ****         case 38:        // First Motor PWM frequency
1483:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].motor_pwm_frequency = g_rx.buffer[3];
 10963              		.loc 1 1483 0
 10964 0b42 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10965 0b44 7F4B     		ldr	r3, .L498
 10966 0b46 D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 10967 0b48 7F49     		ldr	r1, .L498+4
 10968 0b4a 1346     		mov	r3, r2
 10969 0b4c DB00     		lsls	r3, r3, #3
 10970 0b4e 9B1A     		subs	r3, r3, r2
 10971 0b50 1B01     		lsls	r3, r3, #4
 10972 0b52 0B44     		add	r3, r3, r1
 10973 0b54 E233     		adds	r3, r3, #226
 10974 0b56 0246     		mov	r2, r0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 250


 10975 0b58 1A70     		strb	r2, [r3]
1484:..\src/command_processing.c ****             set_pwm_frequency();            
 10976              		.loc 1 1484 0
 10977 0b5a FFF7FEFF 		bl	set_pwm_frequency
1485:..\src/command_processing.c ****             break;
 10978              		.loc 1 1485 0
 10979 0b5e 00F0B4BC 		b	.L426
 10980              	.L405:
1486:..\src/command_processing.c ****             
1487:..\src/command_processing.c ****         case 44:         // Second Motor Position PID
1488:..\src/command_processing.c ****             if(c_mem.motor[SECOND_MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 10981              		.loc 1 1488 0
 10982 0b62 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 10983 0b64 7949     		ldr	r1, .L498+8
 10984 0b66 1346     		mov	r3, r2
 10985 0b68 DB00     		lsls	r3, r3, #3
 10986 0b6a 9B1A     		subs	r3, r3, r2
 10987 0b6c 1B01     		lsls	r3, r3, #4
 10988 0b6e 0B44     		add	r3, r3, r1
 10989 0b70 03F20F13 		addw	r3, r3, #271
 10990 0b74 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10991 0b76 032B     		cmp	r3, #3
 10992 0b78 00F08680 		beq	.L452
1489:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
 10993              		.loc 1 1489 0
 10994 0b7c 744B     		ldr	r3, .L498+12
 10995 0b7e 1B68     		ldr	r3, [r3]	@ float
 10996 0b80 FB60     		str	r3, [r7, #12]	@ float
1490:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10997              		.loc 1 1490 0
 10998 0b82 0023     		movs	r3, #0
 10999 0b84 BB75     		strb	r3, [r7, #22]
 11000 0b86 0EE0     		b	.L453
 11001              	.L454:
1491:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11002              		.loc 1 1491 0 discriminator 3
 11003 0b88 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11004 0b8a C3F10303 		rsb	r3, r3, #3
 11005 0b8e 07F10802 		add	r2, r7, #8
 11006 0b92 1344     		add	r3, r3, r2
 11007 0b94 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11008 0b96 07F10C01 		add	r1, r7, #12
 11009 0b9a 0A44     		add	r2, r2, r1
 11010 0b9c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11011 0b9e 1A70     		strb	r2, [r3]
1490:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11012              		.loc 1 1490 0 discriminator 3
 11013 0ba0 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11014 0ba2 0133     		adds	r3, r3, #1
 11015 0ba4 BB75     		strb	r3, [r7, #22]
 11016              	.L453:
1490:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11017              		.loc 1 1490 0 is_stmt 0 discriminator 1
 11018 0ba6 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11019 0ba8 032B     		cmp	r3, #3
 11020 0baa EDD9     		bls	.L454
1492:..\src/command_processing.c ****                 }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 251


1493:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_p = aux_float2 * 65536;
 11021              		.loc 1 1493 0 is_stmt 1
 11022 0bac FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11023 0bae BB68     		ldr	r3, [r7, #8]	@ float
 11024 0bb0 4FF08F41 		mov	r1, #1199570944
 11025 0bb4 1846     		mov	r0, r3
 11026 0bb6 FFF7FEFF 		bl	__aeabi_fmul
 11027 0bba 0346     		mov	r3, r0
 11028 0bbc 1846     		mov	r0, r3
 11029 0bbe FFF7FEFF 		bl	__aeabi_f2iz
 11030 0bc2 0146     		mov	r1, r0
 11031 0bc4 604A     		ldr	r2, .L498+4
 11032 0bc6 2346     		mov	r3, r4
 11033 0bc8 DB00     		lsls	r3, r3, #3
 11034 0bca 1B1B     		subs	r3, r3, r4
 11035 0bcc 1B01     		lsls	r3, r3, #4
 11036 0bce 1344     		add	r3, r3, r2
 11037 0bd0 B033     		adds	r3, r3, #176
 11038 0bd2 1960     		str	r1, [r3]
1494:..\src/command_processing.c ****                 
1495:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
 11039              		.loc 1 1495 0
 11040 0bd4 5F4B     		ldr	r3, .L498+16
 11041 0bd6 1B68     		ldr	r3, [r3]	@ float
 11042 0bd8 FB60     		str	r3, [r7, #12]	@ float
1496:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11043              		.loc 1 1496 0
 11044 0bda 0023     		movs	r3, #0
 11045 0bdc BB75     		strb	r3, [r7, #22]
 11046 0bde 0EE0     		b	.L455
 11047              	.L456:
1497:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11048              		.loc 1 1497 0 discriminator 3
 11049 0be0 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11050 0be2 C3F10303 		rsb	r3, r3, #3
 11051 0be6 07F10802 		add	r2, r7, #8
 11052 0bea 1344     		add	r3, r3, r2
 11053 0bec BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11054 0bee 07F10C01 		add	r1, r7, #12
 11055 0bf2 0A44     		add	r2, r2, r1
 11056 0bf4 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11057 0bf6 1A70     		strb	r2, [r3]
1496:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11058              		.loc 1 1496 0 discriminator 3
 11059 0bf8 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11060 0bfa 0133     		adds	r3, r3, #1
 11061 0bfc BB75     		strb	r3, [r7, #22]
 11062              	.L455:
1496:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11063              		.loc 1 1496 0 is_stmt 0 discriminator 1
 11064 0bfe BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11065 0c00 032B     		cmp	r3, #3
 11066 0c02 EDD9     		bls	.L456
1498:..\src/command_processing.c ****                 }
1499:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_i = aux_float2 * 65536;
 11067              		.loc 1 1499 0 is_stmt 1
 11068 0c04 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 252


 11069 0c06 BB68     		ldr	r3, [r7, #8]	@ float
 11070 0c08 4FF08F41 		mov	r1, #1199570944
 11071 0c0c 1846     		mov	r0, r3
 11072 0c0e FFF7FEFF 		bl	__aeabi_fmul
 11073 0c12 0346     		mov	r3, r0
 11074 0c14 1846     		mov	r0, r3
 11075 0c16 FFF7FEFF 		bl	__aeabi_f2iz
 11076 0c1a 0146     		mov	r1, r0
 11077 0c1c 4A4A     		ldr	r2, .L498+4
 11078 0c1e 2346     		mov	r3, r4
 11079 0c20 DB00     		lsls	r3, r3, #3
 11080 0c22 1B1B     		subs	r3, r3, r4
 11081 0c24 1B01     		lsls	r3, r3, #4
 11082 0c26 1344     		add	r3, r3, r2
 11083 0c28 B433     		adds	r3, r3, #180
 11084 0c2a 1960     		str	r1, [r3]
1500:..\src/command_processing.c ****                 
1501:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
 11085              		.loc 1 1501 0
 11086 0c2c 4A4B     		ldr	r3, .L498+20
 11087 0c2e 1B68     		ldr	r3, [r3]	@ float
 11088 0c30 FB60     		str	r3, [r7, #12]	@ float
1502:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11089              		.loc 1 1502 0
 11090 0c32 0023     		movs	r3, #0
 11091 0c34 BB75     		strb	r3, [r7, #22]
 11092 0c36 0EE0     		b	.L457
 11093              	.L458:
1503:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11094              		.loc 1 1503 0 discriminator 3
 11095 0c38 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11096 0c3a C3F10303 		rsb	r3, r3, #3
 11097 0c3e 07F10802 		add	r2, r7, #8
 11098 0c42 1344     		add	r3, r3, r2
 11099 0c44 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11100 0c46 07F10C01 		add	r1, r7, #12
 11101 0c4a 0A44     		add	r2, r2, r1
 11102 0c4c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11103 0c4e 1A70     		strb	r2, [r3]
1502:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11104              		.loc 1 1502 0 discriminator 3
 11105 0c50 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11106 0c52 0133     		adds	r3, r3, #1
 11107 0c54 BB75     		strb	r3, [r7, #22]
 11108              	.L457:
1502:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11109              		.loc 1 1502 0 is_stmt 0 discriminator 1
 11110 0c56 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11111 0c58 032B     		cmp	r3, #3
 11112 0c5a EDD9     		bls	.L458
1504:..\src/command_processing.c ****                 }
1505:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_d = aux_float2 * 65536;
 11113              		.loc 1 1505 0 is_stmt 1
 11114 0c5c FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11115 0c5e BB68     		ldr	r3, [r7, #8]	@ float
 11116 0c60 4FF08F41 		mov	r1, #1199570944
 11117 0c64 1846     		mov	r0, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 253


 11118 0c66 FFF7FEFF 		bl	__aeabi_fmul
 11119 0c6a 0346     		mov	r3, r0
 11120 0c6c 1846     		mov	r0, r3
 11121 0c6e FFF7FEFF 		bl	__aeabi_f2iz
 11122 0c72 0146     		mov	r1, r0
 11123 0c74 344A     		ldr	r2, .L498+4
 11124 0c76 2346     		mov	r3, r4
 11125 0c78 DB00     		lsls	r3, r3, #3
 11126 0c7a 1B1B     		subs	r3, r3, r4
 11127 0c7c 1B01     		lsls	r3, r3, #4
 11128 0c7e 1344     		add	r3, r3, r2
 11129 0c80 B833     		adds	r3, r3, #184
 11130 0c82 1960     		str	r1, [r3]
1506:..\src/command_processing.c ****             }
1507:..\src/command_processing.c ****             else {
1508:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
1509:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1510:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1511:..\src/command_processing.c ****                 }
1512:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_p_dl = aux_float2 * 65536;
1513:..\src/command_processing.c ****                 
1514:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
1515:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1516:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1517:..\src/command_processing.c ****                 }
1518:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_i_dl = aux_float2 * 65536;
1519:..\src/command_processing.c ****                 
1520:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
1521:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1522:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1523:..\src/command_processing.c ****                 }
1524:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_d_dl = aux_float2 * 65536;
1525:..\src/command_processing.c ****             }
1526:..\src/command_processing.c ****             break;
 11131              		.loc 1 1526 0
 11132 0c84 00F021BC 		b	.L426
 11133              	.L452:
1508:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11134              		.loc 1 1508 0
 11135 0c88 314B     		ldr	r3, .L498+12
 11136 0c8a 1B68     		ldr	r3, [r3]	@ float
 11137 0c8c FB60     		str	r3, [r7, #12]	@ float
1509:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11138              		.loc 1 1509 0
 11139 0c8e 0023     		movs	r3, #0
 11140 0c90 BB75     		strb	r3, [r7, #22]
 11141 0c92 0EE0     		b	.L460
 11142              	.L461:
1510:..\src/command_processing.c ****                 }
 11143              		.loc 1 1510 0 discriminator 3
 11144 0c94 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11145 0c96 C3F10303 		rsb	r3, r3, #3
 11146 0c9a 07F10802 		add	r2, r7, #8
 11147 0c9e 1344     		add	r3, r3, r2
 11148 0ca0 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11149 0ca2 07F10C01 		add	r1, r7, #12
 11150 0ca6 0A44     		add	r2, r2, r1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 254


 11151 0ca8 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11152 0caa 1A70     		strb	r2, [r3]
1509:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11153              		.loc 1 1509 0 discriminator 3
 11154 0cac BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11155 0cae 0133     		adds	r3, r3, #1
 11156 0cb0 BB75     		strb	r3, [r7, #22]
 11157              	.L460:
1509:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11158              		.loc 1 1509 0 is_stmt 0 discriminator 1
 11159 0cb2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11160 0cb4 032B     		cmp	r3, #3
 11161 0cb6 EDD9     		bls	.L461
1512:..\src/command_processing.c ****                 
 11162              		.loc 1 1512 0 is_stmt 1
 11163 0cb8 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11164 0cba BB68     		ldr	r3, [r7, #8]	@ float
 11165 0cbc 4FF08F41 		mov	r1, #1199570944
 11166 0cc0 1846     		mov	r0, r3
 11167 0cc2 FFF7FEFF 		bl	__aeabi_fmul
 11168 0cc6 0346     		mov	r3, r0
 11169 0cc8 1846     		mov	r0, r3
 11170 0cca FFF7FEFF 		bl	__aeabi_f2iz
 11171 0cce 0146     		mov	r1, r0
 11172 0cd0 1D4A     		ldr	r2, .L498+4
 11173 0cd2 2346     		mov	r3, r4
 11174 0cd4 DB00     		lsls	r3, r3, #3
 11175 0cd6 1B1B     		subs	r3, r3, r4
 11176 0cd8 1B01     		lsls	r3, r3, #4
 11177 0cda 1344     		add	r3, r3, r2
 11178 0cdc C833     		adds	r3, r3, #200
 11179 0cde 1960     		str	r1, [r3]
1514:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11180              		.loc 1 1514 0
 11181 0ce0 1C4B     		ldr	r3, .L498+16
 11182 0ce2 1B68     		ldr	r3, [r3]	@ float
 11183 0ce4 FB60     		str	r3, [r7, #12]	@ float
1515:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11184              		.loc 1 1515 0
 11185 0ce6 0023     		movs	r3, #0
 11186 0ce8 BB75     		strb	r3, [r7, #22]
 11187 0cea 0EE0     		b	.L462
 11188              	.L463:
1516:..\src/command_processing.c ****                 }
 11189              		.loc 1 1516 0 discriminator 3
 11190 0cec BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11191 0cee C3F10303 		rsb	r3, r3, #3
 11192 0cf2 07F10802 		add	r2, r7, #8
 11193 0cf6 1344     		add	r3, r3, r2
 11194 0cf8 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11195 0cfa 07F10C01 		add	r1, r7, #12
 11196 0cfe 0A44     		add	r2, r2, r1
 11197 0d00 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11198 0d02 1A70     		strb	r2, [r3]
1515:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11199              		.loc 1 1515 0 discriminator 3
 11200 0d04 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 255


 11201 0d06 0133     		adds	r3, r3, #1
 11202 0d08 BB75     		strb	r3, [r7, #22]
 11203              	.L462:
1515:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11204              		.loc 1 1515 0 is_stmt 0 discriminator 1
 11205 0d0a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11206 0d0c 032B     		cmp	r3, #3
 11207 0d0e EDD9     		bls	.L463
1518:..\src/command_processing.c ****                 
 11208              		.loc 1 1518 0 is_stmt 1
 11209 0d10 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11210 0d12 BB68     		ldr	r3, [r7, #8]	@ float
 11211 0d14 4FF08F41 		mov	r1, #1199570944
 11212 0d18 1846     		mov	r0, r3
 11213 0d1a FFF7FEFF 		bl	__aeabi_fmul
 11214 0d1e 0346     		mov	r3, r0
 11215 0d20 1846     		mov	r0, r3
 11216 0d22 FFF7FEFF 		bl	__aeabi_f2iz
 11217 0d26 0146     		mov	r1, r0
 11218 0d28 074A     		ldr	r2, .L498+4
 11219 0d2a 2346     		mov	r3, r4
 11220 0d2c DB00     		lsls	r3, r3, #3
 11221 0d2e 1B1B     		subs	r3, r3, r4
 11222 0d30 1B01     		lsls	r3, r3, #4
 11223 0d32 1344     		add	r3, r3, r2
 11224 0d34 CC33     		adds	r3, r3, #204
 11225 0d36 1960     		str	r1, [r3]
1520:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11226              		.loc 1 1520 0
 11227 0d38 074B     		ldr	r3, .L498+20
 11228 0d3a 1B68     		ldr	r3, [r3]	@ float
 11229 0d3c FB60     		str	r3, [r7, #12]	@ float
1521:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11230              		.loc 1 1521 0
 11231 0d3e 0023     		movs	r3, #0
 11232 0d40 BB75     		strb	r3, [r7, #22]
 11233 0d42 1AE0     		b	.L464
 11234              	.L499:
 11235              		.align	2
 11236              	.L498:
 11237 0d44 00000000 		.word	g_rx
 11238 0d48 00000000 		.word	g_mem
 11239 0d4c 00000000 		.word	c_mem
 11240 0d50 03000000 		.word	g_rx+3
 11241 0d54 07000000 		.word	g_rx+7
 11242 0d58 0B000000 		.word	g_rx+11
 11243              	.L465:
1522:..\src/command_processing.c ****                 }
 11244              		.loc 1 1522 0 discriminator 3
 11245 0d5c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11246 0d5e C3F10303 		rsb	r3, r3, #3
 11247 0d62 07F10802 		add	r2, r7, #8
 11248 0d66 1344     		add	r3, r3, r2
 11249 0d68 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11250 0d6a 07F10C01 		add	r1, r7, #12
 11251 0d6e 0A44     		add	r2, r2, r1
 11252 0d70 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 256


 11253 0d72 1A70     		strb	r2, [r3]
1521:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11254              		.loc 1 1521 0 discriminator 3
 11255 0d74 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11256 0d76 0133     		adds	r3, r3, #1
 11257 0d78 BB75     		strb	r3, [r7, #22]
 11258              	.L464:
1521:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11259              		.loc 1 1521 0 is_stmt 0 discriminator 1
 11260 0d7a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11261 0d7c 032B     		cmp	r3, #3
 11262 0d7e EDD9     		bls	.L465
1524:..\src/command_processing.c ****             }
 11263              		.loc 1 1524 0 is_stmt 1
 11264 0d80 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11265 0d82 BB68     		ldr	r3, [r7, #8]	@ float
 11266 0d84 4FF08F41 		mov	r1, #1199570944
 11267 0d88 1846     		mov	r0, r3
 11268 0d8a FFF7FEFF 		bl	__aeabi_fmul
 11269 0d8e 0346     		mov	r3, r0
 11270 0d90 1846     		mov	r0, r3
 11271 0d92 FFF7FEFF 		bl	__aeabi_f2iz
 11272 0d96 0146     		mov	r1, r0
 11273 0d98 A34A     		ldr	r2, .L500
 11274 0d9a 2346     		mov	r3, r4
 11275 0d9c DB00     		lsls	r3, r3, #3
 11276 0d9e 1B1B     		subs	r3, r3, r4
 11277 0da0 1B01     		lsls	r3, r3, #4
 11278 0da2 1344     		add	r3, r3, r2
 11279 0da4 D033     		adds	r3, r3, #208
 11280 0da6 1960     		str	r1, [r3]
 11281              		.loc 1 1526 0
 11282 0da8 8FE3     		b	.L426
 11283              	.L406:
1527:..\src/command_processing.c ****             
1528:..\src/command_processing.c ****         case 45:         // Second Motor Current PID
1529:..\src/command_processing.c ****             if(c_mem.motor[SECOND_MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 11284              		.loc 1 1529 0
 11285 0daa FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11286 0dac 9F49     		ldr	r1, .L500+4
 11287 0dae 1346     		mov	r3, r2
 11288 0db0 DB00     		lsls	r3, r3, #3
 11289 0db2 9B1A     		subs	r3, r3, r2
 11290 0db4 1B01     		lsls	r3, r3, #4
 11291 0db6 0B44     		add	r3, r3, r1
 11292 0db8 03F20F13 		addw	r3, r3, #271
 11293 0dbc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11294 0dbe 032B     		cmp	r3, #3
 11295 0dc0 00F08580 		beq	.L466
1530:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
 11296              		.loc 1 1530 0
 11297 0dc4 9A4B     		ldr	r3, .L500+8
 11298 0dc6 1B68     		ldr	r3, [r3]	@ float
 11299 0dc8 FB60     		str	r3, [r7, #12]	@ float
1531:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11300              		.loc 1 1531 0
 11301 0dca 0023     		movs	r3, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 257


 11302 0dcc BB75     		strb	r3, [r7, #22]
 11303 0dce 0EE0     		b	.L467
 11304              	.L468:
1532:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11305              		.loc 1 1532 0 discriminator 3
 11306 0dd0 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11307 0dd2 C3F10303 		rsb	r3, r3, #3
 11308 0dd6 07F10802 		add	r2, r7, #8
 11309 0dda 1344     		add	r3, r3, r2
 11310 0ddc BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11311 0dde 07F10C01 		add	r1, r7, #12
 11312 0de2 0A44     		add	r2, r2, r1
 11313 0de4 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11314 0de6 1A70     		strb	r2, [r3]
1531:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11315              		.loc 1 1531 0 discriminator 3
 11316 0de8 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11317 0dea 0133     		adds	r3, r3, #1
 11318 0dec BB75     		strb	r3, [r7, #22]
 11319              	.L467:
1531:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11320              		.loc 1 1531 0 is_stmt 0 discriminator 1
 11321 0dee BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11322 0df0 032B     		cmp	r3, #3
 11323 0df2 EDD9     		bls	.L468
1533:..\src/command_processing.c ****                 }
1534:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_p_c = aux_float2 * 65536;
 11324              		.loc 1 1534 0 is_stmt 1
 11325 0df4 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11326 0df6 BB68     		ldr	r3, [r7, #8]	@ float
 11327 0df8 4FF08F41 		mov	r1, #1199570944
 11328 0dfc 1846     		mov	r0, r3
 11329 0dfe FFF7FEFF 		bl	__aeabi_fmul
 11330 0e02 0346     		mov	r3, r0
 11331 0e04 1846     		mov	r0, r3
 11332 0e06 FFF7FEFF 		bl	__aeabi_f2iz
 11333 0e0a 0146     		mov	r1, r0
 11334 0e0c 864A     		ldr	r2, .L500
 11335 0e0e 2346     		mov	r3, r4
 11336 0e10 DB00     		lsls	r3, r3, #3
 11337 0e12 1B1B     		subs	r3, r3, r4
 11338 0e14 1B01     		lsls	r3, r3, #4
 11339 0e16 1344     		add	r3, r3, r2
 11340 0e18 BC33     		adds	r3, r3, #188
 11341 0e1a 1960     		str	r1, [r3]
1535:..\src/command_processing.c ****                 
1536:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
 11342              		.loc 1 1536 0
 11343 0e1c 854B     		ldr	r3, .L500+12
 11344 0e1e 1B68     		ldr	r3, [r3]	@ float
 11345 0e20 FB60     		str	r3, [r7, #12]	@ float
1537:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11346              		.loc 1 1537 0
 11347 0e22 0023     		movs	r3, #0
 11348 0e24 BB75     		strb	r3, [r7, #22]
 11349 0e26 0EE0     		b	.L469
 11350              	.L470:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 258


1538:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11351              		.loc 1 1538 0 discriminator 3
 11352 0e28 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11353 0e2a C3F10303 		rsb	r3, r3, #3
 11354 0e2e 07F10802 		add	r2, r7, #8
 11355 0e32 1344     		add	r3, r3, r2
 11356 0e34 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11357 0e36 07F10C01 		add	r1, r7, #12
 11358 0e3a 0A44     		add	r2, r2, r1
 11359 0e3c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11360 0e3e 1A70     		strb	r2, [r3]
1537:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11361              		.loc 1 1537 0 discriminator 3
 11362 0e40 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11363 0e42 0133     		adds	r3, r3, #1
 11364 0e44 BB75     		strb	r3, [r7, #22]
 11365              	.L469:
1537:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11366              		.loc 1 1537 0 is_stmt 0 discriminator 1
 11367 0e46 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11368 0e48 032B     		cmp	r3, #3
 11369 0e4a EDD9     		bls	.L470
1539:..\src/command_processing.c ****                 }
1540:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_i_c = aux_float2 * 65536;
 11370              		.loc 1 1540 0 is_stmt 1
 11371 0e4c FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11372 0e4e BB68     		ldr	r3, [r7, #8]	@ float
 11373 0e50 4FF08F41 		mov	r1, #1199570944
 11374 0e54 1846     		mov	r0, r3
 11375 0e56 FFF7FEFF 		bl	__aeabi_fmul
 11376 0e5a 0346     		mov	r3, r0
 11377 0e5c 1846     		mov	r0, r3
 11378 0e5e FFF7FEFF 		bl	__aeabi_f2iz
 11379 0e62 0146     		mov	r1, r0
 11380 0e64 704A     		ldr	r2, .L500
 11381 0e66 2346     		mov	r3, r4
 11382 0e68 DB00     		lsls	r3, r3, #3
 11383 0e6a 1B1B     		subs	r3, r3, r4
 11384 0e6c 1B01     		lsls	r3, r3, #4
 11385 0e6e 1344     		add	r3, r3, r2
 11386 0e70 C033     		adds	r3, r3, #192
 11387 0e72 1960     		str	r1, [r3]
1541:..\src/command_processing.c ****                 
1542:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
 11388              		.loc 1 1542 0
 11389 0e74 704B     		ldr	r3, .L500+16
 11390 0e76 1B68     		ldr	r3, [r3]	@ float
 11391 0e78 FB60     		str	r3, [r7, #12]	@ float
1543:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11392              		.loc 1 1543 0
 11393 0e7a 0023     		movs	r3, #0
 11394 0e7c BB75     		strb	r3, [r7, #22]
 11395 0e7e 0EE0     		b	.L471
 11396              	.L472:
1544:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11397              		.loc 1 1544 0 discriminator 3
 11398 0e80 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 259


 11399 0e82 C3F10303 		rsb	r3, r3, #3
 11400 0e86 07F10802 		add	r2, r7, #8
 11401 0e8a 1344     		add	r3, r3, r2
 11402 0e8c BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11403 0e8e 07F10C01 		add	r1, r7, #12
 11404 0e92 0A44     		add	r2, r2, r1
 11405 0e94 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11406 0e96 1A70     		strb	r2, [r3]
1543:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11407              		.loc 1 1543 0 discriminator 3
 11408 0e98 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11409 0e9a 0133     		adds	r3, r3, #1
 11410 0e9c BB75     		strb	r3, [r7, #22]
 11411              	.L471:
1543:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11412              		.loc 1 1543 0 is_stmt 0 discriminator 1
 11413 0e9e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11414 0ea0 032B     		cmp	r3, #3
 11415 0ea2 EDD9     		bls	.L472
1545:..\src/command_processing.c ****                 }
1546:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_d_c = aux_float2 * 65536;
 11416              		.loc 1 1546 0 is_stmt 1
 11417 0ea4 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11418 0ea6 BB68     		ldr	r3, [r7, #8]	@ float
 11419 0ea8 4FF08F41 		mov	r1, #1199570944
 11420 0eac 1846     		mov	r0, r3
 11421 0eae FFF7FEFF 		bl	__aeabi_fmul
 11422 0eb2 0346     		mov	r3, r0
 11423 0eb4 1846     		mov	r0, r3
 11424 0eb6 FFF7FEFF 		bl	__aeabi_f2iz
 11425 0eba 0146     		mov	r1, r0
 11426 0ebc 5A4A     		ldr	r2, .L500
 11427 0ebe 2346     		mov	r3, r4
 11428 0ec0 DB00     		lsls	r3, r3, #3
 11429 0ec2 1B1B     		subs	r3, r3, r4
 11430 0ec4 1B01     		lsls	r3, r3, #4
 11431 0ec6 1344     		add	r3, r3, r2
 11432 0ec8 C433     		adds	r3, r3, #196
 11433 0eca 1960     		str	r1, [r3]
1547:..\src/command_processing.c ****             }
1548:..\src/command_processing.c ****             else {
1549:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
1550:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1551:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1552:..\src/command_processing.c ****                 }
1553:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_p_c_dl = aux_float2 * 65536;
1554:..\src/command_processing.c ****                 
1555:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
1556:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1557:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1558:..\src/command_processing.c ****                 }
1559:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_i_c_dl = aux_float2 * 65536;
1560:..\src/command_processing.c ****                 
1561:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
1562:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1563:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1564:..\src/command_processing.c ****                 }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 260


1565:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_d_c_dl = aux_float2 * 65536;
1566:..\src/command_processing.c ****             }            
1567:..\src/command_processing.c ****             break;  
 11434              		.loc 1 1567 0
 11435 0ecc FDE2     		b	.L426
 11436              	.L466:
1549:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11437              		.loc 1 1549 0
 11438 0ece 584B     		ldr	r3, .L500+8
 11439 0ed0 1B68     		ldr	r3, [r3]	@ float
 11440 0ed2 FB60     		str	r3, [r7, #12]	@ float
1550:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11441              		.loc 1 1550 0
 11442 0ed4 0023     		movs	r3, #0
 11443 0ed6 BB75     		strb	r3, [r7, #22]
 11444 0ed8 0EE0     		b	.L474
 11445              	.L475:
1551:..\src/command_processing.c ****                 }
 11446              		.loc 1 1551 0 discriminator 3
 11447 0eda BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11448 0edc C3F10303 		rsb	r3, r3, #3
 11449 0ee0 07F10802 		add	r2, r7, #8
 11450 0ee4 1344     		add	r3, r3, r2
 11451 0ee6 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11452 0ee8 07F10C01 		add	r1, r7, #12
 11453 0eec 0A44     		add	r2, r2, r1
 11454 0eee 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11455 0ef0 1A70     		strb	r2, [r3]
1550:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11456              		.loc 1 1550 0 discriminator 3
 11457 0ef2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11458 0ef4 0133     		adds	r3, r3, #1
 11459 0ef6 BB75     		strb	r3, [r7, #22]
 11460              	.L474:
1550:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11461              		.loc 1 1550 0 is_stmt 0 discriminator 1
 11462 0ef8 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11463 0efa 032B     		cmp	r3, #3
 11464 0efc EDD9     		bls	.L475
1553:..\src/command_processing.c ****                 
 11465              		.loc 1 1553 0 is_stmt 1
 11466 0efe FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11467 0f00 BB68     		ldr	r3, [r7, #8]	@ float
 11468 0f02 4FF08F41 		mov	r1, #1199570944
 11469 0f06 1846     		mov	r0, r3
 11470 0f08 FFF7FEFF 		bl	__aeabi_fmul
 11471 0f0c 0346     		mov	r3, r0
 11472 0f0e 1846     		mov	r0, r3
 11473 0f10 FFF7FEFF 		bl	__aeabi_f2iz
 11474 0f14 0146     		mov	r1, r0
 11475 0f16 444A     		ldr	r2, .L500
 11476 0f18 2346     		mov	r3, r4
 11477 0f1a DB00     		lsls	r3, r3, #3
 11478 0f1c 1B1B     		subs	r3, r3, r4
 11479 0f1e 1B01     		lsls	r3, r3, #4
 11480 0f20 1344     		add	r3, r3, r2
 11481 0f22 D433     		adds	r3, r3, #212
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 261


 11482 0f24 1960     		str	r1, [r3]
1555:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11483              		.loc 1 1555 0
 11484 0f26 434B     		ldr	r3, .L500+12
 11485 0f28 1B68     		ldr	r3, [r3]	@ float
 11486 0f2a FB60     		str	r3, [r7, #12]	@ float
1556:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11487              		.loc 1 1556 0
 11488 0f2c 0023     		movs	r3, #0
 11489 0f2e BB75     		strb	r3, [r7, #22]
 11490 0f30 0EE0     		b	.L476
 11491              	.L477:
1557:..\src/command_processing.c ****                 }
 11492              		.loc 1 1557 0 discriminator 3
 11493 0f32 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11494 0f34 C3F10303 		rsb	r3, r3, #3
 11495 0f38 07F10802 		add	r2, r7, #8
 11496 0f3c 1344     		add	r3, r3, r2
 11497 0f3e BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11498 0f40 07F10C01 		add	r1, r7, #12
 11499 0f44 0A44     		add	r2, r2, r1
 11500 0f46 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11501 0f48 1A70     		strb	r2, [r3]
1556:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11502              		.loc 1 1556 0 discriminator 3
 11503 0f4a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11504 0f4c 0133     		adds	r3, r3, #1
 11505 0f4e BB75     		strb	r3, [r7, #22]
 11506              	.L476:
1556:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11507              		.loc 1 1556 0 is_stmt 0 discriminator 1
 11508 0f50 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11509 0f52 032B     		cmp	r3, #3
 11510 0f54 EDD9     		bls	.L477
1559:..\src/command_processing.c ****                 
 11511              		.loc 1 1559 0 is_stmt 1
 11512 0f56 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11513 0f58 BB68     		ldr	r3, [r7, #8]	@ float
 11514 0f5a 4FF08F41 		mov	r1, #1199570944
 11515 0f5e 1846     		mov	r0, r3
 11516 0f60 FFF7FEFF 		bl	__aeabi_fmul
 11517 0f64 0346     		mov	r3, r0
 11518 0f66 1846     		mov	r0, r3
 11519 0f68 FFF7FEFF 		bl	__aeabi_f2iz
 11520 0f6c 0146     		mov	r1, r0
 11521 0f6e 2E4A     		ldr	r2, .L500
 11522 0f70 2346     		mov	r3, r4
 11523 0f72 DB00     		lsls	r3, r3, #3
 11524 0f74 1B1B     		subs	r3, r3, r4
 11525 0f76 1B01     		lsls	r3, r3, #4
 11526 0f78 1344     		add	r3, r3, r2
 11527 0f7a D833     		adds	r3, r3, #216
 11528 0f7c 1960     		str	r1, [r3]
1561:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11529              		.loc 1 1561 0
 11530 0f7e 2E4B     		ldr	r3, .L500+16
 11531 0f80 1B68     		ldr	r3, [r3]	@ float
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 262


 11532 0f82 FB60     		str	r3, [r7, #12]	@ float
1562:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11533              		.loc 1 1562 0
 11534 0f84 0023     		movs	r3, #0
 11535 0f86 BB75     		strb	r3, [r7, #22]
 11536 0f88 0EE0     		b	.L478
 11537              	.L479:
1563:..\src/command_processing.c ****                 }
 11538              		.loc 1 1563 0 discriminator 3
 11539 0f8a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11540 0f8c C3F10303 		rsb	r3, r3, #3
 11541 0f90 07F10802 		add	r2, r7, #8
 11542 0f94 1344     		add	r3, r3, r2
 11543 0f96 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11544 0f98 07F10C01 		add	r1, r7, #12
 11545 0f9c 0A44     		add	r2, r2, r1
 11546 0f9e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11547 0fa0 1A70     		strb	r2, [r3]
1562:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11548              		.loc 1 1562 0 discriminator 3
 11549 0fa2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11550 0fa4 0133     		adds	r3, r3, #1
 11551 0fa6 BB75     		strb	r3, [r7, #22]
 11552              	.L478:
1562:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11553              		.loc 1 1562 0 is_stmt 0 discriminator 1
 11554 0fa8 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11555 0faa 032B     		cmp	r3, #3
 11556 0fac EDD9     		bls	.L479
1565:..\src/command_processing.c ****             }            
 11557              		.loc 1 1565 0 is_stmt 1
 11558 0fae FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11559 0fb0 BB68     		ldr	r3, [r7, #8]	@ float
 11560 0fb2 4FF08F41 		mov	r1, #1199570944
 11561 0fb6 1846     		mov	r0, r3
 11562 0fb8 FFF7FEFF 		bl	__aeabi_fmul
 11563 0fbc 0346     		mov	r3, r0
 11564 0fbe 1846     		mov	r0, r3
 11565 0fc0 FFF7FEFF 		bl	__aeabi_f2iz
 11566 0fc4 0146     		mov	r1, r0
 11567 0fc6 184A     		ldr	r2, .L500
 11568 0fc8 2346     		mov	r3, r4
 11569 0fca DB00     		lsls	r3, r3, #3
 11570 0fcc 1B1B     		subs	r3, r3, r4
 11571 0fce 1B01     		lsls	r3, r3, #4
 11572 0fd0 1344     		add	r3, r3, r2
 11573 0fd2 DC33     		adds	r3, r3, #220
 11574 0fd4 1960     		str	r1, [r3]
 11575              		.loc 1 1567 0
 11576 0fd6 78E2     		b	.L426
 11577              	.L407:
1568:..\src/command_processing.c ****             
1569:..\src/command_processing.c ****         case 47:         // Second Motor Input mode
1570:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].input_mode = g_rx.buffer[3];
 11578              		.loc 1 1570 0
 11579 0fd8 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11580 0fda 184B     		ldr	r3, .L500+20
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 263


 11581 0fdc D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 11582 0fde 1249     		ldr	r1, .L500
 11583 0fe0 1346     		mov	r3, r2
 11584 0fe2 DB00     		lsls	r3, r3, #3
 11585 0fe4 9B1A     		subs	r3, r3, r2
 11586 0fe6 1B01     		lsls	r3, r3, #4
 11587 0fe8 0B44     		add	r3, r3, r1
 11588 0fea 03F58773 		add	r3, r3, #270
 11589 0fee 0246     		mov	r2, r0
 11590 0ff0 1A70     		strb	r2, [r3]
1571:..\src/command_processing.c ****             
1572:..\src/command_processing.c ****             // Hold the actual position
1573:..\src/command_processing.c ****             g_refNew[SECOND_MOTOR_IDX].pos = g_meas[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].pos
 11591              		.loc 1 1573 0
 11592 0ff2 F97C     		ldrb	r1, [r7, #19]	@ zero_extendqisi2
 11593 0ff4 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11594 0ff6 0C48     		ldr	r0, .L500
 11595 0ff8 1346     		mov	r3, r2
 11596 0ffa DB00     		lsls	r3, r3, #3
 11597 0ffc 9B1A     		subs	r3, r3, r2
 11598 0ffe 1B01     		lsls	r3, r3, #4
 11599 1000 0344     		add	r3, r3, r0
 11600 1002 03F58873 		add	r3, r3, #272
 11601 1006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11602 1008 1846     		mov	r0, r3
 11603 100a 0D4A     		ldr	r2, .L500+24
 11604 100c 3423     		movs	r3, #52
 11605 100e 03FB00F3 		mul	r3, r3, r0
 11606 1012 1344     		add	r3, r3, r2
 11607 1014 1A68     		ldr	r2, [r3]
 11608 1016 0B48     		ldr	r0, .L500+28
 11609 1018 0B01     		lsls	r3, r1, #4
 11610 101a 0344     		add	r3, r3, r0
 11611 101c 1A60     		str	r2, [r3]
1574:..\src/command_processing.c ****             break;   
 11612              		.loc 1 1574 0
 11613 101e 54E2     		b	.L426
 11614              	.L408:
1575:..\src/command_processing.c **** 
1576:..\src/command_processing.c ****         case 50:         // Second Motor Measurement Offset
1577:..\src/command_processing.c ****             for(i = 0; i < NUM_OF_SENSORS; i++) {
 11615              		.loc 1 1577 0
 11616 1020 0023     		movs	r3, #0
 11617 1022 FB75     		strb	r3, [r7, #23]
 11618 1024 8FE0     		b	.L480
 11619              	.L501:
 11620 1026 00BF     		.align	2
 11621              	.L500:
 11622 1028 00000000 		.word	g_mem
 11623 102c 00000000 		.word	c_mem
 11624 1030 03000000 		.word	g_rx+3
 11625 1034 07000000 		.word	g_rx+7
 11626 1038 0B000000 		.word	g_rx+11
 11627 103c 00000000 		.word	g_rx
 11628 1040 00000000 		.word	g_meas
 11629 1044 00000000 		.word	g_refNew
 11630              	.L481:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 264


1578:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffe
 11631              		.loc 1 1578 0 discriminator 3
 11632 1048 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11633 104a 8A49     		ldr	r1, .L502
 11634 104c 1346     		mov	r3, r2
 11635 104e DB00     		lsls	r3, r3, #3
 11636 1050 9B1A     		subs	r3, r3, r2
 11637 1052 1B01     		lsls	r3, r3, #4
 11638 1054 0B44     		add	r3, r3, r1
 11639 1056 03F58873 		add	r3, r3, #272
 11640 105a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11641 105c 1C46     		mov	r4, r3
 11642 105e FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 11643 1060 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 11644 1062 5B00     		lsls	r3, r3, #1
 11645 1064 0333     		adds	r3, r3, #3
 11646 1066 8449     		ldr	r1, .L502+4
 11647 1068 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 11648 106a 1B02     		lsls	r3, r3, #8
 11649 106c 19B2     		sxth	r1, r3
 11650 106e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 11651 1070 0233     		adds	r3, r3, #2
 11652 1072 5B00     		lsls	r3, r3, #1
 11653 1074 8048     		ldr	r0, .L502+4
 11654 1076 C35C     		ldrb	r3, [r0, r3]	@ zero_extendqisi2
 11655 1078 1BB2     		sxth	r3, r3
 11656 107a 0B43     		orrs	r3, r3, r1
 11657 107c 1BB2     		sxth	r3, r3
 11658 107e 1846     		mov	r0, r3
 11659 1080 7C49     		ldr	r1, .L502
 11660 1082 2346     		mov	r3, r4
 11661 1084 5B00     		lsls	r3, r3, #1
 11662 1086 2344     		add	r3, r3, r4
 11663 1088 9B00     		lsls	r3, r3, #2
 11664 108a 1344     		add	r3, r3, r2
 11665 108c 6633     		adds	r3, r3, #102
 11666 108e 41F82300 		str	r0, [r1, r3, lsl #2]
1579:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i] = g_mem.enc[g_mem.mo
 11667              		.loc 1 1579 0 discriminator 3
 11668 1092 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11669 1094 7749     		ldr	r1, .L502
 11670 1096 1346     		mov	r3, r2
 11671 1098 DB00     		lsls	r3, r3, #3
 11672 109a 9B1A     		subs	r3, r3, r2
 11673 109c 1B01     		lsls	r3, r3, #4
 11674 109e 0B44     		add	r3, r3, r1
 11675 10a0 03F58873 		add	r3, r3, #272
 11676 10a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11677 10a6 1D46     		mov	r5, r3
 11678 10a8 F97D     		ldrb	r1, [r7, #23]	@ zero_extendqisi2
 11679 10aa FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11680 10ac 7148     		ldr	r0, .L502
 11681 10ae 1346     		mov	r3, r2
 11682 10b0 DB00     		lsls	r3, r3, #3
 11683 10b2 9B1A     		subs	r3, r3, r2
 11684 10b4 1B01     		lsls	r3, r3, #4
 11685 10b6 0344     		add	r3, r3, r0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 265


 11686 10b8 03F58873 		add	r3, r3, #272
 11687 10bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11688 10be 1C46     		mov	r4, r3
 11689 10c0 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 11690 10c2 6C48     		ldr	r0, .L502
 11691 10c4 2346     		mov	r3, r4
 11692 10c6 5B00     		lsls	r3, r3, #1
 11693 10c8 2344     		add	r3, r3, r4
 11694 10ca 9B00     		lsls	r3, r3, #2
 11695 10cc 1344     		add	r3, r3, r2
 11696 10ce 6633     		adds	r3, r3, #102
 11697 10d0 50F82300 		ldr	r0, [r0, r3, lsl #2]
 11698 10d4 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11699 10d6 674C     		ldr	r4, .L502
 11700 10d8 1346     		mov	r3, r2
 11701 10da DB00     		lsls	r3, r3, #3
 11702 10dc 9B1A     		subs	r3, r3, r2
 11703 10de 1B01     		lsls	r3, r3, #4
 11704 10e0 2344     		add	r3, r3, r4
 11705 10e2 03F58873 		add	r3, r3, #272
 11706 10e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11707 10e8 1E46     		mov	r6, r3
 11708 10ea FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 11709 10ec 614C     		ldr	r4, .L502
 11710 10ee 3346     		mov	r3, r6
 11711 10f0 5B00     		lsls	r3, r3, #1
 11712 10f2 3344     		add	r3, r3, r6
 11713 10f4 1B01     		lsls	r3, r3, #4
 11714 10f6 2344     		add	r3, r3, r4
 11715 10f8 1344     		add	r3, r3, r2
 11716 10fa 03F29513 		addw	r3, r3, #405
 11717 10fe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11718 1100 00FA03F2 		lsl	r2, r0, r3
 11719 1104 5B48     		ldr	r0, .L502
 11720 1106 2B46     		mov	r3, r5
 11721 1108 5B00     		lsls	r3, r3, #1
 11722 110a 2B44     		add	r3, r3, r5
 11723 110c 9B00     		lsls	r3, r3, #2
 11724 110e 0B44     		add	r3, r3, r1
 11725 1110 6633     		adds	r3, r3, #102
 11726 1112 40F82320 		str	r2, [r0, r3, lsl #2]
1580:..\src/command_processing.c **** 
1581:..\src/command_processing.c ****                 g_meas[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].rot[i] = 0;
 11727              		.loc 1 1581 0 discriminator 3
 11728 1116 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11729 1118 5649     		ldr	r1, .L502
 11730 111a 1346     		mov	r3, r2
 11731 111c DB00     		lsls	r3, r3, #3
 11732 111e 9B1A     		subs	r3, r3, r2
 11733 1120 1B01     		lsls	r3, r3, #4
 11734 1122 0B44     		add	r3, r3, r1
 11735 1124 03F58873 		add	r3, r3, #272
 11736 1128 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11737 112a 1846     		mov	r0, r3
 11738 112c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 11739 112e 5349     		ldr	r1, .L502+8
 11740 1130 3422     		movs	r2, #52
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 266


 11741 1132 02FB00F2 		mul	r2, r2, r0
 11742 1136 0A44     		add	r2, r2, r1
 11743 1138 1344     		add	r3, r3, r2
 11744 113a 1833     		adds	r3, r3, #24
 11745 113c 0022     		movs	r2, #0
 11746 113e 1A70     		strb	r2, [r3]
1577:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffe
 11747              		.loc 1 1577 0 discriminator 3
 11748 1140 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 11749 1142 0133     		adds	r3, r3, #1
 11750 1144 FB75     		strb	r3, [r7, #23]
 11751              	.L480:
1577:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffe
 11752              		.loc 1 1577 0 is_stmt 0 discriminator 1
 11753 1146 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 11754 1148 022B     		cmp	r3, #2
 11755 114a 7FF67DAF 		bls	.L481
1582:..\src/command_processing.c ****             }
1583:..\src/command_processing.c ****             reset_last_value_flag[SECOND_MOTOR_IDX] = 1;
 11756              		.loc 1 1583 0 is_stmt 1
 11757 114e FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 11758 1150 4B4A     		ldr	r2, .L502+12
 11759 1152 0121     		movs	r1, #1
 11760 1154 D154     		strb	r1, [r2, r3]
1584:..\src/command_processing.c ****             break;
 11761              		.loc 1 1584 0
 11762 1156 B8E1     		b	.L426
 11763              	.L409:
1585:..\src/command_processing.c ****     
1586:..\src/command_processing.c ****         case 53:        // Second Motor Position limits
1587:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].pos_lim_inf = (int32)(g_rx.buffer[3]<<24 | g_rx.buffer[4]
 11764              		.loc 1 1587 0
 11765 1158 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11766 115a 474B     		ldr	r3, .L502+4
 11767 115c DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 11768 115e 1906     		lsls	r1, r3, #24
 11769 1160 454B     		ldr	r3, .L502+4
 11770 1162 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 11771 1164 1B04     		lsls	r3, r3, #16
 11772 1166 1943     		orrs	r1, r1, r3
 11773 1168 434B     		ldr	r3, .L502+4
 11774 116a 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 11775 116c 1B02     		lsls	r3, r3, #8
 11776 116e 0B43     		orrs	r3, r3, r1
 11777 1170 4149     		ldr	r1, .L502+4
 11778 1172 8979     		ldrb	r1, [r1, #6]	@ zero_extendqisi2
 11779 1174 1943     		orrs	r1, r1, r3
 11780 1176 3F48     		ldr	r0, .L502
 11781 1178 1346     		mov	r3, r2
 11782 117a DB00     		lsls	r3, r3, #3
 11783 117c 9B1A     		subs	r3, r3, r2
 11784 117e 1B01     		lsls	r3, r3, #4
 11785 1180 0344     		add	r3, r3, r0
 11786 1182 E433     		adds	r3, r3, #228
 11787 1184 1960     		str	r1, [r3]
1588:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].pos_lim_sup = (int32)(g_rx.buffer[7]<<24 | g_rx.buffer[8]
 11788              		.loc 1 1588 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 267


 11789 1186 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11790 1188 3B4B     		ldr	r3, .L502+4
 11791 118a DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 11792 118c 1906     		lsls	r1, r3, #24
 11793 118e 3A4B     		ldr	r3, .L502+4
 11794 1190 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 11795 1192 1B04     		lsls	r3, r3, #16
 11796 1194 1943     		orrs	r1, r1, r3
 11797 1196 384B     		ldr	r3, .L502+4
 11798 1198 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 11799 119a 1B02     		lsls	r3, r3, #8
 11800 119c 0B43     		orrs	r3, r3, r1
 11801 119e 3649     		ldr	r1, .L502+4
 11802 11a0 897A     		ldrb	r1, [r1, #10]	@ zero_extendqisi2
 11803 11a2 1943     		orrs	r1, r1, r3
 11804 11a4 3348     		ldr	r0, .L502
 11805 11a6 1346     		mov	r3, r2
 11806 11a8 DB00     		lsls	r3, r3, #3
 11807 11aa 9B1A     		subs	r3, r3, r2
 11808 11ac 1B01     		lsls	r3, r3, #4
 11809 11ae 0344     		add	r3, r3, r0
 11810 11b0 E833     		adds	r3, r3, #232
 11811 11b2 1960     		str	r1, [r3]
1589:..\src/command_processing.c **** 
1590:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].pos_lim_inf = g_mem.motor[SECOND_MOTOR_IDX].pos_lim_inf <
 11812              		.loc 1 1590 0
 11813 11b4 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11814 11b6 F97C     		ldrb	r1, [r7, #19]	@ zero_extendqisi2
 11815 11b8 2E48     		ldr	r0, .L502
 11816 11ba 0B46     		mov	r3, r1
 11817 11bc DB00     		lsls	r3, r3, #3
 11818 11be 5B1A     		subs	r3, r3, r1
 11819 11c0 1B01     		lsls	r3, r3, #4
 11820 11c2 0344     		add	r3, r3, r0
 11821 11c4 E433     		adds	r3, r3, #228
 11822 11c6 1868     		ldr	r0, [r3]
 11823 11c8 F97C     		ldrb	r1, [r7, #19]	@ zero_extendqisi2
 11824 11ca 2A4C     		ldr	r4, .L502
 11825 11cc 0B46     		mov	r3, r1
 11826 11ce DB00     		lsls	r3, r3, #3
 11827 11d0 5B1A     		subs	r3, r3, r1
 11828 11d2 1B01     		lsls	r3, r3, #4
 11829 11d4 2344     		add	r3, r3, r4
 11830 11d6 03F58873 		add	r3, r3, #272
 11831 11da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11832 11dc 1C46     		mov	r4, r3
 11833 11de 2549     		ldr	r1, .L502
 11834 11e0 2346     		mov	r3, r4
 11835 11e2 5B00     		lsls	r3, r3, #1
 11836 11e4 2344     		add	r3, r3, r4
 11837 11e6 1B01     		lsls	r3, r3, #4
 11838 11e8 0B44     		add	r3, r3, r1
 11839 11ea 03F29513 		addw	r3, r3, #405
 11840 11ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11841 11f0 00FA03F1 		lsl	r1, r0, r3
 11842 11f4 1F48     		ldr	r0, .L502
 11843 11f6 1346     		mov	r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 268


 11844 11f8 DB00     		lsls	r3, r3, #3
 11845 11fa 9B1A     		subs	r3, r3, r2
 11846 11fc 1B01     		lsls	r3, r3, #4
 11847 11fe 0344     		add	r3, r3, r0
 11848 1200 E433     		adds	r3, r3, #228
 11849 1202 1960     		str	r1, [r3]
1591:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].pos_lim_sup = g_mem.motor[SECOND_MOTOR_IDX].pos_lim_sup <
 11850              		.loc 1 1591 0
 11851 1204 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11852 1206 F97C     		ldrb	r1, [r7, #19]	@ zero_extendqisi2
 11853 1208 1A48     		ldr	r0, .L502
 11854 120a 0B46     		mov	r3, r1
 11855 120c DB00     		lsls	r3, r3, #3
 11856 120e 5B1A     		subs	r3, r3, r1
 11857 1210 1B01     		lsls	r3, r3, #4
 11858 1212 0344     		add	r3, r3, r0
 11859 1214 E833     		adds	r3, r3, #232
 11860 1216 1868     		ldr	r0, [r3]
 11861 1218 F97C     		ldrb	r1, [r7, #19]	@ zero_extendqisi2
 11862 121a 164C     		ldr	r4, .L502
 11863 121c 0B46     		mov	r3, r1
 11864 121e DB00     		lsls	r3, r3, #3
 11865 1220 5B1A     		subs	r3, r3, r1
 11866 1222 1B01     		lsls	r3, r3, #4
 11867 1224 2344     		add	r3, r3, r4
 11868 1226 03F58873 		add	r3, r3, #272
 11869 122a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11870 122c 1C46     		mov	r4, r3
 11871 122e 1149     		ldr	r1, .L502
 11872 1230 2346     		mov	r3, r4
 11873 1232 5B00     		lsls	r3, r3, #1
 11874 1234 2344     		add	r3, r3, r4
 11875 1236 1B01     		lsls	r3, r3, #4
 11876 1238 0B44     		add	r3, r3, r1
 11877 123a 03F29513 		addw	r3, r3, #405
 11878 123e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11879 1240 00FA03F1 		lsl	r1, r0, r3
 11880 1244 0B48     		ldr	r0, .L502
 11881 1246 1346     		mov	r3, r2
 11882 1248 DB00     		lsls	r3, r3, #3
 11883 124a 9B1A     		subs	r3, r3, r2
 11884 124c 1B01     		lsls	r3, r3, #4
 11885 124e 0344     		add	r3, r3, r0
 11886 1250 E833     		adds	r3, r3, #232
 11887 1252 1960     		str	r1, [r3]
1592:..\src/command_processing.c ****             break;
 11888              		.loc 1 1592 0
 11889 1254 39E1     		b	.L426
 11890              	.L410:
1593:..\src/command_processing.c ****             
1594:..\src/command_processing.c ****         case 61:        // Second Motor PWM frequency
1595:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].motor_pwm_frequency = g_rx.buffer[3];
 11891              		.loc 1 1595 0
 11892 1256 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11893 1258 074B     		ldr	r3, .L502+4
 11894 125a D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 11895 125c 0549     		ldr	r1, .L502
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 269


 11896 125e 1346     		mov	r3, r2
 11897 1260 DB00     		lsls	r3, r3, #3
 11898 1262 9B1A     		subs	r3, r3, r2
 11899 1264 1B01     		lsls	r3, r3, #4
 11900 1266 0B44     		add	r3, r3, r1
 11901 1268 E233     		adds	r3, r3, #226
 11902 126a 0246     		mov	r2, r0
 11903 126c 1A70     		strb	r2, [r3]
1596:..\src/command_processing.c ****             set_pwm_frequency();
 11904              		.loc 1 1596 0
 11905 126e FFF7FEFF 		bl	set_pwm_frequency
1597:..\src/command_processing.c ****             break;
 11906              		.loc 1 1597 0
 11907 1272 2AE1     		b	.L426
 11908              	.L503:
 11909              		.align	2
 11910              	.L502:
 11911 1274 00000000 		.word	g_mem
 11912 1278 00000000 		.word	g_rx
 11913 127c 00000000 		.word	g_meas
 11914 1280 00000000 		.word	reset_last_value_flag
 11915              	.L411:
1598:..\src/command_processing.c **** 
1599:..\src/command_processing.c ****         case 75:        // Device type
1600:..\src/command_processing.c ****             g_mem.dev.dev_type = g_rx.buffer[3];
 11916              		.loc 1 1600 0
 11917 1284 934B     		ldr	r3, .L504
 11918 1286 DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 11919 1288 934B     		ldr	r3, .L504+4
 11920 128a 83F8AC20 		strb	r2, [r3, #172]
1601:..\src/command_processing.c ****             
1602:..\src/command_processing.c ****             if (g_mem.dev.dev_type == SOFTHAND_PRO){    // change also gears parameters
 11921              		.loc 1 1602 0
 11922 128e 924B     		ldr	r3, .L504+4
 11923 1290 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 11924 1294 002B     		cmp	r3, #0
 11925 1296 40F0A480 		bne	.L482
1603:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].double_encoder_on_off = TRUE;
 11926              		.loc 1 1603 0
 11927 129a 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11928 129c 8E49     		ldr	r1, .L504+4
 11929 129e 1346     		mov	r3, r2
 11930 12a0 DB00     		lsls	r3, r3, #3
 11931 12a2 9B1A     		subs	r3, r3, r2
 11932 12a4 1B01     		lsls	r3, r3, #4
 11933 12a6 0B44     		add	r3, r3, r1
 11934 12a8 03F58873 		add	r3, r3, #272
 11935 12ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11936 12ae 1946     		mov	r1, r3
 11937 12b0 894A     		ldr	r2, .L504+4
 11938 12b2 0B46     		mov	r3, r1
 11939 12b4 5B00     		lsls	r3, r3, #1
 11940 12b6 0B44     		add	r3, r3, r1
 11941 12b8 1B01     		lsls	r3, r3, #4
 11942 12ba 1344     		add	r3, r3, r2
 11943 12bc 03F5D873 		add	r3, r3, #432
 11944 12c0 0122     		movs	r2, #1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 270


 11945 12c2 1A70     		strb	r2, [r3]
1604:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[0] = SH_N1;
 11946              		.loc 1 1604 0
 11947 12c4 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11948 12c6 8449     		ldr	r1, .L504+4
 11949 12c8 1346     		mov	r3, r2
 11950 12ca DB00     		lsls	r3, r3, #3
 11951 12cc 9B1A     		subs	r3, r3, r2
 11952 12ce 1B01     		lsls	r3, r3, #4
 11953 12d0 0B44     		add	r3, r3, r1
 11954 12d2 03F58873 		add	r3, r3, #272
 11955 12d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11956 12d8 1946     		mov	r1, r3
 11957 12da 7F4A     		ldr	r2, .L504+4
 11958 12dc 0B46     		mov	r3, r1
 11959 12de 5B00     		lsls	r3, r3, #1
 11960 12e0 0B44     		add	r3, r3, r1
 11961 12e2 1B01     		lsls	r3, r3, #4
 11962 12e4 1344     		add	r3, r3, r2
 11963 12e6 03F2B513 		addw	r3, r3, #437
 11964 12ea 2322     		movs	r2, #35
 11965 12ec 1A70     		strb	r2, [r3]
1605:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[1] = SH_N2;
 11966              		.loc 1 1605 0
 11967 12ee 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11968 12f0 7949     		ldr	r1, .L504+4
 11969 12f2 1346     		mov	r3, r2
 11970 12f4 DB00     		lsls	r3, r3, #3
 11971 12f6 9B1A     		subs	r3, r3, r2
 11972 12f8 1B01     		lsls	r3, r3, #4
 11973 12fa 0B44     		add	r3, r3, r1
 11974 12fc 03F58873 		add	r3, r3, #272
 11975 1300 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11976 1302 1946     		mov	r1, r3
 11977 1304 744A     		ldr	r2, .L504+4
 11978 1306 0B46     		mov	r3, r1
 11979 1308 5B00     		lsls	r3, r3, #1
 11980 130a 0B44     		add	r3, r3, r1
 11981 130c 1B01     		lsls	r3, r3, #4
 11982 130e 1344     		add	r3, r3, r2
 11983 1310 03F5DB73 		add	r3, r3, #438
 11984 1314 0322     		movs	r2, #3
 11985 1316 1A70     		strb	r2, [r3]
1606:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[2] = SH_I1;
 11986              		.loc 1 1606 0
 11987 1318 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11988 131a 6F49     		ldr	r1, .L504+4
 11989 131c 1346     		mov	r3, r2
 11990 131e DB00     		lsls	r3, r3, #3
 11991 1320 9B1A     		subs	r3, r3, r2
 11992 1322 1B01     		lsls	r3, r3, #4
 11993 1324 0B44     		add	r3, r3, r1
 11994 1326 03F58873 		add	r3, r3, #272
 11995 132a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11996 132c 1946     		mov	r1, r3
 11997 132e 6A4A     		ldr	r2, .L504+4
 11998 1330 0B46     		mov	r3, r1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 271


 11999 1332 5B00     		lsls	r3, r3, #1
 12000 1334 0B44     		add	r3, r3, r1
 12001 1336 1B01     		lsls	r3, r3, #4
 12002 1338 1344     		add	r3, r3, r2
 12003 133a 03F2B713 		addw	r3, r3, #439
 12004 133e FF22     		movs	r2, #255
 12005 1340 1A70     		strb	r2, [r3]
1607:..\src/command_processing.c ****                 
1608:..\src/command_processing.c ****                 // Get CS0 encoder line for RIGHT HAND and CS1 line for LEFT HAND as default
1609:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].encoder_line  = g_mem.dev.right_left;
 12006              		.loc 1 1609 0
 12007 1342 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 12008 1344 644B     		ldr	r3, .L504+4
 12009 1346 93F8A700 		ldrb	r0, [r3, #167]	@ zero_extendqisi2
 12010 134a 6349     		ldr	r1, .L504+4
 12011 134c 1346     		mov	r3, r2
 12012 134e DB00     		lsls	r3, r3, #3
 12013 1350 9B1A     		subs	r3, r3, r2
 12014 1352 1B01     		lsls	r3, r3, #4
 12015 1354 0B44     		add	r3, r3, r1
 12016 1356 03F58873 		add	r3, r3, #272
 12017 135a 0246     		mov	r2, r0
 12018 135c 1A70     		strb	r2, [r3]
1610:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pwm_rate_limiter = PWM_RATE_LIMITER_MAX;
 12019              		.loc 1 1610 0
 12020 135e 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 12021 1360 5D49     		ldr	r1, .L504+4
 12022 1362 1346     		mov	r3, r2
 12023 1364 DB00     		lsls	r3, r3, #3
 12024 1366 9B1A     		subs	r3, r3, r2
 12025 1368 1B01     		lsls	r3, r3, #4
 12026 136a 0B44     		add	r3, r3, r1
 12027 136c 03F21113 		addw	r3, r3, #273
 12028 1370 0122     		movs	r2, #1
 12029 1372 1A70     		strb	r2, [r3]
1611:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].not_revers_motor_flag = TRUE;       // SoftHand not reversib
 12030              		.loc 1 1611 0
 12031 1374 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 12032 1376 5849     		ldr	r1, .L504+4
 12033 1378 1346     		mov	r3, r2
 12034 137a DB00     		lsls	r3, r3, #3
 12035 137c 9B1A     		subs	r3, r3, r2
 12036 137e 1B01     		lsls	r3, r3, #4
 12037 1380 0B44     		add	r3, r3, r1
 12038 1382 03F58973 		add	r3, r3, #274
 12039 1386 0122     		movs	r2, #1
 12040 1388 1A70     		strb	r2, [r3]
1612:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pos_lim_inf = 0;
 12041              		.loc 1 1612 0
 12042 138a 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 12043 138c 5249     		ldr	r1, .L504+4
 12044 138e 1346     		mov	r3, r2
 12045 1390 DB00     		lsls	r3, r3, #3
 12046 1392 9B1A     		subs	r3, r3, r2
 12047 1394 1B01     		lsls	r3, r3, #4
 12048 1396 0B44     		add	r3, r3, r1
 12049 1398 E433     		adds	r3, r3, #228
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 272


 12050 139a 0022     		movs	r2, #0
 12051 139c 1A60     		str	r2, [r3]
1613:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pos_lim_sup = (int32)16000 << g_mem.enc[g_mem.motor[MOTOR_ID
 12052              		.loc 1 1613 0
 12053 139e 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 12054 13a0 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 12055 13a2 4D48     		ldr	r0, .L504+4
 12056 13a4 0B46     		mov	r3, r1
 12057 13a6 DB00     		lsls	r3, r3, #3
 12058 13a8 5B1A     		subs	r3, r3, r1
 12059 13aa 1B01     		lsls	r3, r3, #4
 12060 13ac 0344     		add	r3, r3, r0
 12061 13ae 03F58873 		add	r3, r3, #272
 12062 13b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12063 13b4 1846     		mov	r0, r3
 12064 13b6 4849     		ldr	r1, .L504+4
 12065 13b8 0346     		mov	r3, r0
 12066 13ba 5B00     		lsls	r3, r3, #1
 12067 13bc 0344     		add	r3, r3, r0
 12068 13be 1B01     		lsls	r3, r3, #4
 12069 13c0 0B44     		add	r3, r3, r1
 12070 13c2 03F29513 		addw	r3, r3, #405
 12071 13c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12072 13c8 1946     		mov	r1, r3
 12073 13ca 4FF47A53 		mov	r3, #16000
 12074 13ce 03FA01F1 		lsl	r1, r3, r1
 12075 13d2 4148     		ldr	r0, .L504+4
 12076 13d4 1346     		mov	r3, r2
 12077 13d6 DB00     		lsls	r3, r3, #3
 12078 13d8 9B1A     		subs	r3, r3, r2
 12079 13da 1B01     		lsls	r3, r3, #4
 12080 13dc 0344     		add	r3, r3, r0
 12081 13de E833     		adds	r3, r3, #232
 12082 13e0 1960     		str	r1, [r3]
 12083              	.L482:
1614:..\src/command_processing.c ****             }      
1615:..\src/command_processing.c ****             
1616:..\src/command_processing.c ****             if (g_mem.dev.dev_type == SOFTHAND_2_MOTORS){    // activate also 2nd motor and double_
 12084              		.loc 1 1616 0
 12085 13e2 3D4B     		ldr	r3, .L504+4
 12086 13e4 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 12087 13e8 042B     		cmp	r3, #4
 12088 13ea 6DD1     		bne	.L491
1617:..\src/command_processing.c ****                 g_mem.dev.use_2nd_motor_flag = TRUE;
 12089              		.loc 1 1617 0
 12090 13ec 3A4B     		ldr	r3, .L504+4
 12091 13ee 0122     		movs	r2, #1
 12092 13f0 83F8A920 		strb	r2, [r3, #169]
1618:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].double_encoder_on_off = TRUE;
 12093              		.loc 1 1618 0
 12094 13f4 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 12095 13f6 3849     		ldr	r1, .L504+4
 12096 13f8 1346     		mov	r3, r2
 12097 13fa DB00     		lsls	r3, r3, #3
 12098 13fc 9B1A     		subs	r3, r3, r2
 12099 13fe 1B01     		lsls	r3, r3, #4
 12100 1400 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 273


 12101 1402 03F58873 		add	r3, r3, #272
 12102 1406 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12103 1408 1946     		mov	r1, r3
 12104 140a 334A     		ldr	r2, .L504+4
 12105 140c 0B46     		mov	r3, r1
 12106 140e 5B00     		lsls	r3, r3, #1
 12107 1410 0B44     		add	r3, r3, r1
 12108 1412 1B01     		lsls	r3, r3, #4
 12109 1414 1344     		add	r3, r3, r2
 12110 1416 03F5D873 		add	r3, r3, #432
 12111 141a 0122     		movs	r2, #1
 12112 141c 1A70     		strb	r2, [r3]
1619:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].double_encoder_on_off = TRUE;
 12113              		.loc 1 1619 0
 12114 141e FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 12115 1420 2D49     		ldr	r1, .L504+4
 12116 1422 1346     		mov	r3, r2
 12117 1424 DB00     		lsls	r3, r3, #3
 12118 1426 9B1A     		subs	r3, r3, r2
 12119 1428 1B01     		lsls	r3, r3, #4
 12120 142a 0B44     		add	r3, r3, r1
 12121 142c 03F58873 		add	r3, r3, #272
 12122 1430 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12123 1432 1946     		mov	r1, r3
 12124 1434 284A     		ldr	r2, .L504+4
 12125 1436 0B46     		mov	r3, r1
 12126 1438 5B00     		lsls	r3, r3, #1
 12127 143a 0B44     		add	r3, r3, r1
 12128 143c 1B01     		lsls	r3, r3, #4
 12129 143e 1344     		add	r3, r3, r2
 12130 1440 03F5D873 		add	r3, r3, #432
 12131 1444 0122     		movs	r2, #1
 12132 1446 1A70     		strb	r2, [r3]
1620:..\src/command_processing.c ****             /*    
1621:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pos_lim_inf = 0;
1622:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pos_lim_sup = (int32)18000 << g_mem.enc[g_mem.motor[MOTOR_ID
1623:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].pos_lim_inf = ((int32)(-25000)) << g_mem.enc[g_mem.mo
1624:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].pos_lim_sup = 0;
1625:..\src/command_processing.c ****             */    
1626:..\src/command_processing.c ****                 for (i=0; i< NUM_OF_MOTORS; i++) {                     // Maxon DCX16S
 12133              		.loc 1 1626 0
 12134 1448 0023     		movs	r3, #0
 12135 144a FB75     		strb	r3, [r7, #23]
 12136 144c 2EE0     		b	.L484
 12137              	.L485:
1627:..\src/command_processing.c ****                     g_mem.motor[i].current_limit = 800;                // [mA]
 12138              		.loc 1 1627 0 discriminator 3
 12139 144e FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 12140 1450 2149     		ldr	r1, .L504+4
 12141 1452 1346     		mov	r3, r2
 12142 1454 DB00     		lsls	r3, r3, #3
 12143 1456 9B1A     		subs	r3, r3, r2
 12144 1458 1B01     		lsls	r3, r3, #4
 12145 145a 0B44     		add	r3, r3, r1
 12146 145c 03F58673 		add	r3, r3, #268
 12147 1460 4FF44872 		mov	r2, #800
 12148 1464 1A80     		strh	r2, [r3]	@ movhi
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 274


1628:..\src/command_processing.c ****                     g_mem.motor[i].k_p           = 0.12 * 65536;
 12149              		.loc 1 1628 0 discriminator 3
 12150 1466 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 12151 1468 1B49     		ldr	r1, .L504+4
 12152 146a 1346     		mov	r3, r2
 12153 146c DB00     		lsls	r3, r3, #3
 12154 146e 9B1A     		subs	r3, r3, r2
 12155 1470 1B01     		lsls	r3, r3, #4
 12156 1472 0B44     		add	r3, r3, r1
 12157 1474 B033     		adds	r3, r3, #176
 12158 1476 41F6B862 		movw	r2, #7864
 12159 147a 1A60     		str	r2, [r3]
1629:..\src/command_processing.c ****                     g_mem.motor[i].k_i           =    0 * 65536;
 12160              		.loc 1 1629 0 discriminator 3
 12161 147c FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 12162 147e 1649     		ldr	r1, .L504+4
 12163 1480 1346     		mov	r3, r2
 12164 1482 DB00     		lsls	r3, r3, #3
 12165 1484 9B1A     		subs	r3, r3, r2
 12166 1486 1B01     		lsls	r3, r3, #4
 12167 1488 0B44     		add	r3, r3, r1
 12168 148a B433     		adds	r3, r3, #180
 12169 148c 0022     		movs	r2, #0
 12170 148e 1A60     		str	r2, [r3]
1630:..\src/command_processing.c ****                     g_mem.motor[i].k_d           = 0.05 * 65536;
 12171              		.loc 1 1630 0 discriminator 3
 12172 1490 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 12173 1492 1149     		ldr	r1, .L504+4
 12174 1494 1346     		mov	r3, r2
 12175 1496 DB00     		lsls	r3, r3, #3
 12176 1498 9B1A     		subs	r3, r3, r2
 12177 149a 1B01     		lsls	r3, r3, #4
 12178 149c 0B44     		add	r3, r3, r1
 12179 149e B833     		adds	r3, r3, #184
 12180 14a0 40F6CC42 		movw	r2, #3276
 12181 14a4 1A60     		str	r2, [r3]
1626:..\src/command_processing.c ****                     g_mem.motor[i].current_limit = 800;                // [mA]
 12182              		.loc 1 1626 0 discriminator 3
 12183 14a6 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 12184 14a8 0133     		adds	r3, r3, #1
 12185 14aa FB75     		strb	r3, [r7, #23]
 12186              	.L484:
1626:..\src/command_processing.c ****                     g_mem.motor[i].current_limit = 800;                // [mA]
 12187              		.loc 1 1626 0 is_stmt 0 discriminator 1
 12188 14ac FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 12189 14ae 012B     		cmp	r3, #1
 12190 14b0 CDD9     		bls	.L485
1631:..\src/command_processing.c ****                 }
1632:..\src/command_processing.c ****             }      
1633:..\src/command_processing.c ****             
1634:..\src/command_processing.c ****             break;
 12191              		.loc 1 1634 0 is_stmt 1
 12192 14b2 09E0     		b	.L491
 12193              	.L486:
1635:..\src/command_processing.c ****             
1636:..\src/command_processing.c ****         default:
1637:..\src/command_processing.c ****             break;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 275


 12194              		.loc 1 1637 0
 12195 14b4 00BF     		nop
 12196 14b6 08E0     		b	.L426
 12197              	.L487:
1424:..\src/command_processing.c ****             
 12198              		.loc 1 1424 0
 12199 14b8 00BF     		nop
 12200 14ba 06E0     		b	.L426
 12201              	.L488:
1452:..\src/command_processing.c **** 
 12202              		.loc 1 1452 0
 12203 14bc 00BF     		nop
 12204 14be 04E0     		b	.L426
 12205              	.L489:
1470:..\src/command_processing.c ****             
 12206              		.loc 1 1470 0
 12207 14c0 00BF     		nop
 12208 14c2 02E0     		b	.L426
 12209              	.L490:
1480:..\src/command_processing.c ****            
 12210              		.loc 1 1480 0
 12211 14c4 00BF     		nop
 12212 14c6 00E0     		b	.L426
 12213              	.L491:
1634:..\src/command_processing.c ****             
 12214              		.loc 1 1634 0
 12215 14c8 00BF     		nop
 12216              	.L426:
1638:..\src/command_processing.c ****     }
1639:..\src/command_processing.c **** }
 12217              		.loc 1 1639 0 discriminator 1
 12218 14ca 00BF     		nop
 12219 14cc 1C37     		adds	r7, r7, #28
 12220              		.cfi_def_cfa_offset 20
 12221 14ce BD46     		mov	sp, r7
 12222              		.cfi_def_cfa_register 13
 12223              		@ sp needed
 12224 14d0 F0BD     		pop	{r4, r5, r6, r7, pc}
 12225              	.L505:
 12226 14d2 00BF     		.align	2
 12227              	.L504:
 12228 14d4 00000000 		.word	g_rx
 12229 14d8 00000000 		.word	g_mem
 12230              		.cfi_endproc
 12231              	.LFE69:
 12232              		.size	set_custom_param, .-set_custom_param
 12233              		.section	.rodata
 12234 109a 0000     		.align	2
 12235              	.LC147:
 12236 109c 506F7274 		.ascii	"Port %u ID:\000"
 12236      20257520 
 12236      49443A00 
 12237              		.align	2
 12238              	.LC148:
 12239 10a8 2575202D 		.ascii	"%u - Device ID:\000"
 12239      20446576 
 12239      69636520 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 276


 12239      49443A00 
 12240              		.align	2
 12241              	.LC149:
 12242 10b8 2575202D 		.ascii	"%u - IMU %d configuration:\000"
 12242      20494D55 
 12242      20256420 
 12242      636F6E66 
 12242      69677572 
 12243 10d3 00       		.align	2
 12244              	.LC150:
 12245 10d4 2575202D 		.ascii	"%u - SPI read delay:\000"
 12245      20535049 
 12245      20726561 
 12245      64206465 
 12245      6C61793A 
 12246 10e9 000000   		.align	2
 12247              	.LC151:
 12248 10ec 204E6F6E 		.ascii	" None\000"
 12248      6500
 12249 10f2 0000     		.align	2
 12250              	.LC152:
 12251 10f4 204C6F77 		.ascii	" Low\000"
 12251      00
 12252 10f9 000000   		.align	2
 12253              	.LC153:
 12254 10fc 20486967 		.ascii	" High\000"
 12254      6800
 12255 1102 0000     		.align	2
 12256              	.LC145:
 12257 1104 4E756D62 		.ascii	"Number of connected IMUs:\000"
 12257      6572206F 
 12257      6620636F 
 12257      6E6E6563 
 12257      74656420 
 12258 111e 0000     		.align	2
 12259              	.LC146:
 12260 1120 4D616720 		.ascii	"Mag cal parameters:\000"
 12260      63616C20 
 12260      70617261 
 12260      6D657465 
 12260      72733A00 
 12261              		.section	.text.get_IMU_param_list,"ax",%progbits
 12262              		.align	2
 12263              		.global	get_IMU_param_list
 12264              		.thumb
 12265              		.thumb_func
 12266              		.type	get_IMU_param_list, %function
 12267              	get_IMU_param_list:
 12268              	.LFB70:
1640:..\src/command_processing.c **** 
1641:..\src/command_processing.c **** //==============================================================================
1642:..\src/command_processing.c **** //                                                        GET IMU PARAMETER LIST
1643:..\src/command_processing.c **** //==============================================================================
1644:..\src/command_processing.c **** 
1645:..\src/command_processing.c **** void get_IMU_param_list(uint16 index)
1646:..\src/command_processing.c **** {
 12269              		.loc 1 1646 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 277


 12270              		.cfi_startproc
 12271              		@ args = 0, pretend = 0, frame = 1704
 12272              		@ frame_needed = 1, uses_anonymous_args = 0
 12273 0000 B0B5     		push	{r4, r5, r7, lr}
 12274              		.cfi_def_cfa_offset 16
 12275              		.cfi_offset 4, -16
 12276              		.cfi_offset 5, -12
 12277              		.cfi_offset 7, -8
 12278              		.cfi_offset 14, -4
 12279 0002 ADF5D56D 		sub	sp, sp, #1704
 12280              		.cfi_def_cfa_offset 1720
 12281 0006 00AF     		add	r7, sp, #0
 12282              		.cfi_def_cfa_register 7
 12283 0008 0246     		mov	r2, r0
 12284 000a BB1D     		adds	r3, r7, #6
 12285 000c 1A80     		strh	r2, [r3]	@ movhi
1647:..\src/command_processing.c ****     //Package to be sent variables
1648:..\src/command_processing.c ****     uint8 packet_data[  PARAM_BYTE_SLOT   +     // Number of connected IMUs
 12286              		.loc 1 1648 0
 12287 000e 07F58A73 		add	r3, r7, #276
 12288 0012 0022     		movs	r2, #0
 12289 0014 1A60     		str	r2, [r3]
 12290 0016 0433     		adds	r3, r3, #4
 12291 0018 40F27552 		movw	r2, #1397
 12292 001c 0021     		movs	r1, #0
 12293 001e 1846     		mov	r0, r3
 12294 0020 FFF7FEFF 		bl	memset
1649:..\src/command_processing.c ****                         7*PARAM_BYTE_SLOT +     // IMUs ID  (1 port instead of 7)
1650:..\src/command_processing.c ****                         9*PARAM_BYTE_SLOT +     // Mag cal parameters (1 row instead of 9)
1651:..\src/command_processing.c ****                         PARAM_BYTE_SLOT   +     // 1 - Device ID
1652:..\src/command_processing.c ****                         PARAM_BYTE_SLOT*N_IMU_MAX + // IMU configurations
1653:..\src/command_processing.c ****                         PARAM_BYTE_SLOT   +     // SPI read delay
1654:..\src/command_processing.c ****                         PARAM_MENU_SLOT   + PARAM_BYTE_SLOT + 1 ] = "";
1655:..\src/command_processing.c ****     uint16 num_imus_id_params = 7;      //(1 port instead of 7)
 12295              		.loc 1 1655 0
 12296 0024 0723     		movs	r3, #7
 12297 0026 A7F89A36 		strh	r3, [r7, #1690]	@ movhi
1656:..\src/command_processing.c ****     uint16 num_mag_cal_params = 0;
 12298              		.loc 1 1656 0
 12299 002a 0023     		movs	r3, #0
 12300 002c A7F8A636 		strh	r3, [r7, #1702]	@ movhi
1657:..\src/command_processing.c ****     uint16 first_imu_parameter = 2;
 12301              		.loc 1 1657 0
 12302 0030 0223     		movs	r3, #2
 12303 0032 A7F89836 		strh	r3, [r7, #1688]	@ movhi
1658:..\src/command_processing.c ****     uint16 packet_length = PARAM_BYTE_SLOT +
 12304              		.loc 1 1658 0
 12305 0036 B7F89A36 		ldrh	r3, [r7, #1690]
 12306 003a 5A1C     		adds	r2, r3, #1
1659:..\src/command_processing.c ****                            num_imus_id_params*PARAM_BYTE_SLOT +
 12307              		.loc 1 1659 0
 12308 003c B7F8A636 		ldrh	r3, [r7, #1702]
 12309 0040 1344     		add	r3, r3, r2
1660:..\src/command_processing.c ****                            num_mag_cal_params*PARAM_BYTE_SLOT +
 12310              		.loc 1 1660 0
 12311 0042 0133     		adds	r3, r3, #1
1658:..\src/command_processing.c ****     uint16 packet_length = PARAM_BYTE_SLOT +
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 278


 12312              		.loc 1 1658 0
 12313 0044 9AB2     		uxth	r2, r3
 12314 0046 D24B     		ldr	r3, .L552
 12315 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12316 004a 9BB2     		uxth	r3, r3
 12317 004c 1344     		add	r3, r3, r2
 12318 004e 9BB2     		uxth	r3, r3
 12319 0050 1A46     		mov	r2, r3	@ movhi
 12320 0052 9200     		lsls	r2, r2, #2
 12321 0054 1344     		add	r3, r3, r2
 12322 0056 1A46     		mov	r2, r3	@ movhi
 12323 0058 9100     		lsls	r1, r2, #2
 12324 005a 1A46     		mov	r2, r3	@ movhi
 12325 005c 0B46     		mov	r3, r1	@ movhi
 12326 005e 1344     		add	r3, r3, r2
 12327 0060 5B00     		lsls	r3, r3, #1
 12328 0062 9BB2     		uxth	r3, r3
 12329 0064 FB33     		adds	r3, r3, #251
 12330 0066 A7F89636 		strh	r3, [r7, #1686]	@ movhi
1661:..\src/command_processing.c ****                            PARAM_BYTE_SLOT   + 
1662:..\src/command_processing.c ****                            (uint16)(PARAM_BYTE_SLOT*N_IMU_Connected) +
1663:..\src/command_processing.c ****                            PARAM_BYTE_SLOT + PARAM_MENU_SLOT + PARAM_BYTE_SLOT + 1;
1664:..\src/command_processing.c **** 
1665:..\src/command_processing.c ****     //Auxiliary variables
1666:..\src/command_processing.c ****     uint16 CYDATA i, j, k, h;
1667:..\src/command_processing.c ****     uint16 start_byte = 0;
 12331              		.loc 1 1667 0
 12332 006a 0023     		movs	r3, #0
 12333 006c A7F89436 		strh	r3, [r7, #1684]	@ movhi
1668:..\src/command_processing.c **** 
1669:..\src/command_processing.c ****     //Parameters menu string definitions
1670:..\src/command_processing.c ****     char n_imu_str[26]          = "Number of connected IMUs:";
 12334              		.loc 1 1670 0
 12335 0070 07F1F803 		add	r3, r7, #248
 12336 0074 C74A     		ldr	r2, .L552+4
 12337 0076 1C46     		mov	r4, r3
 12338 0078 1546     		mov	r5, r2
 12339 007a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 12340 007c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 12341 007e 95E80700 		ldmia	r5, {r0, r1, r2}
 12342 0082 03C4     		stmia	r4!, {r0, r1}
 12343 0084 2280     		strh	r2, [r4]	@ movhi
1671:..\src/command_processing.c ****     char ids_str[11]            = "";
 12344              		.loc 1 1671 0
 12345 0086 07F1EC03 		add	r3, r7, #236
 12346 008a 0022     		movs	r2, #0
 12347 008c 1A60     		str	r2, [r3]
 12348 008e 0433     		adds	r3, r3, #4
 12349 0090 0022     		movs	r2, #0
 12350 0092 1A60     		str	r2, [r3]
 12351 0094 C3F80320 		str	r2, [r3, #3]	@ unaligned
1672:..\src/command_processing.c ****     char mag_param_str[20]      = "Mag cal parameters:";
 12352              		.loc 1 1672 0
 12353 0098 07F1D803 		add	r3, r7, #216
 12354 009c BE4A     		ldr	r2, .L552+8
 12355 009e 1C46     		mov	r4, r3
 12356 00a0 1546     		mov	r5, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 279


 12357 00a2 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 12358 00a4 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 12359 00a6 2B68     		ldr	r3, [r5]
 12360 00a8 2360     		str	r3, [r4]
1673:..\src/command_processing.c ****     char id_str[16]             = "";
 12361              		.loc 1 1673 0
 12362 00aa 07F1C803 		add	r3, r7, #200
 12363 00ae 0022     		movs	r2, #0
 12364 00b0 1A60     		str	r2, [r3]
 12365 00b2 0433     		adds	r3, r3, #4
 12366 00b4 0022     		movs	r2, #0
 12367 00b6 1A60     		str	r2, [r3]
 12368 00b8 5A60     		str	r2, [r3, #4]
 12369 00ba 9A60     		str	r2, [r3, #8]
1674:..\src/command_processing.c ****     char imu_table_str[42]      = "";
 12370              		.loc 1 1674 0
 12371 00bc 07F19C03 		add	r3, r7, #156
 12372 00c0 0022     		movs	r2, #0
 12373 00c2 1A60     		str	r2, [r3]
 12374 00c4 0433     		adds	r3, r3, #4
 12375 00c6 2622     		movs	r2, #38
 12376 00c8 0021     		movs	r1, #0
 12377 00ca 1846     		mov	r0, r3
 12378 00cc FFF7FEFF 		bl	memset
1675:..\src/command_processing.c ****     char spi_read_delay_str[26] = "";
 12379              		.loc 1 1675 0
 12380 00d0 07F18003 		add	r3, r7, #128
 12381 00d4 0022     		movs	r2, #0
 12382 00d6 1A60     		str	r2, [r3]
 12383 00d8 0433     		adds	r3, r3, #4
 12384 00da 0022     		movs	r2, #0
 12385 00dc 1A60     		str	r2, [r3]
 12386 00de 5A60     		str	r2, [r3, #4]
 12387 00e0 9A60     		str	r2, [r3, #8]
 12388 00e2 DA60     		str	r2, [r3, #12]
 12389 00e4 1A61     		str	r2, [r3, #16]
 12390 00e6 9A82     		strh	r2, [r3, #20]	@ movhi
1676:..\src/command_processing.c ****     
1677:..\src/command_processing.c ****     //Strings lenghts
1678:..\src/command_processing.c ****     uint8 CYDATA id_str_len = strlen(id_str);
 12391              		.loc 1 1678 0
 12392 00e8 07F1C803 		add	r3, r7, #200
 12393 00ec 1846     		mov	r0, r3
 12394 00ee FFF7FEFF 		bl	strlen
 12395 00f2 0346     		mov	r3, r0
 12396 00f4 87F89336 		strb	r3, [r7, #1683]
1679:..\src/command_processing.c ****     uint8 CYDATA n_imu_str_len = strlen(n_imu_str);
 12397              		.loc 1 1679 0
 12398 00f8 07F1F803 		add	r3, r7, #248
 12399 00fc 1846     		mov	r0, r3
 12400 00fe FFF7FEFF 		bl	strlen
 12401 0102 0346     		mov	r3, r0
 12402 0104 87F89236 		strb	r3, [r7, #1682]
1680:..\src/command_processing.c ****     uint8 CYDATA ids_str_len = strlen(ids_str);
 12403              		.loc 1 1680 0
 12404 0108 07F1EC03 		add	r3, r7, #236
 12405 010c 1846     		mov	r0, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 280


 12406 010e FFF7FEFF 		bl	strlen
 12407 0112 0346     		mov	r3, r0
 12408 0114 87F89136 		strb	r3, [r7, #1681]
1681:..\src/command_processing.c ****     uint8 CYDATA mag_param_str_len = strlen(mag_param_str);
 12409              		.loc 1 1681 0
 12410 0118 07F1D803 		add	r3, r7, #216
 12411 011c 1846     		mov	r0, r3
 12412 011e FFF7FEFF 		bl	strlen
 12413 0122 0346     		mov	r3, r0
 12414 0124 87F89036 		strb	r3, [r7, #1680]
1682:..\src/command_processing.c ****     uint8 CYDATA imu_table_str_len = strlen(imu_table_str);
 12415              		.loc 1 1682 0
 12416 0128 07F19C03 		add	r3, r7, #156
 12417 012c 1846     		mov	r0, r3
 12418 012e FFF7FEFF 		bl	strlen
 12419 0132 0346     		mov	r3, r0
 12420 0134 87F88F36 		strb	r3, [r7, #1679]
1683:..\src/command_processing.c ****     uint8 CYDATA spi_read_delay_str_len = strlen(spi_read_delay_str);
 12421              		.loc 1 1683 0
 12422 0138 07F18003 		add	r3, r7, #128
 12423 013c 1846     		mov	r0, r3
 12424 013e FFF7FEFF 		bl	strlen
 12425 0142 0346     		mov	r3, r0
 12426 0144 87F89D36 		strb	r3, [r7, #1693]
1684:..\src/command_processing.c ****     
1685:..\src/command_processing.c ****     char spi_delay_menu[118]    = "";
 12427              		.loc 1 1685 0
 12428 0148 07F10803 		add	r3, r7, #8
 12429 014c 0022     		movs	r2, #0
 12430 014e 1A60     		str	r2, [r3]
 12431 0150 0433     		adds	r3, r3, #4
 12432 0152 7222     		movs	r2, #114
 12433 0154 0021     		movs	r1, #0
 12434 0156 1846     		mov	r0, r3
 12435 0158 FFF7FEFF 		bl	memset
1686:..\src/command_processing.c ****     uint8 CYDATA spi_delay_menu_len;
1687:..\src/command_processing.c ****  
1688:..\src/command_processing.c ****     sprintf(spi_delay_menu, "0 -> None\n1 -> Low (%u us delay for each 8-bit register read)\n2 -> H
 12436              		.loc 1 1688 0
 12437 015c 07F10800 		add	r0, r7, #8
 12438 0160 6423     		movs	r3, #100
 12439 0162 0A22     		movs	r2, #10
 12440 0164 8D49     		ldr	r1, .L552+12
 12441 0166 FFF7FEFF 		bl	sprintf
1689:..\src/command_processing.c ****     spi_delay_menu_len = strlen(spi_delay_menu);
 12442              		.loc 1 1689 0
 12443 016a 07F10803 		add	r3, r7, #8
 12444 016e 1846     		mov	r0, r3
 12445 0170 FFF7FEFF 		bl	strlen
 12446 0174 0346     		mov	r3, r0
 12447 0176 87F88E36 		strb	r3, [r7, #1678]
1690:..\src/command_processing.c **** 
1691:..\src/command_processing.c ****     // Compute number of read parameters depending on N_IMU_Connected and
1692:..\src/command_processing.c ****     // update packet_length
1693:..\src/command_processing.c ****     num_mag_cal_params = (uint16)(N_IMU_Connected / 2);
 12448              		.loc 1 1693 0
 12449 017a 854B     		ldr	r3, .L552
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 281


 12450 017c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12451 017e 5B08     		lsrs	r3, r3, #1
 12452 0180 DBB2     		uxtb	r3, r3
 12453 0182 A7F8A636 		strh	r3, [r7, #1702]	@ movhi
1694:..\src/command_processing.c ****     if ( (N_IMU_Connected - num_mag_cal_params*2) > 0 ) num_mag_cal_params++;
 12454              		.loc 1 1694 0
 12455 0186 824B     		ldr	r3, .L552
 12456 0188 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12457 018a 1A46     		mov	r2, r3
 12458 018c B7F8A636 		ldrh	r3, [r7, #1702]
 12459 0190 5B00     		lsls	r3, r3, #1
 12460 0192 D31A     		subs	r3, r2, r3
 12461 0194 002B     		cmp	r3, #0
 12462 0196 04DD     		ble	.L507
 12463              		.loc 1 1694 0 is_stmt 0 discriminator 1
 12464 0198 B7F8A636 		ldrh	r3, [r7, #1702]
 12465 019c 0133     		adds	r3, r3, #1
 12466 019e A7F8A636 		strh	r3, [r7, #1702]	@ movhi
 12467              	.L507:
1695:..\src/command_processing.c ****     
1696:..\src/command_processing.c ****     packet_length = PARAM_BYTE_SLOT +
 12468              		.loc 1 1696 0 is_stmt 1
 12469 01a2 B7F89A36 		ldrh	r3, [r7, #1690]
 12470 01a6 5A1C     		adds	r2, r3, #1
1697:..\src/command_processing.c ****                     num_imus_id_params*PARAM_BYTE_SLOT +
 12471              		.loc 1 1697 0
 12472 01a8 B7F8A636 		ldrh	r3, [r7, #1702]
 12473 01ac 1344     		add	r3, r3, r2
1698:..\src/command_processing.c ****                     num_mag_cal_params*PARAM_BYTE_SLOT +
 12474              		.loc 1 1698 0
 12475 01ae 0133     		adds	r3, r3, #1
1696:..\src/command_processing.c ****                     num_imus_id_params*PARAM_BYTE_SLOT +
 12476              		.loc 1 1696 0
 12477 01b0 9AB2     		uxth	r2, r3
 12478 01b2 774B     		ldr	r3, .L552
 12479 01b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12480 01b6 9BB2     		uxth	r3, r3
 12481 01b8 1344     		add	r3, r3, r2
 12482 01ba 9BB2     		uxth	r3, r3
 12483 01bc 1A46     		mov	r2, r3	@ movhi
 12484 01be 9200     		lsls	r2, r2, #2
 12485 01c0 1344     		add	r3, r3, r2
 12486 01c2 1A46     		mov	r2, r3	@ movhi
 12487 01c4 9100     		lsls	r1, r2, #2
 12488 01c6 1A46     		mov	r2, r3	@ movhi
 12489 01c8 0B46     		mov	r3, r1	@ movhi
 12490 01ca 1344     		add	r3, r3, r2
 12491 01cc 5B00     		lsls	r3, r3, #1
 12492 01ce 9BB2     		uxth	r3, r3
 12493 01d0 C933     		adds	r3, r3, #201
 12494 01d2 A7F89636 		strh	r3, [r7, #1686]	@ movhi
1699:..\src/command_processing.c ****                     PARAM_BYTE_SLOT   + 
1700:..\src/command_processing.c ****                     (uint16)(PARAM_BYTE_SLOT*N_IMU_Connected) +
1701:..\src/command_processing.c ****                     PARAM_MENU_SLOT + PARAM_BYTE_SLOT + 1;
1702:..\src/command_processing.c **** 
1703:..\src/command_processing.c ****     first_imu_parameter = 1 + num_imus_id_params + num_mag_cal_params + 2;
 12495              		.loc 1 1703 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 282


 12496 01d6 B7F89A26 		ldrh	r2, [r7, #1690]	@ movhi
 12497 01da B7F8A636 		ldrh	r3, [r7, #1702]	@ movhi
 12498 01de 1344     		add	r3, r3, r2
 12499 01e0 9BB2     		uxth	r3, r3
 12500 01e2 0333     		adds	r3, r3, #3
 12501 01e4 A7F89836 		strh	r3, [r7, #1688]	@ movhi
1704:..\src/command_processing.c ****     packet_data[0] = CMD_GET_IMU_PARAM;
 12502              		.loc 1 1704 0
 12503 01e8 07F58A73 		add	r3, r7, #276
 12504 01ec A222     		movs	r2, #162
 12505 01ee 1A70     		strb	r2, [r3]
1705:..\src/command_processing.c ****     packet_data[1] = 1 + num_imus_id_params + num_mag_cal_params + 1 + (uint8)N_IMU_Connected + 1; 
 12506              		.loc 1 1705 0
 12507 01f0 B7F89A36 		ldrh	r3, [r7, #1690]	@ movhi
 12508 01f4 DAB2     		uxtb	r2, r3
 12509 01f6 B7F8A636 		ldrh	r3, [r7, #1702]	@ movhi
 12510 01fa DBB2     		uxtb	r3, r3
 12511 01fc 1344     		add	r3, r3, r2
 12512 01fe DAB2     		uxtb	r2, r3
 12513 0200 634B     		ldr	r3, .L552
 12514 0202 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12515 0204 1344     		add	r3, r3, r2
 12516 0206 DBB2     		uxtb	r3, r3
 12517 0208 0333     		adds	r3, r3, #3
 12518 020a DAB2     		uxtb	r2, r3
 12519 020c 07F58A73 		add	r3, r7, #276
 12520 0210 5A70     		strb	r2, [r3, #1]
1706:..\src/command_processing.c **** 
1707:..\src/command_processing.c ****     switch(index) {
 12521              		.loc 1 1707 0
 12522 0212 BB1D     		adds	r3, r7, #6
 12523 0214 1B88     		ldrh	r3, [r3]
 12524 0216 002B     		cmp	r3, #0
 12525 0218 40F0D084 		bne	.L550
1708:..\src/command_processing.c ****         case 0:         //List of all parameters with relative types
1709:..\src/command_processing.c ****             /*-------------N IMU--------------*/
1710:..\src/command_processing.c ****             start_byte = 0;
 12526              		.loc 1 1710 0
 12527 021c 0023     		movs	r3, #0
 12528 021e A7F89436 		strh	r3, [r7, #1684]	@ movhi
1711:..\src/command_processing.c ****             packet_data[2] = TYPE_UINT8;
 12529              		.loc 1 1711 0
 12530 0222 07F58A73 		add	r3, r7, #276
 12531 0226 0222     		movs	r2, #2
 12532 0228 9A70     		strb	r2, [r3, #2]
1712:..\src/command_processing.c ****             packet_data[3] = 1;
 12533              		.loc 1 1712 0
 12534 022a 07F58A73 		add	r3, r7, #276
 12535 022e 0122     		movs	r2, #1
 12536 0230 DA70     		strb	r2, [r3, #3]
1713:..\src/command_processing.c ****             packet_data[4] = (uint8)N_IMU_Connected;
 12537              		.loc 1 1713 0
 12538 0232 574B     		ldr	r3, .L552
 12539 0234 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 12540 0236 07F58A73 		add	r3, r7, #276
 12541 023a 1A71     		strb	r2, [r3, #4]
1714:..\src/command_processing.c ****             for(i = n_imu_str_len; i != 0; i--)
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 283


 12542              		.loc 1 1714 0
 12543 023c 97F89236 		ldrb	r3, [r7, #1682]	@ zero_extendqisi2
 12544 0240 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 12545 0244 15E0     		b	.L510
 12546              	.L511:
1715:..\src/command_processing.c ****                 packet_data[5 + n_imu_str_len - i] = n_imu_str[n_imu_str_len - i];
 12547              		.loc 1 1715 0 discriminator 3
 12548 0246 97F89236 		ldrb	r3, [r7, #1682]	@ zero_extendqisi2
 12549 024a 5A1D     		adds	r2, r3, #5
 12550 024c B7F8A436 		ldrh	r3, [r7, #1700]
 12551 0250 D31A     		subs	r3, r2, r3
 12552 0252 97F89216 		ldrb	r1, [r7, #1682]	@ zero_extendqisi2
 12553 0256 B7F8A426 		ldrh	r2, [r7, #1700]
 12554 025a 8A1A     		subs	r2, r1, r2
 12555 025c 07F1F801 		add	r1, r7, #248
 12556 0260 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 12557 0262 07F58A72 		add	r2, r7, #276
 12558 0266 D154     		strb	r1, [r2, r3]
1714:..\src/command_processing.c ****             for(i = n_imu_str_len; i != 0; i--)
 12559              		.loc 1 1714 0 discriminator 3
 12560 0268 B7F8A436 		ldrh	r3, [r7, #1700]
 12561 026c 013B     		subs	r3, r3, #1
 12562 026e A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 12563              	.L510:
1714:..\src/command_processing.c ****             for(i = n_imu_str_len; i != 0; i--)
 12564              		.loc 1 1714 0 is_stmt 0 discriminator 1
 12565 0272 B7F8A436 		ldrh	r3, [r7, #1700]
 12566 0276 002B     		cmp	r3, #0
 12567 0278 E5D1     		bne	.L511
1716:..\src/command_processing.c ****                 
1717:..\src/command_processing.c ****             /*-------------IMUS ID--------------*/
1718:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT;
 12568              		.loc 1 1718 0 is_stmt 1
 12569 027a B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12570 027e 3233     		adds	r3, r3, #50
 12571 0280 A7F89436 		strh	r3, [r7, #1684]	@ movhi
1719:..\src/command_processing.c ****             i = 0;
 12572              		.loc 1 1719 0
 12573 0284 0023     		movs	r3, #0
 12574 0286 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
1720:..\src/command_processing.c ****             for (k = 0; k < num_imus_id_params; k++){
 12575              		.loc 1 1720 0
 12576 028a 0023     		movs	r3, #0
 12577 028c A7F8A036 		strh	r3, [r7, #1696]	@ movhi
 12578 0290 B2E0     		b	.L512
 12579              	.L519:
1721:..\src/command_processing.c ****                 sprintf(ids_str, "Port %u ID:", k);
 12580              		.loc 1 1721 0
 12581 0292 B7F8A026 		ldrh	r2, [r7, #1696]
 12582 0296 07F1EC03 		add	r3, r7, #236
 12583 029a 4149     		ldr	r1, .L552+16
 12584 029c 1846     		mov	r0, r3
 12585 029e FFF7FEFF 		bl	sprintf
1722:..\src/command_processing.c ****                 h = 4;
 12586              		.loc 1 1722 0
 12587 02a2 0423     		movs	r3, #4
 12588 02a4 A7F89E36 		strh	r3, [r7, #1694]	@ movhi
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 284


1723:..\src/command_processing.c ****                 ids_str_len = strlen(ids_str);
 12589              		.loc 1 1723 0
 12590 02a8 07F1EC03 		add	r3, r7, #236
 12591 02ac 1846     		mov	r0, r3
 12592 02ae FFF7FEFF 		bl	strlen
 12593 02b2 0346     		mov	r3, r0
 12594 02b4 87F89136 		strb	r3, [r7, #1681]
1724:..\src/command_processing.c ****                 packet_data[2+start_byte + PARAM_BYTE_SLOT*k] = TYPE_UINT8;
 12595              		.loc 1 1724 0
 12596 02b8 B7F89436 		ldrh	r3, [r7, #1684]
 12597 02bc 9A1C     		adds	r2, r3, #2
 12598 02be B7F8A036 		ldrh	r3, [r7, #1696]
 12599 02c2 3221     		movs	r1, #50
 12600 02c4 01FB03F3 		mul	r3, r1, r3
 12601 02c8 1344     		add	r3, r3, r2
 12602 02ca 07F58A72 		add	r2, r7, #276
 12603 02ce 0221     		movs	r1, #2
 12604 02d0 D154     		strb	r1, [r2, r3]
1725:..\src/command_processing.c ****                 packet_data[3+start_byte + PARAM_BYTE_SLOT*k] = 3;
 12605              		.loc 1 1725 0
 12606 02d2 B7F89436 		ldrh	r3, [r7, #1684]
 12607 02d6 DA1C     		adds	r2, r3, #3
 12608 02d8 B7F8A036 		ldrh	r3, [r7, #1696]
 12609 02dc 3221     		movs	r1, #50
 12610 02de 01FB03F3 		mul	r3, r1, r3
 12611 02e2 1344     		add	r3, r3, r2
 12612 02e4 07F58A72 		add	r2, r7, #276
 12613 02e8 0321     		movs	r1, #3
 12614 02ea D154     		strb	r1, [r2, r3]
1726:..\src/command_processing.c ****                 
1727:..\src/command_processing.c ****                 for (j = 3*k; j <= 3*k+2; j++) {  // for each possible imu on port k
 12615              		.loc 1 1727 0
 12616 02ec B7F8A036 		ldrh	r3, [r7, #1696]	@ movhi
 12617 02f0 1A46     		mov	r2, r3	@ movhi
 12618 02f2 5200     		lsls	r2, r2, #1
 12619 02f4 1344     		add	r3, r3, r2
 12620 02f6 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12621 02fa 39E0     		b	.L513
 12622              	.L516:
1728:..\src/command_processing.c ****                     if (IMU_connected[i] == j) {
 12623              		.loc 1 1728 0
 12624 02fc B7F8A436 		ldrh	r3, [r7, #1700]
 12625 0300 284A     		ldr	r2, .L552+20
 12626 0302 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12627 0304 9BB2     		uxth	r3, r3
 12628 0306 B7F8A226 		ldrh	r2, [r7, #1698]
 12629 030a 9A42     		cmp	r2, r3
 12630 030c 17D1     		bne	.L514
1729:..\src/command_processing.c ****                         packet_data[h+start_byte + PARAM_BYTE_SLOT*k] = (uint8)IMU_connected[i];   
 12631              		.loc 1 1729 0
 12632 030e B7F89E26 		ldrh	r2, [r7, #1694]
 12633 0312 B7F89436 		ldrh	r3, [r7, #1684]
 12634 0316 1A44     		add	r2, r2, r3
 12635 0318 B7F8A036 		ldrh	r3, [r7, #1696]
 12636 031c 3221     		movs	r1, #50
 12637 031e 01FB03F3 		mul	r3, r1, r3
 12638 0322 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 285


 12639 0324 B7F8A426 		ldrh	r2, [r7, #1700]
 12640 0328 1E49     		ldr	r1, .L552+20
 12641 032a 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 12642 032c 07F58A72 		add	r2, r7, #276
 12643 0330 D154     		strb	r1, [r2, r3]
1730:..\src/command_processing.c ****                         i++;
 12644              		.loc 1 1730 0
 12645 0332 B7F8A436 		ldrh	r3, [r7, #1700]
 12646 0336 0133     		adds	r3, r3, #1
 12647 0338 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 12648 033c 0EE0     		b	.L515
 12649              	.L514:
1731:..\src/command_processing.c ****                     } 
1732:..\src/command_processing.c ****                     else {
1733:..\src/command_processing.c ****                         packet_data[h+start_byte + PARAM_BYTE_SLOT*k] = 255;
 12650              		.loc 1 1733 0
 12651 033e B7F89E26 		ldrh	r2, [r7, #1694]
 12652 0342 B7F89436 		ldrh	r3, [r7, #1684]
 12653 0346 1A44     		add	r2, r2, r3
 12654 0348 B7F8A036 		ldrh	r3, [r7, #1696]
 12655 034c 3221     		movs	r1, #50
 12656 034e 01FB03F3 		mul	r3, r1, r3
 12657 0352 1344     		add	r3, r3, r2
 12658 0354 07F58A72 		add	r2, r7, #276
 12659 0358 FF21     		movs	r1, #255
 12660 035a D154     		strb	r1, [r2, r3]
 12661              	.L515:
1734:..\src/command_processing.c ****                     }
1735:..\src/command_processing.c ****                     h++;
 12662              		.loc 1 1735 0 discriminator 2
 12663 035c B7F89E36 		ldrh	r3, [r7, #1694]
 12664 0360 0133     		adds	r3, r3, #1
 12665 0362 A7F89E36 		strh	r3, [r7, #1694]	@ movhi
1727:..\src/command_processing.c ****                     if (IMU_connected[i] == j) {
 12666              		.loc 1 1727 0 discriminator 2
 12667 0366 B7F8A236 		ldrh	r3, [r7, #1698]
 12668 036a 0133     		adds	r3, r3, #1
 12669 036c A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12670              	.L513:
1727:..\src/command_processing.c ****                     if (IMU_connected[i] == j) {
 12671              		.loc 1 1727 0 is_stmt 0 discriminator 1
 12672 0370 B7F8A216 		ldrh	r1, [r7, #1698]
 12673 0374 B7F8A026 		ldrh	r2, [r7, #1696]
 12674 0378 1346     		mov	r3, r2
 12675 037a 5B00     		lsls	r3, r3, #1
 12676 037c 1344     		add	r3, r3, r2
 12677 037e 0233     		adds	r3, r3, #2
 12678 0380 9942     		cmp	r1, r3
 12679 0382 BBDD     		ble	.L516
1736:..\src/command_processing.c ****                 }
1737:..\src/command_processing.c **** 
1738:..\src/command_processing.c ****                 //if (IMU_connected[i] >= 3*k && IMU_connected[i] <= 3*k + 2)
1739:..\src/command_processing.c ****                 for(j = ids_str_len; j != 0; j--)
 12680              		.loc 1 1739 0 is_stmt 1
 12681 0384 97F89136 		ldrb	r3, [r7, #1681]	@ zero_extendqisi2
 12682 0388 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12683 038c 2BE0     		b	.L517
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 286


 12684              	.L553:
 12685 038e 00BF     		.align	2
 12686              	.L552:
 12687 0390 00000000 		.word	N_IMU_Connected
 12688 0394 04110000 		.word	.LC145
 12689 0398 20110000 		.word	.LC146
 12690 039c 74020000 		.word	.LC132
 12691 03a0 9C100000 		.word	.LC147
 12692 03a4 00000000 		.word	IMU_connected
 12693              	.L518:
1740:..\src/command_processing.c ****                     packet_data[7+start_byte + PARAM_BYTE_SLOT*k + ids_str_len - j] = ids_str[ids_s
 12694              		.loc 1 1740 0 discriminator 3
 12695 03a8 B7F89436 		ldrh	r3, [r7, #1684]
 12696 03ac DA1D     		adds	r2, r3, #7
 12697 03ae B7F8A036 		ldrh	r3, [r7, #1696]
 12698 03b2 3221     		movs	r1, #50
 12699 03b4 01FB03F3 		mul	r3, r1, r3
 12700 03b8 1A44     		add	r2, r2, r3
 12701 03ba 97F89136 		ldrb	r3, [r7, #1681]	@ zero_extendqisi2
 12702 03be 1A44     		add	r2, r2, r3
 12703 03c0 B7F8A236 		ldrh	r3, [r7, #1698]
 12704 03c4 D31A     		subs	r3, r2, r3
 12705 03c6 97F89116 		ldrb	r1, [r7, #1681]	@ zero_extendqisi2
 12706 03ca B7F8A226 		ldrh	r2, [r7, #1698]
 12707 03ce 8A1A     		subs	r2, r1, r2
 12708 03d0 07F1EC01 		add	r1, r7, #236
 12709 03d4 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 12710 03d6 07F58A72 		add	r2, r7, #276
 12711 03da D154     		strb	r1, [r2, r3]
1739:..\src/command_processing.c ****                     packet_data[7+start_byte + PARAM_BYTE_SLOT*k + ids_str_len - j] = ids_str[ids_s
 12712              		.loc 1 1739 0 discriminator 3
 12713 03dc B7F8A236 		ldrh	r3, [r7, #1698]
 12714 03e0 013B     		subs	r3, r3, #1
 12715 03e2 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12716              	.L517:
1739:..\src/command_processing.c ****                     packet_data[7+start_byte + PARAM_BYTE_SLOT*k + ids_str_len - j] = ids_str[ids_s
 12717              		.loc 1 1739 0 is_stmt 0 discriminator 1
 12718 03e6 B7F8A236 		ldrh	r3, [r7, #1698]
 12719 03ea 002B     		cmp	r3, #0
 12720 03ec DCD1     		bne	.L518
1720:..\src/command_processing.c ****                 sprintf(ids_str, "Port %u ID:", k);
 12721              		.loc 1 1720 0 is_stmt 1 discriminator 2
 12722 03ee B7F8A036 		ldrh	r3, [r7, #1696]
 12723 03f2 0133     		adds	r3, r3, #1
 12724 03f4 A7F8A036 		strh	r3, [r7, #1696]	@ movhi
 12725              	.L512:
1720:..\src/command_processing.c ****                 sprintf(ids_str, "Port %u ID:", k);
 12726              		.loc 1 1720 0 is_stmt 0 discriminator 1
 12727 03f8 B7F8A026 		ldrh	r2, [r7, #1696]
 12728 03fc B7F89A36 		ldrh	r3, [r7, #1690]
 12729 0400 9A42     		cmp	r2, r3
 12730 0402 FFF446AF 		bcc	.L519
1741:..\src/command_processing.c ****             }
1742:..\src/command_processing.c ****             
1743:..\src/command_processing.c ****             /*-------------GET MAG PARAM--------------*/
1744:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT*num_imus_id_params;
 12731              		.loc 1 1744 0 is_stmt 1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 287


 12732 0406 B7F89A36 		ldrh	r3, [r7, #1690]	@ movhi
 12733 040a 1A46     		mov	r2, r3	@ movhi
 12734 040c 9200     		lsls	r2, r2, #2
 12735 040e 1344     		add	r3, r3, r2
 12736 0410 1A46     		mov	r2, r3	@ movhi
 12737 0412 9100     		lsls	r1, r2, #2
 12738 0414 1A46     		mov	r2, r3	@ movhi
 12739 0416 0B46     		mov	r3, r1	@ movhi
 12740 0418 1344     		add	r3, r3, r2
 12741 041a 5B00     		lsls	r3, r3, #1
 12742 041c 9AB2     		uxth	r2, r3
 12743 041e B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12744 0422 1344     		add	r3, r3, r2
 12745 0424 A7F89436 		strh	r3, [r7, #1684]	@ movhi
1745:..\src/command_processing.c ****             for (k = 0; k < num_mag_cal_params; k++){
 12746              		.loc 1 1745 0
 12747 0428 0023     		movs	r3, #0
 12748 042a A7F8A036 		strh	r3, [r7, #1696]	@ movhi
 12749 042e 1FE1     		b	.L520
 12750              	.L527:
1746:..\src/command_processing.c ****                 packet_data[2+start_byte + PARAM_BYTE_SLOT*k] = TYPE_UINT8;
 12751              		.loc 1 1746 0
 12752 0430 B7F89436 		ldrh	r3, [r7, #1684]
 12753 0434 9A1C     		adds	r2, r3, #2
 12754 0436 B7F8A036 		ldrh	r3, [r7, #1696]
 12755 043a 3221     		movs	r1, #50
 12756 043c 01FB03F3 		mul	r3, r1, r3
 12757 0440 1344     		add	r3, r3, r2
 12758 0442 07F58A72 		add	r2, r7, #276
 12759 0446 0221     		movs	r1, #2
 12760 0448 D154     		strb	r1, [r2, r3]
1747:..\src/command_processing.c ****                 
1748:..\src/command_processing.c ****                 packet_data[3+start_byte + PARAM_BYTE_SLOT*k] = 3;
 12761              		.loc 1 1748 0
 12762 044a B7F89436 		ldrh	r3, [r7, #1684]
 12763 044e DA1C     		adds	r2, r3, #3
 12764 0450 B7F8A036 		ldrh	r3, [r7, #1696]
 12765 0454 3221     		movs	r1, #50
 12766 0456 01FB03F3 		mul	r3, r1, r3
 12767 045a 1344     		add	r3, r3, r2
 12768 045c 07F58A72 		add	r2, r7, #276
 12769 0460 0321     		movs	r1, #3
 12770 0462 D154     		strb	r1, [r2, r3]
1749:..\src/command_processing.c ****                 packet_data[4+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*k]][
 12771              		.loc 1 1749 0
 12772 0464 B7F89436 		ldrh	r3, [r7, #1684]
 12773 0468 1A1D     		adds	r2, r3, #4
 12774 046a B7F8A036 		ldrh	r3, [r7, #1696]
 12775 046e 3221     		movs	r1, #50
 12776 0470 01FB03F3 		mul	r3, r1, r3
 12777 0474 1A44     		add	r2, r2, r3
 12778 0476 B7F8A036 		ldrh	r3, [r7, #1696]
 12779 047a 5B00     		lsls	r3, r3, #1
 12780 047c B249     		ldr	r1, .L554
 12781 047e CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 12782 0480 1846     		mov	r0, r3
 12783 0482 B249     		ldr	r1, .L554+4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 288


 12784 0484 0346     		mov	r3, r0
 12785 0486 5B00     		lsls	r3, r3, #1
 12786 0488 0344     		add	r3, r3, r0
 12787 048a 0B44     		add	r3, r3, r1
 12788 048c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 12789 048e 07F58A73 		add	r3, r7, #276
 12790 0492 9954     		strb	r1, [r3, r2]
1750:..\src/command_processing.c ****                 packet_data[5+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*k]][
 12791              		.loc 1 1750 0
 12792 0494 B7F89436 		ldrh	r3, [r7, #1684]
 12793 0498 5A1D     		adds	r2, r3, #5
 12794 049a B7F8A036 		ldrh	r3, [r7, #1696]
 12795 049e 3221     		movs	r1, #50
 12796 04a0 01FB03F3 		mul	r3, r1, r3
 12797 04a4 1A44     		add	r2, r2, r3
 12798 04a6 B7F8A036 		ldrh	r3, [r7, #1696]
 12799 04aa 5B00     		lsls	r3, r3, #1
 12800 04ac A649     		ldr	r1, .L554
 12801 04ae CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 12802 04b0 1846     		mov	r0, r3
 12803 04b2 A649     		ldr	r1, .L554+4
 12804 04b4 0346     		mov	r3, r0
 12805 04b6 5B00     		lsls	r3, r3, #1
 12806 04b8 0344     		add	r3, r3, r0
 12807 04ba 0B44     		add	r3, r3, r1
 12808 04bc 0133     		adds	r3, r3, #1
 12809 04be 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 12810 04c0 07F58A73 		add	r3, r7, #276
 12811 04c4 9954     		strb	r1, [r3, r2]
1751:..\src/command_processing.c ****                 packet_data[6+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*k]][
 12812              		.loc 1 1751 0
 12813 04c6 B7F89436 		ldrh	r3, [r7, #1684]
 12814 04ca 9A1D     		adds	r2, r3, #6
 12815 04cc B7F8A036 		ldrh	r3, [r7, #1696]
 12816 04d0 3221     		movs	r1, #50
 12817 04d2 01FB03F3 		mul	r3, r1, r3
 12818 04d6 1A44     		add	r2, r2, r3
 12819 04d8 B7F8A036 		ldrh	r3, [r7, #1696]
 12820 04dc 5B00     		lsls	r3, r3, #1
 12821 04de 9A49     		ldr	r1, .L554
 12822 04e0 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 12823 04e2 1846     		mov	r0, r3
 12824 04e4 9949     		ldr	r1, .L554+4
 12825 04e6 0346     		mov	r3, r0
 12826 04e8 5B00     		lsls	r3, r3, #1
 12827 04ea 0344     		add	r3, r3, r0
 12828 04ec 0B44     		add	r3, r3, r1
 12829 04ee 0233     		adds	r3, r3, #2
 12830 04f0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 12831 04f2 07F58A73 		add	r3, r7, #276
 12832 04f6 9954     		strb	r1, [r3, r2]
1752:..\src/command_processing.c ****                 
1753:..\src/command_processing.c ****                 // check if there is a second value
1754:..\src/command_processing.c ****                 if ( N_IMU_Connected < 2*(k+1) ) {
 12833              		.loc 1 1754 0
 12834 04f8 954B     		ldr	r3, .L554+8
 12835 04fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 289


 12836 04fc 1A46     		mov	r2, r3
 12837 04fe B7F8A036 		ldrh	r3, [r7, #1696]
 12838 0502 0133     		adds	r3, r3, #1
 12839 0504 5B00     		lsls	r3, r3, #1
 12840 0506 9A42     		cmp	r2, r3
 12841 0508 28DA     		bge	.L521
1755:..\src/command_processing.c ****                     // there is only one value
1756:..\src/command_processing.c ****                     for(j = mag_param_str_len; j != 0; j--)
 12842              		.loc 1 1756 0
 12843 050a 97F89036 		ldrb	r3, [r7, #1680]	@ zero_extendqisi2
 12844 050e A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12845 0512 1EE0     		b	.L522
 12846              	.L523:
1757:..\src/command_processing.c ****                         packet_data[7+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = mag
 12847              		.loc 1 1757 0 discriminator 3
 12848 0514 B7F89436 		ldrh	r3, [r7, #1684]
 12849 0518 DA1D     		adds	r2, r3, #7
 12850 051a B7F8A036 		ldrh	r3, [r7, #1696]
 12851 051e 3221     		movs	r1, #50
 12852 0520 01FB03F3 		mul	r3, r1, r3
 12853 0524 1A44     		add	r2, r2, r3
 12854 0526 97F89036 		ldrb	r3, [r7, #1680]	@ zero_extendqisi2
 12855 052a 1A44     		add	r2, r2, r3
 12856 052c B7F8A236 		ldrh	r3, [r7, #1698]
 12857 0530 D31A     		subs	r3, r2, r3
 12858 0532 97F89016 		ldrb	r1, [r7, #1680]	@ zero_extendqisi2
 12859 0536 B7F8A226 		ldrh	r2, [r7, #1698]
 12860 053a 8A1A     		subs	r2, r1, r2
 12861 053c 07F1D801 		add	r1, r7, #216
 12862 0540 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 12863 0542 07F58A72 		add	r2, r7, #276
 12864 0546 D154     		strb	r1, [r2, r3]
1756:..\src/command_processing.c ****                         packet_data[7+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = mag
 12865              		.loc 1 1756 0 discriminator 3
 12866 0548 B7F8A236 		ldrh	r3, [r7, #1698]
 12867 054c 013B     		subs	r3, r3, #1
 12868 054e A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12869              	.L522:
1756:..\src/command_processing.c ****                         packet_data[7+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = mag
 12870              		.loc 1 1756 0 is_stmt 0 discriminator 1
 12871 0552 B7F8A236 		ldrh	r3, [r7, #1698]
 12872 0556 002B     		cmp	r3, #0
 12873 0558 DCD1     		bne	.L523
 12874 055a 84E0     		b	.L524
 12875              	.L521:
1758:..\src/command_processing.c ****                 }
1759:..\src/command_processing.c ****                 else {
1760:..\src/command_processing.c ****                     // fill the second value
1761:..\src/command_processing.c ****                     packet_data[3+start_byte + PARAM_BYTE_SLOT*k] = 6;
 12876              		.loc 1 1761 0 is_stmt 1
 12877 055c B7F89436 		ldrh	r3, [r7, #1684]
 12878 0560 DA1C     		adds	r2, r3, #3
 12879 0562 B7F8A036 		ldrh	r3, [r7, #1696]
 12880 0566 3221     		movs	r1, #50
 12881 0568 01FB03F3 		mul	r3, r1, r3
 12882 056c 1344     		add	r3, r3, r2
 12883 056e 07F58A72 		add	r2, r7, #276
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 290


 12884 0572 0621     		movs	r1, #6
 12885 0574 D154     		strb	r1, [r2, r3]
1762:..\src/command_processing.c ****                     packet_data[7+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*
 12886              		.loc 1 1762 0
 12887 0576 B7F89436 		ldrh	r3, [r7, #1684]
 12888 057a DA1D     		adds	r2, r3, #7
 12889 057c B7F8A036 		ldrh	r3, [r7, #1696]
 12890 0580 3221     		movs	r1, #50
 12891 0582 01FB03F3 		mul	r3, r1, r3
 12892 0586 1A44     		add	r2, r2, r3
 12893 0588 B7F8A036 		ldrh	r3, [r7, #1696]
 12894 058c 5B00     		lsls	r3, r3, #1
 12895 058e 0133     		adds	r3, r3, #1
 12896 0590 6D49     		ldr	r1, .L554
 12897 0592 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 12898 0594 1846     		mov	r0, r3
 12899 0596 6D49     		ldr	r1, .L554+4
 12900 0598 0346     		mov	r3, r0
 12901 059a 5B00     		lsls	r3, r3, #1
 12902 059c 0344     		add	r3, r3, r0
 12903 059e 0B44     		add	r3, r3, r1
 12904 05a0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 12905 05a2 07F58A73 		add	r3, r7, #276
 12906 05a6 9954     		strb	r1, [r3, r2]
1763:..\src/command_processing.c ****                     packet_data[8+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*
 12907              		.loc 1 1763 0
 12908 05a8 B7F89436 		ldrh	r3, [r7, #1684]
 12909 05ac 03F10802 		add	r2, r3, #8
 12910 05b0 B7F8A036 		ldrh	r3, [r7, #1696]
 12911 05b4 3221     		movs	r1, #50
 12912 05b6 01FB03F3 		mul	r3, r1, r3
 12913 05ba 1A44     		add	r2, r2, r3
 12914 05bc B7F8A036 		ldrh	r3, [r7, #1696]
 12915 05c0 5B00     		lsls	r3, r3, #1
 12916 05c2 0133     		adds	r3, r3, #1
 12917 05c4 6049     		ldr	r1, .L554
 12918 05c6 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 12919 05c8 1846     		mov	r0, r3
 12920 05ca 6049     		ldr	r1, .L554+4
 12921 05cc 0346     		mov	r3, r0
 12922 05ce 5B00     		lsls	r3, r3, #1
 12923 05d0 0344     		add	r3, r3, r0
 12924 05d2 0B44     		add	r3, r3, r1
 12925 05d4 0133     		adds	r3, r3, #1
 12926 05d6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 12927 05d8 07F58A73 		add	r3, r7, #276
 12928 05dc 9954     		strb	r1, [r3, r2]
1764:..\src/command_processing.c ****                     packet_data[9+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*
 12929              		.loc 1 1764 0
 12930 05de B7F89436 		ldrh	r3, [r7, #1684]
 12931 05e2 03F10902 		add	r2, r3, #9
 12932 05e6 B7F8A036 		ldrh	r3, [r7, #1696]
 12933 05ea 3221     		movs	r1, #50
 12934 05ec 01FB03F3 		mul	r3, r1, r3
 12935 05f0 1A44     		add	r2, r2, r3
 12936 05f2 B7F8A036 		ldrh	r3, [r7, #1696]
 12937 05f6 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 291


 12938 05f8 0133     		adds	r3, r3, #1
 12939 05fa 5349     		ldr	r1, .L554
 12940 05fc CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 12941 05fe 1846     		mov	r0, r3
 12942 0600 5249     		ldr	r1, .L554+4
 12943 0602 0346     		mov	r3, r0
 12944 0604 5B00     		lsls	r3, r3, #1
 12945 0606 0344     		add	r3, r3, r0
 12946 0608 0B44     		add	r3, r3, r1
 12947 060a 0233     		adds	r3, r3, #2
 12948 060c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 12949 060e 07F58A73 		add	r3, r7, #276
 12950 0612 9954     		strb	r1, [r3, r2]
1765:..\src/command_processing.c ****                 
1766:..\src/command_processing.c ****                     for(j = mag_param_str_len; j != 0; j--)
 12951              		.loc 1 1766 0
 12952 0614 97F89036 		ldrb	r3, [r7, #1680]	@ zero_extendqisi2
 12953 0618 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12954 061c 1FE0     		b	.L525
 12955              	.L526:
1767:..\src/command_processing.c ****                         packet_data[10+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = ma
 12956              		.loc 1 1767 0 discriminator 3
 12957 061e B7F89436 		ldrh	r3, [r7, #1684]
 12958 0622 03F10A02 		add	r2, r3, #10
 12959 0626 B7F8A036 		ldrh	r3, [r7, #1696]
 12960 062a 3221     		movs	r1, #50
 12961 062c 01FB03F3 		mul	r3, r1, r3
 12962 0630 1A44     		add	r2, r2, r3
 12963 0632 97F89036 		ldrb	r3, [r7, #1680]	@ zero_extendqisi2
 12964 0636 1A44     		add	r2, r2, r3
 12965 0638 B7F8A236 		ldrh	r3, [r7, #1698]
 12966 063c D31A     		subs	r3, r2, r3
 12967 063e 97F89016 		ldrb	r1, [r7, #1680]	@ zero_extendqisi2
 12968 0642 B7F8A226 		ldrh	r2, [r7, #1698]
 12969 0646 8A1A     		subs	r2, r1, r2
 12970 0648 07F1D801 		add	r1, r7, #216
 12971 064c 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 12972 064e 07F58A72 		add	r2, r7, #276
 12973 0652 D154     		strb	r1, [r2, r3]
1766:..\src/command_processing.c ****                         packet_data[10+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = ma
 12974              		.loc 1 1766 0 discriminator 3
 12975 0654 B7F8A236 		ldrh	r3, [r7, #1698]
 12976 0658 013B     		subs	r3, r3, #1
 12977 065a A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12978              	.L525:
1766:..\src/command_processing.c ****                         packet_data[10+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = ma
 12979              		.loc 1 1766 0 is_stmt 0 discriminator 1
 12980 065e B7F8A236 		ldrh	r3, [r7, #1698]
 12981 0662 002B     		cmp	r3, #0
 12982 0664 DBD1     		bne	.L526
 12983              	.L524:
1745:..\src/command_processing.c ****                 packet_data[2+start_byte + PARAM_BYTE_SLOT*k] = TYPE_UINT8;
 12984              		.loc 1 1745 0 is_stmt 1 discriminator 2
 12985 0666 B7F8A036 		ldrh	r3, [r7, #1696]
 12986 066a 0133     		adds	r3, r3, #1
 12987 066c A7F8A036 		strh	r3, [r7, #1696]	@ movhi
 12988              	.L520:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 292


1745:..\src/command_processing.c ****                 packet_data[2+start_byte + PARAM_BYTE_SLOT*k] = TYPE_UINT8;
 12989              		.loc 1 1745 0 is_stmt 0 discriminator 1
 12990 0670 B7F8A026 		ldrh	r2, [r7, #1696]
 12991 0674 B7F8A636 		ldrh	r3, [r7, #1702]
 12992 0678 9A42     		cmp	r2, r3
 12993 067a FFF4D9AE 		bcc	.L527
1768:..\src/command_processing.c ****                 }
1769:..\src/command_processing.c ****             }
1770:..\src/command_processing.c ****             
1771:..\src/command_processing.c ****             /*-----------------ID-----------------*/
1772:..\src/command_processing.c ****             
1773:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT*num_mag_cal_params;
 12994              		.loc 1 1773 0 is_stmt 1
 12995 067e B7F8A636 		ldrh	r3, [r7, #1702]	@ movhi
 12996 0682 1A46     		mov	r2, r3	@ movhi
 12997 0684 9200     		lsls	r2, r2, #2
 12998 0686 1344     		add	r3, r3, r2
 12999 0688 1A46     		mov	r2, r3	@ movhi
 13000 068a 9100     		lsls	r1, r2, #2
 13001 068c 1A46     		mov	r2, r3	@ movhi
 13002 068e 0B46     		mov	r3, r1	@ movhi
 13003 0690 1344     		add	r3, r3, r2
 13004 0692 5B00     		lsls	r3, r3, #1
 13005 0694 9AB2     		uxth	r2, r3
 13006 0696 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13007 069a 1344     		add	r3, r3, r2
 13008 069c A7F89436 		strh	r3, [r7, #1684]	@ movhi
1774:..\src/command_processing.c ****             sprintf(id_str, "%u - Device ID:", first_imu_parameter-1);
 13009              		.loc 1 1774 0
 13010 06a0 B7F89836 		ldrh	r3, [r7, #1688]
 13011 06a4 5A1E     		subs	r2, r3, #1
 13012 06a6 07F1C803 		add	r3, r7, #200
 13013 06aa 2A49     		ldr	r1, .L554+12
 13014 06ac 1846     		mov	r0, r3
 13015 06ae FFF7FEFF 		bl	sprintf
1775:..\src/command_processing.c ****             id_str_len = strlen(id_str);
 13016              		.loc 1 1775 0
 13017 06b2 07F1C803 		add	r3, r7, #200
 13018 06b6 1846     		mov	r0, r3
 13019 06b8 FFF7FEFF 		bl	strlen
 13020 06bc 0346     		mov	r3, r0
 13021 06be 87F89336 		strb	r3, [r7, #1683]
1776:..\src/command_processing.c ****             packet_data[2+start_byte] = TYPE_UINT8;
 13022              		.loc 1 1776 0
 13023 06c2 B7F89436 		ldrh	r3, [r7, #1684]
 13024 06c6 0233     		adds	r3, r3, #2
 13025 06c8 07F58A72 		add	r2, r7, #276
 13026 06cc 0221     		movs	r1, #2
 13027 06ce D154     		strb	r1, [r2, r3]
1777:..\src/command_processing.c ****             packet_data[3+start_byte] = 1;
 13028              		.loc 1 1777 0
 13029 06d0 B7F89436 		ldrh	r3, [r7, #1684]
 13030 06d4 0333     		adds	r3, r3, #3
 13031 06d6 07F58A72 		add	r2, r7, #276
 13032 06da 0121     		movs	r1, #1
 13033 06dc D154     		strb	r1, [r2, r3]
1778:..\src/command_processing.c ****             packet_data[4+start_byte] = c_mem.dev.id;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 293


 13034              		.loc 1 1778 0
 13035 06de B7F89436 		ldrh	r3, [r7, #1684]
 13036 06e2 0433     		adds	r3, r3, #4
 13037 06e4 1C4A     		ldr	r2, .L554+16
 13038 06e6 92F8A010 		ldrb	r1, [r2, #160]	@ zero_extendqisi2
 13039 06ea 07F58A72 		add	r2, r7, #276
 13040 06ee D154     		strb	r1, [r2, r3]
1779:..\src/command_processing.c ****             for(i = id_str_len; i != 0; i--)
 13041              		.loc 1 1779 0
 13042 06f0 97F89336 		ldrb	r3, [r7, #1683]	@ zero_extendqisi2
 13043 06f4 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 13044 06f8 18E0     		b	.L528
 13045              	.L529:
1780:..\src/command_processing.c ****                 packet_data[5+start_byte + id_str_len - i] = id_str[id_str_len - i];
 13046              		.loc 1 1780 0 discriminator 3
 13047 06fa B7F89436 		ldrh	r3, [r7, #1684]
 13048 06fe 5A1D     		adds	r2, r3, #5
 13049 0700 97F89336 		ldrb	r3, [r7, #1683]	@ zero_extendqisi2
 13050 0704 1A44     		add	r2, r2, r3
 13051 0706 B7F8A436 		ldrh	r3, [r7, #1700]
 13052 070a D31A     		subs	r3, r2, r3
 13053 070c 97F89316 		ldrb	r1, [r7, #1683]	@ zero_extendqisi2
 13054 0710 B7F8A426 		ldrh	r2, [r7, #1700]
 13055 0714 8A1A     		subs	r2, r1, r2
 13056 0716 07F1C801 		add	r1, r7, #200
 13057 071a 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 13058 071c 07F58A72 		add	r2, r7, #276
 13059 0720 D154     		strb	r1, [r2, r3]
1779:..\src/command_processing.c ****             for(i = id_str_len; i != 0; i--)
 13060              		.loc 1 1779 0 discriminator 3
 13061 0722 B7F8A436 		ldrh	r3, [r7, #1700]
 13062 0726 013B     		subs	r3, r3, #1
 13063 0728 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 13064              	.L528:
1779:..\src/command_processing.c ****             for(i = id_str_len; i != 0; i--)
 13065              		.loc 1 1779 0 is_stmt 0 discriminator 1
 13066 072c B7F8A436 		ldrh	r3, [r7, #1700]
 13067 0730 002B     		cmp	r3, #0
 13068 0732 E2D1     		bne	.L529
1781:..\src/command_processing.c ****                 
1782:..\src/command_processing.c ****             /*-------------GET IMUS MODE-------------*/
1783:..\src/command_processing.c ****             
1784:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT;
 13069              		.loc 1 1784 0 is_stmt 1
 13070 0734 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13071 0738 3233     		adds	r3, r3, #50
 13072 073a A7F89436 		strh	r3, [r7, #1684]	@ movhi
1785:..\src/command_processing.c ****             for (i = 0; i < (uint8)N_IMU_Connected; i++){
 13073              		.loc 1 1785 0
 13074 073e 0023     		movs	r3, #0
 13075 0740 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 13076 0744 38E1     		b	.L530
 13077              	.L555:
 13078 0746 00BF     		.align	2
 13079              	.L554:
 13080 0748 00000000 		.word	IMU_connected
 13081 074c 00000000 		.word	MagCal
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 294


 13082 0750 00000000 		.word	N_IMU_Connected
 13083 0754 A8100000 		.word	.LC148
 13084 0758 00000000 		.word	c_mem
 13085              	.L533:
1786:..\src/command_processing.c ****                 sprintf(imu_table_str, "%u - IMU %d configuration:", first_imu_parameter + i, (int)
 13086              		.loc 1 1786 0
 13087 075c B7F89826 		ldrh	r2, [r7, #1688]
 13088 0760 B7F8A436 		ldrh	r3, [r7, #1700]
 13089 0764 D118     		adds	r1, r2, r3
 13090 0766 B7F8A436 		ldrh	r3, [r7, #1700]
 13091 076a D54A     		ldr	r2, .L556
 13092 076c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13093 076e 07F19C00 		add	r0, r7, #156
 13094 0772 0A46     		mov	r2, r1
 13095 0774 D349     		ldr	r1, .L556+4
 13096 0776 FFF7FEFF 		bl	sprintf
1787:..\src/command_processing.c ****                 imu_table_str_len = strlen(imu_table_str);
 13097              		.loc 1 1787 0
 13098 077a 07F19C03 		add	r3, r7, #156
 13099 077e 1846     		mov	r0, r3
 13100 0780 FFF7FEFF 		bl	strlen
 13101 0784 0346     		mov	r3, r0
 13102 0786 87F88F36 		strb	r3, [r7, #1679]
1788:..\src/command_processing.c ****             
1789:..\src/command_processing.c ****                 packet_data[(uint16)(2 + start_byte + PARAM_BYTE_SLOT*i)] = TYPE_UINT8;
 13103              		.loc 1 1789 0
 13104 078a B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 13105 078e 1A46     		mov	r2, r3	@ movhi
 13106 0790 9200     		lsls	r2, r2, #2
 13107 0792 1344     		add	r3, r3, r2
 13108 0794 1A46     		mov	r2, r3	@ movhi
 13109 0796 9100     		lsls	r1, r2, #2
 13110 0798 1A46     		mov	r2, r3	@ movhi
 13111 079a 0B46     		mov	r3, r1	@ movhi
 13112 079c 1344     		add	r3, r3, r2
 13113 079e 5B00     		lsls	r3, r3, #1
 13114 07a0 9AB2     		uxth	r2, r3
 13115 07a2 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13116 07a6 1344     		add	r3, r3, r2
 13117 07a8 9BB2     		uxth	r3, r3
 13118 07aa 0233     		adds	r3, r3, #2
 13119 07ac 9BB2     		uxth	r3, r3
 13120 07ae 1A46     		mov	r2, r3
 13121 07b0 07F58A73 		add	r3, r7, #276
 13122 07b4 0221     		movs	r1, #2
 13123 07b6 9954     		strb	r1, [r3, r2]
1790:..\src/command_processing.c ****                 packet_data[(uint16)(3 + start_byte + PARAM_BYTE_SLOT*i)] = 5;
 13124              		.loc 1 1790 0
 13125 07b8 B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 13126 07bc 1A46     		mov	r2, r3	@ movhi
 13127 07be 9200     		lsls	r2, r2, #2
 13128 07c0 1344     		add	r3, r3, r2
 13129 07c2 1A46     		mov	r2, r3	@ movhi
 13130 07c4 9100     		lsls	r1, r2, #2
 13131 07c6 1A46     		mov	r2, r3	@ movhi
 13132 07c8 0B46     		mov	r3, r1	@ movhi
 13133 07ca 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 295


 13134 07cc 5B00     		lsls	r3, r3, #1
 13135 07ce 9AB2     		uxth	r2, r3
 13136 07d0 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13137 07d4 1344     		add	r3, r3, r2
 13138 07d6 9BB2     		uxth	r3, r3
 13139 07d8 0333     		adds	r3, r3, #3
 13140 07da 9BB2     		uxth	r3, r3
 13141 07dc 1A46     		mov	r2, r3
 13142 07de 07F58A73 		add	r3, r7, #276
 13143 07e2 0521     		movs	r1, #5
 13144 07e4 9954     		strb	r1, [r3, r2]
1791:..\src/command_processing.c ****                 
1792:..\src/command_processing.c ****                 packet_data[(uint16)(4 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 13145              		.loc 1 1792 0
 13146 07e6 B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 13147 07ea 1A46     		mov	r2, r3	@ movhi
 13148 07ec 9200     		lsls	r2, r2, #2
 13149 07ee 1344     		add	r3, r3, r2
 13150 07f0 1A46     		mov	r2, r3	@ movhi
 13151 07f2 9100     		lsls	r1, r2, #2
 13152 07f4 1A46     		mov	r2, r3	@ movhi
 13153 07f6 0B46     		mov	r3, r1	@ movhi
 13154 07f8 1344     		add	r3, r3, r2
 13155 07fa 5B00     		lsls	r3, r3, #1
 13156 07fc 9AB2     		uxth	r2, r3
 13157 07fe B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13158 0802 1344     		add	r3, r3, r2
 13159 0804 9BB2     		uxth	r3, r3
 13160 0806 0433     		adds	r3, r3, #4
 13161 0808 9BB2     		uxth	r3, r3
 13162 080a 1846     		mov	r0, r3
 13163 080c B7F8A436 		ldrh	r3, [r7, #1700]
 13164 0810 AB4A     		ldr	r2, .L556
 13165 0812 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13166 0814 1946     		mov	r1, r3
 13167 0816 AC4A     		ldr	r2, .L556+8
 13168 0818 0B46     		mov	r3, r1
 13169 081a 9B00     		lsls	r3, r3, #2
 13170 081c 0B44     		add	r3, r3, r1
 13171 081e 1344     		add	r3, r3, r2
 13172 0820 03F20223 		addw	r3, r3, #514
 13173 0824 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 13174 0826 07F58A73 		add	r3, r7, #276
 13175 082a 1A54     		strb	r2, [r3, r0]
1793:..\src/command_processing.c ****                 packet_data[(uint16)(5 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 13176              		.loc 1 1793 0
 13177 082c B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 13178 0830 1A46     		mov	r2, r3	@ movhi
 13179 0832 9200     		lsls	r2, r2, #2
 13180 0834 1344     		add	r3, r3, r2
 13181 0836 1A46     		mov	r2, r3	@ movhi
 13182 0838 9100     		lsls	r1, r2, #2
 13183 083a 1A46     		mov	r2, r3	@ movhi
 13184 083c 0B46     		mov	r3, r1	@ movhi
 13185 083e 1344     		add	r3, r3, r2
 13186 0840 5B00     		lsls	r3, r3, #1
 13187 0842 9AB2     		uxth	r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 296


 13188 0844 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13189 0848 1344     		add	r3, r3, r2
 13190 084a 9BB2     		uxth	r3, r3
 13191 084c 0533     		adds	r3, r3, #5
 13192 084e 9BB2     		uxth	r3, r3
 13193 0850 1846     		mov	r0, r3
 13194 0852 B7F8A436 		ldrh	r3, [r7, #1700]
 13195 0856 9A4A     		ldr	r2, .L556
 13196 0858 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13197 085a 1946     		mov	r1, r3
 13198 085c 9A4A     		ldr	r2, .L556+8
 13199 085e 0B46     		mov	r3, r1
 13200 0860 9B00     		lsls	r3, r3, #2
 13201 0862 0B44     		add	r3, r3, r1
 13202 0864 1344     		add	r3, r3, r2
 13203 0866 03F20323 		addw	r3, r3, #515
 13204 086a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 13205 086c 07F58A73 		add	r3, r7, #276
 13206 0870 1A54     		strb	r2, [r3, r0]
1794:..\src/command_processing.c ****                 packet_data[(uint16)(6 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 13207              		.loc 1 1794 0
 13208 0872 B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 13209 0876 1A46     		mov	r2, r3	@ movhi
 13210 0878 9200     		lsls	r2, r2, #2
 13211 087a 1344     		add	r3, r3, r2
 13212 087c 1A46     		mov	r2, r3	@ movhi
 13213 087e 9100     		lsls	r1, r2, #2
 13214 0880 1A46     		mov	r2, r3	@ movhi
 13215 0882 0B46     		mov	r3, r1	@ movhi
 13216 0884 1344     		add	r3, r3, r2
 13217 0886 5B00     		lsls	r3, r3, #1
 13218 0888 9AB2     		uxth	r2, r3
 13219 088a B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13220 088e 1344     		add	r3, r3, r2
 13221 0890 9BB2     		uxth	r3, r3
 13222 0892 0633     		adds	r3, r3, #6
 13223 0894 9BB2     		uxth	r3, r3
 13224 0896 1846     		mov	r0, r3
 13225 0898 B7F8A436 		ldrh	r3, [r7, #1700]
 13226 089c 884A     		ldr	r2, .L556
 13227 089e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13228 08a0 1946     		mov	r1, r3
 13229 08a2 894A     		ldr	r2, .L556+8
 13230 08a4 0B46     		mov	r3, r1
 13231 08a6 9B00     		lsls	r3, r3, #2
 13232 08a8 0B44     		add	r3, r3, r1
 13233 08aa 1344     		add	r3, r3, r2
 13234 08ac 03F50173 		add	r3, r3, #516
 13235 08b0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 13236 08b2 07F58A73 		add	r3, r7, #276
 13237 08b6 1A54     		strb	r2, [r3, r0]
1795:..\src/command_processing.c ****                 packet_data[(uint16)(7 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 13238              		.loc 1 1795 0
 13239 08b8 B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 13240 08bc 1A46     		mov	r2, r3	@ movhi
 13241 08be 9200     		lsls	r2, r2, #2
 13242 08c0 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 297


 13243 08c2 1A46     		mov	r2, r3	@ movhi
 13244 08c4 9100     		lsls	r1, r2, #2
 13245 08c6 1A46     		mov	r2, r3	@ movhi
 13246 08c8 0B46     		mov	r3, r1	@ movhi
 13247 08ca 1344     		add	r3, r3, r2
 13248 08cc 5B00     		lsls	r3, r3, #1
 13249 08ce 9AB2     		uxth	r2, r3
 13250 08d0 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13251 08d4 1344     		add	r3, r3, r2
 13252 08d6 9BB2     		uxth	r3, r3
 13253 08d8 0733     		adds	r3, r3, #7
 13254 08da 9BB2     		uxth	r3, r3
 13255 08dc 1846     		mov	r0, r3
 13256 08de B7F8A436 		ldrh	r3, [r7, #1700]
 13257 08e2 774A     		ldr	r2, .L556
 13258 08e4 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13259 08e6 1946     		mov	r1, r3
 13260 08e8 774A     		ldr	r2, .L556+8
 13261 08ea 0B46     		mov	r3, r1
 13262 08ec 9B00     		lsls	r3, r3, #2
 13263 08ee 0B44     		add	r3, r3, r1
 13264 08f0 1344     		add	r3, r3, r2
 13265 08f2 03F20523 		addw	r3, r3, #517
 13266 08f6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 13267 08f8 07F58A73 		add	r3, r7, #276
 13268 08fc 1A54     		strb	r2, [r3, r0]
1796:..\src/command_processing.c ****                 packet_data[(uint16)(8 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 13269              		.loc 1 1796 0
 13270 08fe B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 13271 0902 1A46     		mov	r2, r3	@ movhi
 13272 0904 9200     		lsls	r2, r2, #2
 13273 0906 1344     		add	r3, r3, r2
 13274 0908 1A46     		mov	r2, r3	@ movhi
 13275 090a 9100     		lsls	r1, r2, #2
 13276 090c 1A46     		mov	r2, r3	@ movhi
 13277 090e 0B46     		mov	r3, r1	@ movhi
 13278 0910 1344     		add	r3, r3, r2
 13279 0912 5B00     		lsls	r3, r3, #1
 13280 0914 9AB2     		uxth	r2, r3
 13281 0916 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13282 091a 1344     		add	r3, r3, r2
 13283 091c 9BB2     		uxth	r3, r3
 13284 091e 0833     		adds	r3, r3, #8
 13285 0920 9BB2     		uxth	r3, r3
 13286 0922 1846     		mov	r0, r3
 13287 0924 B7F8A436 		ldrh	r3, [r7, #1700]
 13288 0928 654A     		ldr	r2, .L556
 13289 092a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13290 092c 1946     		mov	r1, r3
 13291 092e 664A     		ldr	r2, .L556+8
 13292 0930 0B46     		mov	r3, r1
 13293 0932 9B00     		lsls	r3, r3, #2
 13294 0934 0B44     		add	r3, r3, r1
 13295 0936 1344     		add	r3, r3, r2
 13296 0938 03F20623 		addw	r3, r3, #518
 13297 093c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 13298 093e 07F58A73 		add	r3, r7, #276
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 298


 13299 0942 1A54     		strb	r2, [r3, r0]
1797:..\src/command_processing.c **** 
1798:..\src/command_processing.c ****                 for(j = imu_table_str_len; j != 0; j--)
 13300              		.loc 1 1798 0
 13301 0944 97F88F36 		ldrb	r3, [r7, #1679]	@ zero_extendqisi2
 13302 0948 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 13303 094c 2BE0     		b	.L531
 13304              	.L532:
1799:..\src/command_processing.c ****                     packet_data[(uint16)(9 + start_byte + PARAM_BYTE_SLOT*i + imu_table_str_len - j
 13305              		.loc 1 1799 0 discriminator 3
 13306 094e B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 13307 0952 1A46     		mov	r2, r3	@ movhi
 13308 0954 9200     		lsls	r2, r2, #2
 13309 0956 1344     		add	r3, r3, r2
 13310 0958 1A46     		mov	r2, r3	@ movhi
 13311 095a 9100     		lsls	r1, r2, #2
 13312 095c 1A46     		mov	r2, r3	@ movhi
 13313 095e 0B46     		mov	r3, r1	@ movhi
 13314 0960 1344     		add	r3, r3, r2
 13315 0962 5B00     		lsls	r3, r3, #1
 13316 0964 9AB2     		uxth	r2, r3
 13317 0966 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13318 096a 1344     		add	r3, r3, r2
 13319 096c 9AB2     		uxth	r2, r3
 13320 096e 97F88F36 		ldrb	r3, [r7, #1679]	@ zero_extendqisi2
 13321 0972 9BB2     		uxth	r3, r3
 13322 0974 1344     		add	r3, r3, r2
 13323 0976 9AB2     		uxth	r2, r3
 13324 0978 B7F8A236 		ldrh	r3, [r7, #1698]	@ movhi
 13325 097c D31A     		subs	r3, r2, r3
 13326 097e 9BB2     		uxth	r3, r3
 13327 0980 0933     		adds	r3, r3, #9
 13328 0982 9BB2     		uxth	r3, r3
 13329 0984 1946     		mov	r1, r3
 13330 0986 97F88F26 		ldrb	r2, [r7, #1679]	@ zero_extendqisi2
 13331 098a B7F8A236 		ldrh	r3, [r7, #1698]
 13332 098e D31A     		subs	r3, r2, r3
 13333 0990 07F19C02 		add	r2, r7, #156
 13334 0994 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 13335 0996 07F58A73 		add	r3, r7, #276
 13336 099a 5A54     		strb	r2, [r3, r1]
1798:..\src/command_processing.c ****                     packet_data[(uint16)(9 + start_byte + PARAM_BYTE_SLOT*i + imu_table_str_len - j
 13337              		.loc 1 1798 0 discriminator 3
 13338 099c B7F8A236 		ldrh	r3, [r7, #1698]
 13339 09a0 013B     		subs	r3, r3, #1
 13340 09a2 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 13341              	.L531:
1798:..\src/command_processing.c ****                     packet_data[(uint16)(9 + start_byte + PARAM_BYTE_SLOT*i + imu_table_str_len - j
 13342              		.loc 1 1798 0 is_stmt 0 discriminator 1
 13343 09a6 B7F8A236 		ldrh	r3, [r7, #1698]
 13344 09aa 002B     		cmp	r3, #0
 13345 09ac CFD1     		bne	.L532
1785:..\src/command_processing.c ****                 sprintf(imu_table_str, "%u - IMU %d configuration:", first_imu_parameter + i, (int)
 13346              		.loc 1 1785 0 is_stmt 1 discriminator 2
 13347 09ae B7F8A436 		ldrh	r3, [r7, #1700]
 13348 09b2 0133     		adds	r3, r3, #1
 13349 09b4 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 299


 13350              	.L530:
1785:..\src/command_processing.c ****                 sprintf(imu_table_str, "%u - IMU %d configuration:", first_imu_parameter + i, (int)
 13351              		.loc 1 1785 0 is_stmt 0 discriminator 1
 13352 09b8 444B     		ldr	r3, .L556+12
 13353 09ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13354 09bc 9BB2     		uxth	r3, r3
 13355 09be B7F8A426 		ldrh	r2, [r7, #1700]
 13356 09c2 9A42     		cmp	r2, r3
 13357 09c4 FFF4CAAE 		bcc	.L533
1800:..\src/command_processing.c ****             }  
1801:..\src/command_processing.c ****           
1802:..\src/command_processing.c **** 
1803:..\src/command_processing.c ****             /*-----------------SPI DELAY-----------------*/
1804:..\src/command_processing.c ****             
1805:..\src/command_processing.c ****             start_byte = start_byte + (uint16)(PARAM_BYTE_SLOT*N_IMU_Connected);
 13358              		.loc 1 1805 0 is_stmt 1
 13359 09c8 404B     		ldr	r3, .L556+12
 13360 09ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13361 09cc 9BB2     		uxth	r3, r3
 13362 09ce 1A46     		mov	r2, r3	@ movhi
 13363 09d0 9200     		lsls	r2, r2, #2
 13364 09d2 1344     		add	r3, r3, r2
 13365 09d4 1A46     		mov	r2, r3	@ movhi
 13366 09d6 9100     		lsls	r1, r2, #2
 13367 09d8 1A46     		mov	r2, r3	@ movhi
 13368 09da 0B46     		mov	r3, r1	@ movhi
 13369 09dc 1344     		add	r3, r3, r2
 13370 09de 5B00     		lsls	r3, r3, #1
 13371 09e0 9AB2     		uxth	r2, r3
 13372 09e2 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13373 09e6 1344     		add	r3, r3, r2
 13374 09e8 A7F89436 		strh	r3, [r7, #1684]	@ movhi
1806:..\src/command_processing.c ****             sprintf(spi_read_delay_str, "%u - SPI read delay:", first_imu_parameter+N_IMU_Connected
 13375              		.loc 1 1806 0
 13376 09ec B7F89836 		ldrh	r3, [r7, #1688]
 13377 09f0 364A     		ldr	r2, .L556+12
 13378 09f2 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 13379 09f4 1A44     		add	r2, r2, r3
 13380 09f6 07F18003 		add	r3, r7, #128
 13381 09fa 3549     		ldr	r1, .L556+16
 13382 09fc 1846     		mov	r0, r3
 13383 09fe FFF7FEFF 		bl	sprintf
1807:..\src/command_processing.c ****             packet_data[2+start_byte] = TYPE_FLAG;
 13384              		.loc 1 1807 0
 13385 0a02 B7F89436 		ldrh	r3, [r7, #1684]
 13386 0a06 0233     		adds	r3, r3, #2
 13387 0a08 07F58A72 		add	r2, r7, #276
 13388 0a0c 0021     		movs	r1, #0
 13389 0a0e D154     		strb	r1, [r2, r3]
1808:..\src/command_processing.c ****             packet_data[3+start_byte] = 1;
 13390              		.loc 1 1808 0
 13391 0a10 B7F89436 		ldrh	r3, [r7, #1684]
 13392 0a14 0333     		adds	r3, r3, #3
 13393 0a16 07F58A72 		add	r2, r7, #276
 13394 0a1a 0121     		movs	r1, #1
 13395 0a1c D154     		strb	r1, [r2, r3]
1809:..\src/command_processing.c ****             packet_data[4+start_byte] = c_mem.imu.SPI_read_delay;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 300


 13396              		.loc 1 1809 0
 13397 0a1e B7F89436 		ldrh	r3, [r7, #1684]
 13398 0a22 0433     		adds	r3, r3, #4
 13399 0a24 284A     		ldr	r2, .L556+8
 13400 0a26 92F80112 		ldrb	r1, [r2, #513]	@ zero_extendqisi2
 13401 0a2a 07F58A72 		add	r2, r7, #276
 13402 0a2e D154     		strb	r1, [r2, r3]
1810:..\src/command_processing.c ****             switch(c_mem.imu.SPI_read_delay) {
 13403              		.loc 1 1810 0
 13404 0a30 254B     		ldr	r3, .L556+8
 13405 0a32 93F80132 		ldrb	r3, [r3, #513]	@ zero_extendqisi2
 13406 0a36 012B     		cmp	r3, #1
 13407 0a38 17D0     		beq	.L535
 13408 0a3a 022B     		cmp	r3, #2
 13409 0a3c 28D0     		beq	.L536
 13410 0a3e 002B     		cmp	r3, #0
 13411 0a40 00D0     		beq	.L537
1811:..\src/command_processing.c ****                 case 0: 
1812:..\src/command_processing.c ****                     strcat(spi_read_delay_str, " None"); 
1813:..\src/command_processing.c ****                     spi_read_delay_str_len = 26;
1814:..\src/command_processing.c ****                     break;
1815:..\src/command_processing.c ****                 case 1: 
1816:..\src/command_processing.c ****                     strcat(spi_read_delay_str, " Low"); 
1817:..\src/command_processing.c ****                     spi_read_delay_str_len = 25;
1818:..\src/command_processing.c ****                     break;
1819:..\src/command_processing.c ****                 case 2: 
1820:..\src/command_processing.c ****                     strcat(spi_read_delay_str, " High");
1821:..\src/command_processing.c ****                     spi_read_delay_str_len = 26;
1822:..\src/command_processing.c ****                     break;
1823:..\src/command_processing.c ****                 default:
1824:..\src/command_processing.c ****                     break;
 13412              		.loc 1 1824 0
 13413 0a42 38E0     		b	.L538
 13414              	.L537:
1812:..\src/command_processing.c ****                     spi_read_delay_str_len = 26;
 13415              		.loc 1 1812 0
 13416 0a44 07F18003 		add	r3, r7, #128
 13417 0a48 1846     		mov	r0, r3
 13418 0a4a FFF7FEFF 		bl	strlen
 13419 0a4e 0346     		mov	r3, r0
 13420 0a50 1A46     		mov	r2, r3
 13421 0a52 07F18003 		add	r3, r7, #128
 13422 0a56 1344     		add	r3, r3, r2
 13423 0a58 1E4A     		ldr	r2, .L556+20
 13424 0a5a 1068     		ldr	r0, [r2]	@ unaligned
 13425 0a5c 1860     		str	r0, [r3]	@ unaligned
 13426 0a5e 9288     		ldrh	r2, [r2, #4]	@ unaligned
 13427 0a60 9A80     		strh	r2, [r3, #4]	@ unaligned
1813:..\src/command_processing.c ****                     break;
 13428              		.loc 1 1813 0
 13429 0a62 1A23     		movs	r3, #26
 13430 0a64 87F89D36 		strb	r3, [r7, #1693]
1814:..\src/command_processing.c ****                 case 1: 
 13431              		.loc 1 1814 0
 13432 0a68 25E0     		b	.L538
 13433              	.L535:
1816:..\src/command_processing.c ****                     spi_read_delay_str_len = 25;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 301


 13434              		.loc 1 1816 0
 13435 0a6a 07F18003 		add	r3, r7, #128
 13436 0a6e 1846     		mov	r0, r3
 13437 0a70 FFF7FEFF 		bl	strlen
 13438 0a74 0346     		mov	r3, r0
 13439 0a76 1A46     		mov	r2, r3
 13440 0a78 07F18003 		add	r3, r7, #128
 13441 0a7c 1344     		add	r3, r3, r2
 13442 0a7e 164A     		ldr	r2, .L556+24
 13443 0a80 1068     		ldr	r0, [r2]	@ unaligned
 13444 0a82 1860     		str	r0, [r3]	@ unaligned
 13445 0a84 1279     		ldrb	r2, [r2, #4]
 13446 0a86 1A71     		strb	r2, [r3, #4]
1817:..\src/command_processing.c ****                     break;
 13447              		.loc 1 1817 0
 13448 0a88 1923     		movs	r3, #25
 13449 0a8a 87F89D36 		strb	r3, [r7, #1693]
1818:..\src/command_processing.c ****                 case 2: 
 13450              		.loc 1 1818 0
 13451 0a8e 12E0     		b	.L538
 13452              	.L536:
1820:..\src/command_processing.c ****                     spi_read_delay_str_len = 26;
 13453              		.loc 1 1820 0
 13454 0a90 07F18003 		add	r3, r7, #128
 13455 0a94 1846     		mov	r0, r3
 13456 0a96 FFF7FEFF 		bl	strlen
 13457 0a9a 0346     		mov	r3, r0
 13458 0a9c 1A46     		mov	r2, r3
 13459 0a9e 07F18003 		add	r3, r7, #128
 13460 0aa2 1344     		add	r3, r3, r2
 13461 0aa4 0D4A     		ldr	r2, .L556+28
 13462 0aa6 1068     		ldr	r0, [r2]	@ unaligned
 13463 0aa8 1860     		str	r0, [r3]	@ unaligned
 13464 0aaa 9288     		ldrh	r2, [r2, #4]	@ unaligned
 13465 0aac 9A80     		strh	r2, [r3, #4]	@ unaligned
1821:..\src/command_processing.c ****                     break;
 13466              		.loc 1 1821 0
 13467 0aae 1A23     		movs	r3, #26
 13468 0ab0 87F89D36 		strb	r3, [r7, #1693]
1822:..\src/command_processing.c ****                 default:
 13469              		.loc 1 1822 0
 13470 0ab4 00BF     		nop
 13471              	.L538:
1825:..\src/command_processing.c ****             }            
1826:..\src/command_processing.c ****             for(i = spi_read_delay_str_len; i != 0; i--)
 13472              		.loc 1 1826 0
 13473 0ab6 97F89D36 		ldrb	r3, [r7, #1693]	@ zero_extendqisi2
 13474 0aba A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 13475 0abe 28E0     		b	.L539
 13476              	.L557:
 13477              		.align	2
 13478              	.L556:
 13479 0ac0 00000000 		.word	IMU_connected
 13480 0ac4 B8100000 		.word	.LC149
 13481 0ac8 00000000 		.word	c_mem
 13482 0acc 00000000 		.word	N_IMU_Connected
 13483 0ad0 D4100000 		.word	.LC150
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 302


 13484 0ad4 EC100000 		.word	.LC151
 13485 0ad8 F4100000 		.word	.LC152
 13486 0adc FC100000 		.word	.LC153
 13487              	.L540:
1827:..\src/command_processing.c ****                 packet_data[5+start_byte + spi_read_delay_str_len - i] = spi_read_delay_str[spi_rea
 13488              		.loc 1 1827 0 discriminator 3
 13489 0ae0 B7F89436 		ldrh	r3, [r7, #1684]
 13490 0ae4 5A1D     		adds	r2, r3, #5
 13491 0ae6 97F89D36 		ldrb	r3, [r7, #1693]	@ zero_extendqisi2
 13492 0aea 1A44     		add	r2, r2, r3
 13493 0aec B7F8A436 		ldrh	r3, [r7, #1700]
 13494 0af0 D31A     		subs	r3, r2, r3
 13495 0af2 97F89D16 		ldrb	r1, [r7, #1693]	@ zero_extendqisi2
 13496 0af6 B7F8A426 		ldrh	r2, [r7, #1700]
 13497 0afa 8A1A     		subs	r2, r1, r2
 13498 0afc 07F18001 		add	r1, r7, #128
 13499 0b00 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 13500 0b02 07F58A72 		add	r2, r7, #276
 13501 0b06 D154     		strb	r1, [r2, r3]
1826:..\src/command_processing.c ****                 packet_data[5+start_byte + spi_read_delay_str_len - i] = spi_read_delay_str[spi_rea
 13502              		.loc 1 1826 0 discriminator 3
 13503 0b08 B7F8A436 		ldrh	r3, [r7, #1700]
 13504 0b0c 013B     		subs	r3, r3, #1
 13505 0b0e A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 13506              	.L539:
1826:..\src/command_processing.c ****                 packet_data[5+start_byte + spi_read_delay_str_len - i] = spi_read_delay_str[spi_rea
 13507              		.loc 1 1826 0 is_stmt 0 discriminator 1
 13508 0b12 B7F8A436 		ldrh	r3, [r7, #1700]
 13509 0b16 002B     		cmp	r3, #0
 13510 0b18 E2D1     		bne	.L540
1828:..\src/command_processing.c ****             //The following byte indicates the number of menus at the end of the packet to send
1829:..\src/command_processing.c ****             packet_data[5+start_byte + spi_read_delay_str_len] = 1;
 13511              		.loc 1 1829 0 is_stmt 1
 13512 0b1a B7F89436 		ldrh	r3, [r7, #1684]
 13513 0b1e 5A1D     		adds	r2, r3, #5
 13514 0b20 97F89D36 		ldrb	r3, [r7, #1693]	@ zero_extendqisi2
 13515 0b24 1344     		add	r3, r3, r2
 13516 0b26 07F58A72 		add	r2, r7, #276
 13517 0b2a 0121     		movs	r1, #1
 13518 0b2c D154     		strb	r1, [r2, r3]
1830:..\src/command_processing.c ****                   
1831:..\src/command_processing.c ****             
1832:..\src/command_processing.c ****             /*------------PARAMETERS MENU-----------*/
1833:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT;
 13519              		.loc 1 1833 0
 13520 0b2e B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13521 0b32 3233     		adds	r3, r3, #50
 13522 0b34 A7F89436 		strh	r3, [r7, #1684]	@ movhi
1834:..\src/command_processing.c ****             for(i = spi_delay_menu_len; i!= 0; i--)
 13523              		.loc 1 1834 0
 13524 0b38 97F88E36 		ldrb	r3, [r7, #1678]	@ zero_extendqisi2
 13525 0b3c A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 13526 0b40 1AE0     		b	.L541
 13527              	.L542:
1835:..\src/command_processing.c ****                 packet_data[(uint16)(2 + start_byte) + spi_delay_menu_len - i] = spi_delay_menu[spi
 13528              		.loc 1 1835 0 discriminator 3
 13529 0b42 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 303


 13530 0b46 0233     		adds	r3, r3, #2
 13531 0b48 9BB2     		uxth	r3, r3
 13532 0b4a 1A46     		mov	r2, r3
 13533 0b4c 97F88E36 		ldrb	r3, [r7, #1678]	@ zero_extendqisi2
 13534 0b50 1A44     		add	r2, r2, r3
 13535 0b52 B7F8A436 		ldrh	r3, [r7, #1700]
 13536 0b56 D31A     		subs	r3, r2, r3
 13537 0b58 97F88E16 		ldrb	r1, [r7, #1678]	@ zero_extendqisi2
 13538 0b5c B7F8A426 		ldrh	r2, [r7, #1700]
 13539 0b60 8A1A     		subs	r2, r1, r2
 13540 0b62 07F10801 		add	r1, r7, #8
 13541 0b66 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 13542 0b68 07F58A72 		add	r2, r7, #276
 13543 0b6c D154     		strb	r1, [r2, r3]
1834:..\src/command_processing.c ****             for(i = spi_delay_menu_len; i!= 0; i--)
 13544              		.loc 1 1834 0 discriminator 3
 13545 0b6e B7F8A436 		ldrh	r3, [r7, #1700]
 13546 0b72 013B     		subs	r3, r3, #1
 13547 0b74 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 13548              	.L541:
1834:..\src/command_processing.c ****             for(i = spi_delay_menu_len; i!= 0; i--)
 13549              		.loc 1 1834 0 is_stmt 0 discriminator 1
 13550 0b78 B7F8A436 		ldrh	r3, [r7, #1700]
 13551 0b7c 002B     		cmp	r3, #0
 13552 0b7e E0D1     		bne	.L542
1836:..\src/command_processing.c **** 
1837:..\src/command_processing.c ****             packet_data[packet_length - 1] = LCRChecksum(packet_data,packet_length - 1);
 13553              		.loc 1 1837 0 is_stmt 1
 13554 0b80 B7F89636 		ldrh	r3, [r7, #1686]
 13555 0b84 5C1E     		subs	r4, r3, #1
 13556 0b86 B7F89636 		ldrh	r3, [r7, #1686]	@ movhi
 13557 0b8a DBB2     		uxtb	r3, r3
 13558 0b8c 013B     		subs	r3, r3, #1
 13559 0b8e DAB2     		uxtb	r2, r3
 13560 0b90 07F58A73 		add	r3, r7, #276
 13561 0b94 1146     		mov	r1, r2
 13562 0b96 1846     		mov	r0, r3
 13563 0b98 FFF7FEFF 		bl	LCRChecksum
 13564 0b9c 0346     		mov	r3, r0
 13565 0b9e 1A46     		mov	r2, r3
 13566 0ba0 07F58A73 		add	r3, r7, #276
 13567 0ba4 1A55     		strb	r2, [r3, r4]
1838:..\src/command_processing.c ****             commWrite(packet_data, packet_length);
 13568              		.loc 1 1838 0
 13569 0ba6 B7F89626 		ldrh	r2, [r7, #1686]
 13570 0baa 07F58A73 		add	r3, r7, #276
 13571 0bae 1146     		mov	r1, r2
 13572 0bb0 1846     		mov	r0, r3
 13573 0bb2 FFF7FEFF 		bl	commWrite
1839:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 13574              		.loc 1 1839 0
 13575 0bb6 FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
1840:..\src/command_processing.c ****         break;
 13576              		.loc 1 1840 0
 13577 0bba 09E1     		b	.L543
 13578              	.L550:
1841:..\src/command_processing.c **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 304


1842:..\src/command_processing.c **** //=========================================================     other_params
1843:..\src/command_processing.c ****         default: 
1844:..\src/command_processing.c ****             
1845:..\src/command_processing.c ****             if (index < first_imu_parameter-1)
 13579              		.loc 1 1845 0
 13580 0bbc BB1D     		adds	r3, r7, #6
 13581 0bbe 1A88     		ldrh	r2, [r3]
 13582 0bc0 B7F89836 		ldrh	r3, [r7, #1688]
 13583 0bc4 013B     		subs	r3, r3, #1
 13584 0bc6 9A42     		cmp	r2, r3
 13585 0bc8 C0F20181 		blt	.L551
1846:..\src/command_processing.c ****                 break;
1847:..\src/command_processing.c ****             
1848:..\src/command_processing.c ****             if (index == first_imu_parameter+N_IMU_Connected) {
 13586              		.loc 1 1848 0
 13587 0bcc BB1D     		adds	r3, r7, #6
 13588 0bce 1A88     		ldrh	r2, [r3]
 13589 0bd0 B7F89836 		ldrh	r3, [r7, #1688]
 13590 0bd4 8149     		ldr	r1, .L558
 13591 0bd6 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 13592 0bd8 0B44     		add	r3, r3, r1
 13593 0bda 9A42     		cmp	r2, r3
 13594 0bdc 05D1     		bne	.L545
1849:..\src/command_processing.c ****                 g_mem.imu.SPI_read_delay = g_rx.buffer[3];  //SPI read delay - uint8
 13595              		.loc 1 1849 0
 13596 0bde 804B     		ldr	r3, .L558+4
 13597 0be0 DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 13598 0be2 804B     		ldr	r3, .L558+8
 13599 0be4 83F80122 		strb	r2, [r3, #513]
1850:..\src/command_processing.c ****                 break;
 13600              		.loc 1 1850 0
 13601 0be8 F2E0     		b	.L543
 13602              	.L545:
1851:..\src/command_processing.c ****             }
1852:..\src/command_processing.c ****             
1853:..\src/command_processing.c ****             if (index == first_imu_parameter-1) {
 13603              		.loc 1 1853 0
 13604 0bea BB1D     		adds	r3, r7, #6
 13605 0bec 1A88     		ldrh	r2, [r3]
 13606 0bee B7F89836 		ldrh	r3, [r7, #1688]
 13607 0bf2 013B     		subs	r3, r3, #1
 13608 0bf4 9A42     		cmp	r2, r3
 13609 0bf6 05D1     		bne	.L546
1854:..\src/command_processing.c ****                 g_mem.dev.id = g_rx.buffer[3];          //ID - uint8
 13610              		.loc 1 1854 0
 13611 0bf8 794B     		ldr	r3, .L558+4
 13612 0bfa DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 13613 0bfc 794B     		ldr	r3, .L558+8
 13614 0bfe 83F8A020 		strb	r2, [r3, #160]
1855:..\src/command_processing.c ****             }
1856:..\src/command_processing.c ****             else {
1857:..\src/command_processing.c ****             
1858:..\src/command_processing.c ****                 //Set Imu table (index > = first_imu_parameter)
1859:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][0] = g_rx.buffer[3];
1860:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][1] = g_rx.buffer[4];
1861:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][2] = g_rx.buffer[5];
1862:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][3] = g_rx.buffer[6];
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 305


1863:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][4] = g_rx.buffer[7];
1864:..\src/command_processing.c ****                 
1865:..\src/command_processing.c ****                 // Recompute IMU packets dimension
1866:..\src/command_processing.c ****                 imus_data_size = 1; //header    
1867:..\src/command_processing.c ****                 for (i = 0; i < N_IMU_Connected; i++)
1868:..\src/command_processing.c ****                 {
1869:..\src/command_processing.c ****                     single_imu_size[IMU_connected[i]] = 1 + 6*g_mem.imu.IMU_conf[IMU_connected[i]][
1870:..\src/command_processing.c ****                     imus_data_size = imus_data_size + single_imu_size[IMU_connected[i]];
1871:..\src/command_processing.c ****                 }
1872:..\src/command_processing.c ****                 imus_data_size = imus_data_size + 1;    //checksum
1873:..\src/command_processing.c ****             
1874:..\src/command_processing.c ****             }
1875:..\src/command_processing.c ****             
1876:..\src/command_processing.c ****         break;
 13615              		.loc 1 1876 0
 13616 0c02 E5E0     		b	.L543
 13617              	.L546:
1859:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][1] = g_rx.buffer[4];
 13618              		.loc 1 1859 0
 13619 0c04 BB1D     		adds	r3, r7, #6
 13620 0c06 1A88     		ldrh	r2, [r3]
 13621 0c08 B7F89836 		ldrh	r3, [r7, #1688]
 13622 0c0c D31A     		subs	r3, r2, r3
 13623 0c0e 764A     		ldr	r2, .L558+12
 13624 0c10 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13625 0c12 1946     		mov	r1, r3
 13626 0c14 724B     		ldr	r3, .L558+4
 13627 0c16 D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 13628 0c18 724A     		ldr	r2, .L558+8
 13629 0c1a 0B46     		mov	r3, r1
 13630 0c1c 9B00     		lsls	r3, r3, #2
 13631 0c1e 0B44     		add	r3, r3, r1
 13632 0c20 1344     		add	r3, r3, r2
 13633 0c22 03F20223 		addw	r3, r3, #514
 13634 0c26 0246     		mov	r2, r0
 13635 0c28 1A70     		strb	r2, [r3]
1860:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][2] = g_rx.buffer[5];
 13636              		.loc 1 1860 0
 13637 0c2a BB1D     		adds	r3, r7, #6
 13638 0c2c 1A88     		ldrh	r2, [r3]
 13639 0c2e B7F89836 		ldrh	r3, [r7, #1688]
 13640 0c32 D31A     		subs	r3, r2, r3
 13641 0c34 6C4A     		ldr	r2, .L558+12
 13642 0c36 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13643 0c38 1946     		mov	r1, r3
 13644 0c3a 694B     		ldr	r3, .L558+4
 13645 0c3c 1879     		ldrb	r0, [r3, #4]	@ zero_extendqisi2
 13646 0c3e 694A     		ldr	r2, .L558+8
 13647 0c40 0B46     		mov	r3, r1
 13648 0c42 9B00     		lsls	r3, r3, #2
 13649 0c44 0B44     		add	r3, r3, r1
 13650 0c46 1344     		add	r3, r3, r2
 13651 0c48 03F20323 		addw	r3, r3, #515
 13652 0c4c 0246     		mov	r2, r0
 13653 0c4e 1A70     		strb	r2, [r3]
1861:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][3] = g_rx.buffer[6];
 13654              		.loc 1 1861 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 306


 13655 0c50 BB1D     		adds	r3, r7, #6
 13656 0c52 1A88     		ldrh	r2, [r3]
 13657 0c54 B7F89836 		ldrh	r3, [r7, #1688]
 13658 0c58 D31A     		subs	r3, r2, r3
 13659 0c5a 634A     		ldr	r2, .L558+12
 13660 0c5c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13661 0c5e 1946     		mov	r1, r3
 13662 0c60 5F4B     		ldr	r3, .L558+4
 13663 0c62 5879     		ldrb	r0, [r3, #5]	@ zero_extendqisi2
 13664 0c64 5F4A     		ldr	r2, .L558+8
 13665 0c66 0B46     		mov	r3, r1
 13666 0c68 9B00     		lsls	r3, r3, #2
 13667 0c6a 0B44     		add	r3, r3, r1
 13668 0c6c 1344     		add	r3, r3, r2
 13669 0c6e 03F50173 		add	r3, r3, #516
 13670 0c72 0246     		mov	r2, r0
 13671 0c74 1A70     		strb	r2, [r3]
1862:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][4] = g_rx.buffer[7];
 13672              		.loc 1 1862 0
 13673 0c76 BB1D     		adds	r3, r7, #6
 13674 0c78 1A88     		ldrh	r2, [r3]
 13675 0c7a B7F89836 		ldrh	r3, [r7, #1688]
 13676 0c7e D31A     		subs	r3, r2, r3
 13677 0c80 594A     		ldr	r2, .L558+12
 13678 0c82 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13679 0c84 1946     		mov	r1, r3
 13680 0c86 564B     		ldr	r3, .L558+4
 13681 0c88 9879     		ldrb	r0, [r3, #6]	@ zero_extendqisi2
 13682 0c8a 564A     		ldr	r2, .L558+8
 13683 0c8c 0B46     		mov	r3, r1
 13684 0c8e 9B00     		lsls	r3, r3, #2
 13685 0c90 0B44     		add	r3, r3, r1
 13686 0c92 1344     		add	r3, r3, r2
 13687 0c94 03F20523 		addw	r3, r3, #517
 13688 0c98 0246     		mov	r2, r0
 13689 0c9a 1A70     		strb	r2, [r3]
1863:..\src/command_processing.c ****                 
 13690              		.loc 1 1863 0
 13691 0c9c BB1D     		adds	r3, r7, #6
 13692 0c9e 1A88     		ldrh	r2, [r3]
 13693 0ca0 B7F89836 		ldrh	r3, [r7, #1688]
 13694 0ca4 D31A     		subs	r3, r2, r3
 13695 0ca6 504A     		ldr	r2, .L558+12
 13696 0ca8 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13697 0caa 1946     		mov	r1, r3
 13698 0cac 4C4B     		ldr	r3, .L558+4
 13699 0cae D879     		ldrb	r0, [r3, #7]	@ zero_extendqisi2
 13700 0cb0 4C4A     		ldr	r2, .L558+8
 13701 0cb2 0B46     		mov	r3, r1
 13702 0cb4 9B00     		lsls	r3, r3, #2
 13703 0cb6 0B44     		add	r3, r3, r1
 13704 0cb8 1344     		add	r3, r3, r2
 13705 0cba 03F20623 		addw	r3, r3, #518
 13706 0cbe 0246     		mov	r2, r0
 13707 0cc0 1A70     		strb	r2, [r3]
1866:..\src/command_processing.c ****                 for (i = 0; i < N_IMU_Connected; i++)
 13708              		.loc 1 1866 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 307


 13709 0cc2 4A4B     		ldr	r3, .L558+16
 13710 0cc4 0122     		movs	r2, #1
 13711 0cc6 1A60     		str	r2, [r3]
1867:..\src/command_processing.c ****                 {
 13712              		.loc 1 1867 0
 13713 0cc8 0023     		movs	r3, #0
 13714 0cca A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 13715 0cce 71E0     		b	.L548
 13716              	.L549:
1869:..\src/command_processing.c ****                     imus_data_size = imus_data_size + single_imu_size[IMU_connected[i]];
 13717              		.loc 1 1869 0 discriminator 3
 13718 0cd0 B7F8A436 		ldrh	r3, [r7, #1700]
 13719 0cd4 444A     		ldr	r2, .L558+12
 13720 0cd6 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13721 0cd8 1C46     		mov	r4, r3
 13722 0cda B7F8A436 		ldrh	r3, [r7, #1700]
 13723 0cde 424A     		ldr	r2, .L558+12
 13724 0ce0 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13725 0ce2 1946     		mov	r1, r3
 13726 0ce4 3F4A     		ldr	r2, .L558+8
 13727 0ce6 0B46     		mov	r3, r1
 13728 0ce8 9B00     		lsls	r3, r3, #2
 13729 0cea 0B44     		add	r3, r3, r1
 13730 0cec 1344     		add	r3, r3, r2
 13731 0cee 03F20223 		addw	r3, r3, #514
 13732 0cf2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13733 0cf4 1A46     		mov	r2, r3
 13734 0cf6 1346     		mov	r3, r2
 13735 0cf8 5B00     		lsls	r3, r3, #1
 13736 0cfa 1344     		add	r3, r3, r2
 13737 0cfc 5B00     		lsls	r3, r3, #1
 13738 0cfe 5A1C     		adds	r2, r3, #1
 13739 0d00 B7F8A436 		ldrh	r3, [r7, #1700]
 13740 0d04 3849     		ldr	r1, .L558+12
 13741 0d06 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 13742 0d08 1846     		mov	r0, r3
 13743 0d0a 3649     		ldr	r1, .L558+8
 13744 0d0c 0346     		mov	r3, r0
 13745 0d0e 9B00     		lsls	r3, r3, #2
 13746 0d10 0344     		add	r3, r3, r0
 13747 0d12 0B44     		add	r3, r3, r1
 13748 0d14 03F20323 		addw	r3, r3, #515
 13749 0d18 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13750 0d1a 1946     		mov	r1, r3
 13751 0d1c 0B46     		mov	r3, r1
 13752 0d1e 5B00     		lsls	r3, r3, #1
 13753 0d20 0B44     		add	r3, r3, r1
 13754 0d22 5B00     		lsls	r3, r3, #1
 13755 0d24 1A44     		add	r2, r2, r3
 13756 0d26 B7F8A436 		ldrh	r3, [r7, #1700]
 13757 0d2a 2F49     		ldr	r1, .L558+12
 13758 0d2c CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 13759 0d2e 1846     		mov	r0, r3
 13760 0d30 2C49     		ldr	r1, .L558+8
 13761 0d32 0346     		mov	r3, r0
 13762 0d34 9B00     		lsls	r3, r3, #2
 13763 0d36 0344     		add	r3, r3, r0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 308


 13764 0d38 0B44     		add	r3, r3, r1
 13765 0d3a 03F50173 		add	r3, r3, #516
 13766 0d3e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13767 0d40 1946     		mov	r1, r3
 13768 0d42 0B46     		mov	r3, r1
 13769 0d44 5B00     		lsls	r3, r3, #1
 13770 0d46 0B44     		add	r3, r3, r1
 13771 0d48 5B00     		lsls	r3, r3, #1
 13772 0d4a 1A44     		add	r2, r2, r3
 13773 0d4c B7F8A436 		ldrh	r3, [r7, #1700]
 13774 0d50 2549     		ldr	r1, .L558+12
 13775 0d52 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 13776 0d54 1846     		mov	r0, r3
 13777 0d56 2349     		ldr	r1, .L558+8
 13778 0d58 0346     		mov	r3, r0
 13779 0d5a 9B00     		lsls	r3, r3, #2
 13780 0d5c 0344     		add	r3, r3, r0
 13781 0d5e 0B44     		add	r3, r3, r1
 13782 0d60 03F20523 		addw	r3, r3, #517
 13783 0d64 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13784 0d66 1B01     		lsls	r3, r3, #4
 13785 0d68 1A44     		add	r2, r2, r3
 13786 0d6a B7F8A436 		ldrh	r3, [r7, #1700]
 13787 0d6e 1E49     		ldr	r1, .L558+12
 13788 0d70 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 13789 0d72 1846     		mov	r0, r3
 13790 0d74 1B49     		ldr	r1, .L558+8
 13791 0d76 0346     		mov	r3, r0
 13792 0d78 9B00     		lsls	r3, r3, #2
 13793 0d7a 0344     		add	r3, r3, r0
 13794 0d7c 0B44     		add	r3, r3, r1
 13795 0d7e 03F20623 		addw	r3, r3, #518
 13796 0d82 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13797 0d84 5B00     		lsls	r3, r3, #1
 13798 0d86 1344     		add	r3, r3, r2
 13799 0d88 0133     		adds	r3, r3, #1
 13800 0d8a 194A     		ldr	r2, .L558+20
 13801 0d8c 42F82430 		str	r3, [r2, r4, lsl #2]
1870:..\src/command_processing.c ****                 }
 13802              		.loc 1 1870 0 discriminator 3
 13803 0d90 B7F8A436 		ldrh	r3, [r7, #1700]
 13804 0d94 144A     		ldr	r2, .L558+12
 13805 0d96 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13806 0d98 1A46     		mov	r2, r3
 13807 0d9a 154B     		ldr	r3, .L558+20
 13808 0d9c 53F82220 		ldr	r2, [r3, r2, lsl #2]
 13809 0da0 124B     		ldr	r3, .L558+16
 13810 0da2 1B68     		ldr	r3, [r3]
 13811 0da4 1344     		add	r3, r3, r2
 13812 0da6 114A     		ldr	r2, .L558+16
 13813 0da8 1360     		str	r3, [r2]
1867:..\src/command_processing.c ****                 {
 13814              		.loc 1 1867 0 discriminator 3
 13815 0daa B7F8A436 		ldrh	r3, [r7, #1700]
 13816 0dae 0133     		adds	r3, r3, #1
 13817 0db0 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 13818              	.L548:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 309


1867:..\src/command_processing.c ****                 {
 13819              		.loc 1 1867 0 is_stmt 0 discriminator 1
 13820 0db4 094B     		ldr	r3, .L558
 13821 0db6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13822 0db8 9BB2     		uxth	r3, r3
 13823 0dba B7F8A426 		ldrh	r2, [r7, #1700]
 13824 0dbe 9A42     		cmp	r2, r3
 13825 0dc0 86D3     		bcc	.L549
1872:..\src/command_processing.c ****             
 13826              		.loc 1 1872 0 is_stmt 1
 13827 0dc2 0A4B     		ldr	r3, .L558+16
 13828 0dc4 1B68     		ldr	r3, [r3]
 13829 0dc6 0133     		adds	r3, r3, #1
 13830 0dc8 084A     		ldr	r2, .L558+16
 13831 0dca 1360     		str	r3, [r2]
 13832              		.loc 1 1876 0
 13833 0dcc 00E0     		b	.L543
 13834              	.L551:
1846:..\src/command_processing.c ****             
 13835              		.loc 1 1846 0
 13836 0dce 00BF     		nop
 13837              	.L543:
1877:..\src/command_processing.c ****     }
1878:..\src/command_processing.c **** }
 13838              		.loc 1 1878 0 discriminator 1
 13839 0dd0 00BF     		nop
 13840 0dd2 07F5D567 		add	r7, r7, #1704
 13841              		.cfi_def_cfa_offset 16
 13842 0dd6 BD46     		mov	sp, r7
 13843              		.cfi_def_cfa_register 13
 13844              		@ sp needed
 13845 0dd8 B0BD     		pop	{r4, r5, r7, pc}
 13846              	.L559:
 13847 0dda 00BF     		.align	2
 13848              	.L558:
 13849 0ddc 00000000 		.word	N_IMU_Connected
 13850 0de0 00000000 		.word	g_rx
 13851 0de4 00000000 		.word	g_mem
 13852 0de8 00000000 		.word	IMU_connected
 13853 0dec 00000000 		.word	imus_data_size
 13854 0df0 00000000 		.word	single_imu_size
 13855              		.cfi_endproc
 13856              	.LFE70:
 13857              		.size	get_IMU_param_list, .-get_IMU_param_list
 13858              		.section	.text.setZeros,"ax",%progbits
 13859              		.align	2
 13860              		.global	setZeros
 13861              		.thumb
 13862              		.thumb_func
 13863              		.type	setZeros, %function
 13864              	setZeros:
 13865              	.LFB71:
1879:..\src/command_processing.c **** 
1880:..\src/command_processing.c **** //==============================================================================
1881:..\src/command_processing.c **** //                                                            COMMAND SET ZEROS
1882:..\src/command_processing.c **** //==============================================================================
1883:..\src/command_processing.c **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 310


1884:..\src/command_processing.c **** void setZeros()
1885:..\src/command_processing.c **** {
 13866              		.loc 1 1885 0
 13867              		.cfi_startproc
 13868              		@ args = 0, pretend = 0, frame = 8
 13869              		@ frame_needed = 1, uses_anonymous_args = 0
 13870 0000 B0B5     		push	{r4, r5, r7, lr}
 13871              		.cfi_def_cfa_offset 16
 13872              		.cfi_offset 4, -16
 13873              		.cfi_offset 5, -12
 13874              		.cfi_offset 7, -8
 13875              		.cfi_offset 14, -4
 13876 0002 82B0     		sub	sp, sp, #8
 13877              		.cfi_def_cfa_offset 24
 13878 0004 00AF     		add	r7, sp, #0
 13879              		.cfi_def_cfa_register 7
1886:..\src/command_processing.c ****     uint8 CYDATA i, j;        // iterator
1887:..\src/command_processing.c ****     
1888:..\src/command_processing.c ****     for (j = 0; j < N_ENCODER_LINE_MAX; j++) {
 13880              		.loc 1 1888 0
 13881 0006 0023     		movs	r3, #0
 13882 0008 BB71     		strb	r3, [r7, #6]
 13883 000a 2FE0     		b	.L561
 13884              	.L564:
1889:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; i++) {
 13885              		.loc 1 1889 0
 13886 000c 0023     		movs	r3, #0
 13887 000e FB71     		strb	r3, [r7, #7]
 13888 0010 22E0     		b	.L562
 13889              	.L563:
1890:..\src/command_processing.c ****             g_mem.enc[j].m_off[i] = (int32)(data_encoder_raw[j][i]);
 13890              		.loc 1 1890 0 discriminator 3
 13891 0012 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 13892 0014 F879     		ldrb	r0, [r7, #7]	@ zero_extendqisi2
 13893 0016 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 13894 0018 FC79     		ldrb	r4, [r7, #7]	@ zero_extendqisi2
 13895 001a 194D     		ldr	r5, .L565
 13896 001c 0B46     		mov	r3, r1
 13897 001e 9B00     		lsls	r3, r3, #2
 13898 0020 0B44     		add	r3, r3, r1
 13899 0022 2344     		add	r3, r3, r4
 13900 0024 55F82330 		ldr	r3, [r5, r3, lsl #2]
 13901 0028 1C46     		mov	r4, r3
 13902 002a 1649     		ldr	r1, .L565+4
 13903 002c 1346     		mov	r3, r2
 13904 002e 5B00     		lsls	r3, r3, #1
 13905 0030 1344     		add	r3, r3, r2
 13906 0032 9B00     		lsls	r3, r3, #2
 13907 0034 0344     		add	r3, r3, r0
 13908 0036 6633     		adds	r3, r3, #102
 13909 0038 41F82340 		str	r4, [r1, r3, lsl #2]
1891:..\src/command_processing.c ****             g_meas[j].rot[i] = (int8)0;
 13910              		.loc 1 1891 0 discriminator 3
 13911 003c BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 13912 003e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 13913 0040 1149     		ldr	r1, .L565+8
 13914 0042 3420     		movs	r0, #52
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 311


 13915 0044 00FB02F2 		mul	r2, r0, r2
 13916 0048 0A44     		add	r2, r2, r1
 13917 004a 1344     		add	r3, r3, r2
 13918 004c 1833     		adds	r3, r3, #24
 13919 004e 0022     		movs	r2, #0
 13920 0050 1A70     		strb	r2, [r3]
1889:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; i++) {
 13921              		.loc 1 1889 0 discriminator 3
 13922 0052 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 13923 0054 0133     		adds	r3, r3, #1
 13924 0056 FB71     		strb	r3, [r7, #7]
 13925              	.L562:
1889:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; i++) {
 13926              		.loc 1 1889 0 is_stmt 0 discriminator 1
 13927 0058 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 13928 005a 022B     		cmp	r3, #2
 13929 005c D9D9     		bls	.L563
1892:..\src/command_processing.c ****         }
1893:..\src/command_processing.c ****         reset_last_value_flag[j] = 1;
 13930              		.loc 1 1893 0 is_stmt 1 discriminator 2
 13931 005e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 13932 0060 0A4A     		ldr	r2, .L565+12
 13933 0062 0121     		movs	r1, #1
 13934 0064 D154     		strb	r1, [r2, r3]
1888:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; i++) {
 13935              		.loc 1 1888 0 discriminator 2
 13936 0066 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 13937 0068 0133     		adds	r3, r3, #1
 13938 006a BB71     		strb	r3, [r7, #6]
 13939              	.L561:
1888:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; i++) {
 13940              		.loc 1 1888 0 is_stmt 0 discriminator 1
 13941 006c BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 13942 006e 012B     		cmp	r3, #1
 13943 0070 CCD9     		bls	.L564
1894:..\src/command_processing.c ****     }
1895:..\src/command_processing.c **** 
1896:..\src/command_processing.c ****     sendAcknowledgment(ACK_OK);
 13944              		.loc 1 1896 0 is_stmt 1
 13945 0072 0120     		movs	r0, #1
 13946 0074 FFF7FEFF 		bl	sendAcknowledgment
1897:..\src/command_processing.c **** }
 13947              		.loc 1 1897 0
 13948 0078 00BF     		nop
 13949 007a 0837     		adds	r7, r7, #8
 13950              		.cfi_def_cfa_offset 16
 13951 007c BD46     		mov	sp, r7
 13952              		.cfi_def_cfa_register 13
 13953              		@ sp needed
 13954 007e B0BD     		pop	{r4, r5, r7, pc}
 13955              	.L566:
 13956              		.align	2
 13957              	.L565:
 13958 0080 00000000 		.word	data_encoder_raw
 13959 0084 00000000 		.word	g_mem
 13960 0088 00000000 		.word	g_meas
 13961 008c 00000000 		.word	reset_last_value_flag
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 312


 13962              		.cfi_endproc
 13963              	.LFE71:
 13964              		.size	setZeros, .-setZeros
 13965              		.section	.rodata
 13966              		.align	2
 13967              	.LC154:
 13968 1134 0D0A00   		.ascii	"\015\012\000"
 13969 1137 00       		.align	2
 13970              	.LC155:
 13971 1138 4669726D 		.ascii	"Firmware version: \000"
 13971      77617265 
 13971      20766572 
 13971      73696F6E 
 13971      3A2000
 13972 114b 00       		.align	2
 13973              	.LC156:
 13974 114c 456C6563 		.ascii	"Electrostimulation firmware (based on Generic 1.10."
 13974      74726F73 
 13974      74696D75 
 13974      6C617469 
 13974      6F6E2066 
 13975 117f 31205053 		.ascii	"1 PSoC5)\000"
 13975      6F433529 
 13975      00
 13976              		.align	2
 13977              	.LC157:
 13978 1188 2E0D0A0D 		.ascii	".\015\012\015\012\000"
 13978      0A00
 13979 118e 0000     		.align	2
 13980              	.LC158:
 13981 1190 44455649 		.ascii	"DEVICE INFO\015\012\000"
 13981      43452049 
 13981      4E464F0D 
 13981      0A00
 13982 119e 0000     		.align	2
 13983              	.LC159:
 13984 11a0 49443A20 		.ascii	"ID: %d\015\012\000"
 13984      25640D0A 
 13984      00
 13985 11a9 000000   		.align	2
 13986              	.LC160:
 13987 11ac 44657669 		.ascii	"Device: SOFTHAND PRO\015\012\000"
 13987      63653A20 
 13987      534F4654 
 13987      48414E44 
 13987      2050524F 
 13988 11c3 00       		.align	2
 13989              	.LC161:
 13990 11c4 44657669 		.ascii	"Device: GENERIC 2 MOTORS\015\012\000"
 13990      63653A20 
 13990      47454E45 
 13990      52494320 
 13990      32204D4F 
 13991 11df 00       		.align	2
 13992              	.LC162:
 13993 11e0 44657669 		.ascii	"Device: AIR CHAMBERS HAPTIC FEEDBACK\015\012\000"
 13993      63653A20 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 313


 13993      41495220 
 13993      4348414D 
 13993      42455253 
 13994 1207 00       		.align	2
 13995              	.LC163:
 13996 1208 44657669 		.ascii	"Device: OTTOBOCK 6v ACTIVE WRIST MASTER\015\012\000"
 13996      63653A20 
 13996      4F54544F 
 13996      424F434B 
 13996      20367620 
 13997 1232 0000     		.align	2
 13998              	.LC164:
 13999 1234 44657669 		.ascii	"Device: SOFTHAND 2 MOTORS\015\012\000"
 13999      63653A20 
 13999      534F4654 
 13999      48414E44 
 13999      2032204D 
 14000              		.align	2
 14001              	.LC165:
 14002 1250 48616E64 		.ascii	"Hand side: RIGHT\015\012\000"
 14002      20736964 
 14002      653A2052 
 14002      49474854 
 14002      0D0A00
 14003 1263 00       		.align	2
 14004              	.LC166:
 14005 1264 48616E64 		.ascii	"Hand side: LEFT\015\012\000"
 14005      20736964 
 14005      653A204C 
 14005      4546540D 
 14005      0A00
 14006 1276 0000     		.align	2
 14007              	.LC167:
 14008 1278 55736572 		.ascii	"User: MARIA\015\012\000"
 14008      3A204D41 
 14008      5249410D 
 14008      0A00
 14009 1286 0000     		.align	2
 14010              	.LC168:
 14011 1288 55736572 		.ascii	"User: R01\015\012\000"
 14011      3A205230 
 14011      310D0A00 
 14012              		.align	2
 14013              	.LC169:
 14014 1294 55736572 		.ascii	"User: GENERIC USER\015\012\000"
 14014      3A204745 
 14014      4E455249 
 14014      43205553 
 14014      45520D0A 
 14015 12a9 000000   		.align	2
 14016              	.LC170:
 14017 12ac 4D4F544F 		.ascii	"MOTOR %d INFO\015\012\000"
 14017      52202564 
 14017      20494E46 
 14017      4F0D0A00 
 14018              		.align	2
 14019              	.LC171:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 314


 14020 12bc 4D6F746F 		.ascii	"Motor reference\000"
 14020      72207265 
 14020      66657265 
 14020      6E636500 
 14021              		.align	2
 14022              	.LC172:
 14023 12cc 202D2043 		.ascii	" - Currents: \000"
 14023      75727265 
 14023      6E74733A 
 14023      2000
 14024 12da 0000     		.align	2
 14025              	.LC173:
 14026 12dc 202D2050 		.ascii	" - Pwm: \000"
 14026      776D3A20 
 14026      00
 14027 12e5 000000   		.align	2
 14028              	.LC174:
 14029 12e8 202D2050 		.ascii	" - Position: \000"
 14029      6F736974 
 14029      696F6E3A 
 14029      2000
 14030 12f6 0000     		.align	2
 14031              	.LC175:
 14032 12f8 25642000 		.ascii	"%d \000"
 14033              		.align	2
 14034              	.LC176:
 14035 12fc 4D6F746F 		.ascii	"Motor enabled: \000"
 14035      7220656E 
 14035      61626C65 
 14035      643A2000 
 14036              		.align	2
 14037              	.LC177:
 14038 130c 5945530D 		.ascii	"YES\015\012\000"
 14038      0A00
 14039 1312 0000     		.align	2
 14040              	.LC178:
 14041 1314 4E4F0D0A 		.ascii	"NO\015\012\000"
 14041      00
 14042 1319 000000   		.align	2
 14043              	.LC179:
 14044 131c 50574D20 		.ascii	"PWM rescaling activation: \000"
 14044      72657363 
 14044      616C696E 
 14044      67206163 
 14044      74697661 
 14045 1337 00       		.align	2
 14046              	.LC180:
 14047 1338 5945530A 		.ascii	"YES\012\000"
 14047      00
 14048 133d 000000   		.align	2
 14049              	.LC181:
 14050 1340 4E4F0A00 		.ascii	"NO\012\000"
 14051              		.align	2
 14052              	.LC182:
 14053 1344 50574D20 		.ascii	"PWM Limit: %d\015\012\000"
 14053      4C696D69 
 14053      743A2025 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 315


 14053      640D0A00 
 14054              		.align	2
 14055              	.LC183:
 14056 1354 0D0A4D45 		.ascii	"\015\012MEASUREMENTS INFO\015\012\000"
 14056      41535552 
 14056      454D454E 
 14056      54532049 
 14056      4E464F0D 
 14057 136a 0000     		.align	2
 14058              	.LC184:
 14059 136c 53656E73 		.ascii	"Sensor value: \000"
 14059      6F722076 
 14059      616C7565 
 14059      3A2000
 14060 137b 00       		.align	2
 14061              	.LC185:
 14062 137c 256400   		.ascii	"%d\000"
 14063 137f 00       		.align	2
 14064              	.LC186:
 14065 1380 2C2000   		.ascii	", \000"
 14066 1383 00       		.align	2
 14067              	.LC187:
 14068 1384 4A6F7973 		.ascii	"Joystick measurements: %d, %d\000"
 14068      7469636B 
 14068      206D6561 
 14068      73757265 
 14068      6D656E74 
 14069 13a2 0000     		.align	2
 14070              	.LC188:
 14071 13a4 42617474 		.ascii	"Battery %d Voltage (mV): %ld\000"
 14071      65727920 
 14071      25642056 
 14071      6F6C7461 
 14071      67652028 
 14072 13c1 000000   		.align	2
 14073              	.LC189:
 14074 13c4 46756C6C 		.ascii	"Full charge power tension %d (mV): %ld\000"
 14074      20636861 
 14074      72676520 
 14074      706F7765 
 14074      72207465 
 14075 13eb 00       		.align	2
 14076              	.LC190:
 14077 13ec 43757272 		.ascii	"Current %d (mA): %ld\000"
 14077      656E7420 
 14077      25642028 
 14077      6D41293A 
 14077      20256C64 
 14078 1401 000000   		.align	2
 14079              	.LC191:
 14080 1404 4C617374 		.ascii	"Last Grasp Hold Current %d (mA): %ld\000"
 14080      20477261 
 14080      73702048 
 14080      6F6C6420 
 14080      43757272 
 14081 1429 000000   		.align	2
 14082              	.LC192:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 316


 14083 142c 0D0A4D4F 		.ascii	"\015\012MOTOR %d CONFIGURATION\015\012\000"
 14083      544F5220 
 14083      25642043 
 14083      4F4E4649 
 14083      47555241 
 14084 1447 00       		.align	2
 14085              	.LC193:
 14086 1448 50494420 		.ascii	"PID Controller: \000"
 14086      436F6E74 
 14086      726F6C6C 
 14086      65723A20 
 14086      00
 14087              		.global	__aeabi_i2d
 14088              		.global	__aeabi_ddiv
 14089 1459 000000   		.align	2
 14090              	.LC194:
 14091 145c 50202D3E 		.ascii	"P -> %f  \000"
 14091      20256620 
 14091      2000
 14092 1466 0000     		.align	2
 14093              	.LC195:
 14094 1468 49202D3E 		.ascii	"I -> %f  \000"
 14094      20256620 
 14094      2000
 14095 1472 0000     		.align	2
 14096              	.LC196:
 14097 1474 44202D3E 		.ascii	"D -> %f\015\012\000"
 14097      2025660D 
 14097      0A00
 14098 147e 0000     		.align	2
 14099              	.LC197:
 14100 1480 43757272 		.ascii	"Current PID Controller: \000"
 14100      656E7420 
 14100      50494420 
 14100      436F6E74 
 14100      726F6C6C 
 14101 1499 000000   		.align	2
 14102              	.LC198:
 14103 149c 53746172 		.ascii	"Startup activation: YES\015\012\000"
 14103      74757020 
 14103      61637469 
 14103      76617469 
 14103      6F6E3A20 
 14104 14b6 0000     		.align	2
 14105              	.LC199:
 14106 14b8 53746172 		.ascii	"Startup activation: NO\015\012\000"
 14106      74757020 
 14106      61637469 
 14106      76617469 
 14106      6F6E3A20 
 14107 14d1 000000   		.align	2
 14108              	.LC200:
 14109 14d4 496E7075 		.ascii	"Input mode: USB\015\012\000"
 14109      74206D6F 
 14109      64653A20 
 14109      5553420D 
 14109      0A00
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 317


 14110 14e6 0000     		.align	2
 14111              	.LC201:
 14112 14e8 496E7075 		.ascii	"Input mode: Handle\015\012\000"
 14112      74206D6F 
 14112      64653A20 
 14112      48616E64 
 14112      6C650D0A 
 14113 14fd 000000   		.align	2
 14114              	.LC202:
 14115 1500 496E7075 		.ascii	"Input mode: EMG proportional\015\012\000"
 14115      74206D6F 
 14115      64653A20 
 14115      454D4720 
 14115      70726F70 
 14116 151f 00       		.align	2
 14117              	.LC203:
 14118 1520 496E7075 		.ascii	"Input mode: EMG integral\015\012\000"
 14118      74206D6F 
 14118      64653A20 
 14118      454D4720 
 14118      696E7465 
 14119 153b 00       		.align	2
 14120              	.LC204:
 14121 153c 496E7075 		.ascii	"Input mode: EMG FCFS\015\012\000"
 14121      74206D6F 
 14121      64653A20 
 14121      454D4720 
 14121      46434653 
 14122 1553 00       		.align	2
 14123              	.LC205:
 14124 1554 496E7075 		.ascii	"Input mode: EMG FCFS ADV\015\012\000"
 14124      74206D6F 
 14124      64653A20 
 14124      454D4720 
 14124      46434653 
 14125 156f 00       		.align	2
 14126              	.LC206:
 14127 1570 496E7075 		.ascii	"Input mode: Joystick\015\012\000"
 14127      74206D6F 
 14127      64653A20 
 14127      4A6F7973 
 14127      7469636B 
 14128 1587 00       		.align	2
 14129              	.LC207:
 14130 1588 496E7075 		.ascii	"Input mode: EMG proportional Normally Closed\015\012"
 14130      74206D6F 
 14130      64653A20 
 14130      454D4720 
 14130      70726F70 
 14131 15b6 00       		.ascii	"\000"
 14132 15b7 00       		.align	2
 14133              	.LC208:
 14134 15b8 436F6E74 		.ascii	"Control mode: Position\015\012\000"
 14134      726F6C20 
 14134      6D6F6465 
 14134      3A20506F 
 14134      73697469 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 318


 14135 15d1 000000   		.align	2
 14136              	.LC209:
 14137 15d4 436F6E74 		.ascii	"Control mode: PWM\015\012\000"
 14137      726F6C20 
 14137      6D6F6465 
 14137      3A205057 
 14137      4D0D0A00 
 14138              		.align	2
 14139              	.LC210:
 14140 15e8 436F6E74 		.ascii	"Control mode: Current\015\012\000"
 14140      726F6C20 
 14140      6D6F6465 
 14140      3A204375 
 14140      7272656E 
 14141              		.align	2
 14142              	.LC211:
 14143 1600 436F6E74 		.ascii	"Control mode: Position and Current\015\012\000"
 14143      726F6C20 
 14143      6D6F6465 
 14143      3A20506F 
 14143      73697469 
 14144 1625 000000   		.align	2
 14145              	.LC212:
 14146 1628 4162736F 		.ascii	"Absolute encoder position: YES\015\012\000"
 14146      6C757465 
 14146      20656E63 
 14146      6F646572 
 14146      20706F73 
 14147 1649 000000   		.align	2
 14148              	.LC213:
 14149 164c 4162736F 		.ascii	"Absolute encoder position: NO\015\012\000"
 14149      6C757465 
 14149      20656E63 
 14149      6F646572 
 14149      20706F73 
 14150              		.align	2
 14151              	.LC214:
 14152 166c 4D6F746F 		.ascii	"Motor-Handle Ratio: %d\015\012\000"
 14152      722D4861 
 14152      6E646C65 
 14152      20526174 
 14152      696F3A20 
 14153 1685 000000   		.align	2
 14154              	.LC215:
 14155 1688 456E636F 		.ascii	"Encoder indices used for motor control: \000"
 14155      64657220 
 14155      696E6469 
 14155      63657320 
 14155      75736564 
 14156 16b1 000000   		.align	2
 14157              	.LC216:
 14158 16b4 46697273 		.ascii	"First Gear: %d teeth\015\012\000"
 14158      74204765 
 14158      61723A20 
 14158      25642074 
 14158      65657468 
 14159 16cb 00       		.align	2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 319


 14160              	.LC217:
 14161 16cc 5365636F 		.ascii	"Second Gear: %d teeth\015\012\000"
 14161      6E642047 
 14161      6561723A 
 14161      20256420 
 14161      74656574 
 14162              		.align	2
 14163              	.LC218:
 14164 16e4 47656172 		.ascii	"Gear invariant: %d\015\012\000"
 14164      20696E76 
 14164      61726961 
 14164      6E743A20 
 14164      25640D0A 
 14165 16f9 000000   		.align	2
 14166              	.LC219:
 14167 16fc 53656E73 		.ascii	"Sensor resolution: \000"
 14167      6F722072 
 14167      65736F6C 
 14167      7574696F 
 14167      6E3A2000 
 14168              		.align	2
 14169              	.LC220:
 14170 1710 4D656173 		.ascii	"Measurement Offset: \000"
 14170      7572656D 
 14170      656E7420 
 14170      4F666673 
 14170      65743A20 
 14171 1725 000000   		.align	2
 14172              	.LC221:
 14173 1728 256C6400 		.ascii	"%ld\000"
 14174              		.align	2
 14175              	.LC222:
 14176 172c 4D656173 		.ascii	"Measurement Multiplier: \000"
 14176      7572656D 
 14176      656E7420 
 14176      4D756C74 
 14176      69706C69 
 14177              		.global	__aeabi_f2d
 14178 1745 000000   		.align	2
 14179              	.LC223:
 14180 1748 256600   		.ascii	"%f\000"
 14181 174b 00       		.align	2
 14182              	.LC224:
 14183 174c 43757272 		.ascii	"Current lookup table: %f, %f, %f, %f, %f, %f\015\012"
 14183      656E7420 
 14183      6C6F6F6B 
 14183      75702074 
 14183      61626C65 
 14184 177a 00       		.ascii	"\000"
 14185 177b 00       		.align	2
 14186              	.LC225:
 14187 177c 506F7369 		.ascii	"Position limit active: %d\000"
 14187      74696F6E 
 14187      206C696D 
 14187      69742061 
 14187      63746976 
 14188 1796 0000     		.align	2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 320


 14189              	.LC226:
 14190 1798 506F7369 		.ascii	"Position limit motor: inf -> %ld  \000"
 14190      74696F6E 
 14190      206C696D 
 14190      6974206D 
 14190      6F746F72 
 14191 17bb 00       		.align	2
 14192              	.LC227:
 14193 17bc 73757020 		.ascii	"sup -> %ld\015\012\000"
 14193      2D3E2025 
 14193      6C640D0A 
 14193      00
 14194 17c9 000000   		.align	2
 14195              	.LC228:
 14196 17cc 4D617820 		.ascii	"Max step pos and neg: %d %d\000"
 14196      73746570 
 14196      20706F73 
 14196      20616E64 
 14196      206E6567 
 14197              		.align	2
 14198              	.LC229:
 14199 17e8 43757272 		.ascii	"Current limit: %d\015\012\000"
 14199      656E7420 
 14199      6C696D69 
 14199      743A2025 
 14199      640D0A00 
 14200              		.align	2
 14201              	.LC230:
 14202 17fc 50574D20 		.ascii	"PWM Frequency: 30 Hz\015\012\000"
 14202      46726571 
 14202      75656E63 
 14202      793A2033 
 14202      3020487A 
 14203 1813 00       		.align	2
 14204              	.LC231:
 14205 1814 50574D20 		.ascii	"PWM Frequency: 100 Hz\015\012\000"
 14205      46726571 
 14205      75656E63 
 14205      793A2031 
 14205      30302048 
 14206              		.align	2
 14207              	.LC232:
 14208 182c 50574D20 		.ascii	"PWM Frequency: 300 Hz\015\012\000"
 14208      46726571 
 14208      75656E63 
 14208      793A2033 
 14208      30302048 
 14209              		.align	2
 14210              	.LC233:
 14211 1844 50574D20 		.ascii	"PWM Frequency: 1 KHz\015\012\000"
 14211      46726571 
 14211      75656E63 
 14211      793A2031 
 14211      204B487A 
 14212 185b 00       		.align	2
 14213              	.LC234:
 14214 185c 50574D20 		.ascii	"PWM Frequency: 3 KHz\015\012\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 321


 14214      46726571 
 14214      75656E63 
 14214      793A2033 
 14214      204B487A 
 14215 1873 00       		.align	2
 14216              	.LC235:
 14217 1874 50574D20 		.ascii	"PWM rate limiter value: %d\015\012\000"
 14217      72617465 
 14217      206C696D 
 14217      69746572 
 14217      2076616C 
 14218 1891 000000   		.align	2
 14219              	.LC236:
 14220 1894 4E6F7420 		.ascii	"Not reversible motor: YES\015\012\000"
 14220      72657665 
 14220      72736962 
 14220      6C65206D 
 14220      6F746F72 
 14221              		.align	2
 14222              	.LC237:
 14223 18b0 4E6F7420 		.ascii	"Not reversible motor: NO\015\012\000"
 14223      72657665 
 14223      72736962 
 14223      6C65206D 
 14223      6F746F72 
 14224 18cb 00       		.align	2
 14225              	.LC238:
 14226 18cc 454D4720 		.ascii	"EMG CONFIGURATION\015\012\000"
 14226      434F4E46 
 14226      49475552 
 14226      4154494F 
 14226      4E0D0A00 
 14227              		.align	2
 14228              	.LC239:
 14229 18e0 454D4720 		.ascii	"EMG thresholds [0 - 1024]: %u, %u\000"
 14229      74687265 
 14229      73686F6C 
 14229      6473205B 
 14229      30202D20 
 14230 1902 0000     		.align	2
 14231              	.LC240:
 14232 1904 454D4720 		.ascii	"EMG max values [0 - 4096]: %lu, %lu\000"
 14232      6D617820 
 14232      76616C75 
 14232      6573205B 
 14232      30202D20 
 14233              		.align	2
 14234              	.LC241:
 14235 1928 454D4720 		.ascii	"EMG inversion: YES\015\012\000"
 14235      696E7665 
 14235      7273696F 
 14235      6E3A2059 
 14235      45530D0A 
 14236 193d 000000   		.align	2
 14237              	.LC242:
 14238 1940 454D4720 		.ascii	"EMG inversion: NO\015\012\000"
 14238      696E7665 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 322


 14238      7273696F 
 14238      6E3A204E 
 14238      4F0D0A00 
 14239              		.align	2
 14240              	.LC243:
 14241 1954 43616C69 		.ascii	"Calibration enabled: YES\015\012\000"
 14241      62726174 
 14241      696F6E20 
 14241      656E6162 
 14241      6C65643A 
 14242 196f 00       		.align	2
 14243              	.LC244:
 14244 1970 43616C69 		.ascii	"Calibration enabled: NO\015\012\000"
 14244      62726174 
 14244      696F6E20 
 14244      656E6162 
 14244      6C65643A 
 14245 198a 0000     		.align	2
 14246              	.LC245:
 14247 198c 454D4720 		.ascii	"EMG max speed: %d %d\000"
 14247      6D617820 
 14247      73706565 
 14247      643A2025 
 14247      64202564 
 14248 19a1 000000   		.align	2
 14249              	.LC246:
 14250 19a4 494D5520 		.ascii	"IMU Connected: %d\015\012\000"
 14250      436F6E6E 
 14250      65637465 
 14250      643A2025 
 14250      640D0A00 
 14251              		.align	2
 14252              	.LC247:
 14253 19b8 494D5573 		.ascii	"IMUs CONFIGURATION\015\012\000"
 14253      20434F4E 
 14253      46494755 
 14253      52415449 
 14253      4F4E0D0A 
 14254 19cd 000000   		.align	2
 14255              	.LC248:
 14256 19d0 496D7520 		.ascii	"Imu %d \015\012\011ID: %d\015\012\000"
 14256      2564200D 
 14256      0A094944 
 14256      3A202564 
 14256      0D0A00
 14257 19e3 00       		.align	2
 14258              	.LC249:
 14259 19e4 09416363 		.ascii	"\011Accelerometers: \000"
 14259      656C6572 
 14259      6F6D6574 
 14259      6572733A 
 14259      2000
 14260 19f6 0000     		.align	2
 14261              	.LC250:
 14262 19f8 09477972 		.ascii	"\011Gyroscopes: \000"
 14262      6F73636F 
 14262      7065733A 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 323


 14262      2000
 14263 1a06 0000     		.align	2
 14264              	.LC251:
 14265 1a08 094D6167 		.ascii	"\011Magnetometers: \000"
 14265      6E65746F 
 14265      6D657465 
 14265      72733A20 
 14265      00
 14266 1a19 000000   		.align	2
 14267              	.LC252:
 14268 1a1c 09517561 		.ascii	"\011Quaternion: \000"
 14268      7465726E 
 14268      696F6E3A 
 14268      2000
 14269 1a2a 0000     		.align	2
 14270              	.LC253:
 14271 1a2c 0954656D 		.ascii	"\011Temperature: \000"
 14271      70657261 
 14271      74757265 
 14271      3A2000
 14272 1a3b 00       		.align	2
 14273              	.LC254:
 14274 1a3c 4C617374 		.ascii	"Last FW cycle time: %u us\015\012\000"
 14274      20465720 
 14274      6379636C 
 14274      65207469 
 14274      6D653A20 
 14275              		.align	2
 14276              	.LC255:
 14277 1a58 0D0A0000 		.ascii	"\015\012\000\000"
 14278              		.section	.text.prepare_generic_info,"ax",%progbits
 14279              		.align	2
 14280              		.global	prepare_generic_info
 14281              		.thumb
 14282              		.thumb_func
 14283              		.type	prepare_generic_info, %function
 14284              	prepare_generic_info:
 14285              	.LFB72:
1898:..\src/command_processing.c **** 
1899:..\src/command_processing.c **** //==============================================================================
1900:..\src/command_processing.c **** //                                                   PREPARE GENERIC DEVICE INFO
1901:..\src/command_processing.c **** //==============================================================================
1902:..\src/command_processing.c **** 
1903:..\src/command_processing.c **** void prepare_generic_info(char *info_string)
1904:..\src/command_processing.c **** {
 14286              		.loc 1 1904 0
 14287              		.cfi_startproc
 14288              		@ args = 0, pretend = 0, frame = 152
 14289              		@ frame_needed = 1, uses_anonymous_args = 0
 14290 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 14291              		.cfi_def_cfa_offset 36
 14292              		.cfi_offset 4, -36
 14293              		.cfi_offset 5, -32
 14294              		.cfi_offset 6, -28
 14295              		.cfi_offset 7, -24
 14296              		.cfi_offset 8, -20
 14297              		.cfi_offset 9, -16
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 324


 14298              		.cfi_offset 10, -12
 14299              		.cfi_offset 11, -8
 14300              		.cfi_offset 14, -4
 14301 0004 B1B0     		sub	sp, sp, #196
 14302              		.cfi_def_cfa_offset 232
 14303 0006 0AAF     		add	r7, sp, #40
 14304              		.cfi_def_cfa 7, 192
 14305 0008 7861     		str	r0, [r7, #20]
1905:..\src/command_processing.c ****     int i;
1906:..\src/command_processing.c **** 
1907:..\src/command_processing.c ****     struct st_eeprom* MEM_P = &c_mem; 
 14306              		.loc 1 1907 0
 14307 000a C74B     		ldr	r3, .L677
 14308 000c C7F88C30 		str	r3, [r7, #140]
1908:..\src/command_processing.c ****     
1909:..\src/command_processing.c ****     if(c_mem.dev.id != 250){                //To avoid dummy board ping
 14309              		.loc 1 1909 0
 14310 0010 C54B     		ldr	r3, .L677
 14311 0012 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 14312 0016 FA2B     		cmp	r3, #250
 14313 0018 01F06686 		beq	.L673
 14314              	.LBB24:
1910:..\src/command_processing.c ****         char str[100];
1911:..\src/command_processing.c ****         strcpy(info_string, "");
 14315              		.loc 1 1911 0
 14316 001c 7B69     		ldr	r3, [r7, #20]
 14317 001e 0022     		movs	r2, #0
 14318 0020 1A70     		strb	r2, [r3]
1912:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 14319              		.loc 1 1912 0
 14320 0022 7869     		ldr	r0, [r7, #20]
 14321 0024 FFF7FEFF 		bl	strlen
 14322 0028 0346     		mov	r3, r0
 14323 002a 1A46     		mov	r2, r3
 14324 002c 7B69     		ldr	r3, [r7, #20]
 14325 002e 1344     		add	r3, r3, r2
 14326 0030 BE4A     		ldr	r2, .L677+4
 14327 0032 1188     		ldrh	r1, [r2]	@ unaligned
 14328 0034 9278     		ldrb	r2, [r2, #2]
 14329 0036 1980     		strh	r1, [r3]	@ unaligned
 14330 0038 9A70     		strb	r2, [r3, #2]
1913:..\src/command_processing.c ****         strcat(info_string, "Firmware version: ");
 14331              		.loc 1 1913 0
 14332 003a 7869     		ldr	r0, [r7, #20]
 14333 003c FFF7FEFF 		bl	strlen
 14334 0040 0346     		mov	r3, r0
 14335 0042 1A46     		mov	r2, r3
 14336 0044 7B69     		ldr	r3, [r7, #20]
 14337 0046 1344     		add	r3, r3, r2
 14338 0048 B94A     		ldr	r2, .L677+8
 14339 004a 1D46     		mov	r5, r3
 14340 004c 1446     		mov	r4, r2
 14341 004e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14342 0050 2860     		str	r0, [r5]	@ unaligned
 14343 0052 6960     		str	r1, [r5, #4]	@ unaligned
 14344 0054 AA60     		str	r2, [r5, #8]	@ unaligned
 14345 0056 EB60     		str	r3, [r5, #12]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 325


 14346 0058 2388     		ldrh	r3, [r4]	@ unaligned
 14347 005a A278     		ldrb	r2, [r4, #2]
 14348 005c 2B82     		strh	r3, [r5, #16]	@ unaligned
 14349 005e 1346     		mov	r3, r2
 14350 0060 AB74     		strb	r3, [r5, #18]
1914:..\src/command_processing.c ****         strcat(info_string, VERSION);
 14351              		.loc 1 1914 0
 14352 0062 7869     		ldr	r0, [r7, #20]
 14353 0064 FFF7FEFF 		bl	strlen
 14354 0068 0346     		mov	r3, r0
 14355 006a 1A46     		mov	r2, r3
 14356 006c 7B69     		ldr	r3, [r7, #20]
 14357 006e 1344     		add	r3, r3, r2
 14358 0070 B04A     		ldr	r2, .L677+12
 14359 0072 1446     		mov	r4, r2
 14360 0074 9E46     		mov	lr, r3
 14361 0076 04F1300C 		add	ip, r4, #48
 14362              	.L569:
 14363 007a 7546     		mov	r5, lr
 14364 007c 2646     		mov	r6, r4
 14365 007e 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 14366 0080 2860     		str	r0, [r5]	@ unaligned
 14367 0082 6960     		str	r1, [r5, #4]	@ unaligned
 14368 0084 AA60     		str	r2, [r5, #8]	@ unaligned
 14369 0086 EB60     		str	r3, [r5, #12]	@ unaligned
 14370 0088 1034     		adds	r4, r4, #16
 14371 008a 0EF1100E 		add	lr, lr, #16
 14372 008e 6445     		cmp	r4, ip
 14373 0090 F3D1     		bne	.L569
 14374 0092 7546     		mov	r5, lr
 14375 0094 2346     		mov	r3, r4
 14376 0096 07CB     		ldmia	r3!, {r0, r1, r2}
 14377 0098 2860     		str	r0, [r5]	@ unaligned
 14378 009a 6960     		str	r1, [r5, #4]	@ unaligned
 14379 009c AA60     		str	r2, [r5, #8]	@ unaligned
1915:..\src/command_processing.c ****         strcat(info_string, ".\r\n\r\n");      
 14380              		.loc 1 1915 0
 14381 009e 7869     		ldr	r0, [r7, #20]
 14382 00a0 FFF7FEFF 		bl	strlen
 14383 00a4 0346     		mov	r3, r0
 14384 00a6 1A46     		mov	r2, r3
 14385 00a8 7B69     		ldr	r3, [r7, #20]
 14386 00aa 1344     		add	r3, r3, r2
 14387 00ac A24A     		ldr	r2, .L677+16
 14388 00ae 1068     		ldr	r0, [r2]	@ unaligned
 14389 00b0 1860     		str	r0, [r3]	@ unaligned
 14390 00b2 9288     		ldrh	r2, [r2, #4]	@ unaligned
 14391 00b4 9A80     		strh	r2, [r3, #4]	@ unaligned
1916:..\src/command_processing.c **** 
1917:..\src/command_processing.c ****         strcat(info_string, "DEVICE INFO\r\n");
 14392              		.loc 1 1917 0
 14393 00b6 7869     		ldr	r0, [r7, #20]
 14394 00b8 FFF7FEFF 		bl	strlen
 14395 00bc 0346     		mov	r3, r0
 14396 00be 1A46     		mov	r2, r3
 14397 00c0 7B69     		ldr	r3, [r7, #20]
 14398 00c2 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 326


 14399 00c4 9D4A     		ldr	r2, .L677+20
 14400 00c6 1C46     		mov	r4, r3
 14401 00c8 1346     		mov	r3, r2
 14402 00ca 07CB     		ldmia	r3!, {r0, r1, r2}
 14403 00cc 2060     		str	r0, [r4]	@ unaligned
 14404 00ce 6160     		str	r1, [r4, #4]	@ unaligned
 14405 00d0 A260     		str	r2, [r4, #8]	@ unaligned
 14406 00d2 1B88     		ldrh	r3, [r3]	@ unaligned
 14407 00d4 A381     		strh	r3, [r4, #12]	@ unaligned
1918:..\src/command_processing.c ****         sprintf(str, "ID: %d\r\n", (int) MEM_P->dev.id);
 14408              		.loc 1 1918 0
 14409 00d6 D7F88C30 		ldr	r3, [r7, #140]
 14410 00da 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 14411 00de 1A46     		mov	r2, r3
 14412 00e0 07F11C03 		add	r3, r7, #28
 14413 00e4 9649     		ldr	r1, .L677+24
 14414 00e6 1846     		mov	r0, r3
 14415 00e8 FFF7FEFF 		bl	sprintf
1919:..\src/command_processing.c ****         strcat(info_string, str);
 14416              		.loc 1 1919 0
 14417 00ec 07F11C03 		add	r3, r7, #28
 14418 00f0 1946     		mov	r1, r3
 14419 00f2 7869     		ldr	r0, [r7, #20]
 14420 00f4 FFF7FEFF 		bl	strcat
1920:..\src/command_processing.c ****         switch(MEM_P->dev.dev_type){
 14421              		.loc 1 1920 0
 14422 00f8 D7F88C30 		ldr	r3, [r7, #140]
 14423 00fc 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 14424 0100 042B     		cmp	r3, #4
 14425 0102 00F29180 		bhi	.L674
 14426 0106 01A2     		adr	r2, .L572
 14427 0108 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 14428              		.p2align 2
 14429              	.L572:
 14430 010c 21010000 		.word	.L571+1
 14431 0110 4F010000 		.word	.L573+1
 14432 0114 7F010000 		.word	.L574+1
 14433 0118 C1010000 		.word	.L575+1
 14434 011c 01020000 		.word	.L576+1
 14435              		.p2align 1
 14436              	.L571:
1921:..\src/command_processing.c ****             case SOFTHAND_PRO:
1922:..\src/command_processing.c ****                 strcat(info_string, "Device: SOFTHAND PRO\r\n");
 14437              		.loc 1 1922 0
 14438 0120 7869     		ldr	r0, [r7, #20]
 14439 0122 FFF7FEFF 		bl	strlen
 14440 0126 0346     		mov	r3, r0
 14441 0128 1A46     		mov	r2, r3
 14442 012a 7B69     		ldr	r3, [r7, #20]
 14443 012c 1344     		add	r3, r3, r2
 14444 012e 854A     		ldr	r2, .L677+28
 14445 0130 1C46     		mov	r4, r3
 14446 0132 1546     		mov	r5, r2
 14447 0134 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 14448 0136 2060     		str	r0, [r4]	@ unaligned
 14449 0138 6160     		str	r1, [r4, #4]	@ unaligned
 14450 013a A260     		str	r2, [r4, #8]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 327


 14451 013c E360     		str	r3, [r4, #12]	@ unaligned
 14452 013e 2868     		ldr	r0, [r5]	@ unaligned
 14453 0140 2061     		str	r0, [r4, #16]	@ unaligned
 14454 0142 AB88     		ldrh	r3, [r5, #4]	@ unaligned
 14455 0144 AA79     		ldrb	r2, [r5, #6]
 14456 0146 A382     		strh	r3, [r4, #20]	@ unaligned
 14457 0148 1346     		mov	r3, r2
 14458 014a A375     		strb	r3, [r4, #22]
1923:..\src/command_processing.c ****                 break;
 14459              		.loc 1 1923 0
 14460 014c 6DE0     		b	.L577
 14461              	.L573:
1924:..\src/command_processing.c ****             case GENERIC_2_MOTORS:
1925:..\src/command_processing.c ****                 strcat(info_string, "Device: GENERIC 2 MOTORS\r\n");
 14462              		.loc 1 1925 0
 14463 014e 7869     		ldr	r0, [r7, #20]
 14464 0150 FFF7FEFF 		bl	strlen
 14465 0154 0346     		mov	r3, r0
 14466 0156 1A46     		mov	r2, r3
 14467 0158 7B69     		ldr	r3, [r7, #20]
 14468 015a 1344     		add	r3, r3, r2
 14469 015c 7A4A     		ldr	r2, .L677+32
 14470 015e 1D46     		mov	r5, r3
 14471 0160 1446     		mov	r4, r2
 14472 0162 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14473 0164 2860     		str	r0, [r5]	@ unaligned
 14474 0166 6960     		str	r1, [r5, #4]	@ unaligned
 14475 0168 AA60     		str	r2, [r5, #8]	@ unaligned
 14476 016a EB60     		str	r3, [r5, #12]	@ unaligned
 14477 016c 03CC     		ldmia	r4!, {r0, r1}
 14478 016e 2861     		str	r0, [r5, #16]	@ unaligned
 14479 0170 6961     		str	r1, [r5, #20]	@ unaligned
 14480 0172 2388     		ldrh	r3, [r4]	@ unaligned
 14481 0174 A278     		ldrb	r2, [r4, #2]
 14482 0176 2B83     		strh	r3, [r5, #24]	@ unaligned
 14483 0178 1346     		mov	r3, r2
 14484 017a AB76     		strb	r3, [r5, #26]
1926:..\src/command_processing.c ****                 break;
 14485              		.loc 1 1926 0
 14486 017c 55E0     		b	.L577
 14487              	.L574:
1927:..\src/command_processing.c ****             case AIR_CHAMBERS_FB:
1928:..\src/command_processing.c ****                 strcat(info_string, "Device: AIR CHAMBERS HAPTIC FEEDBACK\r\n");
 14488              		.loc 1 1928 0
 14489 017e 7869     		ldr	r0, [r7, #20]
 14490 0180 FFF7FEFF 		bl	strlen
 14491 0184 0346     		mov	r3, r0
 14492 0186 1A46     		mov	r2, r3
 14493 0188 7B69     		ldr	r3, [r7, #20]
 14494 018a 1344     		add	r3, r3, r2
 14495 018c 6F4A     		ldr	r2, .L677+36
 14496 018e 1446     		mov	r4, r2
 14497 0190 9E46     		mov	lr, r3
 14498 0192 04F1200C 		add	ip, r4, #32
 14499              	.L578:
 14500 0196 7546     		mov	r5, lr
 14501 0198 2646     		mov	r6, r4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 328


 14502 019a 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 14503 019c 2860     		str	r0, [r5]	@ unaligned
 14504 019e 6960     		str	r1, [r5, #4]	@ unaligned
 14505 01a0 AA60     		str	r2, [r5, #8]	@ unaligned
 14506 01a2 EB60     		str	r3, [r5, #12]	@ unaligned
 14507 01a4 1034     		adds	r4, r4, #16
 14508 01a6 0EF1100E 		add	lr, lr, #16
 14509 01aa 6445     		cmp	r4, ip
 14510 01ac F3D1     		bne	.L578
 14511 01ae 7346     		mov	r3, lr
 14512 01b0 2246     		mov	r2, r4
 14513 01b2 1068     		ldr	r0, [r2]	@ unaligned
 14514 01b4 1860     		str	r0, [r3]	@ unaligned
 14515 01b6 9188     		ldrh	r1, [r2, #4]	@ unaligned
 14516 01b8 9279     		ldrb	r2, [r2, #6]
 14517 01ba 9980     		strh	r1, [r3, #4]	@ unaligned
 14518 01bc 9A71     		strb	r2, [r3, #6]
1929:..\src/command_processing.c ****                 break;
 14519              		.loc 1 1929 0
 14520 01be 34E0     		b	.L577
 14521              	.L575:
1930:..\src/command_processing.c ****             case OTBK_ACT_WRIST_MS:
1931:..\src/command_processing.c ****                 strcat(info_string, "Device: OTTOBOCK 6v ACTIVE WRIST MASTER\r\n");
 14522              		.loc 1 1931 0
 14523 01c0 7869     		ldr	r0, [r7, #20]
 14524 01c2 FFF7FEFF 		bl	strlen
 14525 01c6 0346     		mov	r3, r0
 14526 01c8 1A46     		mov	r2, r3
 14527 01ca 7B69     		ldr	r3, [r7, #20]
 14528 01cc 1344     		add	r3, r3, r2
 14529 01ce 604A     		ldr	r2, .L677+40
 14530 01d0 1446     		mov	r4, r2
 14531 01d2 9E46     		mov	lr, r3
 14532 01d4 04F1200C 		add	ip, r4, #32
 14533              	.L579:
 14534 01d8 7546     		mov	r5, lr
 14535 01da 2646     		mov	r6, r4
 14536 01dc 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 14537 01de 2860     		str	r0, [r5]	@ unaligned
 14538 01e0 6960     		str	r1, [r5, #4]	@ unaligned
 14539 01e2 AA60     		str	r2, [r5, #8]	@ unaligned
 14540 01e4 EB60     		str	r3, [r5, #12]	@ unaligned
 14541 01e6 1034     		adds	r4, r4, #16
 14542 01e8 0EF1100E 		add	lr, lr, #16
 14543 01ec 6445     		cmp	r4, ip
 14544 01ee F3D1     		bne	.L579
 14545 01f0 7246     		mov	r2, lr
 14546 01f2 2346     		mov	r3, r4
 14547 01f4 03CB     		ldmia	r3!, {r0, r1}
 14548 01f6 1060     		str	r0, [r2]	@ unaligned
 14549 01f8 5160     		str	r1, [r2, #4]	@ unaligned
 14550 01fa 1B88     		ldrh	r3, [r3]	@ unaligned
 14551 01fc 1381     		strh	r3, [r2, #8]	@ unaligned
1932:..\src/command_processing.c ****                 break;
 14552              		.loc 1 1932 0
 14553 01fe 14E0     		b	.L577
 14554              	.L576:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 329


1933:..\src/command_processing.c ****             case SOFTHAND_2_MOTORS:
1934:..\src/command_processing.c ****                 strcat(info_string, "Device: SOFTHAND 2 MOTORS\r\n");
 14555              		.loc 1 1934 0
 14556 0200 7869     		ldr	r0, [r7, #20]
 14557 0202 FFF7FEFF 		bl	strlen
 14558 0206 0346     		mov	r3, r0
 14559 0208 1A46     		mov	r2, r3
 14560 020a 7B69     		ldr	r3, [r7, #20]
 14561 020c 1344     		add	r3, r3, r2
 14562 020e 514A     		ldr	r2, .L677+44
 14563 0210 1D46     		mov	r5, r3
 14564 0212 1446     		mov	r4, r2
 14565 0214 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14566 0216 2860     		str	r0, [r5]	@ unaligned
 14567 0218 6960     		str	r1, [r5, #4]	@ unaligned
 14568 021a AA60     		str	r2, [r5, #8]	@ unaligned
 14569 021c EB60     		str	r3, [r5, #12]	@ unaligned
 14570 021e 07CC     		ldmia	r4!, {r0, r1, r2}
 14571 0220 2861     		str	r0, [r5, #16]	@ unaligned
 14572 0222 6961     		str	r1, [r5, #20]	@ unaligned
 14573 0224 AA61     		str	r2, [r5, #24]	@ unaligned
1935:..\src/command_processing.c ****                 break;
 14574              		.loc 1 1935 0
 14575 0226 00E0     		b	.L577
 14576              	.L674:
1936:..\src/command_processing.c ****             default:
1937:..\src/command_processing.c ****                 break;
 14577              		.loc 1 1937 0
 14578 0228 00BF     		nop
 14579              	.L577:
1938:..\src/command_processing.c ****         }
1939:..\src/command_processing.c ****         
1940:..\src/command_processing.c ****         switch(MEM_P->dev.right_left){
 14580              		.loc 1 1940 0
 14581 022a D7F88C30 		ldr	r3, [r7, #140]
 14582 022e 93F8A730 		ldrb	r3, [r3, #167]	@ zero_extendqisi2
 14583 0232 002B     		cmp	r3, #0
 14584 0234 02D0     		beq	.L581
 14585 0236 012B     		cmp	r3, #1
 14586 0238 15D0     		beq	.L582
 14587 023a 26E0     		b	.L580
 14588              	.L581:
1941:..\src/command_processing.c ****             case RIGHT_HAND:
1942:..\src/command_processing.c ****                 strcat(info_string, "Hand side: RIGHT\r\n");
 14589              		.loc 1 1942 0
 14590 023c 7869     		ldr	r0, [r7, #20]
 14591 023e FFF7FEFF 		bl	strlen
 14592 0242 0346     		mov	r3, r0
 14593 0244 1A46     		mov	r2, r3
 14594 0246 7B69     		ldr	r3, [r7, #20]
 14595 0248 1344     		add	r3, r3, r2
 14596 024a 434A     		ldr	r2, .L677+48
 14597 024c 1D46     		mov	r5, r3
 14598 024e 1446     		mov	r4, r2
 14599 0250 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14600 0252 2860     		str	r0, [r5]	@ unaligned
 14601 0254 6960     		str	r1, [r5, #4]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 330


 14602 0256 AA60     		str	r2, [r5, #8]	@ unaligned
 14603 0258 EB60     		str	r3, [r5, #12]	@ unaligned
 14604 025a 2388     		ldrh	r3, [r4]	@ unaligned
 14605 025c A278     		ldrb	r2, [r4, #2]
 14606 025e 2B82     		strh	r3, [r5, #16]	@ unaligned
 14607 0260 1346     		mov	r3, r2
 14608 0262 AB74     		strb	r3, [r5, #18]
1943:..\src/command_processing.c ****                 break;
 14609              		.loc 1 1943 0
 14610 0264 11E0     		b	.L580
 14611              	.L582:
1944:..\src/command_processing.c ****             case LEFT_HAND:
1945:..\src/command_processing.c ****                 strcat(info_string, "Hand side: LEFT\r\n");
 14612              		.loc 1 1945 0
 14613 0266 7869     		ldr	r0, [r7, #20]
 14614 0268 FFF7FEFF 		bl	strlen
 14615 026c 0346     		mov	r3, r0
 14616 026e 1A46     		mov	r2, r3
 14617 0270 7B69     		ldr	r3, [r7, #20]
 14618 0272 1344     		add	r3, r3, r2
 14619 0274 394A     		ldr	r2, .L677+52
 14620 0276 1D46     		mov	r5, r3
 14621 0278 1446     		mov	r4, r2
 14622 027a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14623 027c 2860     		str	r0, [r5]	@ unaligned
 14624 027e 6960     		str	r1, [r5, #4]	@ unaligned
 14625 0280 AA60     		str	r2, [r5, #8]	@ unaligned
 14626 0282 EB60     		str	r3, [r5, #12]	@ unaligned
 14627 0284 2388     		ldrh	r3, [r4]	@ unaligned
 14628 0286 2B82     		strh	r3, [r5, #16]	@ unaligned
1946:..\src/command_processing.c ****                 break;
 14629              		.loc 1 1946 0
 14630 0288 00BF     		nop
 14631              	.L580:
1947:..\src/command_processing.c ****         }
1948:..\src/command_processing.c **** 
1949:..\src/command_processing.c ****         switch(MEM_P->dev.user_id) {
 14632              		.loc 1 1949 0
 14633 028a D7F88C30 		ldr	r3, [r7, #140]
 14634 028e 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 14635 0292 012B     		cmp	r3, #1
 14636 0294 02D0     		beq	.L584
 14637 0296 022B     		cmp	r3, #2
 14638 0298 11D0     		beq	.L585
 14639 029a 1FE0     		b	.L672
 14640              	.L584:
1950:..\src/command_processing.c ****             case MARIA:
1951:..\src/command_processing.c ****                 strcat(info_string, "User: MARIA\r\n");
 14641              		.loc 1 1951 0
 14642 029c 7869     		ldr	r0, [r7, #20]
 14643 029e FFF7FEFF 		bl	strlen
 14644 02a2 0346     		mov	r3, r0
 14645 02a4 1A46     		mov	r2, r3
 14646 02a6 7B69     		ldr	r3, [r7, #20]
 14647 02a8 1344     		add	r3, r3, r2
 14648 02aa 2D4A     		ldr	r2, .L677+56
 14649 02ac 1C46     		mov	r4, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 331


 14650 02ae 1346     		mov	r3, r2
 14651 02b0 07CB     		ldmia	r3!, {r0, r1, r2}
 14652 02b2 2060     		str	r0, [r4]	@ unaligned
 14653 02b4 6160     		str	r1, [r4, #4]	@ unaligned
 14654 02b6 A260     		str	r2, [r4, #8]	@ unaligned
 14655 02b8 1B88     		ldrh	r3, [r3]	@ unaligned
 14656 02ba A381     		strh	r3, [r4, #12]	@ unaligned
1952:..\src/command_processing.c ****                 break;
 14657              		.loc 1 1952 0
 14658 02bc 22E0     		b	.L586
 14659              	.L585:
1953:..\src/command_processing.c ****             case R01:
1954:..\src/command_processing.c ****                 strcat(info_string, "User: R01\r\n");
 14660              		.loc 1 1954 0
 14661 02be 7869     		ldr	r0, [r7, #20]
 14662 02c0 FFF7FEFF 		bl	strlen
 14663 02c4 0346     		mov	r3, r0
 14664 02c6 1A46     		mov	r2, r3
 14665 02c8 7B69     		ldr	r3, [r7, #20]
 14666 02ca 1344     		add	r3, r3, r2
 14667 02cc 254A     		ldr	r2, .L677+60
 14668 02ce 1C46     		mov	r4, r3
 14669 02d0 1346     		mov	r3, r2
 14670 02d2 07CB     		ldmia	r3!, {r0, r1, r2}
 14671 02d4 2060     		str	r0, [r4]	@ unaligned
 14672 02d6 6160     		str	r1, [r4, #4]	@ unaligned
 14673 02d8 A260     		str	r2, [r4, #8]	@ unaligned
1955:..\src/command_processing.c ****                 break;
 14674              		.loc 1 1955 0
 14675 02da 13E0     		b	.L586
 14676              	.L672:
1956:..\src/command_processing.c ****             default:
1957:..\src/command_processing.c ****                 strcat(info_string, "User: GENERIC USER\r\n");
 14677              		.loc 1 1957 0
 14678 02dc 7869     		ldr	r0, [r7, #20]
 14679 02de FFF7FEFF 		bl	strlen
 14680 02e2 0346     		mov	r3, r0
 14681 02e4 1A46     		mov	r2, r3
 14682 02e6 7B69     		ldr	r3, [r7, #20]
 14683 02e8 1344     		add	r3, r3, r2
 14684 02ea 1F4A     		ldr	r2, .L677+64
 14685 02ec 1D46     		mov	r5, r3
 14686 02ee 1446     		mov	r4, r2
 14687 02f0 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14688 02f2 2860     		str	r0, [r5]	@ unaligned
 14689 02f4 6960     		str	r1, [r5, #4]	@ unaligned
 14690 02f6 AA60     		str	r2, [r5, #8]	@ unaligned
 14691 02f8 EB60     		str	r3, [r5, #12]	@ unaligned
 14692 02fa 2068     		ldr	r0, [r4]	@ unaligned
 14693 02fc 2861     		str	r0, [r5, #16]	@ unaligned
 14694 02fe 2379     		ldrb	r3, [r4, #4]
 14695 0300 2B75     		strb	r3, [r5, #20]
1958:..\src/command_processing.c ****                 break;
 14696              		.loc 1 1958 0
 14697 0302 00BF     		nop
 14698              	.L586:
1959:..\src/command_processing.c ****         }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 332


1960:..\src/command_processing.c ****         strcat(info_string, "\r\n");  
 14699              		.loc 1 1960 0
 14700 0304 7869     		ldr	r0, [r7, #20]
 14701 0306 FFF7FEFF 		bl	strlen
 14702 030a 0346     		mov	r3, r0
 14703 030c 1A46     		mov	r2, r3
 14704 030e 7B69     		ldr	r3, [r7, #20]
 14705 0310 1344     		add	r3, r3, r2
 14706 0312 064A     		ldr	r2, .L677+4
 14707 0314 1188     		ldrh	r1, [r2]	@ unaligned
 14708 0316 9278     		ldrb	r2, [r2, #2]
 14709 0318 1980     		strh	r1, [r3]	@ unaligned
 14710 031a 9A70     		strb	r2, [r3, #2]
 14711              	.LBB25:
1961:..\src/command_processing.c ****         
1962:..\src/command_processing.c ****         for (uint8 k = 0; k <= MEM_P->dev.use_2nd_motor_flag; k++) {
 14712              		.loc 1 1962 0
 14713 031c 0023     		movs	r3, #0
 14714 031e 87F89330 		strb	r3, [r7, #147]
 14715 0322 01F005BA 		b	.L587
 14716              	.L678:
 14717 0326 00BF     		.align	2
 14718              	.L677:
 14719 0328 00000000 		.word	c_mem
 14720 032c 34110000 		.word	.LC154
 14721 0330 38110000 		.word	.LC155
 14722 0334 4C110000 		.word	.LC156
 14723 0338 88110000 		.word	.LC157
 14724 033c 90110000 		.word	.LC158
 14725 0340 A0110000 		.word	.LC159
 14726 0344 AC110000 		.word	.LC160
 14727 0348 C4110000 		.word	.LC161
 14728 034c E0110000 		.word	.LC162
 14729 0350 08120000 		.word	.LC163
 14730 0354 34120000 		.word	.LC164
 14731 0358 50120000 		.word	.LC165
 14732 035c 64120000 		.word	.LC166
 14733 0360 78120000 		.word	.LC167
 14734 0364 88120000 		.word	.LC168
 14735 0368 94120000 		.word	.LC169
 14736              	.L654:
 14737              	.LBB26:
1963:..\src/command_processing.c ****             
1964:..\src/command_processing.c ****             uint8 MOTOR_IDX = k;
 14738              		.loc 1 1964 0
 14739 036c 97F89330 		ldrb	r3, [r7, #147]
 14740 0370 87F88B30 		strb	r3, [r7, #139]
1965:..\src/command_processing.c ****             struct st_motor* MOT = &(MEM_P->motor[MOTOR_IDX]);      // Default motor
 14741              		.loc 1 1965 0
 14742 0374 97F88B20 		ldrb	r2, [r7, #139]	@ zero_extendqisi2
 14743 0378 1346     		mov	r3, r2
 14744 037a DB00     		lsls	r3, r3, #3
 14745 037c 9B1A     		subs	r3, r3, r2
 14746 037e 1B01     		lsls	r3, r3, #4
 14747 0380 B033     		adds	r3, r3, #176
 14748 0382 D7F88C20 		ldr	r2, [r7, #140]
 14749 0386 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 333


 14750 0388 C7F88430 		str	r3, [r7, #132]
1966:..\src/command_processing.c ****             uint8 ENC_L = MOT->encoder_line;             // Associated encoder line
 14751              		.loc 1 1966 0
 14752 038c D7F88430 		ldr	r3, [r7, #132]
 14753 0390 93F86030 		ldrb	r3, [r3, #96]
 14754 0394 87F88330 		strb	r3, [r7, #131]
1967:..\src/command_processing.c ****                   
1968:..\src/command_processing.c ****             sprintf(str, "MOTOR %d INFO\r\n", MOTOR_IDX+1);
 14755              		.loc 1 1968 0
 14756 0398 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 14757 039c 5A1C     		adds	r2, r3, #1
 14758 039e 07F11C03 		add	r3, r7, #28
 14759 03a2 AE49     		ldr	r1, .L679
 14760 03a4 1846     		mov	r0, r3
 14761 03a6 FFF7FEFF 		bl	sprintf
1969:..\src/command_processing.c ****             strcat(info_string, str);
 14762              		.loc 1 1969 0
 14763 03aa 07F11C03 		add	r3, r7, #28
 14764 03ae 1946     		mov	r1, r3
 14765 03b0 7869     		ldr	r0, [r7, #20]
 14766 03b2 FFF7FEFF 		bl	strcat
1970:..\src/command_processing.c ****                         
1971:..\src/command_processing.c ****             strcat(info_string, "Motor reference");
 14767              		.loc 1 1971 0
 14768 03b6 7869     		ldr	r0, [r7, #20]
 14769 03b8 FFF7FEFF 		bl	strlen
 14770 03bc 0346     		mov	r3, r0
 14771 03be 1A46     		mov	r2, r3
 14772 03c0 7B69     		ldr	r3, [r7, #20]
 14773 03c2 1344     		add	r3, r3, r2
 14774 03c4 A64A     		ldr	r2, .L679+4
 14775 03c6 1C46     		mov	r4, r3
 14776 03c8 1546     		mov	r5, r2
 14777 03ca 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 14778 03cc 2060     		str	r0, [r4]	@ unaligned
 14779 03ce 6160     		str	r1, [r4, #4]	@ unaligned
 14780 03d0 A260     		str	r2, [r4, #8]	@ unaligned
 14781 03d2 E360     		str	r3, [r4, #12]	@ unaligned
1972:..\src/command_processing.c ****             if(MOT->control_mode == CONTROL_CURRENT)
 14782              		.loc 1 1972 0
 14783 03d4 D7F88430 		ldr	r3, [r7, #132]
 14784 03d8 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 14785 03dc 022B     		cmp	r3, #2
 14786 03de 10D1     		bne	.L588
1973:..\src/command_processing.c ****                 strcat(info_string," - Currents: ");
 14787              		.loc 1 1973 0
 14788 03e0 7869     		ldr	r0, [r7, #20]
 14789 03e2 FFF7FEFF 		bl	strlen
 14790 03e6 0346     		mov	r3, r0
 14791 03e8 1A46     		mov	r2, r3
 14792 03ea 7B69     		ldr	r3, [r7, #20]
 14793 03ec 1344     		add	r3, r3, r2
 14794 03ee 9D4A     		ldr	r2, .L679+8
 14795 03f0 1C46     		mov	r4, r3
 14796 03f2 1346     		mov	r3, r2
 14797 03f4 07CB     		ldmia	r3!, {r0, r1, r2}
 14798 03f6 2060     		str	r0, [r4]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 334


 14799 03f8 6160     		str	r1, [r4, #4]	@ unaligned
 14800 03fa A260     		str	r2, [r4, #8]	@ unaligned
 14801 03fc 1B88     		ldrh	r3, [r3]	@ unaligned
 14802 03fe A381     		strh	r3, [r4, #12]	@ unaligned
 14803 0400 25E0     		b	.L589
 14804              	.L588:
1974:..\src/command_processing.c ****             else {
1975:..\src/command_processing.c ****                 if (MOT->control_mode == CONTROL_PWM)
 14805              		.loc 1 1975 0
 14806 0402 D7F88430 		ldr	r3, [r7, #132]
 14807 0406 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 14808 040a 012B     		cmp	r3, #1
 14809 040c 0FD1     		bne	.L590
1976:..\src/command_processing.c ****                     strcat(info_string," - Pwm: ");
 14810              		.loc 1 1976 0
 14811 040e 7869     		ldr	r0, [r7, #20]
 14812 0410 FFF7FEFF 		bl	strlen
 14813 0414 0346     		mov	r3, r0
 14814 0416 1A46     		mov	r2, r3
 14815 0418 7B69     		ldr	r3, [r7, #20]
 14816 041a 1344     		add	r3, r3, r2
 14817 041c 9249     		ldr	r1, .L679+12
 14818 041e 1A46     		mov	r2, r3
 14819 0420 0B46     		mov	r3, r1
 14820 0422 03CB     		ldmia	r3!, {r0, r1}
 14821 0424 1060     		str	r0, [r2]	@ unaligned
 14822 0426 5160     		str	r1, [r2, #4]	@ unaligned
 14823 0428 1B78     		ldrb	r3, [r3]
 14824 042a 1372     		strb	r3, [r2, #8]
 14825 042c 0FE0     		b	.L589
 14826              	.L590:
1977:..\src/command_processing.c ****                 else
1978:..\src/command_processing.c ****                     strcat(info_string," - Position: ");
 14827              		.loc 1 1978 0
 14828 042e 7869     		ldr	r0, [r7, #20]
 14829 0430 FFF7FEFF 		bl	strlen
 14830 0434 0346     		mov	r3, r0
 14831 0436 1A46     		mov	r2, r3
 14832 0438 7B69     		ldr	r3, [r7, #20]
 14833 043a 1344     		add	r3, r3, r2
 14834 043c 8B4A     		ldr	r2, .L679+16
 14835 043e 1C46     		mov	r4, r3
 14836 0440 1346     		mov	r3, r2
 14837 0442 07CB     		ldmia	r3!, {r0, r1, r2}
 14838 0444 2060     		str	r0, [r4]	@ unaligned
 14839 0446 6160     		str	r1, [r4, #4]	@ unaligned
 14840 0448 A260     		str	r2, [r4, #8]	@ unaligned
 14841 044a 1B88     		ldrh	r3, [r3]	@ unaligned
 14842 044c A381     		strh	r3, [r4, #12]	@ unaligned
 14843              	.L589:
1979:..\src/command_processing.c ****             }
1980:..\src/command_processing.c ****             if(MOT->control_mode == CONTROL_CURRENT) {
 14844              		.loc 1 1980 0
 14845 044e D7F88430 		ldr	r3, [r7, #132]
 14846 0452 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 14847 0456 022B     		cmp	r3, #2
 14848 0458 13D1     		bne	.L591
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 335


1981:..\src/command_processing.c ****                 sprintf(str, "%d ", (int)(g_refOld[MOTOR_IDX].curr));
 14849              		.loc 1 1981 0
 14850 045a 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 14851 045e 844A     		ldr	r2, .L679+20
 14852 0460 1B01     		lsls	r3, r3, #4
 14853 0462 1344     		add	r3, r3, r2
 14854 0464 0433     		adds	r3, r3, #4
 14855 0466 1A68     		ldr	r2, [r3]
 14856 0468 07F11C03 		add	r3, r7, #28
 14857 046c 8149     		ldr	r1, .L679+24
 14858 046e 1846     		mov	r0, r3
 14859 0470 FFF7FEFF 		bl	sprintf
1982:..\src/command_processing.c ****                 strcat(info_string,str);
 14860              		.loc 1 1982 0
 14861 0474 07F11C03 		add	r3, r7, #28
 14862 0478 1946     		mov	r1, r3
 14863 047a 7869     		ldr	r0, [r7, #20]
 14864 047c FFF7FEFF 		bl	strcat
 14865 0480 39E0     		b	.L592
 14866              	.L591:
1983:..\src/command_processing.c ****             }
1984:..\src/command_processing.c ****             else {
1985:..\src/command_processing.c ****                 if(MOT->control_mode == CONTROL_PWM) {
 14867              		.loc 1 1985 0
 14868 0482 D7F88430 		ldr	r3, [r7, #132]
 14869 0486 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 14870 048a 012B     		cmp	r3, #1
 14871 048c 13D1     		bne	.L593
1986:..\src/command_processing.c ****                     sprintf(str, "%d ", (int)(g_refOld[MOTOR_IDX].pwm));
 14872              		.loc 1 1986 0
 14873 048e 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 14874 0492 774A     		ldr	r2, .L679+20
 14875 0494 1B01     		lsls	r3, r3, #4
 14876 0496 1344     		add	r3, r3, r2
 14877 0498 0833     		adds	r3, r3, #8
 14878 049a 1A68     		ldr	r2, [r3]
 14879 049c 07F11C03 		add	r3, r7, #28
 14880 04a0 7449     		ldr	r1, .L679+24
 14881 04a2 1846     		mov	r0, r3
 14882 04a4 FFF7FEFF 		bl	sprintf
1987:..\src/command_processing.c ****                     strcat(info_string,str);
 14883              		.loc 1 1987 0
 14884 04a8 07F11C03 		add	r3, r7, #28
 14885 04ac 1946     		mov	r1, r3
 14886 04ae 7869     		ldr	r0, [r7, #20]
 14887 04b0 FFF7FEFF 		bl	strcat
 14888 04b4 1FE0     		b	.L592
 14889              	.L593:
1988:..\src/command_processing.c ****                 }
1989:..\src/command_processing.c ****                 else {
1990:..\src/command_processing.c ****                     sprintf(str, "%d ", (int)(g_refOld[MOTOR_IDX].pos >> MEM_P->enc[ENC_L].res[0]))
 14890              		.loc 1 1990 0
 14891 04b6 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 14892 04ba 6D4A     		ldr	r2, .L679+20
 14893 04bc 1B01     		lsls	r3, r3, #4
 14894 04be 1344     		add	r3, r3, r2
 14895 04c0 1968     		ldr	r1, [r3]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 336


 14896 04c2 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 14897 04c6 D7F88C00 		ldr	r0, [r7, #140]
 14898 04ca 1346     		mov	r3, r2
 14899 04cc 5B00     		lsls	r3, r3, #1
 14900 04ce 1344     		add	r3, r3, r2
 14901 04d0 1B01     		lsls	r3, r3, #4
 14902 04d2 0344     		add	r3, r3, r0
 14903 04d4 03F29513 		addw	r3, r3, #405
 14904 04d8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 14905 04da 41FA03F2 		asr	r2, r1, r3
 14906 04de 07F11C03 		add	r3, r7, #28
 14907 04e2 6449     		ldr	r1, .L679+24
 14908 04e4 1846     		mov	r0, r3
 14909 04e6 FFF7FEFF 		bl	sprintf
1991:..\src/command_processing.c ****                     strcat(info_string,str);
 14910              		.loc 1 1991 0
 14911 04ea 07F11C03 		add	r3, r7, #28
 14912 04ee 1946     		mov	r1, r3
 14913 04f0 7869     		ldr	r0, [r7, #20]
 14914 04f2 FFF7FEFF 		bl	strcat
 14915              	.L592:
1992:..\src/command_processing.c ****                 }
1993:..\src/command_processing.c ****             }
1994:..\src/command_processing.c ****             strcat(info_string,"\r\n");
 14916              		.loc 1 1994 0
 14917 04f6 7869     		ldr	r0, [r7, #20]
 14918 04f8 FFF7FEFF 		bl	strlen
 14919 04fc 0346     		mov	r3, r0
 14920 04fe 1A46     		mov	r2, r3
 14921 0500 7B69     		ldr	r3, [r7, #20]
 14922 0502 1344     		add	r3, r3, r2
 14923 0504 5C4A     		ldr	r2, .L679+28
 14924 0506 1188     		ldrh	r1, [r2]	@ unaligned
 14925 0508 9278     		ldrb	r2, [r2, #2]
 14926 050a 1980     		strh	r1, [r3]	@ unaligned
 14927 050c 9A70     		strb	r2, [r3, #2]
1995:..\src/command_processing.c **** 
1996:..\src/command_processing.c ****             sprintf(str, "Motor enabled: ");
 14928              		.loc 1 1996 0
 14929 050e 07F11C03 		add	r3, r7, #28
 14930 0512 5A4A     		ldr	r2, .L679+32
 14931 0514 1C46     		mov	r4, r3
 14932 0516 1346     		mov	r3, r2
 14933 0518 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 14934 051a 84E80F00 		stmia	r4, {r0, r1, r2, r3}
1997:..\src/command_processing.c ****             if (g_ref[MOTOR_IDX].onoff & 0x01) {
 14935              		.loc 1 1997 0
 14936 051e 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 14937 0522 574A     		ldr	r2, .L679+36
 14938 0524 1B01     		lsls	r3, r3, #4
 14939 0526 1344     		add	r3, r3, r2
 14940 0528 0C33     		adds	r3, r3, #12
 14941 052a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 14942 052c 03F00103 		and	r3, r3, #1
 14943 0530 002B     		cmp	r3, #0
 14944 0532 0FD0     		beq	.L594
1998:..\src/command_processing.c ****                 strcat(str, "YES\r\n");
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 337


 14945              		.loc 1 1998 0
 14946 0534 07F11C03 		add	r3, r7, #28
 14947 0538 1846     		mov	r0, r3
 14948 053a FFF7FEFF 		bl	strlen
 14949 053e 0346     		mov	r3, r0
 14950 0540 1A46     		mov	r2, r3
 14951 0542 07F11C03 		add	r3, r7, #28
 14952 0546 1344     		add	r3, r3, r2
 14953 0548 4E4A     		ldr	r2, .L679+40
 14954 054a 1068     		ldr	r0, [r2]	@ unaligned
 14955 054c 1860     		str	r0, [r3]	@ unaligned
 14956 054e 9288     		ldrh	r2, [r2, #4]	@ unaligned
 14957 0550 9A80     		strh	r2, [r3, #4]	@ unaligned
 14958 0552 0EE0     		b	.L595
 14959              	.L594:
1999:..\src/command_processing.c ****             } else {
2000:..\src/command_processing.c ****                 strcat(str, "NO\r\n");
 14960              		.loc 1 2000 0
 14961 0554 07F11C03 		add	r3, r7, #28
 14962 0558 1846     		mov	r0, r3
 14963 055a FFF7FEFF 		bl	strlen
 14964 055e 0346     		mov	r3, r0
 14965 0560 1A46     		mov	r2, r3
 14966 0562 07F11C03 		add	r3, r7, #28
 14967 0566 1344     		add	r3, r3, r2
 14968 0568 474A     		ldr	r2, .L679+44
 14969 056a 1068     		ldr	r0, [r2]	@ unaligned
 14970 056c 1860     		str	r0, [r3]	@ unaligned
 14971 056e 1279     		ldrb	r2, [r2, #4]
 14972 0570 1A71     		strb	r2, [r3, #4]
 14973              	.L595:
2001:..\src/command_processing.c ****             }
2002:..\src/command_processing.c ****             strcat(info_string, str);
 14974              		.loc 1 2002 0
 14975 0572 07F11C03 		add	r3, r7, #28
 14976 0576 1946     		mov	r1, r3
 14977 0578 7869     		ldr	r0, [r7, #20]
 14978 057a FFF7FEFF 		bl	strcat
2003:..\src/command_processing.c ****                         
2004:..\src/command_processing.c ****             strcat(info_string, "PWM rescaling activation: ");
 14979              		.loc 1 2004 0
 14980 057e 7869     		ldr	r0, [r7, #20]
 14981 0580 FFF7FEFF 		bl	strlen
 14982 0584 0346     		mov	r3, r0
 14983 0586 1A46     		mov	r2, r3
 14984 0588 7B69     		ldr	r3, [r7, #20]
 14985 058a 1344     		add	r3, r3, r2
 14986 058c 3F4A     		ldr	r2, .L679+48
 14987 058e 1D46     		mov	r5, r3
 14988 0590 1446     		mov	r4, r2
 14989 0592 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14990 0594 2860     		str	r0, [r5]	@ unaligned
 14991 0596 6960     		str	r1, [r5, #4]	@ unaligned
 14992 0598 AA60     		str	r2, [r5, #8]	@ unaligned
 14993 059a EB60     		str	r3, [r5, #12]	@ unaligned
 14994 059c 03CC     		ldmia	r4!, {r0, r1}
 14995 059e 2861     		str	r0, [r5, #16]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 338


 14996 05a0 6961     		str	r1, [r5, #20]	@ unaligned
 14997 05a2 2388     		ldrh	r3, [r4]	@ unaligned
 14998 05a4 A278     		ldrb	r2, [r4, #2]
 14999 05a6 2B83     		strh	r3, [r5, #24]	@ unaligned
 15000 05a8 1346     		mov	r3, r2
 15001 05aa AB76     		strb	r3, [r5, #26]
2005:..\src/command_processing.c ****             if(MOT->activate_pwm_rescaling == MAXON_12V)
 15002              		.loc 1 2005 0
 15003 05ac D7F88430 		ldr	r3, [r7, #132]
 15004 05b0 93F83130 		ldrb	r3, [r3, #49]	@ zero_extendqisi2
 15005 05b4 012B     		cmp	r3, #1
 15006 05b6 0CD1     		bne	.L596
2006:..\src/command_processing.c ****                 strcat(info_string, "YES\n");
 15007              		.loc 1 2006 0
 15008 05b8 7869     		ldr	r0, [r7, #20]
 15009 05ba FFF7FEFF 		bl	strlen
 15010 05be 0346     		mov	r3, r0
 15011 05c0 1A46     		mov	r2, r3
 15012 05c2 7B69     		ldr	r3, [r7, #20]
 15013 05c4 1344     		add	r3, r3, r2
 15014 05c6 324A     		ldr	r2, .L679+52
 15015 05c8 1068     		ldr	r0, [r2]	@ unaligned
 15016 05ca 1860     		str	r0, [r3]	@ unaligned
 15017 05cc 1279     		ldrb	r2, [r2, #4]
 15018 05ce 1A71     		strb	r2, [r3, #4]
 15019 05d0 09E0     		b	.L597
 15020              	.L596:
2007:..\src/command_processing.c ****             else
2008:..\src/command_processing.c ****                 strcat(info_string, "NO\n");
 15021              		.loc 1 2008 0
 15022 05d2 7869     		ldr	r0, [r7, #20]
 15023 05d4 FFF7FEFF 		bl	strlen
 15024 05d8 0346     		mov	r3, r0
 15025 05da 1A46     		mov	r2, r3
 15026 05dc 7B69     		ldr	r3, [r7, #20]
 15027 05de 1344     		add	r3, r3, r2
 15028 05e0 2C4A     		ldr	r2, .L679+56
 15029 05e2 1068     		ldr	r0, [r2]	@ unaligned
 15030 05e4 1860     		str	r0, [r3]	@ unaligned
 15031              	.L597:
2009:..\src/command_processing.c ****             
2010:..\src/command_processing.c ****             sprintf(str, "PWM Limit: %d\r\n", (int) dev_pwm_limit[MOTOR_IDX]);
 15032              		.loc 1 2010 0
 15033 05e6 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 15034 05ea 2B4A     		ldr	r2, .L679+60
 15035 05ec 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 15036 05f0 1A46     		mov	r2, r3
 15037 05f2 07F11C03 		add	r3, r7, #28
 15038 05f6 2949     		ldr	r1, .L679+64
 15039 05f8 1846     		mov	r0, r3
 15040 05fa FFF7FEFF 		bl	sprintf
2011:..\src/command_processing.c ****             strcat(info_string, str);
 15041              		.loc 1 2011 0
 15042 05fe 07F11C03 		add	r3, r7, #28
 15043 0602 1946     		mov	r1, r3
 15044 0604 7869     		ldr	r0, [r7, #20]
 15045 0606 FFF7FEFF 		bl	strcat
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 339


2012:..\src/command_processing.c **** 
2013:..\src/command_processing.c ****             strcat(info_string, "\r\nMEASUREMENTS INFO\r\n");
 15046              		.loc 1 2013 0
 15047 060a 7869     		ldr	r0, [r7, #20]
 15048 060c FFF7FEFF 		bl	strlen
 15049 0610 0346     		mov	r3, r0
 15050 0612 1A46     		mov	r2, r3
 15051 0614 7B69     		ldr	r3, [r7, #20]
 15052 0616 1344     		add	r3, r3, r2
 15053 0618 214A     		ldr	r2, .L679+68
 15054 061a 1D46     		mov	r5, r3
 15055 061c 1446     		mov	r4, r2
 15056 061e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15057 0620 2860     		str	r0, [r5]	@ unaligned
 15058 0622 6960     		str	r1, [r5, #4]	@ unaligned
 15059 0624 AA60     		str	r2, [r5, #8]	@ unaligned
 15060 0626 EB60     		str	r3, [r5, #12]	@ unaligned
 15061 0628 2068     		ldr	r0, [r4]	@ unaligned
 15062 062a 2861     		str	r0, [r5, #16]	@ unaligned
 15063 062c A388     		ldrh	r3, [r4, #4]	@ unaligned
 15064 062e AB82     		strh	r3, [r5, #20]	@ unaligned
2014:..\src/command_processing.c ****             strcat(info_string, "Sensor value: ");
 15065              		.loc 1 2014 0
 15066 0630 7869     		ldr	r0, [r7, #20]
 15067 0632 FFF7FEFF 		bl	strlen
 15068 0636 0346     		mov	r3, r0
 15069 0638 1A46     		mov	r2, r3
 15070 063a 7B69     		ldr	r3, [r7, #20]
 15071 063c 1344     		add	r3, r3, r2
 15072 063e 194A     		ldr	r2, .L679+72
 15073 0640 1C46     		mov	r4, r3
 15074 0642 1346     		mov	r3, r2
 15075 0644 07CB     		ldmia	r3!, {r0, r1, r2}
 15076 0646 2060     		str	r0, [r4]	@ unaligned
 15077 0648 6160     		str	r1, [r4, #4]	@ unaligned
 15078 064a A260     		str	r2, [r4, #8]	@ unaligned
 15079 064c 1A88     		ldrh	r2, [r3]	@ unaligned
 15080 064e 9B78     		ldrb	r3, [r3, #2]
 15081 0650 A281     		strh	r2, [r4, #12]	@ unaligned
 15082 0652 A373     		strb	r3, [r4, #14]
2015:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; i++) {
 15083              		.loc 1 2015 0
 15084 0654 0023     		movs	r3, #0
 15085 0656 C7F89430 		str	r3, [r7, #148]
 15086 065a 64E0     		b	.L598
 15087              	.L680:
 15088              		.align	2
 15089              	.L679:
 15090 065c AC120000 		.word	.LC170
 15091 0660 BC120000 		.word	.LC171
 15092 0664 CC120000 		.word	.LC172
 15093 0668 DC120000 		.word	.LC173
 15094 066c E8120000 		.word	.LC174
 15095 0670 00000000 		.word	g_refOld
 15096 0674 F8120000 		.word	.LC175
 15097 0678 34110000 		.word	.LC154
 15098 067c FC120000 		.word	.LC176
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 340


 15099 0680 00000000 		.word	g_ref
 15100 0684 0C130000 		.word	.LC177
 15101 0688 14130000 		.word	.LC178
 15102 068c 1C130000 		.word	.LC179
 15103 0690 38130000 		.word	.LC180
 15104 0694 40130000 		.word	.LC181
 15105 0698 00000000 		.word	dev_pwm_limit
 15106 069c 44130000 		.word	.LC182
 15107 06a0 54130000 		.word	.LC183
 15108 06a4 6C130000 		.word	.LC184
 15109              	.L600:
2016:..\src/command_processing.c ****                 sprintf(str, "%d", (int)(g_meas[ENC_L].pos[i] >> MEM_P->enc[ENC_L].res[i]));
 15110              		.loc 1 2016 0
 15111 06a8 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 15112 06ac B849     		ldr	r1, .L681
 15113 06ae 1346     		mov	r3, r2
 15114 06b0 5B00     		lsls	r3, r3, #1
 15115 06b2 1344     		add	r3, r3, r2
 15116 06b4 9B00     		lsls	r3, r3, #2
 15117 06b6 1344     		add	r3, r3, r2
 15118 06b8 D7F89420 		ldr	r2, [r7, #148]
 15119 06bc 1344     		add	r3, r3, r2
 15120 06be 51F82310 		ldr	r1, [r1, r3, lsl #2]
 15121 06c2 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 15122 06c6 D7F88C00 		ldr	r0, [r7, #140]
 15123 06ca 1346     		mov	r3, r2
 15124 06cc 5B00     		lsls	r3, r3, #1
 15125 06ce 1344     		add	r3, r3, r2
 15126 06d0 1B01     		lsls	r3, r3, #4
 15127 06d2 C218     		adds	r2, r0, r3
 15128 06d4 D7F89430 		ldr	r3, [r7, #148]
 15129 06d8 1344     		add	r3, r3, r2
 15130 06da 03F29513 		addw	r3, r3, #405
 15131 06de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 15132 06e0 41FA03F2 		asr	r2, r1, r3
 15133 06e4 07F11C03 		add	r3, r7, #28
 15134 06e8 AA49     		ldr	r1, .L681+4
 15135 06ea 1846     		mov	r0, r3
 15136 06ec FFF7FEFF 		bl	sprintf
2017:..\src/command_processing.c ****                 strcat(info_string, str);
 15137              		.loc 1 2017 0
 15138 06f0 07F11C03 		add	r3, r7, #28
 15139 06f4 1946     		mov	r1, r3
 15140 06f6 7869     		ldr	r0, [r7, #20]
 15141 06f8 FFF7FEFF 		bl	strcat
2018:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
 15142              		.loc 1 2018 0
 15143 06fc D7F89430 		ldr	r3, [r7, #148]
 15144 0700 022B     		cmp	r3, #2
 15145 0702 0BD0     		beq	.L599
2019:..\src/command_processing.c ****                     strcat(info_string, ", ");
 15146              		.loc 1 2019 0
 15147 0704 7869     		ldr	r0, [r7, #20]
 15148 0706 FFF7FEFF 		bl	strlen
 15149 070a 0346     		mov	r3, r0
 15150 070c 1A46     		mov	r2, r3
 15151 070e 7B69     		ldr	r3, [r7, #20]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 341


 15152 0710 1344     		add	r3, r3, r2
 15153 0712 A14A     		ldr	r2, .L681+8
 15154 0714 1188     		ldrh	r1, [r2]	@ unaligned
 15155 0716 9278     		ldrb	r2, [r2, #2]
 15156 0718 1980     		strh	r1, [r3]	@ unaligned
 15157 071a 9A70     		strb	r2, [r3, #2]
 15158              	.L599:
2015:..\src/command_processing.c ****                 sprintf(str, "%d", (int)(g_meas[ENC_L].pos[i] >> MEM_P->enc[ENC_L].res[i]));
 15159              		.loc 1 2015 0 discriminator 2
 15160 071c D7F89430 		ldr	r3, [r7, #148]
 15161 0720 0133     		adds	r3, r3, #1
 15162 0722 C7F89430 		str	r3, [r7, #148]
 15163              	.L598:
2015:..\src/command_processing.c ****                 sprintf(str, "%d", (int)(g_meas[ENC_L].pos[i] >> MEM_P->enc[ENC_L].res[i]));
 15164              		.loc 1 2015 0 is_stmt 0 discriminator 1
 15165 0726 D7F89430 		ldr	r3, [r7, #148]
 15166 072a 022B     		cmp	r3, #2
 15167 072c BCDD     		ble	.L600
2020:..\src/command_processing.c ****                 }                
2021:..\src/command_processing.c ****             }
2022:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 15168              		.loc 1 2022 0 is_stmt 1
 15169 072e 7869     		ldr	r0, [r7, #20]
 15170 0730 FFF7FEFF 		bl	strlen
 15171 0734 0346     		mov	r3, r0
 15172 0736 1A46     		mov	r2, r3
 15173 0738 7B69     		ldr	r3, [r7, #20]
 15174 073a 1344     		add	r3, r3, r2
 15175 073c 974A     		ldr	r2, .L681+12
 15176 073e 1188     		ldrh	r1, [r2]	@ unaligned
 15177 0740 9278     		ldrb	r2, [r2, #2]
 15178 0742 1980     		strh	r1, [r3]	@ unaligned
 15179 0744 9A70     		strb	r2, [r3, #2]
2023:..\src/command_processing.c ****             
2024:..\src/command_processing.c ****             if (MOT->input_mode == INPUT_MODE_JOYSTICK){
 15180              		.loc 1 2024 0
 15181 0746 D7F88430 		ldr	r3, [r7, #132]
 15182 074a 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
 15183 074e 062B     		cmp	r3, #6
 15184 0750 1AD1     		bne	.L601
2025:..\src/command_processing.c ****                 sprintf(str, "Joystick measurements: %d, %d", (int)g_adc_measOld.joystick[0], (int)
 15185              		.loc 1 2025 0
 15186 0752 934B     		ldr	r3, .L681+16
 15187 0754 1A6A     		ldr	r2, [r3, #32]
 15188 0756 924B     		ldr	r3, .L681+16
 15189 0758 5B6A     		ldr	r3, [r3, #36]
 15190 075a 07F11C00 		add	r0, r7, #28
 15191 075e 9149     		ldr	r1, .L681+20
 15192 0760 FFF7FEFF 		bl	sprintf
2026:..\src/command_processing.c ****                 strcat(info_string, str);
 15193              		.loc 1 2026 0
 15194 0764 07F11C03 		add	r3, r7, #28
 15195 0768 1946     		mov	r1, r3
 15196 076a 7869     		ldr	r0, [r7, #20]
 15197 076c FFF7FEFF 		bl	strcat
2027:..\src/command_processing.c ****                 strcat(info_string, "\r\n");
 15198              		.loc 1 2027 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 342


 15199 0770 7869     		ldr	r0, [r7, #20]
 15200 0772 FFF7FEFF 		bl	strlen
 15201 0776 0346     		mov	r3, r0
 15202 0778 1A46     		mov	r2, r3
 15203 077a 7B69     		ldr	r3, [r7, #20]
 15204 077c 1344     		add	r3, r3, r2
 15205 077e 874A     		ldr	r2, .L681+12
 15206 0780 1188     		ldrh	r1, [r2]	@ unaligned
 15207 0782 9278     		ldrb	r2, [r2, #2]
 15208 0784 1980     		strh	r1, [r3]	@ unaligned
 15209 0786 9A70     		strb	r2, [r3, #2]
 15210              	.L601:
2028:..\src/command_processing.c ****             }
2029:..\src/command_processing.c **** 
2030:..\src/command_processing.c ****             sprintf(str, "Battery %d Voltage (mV): %ld", MOTOR_IDX+1, (int32) dev_tension[MOTOR_IDX
 15211              		.loc 1 2030 0
 15212 0788 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 15213 078c 591C     		adds	r1, r3, #1
 15214 078e 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 15215 0792 854A     		ldr	r2, .L681+24
 15216 0794 52F82330 		ldr	r3, [r2, r3, lsl #2]
 15217 0798 07F11C00 		add	r0, r7, #28
 15218 079c 0A46     		mov	r2, r1
 15219 079e 8349     		ldr	r1, .L681+28
 15220 07a0 FFF7FEFF 		bl	sprintf
2031:..\src/command_processing.c ****             strcat(info_string, str);
 15221              		.loc 1 2031 0
 15222 07a4 07F11C03 		add	r3, r7, #28
 15223 07a8 1946     		mov	r1, r3
 15224 07aa 7869     		ldr	r0, [r7, #20]
 15225 07ac FFF7FEFF 		bl	strcat
2032:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 15226              		.loc 1 2032 0
 15227 07b0 7869     		ldr	r0, [r7, #20]
 15228 07b2 FFF7FEFF 		bl	strlen
 15229 07b6 0346     		mov	r3, r0
 15230 07b8 1A46     		mov	r2, r3
 15231 07ba 7B69     		ldr	r3, [r7, #20]
 15232 07bc 1344     		add	r3, r3, r2
 15233 07be 774A     		ldr	r2, .L681+12
 15234 07c0 1188     		ldrh	r1, [r2]	@ unaligned
 15235 07c2 9278     		ldrb	r2, [r2, #2]
 15236 07c4 1980     		strh	r1, [r3]	@ unaligned
 15237 07c6 9A70     		strb	r2, [r3, #2]
2033:..\src/command_processing.c ****             
2034:..\src/command_processing.c ****             sprintf(str, "Full charge power tension %d (mV): %ld", MOTOR_IDX+1, (int32) pow_tension
 15238              		.loc 1 2034 0
 15239 07c8 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 15240 07cc 591C     		adds	r1, r3, #1
 15241 07ce 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 15242 07d2 774A     		ldr	r2, .L681+32
 15243 07d4 52F82330 		ldr	r3, [r2, r3, lsl #2]
 15244 07d8 07F11C00 		add	r0, r7, #28
 15245 07dc 0A46     		mov	r2, r1
 15246 07de 7549     		ldr	r1, .L681+36
 15247 07e0 FFF7FEFF 		bl	sprintf
2035:..\src/command_processing.c ****             strcat(info_string, str);
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 343


 15248              		.loc 1 2035 0
 15249 07e4 07F11C03 		add	r3, r7, #28
 15250 07e8 1946     		mov	r1, r3
 15251 07ea 7869     		ldr	r0, [r7, #20]
 15252 07ec FFF7FEFF 		bl	strcat
2036:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 15253              		.loc 1 2036 0
 15254 07f0 7869     		ldr	r0, [r7, #20]
 15255 07f2 FFF7FEFF 		bl	strlen
 15256 07f6 0346     		mov	r3, r0
 15257 07f8 1A46     		mov	r2, r3
 15258 07fa 7B69     		ldr	r3, [r7, #20]
 15259 07fc 1344     		add	r3, r3, r2
 15260 07fe 674A     		ldr	r2, .L681+12
 15261 0800 1188     		ldrh	r1, [r2]	@ unaligned
 15262 0802 9278     		ldrb	r2, [r2, #2]
 15263 0804 1980     		strh	r1, [r3]	@ unaligned
 15264 0806 9A70     		strb	r2, [r3, #2]
2037:..\src/command_processing.c **** 
2038:..\src/command_processing.c ****             sprintf(str, "Current %d (mA): %ld", MOTOR_IDX+1, (int32) g_meas[ENC_L].curr );
 15265              		.loc 1 2038 0
 15266 0808 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 15267 080c 5C1C     		adds	r4, r3, #1
 15268 080e 97F88330 		ldrb	r3, [r7, #131]	@ zero_extendqisi2
 15269 0812 5F4A     		ldr	r2, .L681
 15270 0814 3421     		movs	r1, #52
 15271 0816 01FB03F3 		mul	r3, r1, r3
 15272 081a 1344     		add	r3, r3, r2
 15273 081c 0C33     		adds	r3, r3, #12
 15274 081e 1B68     		ldr	r3, [r3]
 15275 0820 07F11C00 		add	r0, r7, #28
 15276 0824 2246     		mov	r2, r4
 15277 0826 6449     		ldr	r1, .L681+40
 15278 0828 FFF7FEFF 		bl	sprintf
2039:..\src/command_processing.c ****             strcat(info_string, str);
 15279              		.loc 1 2039 0
 15280 082c 07F11C03 		add	r3, r7, #28
 15281 0830 1946     		mov	r1, r3
 15282 0832 7869     		ldr	r0, [r7, #20]
 15283 0834 FFF7FEFF 		bl	strcat
2040:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 15284              		.loc 1 2040 0
 15285 0838 7869     		ldr	r0, [r7, #20]
 15286 083a FFF7FEFF 		bl	strlen
 15287 083e 0346     		mov	r3, r0
 15288 0840 1A46     		mov	r2, r3
 15289 0842 7B69     		ldr	r3, [r7, #20]
 15290 0844 1344     		add	r3, r3, r2
 15291 0846 554A     		ldr	r2, .L681+12
 15292 0848 1188     		ldrh	r1, [r2]	@ unaligned
 15293 084a 9278     		ldrb	r2, [r2, #2]
 15294 084c 1980     		strh	r1, [r3]	@ unaligned
 15295 084e 9A70     		strb	r2, [r3, #2]
2041:..\src/command_processing.c ****             
2042:..\src/command_processing.c ****             if (MOT->not_revers_motor_flag == TRUE){
 15296              		.loc 1 2042 0
 15297 0850 D7F88430 		ldr	r3, [r7, #132]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 344


 15298 0854 93F86230 		ldrb	r3, [r3, #98]	@ zero_extendqisi2
 15299 0858 012B     		cmp	r3, #1
 15300 085a 23D1     		bne	.L602
2043:..\src/command_processing.c ****                 sprintf(str, "Last Grasp Hold Current %d (mA): %ld", MOTOR_IDX+1, (int32) g_meas[EN
 15301              		.loc 1 2043 0
 15302 085c 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 15303 0860 5C1C     		adds	r4, r3, #1
 15304 0862 97F88330 		ldrb	r3, [r7, #131]	@ zero_extendqisi2
 15305 0866 4A4A     		ldr	r2, .L681
 15306 0868 3421     		movs	r1, #52
 15307 086a 01FB03F3 		mul	r3, r1, r3
 15308 086e 1344     		add	r3, r3, r2
 15309 0870 1433     		adds	r3, r3, #20
 15310 0872 1B68     		ldr	r3, [r3]
 15311 0874 07F11C00 		add	r0, r7, #28
 15312 0878 2246     		mov	r2, r4
 15313 087a 5049     		ldr	r1, .L681+44
 15314 087c FFF7FEFF 		bl	sprintf
2044:..\src/command_processing.c ****                 strcat(info_string, str);
 15315              		.loc 1 2044 0
 15316 0880 07F11C03 		add	r3, r7, #28
 15317 0884 1946     		mov	r1, r3
 15318 0886 7869     		ldr	r0, [r7, #20]
 15319 0888 FFF7FEFF 		bl	strcat
2045:..\src/command_processing.c ****                 strcat(info_string, "\r\n");
 15320              		.loc 1 2045 0
 15321 088c 7869     		ldr	r0, [r7, #20]
 15322 088e FFF7FEFF 		bl	strlen
 15323 0892 0346     		mov	r3, r0
 15324 0894 1A46     		mov	r2, r3
 15325 0896 7B69     		ldr	r3, [r7, #20]
 15326 0898 1344     		add	r3, r3, r2
 15327 089a 404A     		ldr	r2, .L681+12
 15328 089c 1188     		ldrh	r1, [r2]	@ unaligned
 15329 089e 9278     		ldrb	r2, [r2, #2]
 15330 08a0 1980     		strh	r1, [r3]	@ unaligned
 15331 08a2 9A70     		strb	r2, [r3, #2]
 15332              	.L602:
2046:..\src/command_processing.c ****             }
2047:..\src/command_processing.c ****             
2048:..\src/command_processing.c ****             sprintf(str, "\r\nMOTOR %d CONFIGURATION\r\n", MOTOR_IDX+1);
 15333              		.loc 1 2048 0
 15334 08a4 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 15335 08a8 5A1C     		adds	r2, r3, #1
 15336 08aa 07F11C03 		add	r3, r7, #28
 15337 08ae 4449     		ldr	r1, .L681+48
 15338 08b0 1846     		mov	r0, r3
 15339 08b2 FFF7FEFF 		bl	sprintf
2049:..\src/command_processing.c ****             strcat(info_string, str);
 15340              		.loc 1 2049 0
 15341 08b6 07F11C03 		add	r3, r7, #28
 15342 08ba 1946     		mov	r1, r3
 15343 08bc 7869     		ldr	r0, [r7, #20]
 15344 08be FFF7FEFF 		bl	strcat
2050:..\src/command_processing.c **** 
2051:..\src/command_processing.c ****             strcat(info_string, "PID Controller: ");
 15345              		.loc 1 2051 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 345


 15346 08c2 7869     		ldr	r0, [r7, #20]
 15347 08c4 FFF7FEFF 		bl	strlen
 15348 08c8 0346     		mov	r3, r0
 15349 08ca 1A46     		mov	r2, r3
 15350 08cc 7B69     		ldr	r3, [r7, #20]
 15351 08ce 1344     		add	r3, r3, r2
 15352 08d0 3C4A     		ldr	r2, .L681+52
 15353 08d2 1D46     		mov	r5, r3
 15354 08d4 1446     		mov	r4, r2
 15355 08d6 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15356 08d8 2860     		str	r0, [r5]	@ unaligned
 15357 08da 6960     		str	r1, [r5, #4]	@ unaligned
 15358 08dc AA60     		str	r2, [r5, #8]	@ unaligned
 15359 08de EB60     		str	r3, [r5, #12]	@ unaligned
 15360 08e0 2378     		ldrb	r3, [r4]
 15361 08e2 2B74     		strb	r3, [r5, #16]
2052:..\src/command_processing.c ****             if(MOT->control_mode != CURR_AND_POS_CONTROL) {
 15362              		.loc 1 2052 0
 15363 08e4 D7F88430 		ldr	r3, [r7, #132]
 15364 08e8 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 15365 08ec 032B     		cmp	r3, #3
 15366 08ee 73D0     		beq	.L603
2053:..\src/command_processing.c ****                 sprintf(str, "P -> %f  ", ((double) MOT->k_p / 65536));
 15367              		.loc 1 2053 0
 15368 08f0 D7F88430 		ldr	r3, [r7, #132]
 15369 08f4 1B68     		ldr	r3, [r3]
 15370 08f6 1846     		mov	r0, r3
 15371 08f8 FFF7FEFF 		bl	__aeabi_i2d
 15372 08fc 4FF00002 		mov	r2, #0
 15373 0900 314B     		ldr	r3, .L681+56
 15374 0902 FFF7FEFF 		bl	__aeabi_ddiv
 15375 0906 0346     		mov	r3, r0
 15376 0908 0C46     		mov	r4, r1
 15377 090a 07F11C00 		add	r0, r7, #28
 15378 090e 1A46     		mov	r2, r3
 15379 0910 2346     		mov	r3, r4
 15380 0912 2E49     		ldr	r1, .L681+60
 15381 0914 FFF7FEFF 		bl	sprintf
2054:..\src/command_processing.c ****                 strcat(info_string, str);
 15382              		.loc 1 2054 0
 15383 0918 07F11C03 		add	r3, r7, #28
 15384 091c 1946     		mov	r1, r3
 15385 091e 7869     		ldr	r0, [r7, #20]
 15386 0920 FFF7FEFF 		bl	strcat
2055:..\src/command_processing.c ****                 sprintf(str, "I -> %f  ", ((double) MOT->k_i / 65536));
 15387              		.loc 1 2055 0
 15388 0924 D7F88430 		ldr	r3, [r7, #132]
 15389 0928 5B68     		ldr	r3, [r3, #4]
 15390 092a 1846     		mov	r0, r3
 15391 092c FFF7FEFF 		bl	__aeabi_i2d
 15392 0930 4FF00002 		mov	r2, #0
 15393 0934 244B     		ldr	r3, .L681+56
 15394 0936 FFF7FEFF 		bl	__aeabi_ddiv
 15395 093a 0346     		mov	r3, r0
 15396 093c 0C46     		mov	r4, r1
 15397 093e 07F11C00 		add	r0, r7, #28
 15398 0942 1A46     		mov	r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 346


 15399 0944 2346     		mov	r3, r4
 15400 0946 2249     		ldr	r1, .L681+64
 15401 0948 FFF7FEFF 		bl	sprintf
2056:..\src/command_processing.c ****                 strcat(info_string, str);
 15402              		.loc 1 2056 0
 15403 094c 07F11C03 		add	r3, r7, #28
 15404 0950 1946     		mov	r1, r3
 15405 0952 7869     		ldr	r0, [r7, #20]
 15406 0954 FFF7FEFF 		bl	strcat
2057:..\src/command_processing.c ****                 sprintf(str, "D -> %f\r\n", ((double) MOT->k_d / 65536));
 15407              		.loc 1 2057 0
 15408 0958 D7F88430 		ldr	r3, [r7, #132]
 15409 095c 9B68     		ldr	r3, [r3, #8]
 15410 095e 1846     		mov	r0, r3
 15411 0960 FFF7FEFF 		bl	__aeabi_i2d
 15412 0964 4FF00002 		mov	r2, #0
 15413 0968 174B     		ldr	r3, .L681+56
 15414 096a FFF7FEFF 		bl	__aeabi_ddiv
 15415 096e 0346     		mov	r3, r0
 15416 0970 0C46     		mov	r4, r1
 15417 0972 07F11C00 		add	r0, r7, #28
 15418 0976 1A46     		mov	r2, r3
 15419 0978 2346     		mov	r3, r4
 15420 097a 1649     		ldr	r1, .L681+68
 15421 097c FFF7FEFF 		bl	sprintf
2058:..\src/command_processing.c ****                 strcat(info_string, str);
 15422              		.loc 1 2058 0
 15423 0980 07F11C03 		add	r3, r7, #28
 15424 0984 1946     		mov	r1, r3
 15425 0986 7869     		ldr	r0, [r7, #20]
 15426 0988 FFF7FEFF 		bl	strcat
 15427 098c 72E0     		b	.L604
 15428              	.L682:
 15429 098e 00BF     		.align	2
 15430              	.L681:
 15431 0990 00000000 		.word	g_meas
 15432 0994 7C130000 		.word	.LC185
 15433 0998 80130000 		.word	.LC186
 15434 099c 34110000 		.word	.LC154
 15435 09a0 00000000 		.word	g_adc_measOld
 15436 09a4 84130000 		.word	.LC187
 15437 09a8 00000000 		.word	dev_tension
 15438 09ac A4130000 		.word	.LC188
 15439 09b0 00000000 		.word	pow_tension
 15440 09b4 C4130000 		.word	.LC189
 15441 09b8 EC130000 		.word	.LC190
 15442 09bc 04140000 		.word	.LC191
 15443 09c0 2C140000 		.word	.LC192
 15444 09c4 48140000 		.word	.LC193
 15445 09c8 0000F040 		.word	1089470464
 15446 09cc 5C140000 		.word	.LC194
 15447 09d0 68140000 		.word	.LC195
 15448 09d4 74140000 		.word	.LC196
 15449              	.L603:
2059:..\src/command_processing.c ****             }
2060:..\src/command_processing.c ****             else { 
2061:..\src/command_processing.c ****                 sprintf(str, "P -> %f  ", ((double) MOT->k_p_dl / 65536));
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 347


 15450              		.loc 1 2061 0
 15451 09d8 D7F88430 		ldr	r3, [r7, #132]
 15452 09dc 9B69     		ldr	r3, [r3, #24]
 15453 09de 1846     		mov	r0, r3
 15454 09e0 FFF7FEFF 		bl	__aeabi_i2d
 15455 09e4 4FF00002 		mov	r2, #0
 15456 09e8 CE4B     		ldr	r3, .L683
 15457 09ea FFF7FEFF 		bl	__aeabi_ddiv
 15458 09ee 0346     		mov	r3, r0
 15459 09f0 0C46     		mov	r4, r1
 15460 09f2 07F11C00 		add	r0, r7, #28
 15461 09f6 1A46     		mov	r2, r3
 15462 09f8 2346     		mov	r3, r4
 15463 09fa CB49     		ldr	r1, .L683+4
 15464 09fc FFF7FEFF 		bl	sprintf
2062:..\src/command_processing.c ****                 strcat(info_string, str);
 15465              		.loc 1 2062 0
 15466 0a00 07F11C03 		add	r3, r7, #28
 15467 0a04 1946     		mov	r1, r3
 15468 0a06 7869     		ldr	r0, [r7, #20]
 15469 0a08 FFF7FEFF 		bl	strcat
2063:..\src/command_processing.c ****                 sprintf(str, "I -> %f  ", ((double) MOT->k_i_dl / 65536));
 15470              		.loc 1 2063 0
 15471 0a0c D7F88430 		ldr	r3, [r7, #132]
 15472 0a10 DB69     		ldr	r3, [r3, #28]
 15473 0a12 1846     		mov	r0, r3
 15474 0a14 FFF7FEFF 		bl	__aeabi_i2d
 15475 0a18 4FF00002 		mov	r2, #0
 15476 0a1c C14B     		ldr	r3, .L683
 15477 0a1e FFF7FEFF 		bl	__aeabi_ddiv
 15478 0a22 0346     		mov	r3, r0
 15479 0a24 0C46     		mov	r4, r1
 15480 0a26 07F11C00 		add	r0, r7, #28
 15481 0a2a 1A46     		mov	r2, r3
 15482 0a2c 2346     		mov	r3, r4
 15483 0a2e BF49     		ldr	r1, .L683+8
 15484 0a30 FFF7FEFF 		bl	sprintf
2064:..\src/command_processing.c ****                 strcat(info_string, str);
 15485              		.loc 1 2064 0
 15486 0a34 07F11C03 		add	r3, r7, #28
 15487 0a38 1946     		mov	r1, r3
 15488 0a3a 7869     		ldr	r0, [r7, #20]
 15489 0a3c FFF7FEFF 		bl	strcat
2065:..\src/command_processing.c ****                 sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_dl / 65536));
 15490              		.loc 1 2065 0
 15491 0a40 D7F88430 		ldr	r3, [r7, #132]
 15492 0a44 1B6A     		ldr	r3, [r3, #32]
 15493 0a46 1846     		mov	r0, r3
 15494 0a48 FFF7FEFF 		bl	__aeabi_i2d
 15495 0a4c 4FF00002 		mov	r2, #0
 15496 0a50 B44B     		ldr	r3, .L683
 15497 0a52 FFF7FEFF 		bl	__aeabi_ddiv
 15498 0a56 0346     		mov	r3, r0
 15499 0a58 0C46     		mov	r4, r1
 15500 0a5a 07F11C00 		add	r0, r7, #28
 15501 0a5e 1A46     		mov	r2, r3
 15502 0a60 2346     		mov	r3, r4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 348


 15503 0a62 B349     		ldr	r1, .L683+12
 15504 0a64 FFF7FEFF 		bl	sprintf
2066:..\src/command_processing.c ****                 strcat(info_string, str);
 15505              		.loc 1 2066 0
 15506 0a68 07F11C03 		add	r3, r7, #28
 15507 0a6c 1946     		mov	r1, r3
 15508 0a6e 7869     		ldr	r0, [r7, #20]
 15509 0a70 FFF7FEFF 		bl	strcat
 15510              	.L604:
2067:..\src/command_processing.c ****             }
2068:..\src/command_processing.c **** 
2069:..\src/command_processing.c ****             strcat(info_string, "Current PID Controller: ");
 15511              		.loc 1 2069 0
 15512 0a74 7869     		ldr	r0, [r7, #20]
 15513 0a76 FFF7FEFF 		bl	strlen
 15514 0a7a 0346     		mov	r3, r0
 15515 0a7c 1A46     		mov	r2, r3
 15516 0a7e 7B69     		ldr	r3, [r7, #20]
 15517 0a80 1344     		add	r3, r3, r2
 15518 0a82 AC4A     		ldr	r2, .L683+16
 15519 0a84 1D46     		mov	r5, r3
 15520 0a86 1446     		mov	r4, r2
 15521 0a88 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15522 0a8a 2860     		str	r0, [r5]	@ unaligned
 15523 0a8c 6960     		str	r1, [r5, #4]	@ unaligned
 15524 0a8e AA60     		str	r2, [r5, #8]	@ unaligned
 15525 0a90 EB60     		str	r3, [r5, #12]	@ unaligned
 15526 0a92 03CC     		ldmia	r4!, {r0, r1}
 15527 0a94 2861     		str	r0, [r5, #16]	@ unaligned
 15528 0a96 6961     		str	r1, [r5, #20]	@ unaligned
 15529 0a98 2378     		ldrb	r3, [r4]
 15530 0a9a 2B76     		strb	r3, [r5, #24]
2070:..\src/command_processing.c ****             if(MOT->control_mode != CURR_AND_POS_CONTROL) {
 15531              		.loc 1 2070 0
 15532 0a9c D7F88430 		ldr	r3, [r7, #132]
 15533 0aa0 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 15534 0aa4 032B     		cmp	r3, #3
 15535 0aa6 4ED0     		beq	.L605
2071:..\src/command_processing.c ****                 sprintf(str, "P -> %f  ", ((double) MOT->k_p_c / 65536));
 15536              		.loc 1 2071 0
 15537 0aa8 D7F88430 		ldr	r3, [r7, #132]
 15538 0aac DB68     		ldr	r3, [r3, #12]
 15539 0aae 1846     		mov	r0, r3
 15540 0ab0 FFF7FEFF 		bl	__aeabi_i2d
 15541 0ab4 4FF00002 		mov	r2, #0
 15542 0ab8 9A4B     		ldr	r3, .L683
 15543 0aba FFF7FEFF 		bl	__aeabi_ddiv
 15544 0abe 0346     		mov	r3, r0
 15545 0ac0 0C46     		mov	r4, r1
 15546 0ac2 07F11C00 		add	r0, r7, #28
 15547 0ac6 1A46     		mov	r2, r3
 15548 0ac8 2346     		mov	r3, r4
 15549 0aca 9749     		ldr	r1, .L683+4
 15550 0acc FFF7FEFF 		bl	sprintf
2072:..\src/command_processing.c ****                 strcat(info_string, str);
 15551              		.loc 1 2072 0
 15552 0ad0 07F11C03 		add	r3, r7, #28
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 349


 15553 0ad4 1946     		mov	r1, r3
 15554 0ad6 7869     		ldr	r0, [r7, #20]
 15555 0ad8 FFF7FEFF 		bl	strcat
2073:..\src/command_processing.c ****                 sprintf(str, "I -> %f  ", ((double) MOT->k_i_c / 65536));
 15556              		.loc 1 2073 0
 15557 0adc D7F88430 		ldr	r3, [r7, #132]
 15558 0ae0 1B69     		ldr	r3, [r3, #16]
 15559 0ae2 1846     		mov	r0, r3
 15560 0ae4 FFF7FEFF 		bl	__aeabi_i2d
 15561 0ae8 4FF00002 		mov	r2, #0
 15562 0aec 8D4B     		ldr	r3, .L683
 15563 0aee FFF7FEFF 		bl	__aeabi_ddiv
 15564 0af2 0346     		mov	r3, r0
 15565 0af4 0C46     		mov	r4, r1
 15566 0af6 07F11C00 		add	r0, r7, #28
 15567 0afa 1A46     		mov	r2, r3
 15568 0afc 2346     		mov	r3, r4
 15569 0afe 8B49     		ldr	r1, .L683+8
 15570 0b00 FFF7FEFF 		bl	sprintf
2074:..\src/command_processing.c ****                 strcat(info_string, str);
 15571              		.loc 1 2074 0
 15572 0b04 07F11C03 		add	r3, r7, #28
 15573 0b08 1946     		mov	r1, r3
 15574 0b0a 7869     		ldr	r0, [r7, #20]
 15575 0b0c FFF7FEFF 		bl	strcat
2075:..\src/command_processing.c ****                 sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_c / 65536));
 15576              		.loc 1 2075 0
 15577 0b10 D7F88430 		ldr	r3, [r7, #132]
 15578 0b14 5B69     		ldr	r3, [r3, #20]
 15579 0b16 1846     		mov	r0, r3
 15580 0b18 FFF7FEFF 		bl	__aeabi_i2d
 15581 0b1c 4FF00002 		mov	r2, #0
 15582 0b20 804B     		ldr	r3, .L683
 15583 0b22 FFF7FEFF 		bl	__aeabi_ddiv
 15584 0b26 0346     		mov	r3, r0
 15585 0b28 0C46     		mov	r4, r1
 15586 0b2a 07F11C00 		add	r0, r7, #28
 15587 0b2e 1A46     		mov	r2, r3
 15588 0b30 2346     		mov	r3, r4
 15589 0b32 7F49     		ldr	r1, .L683+12
 15590 0b34 FFF7FEFF 		bl	sprintf
2076:..\src/command_processing.c ****                 strcat(info_string, str);
 15591              		.loc 1 2076 0
 15592 0b38 07F11C03 		add	r3, r7, #28
 15593 0b3c 1946     		mov	r1, r3
 15594 0b3e 7869     		ldr	r0, [r7, #20]
 15595 0b40 FFF7FEFF 		bl	strcat
 15596 0b44 4DE0     		b	.L606
 15597              	.L605:
2077:..\src/command_processing.c **** 
2078:..\src/command_processing.c ****             }
2079:..\src/command_processing.c ****             else {
2080:..\src/command_processing.c ****                 sprintf(str, "P -> %f  ", ((double) MOT->k_p_c_dl / 65536));
 15598              		.loc 1 2080 0
 15599 0b46 D7F88430 		ldr	r3, [r7, #132]
 15600 0b4a 5B6A     		ldr	r3, [r3, #36]
 15601 0b4c 1846     		mov	r0, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 350


 15602 0b4e FFF7FEFF 		bl	__aeabi_i2d
 15603 0b52 4FF00002 		mov	r2, #0
 15604 0b56 734B     		ldr	r3, .L683
 15605 0b58 FFF7FEFF 		bl	__aeabi_ddiv
 15606 0b5c 0346     		mov	r3, r0
 15607 0b5e 0C46     		mov	r4, r1
 15608 0b60 07F11C00 		add	r0, r7, #28
 15609 0b64 1A46     		mov	r2, r3
 15610 0b66 2346     		mov	r3, r4
 15611 0b68 6F49     		ldr	r1, .L683+4
 15612 0b6a FFF7FEFF 		bl	sprintf
2081:..\src/command_processing.c ****                 strcat(info_string, str);
 15613              		.loc 1 2081 0
 15614 0b6e 07F11C03 		add	r3, r7, #28
 15615 0b72 1946     		mov	r1, r3
 15616 0b74 7869     		ldr	r0, [r7, #20]
 15617 0b76 FFF7FEFF 		bl	strcat
2082:..\src/command_processing.c ****                 sprintf(str, "I -> %f  ", ((double) MOT->k_i_c_dl / 65536));
 15618              		.loc 1 2082 0
 15619 0b7a D7F88430 		ldr	r3, [r7, #132]
 15620 0b7e 9B6A     		ldr	r3, [r3, #40]
 15621 0b80 1846     		mov	r0, r3
 15622 0b82 FFF7FEFF 		bl	__aeabi_i2d
 15623 0b86 4FF00002 		mov	r2, #0
 15624 0b8a 664B     		ldr	r3, .L683
 15625 0b8c FFF7FEFF 		bl	__aeabi_ddiv
 15626 0b90 0346     		mov	r3, r0
 15627 0b92 0C46     		mov	r4, r1
 15628 0b94 07F11C00 		add	r0, r7, #28
 15629 0b98 1A46     		mov	r2, r3
 15630 0b9a 2346     		mov	r3, r4
 15631 0b9c 6349     		ldr	r1, .L683+8
 15632 0b9e FFF7FEFF 		bl	sprintf
2083:..\src/command_processing.c ****                 strcat(info_string, str);
 15633              		.loc 1 2083 0
 15634 0ba2 07F11C03 		add	r3, r7, #28
 15635 0ba6 1946     		mov	r1, r3
 15636 0ba8 7869     		ldr	r0, [r7, #20]
 15637 0baa FFF7FEFF 		bl	strcat
2084:..\src/command_processing.c ****                 sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_c_dl / 65536));
 15638              		.loc 1 2084 0
 15639 0bae D7F88430 		ldr	r3, [r7, #132]
 15640 0bb2 DB6A     		ldr	r3, [r3, #44]
 15641 0bb4 1846     		mov	r0, r3
 15642 0bb6 FFF7FEFF 		bl	__aeabi_i2d
 15643 0bba 4FF00002 		mov	r2, #0
 15644 0bbe 594B     		ldr	r3, .L683
 15645 0bc0 FFF7FEFF 		bl	__aeabi_ddiv
 15646 0bc4 0346     		mov	r3, r0
 15647 0bc6 0C46     		mov	r4, r1
 15648 0bc8 07F11C00 		add	r0, r7, #28
 15649 0bcc 1A46     		mov	r2, r3
 15650 0bce 2346     		mov	r3, r4
 15651 0bd0 5749     		ldr	r1, .L683+12
 15652 0bd2 FFF7FEFF 		bl	sprintf
2085:..\src/command_processing.c ****                 strcat(info_string, str);
 15653              		.loc 1 2085 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 351


 15654 0bd6 07F11C03 		add	r3, r7, #28
 15655 0bda 1946     		mov	r1, r3
 15656 0bdc 7869     		ldr	r0, [r7, #20]
 15657 0bde FFF7FEFF 		bl	strcat
 15658              	.L606:
2086:..\src/command_processing.c ****             }
2087:..\src/command_processing.c ****             if (MOT->activ == 0x01)
 15659              		.loc 1 2087 0
 15660 0be2 D7F88430 		ldr	r3, [r7, #132]
 15661 0be6 93F83030 		ldrb	r3, [r3, #48]	@ zero_extendqisi2
 15662 0bea 012B     		cmp	r3, #1
 15663 0bec 14D1     		bne	.L607
2088:..\src/command_processing.c ****                 strcat(info_string, "Startup activation: YES\r\n");
 15664              		.loc 1 2088 0
 15665 0bee 7869     		ldr	r0, [r7, #20]
 15666 0bf0 FFF7FEFF 		bl	strlen
 15667 0bf4 0346     		mov	r3, r0
 15668 0bf6 1A46     		mov	r2, r3
 15669 0bf8 7B69     		ldr	r3, [r7, #20]
 15670 0bfa 1344     		add	r3, r3, r2
 15671 0bfc 4E4A     		ldr	r2, .L683+20
 15672 0bfe 1D46     		mov	r5, r3
 15673 0c00 1446     		mov	r4, r2
 15674 0c02 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15675 0c04 2860     		str	r0, [r5]	@ unaligned
 15676 0c06 6960     		str	r1, [r5, #4]	@ unaligned
 15677 0c08 AA60     		str	r2, [r5, #8]	@ unaligned
 15678 0c0a EB60     		str	r3, [r5, #12]	@ unaligned
 15679 0c0c 03CC     		ldmia	r4!, {r0, r1}
 15680 0c0e 2861     		str	r0, [r5, #16]	@ unaligned
 15681 0c10 6961     		str	r1, [r5, #20]	@ unaligned
 15682 0c12 2388     		ldrh	r3, [r4]	@ unaligned
 15683 0c14 2B83     		strh	r3, [r5, #24]	@ unaligned
 15684 0c16 13E0     		b	.L608
 15685              	.L607:
2089:..\src/command_processing.c ****             else
2090:..\src/command_processing.c ****                 strcat(info_string, "Startup activation: NO\r\n");
 15686              		.loc 1 2090 0
 15687 0c18 7869     		ldr	r0, [r7, #20]
 15688 0c1a FFF7FEFF 		bl	strlen
 15689 0c1e 0346     		mov	r3, r0
 15690 0c20 1A46     		mov	r2, r3
 15691 0c22 7B69     		ldr	r3, [r7, #20]
 15692 0c24 1344     		add	r3, r3, r2
 15693 0c26 454A     		ldr	r2, .L683+24
 15694 0c28 1D46     		mov	r5, r3
 15695 0c2a 1446     		mov	r4, r2
 15696 0c2c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15697 0c2e 2860     		str	r0, [r5]	@ unaligned
 15698 0c30 6960     		str	r1, [r5, #4]	@ unaligned
 15699 0c32 AA60     		str	r2, [r5, #8]	@ unaligned
 15700 0c34 EB60     		str	r3, [r5, #12]	@ unaligned
 15701 0c36 03CC     		ldmia	r4!, {r0, r1}
 15702 0c38 2861     		str	r0, [r5, #16]	@ unaligned
 15703 0c3a 6961     		str	r1, [r5, #20]	@ unaligned
 15704 0c3c 2378     		ldrb	r3, [r4]
 15705 0c3e 2B76     		strb	r3, [r5, #24]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 352


 15706              	.L608:
2091:..\src/command_processing.c **** 
2092:..\src/command_processing.c ****             switch(MOT->input_mode) {
 15707              		.loc 1 2092 0
 15708 0c40 D7F88430 		ldr	r3, [r7, #132]
 15709 0c44 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
 15710 0c48 072B     		cmp	r3, #7
 15711 0c4a 00F2EA80 		bhi	.L609
 15712 0c4e 01A2     		adr	r2, .L611
 15713 0c50 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 15714              		.p2align 2
 15715              	.L611:
 15716 0c54 750C0000 		.word	.L610+1
 15717 0c58 990C0000 		.word	.L612+1
 15718 0c5c C10C0000 		.word	.L613+1
 15719 0c60 F30C0000 		.word	.L614+1
 15720 0c64 510D0000 		.word	.L615+1
 15721 0c68 7F0D0000 		.word	.L616+1
 15722 0c6c AF0D0000 		.word	.L617+1
 15723 0c70 DD0D0000 		.word	.L618+1
 15724              		.p2align 1
 15725              	.L610:
2093:..\src/command_processing.c ****                 case INPUT_MODE_EXTERNAL:
2094:..\src/command_processing.c ****                     strcat(info_string, "Input mode: USB\r\n");
 15726              		.loc 1 2094 0
 15727 0c74 7869     		ldr	r0, [r7, #20]
 15728 0c76 FFF7FEFF 		bl	strlen
 15729 0c7a 0346     		mov	r3, r0
 15730 0c7c 1A46     		mov	r2, r3
 15731 0c7e 7B69     		ldr	r3, [r7, #20]
 15732 0c80 1344     		add	r3, r3, r2
 15733 0c82 2F4A     		ldr	r2, .L683+28
 15734 0c84 1D46     		mov	r5, r3
 15735 0c86 1446     		mov	r4, r2
 15736 0c88 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15737 0c8a 2860     		str	r0, [r5]	@ unaligned
 15738 0c8c 6960     		str	r1, [r5, #4]	@ unaligned
 15739 0c8e AA60     		str	r2, [r5, #8]	@ unaligned
 15740 0c90 EB60     		str	r3, [r5, #12]	@ unaligned
 15741 0c92 2388     		ldrh	r3, [r4]	@ unaligned
 15742 0c94 2B82     		strh	r3, [r5, #16]	@ unaligned
2095:..\src/command_processing.c ****                     break;
 15743              		.loc 1 2095 0
 15744 0c96 C4E0     		b	.L609
 15745              	.L612:
2096:..\src/command_processing.c ****                 case INPUT_MODE_ENCODER3:
2097:..\src/command_processing.c ****                     strcat(info_string, "Input mode: Handle\r\n");
 15746              		.loc 1 2097 0
 15747 0c98 7869     		ldr	r0, [r7, #20]
 15748 0c9a FFF7FEFF 		bl	strlen
 15749 0c9e 0346     		mov	r3, r0
 15750 0ca0 1A46     		mov	r2, r3
 15751 0ca2 7B69     		ldr	r3, [r7, #20]
 15752 0ca4 1344     		add	r3, r3, r2
 15753 0ca6 274A     		ldr	r2, .L683+32
 15754 0ca8 1D46     		mov	r5, r3
 15755 0caa 1446     		mov	r4, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 353


 15756 0cac 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15757 0cae 2860     		str	r0, [r5]	@ unaligned
 15758 0cb0 6960     		str	r1, [r5, #4]	@ unaligned
 15759 0cb2 AA60     		str	r2, [r5, #8]	@ unaligned
 15760 0cb4 EB60     		str	r3, [r5, #12]	@ unaligned
 15761 0cb6 2068     		ldr	r0, [r4]	@ unaligned
 15762 0cb8 2861     		str	r0, [r5, #16]	@ unaligned
 15763 0cba 2379     		ldrb	r3, [r4, #4]
 15764 0cbc 2B75     		strb	r3, [r5, #20]
2098:..\src/command_processing.c ****                     break;
 15765              		.loc 1 2098 0
 15766 0cbe B0E0     		b	.L609
 15767              	.L613:
2099:..\src/command_processing.c ****                 case INPUT_MODE_EMG_PROPORTIONAL:
2100:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG proportional\r\n");
 15768              		.loc 1 2100 0
 15769 0cc0 7869     		ldr	r0, [r7, #20]
 15770 0cc2 FFF7FEFF 		bl	strlen
 15771 0cc6 0346     		mov	r3, r0
 15772 0cc8 1A46     		mov	r2, r3
 15773 0cca 7B69     		ldr	r3, [r7, #20]
 15774 0ccc 1344     		add	r3, r3, r2
 15775 0cce 1E4A     		ldr	r2, .L683+36
 15776 0cd0 1D46     		mov	r5, r3
 15777 0cd2 1446     		mov	r4, r2
 15778 0cd4 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15779 0cd6 2860     		str	r0, [r5]	@ unaligned
 15780 0cd8 6960     		str	r1, [r5, #4]	@ unaligned
 15781 0cda AA60     		str	r2, [r5, #8]	@ unaligned
 15782 0cdc EB60     		str	r3, [r5, #12]	@ unaligned
 15783 0cde 07CC     		ldmia	r4!, {r0, r1, r2}
 15784 0ce0 2861     		str	r0, [r5, #16]	@ unaligned
 15785 0ce2 6961     		str	r1, [r5, #20]	@ unaligned
 15786 0ce4 AA61     		str	r2, [r5, #24]	@ unaligned
 15787 0ce6 2388     		ldrh	r3, [r4]	@ unaligned
 15788 0ce8 A278     		ldrb	r2, [r4, #2]
 15789 0cea AB83     		strh	r3, [r5, #28]	@ unaligned
 15790 0cec 1346     		mov	r3, r2
 15791 0cee AB77     		strb	r3, [r5, #30]
2101:..\src/command_processing.c ****                     break;
 15792              		.loc 1 2101 0
 15793 0cf0 97E0     		b	.L609
 15794              	.L614:
2102:..\src/command_processing.c ****                 case INPUT_MODE_EMG_INTEGRAL:
2103:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG integral\r\n");
 15795              		.loc 1 2103 0
 15796 0cf2 7869     		ldr	r0, [r7, #20]
 15797 0cf4 FFF7FEFF 		bl	strlen
 15798 0cf8 0346     		mov	r3, r0
 15799 0cfa 1A46     		mov	r2, r3
 15800 0cfc 7B69     		ldr	r3, [r7, #20]
 15801 0cfe 1344     		add	r3, r3, r2
 15802 0d00 124A     		ldr	r2, .L683+40
 15803 0d02 1D46     		mov	r5, r3
 15804 0d04 1446     		mov	r4, r2
 15805 0d06 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15806 0d08 2860     		str	r0, [r5]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 354


 15807 0d0a 6960     		str	r1, [r5, #4]	@ unaligned
 15808 0d0c AA60     		str	r2, [r5, #8]	@ unaligned
 15809 0d0e EB60     		str	r3, [r5, #12]	@ unaligned
 15810 0d10 03CC     		ldmia	r4!, {r0, r1}
 15811 0d12 2861     		str	r0, [r5, #16]	@ unaligned
 15812 0d14 6961     		str	r1, [r5, #20]	@ unaligned
 15813 0d16 2388     		ldrh	r3, [r4]	@ unaligned
 15814 0d18 A278     		ldrb	r2, [r4, #2]
 15815 0d1a 2B83     		strh	r3, [r5, #24]	@ unaligned
 15816 0d1c 1346     		mov	r3, r2
 15817 0d1e AB76     		strb	r3, [r5, #26]
2104:..\src/command_processing.c ****                     break;
 15818              		.loc 1 2104 0
 15819 0d20 7FE0     		b	.L609
 15820              	.L684:
 15821 0d22 00BF     		.align	2
 15822              	.L683:
 15823 0d24 0000F040 		.word	1089470464
 15824 0d28 5C140000 		.word	.LC194
 15825 0d2c 68140000 		.word	.LC195
 15826 0d30 74140000 		.word	.LC196
 15827 0d34 80140000 		.word	.LC197
 15828 0d38 9C140000 		.word	.LC198
 15829 0d3c B8140000 		.word	.LC199
 15830 0d40 D4140000 		.word	.LC200
 15831 0d44 E8140000 		.word	.LC201
 15832 0d48 00150000 		.word	.LC202
 15833 0d4c 20150000 		.word	.LC203
 15834              	.L615:
2105:..\src/command_processing.c ****                 case INPUT_MODE_EMG_FCFS:
2106:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG FCFS\r\n");
 15835              		.loc 1 2106 0
 15836 0d50 7869     		ldr	r0, [r7, #20]
 15837 0d52 FFF7FEFF 		bl	strlen
 15838 0d56 0346     		mov	r3, r0
 15839 0d58 1A46     		mov	r2, r3
 15840 0d5a 7B69     		ldr	r3, [r7, #20]
 15841 0d5c 1344     		add	r3, r3, r2
 15842 0d5e A44A     		ldr	r2, .L685
 15843 0d60 1C46     		mov	r4, r3
 15844 0d62 1546     		mov	r5, r2
 15845 0d64 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 15846 0d66 2060     		str	r0, [r4]	@ unaligned
 15847 0d68 6160     		str	r1, [r4, #4]	@ unaligned
 15848 0d6a A260     		str	r2, [r4, #8]	@ unaligned
 15849 0d6c E360     		str	r3, [r4, #12]	@ unaligned
 15850 0d6e 2868     		ldr	r0, [r5]	@ unaligned
 15851 0d70 2061     		str	r0, [r4, #16]	@ unaligned
 15852 0d72 AB88     		ldrh	r3, [r5, #4]	@ unaligned
 15853 0d74 AA79     		ldrb	r2, [r5, #6]
 15854 0d76 A382     		strh	r3, [r4, #20]	@ unaligned
 15855 0d78 1346     		mov	r3, r2
 15856 0d7a A375     		strb	r3, [r4, #22]
2107:..\src/command_processing.c ****                     break;
 15857              		.loc 1 2107 0
 15858 0d7c 51E0     		b	.L609
 15859              	.L616:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 355


2108:..\src/command_processing.c ****                 case INPUT_MODE_EMG_FCFS_ADV:
2109:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG FCFS ADV\r\n");
 15860              		.loc 1 2109 0
 15861 0d7e 7869     		ldr	r0, [r7, #20]
 15862 0d80 FFF7FEFF 		bl	strlen
 15863 0d84 0346     		mov	r3, r0
 15864 0d86 1A46     		mov	r2, r3
 15865 0d88 7B69     		ldr	r3, [r7, #20]
 15866 0d8a 1344     		add	r3, r3, r2
 15867 0d8c 994A     		ldr	r2, .L685+4
 15868 0d8e 1D46     		mov	r5, r3
 15869 0d90 1446     		mov	r4, r2
 15870 0d92 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15871 0d94 2860     		str	r0, [r5]	@ unaligned
 15872 0d96 6960     		str	r1, [r5, #4]	@ unaligned
 15873 0d98 AA60     		str	r2, [r5, #8]	@ unaligned
 15874 0d9a EB60     		str	r3, [r5, #12]	@ unaligned
 15875 0d9c 03CC     		ldmia	r4!, {r0, r1}
 15876 0d9e 2861     		str	r0, [r5, #16]	@ unaligned
 15877 0da0 6961     		str	r1, [r5, #20]	@ unaligned
 15878 0da2 2388     		ldrh	r3, [r4]	@ unaligned
 15879 0da4 A278     		ldrb	r2, [r4, #2]
 15880 0da6 2B83     		strh	r3, [r5, #24]	@ unaligned
 15881 0da8 1346     		mov	r3, r2
 15882 0daa AB76     		strb	r3, [r5, #26]
2110:..\src/command_processing.c ****                     break;
 15883              		.loc 1 2110 0
 15884 0dac 39E0     		b	.L609
 15885              	.L617:
2111:..\src/command_processing.c ****                 case INPUT_MODE_JOYSTICK:
2112:..\src/command_processing.c ****                     strcat(info_string, "Input mode: Joystick\r\n");
 15886              		.loc 1 2112 0
 15887 0dae 7869     		ldr	r0, [r7, #20]
 15888 0db0 FFF7FEFF 		bl	strlen
 15889 0db4 0346     		mov	r3, r0
 15890 0db6 1A46     		mov	r2, r3
 15891 0db8 7B69     		ldr	r3, [r7, #20]
 15892 0dba 1344     		add	r3, r3, r2
 15893 0dbc 8E4A     		ldr	r2, .L685+8
 15894 0dbe 1C46     		mov	r4, r3
 15895 0dc0 1546     		mov	r5, r2
 15896 0dc2 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 15897 0dc4 2060     		str	r0, [r4]	@ unaligned
 15898 0dc6 6160     		str	r1, [r4, #4]	@ unaligned
 15899 0dc8 A260     		str	r2, [r4, #8]	@ unaligned
 15900 0dca E360     		str	r3, [r4, #12]	@ unaligned
 15901 0dcc 2868     		ldr	r0, [r5]	@ unaligned
 15902 0dce 2061     		str	r0, [r4, #16]	@ unaligned
 15903 0dd0 AB88     		ldrh	r3, [r5, #4]	@ unaligned
 15904 0dd2 AA79     		ldrb	r2, [r5, #6]
 15905 0dd4 A382     		strh	r3, [r4, #20]	@ unaligned
 15906 0dd6 1346     		mov	r3, r2
 15907 0dd8 A375     		strb	r3, [r4, #22]
2113:..\src/command_processing.c ****                     break;
 15908              		.loc 1 2113 0
 15909 0dda 22E0     		b	.L609
 15910              	.L618:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 356


2114:..\src/command_processing.c ****                 case INPUT_MODE_EMG_PROPORTIONAL_NC:
2115:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG proportional Normally Closed\r\n");
 15911              		.loc 1 2115 0
 15912 0ddc 7869     		ldr	r0, [r7, #20]
 15913 0dde FFF7FEFF 		bl	strlen
 15914 0de2 0346     		mov	r3, r0
 15915 0de4 1A46     		mov	r2, r3
 15916 0de6 7B69     		ldr	r3, [r7, #20]
 15917 0de8 1344     		add	r3, r3, r2
 15918 0dea 844A     		ldr	r2, .L685+12
 15919 0dec 1546     		mov	r5, r2
 15920 0dee 9E46     		mov	lr, r3
 15921 0df0 05F1200C 		add	ip, r5, #32
 15922              	.L619:
 15923 0df4 7446     		mov	r4, lr
 15924 0df6 2E46     		mov	r6, r5
 15925 0df8 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 15926 0dfa 2060     		str	r0, [r4]	@ unaligned
 15927 0dfc 6160     		str	r1, [r4, #4]	@ unaligned
 15928 0dfe A260     		str	r2, [r4, #8]	@ unaligned
 15929 0e00 E360     		str	r3, [r4, #12]	@ unaligned
 15930 0e02 1035     		adds	r5, r5, #16
 15931 0e04 0EF1100E 		add	lr, lr, #16
 15932 0e08 6545     		cmp	r5, ip
 15933 0e0a F3D1     		bne	.L619
 15934 0e0c 7446     		mov	r4, lr
 15935 0e0e 2B46     		mov	r3, r5
 15936 0e10 07CB     		ldmia	r3!, {r0, r1, r2}
 15937 0e12 2060     		str	r0, [r4]	@ unaligned
 15938 0e14 6160     		str	r1, [r4, #4]	@ unaligned
 15939 0e16 A260     		str	r2, [r4, #8]	@ unaligned
 15940 0e18 1A88     		ldrh	r2, [r3]	@ unaligned
 15941 0e1a 9B78     		ldrb	r3, [r3, #2]
 15942 0e1c A281     		strh	r2, [r4, #12]	@ unaligned
 15943 0e1e A373     		strb	r3, [r4, #14]
2116:..\src/command_processing.c ****                     break;
 15944              		.loc 1 2116 0
 15945 0e20 00BF     		nop
 15946              	.L609:
2117:..\src/command_processing.c ****             }
2118:..\src/command_processing.c **** 
2119:..\src/command_processing.c ****             switch(MOT->control_mode) {
 15947              		.loc 1 2119 0
 15948 0e22 D7F88430 		ldr	r3, [r7, #132]
 15949 0e26 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 15950 0e2a 032B     		cmp	r3, #3
 15951 0e2c 63D8     		bhi	.L675
 15952 0e2e 01A2     		adr	r2, .L622
 15953 0e30 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 15954              		.p2align 2
 15955              	.L622:
 15956 0e34 450E0000 		.word	.L621+1
 15957 0e38 6F0E0000 		.word	.L623+1
 15958 0e3c 930E0000 		.word	.L624+1
 15959 0e40 B90E0000 		.word	.L625+1
 15960              		.p2align 1
 15961              	.L621:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 357


2120:..\src/command_processing.c ****                 case CONTROL_ANGLE:
2121:..\src/command_processing.c ****                     strcat(info_string, "Control mode: Position\r\n");
 15962              		.loc 1 2121 0
 15963 0e44 7869     		ldr	r0, [r7, #20]
 15964 0e46 FFF7FEFF 		bl	strlen
 15965 0e4a 0346     		mov	r3, r0
 15966 0e4c 1A46     		mov	r2, r3
 15967 0e4e 7B69     		ldr	r3, [r7, #20]
 15968 0e50 1344     		add	r3, r3, r2
 15969 0e52 6B4A     		ldr	r2, .L685+16
 15970 0e54 1D46     		mov	r5, r3
 15971 0e56 1446     		mov	r4, r2
 15972 0e58 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15973 0e5a 2860     		str	r0, [r5]	@ unaligned
 15974 0e5c 6960     		str	r1, [r5, #4]	@ unaligned
 15975 0e5e AA60     		str	r2, [r5, #8]	@ unaligned
 15976 0e60 EB60     		str	r3, [r5, #12]	@ unaligned
 15977 0e62 03CC     		ldmia	r4!, {r0, r1}
 15978 0e64 2861     		str	r0, [r5, #16]	@ unaligned
 15979 0e66 6961     		str	r1, [r5, #20]	@ unaligned
 15980 0e68 2378     		ldrb	r3, [r4]
 15981 0e6a 2B76     		strb	r3, [r5, #24]
2122:..\src/command_processing.c ****                     break;
 15982              		.loc 1 2122 0
 15983 0e6c 44E0     		b	.L626
 15984              	.L623:
2123:..\src/command_processing.c ****                 case CONTROL_PWM:
2124:..\src/command_processing.c ****                     strcat(info_string, "Control mode: PWM\r\n");
 15985              		.loc 1 2124 0
 15986 0e6e 7869     		ldr	r0, [r7, #20]
 15987 0e70 FFF7FEFF 		bl	strlen
 15988 0e74 0346     		mov	r3, r0
 15989 0e76 1A46     		mov	r2, r3
 15990 0e78 7B69     		ldr	r3, [r7, #20]
 15991 0e7a 1344     		add	r3, r3, r2
 15992 0e7c 614A     		ldr	r2, .L685+20
 15993 0e7e 1D46     		mov	r5, r3
 15994 0e80 1446     		mov	r4, r2
 15995 0e82 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15996 0e84 2860     		str	r0, [r5]	@ unaligned
 15997 0e86 6960     		str	r1, [r5, #4]	@ unaligned
 15998 0e88 AA60     		str	r2, [r5, #8]	@ unaligned
 15999 0e8a EB60     		str	r3, [r5, #12]	@ unaligned
 16000 0e8c 2068     		ldr	r0, [r4]	@ unaligned
 16001 0e8e 2861     		str	r0, [r5, #16]	@ unaligned
2125:..\src/command_processing.c ****                     break;
 16002              		.loc 1 2125 0
 16003 0e90 32E0     		b	.L626
 16004              	.L624:
2126:..\src/command_processing.c ****                 case CONTROL_CURRENT:
2127:..\src/command_processing.c ****                     strcat(info_string, "Control mode: Current\r\n");
 16005              		.loc 1 2127 0
 16006 0e92 7869     		ldr	r0, [r7, #20]
 16007 0e94 FFF7FEFF 		bl	strlen
 16008 0e98 0346     		mov	r3, r0
 16009 0e9a 1A46     		mov	r2, r3
 16010 0e9c 7B69     		ldr	r3, [r7, #20]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 358


 16011 0e9e 1344     		add	r3, r3, r2
 16012 0ea0 594A     		ldr	r2, .L685+24
 16013 0ea2 1D46     		mov	r5, r3
 16014 0ea4 1446     		mov	r4, r2
 16015 0ea6 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16016 0ea8 2860     		str	r0, [r5]	@ unaligned
 16017 0eaa 6960     		str	r1, [r5, #4]	@ unaligned
 16018 0eac AA60     		str	r2, [r5, #8]	@ unaligned
 16019 0eae EB60     		str	r3, [r5, #12]	@ unaligned
 16020 0eb0 03CC     		ldmia	r4!, {r0, r1}
 16021 0eb2 2861     		str	r0, [r5, #16]	@ unaligned
 16022 0eb4 6961     		str	r1, [r5, #20]	@ unaligned
2128:..\src/command_processing.c ****                     break;
 16023              		.loc 1 2128 0
 16024 0eb6 1FE0     		b	.L626
 16025              	.L625:
2129:..\src/command_processing.c ****                 case CURR_AND_POS_CONTROL:
2130:..\src/command_processing.c ****                     strcat(info_string, "Control mode: Position and Current\r\n");
 16026              		.loc 1 2130 0
 16027 0eb8 7869     		ldr	r0, [r7, #20]
 16028 0eba FFF7FEFF 		bl	strlen
 16029 0ebe 0346     		mov	r3, r0
 16030 0ec0 1A46     		mov	r2, r3
 16031 0ec2 7B69     		ldr	r3, [r7, #20]
 16032 0ec4 1344     		add	r3, r3, r2
 16033 0ec6 514A     		ldr	r2, .L685+28
 16034 0ec8 1446     		mov	r4, r2
 16035 0eca 9E46     		mov	lr, r3
 16036 0ecc 04F1200C 		add	ip, r4, #32
 16037              	.L627:
 16038 0ed0 7546     		mov	r5, lr
 16039 0ed2 2646     		mov	r6, r4
 16040 0ed4 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 16041 0ed6 2860     		str	r0, [r5]	@ unaligned
 16042 0ed8 6960     		str	r1, [r5, #4]	@ unaligned
 16043 0eda AA60     		str	r2, [r5, #8]	@ unaligned
 16044 0edc EB60     		str	r3, [r5, #12]	@ unaligned
 16045 0ede 1034     		adds	r4, r4, #16
 16046 0ee0 0EF1100E 		add	lr, lr, #16
 16047 0ee4 6445     		cmp	r4, ip
 16048 0ee6 F3D1     		bne	.L627
 16049 0ee8 7346     		mov	r3, lr
 16050 0eea 2246     		mov	r2, r4
 16051 0eec 1068     		ldr	r0, [r2]	@ unaligned
 16052 0eee 1860     		str	r0, [r3]	@ unaligned
 16053 0ef0 1279     		ldrb	r2, [r2, #4]
 16054 0ef2 1A71     		strb	r2, [r3, #4]
2131:..\src/command_processing.c ****                     break;
 16055              		.loc 1 2131 0
 16056 0ef4 00E0     		b	.L626
 16057              	.L675:
2132:..\src/command_processing.c ****                 default:
2133:..\src/command_processing.c ****                     break;
 16058              		.loc 1 2133 0
 16059 0ef6 00BF     		nop
 16060              	.L626:
2134:..\src/command_processing.c ****             }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 359


2135:..\src/command_processing.c **** 
2136:..\src/command_processing.c ****             if (MEM_P->enc[ENC_L].double_encoder_on_off)
 16061              		.loc 1 2136 0
 16062 0ef8 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 16063 0efc D7F88C10 		ldr	r1, [r7, #140]
 16064 0f00 1346     		mov	r3, r2
 16065 0f02 5B00     		lsls	r3, r3, #1
 16066 0f04 1344     		add	r3, r3, r2
 16067 0f06 1B01     		lsls	r3, r3, #4
 16068 0f08 0B44     		add	r3, r3, r1
 16069 0f0a 03F5D873 		add	r3, r3, #432
 16070 0f0e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16071 0f10 002B     		cmp	r3, #0
 16072 0f12 1CD0     		beq	.L628
2137:..\src/command_processing.c ****                 strcat(info_string, "Absolute encoder position: YES\r\n");
 16073              		.loc 1 2137 0
 16074 0f14 7869     		ldr	r0, [r7, #20]
 16075 0f16 FFF7FEFF 		bl	strlen
 16076 0f1a 0346     		mov	r3, r0
 16077 0f1c 1A46     		mov	r2, r3
 16078 0f1e 7B69     		ldr	r3, [r7, #20]
 16079 0f20 1344     		add	r3, r3, r2
 16080 0f22 3B4A     		ldr	r2, .L685+32
 16081 0f24 1446     		mov	r4, r2
 16082 0f26 9E46     		mov	lr, r3
 16083 0f28 04F1200C 		add	ip, r4, #32
 16084              	.L629:
 16085 0f2c 7546     		mov	r5, lr
 16086 0f2e 2646     		mov	r6, r4
 16087 0f30 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 16088 0f32 2860     		str	r0, [r5]	@ unaligned
 16089 0f34 6960     		str	r1, [r5, #4]	@ unaligned
 16090 0f36 AA60     		str	r2, [r5, #8]	@ unaligned
 16091 0f38 EB60     		str	r3, [r5, #12]	@ unaligned
 16092 0f3a 1034     		adds	r4, r4, #16
 16093 0f3c 0EF1100E 		add	lr, lr, #16
 16094 0f40 6445     		cmp	r4, ip
 16095 0f42 F3D1     		bne	.L629
 16096 0f44 7346     		mov	r3, lr
 16097 0f46 2246     		mov	r2, r4
 16098 0f48 1278     		ldrb	r2, [r2]
 16099 0f4a 1A70     		strb	r2, [r3]
 16100 0f4c 13E0     		b	.L630
 16101              	.L628:
2138:..\src/command_processing.c ****             else
2139:..\src/command_processing.c ****                 strcat(info_string, "Absolute encoder position: NO\r\n");
 16102              		.loc 1 2139 0
 16103 0f4e 7869     		ldr	r0, [r7, #20]
 16104 0f50 FFF7FEFF 		bl	strlen
 16105 0f54 0346     		mov	r3, r0
 16106 0f56 1A46     		mov	r2, r3
 16107 0f58 7B69     		ldr	r3, [r7, #20]
 16108 0f5a 1344     		add	r3, r3, r2
 16109 0f5c 2D4A     		ldr	r2, .L685+36
 16110 0f5e 1C46     		mov	r4, r3
 16111 0f60 1546     		mov	r5, r2
 16112 0f62 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 360


 16113 0f64 2060     		str	r0, [r4]	@ unaligned
 16114 0f66 6160     		str	r1, [r4, #4]	@ unaligned
 16115 0f68 A260     		str	r2, [r4, #8]	@ unaligned
 16116 0f6a E360     		str	r3, [r4, #12]	@ unaligned
 16117 0f6c 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 16118 0f6e 2061     		str	r0, [r4, #16]	@ unaligned
 16119 0f70 6161     		str	r1, [r4, #20]	@ unaligned
 16120 0f72 A261     		str	r2, [r4, #24]	@ unaligned
 16121 0f74 E361     		str	r3, [r4, #28]	@ unaligned
 16122              	.L630:
2140:..\src/command_processing.c **** 
2141:..\src/command_processing.c ****             sprintf(str, "Motor-Handle Ratio: %d\r\n", (int)MEM_P->enc[ENC_L].motor_handle_ratio);
 16123              		.loc 1 2141 0
 16124 0f76 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 16125 0f7a D7F88C10 		ldr	r1, [r7, #140]
 16126 0f7e 1346     		mov	r3, r2
 16127 0f80 5B00     		lsls	r3, r3, #1
 16128 0f82 1344     		add	r3, r3, r2
 16129 0f84 1B01     		lsls	r3, r3, #4
 16130 0f86 0B44     		add	r3, r3, r1
 16131 0f88 03F5DA73 		add	r3, r3, #436
 16132 0f8c 93F90030 		ldrsb	r3, [r3]
 16133 0f90 1A46     		mov	r2, r3
 16134 0f92 07F11C03 		add	r3, r7, #28
 16135 0f96 2049     		ldr	r1, .L685+40
 16136 0f98 1846     		mov	r0, r3
 16137 0f9a FFF7FEFF 		bl	sprintf
2142:..\src/command_processing.c ****             strcat(info_string, str);
 16138              		.loc 1 2142 0
 16139 0f9e 07F11C03 		add	r3, r7, #28
 16140 0fa2 1946     		mov	r1, r3
 16141 0fa4 7869     		ldr	r0, [r7, #20]
 16142 0fa6 FFF7FEFF 		bl	strcat
2143:..\src/command_processing.c **** #ifdef ELECTROSTIM_FW       // decided not to show when using SOFTHAND_FW to streamline ping, since
2144:..\src/command_processing.c ****             strcat(info_string, "Encoder indices used for motor control: ");
 16143              		.loc 1 2144 0
 16144 0faa 7869     		ldr	r0, [r7, #20]
 16145 0fac FFF7FEFF 		bl	strlen
 16146 0fb0 0346     		mov	r3, r0
 16147 0fb2 1A46     		mov	r2, r3
 16148 0fb4 7B69     		ldr	r3, [r7, #20]
 16149 0fb6 1344     		add	r3, r3, r2
 16150 0fb8 184A     		ldr	r2, .L685+44
 16151 0fba 1446     		mov	r4, r2
 16152 0fbc 9E46     		mov	lr, r3
 16153 0fbe 04F1200C 		add	ip, r4, #32
 16154              	.L631:
 16155 0fc2 7546     		mov	r5, lr
 16156 0fc4 2646     		mov	r6, r4
 16157 0fc6 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 16158 0fc8 2860     		str	r0, [r5]	@ unaligned
 16159 0fca 6960     		str	r1, [r5, #4]	@ unaligned
 16160 0fcc AA60     		str	r2, [r5, #8]	@ unaligned
 16161 0fce EB60     		str	r3, [r5, #12]	@ unaligned
 16162 0fd0 1034     		adds	r4, r4, #16
 16163 0fd2 0EF1100E 		add	lr, lr, #16
 16164 0fd6 6445     		cmp	r4, ip
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 361


 16165 0fd8 F3D1     		bne	.L631
 16166 0fda 7246     		mov	r2, lr
 16167 0fdc 2346     		mov	r3, r4
 16168 0fde 03CB     		ldmia	r3!, {r0, r1}
 16169 0fe0 1060     		str	r0, [r2]	@ unaligned
 16170 0fe2 5160     		str	r1, [r2, #4]	@ unaligned
 16171 0fe4 1B78     		ldrb	r3, [r3]
 16172 0fe6 1372     		strb	r3, [r2, #8]
2145:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; ++i) {
 16173              		.loc 1 2145 0
 16174 0fe8 0023     		movs	r3, #0
 16175 0fea C7F89430 		str	r3, [r7, #148]
 16176 0fee 48E0     		b	.L632
 16177              	.L686:
 16178              		.align	2
 16179              	.L685:
 16180 0ff0 3C150000 		.word	.LC204
 16181 0ff4 54150000 		.word	.LC205
 16182 0ff8 70150000 		.word	.LC206
 16183 0ffc 88150000 		.word	.LC207
 16184 1000 B8150000 		.word	.LC208
 16185 1004 D4150000 		.word	.LC209
 16186 1008 E8150000 		.word	.LC210
 16187 100c 00160000 		.word	.LC211
 16188 1010 28160000 		.word	.LC212
 16189 1014 4C160000 		.word	.LC213
 16190 1018 6C160000 		.word	.LC214
 16191 101c 88160000 		.word	.LC215
 16192              	.L634:
2146:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].Enc_idx_use_for_control[i]);
 16193              		.loc 1 2146 0
 16194 1020 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 16195 1024 D7F88C10 		ldr	r1, [r7, #140]
 16196 1028 1346     		mov	r3, r2
 16197 102a 5B00     		lsls	r3, r3, #1
 16198 102c 1344     		add	r3, r3, r2
 16199 102e 1B01     		lsls	r3, r3, #4
 16200 1030 CA18     		adds	r2, r1, r3
 16201 1032 D7F89430 		ldr	r3, [r7, #148]
 16202 1036 1344     		add	r3, r3, r2
 16203 1038 03F2B113 		addw	r3, r3, #433
 16204 103c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16205 103e 1A46     		mov	r2, r3
 16206 1040 07F11C03 		add	r3, r7, #28
 16207 1044 AE49     		ldr	r1, .L687
 16208 1046 1846     		mov	r0, r3
 16209 1048 FFF7FEFF 		bl	sprintf
2147:..\src/command_processing.c ****                 strcat(info_string, str);
 16210              		.loc 1 2147 0
 16211 104c 07F11C03 		add	r3, r7, #28
 16212 1050 1946     		mov	r1, r3
 16213 1052 7869     		ldr	r0, [r7, #20]
 16214 1054 FFF7FEFF 		bl	strcat
2148:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
 16215              		.loc 1 2148 0
 16216 1058 D7F89430 		ldr	r3, [r7, #148]
 16217 105c 022B     		cmp	r3, #2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 362


 16218 105e 0BD0     		beq	.L633
2149:..\src/command_processing.c ****                     strcat(info_string, ", ");
 16219              		.loc 1 2149 0
 16220 1060 7869     		ldr	r0, [r7, #20]
 16221 1062 FFF7FEFF 		bl	strlen
 16222 1066 0346     		mov	r3, r0
 16223 1068 1A46     		mov	r2, r3
 16224 106a 7B69     		ldr	r3, [r7, #20]
 16225 106c 1344     		add	r3, r3, r2
 16226 106e A54A     		ldr	r2, .L687+4
 16227 1070 1188     		ldrh	r1, [r2]	@ unaligned
 16228 1072 9278     		ldrb	r2, [r2, #2]
 16229 1074 1980     		strh	r1, [r3]	@ unaligned
 16230 1076 9A70     		strb	r2, [r3, #2]
 16231              	.L633:
2145:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].Enc_idx_use_for_control[i]);
 16232              		.loc 1 2145 0 discriminator 2
 16233 1078 D7F89430 		ldr	r3, [r7, #148]
 16234 107c 0133     		adds	r3, r3, #1
 16235 107e C7F89430 		str	r3, [r7, #148]
 16236              	.L632:
2145:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].Enc_idx_use_for_control[i]);
 16237              		.loc 1 2145 0 is_stmt 0 discriminator 1
 16238 1082 D7F89430 		ldr	r3, [r7, #148]
 16239 1086 022B     		cmp	r3, #2
 16240 1088 CADD     		ble	.L634
2150:..\src/command_processing.c ****                 }                
2151:..\src/command_processing.c ****             }
2152:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16241              		.loc 1 2152 0 is_stmt 1
 16242 108a 7869     		ldr	r0, [r7, #20]
 16243 108c FFF7FEFF 		bl	strlen
 16244 1090 0346     		mov	r3, r0
 16245 1092 1A46     		mov	r2, r3
 16246 1094 7B69     		ldr	r3, [r7, #20]
 16247 1096 1344     		add	r3, r3, r2
 16248 1098 9B4A     		ldr	r2, .L687+8
 16249 109a 1188     		ldrh	r1, [r2]	@ unaligned
 16250 109c 9278     		ldrb	r2, [r2, #2]
 16251 109e 1980     		strh	r1, [r3]	@ unaligned
 16252 10a0 9A70     		strb	r2, [r3, #2]
2153:..\src/command_processing.c ****             sprintf(str, "First Gear: %d teeth\r\n", (int)MEM_P->enc[ENC_L].gears_params[0]);
 16253              		.loc 1 2153 0
 16254 10a2 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 16255 10a6 D7F88C10 		ldr	r1, [r7, #140]
 16256 10aa 1346     		mov	r3, r2
 16257 10ac 5B00     		lsls	r3, r3, #1
 16258 10ae 1344     		add	r3, r3, r2
 16259 10b0 1B01     		lsls	r3, r3, #4
 16260 10b2 0B44     		add	r3, r3, r1
 16261 10b4 03F2B513 		addw	r3, r3, #437
 16262 10b8 93F90030 		ldrsb	r3, [r3]
 16263 10bc 1A46     		mov	r2, r3
 16264 10be 07F11C03 		add	r3, r7, #28
 16265 10c2 9249     		ldr	r1, .L687+12
 16266 10c4 1846     		mov	r0, r3
 16267 10c6 FFF7FEFF 		bl	sprintf
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 363


2154:..\src/command_processing.c ****             strcat(info_string, str);
 16268              		.loc 1 2154 0
 16269 10ca 07F11C03 		add	r3, r7, #28
 16270 10ce 1946     		mov	r1, r3
 16271 10d0 7869     		ldr	r0, [r7, #20]
 16272 10d2 FFF7FEFF 		bl	strcat
2155:..\src/command_processing.c ****             sprintf(str, "Second Gear: %d teeth\r\n", (int)MEM_P->enc[ENC_L].gears_params[1]);
 16273              		.loc 1 2155 0
 16274 10d6 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 16275 10da D7F88C10 		ldr	r1, [r7, #140]
 16276 10de 1346     		mov	r3, r2
 16277 10e0 5B00     		lsls	r3, r3, #1
 16278 10e2 1344     		add	r3, r3, r2
 16279 10e4 1B01     		lsls	r3, r3, #4
 16280 10e6 0B44     		add	r3, r3, r1
 16281 10e8 03F5DB73 		add	r3, r3, #438
 16282 10ec 93F90030 		ldrsb	r3, [r3]
 16283 10f0 1A46     		mov	r2, r3
 16284 10f2 07F11C03 		add	r3, r7, #28
 16285 10f6 8649     		ldr	r1, .L687+16
 16286 10f8 1846     		mov	r0, r3
 16287 10fa FFF7FEFF 		bl	sprintf
2156:..\src/command_processing.c ****             strcat(info_string, str);
 16288              		.loc 1 2156 0
 16289 10fe 07F11C03 		add	r3, r7, #28
 16290 1102 1946     		mov	r1, r3
 16291 1104 7869     		ldr	r0, [r7, #20]
 16292 1106 FFF7FEFF 		bl	strcat
2157:..\src/command_processing.c ****             sprintf(str, "Gear invariant: %d\r\n", (int)MEM_P->enc[ENC_L].gears_params[2]);
 16293              		.loc 1 2157 0
 16294 110a 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 16295 110e D7F88C10 		ldr	r1, [r7, #140]
 16296 1112 1346     		mov	r3, r2
 16297 1114 5B00     		lsls	r3, r3, #1
 16298 1116 1344     		add	r3, r3, r2
 16299 1118 1B01     		lsls	r3, r3, #4
 16300 111a 0B44     		add	r3, r3, r1
 16301 111c 03F2B713 		addw	r3, r3, #439
 16302 1120 93F90030 		ldrsb	r3, [r3]
 16303 1124 1A46     		mov	r2, r3
 16304 1126 07F11C03 		add	r3, r7, #28
 16305 112a 7A49     		ldr	r1, .L687+20
 16306 112c 1846     		mov	r0, r3
 16307 112e FFF7FEFF 		bl	sprintf
2158:..\src/command_processing.c ****             strcat(info_string, str);
 16308              		.loc 1 2158 0
 16309 1132 07F11C03 		add	r3, r7, #28
 16310 1136 1946     		mov	r1, r3
 16311 1138 7869     		ldr	r0, [r7, #20]
 16312 113a FFF7FEFF 		bl	strcat
2159:..\src/command_processing.c **** #endif           
2160:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16313              		.loc 1 2160 0
 16314 113e 7869     		ldr	r0, [r7, #20]
 16315 1140 FFF7FEFF 		bl	strlen
 16316 1144 0346     		mov	r3, r0
 16317 1146 1A46     		mov	r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 364


 16318 1148 7B69     		ldr	r3, [r7, #20]
 16319 114a 1344     		add	r3, r3, r2
 16320 114c 6E4A     		ldr	r2, .L687+8
 16321 114e 1188     		ldrh	r1, [r2]	@ unaligned
 16322 1150 9278     		ldrb	r2, [r2, #2]
 16323 1152 1980     		strh	r1, [r3]	@ unaligned
 16324 1154 9A70     		strb	r2, [r3, #2]
2161:..\src/command_processing.c **** 
2162:..\src/command_processing.c ****             strcat(info_string, "Sensor resolution: ");
 16325              		.loc 1 2162 0
 16326 1156 7869     		ldr	r0, [r7, #20]
 16327 1158 FFF7FEFF 		bl	strlen
 16328 115c 0346     		mov	r3, r0
 16329 115e 1A46     		mov	r2, r3
 16330 1160 7B69     		ldr	r3, [r7, #20]
 16331 1162 1344     		add	r3, r3, r2
 16332 1164 6C4A     		ldr	r2, .L687+24
 16333 1166 1D46     		mov	r5, r3
 16334 1168 1446     		mov	r4, r2
 16335 116a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16336 116c 2860     		str	r0, [r5]	@ unaligned
 16337 116e 6960     		str	r1, [r5, #4]	@ unaligned
 16338 1170 AA60     		str	r2, [r5, #8]	@ unaligned
 16339 1172 EB60     		str	r3, [r5, #12]	@ unaligned
 16340 1174 2068     		ldr	r0, [r4]	@ unaligned
 16341 1176 2861     		str	r0, [r5, #16]	@ unaligned
2163:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; ++i) {
 16342              		.loc 1 2163 0
 16343 1178 0023     		movs	r3, #0
 16344 117a C7F89430 		str	r3, [r7, #148]
 16345 117e 30E0     		b	.L635
 16346              	.L637:
2164:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 16347              		.loc 1 2164 0
 16348 1180 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 16349 1184 D7F88C10 		ldr	r1, [r7, #140]
 16350 1188 1346     		mov	r3, r2
 16351 118a 5B00     		lsls	r3, r3, #1
 16352 118c 1344     		add	r3, r3, r2
 16353 118e 1B01     		lsls	r3, r3, #4
 16354 1190 CA18     		adds	r2, r1, r3
 16355 1192 D7F89430 		ldr	r3, [r7, #148]
 16356 1196 1344     		add	r3, r3, r2
 16357 1198 03F29513 		addw	r3, r3, #405
 16358 119c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16359 119e 1A46     		mov	r2, r3
 16360 11a0 07F11C03 		add	r3, r7, #28
 16361 11a4 5649     		ldr	r1, .L687
 16362 11a6 1846     		mov	r0, r3
 16363 11a8 FFF7FEFF 		bl	sprintf
2165:..\src/command_processing.c ****                 strcat(info_string, str);
 16364              		.loc 1 2165 0
 16365 11ac 07F11C03 		add	r3, r7, #28
 16366 11b0 1946     		mov	r1, r3
 16367 11b2 7869     		ldr	r0, [r7, #20]
 16368 11b4 FFF7FEFF 		bl	strcat
2166:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 365


 16369              		.loc 1 2166 0
 16370 11b8 D7F89430 		ldr	r3, [r7, #148]
 16371 11bc 022B     		cmp	r3, #2
 16372 11be 0BD0     		beq	.L636
2167:..\src/command_processing.c ****                     strcat(info_string, ", ");
 16373              		.loc 1 2167 0
 16374 11c0 7869     		ldr	r0, [r7, #20]
 16375 11c2 FFF7FEFF 		bl	strlen
 16376 11c6 0346     		mov	r3, r0
 16377 11c8 1A46     		mov	r2, r3
 16378 11ca 7B69     		ldr	r3, [r7, #20]
 16379 11cc 1344     		add	r3, r3, r2
 16380 11ce 4D4A     		ldr	r2, .L687+4
 16381 11d0 1188     		ldrh	r1, [r2]	@ unaligned
 16382 11d2 9278     		ldrb	r2, [r2, #2]
 16383 11d4 1980     		strh	r1, [r3]	@ unaligned
 16384 11d6 9A70     		strb	r2, [r3, #2]
 16385              	.L636:
2163:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 16386              		.loc 1 2163 0 discriminator 2
 16387 11d8 D7F89430 		ldr	r3, [r7, #148]
 16388 11dc 0133     		adds	r3, r3, #1
 16389 11de C7F89430 		str	r3, [r7, #148]
 16390              	.L635:
2163:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 16391              		.loc 1 2163 0 is_stmt 0 discriminator 1
 16392 11e2 D7F89430 		ldr	r3, [r7, #148]
 16393 11e6 022B     		cmp	r3, #2
 16394 11e8 CADD     		ble	.L637
2168:..\src/command_processing.c ****                 }                
2169:..\src/command_processing.c ****             }
2170:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16395              		.loc 1 2170 0 is_stmt 1
 16396 11ea 7869     		ldr	r0, [r7, #20]
 16397 11ec FFF7FEFF 		bl	strlen
 16398 11f0 0346     		mov	r3, r0
 16399 11f2 1A46     		mov	r2, r3
 16400 11f4 7B69     		ldr	r3, [r7, #20]
 16401 11f6 1344     		add	r3, r3, r2
 16402 11f8 434A     		ldr	r2, .L687+8
 16403 11fa 1188     		ldrh	r1, [r2]	@ unaligned
 16404 11fc 9278     		ldrb	r2, [r2, #2]
 16405 11fe 1980     		strh	r1, [r3]	@ unaligned
 16406 1200 9A70     		strb	r2, [r3, #2]
2171:..\src/command_processing.c **** 
2172:..\src/command_processing.c ****             strcat(info_string, "Measurement Offset: ");
 16407              		.loc 1 2172 0
 16408 1202 7869     		ldr	r0, [r7, #20]
 16409 1204 FFF7FEFF 		bl	strlen
 16410 1208 0346     		mov	r3, r0
 16411 120a 1A46     		mov	r2, r3
 16412 120c 7B69     		ldr	r3, [r7, #20]
 16413 120e 1344     		add	r3, r3, r2
 16414 1210 424A     		ldr	r2, .L687+28
 16415 1212 1D46     		mov	r5, r3
 16416 1214 1446     		mov	r4, r2
 16417 1216 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 366


 16418 1218 2860     		str	r0, [r5]	@ unaligned
 16419 121a 6960     		str	r1, [r5, #4]	@ unaligned
 16420 121c AA60     		str	r2, [r5, #8]	@ unaligned
 16421 121e EB60     		str	r3, [r5, #12]	@ unaligned
 16422 1220 2068     		ldr	r0, [r4]	@ unaligned
 16423 1222 2861     		str	r0, [r5, #16]	@ unaligned
 16424 1224 2379     		ldrb	r3, [r4, #4]
 16425 1226 2B75     		strb	r3, [r5, #20]
2173:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; ++i) {
 16426              		.loc 1 2173 0
 16427 1228 0023     		movs	r3, #0
 16428 122a C7F89430 		str	r3, [r7, #148]
 16429 122e 3FE0     		b	.L638
 16430              	.L640:
2174:..\src/command_processing.c ****                 sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i])
 16431              		.loc 1 2174 0
 16432 1230 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 16433 1234 D7F88C10 		ldr	r1, [r7, #140]
 16434 1238 1346     		mov	r3, r2
 16435 123a 5B00     		lsls	r3, r3, #1
 16436 123c 1344     		add	r3, r3, r2
 16437 123e 9B00     		lsls	r3, r3, #2
 16438 1240 D7F89420 		ldr	r2, [r7, #148]
 16439 1244 1344     		add	r3, r3, r2
 16440 1246 6633     		adds	r3, r3, #102
 16441 1248 51F82310 		ldr	r1, [r1, r3, lsl #2]
 16442 124c 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 16443 1250 D7F88C00 		ldr	r0, [r7, #140]
 16444 1254 1346     		mov	r3, r2
 16445 1256 5B00     		lsls	r3, r3, #1
 16446 1258 1344     		add	r3, r3, r2
 16447 125a 1B01     		lsls	r3, r3, #4
 16448 125c C218     		adds	r2, r0, r3
 16449 125e D7F89430 		ldr	r3, [r7, #148]
 16450 1262 1344     		add	r3, r3, r2
 16451 1264 03F29513 		addw	r3, r3, #405
 16452 1268 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16453 126a 41FA03F2 		asr	r2, r1, r3
 16454 126e 07F11C03 		add	r3, r7, #28
 16455 1272 2B49     		ldr	r1, .L687+32
 16456 1274 1846     		mov	r0, r3
 16457 1276 FFF7FEFF 		bl	sprintf
2175:..\src/command_processing.c ****                 strcat(info_string, str);
 16458              		.loc 1 2175 0
 16459 127a 07F11C03 		add	r3, r7, #28
 16460 127e 1946     		mov	r1, r3
 16461 1280 7869     		ldr	r0, [r7, #20]
 16462 1282 FFF7FEFF 		bl	strcat
2176:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
 16463              		.loc 1 2176 0
 16464 1286 D7F89430 		ldr	r3, [r7, #148]
 16465 128a 022B     		cmp	r3, #2
 16466 128c 0BD0     		beq	.L639
2177:..\src/command_processing.c ****                     strcat(info_string, ", ");
 16467              		.loc 1 2177 0
 16468 128e 7869     		ldr	r0, [r7, #20]
 16469 1290 FFF7FEFF 		bl	strlen
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 367


 16470 1294 0346     		mov	r3, r0
 16471 1296 1A46     		mov	r2, r3
 16472 1298 7B69     		ldr	r3, [r7, #20]
 16473 129a 1344     		add	r3, r3, r2
 16474 129c 194A     		ldr	r2, .L687+4
 16475 129e 1188     		ldrh	r1, [r2]	@ unaligned
 16476 12a0 9278     		ldrb	r2, [r2, #2]
 16477 12a2 1980     		strh	r1, [r3]	@ unaligned
 16478 12a4 9A70     		strb	r2, [r3, #2]
 16479              	.L639:
2173:..\src/command_processing.c ****                 sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i])
 16480              		.loc 1 2173 0 discriminator 2
 16481 12a6 D7F89430 		ldr	r3, [r7, #148]
 16482 12aa 0133     		adds	r3, r3, #1
 16483 12ac C7F89430 		str	r3, [r7, #148]
 16484              	.L638:
2173:..\src/command_processing.c ****                 sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i])
 16485              		.loc 1 2173 0 is_stmt 0 discriminator 1
 16486 12b0 D7F89430 		ldr	r3, [r7, #148]
 16487 12b4 022B     		cmp	r3, #2
 16488 12b6 BBDD     		ble	.L640
2178:..\src/command_processing.c ****                 }
2179:..\src/command_processing.c ****             }
2180:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16489              		.loc 1 2180 0 is_stmt 1
 16490 12b8 7869     		ldr	r0, [r7, #20]
 16491 12ba FFF7FEFF 		bl	strlen
 16492 12be 0346     		mov	r3, r0
 16493 12c0 1A46     		mov	r2, r3
 16494 12c2 7B69     		ldr	r3, [r7, #20]
 16495 12c4 1344     		add	r3, r3, r2
 16496 12c6 104A     		ldr	r2, .L687+8
 16497 12c8 1188     		ldrh	r1, [r2]	@ unaligned
 16498 12ca 9278     		ldrb	r2, [r2, #2]
 16499 12cc 1980     		strh	r1, [r3]	@ unaligned
 16500 12ce 9A70     		strb	r2, [r3, #2]
2181:..\src/command_processing.c ****                 
2182:..\src/command_processing.c ****             strcat(info_string, "Measurement Multiplier: ");
 16501              		.loc 1 2182 0
 16502 12d0 7869     		ldr	r0, [r7, #20]
 16503 12d2 FFF7FEFF 		bl	strlen
 16504 12d6 0346     		mov	r3, r0
 16505 12d8 1A46     		mov	r2, r3
 16506 12da 7B69     		ldr	r3, [r7, #20]
 16507 12dc 1344     		add	r3, r3, r2
 16508 12de 114A     		ldr	r2, .L687+36
 16509 12e0 1D46     		mov	r5, r3
 16510 12e2 1446     		mov	r4, r2
 16511 12e4 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16512 12e6 2860     		str	r0, [r5]	@ unaligned
 16513 12e8 6960     		str	r1, [r5, #4]	@ unaligned
 16514 12ea AA60     		str	r2, [r5, #8]	@ unaligned
 16515 12ec EB60     		str	r3, [r5, #12]	@ unaligned
 16516 12ee 03CC     		ldmia	r4!, {r0, r1}
 16517 12f0 2861     		str	r0, [r5, #16]	@ unaligned
 16518 12f2 6961     		str	r1, [r5, #20]	@ unaligned
 16519 12f4 2378     		ldrb	r3, [r4]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 368


 16520 12f6 2B76     		strb	r3, [r5, #24]
2183:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; ++i) {
 16521              		.loc 1 2183 0
 16522 12f8 0023     		movs	r3, #0
 16523 12fa C7F89430 		str	r3, [r7, #148]
 16524 12fe 49E0     		b	.L641
 16525              	.L688:
 16526              		.align	2
 16527              	.L687:
 16528 1300 7C130000 		.word	.LC185
 16529 1304 80130000 		.word	.LC186
 16530 1308 34110000 		.word	.LC154
 16531 130c B4160000 		.word	.LC216
 16532 1310 CC160000 		.word	.LC217
 16533 1314 E4160000 		.word	.LC218
 16534 1318 FC160000 		.word	.LC219
 16535 131c 10170000 		.word	.LC220
 16536 1320 28170000 		.word	.LC221
 16537 1324 2C170000 		.word	.LC222
 16538              	.L643:
2184:..\src/command_processing.c ****                 sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 16539              		.loc 1 2184 0
 16540 1328 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 16541 132c D7F88C10 		ldr	r1, [r7, #140]
 16542 1330 1346     		mov	r3, r2
 16543 1332 5B00     		lsls	r3, r3, #1
 16544 1334 1344     		add	r3, r3, r2
 16545 1336 9B00     		lsls	r3, r3, #2
 16546 1338 D7F89420 		ldr	r2, [r7, #148]
 16547 133c 1344     		add	r3, r3, r2
 16548 133e 6833     		adds	r3, r3, #104
 16549 1340 9B00     		lsls	r3, r3, #2
 16550 1342 0B44     		add	r3, r3, r1
 16551 1344 5B68     		ldr	r3, [r3, #4]	@ float
 16552 1346 1846     		mov	r0, r3
 16553 1348 FFF7FEFF 		bl	__aeabi_f2d
 16554 134c 0346     		mov	r3, r0
 16555 134e 0C46     		mov	r4, r1
 16556 1350 07F11C00 		add	r0, r7, #28
 16557 1354 1A46     		mov	r2, r3
 16558 1356 2346     		mov	r3, r4
 16559 1358 BD49     		ldr	r1, .L689
 16560 135a FFF7FEFF 		bl	sprintf
2185:..\src/command_processing.c ****                 strcat(info_string, str);
 16561              		.loc 1 2185 0
 16562 135e 07F11C03 		add	r3, r7, #28
 16563 1362 1946     		mov	r1, r3
 16564 1364 7869     		ldr	r0, [r7, #20]
 16565 1366 FFF7FEFF 		bl	strcat
2186:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
 16566              		.loc 1 2186 0
 16567 136a D7F89430 		ldr	r3, [r7, #148]
 16568 136e 022B     		cmp	r3, #2
 16569 1370 0BD0     		beq	.L642
2187:..\src/command_processing.c ****                     strcat(info_string, ", ");
 16570              		.loc 1 2187 0
 16571 1372 7869     		ldr	r0, [r7, #20]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 369


 16572 1374 FFF7FEFF 		bl	strlen
 16573 1378 0346     		mov	r3, r0
 16574 137a 1A46     		mov	r2, r3
 16575 137c 7B69     		ldr	r3, [r7, #20]
 16576 137e 1344     		add	r3, r3, r2
 16577 1380 B44A     		ldr	r2, .L689+4
 16578 1382 1188     		ldrh	r1, [r2]	@ unaligned
 16579 1384 9278     		ldrb	r2, [r2, #2]
 16580 1386 1980     		strh	r1, [r3]	@ unaligned
 16581 1388 9A70     		strb	r2, [r3, #2]
 16582              	.L642:
2183:..\src/command_processing.c ****                 sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 16583              		.loc 1 2183 0 discriminator 2
 16584 138a D7F89430 		ldr	r3, [r7, #148]
 16585 138e 0133     		adds	r3, r3, #1
 16586 1390 C7F89430 		str	r3, [r7, #148]
 16587              	.L641:
2183:..\src/command_processing.c ****                 sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 16588              		.loc 1 2183 0 is_stmt 0 discriminator 1
 16589 1394 D7F89430 		ldr	r3, [r7, #148]
 16590 1398 022B     		cmp	r3, #2
 16591 139a C5DD     		ble	.L643
2188:..\src/command_processing.c ****                 }
2189:..\src/command_processing.c ****             }
2190:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16592              		.loc 1 2190 0 is_stmt 1
 16593 139c 7869     		ldr	r0, [r7, #20]
 16594 139e FFF7FEFF 		bl	strlen
 16595 13a2 0346     		mov	r3, r0
 16596 13a4 1A46     		mov	r2, r3
 16597 13a6 7B69     		ldr	r3, [r7, #20]
 16598 13a8 1344     		add	r3, r3, r2
 16599 13aa AB4A     		ldr	r2, .L689+8
 16600 13ac 1188     		ldrh	r1, [r2]	@ unaligned
 16601 13ae 9278     		ldrb	r2, [r2, #2]
 16602 13b0 1980     		strh	r1, [r3]	@ unaligned
 16603 13b2 9A70     		strb	r2, [r3, #2]
2191:..\src/command_processing.c ****             
2192:..\src/command_processing.c ****     		sprintf(str, "Current lookup table: %f, %f, %f, %f, %f, %f\r\n", 
2193:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 16604              		.loc 1 2193 0
 16605 13b4 D7F88430 		ldr	r3, [r7, #132]
 16606 13b8 5B6C     		ldr	r3, [r3, #68]	@ float
2192:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 16607              		.loc 1 2192 0
 16608 13ba 1846     		mov	r0, r3
 16609 13bc FFF7FEFF 		bl	__aeabi_f2d
 16610 13c0 C7E90201 		strd	r0, [r7, #8]
 16611              		.loc 1 2193 0
 16612 13c4 D7F88430 		ldr	r3, [r7, #132]
 16613 13c8 9B6C     		ldr	r3, [r3, #72]	@ float
2192:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 16614              		.loc 1 2192 0
 16615 13ca 1846     		mov	r0, r3
 16616 13cc FFF7FEFF 		bl	__aeabi_f2d
 16617 13d0 0446     		mov	r4, r0
 16618 13d2 0D46     		mov	r5, r1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 370


 16619              		.loc 1 2193 0
 16620 13d4 D7F88430 		ldr	r3, [r7, #132]
 16621 13d8 DB6C     		ldr	r3, [r3, #76]	@ float
2192:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 16622              		.loc 1 2192 0
 16623 13da 1846     		mov	r0, r3
 16624 13dc FFF7FEFF 		bl	__aeabi_f2d
 16625 13e0 8046     		mov	r8, r0
 16626 13e2 8946     		mov	r9, r1
2194:..\src/command_processing.c ****                 MOT->curr_lookup[3], MOT->curr_lookup[4], MOT->curr_lookup[5]);
 16627              		.loc 1 2194 0
 16628 13e4 D7F88430 		ldr	r3, [r7, #132]
 16629 13e8 1B6D     		ldr	r3, [r3, #80]	@ float
2192:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 16630              		.loc 1 2192 0
 16631 13ea 1846     		mov	r0, r3
 16632 13ec FFF7FEFF 		bl	__aeabi_f2d
 16633 13f0 8246     		mov	r10, r0
 16634 13f2 8B46     		mov	fp, r1
 16635              		.loc 1 2194 0
 16636 13f4 D7F88430 		ldr	r3, [r7, #132]
 16637 13f8 5B6D     		ldr	r3, [r3, #84]	@ float
2192:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 16638              		.loc 1 2192 0
 16639 13fa 1846     		mov	r0, r3
 16640 13fc FFF7FEFF 		bl	__aeabi_f2d
 16641 1400 C7E90001 		strd	r0, [r7]
 16642              		.loc 1 2194 0
 16643 1404 D7F88430 		ldr	r3, [r7, #132]
 16644 1408 9B6D     		ldr	r3, [r3, #88]	@ float
2192:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 16645              		.loc 1 2192 0
 16646 140a 1846     		mov	r0, r3
 16647 140c FFF7FEFF 		bl	__aeabi_f2d
 16648 1410 0246     		mov	r2, r0
 16649 1412 0B46     		mov	r3, r1
 16650 1414 07F11C00 		add	r0, r7, #28
 16651 1418 CDE90823 		strd	r2, [sp, #32]
 16652 141c D7E90012 		ldrd	r1, [r7]
 16653 1420 CDE90612 		strd	r1, [sp, #24]
 16654 1424 CDE904AB 		strd	r10, [sp, #16]
 16655 1428 CDE90289 		strd	r8, [sp, #8]
 16656 142c CDE90045 		strd	r4, [sp]
 16657 1430 D7E90223 		ldrd	r2, [r7, #8]
 16658 1434 8949     		ldr	r1, .L689+12
 16659 1436 FFF7FEFF 		bl	sprintf
2195:..\src/command_processing.c **** 		    strcat(info_string, str);       
 16660              		.loc 1 2195 0
 16661 143a 07F11C03 		add	r3, r7, #28
 16662 143e 1946     		mov	r1, r3
 16663 1440 7869     		ldr	r0, [r7, #20]
 16664 1442 FFF7FEFF 		bl	strcat
2196:..\src/command_processing.c **** 
2197:..\src/command_processing.c ****             sprintf(str, "Position limit active: %d", (int)MOT->pos_lim_flag);
 16665              		.loc 1 2197 0
 16666 1446 D7F88430 		ldr	r3, [r7, #132]
 16667 144a 93F83330 		ldrb	r3, [r3, #51]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 371


 16668 144e 1A46     		mov	r2, r3
 16669 1450 07F11C03 		add	r3, r7, #28
 16670 1454 8249     		ldr	r1, .L689+16
 16671 1456 1846     		mov	r0, r3
 16672 1458 FFF7FEFF 		bl	sprintf
2198:..\src/command_processing.c ****             strcat(info_string, str);
 16673              		.loc 1 2198 0
 16674 145c 07F11C03 		add	r3, r7, #28
 16675 1460 1946     		mov	r1, r3
 16676 1462 7869     		ldr	r0, [r7, #20]
 16677 1464 FFF7FEFF 		bl	strcat
2199:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16678              		.loc 1 2199 0
 16679 1468 7869     		ldr	r0, [r7, #20]
 16680 146a FFF7FEFF 		bl	strlen
 16681 146e 0346     		mov	r3, r0
 16682 1470 1A46     		mov	r2, r3
 16683 1472 7B69     		ldr	r3, [r7, #20]
 16684 1474 1344     		add	r3, r3, r2
 16685 1476 784A     		ldr	r2, .L689+8
 16686 1478 1188     		ldrh	r1, [r2]	@ unaligned
 16687 147a 9278     		ldrb	r2, [r2, #2]
 16688 147c 1980     		strh	r1, [r3]	@ unaligned
 16689 147e 9A70     		strb	r2, [r3, #2]
2200:..\src/command_processing.c **** 
2201:..\src/command_processing.c ****             sprintf(str, "Position limit motor: inf -> %ld  ", (int32)MOT->pos_lim_inf >> MEM_P->en
 16690              		.loc 1 2201 0
 16691 1480 D7F88430 		ldr	r3, [r7, #132]
 16692 1484 596B     		ldr	r1, [r3, #52]
 16693 1486 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 16694 148a D7F88C00 		ldr	r0, [r7, #140]
 16695 148e 1346     		mov	r3, r2
 16696 1490 5B00     		lsls	r3, r3, #1
 16697 1492 1344     		add	r3, r3, r2
 16698 1494 1B01     		lsls	r3, r3, #4
 16699 1496 0344     		add	r3, r3, r0
 16700 1498 03F29513 		addw	r3, r3, #405
 16701 149c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16702 149e 41FA03F2 		asr	r2, r1, r3
 16703 14a2 07F11C03 		add	r3, r7, #28
 16704 14a6 6F49     		ldr	r1, .L689+20
 16705 14a8 1846     		mov	r0, r3
 16706 14aa FFF7FEFF 		bl	sprintf
2202:..\src/command_processing.c ****             strcat(info_string, str);
 16707              		.loc 1 2202 0
 16708 14ae 07F11C03 		add	r3, r7, #28
 16709 14b2 1946     		mov	r1, r3
 16710 14b4 7869     		ldr	r0, [r7, #20]
 16711 14b6 FFF7FEFF 		bl	strcat
2203:..\src/command_processing.c ****             sprintf(str, "sup -> %ld\r\n", (int32)MOT->pos_lim_sup >> MEM_P->enc[ENC_L].res[0]);
 16712              		.loc 1 2203 0
 16713 14ba D7F88430 		ldr	r3, [r7, #132]
 16714 14be 996B     		ldr	r1, [r3, #56]
 16715 14c0 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 16716 14c4 D7F88C00 		ldr	r0, [r7, #140]
 16717 14c8 1346     		mov	r3, r2
 16718 14ca 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 372


 16719 14cc 1344     		add	r3, r3, r2
 16720 14ce 1B01     		lsls	r3, r3, #4
 16721 14d0 0344     		add	r3, r3, r0
 16722 14d2 03F29513 		addw	r3, r3, #405
 16723 14d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16724 14d8 41FA03F2 		asr	r2, r1, r3
 16725 14dc 07F11C03 		add	r3, r7, #28
 16726 14e0 6149     		ldr	r1, .L689+24
 16727 14e2 1846     		mov	r0, r3
 16728 14e4 FFF7FEFF 		bl	sprintf
2204:..\src/command_processing.c ****             strcat(info_string, str);
 16729              		.loc 1 2204 0
 16730 14e8 07F11C03 		add	r3, r7, #28
 16731 14ec 1946     		mov	r1, r3
 16732 14ee 7869     		ldr	r0, [r7, #20]
 16733 14f0 FFF7FEFF 		bl	strcat
2205:..\src/command_processing.c **** 
2206:..\src/command_processing.c ****             sprintf(str, "Max step pos and neg: %d %d", (int)MOT->max_step_pos, (int)MOT->max_step_
 16734              		.loc 1 2206 0
 16735 14f4 D7F88430 		ldr	r3, [r7, #132]
 16736 14f8 1A6C     		ldr	r2, [r3, #64]
 16737 14fa D7F88430 		ldr	r3, [r7, #132]
 16738 14fe DB6B     		ldr	r3, [r3, #60]
 16739 1500 07F11C00 		add	r0, r7, #28
 16740 1504 5949     		ldr	r1, .L689+28
 16741 1506 FFF7FEFF 		bl	sprintf
2207:..\src/command_processing.c ****             strcat(info_string, str);
 16742              		.loc 1 2207 0
 16743 150a 07F11C03 		add	r3, r7, #28
 16744 150e 1946     		mov	r1, r3
 16745 1510 7869     		ldr	r0, [r7, #20]
 16746 1512 FFF7FEFF 		bl	strcat
2208:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16747              		.loc 1 2208 0
 16748 1516 7869     		ldr	r0, [r7, #20]
 16749 1518 FFF7FEFF 		bl	strlen
 16750 151c 0346     		mov	r3, r0
 16751 151e 1A46     		mov	r2, r3
 16752 1520 7B69     		ldr	r3, [r7, #20]
 16753 1522 1344     		add	r3, r3, r2
 16754 1524 4C4A     		ldr	r2, .L689+8
 16755 1526 1188     		ldrh	r1, [r2]	@ unaligned
 16756 1528 9278     		ldrb	r2, [r2, #2]
 16757 152a 1980     		strh	r1, [r3]	@ unaligned
 16758 152c 9A70     		strb	r2, [r3, #2]
2209:..\src/command_processing.c **** 
2210:..\src/command_processing.c ****             sprintf(str, "Current limit: %d\r\n", (int)MOT->current_limit);
 16759              		.loc 1 2210 0
 16760 152e D7F88430 		ldr	r3, [r7, #132]
 16761 1532 B3F95C30 		ldrsh	r3, [r3, #92]
 16762 1536 1A46     		mov	r2, r3
 16763 1538 07F11C03 		add	r3, r7, #28
 16764 153c 4C49     		ldr	r1, .L689+32
 16765 153e 1846     		mov	r0, r3
 16766 1540 FFF7FEFF 		bl	sprintf
2211:..\src/command_processing.c ****             strcat(info_string, str);
 16767              		.loc 1 2211 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 373


 16768 1544 07F11C03 		add	r3, r7, #28
 16769 1548 1946     		mov	r1, r3
 16770 154a 7869     		ldr	r0, [r7, #20]
 16771 154c FFF7FEFF 		bl	strcat
2212:..\src/command_processing.c **** #ifdef ELECTROSTIM_FW       // decided not to show when using SOFTHAND_FW to streamline ping, since
2213:..\src/command_processing.c ****             switch(MOT->motor_pwm_frequency) {
 16772              		.loc 1 2213 0
 16773 1550 D7F88430 		ldr	r3, [r7, #132]
 16774 1554 93F83230 		ldrb	r3, [r3, #50]	@ zero_extendqisi2
 16775 1558 042B     		cmp	r3, #4
 16776 155a 00F29580 		bhi	.L676
 16777 155e 01A2     		adr	r2, .L646
 16778 1560 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 16779              		.p2align 2
 16780              	.L646:
 16781 1564 79150000 		.word	.L645+1
 16782 1568 A7150000 		.word	.L647+1
 16783 156c CD150000 		.word	.L648+1
 16784 1570 F3150000 		.word	.L649+1
 16785 1574 21160000 		.word	.L650+1
 16786              		.p2align 1
 16787              	.L645:
2214:..\src/command_processing.c ****                 case FREQ_30HZ:
2215:..\src/command_processing.c ****                     strcat(info_string, "PWM Frequency: 30 Hz\r\n");
 16788              		.loc 1 2215 0
 16789 1578 7869     		ldr	r0, [r7, #20]
 16790 157a FFF7FEFF 		bl	strlen
 16791 157e 0346     		mov	r3, r0
 16792 1580 1A46     		mov	r2, r3
 16793 1582 7B69     		ldr	r3, [r7, #20]
 16794 1584 1344     		add	r3, r3, r2
 16795 1586 3B4A     		ldr	r2, .L689+36
 16796 1588 1C46     		mov	r4, r3
 16797 158a 1546     		mov	r5, r2
 16798 158c 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 16799 158e 2060     		str	r0, [r4]	@ unaligned
 16800 1590 6160     		str	r1, [r4, #4]	@ unaligned
 16801 1592 A260     		str	r2, [r4, #8]	@ unaligned
 16802 1594 E360     		str	r3, [r4, #12]	@ unaligned
 16803 1596 2868     		ldr	r0, [r5]	@ unaligned
 16804 1598 2061     		str	r0, [r4, #16]	@ unaligned
 16805 159a AB88     		ldrh	r3, [r5, #4]	@ unaligned
 16806 159c AA79     		ldrb	r2, [r5, #6]
 16807 159e A382     		strh	r3, [r4, #20]	@ unaligned
 16808 15a0 1346     		mov	r3, r2
 16809 15a2 A375     		strb	r3, [r4, #22]
2216:..\src/command_processing.c ****                     break;
 16810              		.loc 1 2216 0
 16811 15a4 71E0     		b	.L651
 16812              	.L647:
2217:..\src/command_processing.c ****                 case FREQ_100HZ:
2218:..\src/command_processing.c ****                     strcat(info_string, "PWM Frequency: 100 Hz\r\n");
 16813              		.loc 1 2218 0
 16814 15a6 7869     		ldr	r0, [r7, #20]
 16815 15a8 FFF7FEFF 		bl	strlen
 16816 15ac 0346     		mov	r3, r0
 16817 15ae 1A46     		mov	r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 374


 16818 15b0 7B69     		ldr	r3, [r7, #20]
 16819 15b2 1344     		add	r3, r3, r2
 16820 15b4 304A     		ldr	r2, .L689+40
 16821 15b6 1D46     		mov	r5, r3
 16822 15b8 1446     		mov	r4, r2
 16823 15ba 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16824 15bc 2860     		str	r0, [r5]	@ unaligned
 16825 15be 6960     		str	r1, [r5, #4]	@ unaligned
 16826 15c0 AA60     		str	r2, [r5, #8]	@ unaligned
 16827 15c2 EB60     		str	r3, [r5, #12]	@ unaligned
 16828 15c4 03CC     		ldmia	r4!, {r0, r1}
 16829 15c6 2861     		str	r0, [r5, #16]	@ unaligned
 16830 15c8 6961     		str	r1, [r5, #20]	@ unaligned
2219:..\src/command_processing.c ****                     break;
 16831              		.loc 1 2219 0
 16832 15ca 5EE0     		b	.L651
 16833              	.L648:
2220:..\src/command_processing.c ****                 case FREQ_300HZ:
2221:..\src/command_processing.c ****                     strcat(info_string, "PWM Frequency: 300 Hz\r\n");
 16834              		.loc 1 2221 0
 16835 15cc 7869     		ldr	r0, [r7, #20]
 16836 15ce FFF7FEFF 		bl	strlen
 16837 15d2 0346     		mov	r3, r0
 16838 15d4 1A46     		mov	r2, r3
 16839 15d6 7B69     		ldr	r3, [r7, #20]
 16840 15d8 1344     		add	r3, r3, r2
 16841 15da 284A     		ldr	r2, .L689+44
 16842 15dc 1D46     		mov	r5, r3
 16843 15de 1446     		mov	r4, r2
 16844 15e0 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16845 15e2 2860     		str	r0, [r5]	@ unaligned
 16846 15e4 6960     		str	r1, [r5, #4]	@ unaligned
 16847 15e6 AA60     		str	r2, [r5, #8]	@ unaligned
 16848 15e8 EB60     		str	r3, [r5, #12]	@ unaligned
 16849 15ea 03CC     		ldmia	r4!, {r0, r1}
 16850 15ec 2861     		str	r0, [r5, #16]	@ unaligned
 16851 15ee 6961     		str	r1, [r5, #20]	@ unaligned
2222:..\src/command_processing.c ****                     break;
 16852              		.loc 1 2222 0
 16853 15f0 4BE0     		b	.L651
 16854              	.L649:
2223:..\src/command_processing.c ****                 case FREQ_1000HZ:
2224:..\src/command_processing.c ****                     strcat(info_string, "PWM Frequency: 1 KHz\r\n");
 16855              		.loc 1 2224 0
 16856 15f2 7869     		ldr	r0, [r7, #20]
 16857 15f4 FFF7FEFF 		bl	strlen
 16858 15f8 0346     		mov	r3, r0
 16859 15fa 1A46     		mov	r2, r3
 16860 15fc 7B69     		ldr	r3, [r7, #20]
 16861 15fe 1344     		add	r3, r3, r2
 16862 1600 1F4A     		ldr	r2, .L689+48
 16863 1602 1C46     		mov	r4, r3
 16864 1604 1546     		mov	r5, r2
 16865 1606 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 16866 1608 2060     		str	r0, [r4]	@ unaligned
 16867 160a 6160     		str	r1, [r4, #4]	@ unaligned
 16868 160c A260     		str	r2, [r4, #8]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 375


 16869 160e E360     		str	r3, [r4, #12]	@ unaligned
 16870 1610 2868     		ldr	r0, [r5]	@ unaligned
 16871 1612 2061     		str	r0, [r4, #16]	@ unaligned
 16872 1614 AB88     		ldrh	r3, [r5, #4]	@ unaligned
 16873 1616 AA79     		ldrb	r2, [r5, #6]
 16874 1618 A382     		strh	r3, [r4, #20]	@ unaligned
 16875 161a 1346     		mov	r3, r2
 16876 161c A375     		strb	r3, [r4, #22]
2225:..\src/command_processing.c ****                     break;
 16877              		.loc 1 2225 0
 16878 161e 34E0     		b	.L651
 16879              	.L650:
2226:..\src/command_processing.c ****                 case FREQ_3000HZ:
2227:..\src/command_processing.c ****                     strcat(info_string, "PWM Frequency: 3 KHz\r\n");
 16880              		.loc 1 2227 0
 16881 1620 7869     		ldr	r0, [r7, #20]
 16882 1622 FFF7FEFF 		bl	strlen
 16883 1626 0346     		mov	r3, r0
 16884 1628 1A46     		mov	r2, r3
 16885 162a 7B69     		ldr	r3, [r7, #20]
 16886 162c 1344     		add	r3, r3, r2
 16887 162e 154A     		ldr	r2, .L689+52
 16888 1630 1C46     		mov	r4, r3
 16889 1632 1546     		mov	r5, r2
 16890 1634 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 16891 1636 2060     		str	r0, [r4]	@ unaligned
 16892 1638 6160     		str	r1, [r4, #4]	@ unaligned
 16893 163a A260     		str	r2, [r4, #8]	@ unaligned
 16894 163c E360     		str	r3, [r4, #12]	@ unaligned
 16895 163e 2868     		ldr	r0, [r5]	@ unaligned
 16896 1640 2061     		str	r0, [r4, #16]	@ unaligned
 16897 1642 AB88     		ldrh	r3, [r5, #4]	@ unaligned
 16898 1644 AA79     		ldrb	r2, [r5, #6]
 16899 1646 A382     		strh	r3, [r4, #20]	@ unaligned
 16900 1648 1346     		mov	r3, r2
 16901 164a A375     		strb	r3, [r4, #22]
2228:..\src/command_processing.c ****                     break;
 16902              		.loc 1 2228 0
 16903 164c 1DE0     		b	.L651
 16904              	.L690:
 16905 164e 00BF     		.align	2
 16906              	.L689:
 16907 1650 48170000 		.word	.LC223
 16908 1654 80130000 		.word	.LC186
 16909 1658 34110000 		.word	.LC154
 16910 165c 4C170000 		.word	.LC224
 16911 1660 7C170000 		.word	.LC225
 16912 1664 98170000 		.word	.LC226
 16913 1668 BC170000 		.word	.LC227
 16914 166c CC170000 		.word	.LC228
 16915 1670 E8170000 		.word	.LC229
 16916 1674 FC170000 		.word	.LC230
 16917 1678 14180000 		.word	.LC231
 16918 167c 2C180000 		.word	.LC232
 16919 1680 44180000 		.word	.LC233
 16920 1684 5C180000 		.word	.LC234
 16921              	.L676:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 376


2229:..\src/command_processing.c ****                 default:
2230:..\src/command_processing.c ****                     break;
 16922              		.loc 1 2230 0
 16923 1688 00BF     		nop
 16924              	.L651:
2231:..\src/command_processing.c ****             }
2232:..\src/command_processing.c ****             sprintf(str, "PWM rate limiter value: %d\r\n", (int)MOT->pwm_rate_limiter);
 16925              		.loc 1 2232 0
 16926 168a D7F88430 		ldr	r3, [r7, #132]
 16927 168e 93F86130 		ldrb	r3, [r3, #97]	@ zero_extendqisi2
 16928 1692 1A46     		mov	r2, r3
 16929 1694 07F11C03 		add	r3, r7, #28
 16930 1698 CB49     		ldr	r1, .L691
 16931 169a 1846     		mov	r0, r3
 16932 169c FFF7FEFF 		bl	sprintf
2233:..\src/command_processing.c ****             strcat(info_string, str);
 16933              		.loc 1 2233 0
 16934 16a0 07F11C03 		add	r3, r7, #28
 16935 16a4 1946     		mov	r1, r3
 16936 16a6 7869     		ldr	r0, [r7, #20]
 16937 16a8 FFF7FEFF 		bl	strcat
2234:..\src/command_processing.c ****             if (MOT->not_revers_motor_flag)
 16938              		.loc 1 2234 0
 16939 16ac D7F88430 		ldr	r3, [r7, #132]
 16940 16b0 93F86230 		ldrb	r3, [r3, #98]	@ zero_extendqisi2
 16941 16b4 002B     		cmp	r3, #0
 16942 16b6 13D0     		beq	.L652
2235:..\src/command_processing.c ****                 strcat(info_string, "Not reversible motor: YES\r\n");
 16943              		.loc 1 2235 0
 16944 16b8 7869     		ldr	r0, [r7, #20]
 16945 16ba FFF7FEFF 		bl	strlen
 16946 16be 0346     		mov	r3, r0
 16947 16c0 1A46     		mov	r2, r3
 16948 16c2 7B69     		ldr	r3, [r7, #20]
 16949 16c4 1344     		add	r3, r3, r2
 16950 16c6 C14A     		ldr	r2, .L691+4
 16951 16c8 1D46     		mov	r5, r3
 16952 16ca 1446     		mov	r4, r2
 16953 16cc 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16954 16ce 2860     		str	r0, [r5]	@ unaligned
 16955 16d0 6960     		str	r1, [r5, #4]	@ unaligned
 16956 16d2 AA60     		str	r2, [r5, #8]	@ unaligned
 16957 16d4 EB60     		str	r3, [r5, #12]	@ unaligned
 16958 16d6 07CC     		ldmia	r4!, {r0, r1, r2}
 16959 16d8 2861     		str	r0, [r5, #16]	@ unaligned
 16960 16da 6961     		str	r1, [r5, #20]	@ unaligned
 16961 16dc AA61     		str	r2, [r5, #24]	@ unaligned
 16962 16de 16E0     		b	.L653
 16963              	.L652:
2236:..\src/command_processing.c ****             else
2237:..\src/command_processing.c ****                 strcat(info_string, "Not reversible motor: NO\r\n");
 16964              		.loc 1 2237 0
 16965 16e0 7869     		ldr	r0, [r7, #20]
 16966 16e2 FFF7FEFF 		bl	strlen
 16967 16e6 0346     		mov	r3, r0
 16968 16e8 1A46     		mov	r2, r3
 16969 16ea 7B69     		ldr	r3, [r7, #20]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 377


 16970 16ec 1344     		add	r3, r3, r2
 16971 16ee B84A     		ldr	r2, .L691+8
 16972 16f0 1D46     		mov	r5, r3
 16973 16f2 1446     		mov	r4, r2
 16974 16f4 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16975 16f6 2860     		str	r0, [r5]	@ unaligned
 16976 16f8 6960     		str	r1, [r5, #4]	@ unaligned
 16977 16fa AA60     		str	r2, [r5, #8]	@ unaligned
 16978 16fc EB60     		str	r3, [r5, #12]	@ unaligned
 16979 16fe 03CC     		ldmia	r4!, {r0, r1}
 16980 1700 2861     		str	r0, [r5, #16]	@ unaligned
 16981 1702 6961     		str	r1, [r5, #20]	@ unaligned
 16982 1704 2388     		ldrh	r3, [r4]	@ unaligned
 16983 1706 A278     		ldrb	r2, [r4, #2]
 16984 1708 2B83     		strh	r3, [r5, #24]	@ unaligned
 16985 170a 1346     		mov	r3, r2
 16986 170c AB76     		strb	r3, [r5, #26]
 16987              	.L653:
2238:..\src/command_processing.c **** #endif                
2239:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16988              		.loc 1 2239 0 discriminator 2
 16989 170e 7869     		ldr	r0, [r7, #20]
 16990 1710 FFF7FEFF 		bl	strlen
 16991 1714 0346     		mov	r3, r0
 16992 1716 1A46     		mov	r2, r3
 16993 1718 7B69     		ldr	r3, [r7, #20]
 16994 171a 1344     		add	r3, r3, r2
 16995 171c AD4A     		ldr	r2, .L691+12
 16996 171e 1188     		ldrh	r1, [r2]	@ unaligned
 16997 1720 9278     		ldrb	r2, [r2, #2]
 16998 1722 1980     		strh	r1, [r3]	@ unaligned
 16999 1724 9A70     		strb	r2, [r3, #2]
 17000              	.LBE26:
1962:..\src/command_processing.c ****             
 17001              		.loc 1 1962 0 discriminator 2
 17002 1726 97F89330 		ldrb	r3, [r7, #147]	@ zero_extendqisi2
 17003 172a 0133     		adds	r3, r3, #1
 17004 172c 87F89330 		strb	r3, [r7, #147]
 17005              	.L587:
1962:..\src/command_processing.c ****             
 17006              		.loc 1 1962 0 is_stmt 0 discriminator 1
 17007 1730 D7F88C30 		ldr	r3, [r7, #140]
 17008 1734 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 17009 1738 97F89320 		ldrb	r2, [r7, #147]	@ zero_extendqisi2
 17010 173c 9A42     		cmp	r2, r3
 17011 173e 7EF615AE 		bls	.L654
 17012              	.LBE25:
2240:..\src/command_processing.c ****         }
2241:..\src/command_processing.c ****       
2242:..\src/command_processing.c ****         strcat(info_string, "EMG CONFIGURATION\r\n");
 17013              		.loc 1 2242 0 is_stmt 1
 17014 1742 7869     		ldr	r0, [r7, #20]
 17015 1744 FFF7FEFF 		bl	strlen
 17016 1748 0346     		mov	r3, r0
 17017 174a 1A46     		mov	r2, r3
 17018 174c 7B69     		ldr	r3, [r7, #20]
 17019 174e 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 378


 17020 1750 A14A     		ldr	r2, .L691+16
 17021 1752 1D46     		mov	r5, r3
 17022 1754 1446     		mov	r4, r2
 17023 1756 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17024 1758 2860     		str	r0, [r5]	@ unaligned
 17025 175a 6960     		str	r1, [r5, #4]	@ unaligned
 17026 175c AA60     		str	r2, [r5, #8]	@ unaligned
 17027 175e EB60     		str	r3, [r5, #12]	@ unaligned
 17028 1760 2068     		ldr	r0, [r4]	@ unaligned
 17029 1762 2861     		str	r0, [r5, #16]	@ unaligned
2243:..\src/command_processing.c ****         sprintf(str, "EMG thresholds [0 - 1024]: %u, %u", MEM_P->emg.emg_threshold[0], MEM_P->emg.e
 17030              		.loc 1 2243 0
 17031 1764 D7F88C30 		ldr	r3, [r7, #140]
 17032 1768 B3F8F031 		ldrh	r3, [r3, #496]
 17033 176c 1A46     		mov	r2, r3
 17034 176e D7F88C30 		ldr	r3, [r7, #140]
 17035 1772 B3F8F231 		ldrh	r3, [r3, #498]
 17036 1776 07F11C00 		add	r0, r7, #28
 17037 177a 9849     		ldr	r1, .L691+20
 17038 177c FFF7FEFF 		bl	sprintf
2244:..\src/command_processing.c ****         strcat(info_string, str);
 17039              		.loc 1 2244 0
 17040 1780 07F11C03 		add	r3, r7, #28
 17041 1784 1946     		mov	r1, r3
 17042 1786 7869     		ldr	r0, [r7, #20]
 17043 1788 FFF7FEFF 		bl	strcat
2245:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 17044              		.loc 1 2245 0
 17045 178c 7869     		ldr	r0, [r7, #20]
 17046 178e FFF7FEFF 		bl	strlen
 17047 1792 0346     		mov	r3, r0
 17048 1794 1A46     		mov	r2, r3
 17049 1796 7B69     		ldr	r3, [r7, #20]
 17050 1798 1344     		add	r3, r3, r2
 17051 179a 8E4A     		ldr	r2, .L691+12
 17052 179c 1188     		ldrh	r1, [r2]	@ unaligned
 17053 179e 9278     		ldrb	r2, [r2, #2]
 17054 17a0 1980     		strh	r1, [r3]	@ unaligned
 17055 17a2 9A70     		strb	r2, [r3, #2]
2246:..\src/command_processing.c **** 
2247:..\src/command_processing.c ****         sprintf(str, "EMG max values [0 - 4096]: %lu, %lu", MEM_P->emg.emg_max_value[0], MEM_P->emg
 17056              		.loc 1 2247 0
 17057 17a4 D7F88C30 		ldr	r3, [r7, #140]
 17058 17a8 D3F8F421 		ldr	r2, [r3, #500]
 17059 17ac D7F88C30 		ldr	r3, [r7, #140]
 17060 17b0 D3F8F831 		ldr	r3, [r3, #504]
 17061 17b4 07F11C00 		add	r0, r7, #28
 17062 17b8 8949     		ldr	r1, .L691+24
 17063 17ba FFF7FEFF 		bl	sprintf
2248:..\src/command_processing.c ****         strcat(info_string, str);
 17064              		.loc 1 2248 0
 17065 17be 07F11C03 		add	r3, r7, #28
 17066 17c2 1946     		mov	r1, r3
 17067 17c4 7869     		ldr	r0, [r7, #20]
 17068 17c6 FFF7FEFF 		bl	strcat
2249:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 17069              		.loc 1 2249 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 379


 17070 17ca 7869     		ldr	r0, [r7, #20]
 17071 17cc FFF7FEFF 		bl	strlen
 17072 17d0 0346     		mov	r3, r0
 17073 17d2 1A46     		mov	r2, r3
 17074 17d4 7B69     		ldr	r3, [r7, #20]
 17075 17d6 1344     		add	r3, r3, r2
 17076 17d8 7E4A     		ldr	r2, .L691+12
 17077 17da 1188     		ldrh	r1, [r2]	@ unaligned
 17078 17dc 9278     		ldrb	r2, [r2, #2]
 17079 17de 1980     		strh	r1, [r3]	@ unaligned
 17080 17e0 9A70     		strb	r2, [r3, #2]
2250:..\src/command_processing.c **** 
2251:..\src/command_processing.c ****         if (MEM_P->emg.switch_emg)
 17081              		.loc 1 2251 0
 17082 17e2 D7F88C30 		ldr	r3, [r7, #140]
 17083 17e6 93F8FF31 		ldrb	r3, [r3, #511]	@ zero_extendqisi2
 17084 17ea 002B     		cmp	r3, #0
 17085 17ec 13D0     		beq	.L655
2252:..\src/command_processing.c ****             strcat(info_string, "EMG inversion: YES\r\n");
 17086              		.loc 1 2252 0
 17087 17ee 7869     		ldr	r0, [r7, #20]
 17088 17f0 FFF7FEFF 		bl	strlen
 17089 17f4 0346     		mov	r3, r0
 17090 17f6 1A46     		mov	r2, r3
 17091 17f8 7B69     		ldr	r3, [r7, #20]
 17092 17fa 1344     		add	r3, r3, r2
 17093 17fc 794A     		ldr	r2, .L691+28
 17094 17fe 1D46     		mov	r5, r3
 17095 1800 1446     		mov	r4, r2
 17096 1802 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17097 1804 2860     		str	r0, [r5]	@ unaligned
 17098 1806 6960     		str	r1, [r5, #4]	@ unaligned
 17099 1808 AA60     		str	r2, [r5, #8]	@ unaligned
 17100 180a EB60     		str	r3, [r5, #12]	@ unaligned
 17101 180c 2068     		ldr	r0, [r4]	@ unaligned
 17102 180e 2861     		str	r0, [r5, #16]	@ unaligned
 17103 1810 2379     		ldrb	r3, [r4, #4]
 17104 1812 2B75     		strb	r3, [r5, #20]
 17105 1814 10E0     		b	.L656
 17106              	.L655:
2253:..\src/command_processing.c ****         else
2254:..\src/command_processing.c ****             strcat(info_string, "EMG inversion: NO\r\n");
 17107              		.loc 1 2254 0
 17108 1816 7869     		ldr	r0, [r7, #20]
 17109 1818 FFF7FEFF 		bl	strlen
 17110 181c 0346     		mov	r3, r0
 17111 181e 1A46     		mov	r2, r3
 17112 1820 7B69     		ldr	r3, [r7, #20]
 17113 1822 1344     		add	r3, r3, r2
 17114 1824 704A     		ldr	r2, .L691+32
 17115 1826 1D46     		mov	r5, r3
 17116 1828 1446     		mov	r4, r2
 17117 182a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17118 182c 2860     		str	r0, [r5]	@ unaligned
 17119 182e 6960     		str	r1, [r5, #4]	@ unaligned
 17120 1830 AA60     		str	r2, [r5, #8]	@ unaligned
 17121 1832 EB60     		str	r3, [r5, #12]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 380


 17122 1834 2068     		ldr	r0, [r4]	@ unaligned
 17123 1836 2861     		str	r0, [r5, #16]	@ unaligned
 17124              	.L656:
2255:..\src/command_processing.c ****             
2256:..\src/command_processing.c ****         if (MEM_P->emg.emg_calibration_flag)
 17125              		.loc 1 2256 0
 17126 1838 D7F88C30 		ldr	r3, [r7, #140]
 17127 183c 93F8FE31 		ldrb	r3, [r3, #510]	@ zero_extendqisi2
 17128 1840 002B     		cmp	r3, #0
 17129 1842 17D0     		beq	.L657
2257:..\src/command_processing.c ****             strcat(info_string, "Calibration enabled: YES\r\n");
 17130              		.loc 1 2257 0
 17131 1844 7869     		ldr	r0, [r7, #20]
 17132 1846 FFF7FEFF 		bl	strlen
 17133 184a 0346     		mov	r3, r0
 17134 184c 1A46     		mov	r2, r3
 17135 184e 7B69     		ldr	r3, [r7, #20]
 17136 1850 1344     		add	r3, r3, r2
 17137 1852 664A     		ldr	r2, .L691+36
 17138 1854 1D46     		mov	r5, r3
 17139 1856 1446     		mov	r4, r2
 17140 1858 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17141 185a 2860     		str	r0, [r5]	@ unaligned
 17142 185c 6960     		str	r1, [r5, #4]	@ unaligned
 17143 185e AA60     		str	r2, [r5, #8]	@ unaligned
 17144 1860 EB60     		str	r3, [r5, #12]	@ unaligned
 17145 1862 03CC     		ldmia	r4!, {r0, r1}
 17146 1864 2861     		str	r0, [r5, #16]	@ unaligned
 17147 1866 6961     		str	r1, [r5, #20]	@ unaligned
 17148 1868 2388     		ldrh	r3, [r4]	@ unaligned
 17149 186a A278     		ldrb	r2, [r4, #2]
 17150 186c 2B83     		strh	r3, [r5, #24]	@ unaligned
 17151 186e 1346     		mov	r3, r2
 17152 1870 AB76     		strb	r3, [r5, #26]
 17153 1872 13E0     		b	.L658
 17154              	.L657:
2258:..\src/command_processing.c ****         else
2259:..\src/command_processing.c ****             strcat(info_string, "Calibration enabled: NO\r\n");
 17155              		.loc 1 2259 0
 17156 1874 7869     		ldr	r0, [r7, #20]
 17157 1876 FFF7FEFF 		bl	strlen
 17158 187a 0346     		mov	r3, r0
 17159 187c 1A46     		mov	r2, r3
 17160 187e 7B69     		ldr	r3, [r7, #20]
 17161 1880 1344     		add	r3, r3, r2
 17162 1882 5B4A     		ldr	r2, .L691+40
 17163 1884 1D46     		mov	r5, r3
 17164 1886 1446     		mov	r4, r2
 17165 1888 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17166 188a 2860     		str	r0, [r5]	@ unaligned
 17167 188c 6960     		str	r1, [r5, #4]	@ unaligned
 17168 188e AA60     		str	r2, [r5, #8]	@ unaligned
 17169 1890 EB60     		str	r3, [r5, #12]	@ unaligned
 17170 1892 03CC     		ldmia	r4!, {r0, r1}
 17171 1894 2861     		str	r0, [r5, #16]	@ unaligned
 17172 1896 6961     		str	r1, [r5, #20]	@ unaligned
 17173 1898 2388     		ldrh	r3, [r4]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 381


 17174 189a 2B83     		strh	r3, [r5, #24]	@ unaligned
 17175              	.L658:
2260:..\src/command_processing.c **** 
2261:..\src/command_processing.c ****         sprintf(str, "EMG max speed: %d %d", (int)MEM_P->emg.emg_speed[0], (int)MEM_P->emg.emg_spee
 17176              		.loc 1 2261 0
 17177 189c D7F88C30 		ldr	r3, [r7, #140]
 17178 18a0 93F8FC31 		ldrb	r3, [r3, #508]	@ zero_extendqisi2
 17179 18a4 1A46     		mov	r2, r3
 17180 18a6 D7F88C30 		ldr	r3, [r7, #140]
 17181 18aa 93F8FD31 		ldrb	r3, [r3, #509]	@ zero_extendqisi2
 17182 18ae 07F11C00 		add	r0, r7, #28
 17183 18b2 5049     		ldr	r1, .L691+44
 17184 18b4 FFF7FEFF 		bl	sprintf
2262:..\src/command_processing.c ****         strcat(info_string, str);
 17185              		.loc 1 2262 0
 17186 18b8 07F11C03 		add	r3, r7, #28
 17187 18bc 1946     		mov	r1, r3
 17188 18be 7869     		ldr	r0, [r7, #20]
 17189 18c0 FFF7FEFF 		bl	strcat
2263:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 17190              		.loc 1 2263 0
 17191 18c4 7869     		ldr	r0, [r7, #20]
 17192 18c6 FFF7FEFF 		bl	strlen
 17193 18ca 0346     		mov	r3, r0
 17194 18cc 1A46     		mov	r2, r3
 17195 18ce 7B69     		ldr	r3, [r7, #20]
 17196 18d0 1344     		add	r3, r3, r2
 17197 18d2 404A     		ldr	r2, .L691+12
 17198 18d4 1188     		ldrh	r1, [r2]	@ unaligned
 17199 18d6 9278     		ldrb	r2, [r2, #2]
 17200 18d8 1980     		strh	r1, [r3]	@ unaligned
 17201 18da 9A70     		strb	r2, [r3, #2]
2264:..\src/command_processing.c **** 
2265:..\src/command_processing.c ****         if (MEM_P->imu.read_imu_flag) {
 17202              		.loc 1 2265 0
 17203 18dc D7F88C30 		ldr	r3, [r7, #140]
 17204 18e0 93F80032 		ldrb	r3, [r3, #512]	@ zero_extendqisi2
 17205 18e4 002B     		cmp	r3, #0
 17206 18e6 00F0D581 		beq	.L659
2266:..\src/command_processing.c ****             sprintf(str, "IMU Connected: %d\r\n", (int) N_IMU_Connected);
 17207              		.loc 1 2266 0
 17208 18ea 434B     		ldr	r3, .L691+48
 17209 18ec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17210 18ee 1A46     		mov	r2, r3
 17211 18f0 07F11C03 		add	r3, r7, #28
 17212 18f4 4149     		ldr	r1, .L691+52
 17213 18f6 1846     		mov	r0, r3
 17214 18f8 FFF7FEFF 		bl	sprintf
2267:..\src/command_processing.c ****             strcat(info_string, str);
 17215              		.loc 1 2267 0
 17216 18fc 07F11C03 		add	r3, r7, #28
 17217 1900 1946     		mov	r1, r3
 17218 1902 7869     		ldr	r0, [r7, #20]
 17219 1904 FFF7FEFF 		bl	strcat
2268:..\src/command_processing.c ****             
2269:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 17220              		.loc 1 2269 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 382


 17221 1908 7869     		ldr	r0, [r7, #20]
 17222 190a FFF7FEFF 		bl	strlen
 17223 190e 0346     		mov	r3, r0
 17224 1910 1A46     		mov	r2, r3
 17225 1912 7B69     		ldr	r3, [r7, #20]
 17226 1914 1344     		add	r3, r3, r2
 17227 1916 2F4A     		ldr	r2, .L691+12
 17228 1918 1188     		ldrh	r1, [r2]	@ unaligned
 17229 191a 9278     		ldrb	r2, [r2, #2]
 17230 191c 1980     		strh	r1, [r3]	@ unaligned
 17231 191e 9A70     		strb	r2, [r3, #2]
2270:..\src/command_processing.c ****             
2271:..\src/command_processing.c ****             strcat(info_string, "IMUs CONFIGURATION\r\n");
 17232              		.loc 1 2271 0
 17233 1920 7869     		ldr	r0, [r7, #20]
 17234 1922 FFF7FEFF 		bl	strlen
 17235 1926 0346     		mov	r3, r0
 17236 1928 1A46     		mov	r2, r3
 17237 192a 7B69     		ldr	r3, [r7, #20]
 17238 192c 1344     		add	r3, r3, r2
 17239 192e 344A     		ldr	r2, .L691+56
 17240 1930 1D46     		mov	r5, r3
 17241 1932 1446     		mov	r4, r2
 17242 1934 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17243 1936 2860     		str	r0, [r5]	@ unaligned
 17244 1938 6960     		str	r1, [r5, #4]	@ unaligned
 17245 193a AA60     		str	r2, [r5, #8]	@ unaligned
 17246 193c EB60     		str	r3, [r5, #12]	@ unaligned
 17247 193e 2068     		ldr	r0, [r4]	@ unaligned
 17248 1940 2861     		str	r0, [r5, #16]	@ unaligned
 17249 1942 2379     		ldrb	r3, [r4, #4]
 17250 1944 2B75     		strb	r3, [r5, #20]
2272:..\src/command_processing.c ****             for (i=0; i<N_IMU_Connected; i++){
 17251              		.loc 1 2272 0
 17252 1946 0023     		movs	r3, #0
 17253 1948 C7F89430 		str	r3, [r7, #148]
 17254 194c 8BE1     		b	.L660
 17255              	.L671:
2273:..\src/command_processing.c ****                 sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 17256              		.loc 1 2273 0
 17257 194e 2D4A     		ldr	r2, .L691+60
 17258 1950 D7F89430 		ldr	r3, [r7, #148]
 17259 1954 1344     		add	r3, r3, r2
 17260 1956 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17261 1958 07F11C00 		add	r0, r7, #28
 17262 195c D7F89420 		ldr	r2, [r7, #148]
 17263 1960 2949     		ldr	r1, .L691+64
 17264 1962 FFF7FEFF 		bl	sprintf
2274:..\src/command_processing.c ****                 strcat(info_string, str);
 17265              		.loc 1 2274 0
 17266 1966 07F11C03 		add	r3, r7, #28
 17267 196a 1946     		mov	r1, r3
 17268 196c 7869     		ldr	r0, [r7, #20]
 17269 196e FFF7FEFF 		bl	strcat
2275:..\src/command_processing.c ****                 
2276:..\src/command_processing.c ****                 sprintf(str, "\tAccelerometers: ");
 17270              		.loc 1 2276 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 383


 17271 1972 07F11C03 		add	r3, r7, #28
 17272 1976 254A     		ldr	r2, .L691+68
 17273 1978 1C46     		mov	r4, r3
 17274 197a 1546     		mov	r5, r2
 17275 197c 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 17276 197e 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 17277 1980 2B68     		ldr	r3, [r5]
 17278 1982 2380     		strh	r3, [r4]	@ movhi
2277:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][0]))
 17279              		.loc 1 2277 0
 17280 1984 1F4A     		ldr	r2, .L691+60
 17281 1986 D7F89430 		ldr	r3, [r7, #148]
 17282 198a 1344     		add	r3, r3, r2
 17283 198c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17284 198e 1946     		mov	r1, r3
 17285 1990 D7F88C20 		ldr	r2, [r7, #140]
 17286 1994 0B46     		mov	r3, r1
 17287 1996 9B00     		lsls	r3, r3, #2
 17288 1998 0B44     		add	r3, r3, r1
 17289 199a 1344     		add	r3, r3, r2
 17290 199c 03F20223 		addw	r3, r3, #514
 17291 19a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17292 19a2 002B     		cmp	r3, #0
 17293 19a4 36D0     		beq	.L661
2278:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 17294              		.loc 1 2278 0
 17295 19a6 07F11C03 		add	r3, r7, #28
 17296 19aa 1846     		mov	r0, r3
 17297 19ac FFF7FEFF 		bl	strlen
 17298 19b0 0346     		mov	r3, r0
 17299 19b2 1A46     		mov	r2, r3
 17300 19b4 07F11C03 		add	r3, r7, #28
 17301 19b8 1344     		add	r3, r3, r2
 17302 19ba 154A     		ldr	r2, .L691+72
 17303 19bc 1068     		ldr	r0, [r2]	@ unaligned
 17304 19be 1860     		str	r0, [r3]	@ unaligned
 17305 19c0 9288     		ldrh	r2, [r2, #4]	@ unaligned
 17306 19c2 9A80     		strh	r2, [r3, #4]	@ unaligned
 17307 19c4 35E0     		b	.L662
 17308              	.L692:
 17309 19c6 00BF     		.align	2
 17310              	.L691:
 17311 19c8 74180000 		.word	.LC235
 17312 19cc 94180000 		.word	.LC236
 17313 19d0 B0180000 		.word	.LC237
 17314 19d4 34110000 		.word	.LC154
 17315 19d8 CC180000 		.word	.LC238
 17316 19dc E0180000 		.word	.LC239
 17317 19e0 04190000 		.word	.LC240
 17318 19e4 28190000 		.word	.LC241
 17319 19e8 40190000 		.word	.LC242
 17320 19ec 54190000 		.word	.LC243
 17321 19f0 70190000 		.word	.LC244
 17322 19f4 8C190000 		.word	.LC245
 17323 19f8 00000000 		.word	N_IMU_Connected
 17324 19fc A4190000 		.word	.LC246
 17325 1a00 B8190000 		.word	.LC247
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 384


 17326 1a04 00000000 		.word	IMU_connected
 17327 1a08 D0190000 		.word	.LC248
 17328 1a0c E4190000 		.word	.LC249
 17329 1a10 0C130000 		.word	.LC177
 17330              	.L661:
2279:..\src/command_processing.c ****                 else
2280:..\src/command_processing.c ****                     strcat(str, "NO\r\n"); 
 17331              		.loc 1 2280 0
 17332 1a14 07F11C03 		add	r3, r7, #28
 17333 1a18 1846     		mov	r0, r3
 17334 1a1a FFF7FEFF 		bl	strlen
 17335 1a1e 0346     		mov	r3, r0
 17336 1a20 1A46     		mov	r2, r3
 17337 1a22 07F11C03 		add	r3, r7, #28
 17338 1a26 1344     		add	r3, r3, r2
 17339 1a28 B24A     		ldr	r2, .L693
 17340 1a2a 1068     		ldr	r0, [r2]	@ unaligned
 17341 1a2c 1860     		str	r0, [r3]	@ unaligned
 17342 1a2e 1279     		ldrb	r2, [r2, #4]
 17343 1a30 1A71     		strb	r2, [r3, #4]
 17344              	.L662:
2281:..\src/command_processing.c ****                 strcat(str, "\tGyroscopes: ");
 17345              		.loc 1 2281 0
 17346 1a32 07F11C03 		add	r3, r7, #28
 17347 1a36 1846     		mov	r0, r3
 17348 1a38 FFF7FEFF 		bl	strlen
 17349 1a3c 0346     		mov	r3, r0
 17350 1a3e 1A46     		mov	r2, r3
 17351 1a40 07F11C03 		add	r3, r7, #28
 17352 1a44 1344     		add	r3, r3, r2
 17353 1a46 AC4A     		ldr	r2, .L693+4
 17354 1a48 1C46     		mov	r4, r3
 17355 1a4a 1346     		mov	r3, r2
 17356 1a4c 07CB     		ldmia	r3!, {r0, r1, r2}
 17357 1a4e 2060     		str	r0, [r4]	@ unaligned
 17358 1a50 6160     		str	r1, [r4, #4]	@ unaligned
 17359 1a52 A260     		str	r2, [r4, #8]	@ unaligned
 17360 1a54 1B88     		ldrh	r3, [r3]	@ unaligned
 17361 1a56 A381     		strh	r3, [r4, #12]	@ unaligned
2282:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][1]))
 17362              		.loc 1 2282 0
 17363 1a58 A84A     		ldr	r2, .L693+8
 17364 1a5a D7F89430 		ldr	r3, [r7, #148]
 17365 1a5e 1344     		add	r3, r3, r2
 17366 1a60 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17367 1a62 1946     		mov	r1, r3
 17368 1a64 D7F88C20 		ldr	r2, [r7, #140]
 17369 1a68 0B46     		mov	r3, r1
 17370 1a6a 9B00     		lsls	r3, r3, #2
 17371 1a6c 0B44     		add	r3, r3, r1
 17372 1a6e 1344     		add	r3, r3, r2
 17373 1a70 03F20323 		addw	r3, r3, #515
 17374 1a74 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17375 1a76 002B     		cmp	r3, #0
 17376 1a78 0FD0     		beq	.L663
2283:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 17377              		.loc 1 2283 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 385


 17378 1a7a 07F11C03 		add	r3, r7, #28
 17379 1a7e 1846     		mov	r0, r3
 17380 1a80 FFF7FEFF 		bl	strlen
 17381 1a84 0346     		mov	r3, r0
 17382 1a86 1A46     		mov	r2, r3
 17383 1a88 07F11C03 		add	r3, r7, #28
 17384 1a8c 1344     		add	r3, r3, r2
 17385 1a8e 9C4A     		ldr	r2, .L693+12
 17386 1a90 1068     		ldr	r0, [r2]	@ unaligned
 17387 1a92 1860     		str	r0, [r3]	@ unaligned
 17388 1a94 9288     		ldrh	r2, [r2, #4]	@ unaligned
 17389 1a96 9A80     		strh	r2, [r3, #4]	@ unaligned
 17390 1a98 0EE0     		b	.L664
 17391              	.L663:
2284:..\src/command_processing.c ****                 else
2285:..\src/command_processing.c ****                     strcat(str, "NO\r\n"); 
 17392              		.loc 1 2285 0
 17393 1a9a 07F11C03 		add	r3, r7, #28
 17394 1a9e 1846     		mov	r0, r3
 17395 1aa0 FFF7FEFF 		bl	strlen
 17396 1aa4 0346     		mov	r3, r0
 17397 1aa6 1A46     		mov	r2, r3
 17398 1aa8 07F11C03 		add	r3, r7, #28
 17399 1aac 1344     		add	r3, r3, r2
 17400 1aae 914A     		ldr	r2, .L693
 17401 1ab0 1068     		ldr	r0, [r2]	@ unaligned
 17402 1ab2 1860     		str	r0, [r3]	@ unaligned
 17403 1ab4 1279     		ldrb	r2, [r2, #4]
 17404 1ab6 1A71     		strb	r2, [r3, #4]
 17405              	.L664:
2286:..\src/command_processing.c ****                 strcat(str, "\tMagnetometers: ");
 17406              		.loc 1 2286 0
 17407 1ab8 07F11C03 		add	r3, r7, #28
 17408 1abc 1846     		mov	r0, r3
 17409 1abe FFF7FEFF 		bl	strlen
 17410 1ac2 0346     		mov	r3, r0
 17411 1ac4 1A46     		mov	r2, r3
 17412 1ac6 07F11C03 		add	r3, r7, #28
 17413 1aca 1344     		add	r3, r3, r2
 17414 1acc 8D4A     		ldr	r2, .L693+16
 17415 1ace 1D46     		mov	r5, r3
 17416 1ad0 1446     		mov	r4, r2
 17417 1ad2 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17418 1ad4 2860     		str	r0, [r5]	@ unaligned
 17419 1ad6 6960     		str	r1, [r5, #4]	@ unaligned
 17420 1ad8 AA60     		str	r2, [r5, #8]	@ unaligned
 17421 1ada EB60     		str	r3, [r5, #12]	@ unaligned
 17422 1adc 2378     		ldrb	r3, [r4]
 17423 1ade 2B74     		strb	r3, [r5, #16]
2287:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][2]))
 17424              		.loc 1 2287 0
 17425 1ae0 864A     		ldr	r2, .L693+8
 17426 1ae2 D7F89430 		ldr	r3, [r7, #148]
 17427 1ae6 1344     		add	r3, r3, r2
 17428 1ae8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17429 1aea 1946     		mov	r1, r3
 17430 1aec D7F88C20 		ldr	r2, [r7, #140]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 386


 17431 1af0 0B46     		mov	r3, r1
 17432 1af2 9B00     		lsls	r3, r3, #2
 17433 1af4 0B44     		add	r3, r3, r1
 17434 1af6 1344     		add	r3, r3, r2
 17435 1af8 03F50173 		add	r3, r3, #516
 17436 1afc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17437 1afe 002B     		cmp	r3, #0
 17438 1b00 0FD0     		beq	.L665
2288:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 17439              		.loc 1 2288 0
 17440 1b02 07F11C03 		add	r3, r7, #28
 17441 1b06 1846     		mov	r0, r3
 17442 1b08 FFF7FEFF 		bl	strlen
 17443 1b0c 0346     		mov	r3, r0
 17444 1b0e 1A46     		mov	r2, r3
 17445 1b10 07F11C03 		add	r3, r7, #28
 17446 1b14 1344     		add	r3, r3, r2
 17447 1b16 7A4A     		ldr	r2, .L693+12
 17448 1b18 1068     		ldr	r0, [r2]	@ unaligned
 17449 1b1a 1860     		str	r0, [r3]	@ unaligned
 17450 1b1c 9288     		ldrh	r2, [r2, #4]	@ unaligned
 17451 1b1e 9A80     		strh	r2, [r3, #4]	@ unaligned
 17452 1b20 0EE0     		b	.L666
 17453              	.L665:
2289:..\src/command_processing.c ****                 else
2290:..\src/command_processing.c ****                     strcat(str, "NO\r\n");
 17454              		.loc 1 2290 0
 17455 1b22 07F11C03 		add	r3, r7, #28
 17456 1b26 1846     		mov	r0, r3
 17457 1b28 FFF7FEFF 		bl	strlen
 17458 1b2c 0346     		mov	r3, r0
 17459 1b2e 1A46     		mov	r2, r3
 17460 1b30 07F11C03 		add	r3, r7, #28
 17461 1b34 1344     		add	r3, r3, r2
 17462 1b36 6F4A     		ldr	r2, .L693
 17463 1b38 1068     		ldr	r0, [r2]	@ unaligned
 17464 1b3a 1860     		str	r0, [r3]	@ unaligned
 17465 1b3c 1279     		ldrb	r2, [r2, #4]
 17466 1b3e 1A71     		strb	r2, [r3, #4]
 17467              	.L666:
2291:..\src/command_processing.c ****                 strcat(str, "\tQuaternion: ");                
 17468              		.loc 1 2291 0
 17469 1b40 07F11C03 		add	r3, r7, #28
 17470 1b44 1846     		mov	r0, r3
 17471 1b46 FFF7FEFF 		bl	strlen
 17472 1b4a 0346     		mov	r3, r0
 17473 1b4c 1A46     		mov	r2, r3
 17474 1b4e 07F11C03 		add	r3, r7, #28
 17475 1b52 1344     		add	r3, r3, r2
 17476 1b54 6C4A     		ldr	r2, .L693+20
 17477 1b56 1C46     		mov	r4, r3
 17478 1b58 1346     		mov	r3, r2
 17479 1b5a 07CB     		ldmia	r3!, {r0, r1, r2}
 17480 1b5c 2060     		str	r0, [r4]	@ unaligned
 17481 1b5e 6160     		str	r1, [r4, #4]	@ unaligned
 17482 1b60 A260     		str	r2, [r4, #8]	@ unaligned
 17483 1b62 1B88     		ldrh	r3, [r3]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 387


 17484 1b64 A381     		strh	r3, [r4, #12]	@ unaligned
2292:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][3]))
 17485              		.loc 1 2292 0
 17486 1b66 654A     		ldr	r2, .L693+8
 17487 1b68 D7F89430 		ldr	r3, [r7, #148]
 17488 1b6c 1344     		add	r3, r3, r2
 17489 1b6e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17490 1b70 1946     		mov	r1, r3
 17491 1b72 D7F88C20 		ldr	r2, [r7, #140]
 17492 1b76 0B46     		mov	r3, r1
 17493 1b78 9B00     		lsls	r3, r3, #2
 17494 1b7a 0B44     		add	r3, r3, r1
 17495 1b7c 1344     		add	r3, r3, r2
 17496 1b7e 03F20523 		addw	r3, r3, #517
 17497 1b82 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17498 1b84 002B     		cmp	r3, #0
 17499 1b86 0FD0     		beq	.L667
2293:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 17500              		.loc 1 2293 0
 17501 1b88 07F11C03 		add	r3, r7, #28
 17502 1b8c 1846     		mov	r0, r3
 17503 1b8e FFF7FEFF 		bl	strlen
 17504 1b92 0346     		mov	r3, r0
 17505 1b94 1A46     		mov	r2, r3
 17506 1b96 07F11C03 		add	r3, r7, #28
 17507 1b9a 1344     		add	r3, r3, r2
 17508 1b9c 584A     		ldr	r2, .L693+12
 17509 1b9e 1068     		ldr	r0, [r2]	@ unaligned
 17510 1ba0 1860     		str	r0, [r3]	@ unaligned
 17511 1ba2 9288     		ldrh	r2, [r2, #4]	@ unaligned
 17512 1ba4 9A80     		strh	r2, [r3, #4]	@ unaligned
 17513 1ba6 0EE0     		b	.L668
 17514              	.L667:
2294:..\src/command_processing.c ****                 else
2295:..\src/command_processing.c ****                     strcat(str, "NO\r\n");
 17515              		.loc 1 2295 0
 17516 1ba8 07F11C03 		add	r3, r7, #28
 17517 1bac 1846     		mov	r0, r3
 17518 1bae FFF7FEFF 		bl	strlen
 17519 1bb2 0346     		mov	r3, r0
 17520 1bb4 1A46     		mov	r2, r3
 17521 1bb6 07F11C03 		add	r3, r7, #28
 17522 1bba 1344     		add	r3, r3, r2
 17523 1bbc 4D4A     		ldr	r2, .L693
 17524 1bbe 1068     		ldr	r0, [r2]	@ unaligned
 17525 1bc0 1860     		str	r0, [r3]	@ unaligned
 17526 1bc2 1279     		ldrb	r2, [r2, #4]
 17527 1bc4 1A71     		strb	r2, [r3, #4]
 17528              	.L668:
2296:..\src/command_processing.c ****                 strcat(str, "\tTemperature: ");
 17529              		.loc 1 2296 0
 17530 1bc6 07F11C03 		add	r3, r7, #28
 17531 1bca 1846     		mov	r0, r3
 17532 1bcc FFF7FEFF 		bl	strlen
 17533 1bd0 0346     		mov	r3, r0
 17534 1bd2 1A46     		mov	r2, r3
 17535 1bd4 07F11C03 		add	r3, r7, #28
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 388


 17536 1bd8 1344     		add	r3, r3, r2
 17537 1bda 4C4A     		ldr	r2, .L693+24
 17538 1bdc 1C46     		mov	r4, r3
 17539 1bde 1346     		mov	r3, r2
 17540 1be0 07CB     		ldmia	r3!, {r0, r1, r2}
 17541 1be2 2060     		str	r0, [r4]	@ unaligned
 17542 1be4 6160     		str	r1, [r4, #4]	@ unaligned
 17543 1be6 A260     		str	r2, [r4, #8]	@ unaligned
 17544 1be8 1A88     		ldrh	r2, [r3]	@ unaligned
 17545 1bea 9B78     		ldrb	r3, [r3, #2]
 17546 1bec A281     		strh	r2, [r4, #12]	@ unaligned
 17547 1bee A373     		strb	r3, [r4, #14]
2297:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][4]))
 17548              		.loc 1 2297 0
 17549 1bf0 424A     		ldr	r2, .L693+8
 17550 1bf2 D7F89430 		ldr	r3, [r7, #148]
 17551 1bf6 1344     		add	r3, r3, r2
 17552 1bf8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17553 1bfa 1946     		mov	r1, r3
 17554 1bfc D7F88C20 		ldr	r2, [r7, #140]
 17555 1c00 0B46     		mov	r3, r1
 17556 1c02 9B00     		lsls	r3, r3, #2
 17557 1c04 0B44     		add	r3, r3, r1
 17558 1c06 1344     		add	r3, r3, r2
 17559 1c08 03F20623 		addw	r3, r3, #518
 17560 1c0c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17561 1c0e 002B     		cmp	r3, #0
 17562 1c10 0FD0     		beq	.L669
2298:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 17563              		.loc 1 2298 0
 17564 1c12 07F11C03 		add	r3, r7, #28
 17565 1c16 1846     		mov	r0, r3
 17566 1c18 FFF7FEFF 		bl	strlen
 17567 1c1c 0346     		mov	r3, r0
 17568 1c1e 1A46     		mov	r2, r3
 17569 1c20 07F11C03 		add	r3, r7, #28
 17570 1c24 1344     		add	r3, r3, r2
 17571 1c26 364A     		ldr	r2, .L693+12
 17572 1c28 1068     		ldr	r0, [r2]	@ unaligned
 17573 1c2a 1860     		str	r0, [r3]	@ unaligned
 17574 1c2c 9288     		ldrh	r2, [r2, #4]	@ unaligned
 17575 1c2e 9A80     		strh	r2, [r3, #4]	@ unaligned
 17576 1c30 0EE0     		b	.L670
 17577              	.L669:
2299:..\src/command_processing.c ****                 else
2300:..\src/command_processing.c ****                     strcat(str, "NO\r\n");
 17578              		.loc 1 2300 0
 17579 1c32 07F11C03 		add	r3, r7, #28
 17580 1c36 1846     		mov	r0, r3
 17581 1c38 FFF7FEFF 		bl	strlen
 17582 1c3c 0346     		mov	r3, r0
 17583 1c3e 1A46     		mov	r2, r3
 17584 1c40 07F11C03 		add	r3, r7, #28
 17585 1c44 1344     		add	r3, r3, r2
 17586 1c46 2B4A     		ldr	r2, .L693
 17587 1c48 1068     		ldr	r0, [r2]	@ unaligned
 17588 1c4a 1860     		str	r0, [r3]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 389


 17589 1c4c 1279     		ldrb	r2, [r2, #4]
 17590 1c4e 1A71     		strb	r2, [r3, #4]
 17591              	.L670:
2301:..\src/command_processing.c ****                      
2302:..\src/command_processing.c ****                 strcat(info_string, str);
 17592              		.loc 1 2302 0 discriminator 2
 17593 1c50 07F11C03 		add	r3, r7, #28
 17594 1c54 1946     		mov	r1, r3
 17595 1c56 7869     		ldr	r0, [r7, #20]
 17596 1c58 FFF7FEFF 		bl	strcat
2272:..\src/command_processing.c ****                 sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 17597              		.loc 1 2272 0 discriminator 2
 17598 1c5c D7F89430 		ldr	r3, [r7, #148]
 17599 1c60 0133     		adds	r3, r3, #1
 17600 1c62 C7F89430 		str	r3, [r7, #148]
 17601              	.L660:
2272:..\src/command_processing.c ****                 sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 17602              		.loc 1 2272 0 is_stmt 0 discriminator 1
 17603 1c66 2A4B     		ldr	r3, .L693+28
 17604 1c68 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17605 1c6a 1A46     		mov	r2, r3
 17606 1c6c D7F89430 		ldr	r3, [r7, #148]
 17607 1c70 9A42     		cmp	r2, r3
 17608 1c72 3FF76CAE 		bgt	.L671
2303:..\src/command_processing.c ****             }       
2304:..\src/command_processing.c ****             
2305:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 17609              		.loc 1 2305 0 is_stmt 1
 17610 1c76 7869     		ldr	r0, [r7, #20]
 17611 1c78 FFF7FEFF 		bl	strlen
 17612 1c7c 0346     		mov	r3, r0
 17613 1c7e 1A46     		mov	r2, r3
 17614 1c80 7B69     		ldr	r3, [r7, #20]
 17615 1c82 1344     		add	r3, r3, r2
 17616 1c84 234A     		ldr	r2, .L693+32
 17617 1c86 1188     		ldrh	r1, [r2]	@ unaligned
 17618 1c88 9278     		ldrb	r2, [r2, #2]
 17619 1c8a 1980     		strh	r1, [r3]	@ unaligned
 17620 1c8c 9A70     		strb	r2, [r3, #2]
2306:..\src/command_processing.c ****           
2307:..\src/command_processing.c ****             IMU_reading_info(info_string);
 17621              		.loc 1 2307 0
 17622 1c8e 7869     		ldr	r0, [r7, #20]
 17623 1c90 FFF7FEFF 		bl	IMU_reading_info
 17624              	.L659:
2308:..\src/command_processing.c ****         }
2309:..\src/command_processing.c ****         
2310:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 17625              		.loc 1 2310 0
 17626 1c94 7869     		ldr	r0, [r7, #20]
 17627 1c96 FFF7FEFF 		bl	strlen
 17628 1c9a 0346     		mov	r3, r0
 17629 1c9c 1A46     		mov	r2, r3
 17630 1c9e 7B69     		ldr	r3, [r7, #20]
 17631 1ca0 1344     		add	r3, r3, r2
 17632 1ca2 1C4A     		ldr	r2, .L693+32
 17633 1ca4 1188     		ldrh	r1, [r2]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 390


 17634 1ca6 9278     		ldrb	r2, [r2, #2]
 17635 1ca8 1980     		strh	r1, [r3]	@ unaligned
 17636 1caa 9A70     		strb	r2, [r3, #2]
2311:..\src/command_processing.c **** 
2312:..\src/command_processing.c ****         sprintf(str, "Last FW cycle time: %u us\r\n", (uint16)timer_value0 - (uint16)timer_value);
 17637              		.loc 1 2312 0
 17638 1cac 1A4B     		ldr	r3, .L693+36
 17639 1cae 1B88     		ldrh	r3, [r3]
 17640 1cb0 1A46     		mov	r2, r3
 17641 1cb2 1A4B     		ldr	r3, .L693+40
 17642 1cb4 1B88     		ldrh	r3, [r3]
 17643 1cb6 D21A     		subs	r2, r2, r3
 17644 1cb8 07F11C03 		add	r3, r7, #28
 17645 1cbc 1849     		ldr	r1, .L693+44
 17646 1cbe 1846     		mov	r0, r3
 17647 1cc0 FFF7FEFF 		bl	sprintf
2313:..\src/command_processing.c ****         strcat(info_string, str);
 17648              		.loc 1 2313 0
 17649 1cc4 07F11C03 		add	r3, r7, #28
 17650 1cc8 1946     		mov	r1, r3
 17651 1cca 7869     		ldr	r0, [r7, #20]
 17652 1ccc FFF7FEFF 		bl	strcat
2314:..\src/command_processing.c ****   
2315:..\src/command_processing.c ****         strcat(info_string, "\r\n\0");      // End of info_string
 17653              		.loc 1 2315 0
 17654 1cd0 7869     		ldr	r0, [r7, #20]
 17655 1cd2 FFF7FEFF 		bl	strlen
 17656 1cd6 0346     		mov	r3, r0
 17657 1cd8 1A46     		mov	r2, r3
 17658 1cda 7B69     		ldr	r3, [r7, #20]
 17659 1cdc 1344     		add	r3, r3, r2
 17660 1cde 114A     		ldr	r2, .L693+48
 17661 1ce0 1188     		ldrh	r1, [r2]	@ unaligned
 17662 1ce2 9278     		ldrb	r2, [r2, #2]
 17663 1ce4 1980     		strh	r1, [r3]	@ unaligned
 17664 1ce6 9A70     		strb	r2, [r3, #2]
 17665              	.L673:
 17666              	.LBE24:
2316:..\src/command_processing.c ****     }
2317:..\src/command_processing.c **** }
 17667              		.loc 1 2317 0
 17668 1ce8 00BF     		nop
 17669 1cea 9C37     		adds	r7, r7, #156
 17670              		.cfi_def_cfa_offset 36
 17671 1cec BD46     		mov	sp, r7
 17672              		.cfi_def_cfa_register 13
 17673              		@ sp needed
 17674 1cee BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 17675              	.L694:
 17676 1cf2 00BF     		.align	2
 17677              	.L693:
 17678 1cf4 14130000 		.word	.LC178
 17679 1cf8 F8190000 		.word	.LC250
 17680 1cfc 00000000 		.word	IMU_connected
 17681 1d00 0C130000 		.word	.LC177
 17682 1d04 081A0000 		.word	.LC251
 17683 1d08 1C1A0000 		.word	.LC252
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 391


 17684 1d0c 2C1A0000 		.word	.LC253
 17685 1d10 00000000 		.word	N_IMU_Connected
 17686 1d14 34110000 		.word	.LC154
 17687 1d18 00000000 		.word	timer_value0
 17688 1d1c 00000000 		.word	timer_value
 17689 1d20 3C1A0000 		.word	.LC254
 17690 1d24 581A0000 		.word	.LC255
 17691              		.cfi_endproc
 17692              	.LFE72:
 17693              		.size	prepare_generic_info, .-prepare_generic_info
 17694              		.section	.rodata
 17695              		.align	2
 17696              	.LC256:
 17697 1a5c 0D0A5553 		.ascii	"\015\012USAGE STATISTICS\015\012\000"
 17697      41474520 
 17697      53544154 
 17697      49535449 
 17697      43530D0A 
 17698 1a71 000000   		.align	2
 17699              	.LC257:
 17700 1a74 44617465 		.ascii	"Date of HW maintenance: %02d/%02d/20%02d\015\012\000"
 17700      206F6620 
 17700      4857206D 
 17700      61696E74 
 17700      656E616E 
 17701 1a9f 00       		.align	2
 17702              	.LC258:
 17703 1aa0 44617465 		.ascii	"Date of usage stats period begin: %02d/%02d/20%02d\015"
 17703      206F6620 
 17703      75736167 
 17703      65207374 
 17703      61747320 
 17704 1ad3 0A00     		.ascii	"\012\000"
 17705 1ad5 000000   		.align	2
 17706              	.LC259:
 17707 1ad8 4C617374 		.ascii	"Last checked Time: %02d/%02d/20%02d %02d:%02d:%02d\015"
 17707      20636865 
 17707      636B6564 
 17707      2054696D 
 17707      653A2025 
 17708 1b0b 0A00     		.ascii	"\012\000"
 17709 1b0d 000000   		.align	2
 17710              	.LC260:
 17711 1b10 506F7369 		.ascii	"Positions histogram (ticks):\015\012\000"
 17711      74696F6E 
 17711      73206869 
 17711      73746F67 
 17711      72616D20 
 17712 1b2f 00       		.align	2
 17713              	.LC261:
 17714 1b30 42696E20 		.ascii	"Bin %d [%d-%d]: %lu\015\012\000"
 17714      2564205B 
 17714      25642D25 
 17714      645D3A20 
 17714      256C750D 
 17715 1b46 0000     		.align	2
 17716              	.LC262:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 392


 17717 1b48 43757272 		.ascii	"Current histogram (mA):\015\012\000"
 17717      656E7420 
 17717      68697374 
 17717      6F677261 
 17717      6D20286D 
 17718 1b62 0000     		.align	2
 17719              	.LC263:
 17720 1b64 54687265 		.ascii	"Threshold %d [%d-%d]: %lu\015\012\000"
 17720      73686F6C 
 17720      64202564 
 17720      205B2564 
 17720      2D25645D 
 17721              		.align	2
 17722              	.LC264:
 17723 1b80 4D6F7469 		.ascii	"Motions through EMG counter: %lu, %lu\000"
 17723      6F6E7320 
 17723      7468726F 
 17723      75676820 
 17723      454D4720 
 17724 1ba6 0000     		.align	2
 17725              	.LC265:
 17726 1ba8 52657374 		.ascii	"Rest position occurrences: %lu\000"
 17726      20706F73 
 17726      6974696F 
 17726      6E206F63 
 17726      63757272 
 17727 1bc7 00       		.align	2
 17728              	.LC266:
 17729 1bc8 416E676C 		.ascii	"Angle total displacement (ticks): %lu\000"
 17729      6520746F 
 17729      74616C20 
 17729      64697370 
 17729      6C616365 
 17730 1bee 0000     		.align	2
 17731              	.LC267:
 17732 1bf0 546F7461 		.ascii	"Total power on time (sec): %lu\000"
 17732      6C20706F 
 17732      77657220 
 17732      6F6E2074 
 17732      696D6520 
 17733 1c0f 00       		.align	2
 17734              	.LC268:
 17735 1c10 546F7461 		.ascii	"Total rest position time (sec): %lu\000"
 17735      6C207265 
 17735      73742070 
 17735      6F736974 
 17735      696F6E20 
 17736              		.section	.text.prepare_counter_info,"ax",%progbits
 17737              		.align	2
 17738              		.global	prepare_counter_info
 17739              		.thumb
 17740              		.thumb_func
 17741              		.type	prepare_counter_info, %function
 17742              	prepare_counter_info:
 17743              	.LFB73:
2318:..\src/command_processing.c **** 
2319:..\src/command_processing.c **** //==============================================================================
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 393


2320:..\src/command_processing.c **** //                                                 PREPARE GENERIC COUNTERS INFO
2321:..\src/command_processing.c **** //==============================================================================
2322:..\src/command_processing.c **** 
2323:..\src/command_processing.c **** void prepare_counter_info(char *info_string)
2324:..\src/command_processing.c **** {
 17744              		.loc 1 2324 0
 17745              		.cfi_startproc
 17746              		@ args = 0, pretend = 0, frame = 432
 17747              		@ frame_needed = 1, uses_anonymous_args = 0
 17748 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 17749              		.cfi_def_cfa_offset 20
 17750              		.cfi_offset 4, -20
 17751              		.cfi_offset 5, -16
 17752              		.cfi_offset 6, -12
 17753              		.cfi_offset 7, -8
 17754              		.cfi_offset 14, -4
 17755 0002 F1B0     		sub	sp, sp, #452
 17756              		.cfi_def_cfa_offset 472
 17757 0004 04AF     		add	r7, sp, #16
 17758              		.cfi_def_cfa 7, 456
 17759 0006 3B1D     		adds	r3, r7, #4
 17760 0008 1860     		str	r0, [r3]
2325:..\src/command_processing.c ****     char str[100];  
2326:..\src/command_processing.c ****     int i;
2327:..\src/command_processing.c ****     int step;
2328:..\src/command_processing.c **** 
2329:..\src/command_processing.c ****     struct st_eeprom* MEM_P = &g_mem;    
 17761              		.loc 1 2329 0
 17762 000a 964B     		ldr	r3, .L701
 17763 000c C7F8A831 		str	r3, [r7, #424]
2330:..\src/command_processing.c ****     struct st_motor* MOT = &(MEM_P->motor[0]);      // Default motor
 17764              		.loc 1 2330 0
 17765 0010 D7F8A831 		ldr	r3, [r7, #424]
 17766 0014 B033     		adds	r3, r3, #176
 17767 0016 C7F8A431 		str	r3, [r7, #420]
2331:..\src/command_processing.c ****     uint8 ENC_L = MOT->encoder_line;                // Associated encoder line
 17768              		.loc 1 2331 0
 17769 001a D7F8A431 		ldr	r3, [r7, #420]
 17770 001e 93F86030 		ldrb	r3, [r3, #96]
 17771 0022 87F8A331 		strb	r3, [r7, #419]
2332:..\src/command_processing.c ****     
2333:..\src/command_processing.c ****     strcpy(info_string, "");
 17772              		.loc 1 2333 0
 17773 0026 3B1D     		adds	r3, r7, #4
 17774 0028 1B68     		ldr	r3, [r3]
 17775 002a 0022     		movs	r2, #0
 17776 002c 1A70     		strb	r2, [r3]
2334:..\src/command_processing.c ****     
2335:..\src/command_processing.c ****     strcat(info_string, "\r\nUSAGE STATISTICS\r\n");
 17777              		.loc 1 2335 0
 17778 002e 3B1D     		adds	r3, r7, #4
 17779 0030 1868     		ldr	r0, [r3]
 17780 0032 FFF7FEFF 		bl	strlen
 17781 0036 0346     		mov	r3, r0
 17782 0038 1A46     		mov	r2, r3
 17783 003a 3B1D     		adds	r3, r7, #4
 17784 003c 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 394


 17785 003e 1344     		add	r3, r3, r2
 17786 0040 894A     		ldr	r2, .L701+4
 17787 0042 1D46     		mov	r5, r3
 17788 0044 1446     		mov	r4, r2
 17789 0046 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17790 0048 2860     		str	r0, [r5]	@ unaligned
 17791 004a 6960     		str	r1, [r5, #4]	@ unaligned
 17792 004c AA60     		str	r2, [r5, #8]	@ unaligned
 17793 004e EB60     		str	r3, [r5, #12]	@ unaligned
 17794 0050 2068     		ldr	r0, [r4]	@ unaligned
 17795 0052 2861     		str	r0, [r5, #16]	@ unaligned
 17796 0054 2379     		ldrb	r3, [r4, #4]
 17797 0056 2B75     		strb	r3, [r5, #20]
2336:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 17798              		.loc 1 2336 0
 17799 0058 3B1D     		adds	r3, r7, #4
 17800 005a 1868     		ldr	r0, [r3]
 17801 005c FFF7FEFF 		bl	strlen
 17802 0060 0346     		mov	r3, r0
 17803 0062 1A46     		mov	r2, r3
 17804 0064 3B1D     		adds	r3, r7, #4
 17805 0066 1B68     		ldr	r3, [r3]
 17806 0068 1344     		add	r3, r3, r2
 17807 006a 804A     		ldr	r2, .L701+8
 17808 006c 1188     		ldrh	r1, [r2]	@ unaligned
 17809 006e 9278     		ldrb	r2, [r2, #2]
 17810 0070 1980     		strh	r1, [r3]	@ unaligned
 17811 0072 9A70     		strb	r2, [r3, #2]
2337:..\src/command_processing.c ****     
2338:..\src/command_processing.c ****     sprintf(str, "Date of HW maintenance: %02d/%02d/20%02d\r\n", (int)MEM_P->dev.hw_maint_date[0], 
 17812              		.loc 1 2338 0
 17813 0074 D7F8A831 		ldr	r3, [r7, #424]
 17814 0078 93F8A130 		ldrb	r3, [r3, #161]	@ zero_extendqisi2
 17815 007c 1A46     		mov	r2, r3
 17816 007e D7F8A831 		ldr	r3, [r7, #424]
 17817 0082 93F8A230 		ldrb	r3, [r3, #162]	@ zero_extendqisi2
 17818 0086 1946     		mov	r1, r3
 17819 0088 D7F8A831 		ldr	r3, [r7, #424]
 17820 008c 93F8A330 		ldrb	r3, [r3, #163]	@ zero_extendqisi2
 17821 0090 07F59C70 		add	r0, r7, #312
 17822 0094 0093     		str	r3, [sp]
 17823 0096 0B46     		mov	r3, r1
 17824 0098 7549     		ldr	r1, .L701+12
 17825 009a FFF7FEFF 		bl	sprintf
2339:..\src/command_processing.c ****     strcat(info_string, str);
 17826              		.loc 1 2339 0
 17827 009e 07F59C72 		add	r2, r7, #312
 17828 00a2 3B1D     		adds	r3, r7, #4
 17829 00a4 1146     		mov	r1, r2
 17830 00a6 1868     		ldr	r0, [r3]
 17831 00a8 FFF7FEFF 		bl	strcat
2340:..\src/command_processing.c ****     
2341:..\src/command_processing.c ****     sprintf(str, "Date of usage stats period begin: %02d/%02d/20%02d\r\n", (int)MEM_P->dev.stats_pe
 17832              		.loc 1 2341 0
 17833 00ac D7F8A831 		ldr	r3, [r7, #424]
 17834 00b0 93F8A430 		ldrb	r3, [r3, #164]	@ zero_extendqisi2
 17835 00b4 1A46     		mov	r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 395


 17836 00b6 D7F8A831 		ldr	r3, [r7, #424]
 17837 00ba 93F8A530 		ldrb	r3, [r3, #165]	@ zero_extendqisi2
 17838 00be 1946     		mov	r1, r3
 17839 00c0 D7F8A831 		ldr	r3, [r7, #424]
 17840 00c4 93F8A630 		ldrb	r3, [r3, #166]	@ zero_extendqisi2
 17841 00c8 07F59C70 		add	r0, r7, #312
 17842 00cc 0093     		str	r3, [sp]
 17843 00ce 0B46     		mov	r3, r1
 17844 00d0 6849     		ldr	r1, .L701+16
 17845 00d2 FFF7FEFF 		bl	sprintf
2342:..\src/command_processing.c ****     strcat(info_string, str);
 17846              		.loc 1 2342 0
 17847 00d6 07F59C72 		add	r2, r7, #312
 17848 00da 3B1D     		adds	r3, r7, #4
 17849 00dc 1146     		mov	r1, r2
 17850 00de 1868     		ldr	r0, [r3]
 17851 00e0 FFF7FEFF 		bl	strcat
2343:..\src/command_processing.c ****             
2344:..\src/command_processing.c ****     sprintf(str, "Last checked Time: %02d/%02d/20%02d %02d:%02d:%02d\r\n", (int)MEM_P->exp.curr_tim
 17852              		.loc 1 2344 0
 17853 00e4 D7F8A831 		ldr	r3, [r7, #424]
 17854 00e8 93F82032 		ldrb	r3, [r3, #544]	@ zero_extendqisi2
 17855 00ec 1D46     		mov	r5, r3
 17856 00ee D7F8A831 		ldr	r3, [r7, #424]
 17857 00f2 93F82132 		ldrb	r3, [r3, #545]	@ zero_extendqisi2
 17858 00f6 1E46     		mov	r6, r3
 17859 00f8 D7F8A831 		ldr	r3, [r7, #424]
 17860 00fc 93F82232 		ldrb	r3, [r3, #546]	@ zero_extendqisi2
 17861 0100 1A46     		mov	r2, r3
 17862 0102 D7F8A831 		ldr	r3, [r7, #424]
 17863 0106 93F82332 		ldrb	r3, [r3, #547]	@ zero_extendqisi2
 17864 010a 1946     		mov	r1, r3
 17865 010c D7F8A831 		ldr	r3, [r7, #424]
 17866 0110 93F82432 		ldrb	r3, [r3, #548]	@ zero_extendqisi2
 17867 0114 1C46     		mov	r4, r3
 17868 0116 D7F8A831 		ldr	r3, [r7, #424]
 17869 011a 93F82532 		ldrb	r3, [r3, #549]	@ zero_extendqisi2
 17870 011e 07F59C70 		add	r0, r7, #312
 17871 0122 0393     		str	r3, [sp, #12]
 17872 0124 0294     		str	r4, [sp, #8]
 17873 0126 0191     		str	r1, [sp, #4]
 17874 0128 0092     		str	r2, [sp]
 17875 012a 3346     		mov	r3, r6
 17876 012c 2A46     		mov	r2, r5
 17877 012e 5249     		ldr	r1, .L701+20
 17878 0130 FFF7FEFF 		bl	sprintf
2345:..\src/command_processing.c ****     strcat(info_string, str);
 17879              		.loc 1 2345 0
 17880 0134 07F59C72 		add	r2, r7, #312
 17881 0138 3B1D     		adds	r3, r7, #4
 17882 013a 1146     		mov	r1, r2
 17883 013c 1868     		ldr	r0, [r3]
 17884 013e FFF7FEFF 		bl	strcat
2346:..\src/command_processing.c ****     
2347:..\src/command_processing.c ****     sprintf(str, "Positions histogram (ticks):\r\n");
 17885              		.loc 1 2347 0
 17886 0142 07F59C73 		add	r3, r7, #312
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 396


 17887 0146 4D4A     		ldr	r2, .L701+24
 17888 0148 1C46     		mov	r4, r3
 17889 014a 1546     		mov	r5, r2
 17890 014c 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 17891 014e 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 17892 0150 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 17893 0154 07C4     		stmia	r4!, {r0, r1, r2}
 17894 0156 2380     		strh	r3, [r4]	@ movhi
 17895 0158 0234     		adds	r4, r4, #2
 17896 015a 1B0C     		lsrs	r3, r3, #16
 17897 015c 2370     		strb	r3, [r4]
2348:..\src/command_processing.c ****     strcat(info_string, str);
 17898              		.loc 1 2348 0
 17899 015e 07F59C72 		add	r2, r7, #312
 17900 0162 3B1D     		adds	r3, r7, #4
 17901 0164 1146     		mov	r1, r2
 17902 0166 1868     		ldr	r0, [r3]
 17903 0168 FFF7FEFF 		bl	strcat
2349:..\src/command_processing.c ****     step = ( (int)(MOT->pos_lim_sup >> MEM_P->enc[ENC_L].res[0]) / 10);
 17904              		.loc 1 2349 0
 17905 016c D7F8A431 		ldr	r3, [r7, #420]
 17906 0170 996B     		ldr	r1, [r3, #56]
 17907 0172 97F8A321 		ldrb	r2, [r7, #419]	@ zero_extendqisi2
 17908 0176 D7F8A801 		ldr	r0, [r7, #424]
 17909 017a 1346     		mov	r3, r2
 17910 017c 5B00     		lsls	r3, r3, #1
 17911 017e 1344     		add	r3, r3, r2
 17912 0180 1B01     		lsls	r3, r3, #4
 17913 0182 0344     		add	r3, r3, r0
 17914 0184 03F29513 		addw	r3, r3, #405
 17915 0188 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17916 018a 41FA03F3 		asr	r3, r1, r3
 17917 018e 3C4A     		ldr	r2, .L701+28
 17918 0190 82FB0312 		smull	r1, r2, r2, r3
 17919 0194 9210     		asrs	r2, r2, #2
 17920 0196 DB17     		asrs	r3, r3, #31
 17921 0198 D31A     		subs	r3, r2, r3
 17922 019a C7F89C31 		str	r3, [r7, #412]
2350:..\src/command_processing.c ****     for (i=1; i<=10;i++){
 17923              		.loc 1 2350 0
 17924 019e 0123     		movs	r3, #1
 17925 01a0 C7F8AC31 		str	r3, [r7, #428]
 17926 01a4 2BE0     		b	.L696
 17927              	.L697:
2351:..\src/command_processing.c ****         sprintf(str, "Bin %d [%d-%d]: %lu\r\n", i, step*(i-1)+1, step*(i), MEM_P->cnt.position_hist
 17928              		.loc 1 2351 0 discriminator 3
 17929 01a6 D7F8AC31 		ldr	r3, [r7, #428]
 17930 01aa 013B     		subs	r3, r3, #1
 17931 01ac D7F89C21 		ldr	r2, [r7, #412]
 17932 01b0 02FB03F3 		mul	r3, r2, r3
 17933 01b4 5C1C     		adds	r4, r3, #1
 17934 01b6 D7F89C31 		ldr	r3, [r7, #412]
 17935 01ba D7F8AC21 		ldr	r2, [r7, #428]
 17936 01be 02FB03F3 		mul	r3, r2, r3
 17937 01c2 D7F8AC21 		ldr	r2, [r7, #428]
 17938 01c6 511E     		subs	r1, r2, #1
 17939 01c8 D7F8A821 		ldr	r2, [r7, #424]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 397


 17940 01cc 0631     		adds	r1, r1, #6
 17941 01ce 52F82120 		ldr	r2, [r2, r1, lsl #2]
 17942 01d2 07F59C70 		add	r0, r7, #312
 17943 01d6 0192     		str	r2, [sp, #4]
 17944 01d8 0093     		str	r3, [sp]
 17945 01da 2346     		mov	r3, r4
 17946 01dc D7F8AC21 		ldr	r2, [r7, #428]
 17947 01e0 2849     		ldr	r1, .L701+32
 17948 01e2 FFF7FEFF 		bl	sprintf
2352:..\src/command_processing.c ****         strcat(info_string, str);
 17949              		.loc 1 2352 0 discriminator 3
 17950 01e6 07F59C72 		add	r2, r7, #312
 17951 01ea 3B1D     		adds	r3, r7, #4
 17952 01ec 1146     		mov	r1, r2
 17953 01ee 1868     		ldr	r0, [r3]
 17954 01f0 FFF7FEFF 		bl	strcat
2350:..\src/command_processing.c ****     for (i=1; i<=10;i++){
 17955              		.loc 1 2350 0 discriminator 3
 17956 01f4 D7F8AC31 		ldr	r3, [r7, #428]
 17957 01f8 0133     		adds	r3, r3, #1
 17958 01fa C7F8AC31 		str	r3, [r7, #428]
 17959              	.L696:
2350:..\src/command_processing.c ****     for (i=1; i<=10;i++){
 17960              		.loc 1 2350 0 is_stmt 0 discriminator 1
 17961 01fe D7F8AC31 		ldr	r3, [r7, #428]
 17962 0202 0A2B     		cmp	r3, #10
 17963 0204 CFDD     		ble	.L697
2353:..\src/command_processing.c ****     }
2354:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 17964              		.loc 1 2354 0 is_stmt 1
 17965 0206 3B1D     		adds	r3, r7, #4
 17966 0208 1868     		ldr	r0, [r3]
 17967 020a FFF7FEFF 		bl	strlen
 17968 020e 0346     		mov	r3, r0
 17969 0210 1A46     		mov	r2, r3
 17970 0212 3B1D     		adds	r3, r7, #4
 17971 0214 1B68     		ldr	r3, [r3]
 17972 0216 1344     		add	r3, r3, r2
 17973 0218 144A     		ldr	r2, .L701+8
 17974 021a 1188     		ldrh	r1, [r2]	@ unaligned
 17975 021c 9278     		ldrb	r2, [r2, #2]
 17976 021e 1980     		strh	r1, [r3]	@ unaligned
 17977 0220 9A70     		strb	r2, [r3, #2]
2355:..\src/command_processing.c ****     
2356:..\src/command_processing.c ****     sprintf(str, "Current histogram (mA):\r\n");
 17978              		.loc 1 2356 0
 17979 0222 07F59C73 		add	r3, r7, #312
 17980 0226 184A     		ldr	r2, .L701+36
 17981 0228 1C46     		mov	r4, r3
 17982 022a 1546     		mov	r5, r2
 17983 022c 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 17984 022e 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 17985 0230 95E80700 		ldmia	r5, {r0, r1, r2}
 17986 0234 03C4     		stmia	r4!, {r0, r1}
 17987 0236 2280     		strh	r2, [r4]	@ movhi
2357:..\src/command_processing.c ****     strcat(info_string, str);
 17988              		.loc 1 2357 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 398


 17989 0238 07F59C72 		add	r2, r7, #312
 17990 023c 3B1D     		adds	r3, r7, #4
 17991 023e 1146     		mov	r1, r2
 17992 0240 1868     		ldr	r0, [r3]
 17993 0242 FFF7FEFF 		bl	strcat
2358:..\src/command_processing.c ****     step = ( (int)(MOT->current_limit) / 4);
 17994              		.loc 1 2358 0
 17995 0246 D7F8A431 		ldr	r3, [r7, #420]
 17996 024a B3F95C30 		ldrsh	r3, [r3, #92]
 17997 024e 002B     		cmp	r3, #0
 17998 0250 00DA     		bge	.L698
 17999 0252 0333     		adds	r3, r3, #3
 18000              	.L698:
 18001 0254 9B10     		asrs	r3, r3, #2
 18002 0256 1BB2     		sxth	r3, r3
 18003 0258 C7F89C31 		str	r3, [r7, #412]
2359:..\src/command_processing.c ****     for (i=1; i<=4;i++){
 18004              		.loc 1 2359 0
 18005 025c 0123     		movs	r3, #1
 18006 025e C7F8AC31 		str	r3, [r7, #428]
 18007 0262 3EE0     		b	.L699
 18008              	.L702:
 18009              		.align	2
 18010              	.L701:
 18011 0264 00000000 		.word	g_mem
 18012 0268 5C1A0000 		.word	.LC256
 18013 026c 34110000 		.word	.LC154
 18014 0270 741A0000 		.word	.LC257
 18015 0274 A01A0000 		.word	.LC258
 18016 0278 D81A0000 		.word	.LC259
 18017 027c 101B0000 		.word	.LC260
 18018 0280 67666666 		.word	1717986919
 18019 0284 301B0000 		.word	.LC261
 18020 0288 481B0000 		.word	.LC262
 18021              	.L700:
2360:..\src/command_processing.c ****         sprintf(str, "Threshold %d [%d-%d]: %lu\r\n", i, step*(i-1), step*(i), MEM_P->cnt.current_h
 18022              		.loc 1 2360 0 discriminator 3
 18023 028c D7F8AC31 		ldr	r3, [r7, #428]
 18024 0290 013B     		subs	r3, r3, #1
 18025 0292 D7F89C21 		ldr	r2, [r7, #412]
 18026 0296 02FB03F4 		mul	r4, r2, r3
 18027 029a D7F89C31 		ldr	r3, [r7, #412]
 18028 029e D7F8AC21 		ldr	r2, [r7, #428]
 18029 02a2 02FB03F3 		mul	r3, r2, r3
 18030 02a6 D7F8AC21 		ldr	r2, [r7, #428]
 18031 02aa 511E     		subs	r1, r2, #1
 18032 02ac D7F8A821 		ldr	r2, [r7, #424]
 18033 02b0 1031     		adds	r1, r1, #16
 18034 02b2 52F82120 		ldr	r2, [r2, r1, lsl #2]
 18035 02b6 07F59C70 		add	r0, r7, #312
 18036 02ba 0192     		str	r2, [sp, #4]
 18037 02bc 0093     		str	r3, [sp]
 18038 02be 2346     		mov	r3, r4
 18039 02c0 D7F8AC21 		ldr	r2, [r7, #428]
 18040 02c4 6B49     		ldr	r1, .L703
 18041 02c6 FFF7FEFF 		bl	sprintf
2361:..\src/command_processing.c ****         strcat(info_string, str);
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 399


 18042              		.loc 1 2361 0 discriminator 3
 18043 02ca 07F59C72 		add	r2, r7, #312
 18044 02ce 3B1D     		adds	r3, r7, #4
 18045 02d0 1146     		mov	r1, r2
 18046 02d2 1868     		ldr	r0, [r3]
 18047 02d4 FFF7FEFF 		bl	strcat
2359:..\src/command_processing.c ****     for (i=1; i<=4;i++){
 18048              		.loc 1 2359 0 discriminator 3
 18049 02d8 D7F8AC31 		ldr	r3, [r7, #428]
 18050 02dc 0133     		adds	r3, r3, #1
 18051 02de C7F8AC31 		str	r3, [r7, #428]
 18052              	.L699:
2359:..\src/command_processing.c ****     for (i=1; i<=4;i++){
 18053              		.loc 1 2359 0 is_stmt 0 discriminator 1
 18054 02e2 D7F8AC31 		ldr	r3, [r7, #428]
 18055 02e6 042B     		cmp	r3, #4
 18056 02e8 D0DD     		ble	.L700
2362:..\src/command_processing.c ****     }
2363:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18057              		.loc 1 2363 0 is_stmt 1
 18058 02ea 3B1D     		adds	r3, r7, #4
 18059 02ec 1868     		ldr	r0, [r3]
 18060 02ee FFF7FEFF 		bl	strlen
 18061 02f2 0346     		mov	r3, r0
 18062 02f4 1A46     		mov	r2, r3
 18063 02f6 3B1D     		adds	r3, r7, #4
 18064 02f8 1B68     		ldr	r3, [r3]
 18065 02fa 1344     		add	r3, r3, r2
 18066 02fc 5E4A     		ldr	r2, .L703+4
 18067 02fe 1188     		ldrh	r1, [r2]	@ unaligned
 18068 0300 9278     		ldrb	r2, [r2, #2]
 18069 0302 1980     		strh	r1, [r3]	@ unaligned
 18070 0304 9A70     		strb	r2, [r3, #2]
2364:..\src/command_processing.c ****             
2365:..\src/command_processing.c ****     sprintf(str, "Motions through EMG counter: %lu, %lu", MEM_P->cnt.motion_counter[0], MEM_P->cnt.
 18071              		.loc 1 2365 0
 18072 0306 D7F8A831 		ldr	r3, [r7, #424]
 18073 030a DA6E     		ldr	r2, [r3, #108]
 18074 030c D7F8A831 		ldr	r3, [r7, #424]
 18075 0310 1B6F     		ldr	r3, [r3, #112]
 18076 0312 07F59C70 		add	r0, r7, #312
 18077 0316 5949     		ldr	r1, .L703+8
 18078 0318 FFF7FEFF 		bl	sprintf
2366:..\src/command_processing.c ****     strcat(info_string, str);
 18079              		.loc 1 2366 0
 18080 031c 07F59C72 		add	r2, r7, #312
 18081 0320 3B1D     		adds	r3, r7, #4
 18082 0322 1146     		mov	r1, r2
 18083 0324 1868     		ldr	r0, [r3]
 18084 0326 FFF7FEFF 		bl	strcat
2367:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18085              		.loc 1 2367 0
 18086 032a 3B1D     		adds	r3, r7, #4
 18087 032c 1868     		ldr	r0, [r3]
 18088 032e FFF7FEFF 		bl	strlen
 18089 0332 0346     		mov	r3, r0
 18090 0334 1A46     		mov	r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 400


 18091 0336 3B1D     		adds	r3, r7, #4
 18092 0338 1B68     		ldr	r3, [r3]
 18093 033a 1344     		add	r3, r3, r2
 18094 033c 4E4A     		ldr	r2, .L703+4
 18095 033e 1188     		ldrh	r1, [r2]	@ unaligned
 18096 0340 9278     		ldrb	r2, [r2, #2]
 18097 0342 1980     		strh	r1, [r3]	@ unaligned
 18098 0344 9A70     		strb	r2, [r3, #2]
2368:..\src/command_processing.c ****     
2369:..\src/command_processing.c ****     sprintf(str, "Rest position occurrences: %lu", MEM_P->cnt.rest_counter);
 18099              		.loc 1 2369 0
 18100 0346 D7F8A831 		ldr	r3, [r7, #424]
 18101 034a 1A6D     		ldr	r2, [r3, #80]
 18102 034c 07F59C73 		add	r3, r7, #312
 18103 0350 4B49     		ldr	r1, .L703+12
 18104 0352 1846     		mov	r0, r3
 18105 0354 FFF7FEFF 		bl	sprintf
2370:..\src/command_processing.c ****     strcat(info_string, str);
 18106              		.loc 1 2370 0
 18107 0358 07F59C72 		add	r2, r7, #312
 18108 035c 3B1D     		adds	r3, r7, #4
 18109 035e 1146     		mov	r1, r2
 18110 0360 1868     		ldr	r0, [r3]
 18111 0362 FFF7FEFF 		bl	strcat
2371:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18112              		.loc 1 2371 0
 18113 0366 3B1D     		adds	r3, r7, #4
 18114 0368 1868     		ldr	r0, [r3]
 18115 036a FFF7FEFF 		bl	strlen
 18116 036e 0346     		mov	r3, r0
 18117 0370 1A46     		mov	r2, r3
 18118 0372 3B1D     		adds	r3, r7, #4
 18119 0374 1B68     		ldr	r3, [r3]
 18120 0376 1344     		add	r3, r3, r2
 18121 0378 3F4A     		ldr	r2, .L703+4
 18122 037a 1188     		ldrh	r1, [r2]	@ unaligned
 18123 037c 9278     		ldrb	r2, [r2, #2]
 18124 037e 1980     		strh	r1, [r3]	@ unaligned
 18125 0380 9A70     		strb	r2, [r3, #2]
2372:..\src/command_processing.c ****     
2373:..\src/command_processing.c ****     sprintf(str, "Angle total displacement (ticks): %lu", MEM_P->cnt.wire_disp);
 18126              		.loc 1 2373 0
 18127 0382 D7F8A831 		ldr	r3, [r7, #424]
 18128 0386 5A6D     		ldr	r2, [r3, #84]
 18129 0388 07F59C73 		add	r3, r7, #312
 18130 038c 3D49     		ldr	r1, .L703+16
 18131 038e 1846     		mov	r0, r3
 18132 0390 FFF7FEFF 		bl	sprintf
2374:..\src/command_processing.c ****     strcat(info_string, str);
 18133              		.loc 1 2374 0
 18134 0394 07F59C72 		add	r2, r7, #312
 18135 0398 3B1D     		adds	r3, r7, #4
 18136 039a 1146     		mov	r1, r2
 18137 039c 1868     		ldr	r0, [r3]
 18138 039e FFF7FEFF 		bl	strcat
2375:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18139              		.loc 1 2375 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 401


 18140 03a2 3B1D     		adds	r3, r7, #4
 18141 03a4 1868     		ldr	r0, [r3]
 18142 03a6 FFF7FEFF 		bl	strlen
 18143 03aa 0346     		mov	r3, r0
 18144 03ac 1A46     		mov	r2, r3
 18145 03ae 3B1D     		adds	r3, r7, #4
 18146 03b0 1B68     		ldr	r3, [r3]
 18147 03b2 1344     		add	r3, r3, r2
 18148 03b4 304A     		ldr	r2, .L703+4
 18149 03b6 1188     		ldrh	r1, [r2]	@ unaligned
 18150 03b8 9278     		ldrb	r2, [r2, #2]
 18151 03ba 1980     		strh	r1, [r3]	@ unaligned
 18152 03bc 9A70     		strb	r2, [r3, #2]
2376:..\src/command_processing.c ****     
2377:..\src/command_processing.c ****     sprintf(str, "Total power on time (sec): %lu", MEM_P->cnt.total_runtime);
 18153              		.loc 1 2377 0
 18154 03be D7F8A831 		ldr	r3, [r7, #424]
 18155 03c2 9A6D     		ldr	r2, [r3, #88]
 18156 03c4 07F59C73 		add	r3, r7, #312
 18157 03c8 2F49     		ldr	r1, .L703+20
 18158 03ca 1846     		mov	r0, r3
 18159 03cc FFF7FEFF 		bl	sprintf
2378:..\src/command_processing.c ****     strcat(info_string, str);
 18160              		.loc 1 2378 0
 18161 03d0 07F59C72 		add	r2, r7, #312
 18162 03d4 3B1D     		adds	r3, r7, #4
 18163 03d6 1146     		mov	r1, r2
 18164 03d8 1868     		ldr	r0, [r3]
 18165 03da FFF7FEFF 		bl	strcat
2379:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18166              		.loc 1 2379 0
 18167 03de 3B1D     		adds	r3, r7, #4
 18168 03e0 1868     		ldr	r0, [r3]
 18169 03e2 FFF7FEFF 		bl	strlen
 18170 03e6 0346     		mov	r3, r0
 18171 03e8 1A46     		mov	r2, r3
 18172 03ea 3B1D     		adds	r3, r7, #4
 18173 03ec 1B68     		ldr	r3, [r3]
 18174 03ee 1344     		add	r3, r3, r2
 18175 03f0 214A     		ldr	r2, .L703+4
 18176 03f2 1188     		ldrh	r1, [r2]	@ unaligned
 18177 03f4 9278     		ldrb	r2, [r2, #2]
 18178 03f6 1980     		strh	r1, [r3]	@ unaligned
 18179 03f8 9A70     		strb	r2, [r3, #2]
2380:..\src/command_processing.c ****     
2381:..\src/command_processing.c ****     sprintf(str, "Total rest position time (sec): %lu", MEM_P->cnt.total_time_rest);
 18180              		.loc 1 2381 0
 18181 03fa D7F8A831 		ldr	r3, [r7, #424]
 18182 03fe DA6D     		ldr	r2, [r3, #92]
 18183 0400 07F59C73 		add	r3, r7, #312
 18184 0404 2149     		ldr	r1, .L703+24
 18185 0406 1846     		mov	r0, r3
 18186 0408 FFF7FEFF 		bl	sprintf
2382:..\src/command_processing.c ****     strcat(info_string, str);
 18187              		.loc 1 2382 0
 18188 040c 07F59C72 		add	r2, r7, #312
 18189 0410 3B1D     		adds	r3, r7, #4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 402


 18190 0412 1146     		mov	r1, r2
 18191 0414 1868     		ldr	r0, [r3]
 18192 0416 FFF7FEFF 		bl	strcat
2383:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18193              		.loc 1 2383 0
 18194 041a 3B1D     		adds	r3, r7, #4
 18195 041c 1868     		ldr	r0, [r3]
 18196 041e FFF7FEFF 		bl	strlen
 18197 0422 0346     		mov	r3, r0
 18198 0424 1A46     		mov	r2, r3
 18199 0426 3B1D     		adds	r3, r7, #4
 18200 0428 1B68     		ldr	r3, [r3]
 18201 042a 1344     		add	r3, r3, r2
 18202 042c 124A     		ldr	r2, .L703+4
 18203 042e 1188     		ldrh	r1, [r2]	@ unaligned
 18204 0430 9278     		ldrb	r2, [r2, #2]
 18205 0432 1980     		strh	r1, [r3]	@ unaligned
 18206 0434 9A70     		strb	r2, [r3, #2]
2384:..\src/command_processing.c ****     
2385:..\src/command_processing.c ****     
2386:..\src/command_processing.c ****     // R01 Project statistics (some are duplicated)
2387:..\src/command_processing.c ****     char CYDATA R01_str[300];
2388:..\src/command_processing.c ****     prepare_R01_info(R01_str);
 18207              		.loc 1 2388 0
 18208 0436 07F10C03 		add	r3, r7, #12
 18209 043a 1846     		mov	r0, r3
 18210 043c FFF7FEFF 		bl	prepare_R01_info
2389:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18211              		.loc 1 2389 0
 18212 0440 3B1D     		adds	r3, r7, #4
 18213 0442 1868     		ldr	r0, [r3]
 18214 0444 FFF7FEFF 		bl	strlen
 18215 0448 0346     		mov	r3, r0
 18216 044a 1A46     		mov	r2, r3
 18217 044c 3B1D     		adds	r3, r7, #4
 18218 044e 1B68     		ldr	r3, [r3]
 18219 0450 1344     		add	r3, r3, r2
 18220 0452 094A     		ldr	r2, .L703+4
 18221 0454 1188     		ldrh	r1, [r2]	@ unaligned
 18222 0456 9278     		ldrb	r2, [r2, #2]
 18223 0458 1980     		strh	r1, [r3]	@ unaligned
 18224 045a 9A70     		strb	r2, [r3, #2]
2390:..\src/command_processing.c ****     strcat(info_string, R01_str);
 18225              		.loc 1 2390 0
 18226 045c 07F10C02 		add	r2, r7, #12
 18227 0460 3B1D     		adds	r3, r7, #4
 18228 0462 1146     		mov	r1, r2
 18229 0464 1868     		ldr	r0, [r3]
 18230 0466 FFF7FEFF 		bl	strcat
2391:..\src/command_processing.c **** }
 18231              		.loc 1 2391 0
 18232 046a 00BF     		nop
 18233 046c 07F5DA77 		add	r7, r7, #436
 18234              		.cfi_def_cfa_offset 20
 18235 0470 BD46     		mov	sp, r7
 18236              		.cfi_def_cfa_register 13
 18237              		@ sp needed
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 403


 18238 0472 F0BD     		pop	{r4, r5, r6, r7, pc}
 18239              	.L704:
 18240              		.align	2
 18241              	.L703:
 18242 0474 641B0000 		.word	.LC263
 18243 0478 34110000 		.word	.LC154
 18244 047c 801B0000 		.word	.LC264
 18245 0480 A81B0000 		.word	.LC265
 18246 0484 C81B0000 		.word	.LC266
 18247 0488 F01B0000 		.word	.LC267
 18248 048c 101C0000 		.word	.LC268
 18249              		.cfi_endproc
 18250              	.LFE73:
 18251              		.size	prepare_counter_info, .-prepare_counter_info
 18252              		.section	.rodata
 18253              		.align	2
 18254              	.LC269:
 18255 1c34 52303120 		.ascii	"R01 PROJECT STATISTICS\015\012\000"
 18255      50524F4A 
 18255      45435420 
 18255      53544154 
 18255      49535449 
 18256 1c4d 000000   		.align	2
 18257              	.LC270:
 18258 1c50 506F7765 		.ascii	"Power cycles: %lu\000"
 18258      72206379 
 18258      636C6573 
 18258      3A20256C 
 18258      7500
 18259 1c62 0000     		.align	2
 18260              	.LC271:
 18261 1c64 454D4720 		.ascii	"EMG activations counter: %lu, %lu\000"
 18261      61637469 
 18261      76617469 
 18261      6F6E7320 
 18261      636F756E 
 18262 1c86 0000     		.align	2
 18263              	.LC272:
 18264 1c88 4E756D62 		.ascii	"Number of motions (close/open): %lu, %lu\000"
 18264      6572206F 
 18264      66206D6F 
 18264      74696F6E 
 18264      73202863 
 18265 1cb1 000000   		.align	2
 18266              	.LC273:
 18267 1cb4 45786365 		.ascii	"Excessive signal activity (close/open): %lu, %lu\000"
 18267      73736976 
 18267      65207369 
 18267      676E616C 
 18267      20616374 
 18268 1ce5 000000   		.align	2
 18269              	.LC274:
 18270 1ce8 546F7461 		.ascii	"Total runtime (sec): %lu\000"
 18270      6C207275 
 18270      6E74696D 
 18270      65202873 
 18270      6563293A 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 404


 18271              		.global	__aeabi_ui2f
 18272 1d01 000000   		.align	2
 18273              	.LC275:
 18274 1d04 41766572 		.ascii	"Average duration of a powered-on session (sec): %.4"
 18274      61676520 
 18274      64757261 
 18274      74696F6E 
 18274      206F6620 
 18275 1d37 6600     		.ascii	"f\000"
 18276 1d39 000000   		.align	2
 18277              	.LC276:
 18278 1d3c 46726571 		.ascii	"Frequency of motions: %.4f\000"
 18278      75656E63 
 18278      79206F66 
 18278      206D6F74 
 18278      696F6E73 
 18279              		.section	.text.prepare_R01_info,"ax",%progbits
 18280              		.align	2
 18281              		.global	prepare_R01_info
 18282              		.thumb
 18283              		.thumb_func
 18284              		.type	prepare_R01_info, %function
 18285              	prepare_R01_info:
 18286              	.LFB74:
2392:..\src/command_processing.c **** 
2393:..\src/command_processing.c **** //==============================================================================
2394:..\src/command_processing.c **** //                                                 PREPARE GENERIC COUNTERS INFO
2395:..\src/command_processing.c **** //==============================================================================
2396:..\src/command_processing.c **** 
2397:..\src/command_processing.c **** void prepare_R01_info(char *info_string)
2398:..\src/command_processing.c **** {
 18287              		.loc 1 2398 0
 18288              		.cfi_startproc
 18289              		@ args = 0, pretend = 0, frame = 168
 18290              		@ frame_needed = 1, uses_anonymous_args = 0
 18291 0000 B0B5     		push	{r4, r5, r7, lr}
 18292              		.cfi_def_cfa_offset 16
 18293              		.cfi_offset 4, -16
 18294              		.cfi_offset 5, -12
 18295              		.cfi_offset 7, -8
 18296              		.cfi_offset 14, -4
 18297 0002 AAB0     		sub	sp, sp, #168
 18298              		.cfi_def_cfa_offset 184
 18299 0004 00AF     		add	r7, sp, #0
 18300              		.cfi_def_cfa_register 7
 18301 0006 7860     		str	r0, [r7, #4]
2399:..\src/command_processing.c ****     char str[150];  
2400:..\src/command_processing.c **** 
2401:..\src/command_processing.c ****     struct st_eeprom* MEM_P = &g_mem;    
 18302              		.loc 1 2401 0
 18303 0008 8A4B     		ldr	r3, .L706
 18304 000a C7F8A430 		str	r3, [r7, #164]
2402:..\src/command_processing.c **** 
2403:..\src/command_processing.c ****     strcpy(info_string, "");
 18305              		.loc 1 2403 0
 18306 000e 7B68     		ldr	r3, [r7, #4]
 18307 0010 0022     		movs	r2, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 405


 18308 0012 1A70     		strb	r2, [r3]
2404:..\src/command_processing.c ****     
2405:..\src/command_processing.c ****     strcat(info_string, "R01 PROJECT STATISTICS\r\n");
 18309              		.loc 1 2405 0
 18310 0014 7868     		ldr	r0, [r7, #4]
 18311 0016 FFF7FEFF 		bl	strlen
 18312 001a 0346     		mov	r3, r0
 18313 001c 1A46     		mov	r2, r3
 18314 001e 7B68     		ldr	r3, [r7, #4]
 18315 0020 1344     		add	r3, r3, r2
 18316 0022 854A     		ldr	r2, .L706+4
 18317 0024 1D46     		mov	r5, r3
 18318 0026 1446     		mov	r4, r2
 18319 0028 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 18320 002a 2860     		str	r0, [r5]	@ unaligned
 18321 002c 6960     		str	r1, [r5, #4]	@ unaligned
 18322 002e AA60     		str	r2, [r5, #8]	@ unaligned
 18323 0030 EB60     		str	r3, [r5, #12]	@ unaligned
 18324 0032 03CC     		ldmia	r4!, {r0, r1}
 18325 0034 2861     		str	r0, [r5, #16]	@ unaligned
 18326 0036 6961     		str	r1, [r5, #20]	@ unaligned
 18327 0038 2378     		ldrb	r3, [r4]
 18328 003a 2B76     		strb	r3, [r5, #24]
2406:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18329              		.loc 1 2406 0
 18330 003c 7868     		ldr	r0, [r7, #4]
 18331 003e FFF7FEFF 		bl	strlen
 18332 0042 0346     		mov	r3, r0
 18333 0044 1A46     		mov	r2, r3
 18334 0046 7B68     		ldr	r3, [r7, #4]
 18335 0048 1344     		add	r3, r3, r2
 18336 004a 7C4A     		ldr	r2, .L706+8
 18337 004c 1188     		ldrh	r1, [r2]	@ unaligned
 18338 004e 9278     		ldrb	r2, [r2, #2]
 18339 0050 1980     		strh	r1, [r3]	@ unaligned
 18340 0052 9A70     		strb	r2, [r3, #2]
2407:..\src/command_processing.c ****     
2408:..\src/command_processing.c ****     sprintf(str, "Power cycles: %lu", MEM_P->cnt.power_cycles);
 18341              		.loc 1 2408 0
 18342 0054 D7F8A430 		ldr	r3, [r7, #164]
 18343 0058 1A6E     		ldr	r2, [r3, #96]
 18344 005a 07F10C03 		add	r3, r7, #12
 18345 005e 7849     		ldr	r1, .L706+12
 18346 0060 1846     		mov	r0, r3
 18347 0062 FFF7FEFF 		bl	sprintf
2409:..\src/command_processing.c ****     strcat(info_string, str);
 18348              		.loc 1 2409 0
 18349 0066 07F10C03 		add	r3, r7, #12
 18350 006a 1946     		mov	r1, r3
 18351 006c 7868     		ldr	r0, [r7, #4]
 18352 006e FFF7FEFF 		bl	strcat
2410:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18353              		.loc 1 2410 0
 18354 0072 7868     		ldr	r0, [r7, #4]
 18355 0074 FFF7FEFF 		bl	strlen
 18356 0078 0346     		mov	r3, r0
 18357 007a 1A46     		mov	r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 406


 18358 007c 7B68     		ldr	r3, [r7, #4]
 18359 007e 1344     		add	r3, r3, r2
 18360 0080 6E4A     		ldr	r2, .L706+8
 18361 0082 1188     		ldrh	r1, [r2]	@ unaligned
 18362 0084 9278     		ldrb	r2, [r2, #2]
 18363 0086 1980     		strh	r1, [r3]	@ unaligned
 18364 0088 9A70     		strb	r2, [r3, #2]
2411:..\src/command_processing.c ****     
2412:..\src/command_processing.c ****     sprintf(str, "EMG activations counter: %lu, %lu", MEM_P->cnt.emg_act_counter[0], MEM_P->cnt.emg
 18365              		.loc 1 2412 0
 18366 008a D7F8A430 		ldr	r3, [r7, #164]
 18367 008e 1A69     		ldr	r2, [r3, #16]
 18368 0090 D7F8A430 		ldr	r3, [r7, #164]
 18369 0094 5B69     		ldr	r3, [r3, #20]
 18370 0096 07F10C00 		add	r0, r7, #12
 18371 009a 6A49     		ldr	r1, .L706+16
 18372 009c FFF7FEFF 		bl	sprintf
2413:..\src/command_processing.c ****     strcat(info_string, str);
 18373              		.loc 1 2413 0
 18374 00a0 07F10C03 		add	r3, r7, #12
 18375 00a4 1946     		mov	r1, r3
 18376 00a6 7868     		ldr	r0, [r7, #4]
 18377 00a8 FFF7FEFF 		bl	strcat
2414:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18378              		.loc 1 2414 0
 18379 00ac 7868     		ldr	r0, [r7, #4]
 18380 00ae FFF7FEFF 		bl	strlen
 18381 00b2 0346     		mov	r3, r0
 18382 00b4 1A46     		mov	r2, r3
 18383 00b6 7B68     		ldr	r3, [r7, #4]
 18384 00b8 1344     		add	r3, r3, r2
 18385 00ba 604A     		ldr	r2, .L706+8
 18386 00bc 1188     		ldrh	r1, [r2]	@ unaligned
 18387 00be 9278     		ldrb	r2, [r2, #2]
 18388 00c0 1980     		strh	r1, [r3]	@ unaligned
 18389 00c2 9A70     		strb	r2, [r3, #2]
2415:..\src/command_processing.c ****     
2416:..\src/command_processing.c ****     sprintf(str, "Number of motions (close/open): %lu, %lu", MEM_P->cnt.motion_counter[0], MEM_P->c
 18390              		.loc 1 2416 0
 18391 00c4 D7F8A430 		ldr	r3, [r7, #164]
 18392 00c8 DA6E     		ldr	r2, [r3, #108]
 18393 00ca D7F8A430 		ldr	r3, [r7, #164]
 18394 00ce 1B6F     		ldr	r3, [r3, #112]
 18395 00d0 07F10C00 		add	r0, r7, #12
 18396 00d4 5C49     		ldr	r1, .L706+20
 18397 00d6 FFF7FEFF 		bl	sprintf
2417:..\src/command_processing.c ****     strcat(info_string, str);
 18398              		.loc 1 2417 0
 18399 00da 07F10C03 		add	r3, r7, #12
 18400 00de 1946     		mov	r1, r3
 18401 00e0 7868     		ldr	r0, [r7, #4]
 18402 00e2 FFF7FEFF 		bl	strcat
2418:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18403              		.loc 1 2418 0
 18404 00e6 7868     		ldr	r0, [r7, #4]
 18405 00e8 FFF7FEFF 		bl	strlen
 18406 00ec 0346     		mov	r3, r0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 407


 18407 00ee 1A46     		mov	r2, r3
 18408 00f0 7B68     		ldr	r3, [r7, #4]
 18409 00f2 1344     		add	r3, r3, r2
 18410 00f4 514A     		ldr	r2, .L706+8
 18411 00f6 1188     		ldrh	r1, [r2]	@ unaligned
 18412 00f8 9278     		ldrb	r2, [r2, #2]
 18413 00fa 1980     		strh	r1, [r3]	@ unaligned
 18414 00fc 9A70     		strb	r2, [r3, #2]
2419:..\src/command_processing.c ****     
2420:..\src/command_processing.c ****     sprintf(str, "Excessive signal activity (close/open): %lu, %lu", MEM_P->cnt.excessive_signal_ac
 18415              		.loc 1 2420 0
 18416 00fe D7F8A430 		ldr	r3, [r7, #164]
 18417 0102 5A6E     		ldr	r2, [r3, #100]
 18418 0104 D7F8A430 		ldr	r3, [r7, #164]
 18419 0108 9B6E     		ldr	r3, [r3, #104]
 18420 010a 07F10C00 		add	r0, r7, #12
 18421 010e 4F49     		ldr	r1, .L706+24
 18422 0110 FFF7FEFF 		bl	sprintf
2421:..\src/command_processing.c ****     strcat(info_string, str);
 18423              		.loc 1 2421 0
 18424 0114 07F10C03 		add	r3, r7, #12
 18425 0118 1946     		mov	r1, r3
 18426 011a 7868     		ldr	r0, [r7, #4]
 18427 011c FFF7FEFF 		bl	strcat
2422:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18428              		.loc 1 2422 0
 18429 0120 7868     		ldr	r0, [r7, #4]
 18430 0122 FFF7FEFF 		bl	strlen
 18431 0126 0346     		mov	r3, r0
 18432 0128 1A46     		mov	r2, r3
 18433 012a 7B68     		ldr	r3, [r7, #4]
 18434 012c 1344     		add	r3, r3, r2
 18435 012e 434A     		ldr	r2, .L706+8
 18436 0130 1188     		ldrh	r1, [r2]	@ unaligned
 18437 0132 9278     		ldrb	r2, [r2, #2]
 18438 0134 1980     		strh	r1, [r3]	@ unaligned
 18439 0136 9A70     		strb	r2, [r3, #2]
2423:..\src/command_processing.c ****     
2424:..\src/command_processing.c ****     sprintf(str, "Total runtime (sec): %lu", MEM_P->cnt.total_runtime);
 18440              		.loc 1 2424 0
 18441 0138 D7F8A430 		ldr	r3, [r7, #164]
 18442 013c 9A6D     		ldr	r2, [r3, #88]
 18443 013e 07F10C03 		add	r3, r7, #12
 18444 0142 4349     		ldr	r1, .L706+28
 18445 0144 1846     		mov	r0, r3
 18446 0146 FFF7FEFF 		bl	sprintf
2425:..\src/command_processing.c ****     strcat(info_string, str);
 18447              		.loc 1 2425 0
 18448 014a 07F10C03 		add	r3, r7, #12
 18449 014e 1946     		mov	r1, r3
 18450 0150 7868     		ldr	r0, [r7, #4]
 18451 0152 FFF7FEFF 		bl	strcat
2426:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18452              		.loc 1 2426 0
 18453 0156 7868     		ldr	r0, [r7, #4]
 18454 0158 FFF7FEFF 		bl	strlen
 18455 015c 0346     		mov	r3, r0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 408


 18456 015e 1A46     		mov	r2, r3
 18457 0160 7B68     		ldr	r3, [r7, #4]
 18458 0162 1344     		add	r3, r3, r2
 18459 0164 354A     		ldr	r2, .L706+8
 18460 0166 1188     		ldrh	r1, [r2]	@ unaligned
 18461 0168 9278     		ldrb	r2, [r2, #2]
 18462 016a 1980     		strh	r1, [r3]	@ unaligned
 18463 016c 9A70     		strb	r2, [r3, #2]
2427:..\src/command_processing.c ****     
2428:..\src/command_processing.c ****     sprintf(str, "Average duration of a powered-on session (sec): %.4f", (float)(MEM_P->cnt.total_r
 18464              		.loc 1 2428 0
 18465 016e D7F8A430 		ldr	r3, [r7, #164]
 18466 0172 9A6D     		ldr	r2, [r3, #88]
 18467 0174 D7F8A430 		ldr	r3, [r7, #164]
 18468 0178 1B6E     		ldr	r3, [r3, #96]
 18469 017a B2FBF3F3 		udiv	r3, r2, r3
 18470 017e 1846     		mov	r0, r3
 18471 0180 FFF7FEFF 		bl	__aeabi_ui2f
 18472 0184 0346     		mov	r3, r0
 18473 0186 1846     		mov	r0, r3
 18474 0188 FFF7FEFF 		bl	__aeabi_f2d
 18475 018c 0346     		mov	r3, r0
 18476 018e 0C46     		mov	r4, r1
 18477 0190 07F10C00 		add	r0, r7, #12
 18478 0194 1A46     		mov	r2, r3
 18479 0196 2346     		mov	r3, r4
 18480 0198 2E49     		ldr	r1, .L706+32
 18481 019a FFF7FEFF 		bl	sprintf
2429:..\src/command_processing.c ****     strcat(info_string, str);
 18482              		.loc 1 2429 0
 18483 019e 07F10C03 		add	r3, r7, #12
 18484 01a2 1946     		mov	r1, r3
 18485 01a4 7868     		ldr	r0, [r7, #4]
 18486 01a6 FFF7FEFF 		bl	strcat
2430:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18487              		.loc 1 2430 0
 18488 01aa 7868     		ldr	r0, [r7, #4]
 18489 01ac FFF7FEFF 		bl	strlen
 18490 01b0 0346     		mov	r3, r0
 18491 01b2 1A46     		mov	r2, r3
 18492 01b4 7B68     		ldr	r3, [r7, #4]
 18493 01b6 1344     		add	r3, r3, r2
 18494 01b8 204A     		ldr	r2, .L706+8
 18495 01ba 1188     		ldrh	r1, [r2]	@ unaligned
 18496 01bc 9278     		ldrb	r2, [r2, #2]
 18497 01be 1980     		strh	r1, [r3]	@ unaligned
 18498 01c0 9A70     		strb	r2, [r3, #2]
2431:..\src/command_processing.c ****     
2432:..\src/command_processing.c ****     sprintf(str, "Frequency of motions: %.4f", (float)((MEM_P->cnt.emg_act_counter[0] + MEM_P->cnt.
 18499              		.loc 1 2432 0
 18500 01c2 D7F8A430 		ldr	r3, [r7, #164]
 18501 01c6 1A69     		ldr	r2, [r3, #16]
 18502 01c8 D7F8A430 		ldr	r3, [r7, #164]
 18503 01cc 5B69     		ldr	r3, [r3, #20]
 18504 01ce 1344     		add	r3, r3, r2
 18505 01d0 1846     		mov	r0, r3
 18506 01d2 FFF7FEFF 		bl	__aeabi_ui2f
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 409


 18507 01d6 0446     		mov	r4, r0
 18508 01d8 D7F8A430 		ldr	r3, [r7, #164]
 18509 01dc 9B6D     		ldr	r3, [r3, #88]
 18510 01de 1846     		mov	r0, r3
 18511 01e0 FFF7FEFF 		bl	__aeabi_ui2f
 18512 01e4 0346     		mov	r3, r0
 18513 01e6 1946     		mov	r1, r3
 18514 01e8 2046     		mov	r0, r4
 18515 01ea FFF7FEFF 		bl	__aeabi_fdiv
 18516 01ee 0346     		mov	r3, r0
 18517 01f0 1846     		mov	r0, r3
 18518 01f2 FFF7FEFF 		bl	__aeabi_f2d
 18519 01f6 0346     		mov	r3, r0
 18520 01f8 0C46     		mov	r4, r1
 18521 01fa 07F10C00 		add	r0, r7, #12
 18522 01fe 1A46     		mov	r2, r3
 18523 0200 2346     		mov	r3, r4
 18524 0202 1549     		ldr	r1, .L706+36
 18525 0204 FFF7FEFF 		bl	sprintf
2433:..\src/command_processing.c ****     strcat(info_string, str);
 18526              		.loc 1 2433 0
 18527 0208 07F10C03 		add	r3, r7, #12
 18528 020c 1946     		mov	r1, r3
 18529 020e 7868     		ldr	r0, [r7, #4]
 18530 0210 FFF7FEFF 		bl	strcat
2434:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18531              		.loc 1 2434 0
 18532 0214 7868     		ldr	r0, [r7, #4]
 18533 0216 FFF7FEFF 		bl	strlen
 18534 021a 0346     		mov	r3, r0
 18535 021c 1A46     		mov	r2, r3
 18536 021e 7B68     		ldr	r3, [r7, #4]
 18537 0220 1344     		add	r3, r3, r2
 18538 0222 064A     		ldr	r2, .L706+8
 18539 0224 1188     		ldrh	r1, [r2]	@ unaligned
 18540 0226 9278     		ldrb	r2, [r2, #2]
 18541 0228 1980     		strh	r1, [r3]	@ unaligned
 18542 022a 9A70     		strb	r2, [r3, #2]
2435:..\src/command_processing.c **** 
2436:..\src/command_processing.c **** }
 18543              		.loc 1 2436 0
 18544 022c 00BF     		nop
 18545 022e A837     		adds	r7, r7, #168
 18546              		.cfi_def_cfa_offset 16
 18547 0230 BD46     		mov	sp, r7
 18548              		.cfi_def_cfa_register 13
 18549              		@ sp needed
 18550 0232 B0BD     		pop	{r4, r5, r7, pc}
 18551              	.L707:
 18552              		.align	2
 18553              	.L706:
 18554 0234 00000000 		.word	g_mem
 18555 0238 341C0000 		.word	.LC269
 18556 023c 34110000 		.word	.LC154
 18557 0240 501C0000 		.word	.LC270
 18558 0244 641C0000 		.word	.LC271
 18559 0248 881C0000 		.word	.LC272
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 410


 18560 024c B41C0000 		.word	.LC273
 18561 0250 E81C0000 		.word	.LC274
 18562 0254 041D0000 		.word	.LC275
 18563 0258 3C1D0000 		.word	.LC276
 18564              		.cfi_endproc
 18565              	.LFE74:
 18566              		.size	prepare_R01_info, .-prepare_R01_info
 18567              		.section	.rodata
 18568 1d57 00       		.align	2
 18569              	.LC277:
 18570 1d58 4669726D 		.ascii	"Firmware version: %s\015\012\000"
 18570      77617265 
 18570      20766572 
 18570      73696F6E 
 18570      3A202573 
 18571 1d6f 00       		.align	2
 18572              	.LC278:
 18573 1d70 506F7369 		.ascii	"Position PID: \000"
 18573      74696F6E 
 18573      20504944 
 18573      3A2000
 18574 1d7f 00       		.align	2
 18575              	.LC279:
 18576 1d80 43757272 		.ascii	"Current PID: \000"
 18576      656E7420 
 18576      5049443A 
 18576      2000
 18577 1d8e 0000     		.align	2
 18578              	.LC280:
 18579 1d90 5265736F 		.ascii	"Resolutions: \000"
 18579      6C757469 
 18579      6F6E733A 
 18579      2000
 18580 1d9e 0000     		.align	2
 18581              	.LC281:
 18582 1da0 4F666673 		.ascii	"Offsets: \000"
 18582      6574733A 
 18582      2000
 18583 1daa 0000     		.align	2
 18584              	.LC282:
 18585 1dac 4D756C74 		.ascii	"Multipliers: \000"
 18585      69706C69 
 18585      6572733A 
 18585      2000
 18586 1dba 0000     		.align	2
 18587              	.LC283:
 18588 1dbc 43757272 		.ascii	"Current lookup table p[0] - p[5]: %f, %f, %f, %f, %"
 18588      656E7420 
 18588      6C6F6F6B 
 18588      75702074 
 18588      61626C65 
 18589 1def 662C2025 		.ascii	"f, %f\015\012\000"
 18589      660D0A00 
 18590 1df7 00       		.align	2
 18591              	.LC284:
 18592 1df8 506F7369 		.ascii	"Position limit active: %d\015\012\000"
 18592      74696F6E 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 411


 18592      206C696D 
 18592      69742061 
 18592      63746976 
 18593              		.align	2
 18594              	.LC285:
 18595 1e14 506F7369 		.ascii	"Position limits: inf -> %ld, sup -> %ld\015\012\000"
 18595      74696F6E 
 18595      206C696D 
 18595      6974733A 
 18595      20696E66 
 18596 1e3e 0000     		.align	2
 18597              	.LC286:
 18598 1e40 52657374 		.ascii	"Rest time delay (ms): %d\000"
 18598      2074696D 
 18598      65206465 
 18598      6C617920 
 18598      286D7329 
 18599 1e59 000000   		.align	2
 18600              	.LC287:
 18601 1e5c 52657374 		.ascii	"Rest velocity closure (ticks/sec): %d\000"
 18601      2076656C 
 18601      6F636974 
 18601      7920636C 
 18601      6F737572 
 18602 1e82 0000     		.align	2
 18603              	.LC288:
 18604 1e84 52657374 		.ascii	"Rest position: %d\000"
 18604      20706F73 
 18604      6974696F 
 18604      6E3A2025 
 18604      6400
 18605              		.section	.text.prepare_SD_param_info,"ax",%progbits
 18606              		.align	2
 18607              		.global	prepare_SD_param_info
 18608              		.thumb
 18609              		.thumb_func
 18610              		.type	prepare_SD_param_info, %function
 18611              	prepare_SD_param_info:
 18612              	.LFB75:
2437:..\src/command_processing.c **** 
2438:..\src/command_processing.c **** //==============================================================================
2439:..\src/command_processing.c **** //                                                    PREPARE SD CARD PARAM INFO
2440:..\src/command_processing.c **** //==============================================================================
2441:..\src/command_processing.c **** 
2442:..\src/command_processing.c **** void prepare_SD_param_info(char *info_string)
2443:..\src/command_processing.c **** {
 18613              		.loc 1 2443 0
 18614              		.cfi_startproc
 18615              		@ args = 0, pretend = 0, frame = 152
 18616              		@ frame_needed = 1, uses_anonymous_args = 0
 18617 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 18618              		.cfi_def_cfa_offset 36
 18619              		.cfi_offset 4, -36
 18620              		.cfi_offset 5, -32
 18621              		.cfi_offset 6, -28
 18622              		.cfi_offset 7, -24
 18623              		.cfi_offset 8, -20
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 412


 18624              		.cfi_offset 9, -16
 18625              		.cfi_offset 10, -12
 18626              		.cfi_offset 11, -8
 18627              		.cfi_offset 14, -4
 18628 0004 B1B0     		sub	sp, sp, #196
 18629              		.cfi_def_cfa_offset 232
 18630 0006 0AAF     		add	r7, sp, #40
 18631              		.cfi_def_cfa 7, 192
 18632 0008 7861     		str	r0, [r7, #20]
2444:..\src/command_processing.c ****     char str[100];  
2445:..\src/command_processing.c ****     int i;
2446:..\src/command_processing.c ****            
2447:..\src/command_processing.c ****     // NOTE: use g_mem structure instead of c_mem because when changing parameters c_mem struct is 
2448:..\src/command_processing.c ****     
2449:..\src/command_processing.c ****     struct st_eeprom* MEM_P = &g_mem;    
 18633              		.loc 1 2449 0
 18634 000a AC4B     		ldr	r3, .L773
 18635 000c C7F88C30 		str	r3, [r7, #140]
2450:..\src/command_processing.c ****         
2451:..\src/command_processing.c ****     sprintf(info_string, "Firmware version: %s\r\n", VERSION);
 18636              		.loc 1 2451 0
 18637 0010 AB4A     		ldr	r2, .L773+4
 18638 0012 AC49     		ldr	r1, .L773+8
 18639 0014 7869     		ldr	r0, [r7, #20]
 18640 0016 FFF7FEFF 		bl	sprintf
2452:..\src/command_processing.c ****     
2453:..\src/command_processing.c ****     sprintf(str, "ID: %d\r\n", (int) MEM_P->dev.id);
 18641              		.loc 1 2453 0
 18642 001a D7F88C30 		ldr	r3, [r7, #140]
 18643 001e 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 18644 0022 1A46     		mov	r2, r3
 18645 0024 07F11C03 		add	r3, r7, #28
 18646 0028 A749     		ldr	r1, .L773+12
 18647 002a 1846     		mov	r0, r3
 18648 002c FFF7FEFF 		bl	sprintf
2454:..\src/command_processing.c ****     strcat(info_string, str);
 18649              		.loc 1 2454 0
 18650 0030 07F11C03 		add	r3, r7, #28
 18651 0034 1946     		mov	r1, r3
 18652 0036 7869     		ldr	r0, [r7, #20]
 18653 0038 FFF7FEFF 		bl	strcat
2455:..\src/command_processing.c ****     switch(MEM_P->dev.right_left){
 18654              		.loc 1 2455 0
 18655 003c D7F88C30 		ldr	r3, [r7, #140]
 18656 0040 93F8A730 		ldrb	r3, [r3, #167]	@ zero_extendqisi2
 18657 0044 002B     		cmp	r3, #0
 18658 0046 02D0     		beq	.L710
 18659 0048 012B     		cmp	r3, #1
 18660 004a 15D0     		beq	.L711
 18661 004c 26E0     		b	.L709
 18662              	.L710:
2456:..\src/command_processing.c ****         case RIGHT_HAND:
2457:..\src/command_processing.c ****             strcat(info_string, "Hand side: RIGHT\r\n");
 18663              		.loc 1 2457 0
 18664 004e 7869     		ldr	r0, [r7, #20]
 18665 0050 FFF7FEFF 		bl	strlen
 18666 0054 0346     		mov	r3, r0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 413


 18667 0056 1A46     		mov	r2, r3
 18668 0058 7B69     		ldr	r3, [r7, #20]
 18669 005a 1344     		add	r3, r3, r2
 18670 005c 9B4A     		ldr	r2, .L773+16
 18671 005e 1D46     		mov	r5, r3
 18672 0060 1446     		mov	r4, r2
 18673 0062 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 18674 0064 2860     		str	r0, [r5]	@ unaligned
 18675 0066 6960     		str	r1, [r5, #4]	@ unaligned
 18676 0068 AA60     		str	r2, [r5, #8]	@ unaligned
 18677 006a EB60     		str	r3, [r5, #12]	@ unaligned
 18678 006c 2388     		ldrh	r3, [r4]	@ unaligned
 18679 006e A278     		ldrb	r2, [r4, #2]
 18680 0070 2B82     		strh	r3, [r5, #16]	@ unaligned
 18681 0072 1346     		mov	r3, r2
 18682 0074 AB74     		strb	r3, [r5, #18]
2458:..\src/command_processing.c ****             break;
 18683              		.loc 1 2458 0
 18684 0076 11E0     		b	.L709
 18685              	.L711:
2459:..\src/command_processing.c ****         case LEFT_HAND:
2460:..\src/command_processing.c ****             strcat(info_string, "Hand side: LEFT\r\n");
 18686              		.loc 1 2460 0
 18687 0078 7869     		ldr	r0, [r7, #20]
 18688 007a FFF7FEFF 		bl	strlen
 18689 007e 0346     		mov	r3, r0
 18690 0080 1A46     		mov	r2, r3
 18691 0082 7B69     		ldr	r3, [r7, #20]
 18692 0084 1344     		add	r3, r3, r2
 18693 0086 924A     		ldr	r2, .L773+20
 18694 0088 1D46     		mov	r5, r3
 18695 008a 1446     		mov	r4, r2
 18696 008c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 18697 008e 2860     		str	r0, [r5]	@ unaligned
 18698 0090 6960     		str	r1, [r5, #4]	@ unaligned
 18699 0092 AA60     		str	r2, [r5, #8]	@ unaligned
 18700 0094 EB60     		str	r3, [r5, #12]	@ unaligned
 18701 0096 2388     		ldrh	r3, [r4]	@ unaligned
 18702 0098 2B82     		strh	r3, [r5, #16]	@ unaligned
2461:..\src/command_processing.c ****             break;
 18703              		.loc 1 2461 0
 18704 009a 00BF     		nop
 18705              	.L709:
2462:..\src/command_processing.c ****     }
2463:..\src/command_processing.c **** 
2464:..\src/command_processing.c ****     sprintf(str, "Date of HW maintenance: %02d/%02d/20%02d\r\n", (int)MEM_P->dev.hw_maint_date[0], 
 18706              		.loc 1 2464 0
 18707 009c D7F88C30 		ldr	r3, [r7, #140]
 18708 00a0 93F8A130 		ldrb	r3, [r3, #161]	@ zero_extendqisi2
 18709 00a4 1A46     		mov	r2, r3
 18710 00a6 D7F88C30 		ldr	r3, [r7, #140]
 18711 00aa 93F8A230 		ldrb	r3, [r3, #162]	@ zero_extendqisi2
 18712 00ae 1946     		mov	r1, r3
 18713 00b0 D7F88C30 		ldr	r3, [r7, #140]
 18714 00b4 93F8A330 		ldrb	r3, [r3, #163]	@ zero_extendqisi2
 18715 00b8 07F11C00 		add	r0, r7, #28
 18716 00bc 0093     		str	r3, [sp]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 414


 18717 00be 0B46     		mov	r3, r1
 18718 00c0 8449     		ldr	r1, .L773+24
 18719 00c2 FFF7FEFF 		bl	sprintf
2465:..\src/command_processing.c ****     strcat(info_string, str);
 18720              		.loc 1 2465 0
 18721 00c6 07F11C03 		add	r3, r7, #28
 18722 00ca 1946     		mov	r1, r3
 18723 00cc 7869     		ldr	r0, [r7, #20]
 18724 00ce FFF7FEFF 		bl	strcat
2466:..\src/command_processing.c ****     
2467:..\src/command_processing.c ****     sprintf(str, "Date of usage stats period begin: %02d/%02d/20%02d\r\n", (int)MEM_P->dev.stats_pe
 18725              		.loc 1 2467 0
 18726 00d2 D7F88C30 		ldr	r3, [r7, #140]
 18727 00d6 93F8A430 		ldrb	r3, [r3, #164]	@ zero_extendqisi2
 18728 00da 1A46     		mov	r2, r3
 18729 00dc D7F88C30 		ldr	r3, [r7, #140]
 18730 00e0 93F8A530 		ldrb	r3, [r3, #165]	@ zero_extendqisi2
 18731 00e4 1946     		mov	r1, r3
 18732 00e6 D7F88C30 		ldr	r3, [r7, #140]
 18733 00ea 93F8A630 		ldrb	r3, [r3, #166]	@ zero_extendqisi2
 18734 00ee 07F11C00 		add	r0, r7, #28
 18735 00f2 0093     		str	r3, [sp]
 18736 00f4 0B46     		mov	r3, r1
 18737 00f6 7849     		ldr	r1, .L773+28
 18738 00f8 FFF7FEFF 		bl	sprintf
2468:..\src/command_processing.c ****     strcat(info_string, str);
 18739              		.loc 1 2468 0
 18740 00fc 07F11C03 		add	r3, r7, #28
 18741 0100 1946     		mov	r1, r3
 18742 0102 7869     		ldr	r0, [r7, #20]
 18743 0104 FFF7FEFF 		bl	strcat
 18744              	.LBB27:
2469:..\src/command_processing.c ****     
2470:..\src/command_processing.c **** 	for (uint8 k = 0; k <= MEM_P->dev.use_2nd_motor_flag; k++) {
 18745              		.loc 1 2470 0
 18746 0108 0023     		movs	r3, #0
 18747 010a 87F89330 		strb	r3, [r7, #147]
 18748 010e 00F05EBE 		b	.L712
 18749              	.L756:
 18750              	.LBB28:
2471:..\src/command_processing.c ****             
2472:..\src/command_processing.c **** 	    uint8 MOTOR_IDX = k;
 18751              		.loc 1 2472 0
 18752 0112 97F89330 		ldrb	r3, [r7, #147]
 18753 0116 87F88B30 		strb	r3, [r7, #139]
2473:..\src/command_processing.c ****         struct st_motor* MOT = &(MEM_P->motor[MOTOR_IDX]);      // Default motor
 18754              		.loc 1 2473 0
 18755 011a 97F88B20 		ldrb	r2, [r7, #139]	@ zero_extendqisi2
 18756 011e 1346     		mov	r3, r2
 18757 0120 DB00     		lsls	r3, r3, #3
 18758 0122 9B1A     		subs	r3, r3, r2
 18759 0124 1B01     		lsls	r3, r3, #4
 18760 0126 B033     		adds	r3, r3, #176
 18761 0128 D7F88C20 		ldr	r2, [r7, #140]
 18762 012c 1344     		add	r3, r3, r2
 18763 012e C7F88430 		str	r3, [r7, #132]
2474:..\src/command_processing.c ****         uint8 ENC_L = MOT->encoder_line;             // Associated encoder line
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 415


 18764              		.loc 1 2474 0
 18765 0132 D7F88430 		ldr	r3, [r7, #132]
 18766 0136 93F86030 		ldrb	r3, [r3, #96]
 18767 013a 87F88330 		strb	r3, [r7, #131]
2475:..\src/command_processing.c ****               
2476:..\src/command_processing.c ****         sprintf(str, "MOTOR %d INFO\r\n", MOTOR_IDX+1);
 18768              		.loc 1 2476 0
 18769 013e 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 18770 0142 5A1C     		adds	r2, r3, #1
 18771 0144 07F11C03 		add	r3, r7, #28
 18772 0148 6449     		ldr	r1, .L773+32
 18773 014a 1846     		mov	r0, r3
 18774 014c FFF7FEFF 		bl	sprintf
2477:..\src/command_processing.c ****         strcat(info_string, str);
 18775              		.loc 1 2477 0
 18776 0150 07F11C03 		add	r3, r7, #28
 18777 0154 1946     		mov	r1, r3
 18778 0156 7869     		ldr	r0, [r7, #20]
 18779 0158 FFF7FEFF 		bl	strcat
2478:..\src/command_processing.c ****                     
2479:..\src/command_processing.c ****         strcat(info_string, "PWM rescaling activation: ");
 18780              		.loc 1 2479 0
 18781 015c 7869     		ldr	r0, [r7, #20]
 18782 015e FFF7FEFF 		bl	strlen
 18783 0162 0346     		mov	r3, r0
 18784 0164 1A46     		mov	r2, r3
 18785 0166 7B69     		ldr	r3, [r7, #20]
 18786 0168 1344     		add	r3, r3, r2
 18787 016a 5D4A     		ldr	r2, .L773+36
 18788 016c 1D46     		mov	r5, r3
 18789 016e 1446     		mov	r4, r2
 18790 0170 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 18791 0172 2860     		str	r0, [r5]	@ unaligned
 18792 0174 6960     		str	r1, [r5, #4]	@ unaligned
 18793 0176 AA60     		str	r2, [r5, #8]	@ unaligned
 18794 0178 EB60     		str	r3, [r5, #12]	@ unaligned
 18795 017a 03CC     		ldmia	r4!, {r0, r1}
 18796 017c 2861     		str	r0, [r5, #16]	@ unaligned
 18797 017e 6961     		str	r1, [r5, #20]	@ unaligned
 18798 0180 2388     		ldrh	r3, [r4]	@ unaligned
 18799 0182 A278     		ldrb	r2, [r4, #2]
 18800 0184 2B83     		strh	r3, [r5, #24]	@ unaligned
 18801 0186 1346     		mov	r3, r2
 18802 0188 AB76     		strb	r3, [r5, #26]
2480:..\src/command_processing.c ****         if(MOT->activate_pwm_rescaling == MAXON_12V)
 18803              		.loc 1 2480 0
 18804 018a D7F88430 		ldr	r3, [r7, #132]
 18805 018e 93F83130 		ldrb	r3, [r3, #49]	@ zero_extendqisi2
 18806 0192 012B     		cmp	r3, #1
 18807 0194 0CD1     		bne	.L713
2481:..\src/command_processing.c ****             strcat(info_string, "YES\r\n");
 18808              		.loc 1 2481 0
 18809 0196 7869     		ldr	r0, [r7, #20]
 18810 0198 FFF7FEFF 		bl	strlen
 18811 019c 0346     		mov	r3, r0
 18812 019e 1A46     		mov	r2, r3
 18813 01a0 7B69     		ldr	r3, [r7, #20]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 416


 18814 01a2 1344     		add	r3, r3, r2
 18815 01a4 4F4A     		ldr	r2, .L773+40
 18816 01a6 1068     		ldr	r0, [r2]	@ unaligned
 18817 01a8 1860     		str	r0, [r3]	@ unaligned
 18818 01aa 9288     		ldrh	r2, [r2, #4]	@ unaligned
 18819 01ac 9A80     		strh	r2, [r3, #4]	@ unaligned
 18820 01ae 0BE0     		b	.L714
 18821              	.L713:
2482:..\src/command_processing.c ****         else
2483:..\src/command_processing.c ****             strcat(info_string, "NO\r\n");
 18822              		.loc 1 2483 0
 18823 01b0 7869     		ldr	r0, [r7, #20]
 18824 01b2 FFF7FEFF 		bl	strlen
 18825 01b6 0346     		mov	r3, r0
 18826 01b8 1A46     		mov	r2, r3
 18827 01ba 7B69     		ldr	r3, [r7, #20]
 18828 01bc 1344     		add	r3, r3, r2
 18829 01be 4A4A     		ldr	r2, .L773+44
 18830 01c0 1068     		ldr	r0, [r2]	@ unaligned
 18831 01c2 1860     		str	r0, [r3]	@ unaligned
 18832 01c4 1279     		ldrb	r2, [r2, #4]
 18833 01c6 1A71     		strb	r2, [r3, #4]
 18834              	.L714:
2484:..\src/command_processing.c ****         
2485:..\src/command_processing.c ****         sprintf(str, "PWM Limit: %d\r\n", (int) dev_pwm_limit[MOTOR_IDX]);
 18835              		.loc 1 2485 0
 18836 01c8 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 18837 01cc 474A     		ldr	r2, .L773+48
 18838 01ce 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 18839 01d2 1A46     		mov	r2, r3
 18840 01d4 07F11C03 		add	r3, r7, #28
 18841 01d8 4549     		ldr	r1, .L773+52
 18842 01da 1846     		mov	r0, r3
 18843 01dc FFF7FEFF 		bl	sprintf
2486:..\src/command_processing.c ****         strcat(info_string, str);
 18844              		.loc 1 2486 0
 18845 01e0 07F11C03 		add	r3, r7, #28
 18846 01e4 1946     		mov	r1, r3
 18847 01e6 7869     		ldr	r0, [r7, #20]
 18848 01e8 FFF7FEFF 		bl	strcat
2487:..\src/command_processing.c **** 
2488:..\src/command_processing.c ****         strcat(info_string, "Position PID: ");
 18849              		.loc 1 2488 0
 18850 01ec 7869     		ldr	r0, [r7, #20]
 18851 01ee FFF7FEFF 		bl	strlen
 18852 01f2 0346     		mov	r3, r0
 18853 01f4 1A46     		mov	r2, r3
 18854 01f6 7B69     		ldr	r3, [r7, #20]
 18855 01f8 1344     		add	r3, r3, r2
 18856 01fa 3E4A     		ldr	r2, .L773+56
 18857 01fc 1C46     		mov	r4, r3
 18858 01fe 1346     		mov	r3, r2
 18859 0200 07CB     		ldmia	r3!, {r0, r1, r2}
 18860 0202 2060     		str	r0, [r4]	@ unaligned
 18861 0204 6160     		str	r1, [r4, #4]	@ unaligned
 18862 0206 A260     		str	r2, [r4, #8]	@ unaligned
 18863 0208 1A88     		ldrh	r2, [r3]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 417


 18864 020a 9B78     		ldrb	r3, [r3, #2]
 18865 020c A281     		strh	r2, [r4, #12]	@ unaligned
 18866 020e A373     		strb	r3, [r4, #14]
2489:..\src/command_processing.c ****         if(MOT->control_mode != CURR_AND_POS_CONTROL) {
 18867              		.loc 1 2489 0
 18868 0210 D7F88430 		ldr	r3, [r7, #132]
 18869 0214 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 18870 0218 032B     		cmp	r3, #3
 18871 021a 75D0     		beq	.L715
2490:..\src/command_processing.c ****             sprintf(str, "P -> %f  ", ((double) MOT->k_p / 65536));
 18872              		.loc 1 2490 0
 18873 021c D7F88430 		ldr	r3, [r7, #132]
 18874 0220 1B68     		ldr	r3, [r3]
 18875 0222 1846     		mov	r0, r3
 18876 0224 FFF7FEFF 		bl	__aeabi_i2d
 18877 0228 4FF00002 		mov	r2, #0
 18878 022c 324B     		ldr	r3, .L773+60
 18879 022e FFF7FEFF 		bl	__aeabi_ddiv
 18880 0232 0346     		mov	r3, r0
 18881 0234 0C46     		mov	r4, r1
 18882 0236 07F11C00 		add	r0, r7, #28
 18883 023a 1A46     		mov	r2, r3
 18884 023c 2346     		mov	r3, r4
 18885 023e 2F49     		ldr	r1, .L773+64
 18886 0240 FFF7FEFF 		bl	sprintf
2491:..\src/command_processing.c ****             strcat(info_string, str);
 18887              		.loc 1 2491 0
 18888 0244 07F11C03 		add	r3, r7, #28
 18889 0248 1946     		mov	r1, r3
 18890 024a 7869     		ldr	r0, [r7, #20]
 18891 024c FFF7FEFF 		bl	strcat
2492:..\src/command_processing.c ****             sprintf(str, "I -> %f  ", ((double) MOT->k_i / 65536));
 18892              		.loc 1 2492 0
 18893 0250 D7F88430 		ldr	r3, [r7, #132]
 18894 0254 5B68     		ldr	r3, [r3, #4]
 18895 0256 1846     		mov	r0, r3
 18896 0258 FFF7FEFF 		bl	__aeabi_i2d
 18897 025c 4FF00002 		mov	r2, #0
 18898 0260 254B     		ldr	r3, .L773+60
 18899 0262 FFF7FEFF 		bl	__aeabi_ddiv
 18900 0266 0346     		mov	r3, r0
 18901 0268 0C46     		mov	r4, r1
 18902 026a 07F11C00 		add	r0, r7, #28
 18903 026e 1A46     		mov	r2, r3
 18904 0270 2346     		mov	r3, r4
 18905 0272 2349     		ldr	r1, .L773+68
 18906 0274 FFF7FEFF 		bl	sprintf
2493:..\src/command_processing.c ****             strcat(info_string, str);
 18907              		.loc 1 2493 0
 18908 0278 07F11C03 		add	r3, r7, #28
 18909 027c 1946     		mov	r1, r3
 18910 027e 7869     		ldr	r0, [r7, #20]
 18911 0280 FFF7FEFF 		bl	strcat
2494:..\src/command_processing.c ****             sprintf(str, "D -> %f\r\n", ((double) MOT->k_d / 65536));
 18912              		.loc 1 2494 0
 18913 0284 D7F88430 		ldr	r3, [r7, #132]
 18914 0288 9B68     		ldr	r3, [r3, #8]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 418


 18915 028a 1846     		mov	r0, r3
 18916 028c FFF7FEFF 		bl	__aeabi_i2d
 18917 0290 4FF00002 		mov	r2, #0
 18918 0294 184B     		ldr	r3, .L773+60
 18919 0296 FFF7FEFF 		bl	__aeabi_ddiv
 18920 029a 0346     		mov	r3, r0
 18921 029c 0C46     		mov	r4, r1
 18922 029e 07F11C00 		add	r0, r7, #28
 18923 02a2 1A46     		mov	r2, r3
 18924 02a4 2346     		mov	r3, r4
 18925 02a6 1749     		ldr	r1, .L773+72
 18926 02a8 FFF7FEFF 		bl	sprintf
2495:..\src/command_processing.c ****             strcat(info_string, str);
 18927              		.loc 1 2495 0
 18928 02ac 07F11C03 		add	r3, r7, #28
 18929 02b0 1946     		mov	r1, r3
 18930 02b2 7869     		ldr	r0, [r7, #20]
 18931 02b4 FFF7FEFF 		bl	strcat
 18932 02b8 74E0     		b	.L716
 18933              	.L774:
 18934 02ba 00BF     		.align	2
 18935              	.L773:
 18936 02bc 00000000 		.word	g_mem
 18937 02c0 4C110000 		.word	.LC156
 18938 02c4 581D0000 		.word	.LC277
 18939 02c8 A0110000 		.word	.LC159
 18940 02cc 50120000 		.word	.LC165
 18941 02d0 64120000 		.word	.LC166
 18942 02d4 741A0000 		.word	.LC257
 18943 02d8 A01A0000 		.word	.LC258
 18944 02dc AC120000 		.word	.LC170
 18945 02e0 1C130000 		.word	.LC179
 18946 02e4 0C130000 		.word	.LC177
 18947 02e8 14130000 		.word	.LC178
 18948 02ec 00000000 		.word	dev_pwm_limit
 18949 02f0 44130000 		.word	.LC182
 18950 02f4 701D0000 		.word	.LC278
 18951 02f8 0000F040 		.word	1089470464
 18952 02fc 5C140000 		.word	.LC194
 18953 0300 68140000 		.word	.LC195
 18954 0304 74140000 		.word	.LC196
 18955              	.L715:
2496:..\src/command_processing.c ****         }
2497:..\src/command_processing.c ****         else { 
2498:..\src/command_processing.c ****             sprintf(str, "P -> %f  ", ((double) MOT->k_p_dl / 65536));
 18956              		.loc 1 2498 0
 18957 0308 D7F88430 		ldr	r3, [r7, #132]
 18958 030c 9B69     		ldr	r3, [r3, #24]
 18959 030e 1846     		mov	r0, r3
 18960 0310 FFF7FEFF 		bl	__aeabi_i2d
 18961 0314 4FF00002 		mov	r2, #0
 18962 0318 CC4B     		ldr	r3, .L775
 18963 031a FFF7FEFF 		bl	__aeabi_ddiv
 18964 031e 0346     		mov	r3, r0
 18965 0320 0C46     		mov	r4, r1
 18966 0322 07F11C00 		add	r0, r7, #28
 18967 0326 1A46     		mov	r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 419


 18968 0328 2346     		mov	r3, r4
 18969 032a C949     		ldr	r1, .L775+4
 18970 032c FFF7FEFF 		bl	sprintf
2499:..\src/command_processing.c ****             strcat(info_string, str);
 18971              		.loc 1 2499 0
 18972 0330 07F11C03 		add	r3, r7, #28
 18973 0334 1946     		mov	r1, r3
 18974 0336 7869     		ldr	r0, [r7, #20]
 18975 0338 FFF7FEFF 		bl	strcat
2500:..\src/command_processing.c ****             sprintf(str, "I -> %f  ", ((double) MOT->k_i_dl / 65536));
 18976              		.loc 1 2500 0
 18977 033c D7F88430 		ldr	r3, [r7, #132]
 18978 0340 DB69     		ldr	r3, [r3, #28]
 18979 0342 1846     		mov	r0, r3
 18980 0344 FFF7FEFF 		bl	__aeabi_i2d
 18981 0348 4FF00002 		mov	r2, #0
 18982 034c BF4B     		ldr	r3, .L775
 18983 034e FFF7FEFF 		bl	__aeabi_ddiv
 18984 0352 0346     		mov	r3, r0
 18985 0354 0C46     		mov	r4, r1
 18986 0356 07F11C00 		add	r0, r7, #28
 18987 035a 1A46     		mov	r2, r3
 18988 035c 2346     		mov	r3, r4
 18989 035e BD49     		ldr	r1, .L775+8
 18990 0360 FFF7FEFF 		bl	sprintf
2501:..\src/command_processing.c ****             strcat(info_string, str);
 18991              		.loc 1 2501 0
 18992 0364 07F11C03 		add	r3, r7, #28
 18993 0368 1946     		mov	r1, r3
 18994 036a 7869     		ldr	r0, [r7, #20]
 18995 036c FFF7FEFF 		bl	strcat
2502:..\src/command_processing.c ****             sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_dl / 65536));
 18996              		.loc 1 2502 0
 18997 0370 D7F88430 		ldr	r3, [r7, #132]
 18998 0374 1B6A     		ldr	r3, [r3, #32]
 18999 0376 1846     		mov	r0, r3
 19000 0378 FFF7FEFF 		bl	__aeabi_i2d
 19001 037c 4FF00002 		mov	r2, #0
 19002 0380 B24B     		ldr	r3, .L775
 19003 0382 FFF7FEFF 		bl	__aeabi_ddiv
 19004 0386 0346     		mov	r3, r0
 19005 0388 0C46     		mov	r4, r1
 19006 038a 07F11C00 		add	r0, r7, #28
 19007 038e 1A46     		mov	r2, r3
 19008 0390 2346     		mov	r3, r4
 19009 0392 B149     		ldr	r1, .L775+12
 19010 0394 FFF7FEFF 		bl	sprintf
2503:..\src/command_processing.c ****             strcat(info_string, str);
 19011              		.loc 1 2503 0
 19012 0398 07F11C03 		add	r3, r7, #28
 19013 039c 1946     		mov	r1, r3
 19014 039e 7869     		ldr	r0, [r7, #20]
 19015 03a0 FFF7FEFF 		bl	strcat
 19016              	.L716:
2504:..\src/command_processing.c ****         }
2505:..\src/command_processing.c **** 
2506:..\src/command_processing.c ****         strcat(info_string, "Current PID: ");
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 420


 19017              		.loc 1 2506 0
 19018 03a4 7869     		ldr	r0, [r7, #20]
 19019 03a6 FFF7FEFF 		bl	strlen
 19020 03aa 0346     		mov	r3, r0
 19021 03ac 1A46     		mov	r2, r3
 19022 03ae 7B69     		ldr	r3, [r7, #20]
 19023 03b0 1344     		add	r3, r3, r2
 19024 03b2 AA4A     		ldr	r2, .L775+16
 19025 03b4 1C46     		mov	r4, r3
 19026 03b6 1346     		mov	r3, r2
 19027 03b8 07CB     		ldmia	r3!, {r0, r1, r2}
 19028 03ba 2060     		str	r0, [r4]	@ unaligned
 19029 03bc 6160     		str	r1, [r4, #4]	@ unaligned
 19030 03be A260     		str	r2, [r4, #8]	@ unaligned
 19031 03c0 1B88     		ldrh	r3, [r3]	@ unaligned
 19032 03c2 A381     		strh	r3, [r4, #12]	@ unaligned
2507:..\src/command_processing.c ****         if(MOT->control_mode != CURR_AND_POS_CONTROL) {
 19033              		.loc 1 2507 0
 19034 03c4 D7F88430 		ldr	r3, [r7, #132]
 19035 03c8 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 19036 03cc 032B     		cmp	r3, #3
 19037 03ce 4ED0     		beq	.L717
2508:..\src/command_processing.c ****             sprintf(str, "P -> %f  ", ((double) MOT->k_p_c / 65536));
 19038              		.loc 1 2508 0
 19039 03d0 D7F88430 		ldr	r3, [r7, #132]
 19040 03d4 DB68     		ldr	r3, [r3, #12]
 19041 03d6 1846     		mov	r0, r3
 19042 03d8 FFF7FEFF 		bl	__aeabi_i2d
 19043 03dc 4FF00002 		mov	r2, #0
 19044 03e0 9A4B     		ldr	r3, .L775
 19045 03e2 FFF7FEFF 		bl	__aeabi_ddiv
 19046 03e6 0346     		mov	r3, r0
 19047 03e8 0C46     		mov	r4, r1
 19048 03ea 07F11C00 		add	r0, r7, #28
 19049 03ee 1A46     		mov	r2, r3
 19050 03f0 2346     		mov	r3, r4
 19051 03f2 9749     		ldr	r1, .L775+4
 19052 03f4 FFF7FEFF 		bl	sprintf
2509:..\src/command_processing.c ****             strcat(info_string, str);
 19053              		.loc 1 2509 0
 19054 03f8 07F11C03 		add	r3, r7, #28
 19055 03fc 1946     		mov	r1, r3
 19056 03fe 7869     		ldr	r0, [r7, #20]
 19057 0400 FFF7FEFF 		bl	strcat
2510:..\src/command_processing.c ****             sprintf(str, "I -> %f  ", ((double) MOT->k_i_c / 65536));
 19058              		.loc 1 2510 0
 19059 0404 D7F88430 		ldr	r3, [r7, #132]
 19060 0408 1B69     		ldr	r3, [r3, #16]
 19061 040a 1846     		mov	r0, r3
 19062 040c FFF7FEFF 		bl	__aeabi_i2d
 19063 0410 4FF00002 		mov	r2, #0
 19064 0414 8D4B     		ldr	r3, .L775
 19065 0416 FFF7FEFF 		bl	__aeabi_ddiv
 19066 041a 0346     		mov	r3, r0
 19067 041c 0C46     		mov	r4, r1
 19068 041e 07F11C00 		add	r0, r7, #28
 19069 0422 1A46     		mov	r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 421


 19070 0424 2346     		mov	r3, r4
 19071 0426 8B49     		ldr	r1, .L775+8
 19072 0428 FFF7FEFF 		bl	sprintf
2511:..\src/command_processing.c ****             strcat(info_string, str);
 19073              		.loc 1 2511 0
 19074 042c 07F11C03 		add	r3, r7, #28
 19075 0430 1946     		mov	r1, r3
 19076 0432 7869     		ldr	r0, [r7, #20]
 19077 0434 FFF7FEFF 		bl	strcat
2512:..\src/command_processing.c ****             sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_c / 65536));
 19078              		.loc 1 2512 0
 19079 0438 D7F88430 		ldr	r3, [r7, #132]
 19080 043c 5B69     		ldr	r3, [r3, #20]
 19081 043e 1846     		mov	r0, r3
 19082 0440 FFF7FEFF 		bl	__aeabi_i2d
 19083 0444 4FF00002 		mov	r2, #0
 19084 0448 804B     		ldr	r3, .L775
 19085 044a FFF7FEFF 		bl	__aeabi_ddiv
 19086 044e 0346     		mov	r3, r0
 19087 0450 0C46     		mov	r4, r1
 19088 0452 07F11C00 		add	r0, r7, #28
 19089 0456 1A46     		mov	r2, r3
 19090 0458 2346     		mov	r3, r4
 19091 045a 7F49     		ldr	r1, .L775+12
 19092 045c FFF7FEFF 		bl	sprintf
2513:..\src/command_processing.c ****             strcat(info_string, str);
 19093              		.loc 1 2513 0
 19094 0460 07F11C03 		add	r3, r7, #28
 19095 0464 1946     		mov	r1, r3
 19096 0466 7869     		ldr	r0, [r7, #20]
 19097 0468 FFF7FEFF 		bl	strcat
 19098 046c 4DE0     		b	.L718
 19099              	.L717:
2514:..\src/command_processing.c **** 
2515:..\src/command_processing.c ****         }
2516:..\src/command_processing.c ****         else {
2517:..\src/command_processing.c ****             sprintf(str, "P -> %f  ", ((double) MOT->k_p_c_dl / 65536));
 19100              		.loc 1 2517 0
 19101 046e D7F88430 		ldr	r3, [r7, #132]
 19102 0472 5B6A     		ldr	r3, [r3, #36]
 19103 0474 1846     		mov	r0, r3
 19104 0476 FFF7FEFF 		bl	__aeabi_i2d
 19105 047a 4FF00002 		mov	r2, #0
 19106 047e 734B     		ldr	r3, .L775
 19107 0480 FFF7FEFF 		bl	__aeabi_ddiv
 19108 0484 0346     		mov	r3, r0
 19109 0486 0C46     		mov	r4, r1
 19110 0488 07F11C00 		add	r0, r7, #28
 19111 048c 1A46     		mov	r2, r3
 19112 048e 2346     		mov	r3, r4
 19113 0490 6F49     		ldr	r1, .L775+4
 19114 0492 FFF7FEFF 		bl	sprintf
2518:..\src/command_processing.c ****             strcat(info_string, str);
 19115              		.loc 1 2518 0
 19116 0496 07F11C03 		add	r3, r7, #28
 19117 049a 1946     		mov	r1, r3
 19118 049c 7869     		ldr	r0, [r7, #20]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 422


 19119 049e FFF7FEFF 		bl	strcat
2519:..\src/command_processing.c ****             sprintf(str, "I -> %f  ", ((double) MOT->k_i_c_dl / 65536));
 19120              		.loc 1 2519 0
 19121 04a2 D7F88430 		ldr	r3, [r7, #132]
 19122 04a6 9B6A     		ldr	r3, [r3, #40]
 19123 04a8 1846     		mov	r0, r3
 19124 04aa FFF7FEFF 		bl	__aeabi_i2d
 19125 04ae 4FF00002 		mov	r2, #0
 19126 04b2 664B     		ldr	r3, .L775
 19127 04b4 FFF7FEFF 		bl	__aeabi_ddiv
 19128 04b8 0346     		mov	r3, r0
 19129 04ba 0C46     		mov	r4, r1
 19130 04bc 07F11C00 		add	r0, r7, #28
 19131 04c0 1A46     		mov	r2, r3
 19132 04c2 2346     		mov	r3, r4
 19133 04c4 6349     		ldr	r1, .L775+8
 19134 04c6 FFF7FEFF 		bl	sprintf
2520:..\src/command_processing.c ****             strcat(info_string, str);
 19135              		.loc 1 2520 0
 19136 04ca 07F11C03 		add	r3, r7, #28
 19137 04ce 1946     		mov	r1, r3
 19138 04d0 7869     		ldr	r0, [r7, #20]
 19139 04d2 FFF7FEFF 		bl	strcat
2521:..\src/command_processing.c ****             sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_c_dl / 65536));
 19140              		.loc 1 2521 0
 19141 04d6 D7F88430 		ldr	r3, [r7, #132]
 19142 04da DB6A     		ldr	r3, [r3, #44]
 19143 04dc 1846     		mov	r0, r3
 19144 04de FFF7FEFF 		bl	__aeabi_i2d
 19145 04e2 4FF00002 		mov	r2, #0
 19146 04e6 594B     		ldr	r3, .L775
 19147 04e8 FFF7FEFF 		bl	__aeabi_ddiv
 19148 04ec 0346     		mov	r3, r0
 19149 04ee 0C46     		mov	r4, r1
 19150 04f0 07F11C00 		add	r0, r7, #28
 19151 04f4 1A46     		mov	r2, r3
 19152 04f6 2346     		mov	r3, r4
 19153 04f8 5749     		ldr	r1, .L775+12
 19154 04fa FFF7FEFF 		bl	sprintf
2522:..\src/command_processing.c ****             strcat(info_string, str);
 19155              		.loc 1 2522 0
 19156 04fe 07F11C03 		add	r3, r7, #28
 19157 0502 1946     		mov	r1, r3
 19158 0504 7869     		ldr	r0, [r7, #20]
 19159 0506 FFF7FEFF 		bl	strcat
 19160              	.L718:
2523:..\src/command_processing.c ****         }
2524:..\src/command_processing.c ****         if (MOT->activ == 0x01)
 19161              		.loc 1 2524 0
 19162 050a D7F88430 		ldr	r3, [r7, #132]
 19163 050e 93F83030 		ldrb	r3, [r3, #48]	@ zero_extendqisi2
 19164 0512 012B     		cmp	r3, #1
 19165 0514 14D1     		bne	.L719
2525:..\src/command_processing.c ****             strcat(info_string, "Startup activation: YES\r\n");
 19166              		.loc 1 2525 0
 19167 0516 7869     		ldr	r0, [r7, #20]
 19168 0518 FFF7FEFF 		bl	strlen
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 423


 19169 051c 0346     		mov	r3, r0
 19170 051e 1A46     		mov	r2, r3
 19171 0520 7B69     		ldr	r3, [r7, #20]
 19172 0522 1344     		add	r3, r3, r2
 19173 0524 4E4A     		ldr	r2, .L775+20
 19174 0526 1D46     		mov	r5, r3
 19175 0528 1446     		mov	r4, r2
 19176 052a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19177 052c 2860     		str	r0, [r5]	@ unaligned
 19178 052e 6960     		str	r1, [r5, #4]	@ unaligned
 19179 0530 AA60     		str	r2, [r5, #8]	@ unaligned
 19180 0532 EB60     		str	r3, [r5, #12]	@ unaligned
 19181 0534 03CC     		ldmia	r4!, {r0, r1}
 19182 0536 2861     		str	r0, [r5, #16]	@ unaligned
 19183 0538 6961     		str	r1, [r5, #20]	@ unaligned
 19184 053a 2388     		ldrh	r3, [r4]	@ unaligned
 19185 053c 2B83     		strh	r3, [r5, #24]	@ unaligned
 19186 053e 13E0     		b	.L720
 19187              	.L719:
2526:..\src/command_processing.c ****         else
2527:..\src/command_processing.c ****             strcat(info_string, "Startup activation: NO\r\n");
 19188              		.loc 1 2527 0
 19189 0540 7869     		ldr	r0, [r7, #20]
 19190 0542 FFF7FEFF 		bl	strlen
 19191 0546 0346     		mov	r3, r0
 19192 0548 1A46     		mov	r2, r3
 19193 054a 7B69     		ldr	r3, [r7, #20]
 19194 054c 1344     		add	r3, r3, r2
 19195 054e 454A     		ldr	r2, .L775+24
 19196 0550 1D46     		mov	r5, r3
 19197 0552 1446     		mov	r4, r2
 19198 0554 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19199 0556 2860     		str	r0, [r5]	@ unaligned
 19200 0558 6960     		str	r1, [r5, #4]	@ unaligned
 19201 055a AA60     		str	r2, [r5, #8]	@ unaligned
 19202 055c EB60     		str	r3, [r5, #12]	@ unaligned
 19203 055e 03CC     		ldmia	r4!, {r0, r1}
 19204 0560 2861     		str	r0, [r5, #16]	@ unaligned
 19205 0562 6961     		str	r1, [r5, #20]	@ unaligned
 19206 0564 2378     		ldrb	r3, [r4]
 19207 0566 2B76     		strb	r3, [r5, #24]
 19208              	.L720:
2528:..\src/command_processing.c **** 
2529:..\src/command_processing.c ****         switch(MOT->input_mode) {
 19209              		.loc 1 2529 0
 19210 0568 D7F88430 		ldr	r3, [r7, #132]
 19211 056c 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
 19212 0570 072B     		cmp	r3, #7
 19213 0572 00F2EA80 		bhi	.L721
 19214 0576 01A2     		adr	r2, .L723
 19215 0578 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 19216              		.p2align 2
 19217              	.L723:
 19218 057c 9D050000 		.word	.L722+1
 19219 0580 C1050000 		.word	.L724+1
 19220 0584 E9050000 		.word	.L725+1
 19221 0588 1B060000 		.word	.L726+1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 424


 19222 058c 79060000 		.word	.L727+1
 19223 0590 A7060000 		.word	.L728+1
 19224 0594 D7060000 		.word	.L729+1
 19225 0598 05070000 		.word	.L730+1
 19226              		.p2align 1
 19227              	.L722:
2530:..\src/command_processing.c ****             case INPUT_MODE_EXTERNAL:
2531:..\src/command_processing.c ****                 strcat(info_string, "Input mode: USB\r\n");
 19228              		.loc 1 2531 0
 19229 059c 7869     		ldr	r0, [r7, #20]
 19230 059e FFF7FEFF 		bl	strlen
 19231 05a2 0346     		mov	r3, r0
 19232 05a4 1A46     		mov	r2, r3
 19233 05a6 7B69     		ldr	r3, [r7, #20]
 19234 05a8 1344     		add	r3, r3, r2
 19235 05aa 2F4A     		ldr	r2, .L775+28
 19236 05ac 1D46     		mov	r5, r3
 19237 05ae 1446     		mov	r4, r2
 19238 05b0 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19239 05b2 2860     		str	r0, [r5]	@ unaligned
 19240 05b4 6960     		str	r1, [r5, #4]	@ unaligned
 19241 05b6 AA60     		str	r2, [r5, #8]	@ unaligned
 19242 05b8 EB60     		str	r3, [r5, #12]	@ unaligned
 19243 05ba 2388     		ldrh	r3, [r4]	@ unaligned
 19244 05bc 2B82     		strh	r3, [r5, #16]	@ unaligned
2532:..\src/command_processing.c ****                 break;
 19245              		.loc 1 2532 0
 19246 05be C4E0     		b	.L721
 19247              	.L724:
2533:..\src/command_processing.c ****             case INPUT_MODE_ENCODER3:
2534:..\src/command_processing.c ****                 strcat(info_string, "Input mode: Handle\r\n");
 19248              		.loc 1 2534 0
 19249 05c0 7869     		ldr	r0, [r7, #20]
 19250 05c2 FFF7FEFF 		bl	strlen
 19251 05c6 0346     		mov	r3, r0
 19252 05c8 1A46     		mov	r2, r3
 19253 05ca 7B69     		ldr	r3, [r7, #20]
 19254 05cc 1344     		add	r3, r3, r2
 19255 05ce 274A     		ldr	r2, .L775+32
 19256 05d0 1D46     		mov	r5, r3
 19257 05d2 1446     		mov	r4, r2
 19258 05d4 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19259 05d6 2860     		str	r0, [r5]	@ unaligned
 19260 05d8 6960     		str	r1, [r5, #4]	@ unaligned
 19261 05da AA60     		str	r2, [r5, #8]	@ unaligned
 19262 05dc EB60     		str	r3, [r5, #12]	@ unaligned
 19263 05de 2068     		ldr	r0, [r4]	@ unaligned
 19264 05e0 2861     		str	r0, [r5, #16]	@ unaligned
 19265 05e2 2379     		ldrb	r3, [r4, #4]
 19266 05e4 2B75     		strb	r3, [r5, #20]
2535:..\src/command_processing.c ****                 break;
 19267              		.loc 1 2535 0
 19268 05e6 B0E0     		b	.L721
 19269              	.L725:
2536:..\src/command_processing.c ****             case INPUT_MODE_EMG_PROPORTIONAL:
2537:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG proportional\r\n");
 19270              		.loc 1 2537 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 425


 19271 05e8 7869     		ldr	r0, [r7, #20]
 19272 05ea FFF7FEFF 		bl	strlen
 19273 05ee 0346     		mov	r3, r0
 19274 05f0 1A46     		mov	r2, r3
 19275 05f2 7B69     		ldr	r3, [r7, #20]
 19276 05f4 1344     		add	r3, r3, r2
 19277 05f6 1E4A     		ldr	r2, .L775+36
 19278 05f8 1D46     		mov	r5, r3
 19279 05fa 1446     		mov	r4, r2
 19280 05fc 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19281 05fe 2860     		str	r0, [r5]	@ unaligned
 19282 0600 6960     		str	r1, [r5, #4]	@ unaligned
 19283 0602 AA60     		str	r2, [r5, #8]	@ unaligned
 19284 0604 EB60     		str	r3, [r5, #12]	@ unaligned
 19285 0606 07CC     		ldmia	r4!, {r0, r1, r2}
 19286 0608 2861     		str	r0, [r5, #16]	@ unaligned
 19287 060a 6961     		str	r1, [r5, #20]	@ unaligned
 19288 060c AA61     		str	r2, [r5, #24]	@ unaligned
 19289 060e 2388     		ldrh	r3, [r4]	@ unaligned
 19290 0610 A278     		ldrb	r2, [r4, #2]
 19291 0612 AB83     		strh	r3, [r5, #28]	@ unaligned
 19292 0614 1346     		mov	r3, r2
 19293 0616 AB77     		strb	r3, [r5, #30]
2538:..\src/command_processing.c ****                 break;
 19294              		.loc 1 2538 0
 19295 0618 97E0     		b	.L721
 19296              	.L726:
2539:..\src/command_processing.c ****             case INPUT_MODE_EMG_INTEGRAL:
2540:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG integral\r\n");
 19297              		.loc 1 2540 0
 19298 061a 7869     		ldr	r0, [r7, #20]
 19299 061c FFF7FEFF 		bl	strlen
 19300 0620 0346     		mov	r3, r0
 19301 0622 1A46     		mov	r2, r3
 19302 0624 7B69     		ldr	r3, [r7, #20]
 19303 0626 1344     		add	r3, r3, r2
 19304 0628 124A     		ldr	r2, .L775+40
 19305 062a 1D46     		mov	r5, r3
 19306 062c 1446     		mov	r4, r2
 19307 062e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19308 0630 2860     		str	r0, [r5]	@ unaligned
 19309 0632 6960     		str	r1, [r5, #4]	@ unaligned
 19310 0634 AA60     		str	r2, [r5, #8]	@ unaligned
 19311 0636 EB60     		str	r3, [r5, #12]	@ unaligned
 19312 0638 03CC     		ldmia	r4!, {r0, r1}
 19313 063a 2861     		str	r0, [r5, #16]	@ unaligned
 19314 063c 6961     		str	r1, [r5, #20]	@ unaligned
 19315 063e 2388     		ldrh	r3, [r4]	@ unaligned
 19316 0640 A278     		ldrb	r2, [r4, #2]
 19317 0642 2B83     		strh	r3, [r5, #24]	@ unaligned
 19318 0644 1346     		mov	r3, r2
 19319 0646 AB76     		strb	r3, [r5, #26]
2541:..\src/command_processing.c ****                 break;
 19320              		.loc 1 2541 0
 19321 0648 7FE0     		b	.L721
 19322              	.L776:
 19323 064a 00BF     		.align	2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 426


 19324              	.L775:
 19325 064c 0000F040 		.word	1089470464
 19326 0650 5C140000 		.word	.LC194
 19327 0654 68140000 		.word	.LC195
 19328 0658 74140000 		.word	.LC196
 19329 065c 801D0000 		.word	.LC279
 19330 0660 9C140000 		.word	.LC198
 19331 0664 B8140000 		.word	.LC199
 19332 0668 D4140000 		.word	.LC200
 19333 066c E8140000 		.word	.LC201
 19334 0670 00150000 		.word	.LC202
 19335 0674 20150000 		.word	.LC203
 19336              	.L727:
2542:..\src/command_processing.c ****             case INPUT_MODE_EMG_FCFS:
2543:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG FCFS\r\n");
 19337              		.loc 1 2543 0
 19338 0678 7869     		ldr	r0, [r7, #20]
 19339 067a FFF7FEFF 		bl	strlen
 19340 067e 0346     		mov	r3, r0
 19341 0680 1A46     		mov	r2, r3
 19342 0682 7B69     		ldr	r3, [r7, #20]
 19343 0684 1344     		add	r3, r3, r2
 19344 0686 BA4A     		ldr	r2, .L777
 19345 0688 1C46     		mov	r4, r3
 19346 068a 1546     		mov	r5, r2
 19347 068c 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 19348 068e 2060     		str	r0, [r4]	@ unaligned
 19349 0690 6160     		str	r1, [r4, #4]	@ unaligned
 19350 0692 A260     		str	r2, [r4, #8]	@ unaligned
 19351 0694 E360     		str	r3, [r4, #12]	@ unaligned
 19352 0696 2868     		ldr	r0, [r5]	@ unaligned
 19353 0698 2061     		str	r0, [r4, #16]	@ unaligned
 19354 069a AB88     		ldrh	r3, [r5, #4]	@ unaligned
 19355 069c AA79     		ldrb	r2, [r5, #6]
 19356 069e A382     		strh	r3, [r4, #20]	@ unaligned
 19357 06a0 1346     		mov	r3, r2
 19358 06a2 A375     		strb	r3, [r4, #22]
2544:..\src/command_processing.c ****                 break;
 19359              		.loc 1 2544 0
 19360 06a4 51E0     		b	.L721
 19361              	.L728:
2545:..\src/command_processing.c ****             case INPUT_MODE_EMG_FCFS_ADV:
2546:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG FCFS ADV\r\n");
 19362              		.loc 1 2546 0
 19363 06a6 7869     		ldr	r0, [r7, #20]
 19364 06a8 FFF7FEFF 		bl	strlen
 19365 06ac 0346     		mov	r3, r0
 19366 06ae 1A46     		mov	r2, r3
 19367 06b0 7B69     		ldr	r3, [r7, #20]
 19368 06b2 1344     		add	r3, r3, r2
 19369 06b4 AF4A     		ldr	r2, .L777+4
 19370 06b6 1D46     		mov	r5, r3
 19371 06b8 1446     		mov	r4, r2
 19372 06ba 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19373 06bc 2860     		str	r0, [r5]	@ unaligned
 19374 06be 6960     		str	r1, [r5, #4]	@ unaligned
 19375 06c0 AA60     		str	r2, [r5, #8]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 427


 19376 06c2 EB60     		str	r3, [r5, #12]	@ unaligned
 19377 06c4 03CC     		ldmia	r4!, {r0, r1}
 19378 06c6 2861     		str	r0, [r5, #16]	@ unaligned
 19379 06c8 6961     		str	r1, [r5, #20]	@ unaligned
 19380 06ca 2388     		ldrh	r3, [r4]	@ unaligned
 19381 06cc A278     		ldrb	r2, [r4, #2]
 19382 06ce 2B83     		strh	r3, [r5, #24]	@ unaligned
 19383 06d0 1346     		mov	r3, r2
 19384 06d2 AB76     		strb	r3, [r5, #26]
2547:..\src/command_processing.c ****                 break;
 19385              		.loc 1 2547 0
 19386 06d4 39E0     		b	.L721
 19387              	.L729:
2548:..\src/command_processing.c ****             case INPUT_MODE_JOYSTICK:
2549:..\src/command_processing.c ****                 strcat(info_string, "Input mode: Joystick\r\n");
 19388              		.loc 1 2549 0
 19389 06d6 7869     		ldr	r0, [r7, #20]
 19390 06d8 FFF7FEFF 		bl	strlen
 19391 06dc 0346     		mov	r3, r0
 19392 06de 1A46     		mov	r2, r3
 19393 06e0 7B69     		ldr	r3, [r7, #20]
 19394 06e2 1344     		add	r3, r3, r2
 19395 06e4 A44A     		ldr	r2, .L777+8
 19396 06e6 1C46     		mov	r4, r3
 19397 06e8 1546     		mov	r5, r2
 19398 06ea 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 19399 06ec 2060     		str	r0, [r4]	@ unaligned
 19400 06ee 6160     		str	r1, [r4, #4]	@ unaligned
 19401 06f0 A260     		str	r2, [r4, #8]	@ unaligned
 19402 06f2 E360     		str	r3, [r4, #12]	@ unaligned
 19403 06f4 2868     		ldr	r0, [r5]	@ unaligned
 19404 06f6 2061     		str	r0, [r4, #16]	@ unaligned
 19405 06f8 AB88     		ldrh	r3, [r5, #4]	@ unaligned
 19406 06fa AA79     		ldrb	r2, [r5, #6]
 19407 06fc A382     		strh	r3, [r4, #20]	@ unaligned
 19408 06fe 1346     		mov	r3, r2
 19409 0700 A375     		strb	r3, [r4, #22]
2550:..\src/command_processing.c ****                 break;
 19410              		.loc 1 2550 0
 19411 0702 22E0     		b	.L721
 19412              	.L730:
2551:..\src/command_processing.c ****             case INPUT_MODE_EMG_PROPORTIONAL_NC:
2552:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG proportional Normally Closed\r\n");
 19413              		.loc 1 2552 0
 19414 0704 7869     		ldr	r0, [r7, #20]
 19415 0706 FFF7FEFF 		bl	strlen
 19416 070a 0346     		mov	r3, r0
 19417 070c 1A46     		mov	r2, r3
 19418 070e 7B69     		ldr	r3, [r7, #20]
 19419 0710 1344     		add	r3, r3, r2
 19420 0712 9A4A     		ldr	r2, .L777+12
 19421 0714 1546     		mov	r5, r2
 19422 0716 9E46     		mov	lr, r3
 19423 0718 05F1200C 		add	ip, r5, #32
 19424              	.L731:
 19425 071c 7446     		mov	r4, lr
 19426 071e 2E46     		mov	r6, r5
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 428


 19427 0720 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 19428 0722 2060     		str	r0, [r4]	@ unaligned
 19429 0724 6160     		str	r1, [r4, #4]	@ unaligned
 19430 0726 A260     		str	r2, [r4, #8]	@ unaligned
 19431 0728 E360     		str	r3, [r4, #12]	@ unaligned
 19432 072a 1035     		adds	r5, r5, #16
 19433 072c 0EF1100E 		add	lr, lr, #16
 19434 0730 6545     		cmp	r5, ip
 19435 0732 F3D1     		bne	.L731
 19436 0734 7446     		mov	r4, lr
 19437 0736 2B46     		mov	r3, r5
 19438 0738 07CB     		ldmia	r3!, {r0, r1, r2}
 19439 073a 2060     		str	r0, [r4]	@ unaligned
 19440 073c 6160     		str	r1, [r4, #4]	@ unaligned
 19441 073e A260     		str	r2, [r4, #8]	@ unaligned
 19442 0740 1A88     		ldrh	r2, [r3]	@ unaligned
 19443 0742 9B78     		ldrb	r3, [r3, #2]
 19444 0744 A281     		strh	r2, [r4, #12]	@ unaligned
 19445 0746 A373     		strb	r3, [r4, #14]
2553:..\src/command_processing.c ****                 break;
 19446              		.loc 1 2553 0
 19447 0748 00BF     		nop
 19448              	.L721:
2554:..\src/command_processing.c ****         }
2555:..\src/command_processing.c **** 
2556:..\src/command_processing.c ****         switch(MOT->control_mode) {
 19449              		.loc 1 2556 0
 19450 074a D7F88430 		ldr	r3, [r7, #132]
 19451 074e 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 19452 0752 032B     		cmp	r3, #3
 19453 0754 63D8     		bhi	.L771
 19454 0756 01A2     		adr	r2, .L734
 19455 0758 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 19456              		.p2align 2
 19457              	.L734:
 19458 075c 6D070000 		.word	.L733+1
 19459 0760 97070000 		.word	.L735+1
 19460 0764 BB070000 		.word	.L736+1
 19461 0768 E1070000 		.word	.L737+1
 19462              		.p2align 1
 19463              	.L733:
2557:..\src/command_processing.c ****             case CONTROL_ANGLE:
2558:..\src/command_processing.c ****                 strcat(info_string, "Control mode: Position\r\n");
 19464              		.loc 1 2558 0
 19465 076c 7869     		ldr	r0, [r7, #20]
 19466 076e FFF7FEFF 		bl	strlen
 19467 0772 0346     		mov	r3, r0
 19468 0774 1A46     		mov	r2, r3
 19469 0776 7B69     		ldr	r3, [r7, #20]
 19470 0778 1344     		add	r3, r3, r2
 19471 077a 814A     		ldr	r2, .L777+16
 19472 077c 1D46     		mov	r5, r3
 19473 077e 1446     		mov	r4, r2
 19474 0780 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19475 0782 2860     		str	r0, [r5]	@ unaligned
 19476 0784 6960     		str	r1, [r5, #4]	@ unaligned
 19477 0786 AA60     		str	r2, [r5, #8]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 429


 19478 0788 EB60     		str	r3, [r5, #12]	@ unaligned
 19479 078a 03CC     		ldmia	r4!, {r0, r1}
 19480 078c 2861     		str	r0, [r5, #16]	@ unaligned
 19481 078e 6961     		str	r1, [r5, #20]	@ unaligned
 19482 0790 2378     		ldrb	r3, [r4]
 19483 0792 2B76     		strb	r3, [r5, #24]
2559:..\src/command_processing.c ****                 break;
 19484              		.loc 1 2559 0
 19485 0794 44E0     		b	.L738
 19486              	.L735:
2560:..\src/command_processing.c ****             case CONTROL_PWM:
2561:..\src/command_processing.c ****                 strcat(info_string, "Control mode: PWM\r\n");
 19487              		.loc 1 2561 0
 19488 0796 7869     		ldr	r0, [r7, #20]
 19489 0798 FFF7FEFF 		bl	strlen
 19490 079c 0346     		mov	r3, r0
 19491 079e 1A46     		mov	r2, r3
 19492 07a0 7B69     		ldr	r3, [r7, #20]
 19493 07a2 1344     		add	r3, r3, r2
 19494 07a4 774A     		ldr	r2, .L777+20
 19495 07a6 1D46     		mov	r5, r3
 19496 07a8 1446     		mov	r4, r2
 19497 07aa 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19498 07ac 2860     		str	r0, [r5]	@ unaligned
 19499 07ae 6960     		str	r1, [r5, #4]	@ unaligned
 19500 07b0 AA60     		str	r2, [r5, #8]	@ unaligned
 19501 07b2 EB60     		str	r3, [r5, #12]	@ unaligned
 19502 07b4 2068     		ldr	r0, [r4]	@ unaligned
 19503 07b6 2861     		str	r0, [r5, #16]	@ unaligned
2562:..\src/command_processing.c ****                 break;
 19504              		.loc 1 2562 0
 19505 07b8 32E0     		b	.L738
 19506              	.L736:
2563:..\src/command_processing.c ****             case CONTROL_CURRENT:
2564:..\src/command_processing.c ****                 strcat(info_string, "Control mode: Current\r\n");
 19507              		.loc 1 2564 0
 19508 07ba 7869     		ldr	r0, [r7, #20]
 19509 07bc FFF7FEFF 		bl	strlen
 19510 07c0 0346     		mov	r3, r0
 19511 07c2 1A46     		mov	r2, r3
 19512 07c4 7B69     		ldr	r3, [r7, #20]
 19513 07c6 1344     		add	r3, r3, r2
 19514 07c8 6F4A     		ldr	r2, .L777+24
 19515 07ca 1D46     		mov	r5, r3
 19516 07cc 1446     		mov	r4, r2
 19517 07ce 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19518 07d0 2860     		str	r0, [r5]	@ unaligned
 19519 07d2 6960     		str	r1, [r5, #4]	@ unaligned
 19520 07d4 AA60     		str	r2, [r5, #8]	@ unaligned
 19521 07d6 EB60     		str	r3, [r5, #12]	@ unaligned
 19522 07d8 03CC     		ldmia	r4!, {r0, r1}
 19523 07da 2861     		str	r0, [r5, #16]	@ unaligned
 19524 07dc 6961     		str	r1, [r5, #20]	@ unaligned
2565:..\src/command_processing.c ****                 break;
 19525              		.loc 1 2565 0
 19526 07de 1FE0     		b	.L738
 19527              	.L737:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 430


2566:..\src/command_processing.c ****             case CURR_AND_POS_CONTROL:
2567:..\src/command_processing.c ****                 strcat(info_string, "Control mode: Position and Current\r\n");
 19528              		.loc 1 2567 0
 19529 07e0 7869     		ldr	r0, [r7, #20]
 19530 07e2 FFF7FEFF 		bl	strlen
 19531 07e6 0346     		mov	r3, r0
 19532 07e8 1A46     		mov	r2, r3
 19533 07ea 7B69     		ldr	r3, [r7, #20]
 19534 07ec 1344     		add	r3, r3, r2
 19535 07ee 674A     		ldr	r2, .L777+28
 19536 07f0 1446     		mov	r4, r2
 19537 07f2 9E46     		mov	lr, r3
 19538 07f4 04F1200C 		add	ip, r4, #32
 19539              	.L739:
 19540 07f8 7546     		mov	r5, lr
 19541 07fa 2646     		mov	r6, r4
 19542 07fc 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 19543 07fe 2860     		str	r0, [r5]	@ unaligned
 19544 0800 6960     		str	r1, [r5, #4]	@ unaligned
 19545 0802 AA60     		str	r2, [r5, #8]	@ unaligned
 19546 0804 EB60     		str	r3, [r5, #12]	@ unaligned
 19547 0806 1034     		adds	r4, r4, #16
 19548 0808 0EF1100E 		add	lr, lr, #16
 19549 080c 6445     		cmp	r4, ip
 19550 080e F3D1     		bne	.L739
 19551 0810 7346     		mov	r3, lr
 19552 0812 2246     		mov	r2, r4
 19553 0814 1068     		ldr	r0, [r2]	@ unaligned
 19554 0816 1860     		str	r0, [r3]	@ unaligned
 19555 0818 1279     		ldrb	r2, [r2, #4]
 19556 081a 1A71     		strb	r2, [r3, #4]
2568:..\src/command_processing.c ****                 break;
 19557              		.loc 1 2568 0
 19558 081c 00E0     		b	.L738
 19559              	.L771:
2569:..\src/command_processing.c ****             default:
2570:..\src/command_processing.c ****                 break;
 19560              		.loc 1 2570 0
 19561 081e 00BF     		nop
 19562              	.L738:
2571:..\src/command_processing.c ****         }
2572:..\src/command_processing.c **** 
2573:..\src/command_processing.c ****         if (MEM_P->enc[ENC_L].double_encoder_on_off)
 19563              		.loc 1 2573 0
 19564 0820 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 19565 0824 D7F88C10 		ldr	r1, [r7, #140]
 19566 0828 1346     		mov	r3, r2
 19567 082a 5B00     		lsls	r3, r3, #1
 19568 082c 1344     		add	r3, r3, r2
 19569 082e 1B01     		lsls	r3, r3, #4
 19570 0830 0B44     		add	r3, r3, r1
 19571 0832 03F5D873 		add	r3, r3, #432
 19572 0836 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19573 0838 002B     		cmp	r3, #0
 19574 083a 1CD0     		beq	.L740
2574:..\src/command_processing.c ****             strcat(info_string, "Absolute encoder position: YES\r\n");
 19575              		.loc 1 2574 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 431


 19576 083c 7869     		ldr	r0, [r7, #20]
 19577 083e FFF7FEFF 		bl	strlen
 19578 0842 0346     		mov	r3, r0
 19579 0844 1A46     		mov	r2, r3
 19580 0846 7B69     		ldr	r3, [r7, #20]
 19581 0848 1344     		add	r3, r3, r2
 19582 084a 514A     		ldr	r2, .L777+32
 19583 084c 1446     		mov	r4, r2
 19584 084e 9E46     		mov	lr, r3
 19585 0850 04F1200C 		add	ip, r4, #32
 19586              	.L741:
 19587 0854 7546     		mov	r5, lr
 19588 0856 2646     		mov	r6, r4
 19589 0858 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 19590 085a 2860     		str	r0, [r5]	@ unaligned
 19591 085c 6960     		str	r1, [r5, #4]	@ unaligned
 19592 085e AA60     		str	r2, [r5, #8]	@ unaligned
 19593 0860 EB60     		str	r3, [r5, #12]	@ unaligned
 19594 0862 1034     		adds	r4, r4, #16
 19595 0864 0EF1100E 		add	lr, lr, #16
 19596 0868 6445     		cmp	r4, ip
 19597 086a F3D1     		bne	.L741
 19598 086c 7346     		mov	r3, lr
 19599 086e 2246     		mov	r2, r4
 19600 0870 1278     		ldrb	r2, [r2]
 19601 0872 1A70     		strb	r2, [r3]
 19602 0874 13E0     		b	.L742
 19603              	.L740:
2575:..\src/command_processing.c ****         else
2576:..\src/command_processing.c ****             strcat(info_string, "Absolute encoder position: NO\r\n");
 19604              		.loc 1 2576 0
 19605 0876 7869     		ldr	r0, [r7, #20]
 19606 0878 FFF7FEFF 		bl	strlen
 19607 087c 0346     		mov	r3, r0
 19608 087e 1A46     		mov	r2, r3
 19609 0880 7B69     		ldr	r3, [r7, #20]
 19610 0882 1344     		add	r3, r3, r2
 19611 0884 434A     		ldr	r2, .L777+36
 19612 0886 1C46     		mov	r4, r3
 19613 0888 1546     		mov	r5, r2
 19614 088a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 19615 088c 2060     		str	r0, [r4]	@ unaligned
 19616 088e 6160     		str	r1, [r4, #4]	@ unaligned
 19617 0890 A260     		str	r2, [r4, #8]	@ unaligned
 19618 0892 E360     		str	r3, [r4, #12]	@ unaligned
 19619 0894 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 19620 0896 2061     		str	r0, [r4, #16]	@ unaligned
 19621 0898 6161     		str	r1, [r4, #20]	@ unaligned
 19622 089a A261     		str	r2, [r4, #24]	@ unaligned
 19623 089c E361     		str	r3, [r4, #28]	@ unaligned
 19624              	.L742:
2577:..\src/command_processing.c **** 
2578:..\src/command_processing.c ****         strcat(info_string, "Resolutions: ");
 19625              		.loc 1 2578 0
 19626 089e 7869     		ldr	r0, [r7, #20]
 19627 08a0 FFF7FEFF 		bl	strlen
 19628 08a4 0346     		mov	r3, r0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 432


 19629 08a6 1A46     		mov	r2, r3
 19630 08a8 7B69     		ldr	r3, [r7, #20]
 19631 08aa 1344     		add	r3, r3, r2
 19632 08ac 3A4A     		ldr	r2, .L777+40
 19633 08ae 1C46     		mov	r4, r3
 19634 08b0 1346     		mov	r3, r2
 19635 08b2 07CB     		ldmia	r3!, {r0, r1, r2}
 19636 08b4 2060     		str	r0, [r4]	@ unaligned
 19637 08b6 6160     		str	r1, [r4, #4]	@ unaligned
 19638 08b8 A260     		str	r2, [r4, #8]	@ unaligned
 19639 08ba 1B88     		ldrh	r3, [r3]	@ unaligned
 19640 08bc A381     		strh	r3, [r4, #12]	@ unaligned
2579:..\src/command_processing.c ****         for (i = 0; i < NUM_OF_SENSORS; ++i) {
 19641              		.loc 1 2579 0
 19642 08be 0023     		movs	r3, #0
 19643 08c0 C7F89430 		str	r3, [r7, #148]
 19644 08c4 30E0     		b	.L743
 19645              	.L745:
2580:..\src/command_processing.c ****             sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 19646              		.loc 1 2580 0
 19647 08c6 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 19648 08ca D7F88C10 		ldr	r1, [r7, #140]
 19649 08ce 1346     		mov	r3, r2
 19650 08d0 5B00     		lsls	r3, r3, #1
 19651 08d2 1344     		add	r3, r3, r2
 19652 08d4 1B01     		lsls	r3, r3, #4
 19653 08d6 CA18     		adds	r2, r1, r3
 19654 08d8 D7F89430 		ldr	r3, [r7, #148]
 19655 08dc 1344     		add	r3, r3, r2
 19656 08de 03F29513 		addw	r3, r3, #405
 19657 08e2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19658 08e4 1A46     		mov	r2, r3
 19659 08e6 07F11C03 		add	r3, r7, #28
 19660 08ea 2C49     		ldr	r1, .L777+44
 19661 08ec 1846     		mov	r0, r3
 19662 08ee FFF7FEFF 		bl	sprintf
2581:..\src/command_processing.c ****             strcat(info_string, str);
 19663              		.loc 1 2581 0
 19664 08f2 07F11C03 		add	r3, r7, #28
 19665 08f6 1946     		mov	r1, r3
 19666 08f8 7869     		ldr	r0, [r7, #20]
 19667 08fa FFF7FEFF 		bl	strcat
2582:..\src/command_processing.c ****             if (i != NUM_OF_SENSORS-1){
 19668              		.loc 1 2582 0
 19669 08fe D7F89430 		ldr	r3, [r7, #148]
 19670 0902 022B     		cmp	r3, #2
 19671 0904 0BD0     		beq	.L744
2583:..\src/command_processing.c ****                 strcat(info_string, ", ");
 19672              		.loc 1 2583 0
 19673 0906 7869     		ldr	r0, [r7, #20]
 19674 0908 FFF7FEFF 		bl	strlen
 19675 090c 0346     		mov	r3, r0
 19676 090e 1A46     		mov	r2, r3
 19677 0910 7B69     		ldr	r3, [r7, #20]
 19678 0912 1344     		add	r3, r3, r2
 19679 0914 224A     		ldr	r2, .L777+48
 19680 0916 1188     		ldrh	r1, [r2]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 433


 19681 0918 9278     		ldrb	r2, [r2, #2]
 19682 091a 1980     		strh	r1, [r3]	@ unaligned
 19683 091c 9A70     		strb	r2, [r3, #2]
 19684              	.L744:
2579:..\src/command_processing.c ****             sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 19685              		.loc 1 2579 0 discriminator 2
 19686 091e D7F89430 		ldr	r3, [r7, #148]
 19687 0922 0133     		adds	r3, r3, #1
 19688 0924 C7F89430 		str	r3, [r7, #148]
 19689              	.L743:
2579:..\src/command_processing.c ****             sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 19690              		.loc 1 2579 0 is_stmt 0 discriminator 1
 19691 0928 D7F89430 		ldr	r3, [r7, #148]
 19692 092c 022B     		cmp	r3, #2
 19693 092e CADD     		ble	.L745
2584:..\src/command_processing.c ****             }                
2585:..\src/command_processing.c ****         }
2586:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 19694              		.loc 1 2586 0 is_stmt 1
 19695 0930 7869     		ldr	r0, [r7, #20]
 19696 0932 FFF7FEFF 		bl	strlen
 19697 0936 0346     		mov	r3, r0
 19698 0938 1A46     		mov	r2, r3
 19699 093a 7B69     		ldr	r3, [r7, #20]
 19700 093c 1344     		add	r3, r3, r2
 19701 093e 194A     		ldr	r2, .L777+52
 19702 0940 1188     		ldrh	r1, [r2]	@ unaligned
 19703 0942 9278     		ldrb	r2, [r2, #2]
 19704 0944 1980     		strh	r1, [r3]	@ unaligned
 19705 0946 9A70     		strb	r2, [r3, #2]
2587:..\src/command_processing.c **** 
2588:..\src/command_processing.c ****         strcat(info_string, "Offsets: ");
 19706              		.loc 1 2588 0
 19707 0948 7869     		ldr	r0, [r7, #20]
 19708 094a FFF7FEFF 		bl	strlen
 19709 094e 0346     		mov	r3, r0
 19710 0950 1A46     		mov	r2, r3
 19711 0952 7B69     		ldr	r3, [r7, #20]
 19712 0954 1344     		add	r3, r3, r2
 19713 0956 1449     		ldr	r1, .L777+56
 19714 0958 1A46     		mov	r2, r3
 19715 095a 0B46     		mov	r3, r1
 19716 095c 03CB     		ldmia	r3!, {r0, r1}
 19717 095e 1060     		str	r0, [r2]	@ unaligned
 19718 0960 5160     		str	r1, [r2, #4]	@ unaligned
 19719 0962 1B88     		ldrh	r3, [r3]	@ unaligned
 19720 0964 1381     		strh	r3, [r2, #8]	@ unaligned
2589:..\src/command_processing.c ****         for (i = 0; i < NUM_OF_SENSORS; ++i) {
 19721              		.loc 1 2589 0
 19722 0966 0023     		movs	r3, #0
 19723 0968 C7F89430 		str	r3, [r7, #148]
 19724 096c 5EE0     		b	.L746
 19725              	.L778:
 19726 096e 00BF     		.align	2
 19727              	.L777:
 19728 0970 3C150000 		.word	.LC204
 19729 0974 54150000 		.word	.LC205
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 434


 19730 0978 70150000 		.word	.LC206
 19731 097c 88150000 		.word	.LC207
 19732 0980 B8150000 		.word	.LC208
 19733 0984 D4150000 		.word	.LC209
 19734 0988 E8150000 		.word	.LC210
 19735 098c 00160000 		.word	.LC211
 19736 0990 28160000 		.word	.LC212
 19737 0994 4C160000 		.word	.LC213
 19738 0998 901D0000 		.word	.LC280
 19739 099c 7C130000 		.word	.LC185
 19740 09a0 80130000 		.word	.LC186
 19741 09a4 34110000 		.word	.LC154
 19742 09a8 A01D0000 		.word	.LC281
 19743              	.L748:
2590:..\src/command_processing.c ****             sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i]);
 19744              		.loc 1 2590 0
 19745 09ac 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 19746 09b0 D7F88C10 		ldr	r1, [r7, #140]
 19747 09b4 1346     		mov	r3, r2
 19748 09b6 5B00     		lsls	r3, r3, #1
 19749 09b8 1344     		add	r3, r3, r2
 19750 09ba 9B00     		lsls	r3, r3, #2
 19751 09bc D7F89420 		ldr	r2, [r7, #148]
 19752 09c0 1344     		add	r3, r3, r2
 19753 09c2 6633     		adds	r3, r3, #102
 19754 09c4 51F82310 		ldr	r1, [r1, r3, lsl #2]
 19755 09c8 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 19756 09cc D7F88C00 		ldr	r0, [r7, #140]
 19757 09d0 1346     		mov	r3, r2
 19758 09d2 5B00     		lsls	r3, r3, #1
 19759 09d4 1344     		add	r3, r3, r2
 19760 09d6 1B01     		lsls	r3, r3, #4
 19761 09d8 C218     		adds	r2, r0, r3
 19762 09da D7F89430 		ldr	r3, [r7, #148]
 19763 09de 1344     		add	r3, r3, r2
 19764 09e0 03F29513 		addw	r3, r3, #405
 19765 09e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19766 09e6 41FA03F2 		asr	r2, r1, r3
 19767 09ea 07F11C03 		add	r3, r7, #28
 19768 09ee CF49     		ldr	r1, .L779
 19769 09f0 1846     		mov	r0, r3
 19770 09f2 FFF7FEFF 		bl	sprintf
2591:..\src/command_processing.c ****             strcat(info_string, str);
 19771              		.loc 1 2591 0
 19772 09f6 07F11C03 		add	r3, r7, #28
 19773 09fa 1946     		mov	r1, r3
 19774 09fc 7869     		ldr	r0, [r7, #20]
 19775 09fe FFF7FEFF 		bl	strcat
2592:..\src/command_processing.c ****             if (i != NUM_OF_SENSORS-1){
 19776              		.loc 1 2592 0
 19777 0a02 D7F89430 		ldr	r3, [r7, #148]
 19778 0a06 022B     		cmp	r3, #2
 19779 0a08 0BD0     		beq	.L747
2593:..\src/command_processing.c ****                 strcat(info_string, ", ");
 19780              		.loc 1 2593 0
 19781 0a0a 7869     		ldr	r0, [r7, #20]
 19782 0a0c FFF7FEFF 		bl	strlen
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 435


 19783 0a10 0346     		mov	r3, r0
 19784 0a12 1A46     		mov	r2, r3
 19785 0a14 7B69     		ldr	r3, [r7, #20]
 19786 0a16 1344     		add	r3, r3, r2
 19787 0a18 C54A     		ldr	r2, .L779+4
 19788 0a1a 1188     		ldrh	r1, [r2]	@ unaligned
 19789 0a1c 9278     		ldrb	r2, [r2, #2]
 19790 0a1e 1980     		strh	r1, [r3]	@ unaligned
 19791 0a20 9A70     		strb	r2, [r3, #2]
 19792              	.L747:
2589:..\src/command_processing.c ****             sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i]);
 19793              		.loc 1 2589 0 discriminator 2
 19794 0a22 D7F89430 		ldr	r3, [r7, #148]
 19795 0a26 0133     		adds	r3, r3, #1
 19796 0a28 C7F89430 		str	r3, [r7, #148]
 19797              	.L746:
2589:..\src/command_processing.c ****             sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i]);
 19798              		.loc 1 2589 0 is_stmt 0 discriminator 1
 19799 0a2c D7F89430 		ldr	r3, [r7, #148]
 19800 0a30 022B     		cmp	r3, #2
 19801 0a32 BBDD     		ble	.L748
2594:..\src/command_processing.c ****             }
2595:..\src/command_processing.c ****         }
2596:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 19802              		.loc 1 2596 0 is_stmt 1
 19803 0a34 7869     		ldr	r0, [r7, #20]
 19804 0a36 FFF7FEFF 		bl	strlen
 19805 0a3a 0346     		mov	r3, r0
 19806 0a3c 1A46     		mov	r2, r3
 19807 0a3e 7B69     		ldr	r3, [r7, #20]
 19808 0a40 1344     		add	r3, r3, r2
 19809 0a42 BC4A     		ldr	r2, .L779+8
 19810 0a44 1188     		ldrh	r1, [r2]	@ unaligned
 19811 0a46 9278     		ldrb	r2, [r2, #2]
 19812 0a48 1980     		strh	r1, [r3]	@ unaligned
 19813 0a4a 9A70     		strb	r2, [r3, #2]
2597:..\src/command_processing.c ****             
2598:..\src/command_processing.c ****         strcat(info_string, "Multipliers: ");
 19814              		.loc 1 2598 0
 19815 0a4c 7869     		ldr	r0, [r7, #20]
 19816 0a4e FFF7FEFF 		bl	strlen
 19817 0a52 0346     		mov	r3, r0
 19818 0a54 1A46     		mov	r2, r3
 19819 0a56 7B69     		ldr	r3, [r7, #20]
 19820 0a58 1344     		add	r3, r3, r2
 19821 0a5a B74A     		ldr	r2, .L779+12
 19822 0a5c 1C46     		mov	r4, r3
 19823 0a5e 1346     		mov	r3, r2
 19824 0a60 07CB     		ldmia	r3!, {r0, r1, r2}
 19825 0a62 2060     		str	r0, [r4]	@ unaligned
 19826 0a64 6160     		str	r1, [r4, #4]	@ unaligned
 19827 0a66 A260     		str	r2, [r4, #8]	@ unaligned
 19828 0a68 1B88     		ldrh	r3, [r3]	@ unaligned
 19829 0a6a A381     		strh	r3, [r4, #12]	@ unaligned
2599:..\src/command_processing.c ****         for (i = 0; i < NUM_OF_SENSORS; ++i) {
 19830              		.loc 1 2599 0
 19831 0a6c 0023     		movs	r3, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 436


 19832 0a6e C7F89430 		str	r3, [r7, #148]
 19833 0a72 35E0     		b	.L749
 19834              	.L751:
2600:..\src/command_processing.c ****             sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 19835              		.loc 1 2600 0
 19836 0a74 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 19837 0a78 D7F88C10 		ldr	r1, [r7, #140]
 19838 0a7c 1346     		mov	r3, r2
 19839 0a7e 5B00     		lsls	r3, r3, #1
 19840 0a80 1344     		add	r3, r3, r2
 19841 0a82 9B00     		lsls	r3, r3, #2
 19842 0a84 D7F89420 		ldr	r2, [r7, #148]
 19843 0a88 1344     		add	r3, r3, r2
 19844 0a8a 6833     		adds	r3, r3, #104
 19845 0a8c 9B00     		lsls	r3, r3, #2
 19846 0a8e 0B44     		add	r3, r3, r1
 19847 0a90 5B68     		ldr	r3, [r3, #4]	@ float
 19848 0a92 1846     		mov	r0, r3
 19849 0a94 FFF7FEFF 		bl	__aeabi_f2d
 19850 0a98 0346     		mov	r3, r0
 19851 0a9a 0C46     		mov	r4, r1
 19852 0a9c 07F11C00 		add	r0, r7, #28
 19853 0aa0 1A46     		mov	r2, r3
 19854 0aa2 2346     		mov	r3, r4
 19855 0aa4 A549     		ldr	r1, .L779+16
 19856 0aa6 FFF7FEFF 		bl	sprintf
2601:..\src/command_processing.c ****             strcat(info_string, str);
 19857              		.loc 1 2601 0
 19858 0aaa 07F11C03 		add	r3, r7, #28
 19859 0aae 1946     		mov	r1, r3
 19860 0ab0 7869     		ldr	r0, [r7, #20]
 19861 0ab2 FFF7FEFF 		bl	strcat
2602:..\src/command_processing.c ****             if (i != NUM_OF_SENSORS-1){
 19862              		.loc 1 2602 0
 19863 0ab6 D7F89430 		ldr	r3, [r7, #148]
 19864 0aba 022B     		cmp	r3, #2
 19865 0abc 0BD0     		beq	.L750
2603:..\src/command_processing.c ****                 strcat(info_string, ", ");
 19866              		.loc 1 2603 0
 19867 0abe 7869     		ldr	r0, [r7, #20]
 19868 0ac0 FFF7FEFF 		bl	strlen
 19869 0ac4 0346     		mov	r3, r0
 19870 0ac6 1A46     		mov	r2, r3
 19871 0ac8 7B69     		ldr	r3, [r7, #20]
 19872 0aca 1344     		add	r3, r3, r2
 19873 0acc 984A     		ldr	r2, .L779+4
 19874 0ace 1188     		ldrh	r1, [r2]	@ unaligned
 19875 0ad0 9278     		ldrb	r2, [r2, #2]
 19876 0ad2 1980     		strh	r1, [r3]	@ unaligned
 19877 0ad4 9A70     		strb	r2, [r3, #2]
 19878              	.L750:
2599:..\src/command_processing.c ****             sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 19879              		.loc 1 2599 0 discriminator 2
 19880 0ad6 D7F89430 		ldr	r3, [r7, #148]
 19881 0ada 0133     		adds	r3, r3, #1
 19882 0adc C7F89430 		str	r3, [r7, #148]
 19883              	.L749:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 437


2599:..\src/command_processing.c ****             sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 19884              		.loc 1 2599 0 is_stmt 0 discriminator 1
 19885 0ae0 D7F89430 		ldr	r3, [r7, #148]
 19886 0ae4 022B     		cmp	r3, #2
 19887 0ae6 C5DD     		ble	.L751
2604:..\src/command_processing.c ****             }
2605:..\src/command_processing.c ****         }
2606:..\src/command_processing.c ****         strcat(info_string, "\r\n");       
 19888              		.loc 1 2606 0 is_stmt 1
 19889 0ae8 7869     		ldr	r0, [r7, #20]
 19890 0aea FFF7FEFF 		bl	strlen
 19891 0aee 0346     		mov	r3, r0
 19892 0af0 1A46     		mov	r2, r3
 19893 0af2 7B69     		ldr	r3, [r7, #20]
 19894 0af4 1344     		add	r3, r3, r2
 19895 0af6 8F4A     		ldr	r2, .L779+8
 19896 0af8 1188     		ldrh	r1, [r2]	@ unaligned
 19897 0afa 9278     		ldrb	r2, [r2, #2]
 19898 0afc 1980     		strh	r1, [r3]	@ unaligned
 19899 0afe 9A70     		strb	r2, [r3, #2]
2607:..\src/command_processing.c **** 
2608:..\src/command_processing.c **** 		sprintf(str, "Current lookup table p[0] - p[5]: %f, %f, %f, %f, %f, %f\r\n", MOT->curr_lookup[0],
 19900              		.loc 1 2608 0
 19901 0b00 D7F88430 		ldr	r3, [r7, #132]
 19902 0b04 5B6C     		ldr	r3, [r3, #68]	@ float
 19903 0b06 1846     		mov	r0, r3
 19904 0b08 FFF7FEFF 		bl	__aeabi_f2d
 19905 0b0c C7E90201 		strd	r0, [r7, #8]
 19906 0b10 D7F88430 		ldr	r3, [r7, #132]
 19907 0b14 9B6C     		ldr	r3, [r3, #72]	@ float
 19908 0b16 1846     		mov	r0, r3
 19909 0b18 FFF7FEFF 		bl	__aeabi_f2d
 19910 0b1c 0446     		mov	r4, r0
 19911 0b1e 0D46     		mov	r5, r1
 19912 0b20 D7F88430 		ldr	r3, [r7, #132]
 19913 0b24 DB6C     		ldr	r3, [r3, #76]	@ float
 19914 0b26 1846     		mov	r0, r3
 19915 0b28 FFF7FEFF 		bl	__aeabi_f2d
 19916 0b2c 8046     		mov	r8, r0
 19917 0b2e 8946     		mov	r9, r1
 19918 0b30 D7F88430 		ldr	r3, [r7, #132]
 19919 0b34 1B6D     		ldr	r3, [r3, #80]	@ float
 19920 0b36 1846     		mov	r0, r3
 19921 0b38 FFF7FEFF 		bl	__aeabi_f2d
 19922 0b3c 8246     		mov	r10, r0
 19923 0b3e 8B46     		mov	fp, r1
 19924 0b40 D7F88430 		ldr	r3, [r7, #132]
 19925 0b44 5B6D     		ldr	r3, [r3, #84]	@ float
 19926 0b46 1846     		mov	r0, r3
 19927 0b48 FFF7FEFF 		bl	__aeabi_f2d
 19928 0b4c C7E90001 		strd	r0, [r7]
 19929 0b50 D7F88430 		ldr	r3, [r7, #132]
 19930 0b54 9B6D     		ldr	r3, [r3, #88]	@ float
 19931 0b56 1846     		mov	r0, r3
 19932 0b58 FFF7FEFF 		bl	__aeabi_f2d
 19933 0b5c 0246     		mov	r2, r0
 19934 0b5e 0B46     		mov	r3, r1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 438


 19935 0b60 07F11C00 		add	r0, r7, #28
 19936 0b64 CDE90823 		strd	r2, [sp, #32]
 19937 0b68 D7E90012 		ldrd	r1, [r7]
 19938 0b6c CDE90612 		strd	r1, [sp, #24]
 19939 0b70 CDE904AB 		strd	r10, [sp, #16]
 19940 0b74 CDE90289 		strd	r8, [sp, #8]
 19941 0b78 CDE90045 		strd	r4, [sp]
 19942 0b7c D7E90223 		ldrd	r2, [r7, #8]
 19943 0b80 6F49     		ldr	r1, .L779+20
 19944 0b82 FFF7FEFF 		bl	sprintf
2609:..\src/command_processing.c **** 		strcat(info_string, str);
 19945              		.loc 1 2609 0
 19946 0b86 07F11C03 		add	r3, r7, #28
 19947 0b8a 1946     		mov	r1, r3
 19948 0b8c 7869     		ldr	r0, [r7, #20]
 19949 0b8e FFF7FEFF 		bl	strcat
2610:..\src/command_processing.c **** 
2611:..\src/command_processing.c **** 		sprintf(str, "Position limit active: %d\r\n", (int)MOT->pos_lim_flag);
 19950              		.loc 1 2611 0
 19951 0b92 D7F88430 		ldr	r3, [r7, #132]
 19952 0b96 93F83330 		ldrb	r3, [r3, #51]	@ zero_extendqisi2
 19953 0b9a 1A46     		mov	r2, r3
 19954 0b9c 07F11C03 		add	r3, r7, #28
 19955 0ba0 6849     		ldr	r1, .L779+24
 19956 0ba2 1846     		mov	r0, r3
 19957 0ba4 FFF7FEFF 		bl	sprintf
2612:..\src/command_processing.c **** 		strcat(info_string, str);
 19958              		.loc 1 2612 0
 19959 0ba8 07F11C03 		add	r3, r7, #28
 19960 0bac 1946     		mov	r1, r3
 19961 0bae 7869     		ldr	r0, [r7, #20]
 19962 0bb0 FFF7FEFF 		bl	strcat
2613:..\src/command_processing.c **** 
2614:..\src/command_processing.c **** 		sprintf(str, "Position limits: inf -> %ld, sup -> %ld\r\n", (int32)MOT->pos_lim_inf >> MEM_P->enc
 19963              		.loc 1 2614 0
 19964 0bb4 D7F88430 		ldr	r3, [r7, #132]
 19965 0bb8 596B     		ldr	r1, [r3, #52]
 19966 0bba 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 19967 0bbe D7F88C00 		ldr	r0, [r7, #140]
 19968 0bc2 1346     		mov	r3, r2
 19969 0bc4 5B00     		lsls	r3, r3, #1
 19970 0bc6 1344     		add	r3, r3, r2
 19971 0bc8 1B01     		lsls	r3, r3, #4
 19972 0bca 0344     		add	r3, r3, r0
 19973 0bcc 03F29513 		addw	r3, r3, #405
 19974 0bd0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19975 0bd2 41FA03F4 		asr	r4, r1, r3
 19976 0bd6 D7F88430 		ldr	r3, [r7, #132]
 19977 0bda 996B     		ldr	r1, [r3, #56]
 19978 0bdc 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 19979 0be0 D7F88C00 		ldr	r0, [r7, #140]
 19980 0be4 1346     		mov	r3, r2
 19981 0be6 5B00     		lsls	r3, r3, #1
 19982 0be8 1344     		add	r3, r3, r2
 19983 0bea 1B01     		lsls	r3, r3, #4
 19984 0bec 0344     		add	r3, r3, r0
 19985 0bee 03F29513 		addw	r3, r3, #405
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 439


 19986 0bf2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19987 0bf4 41FA03F3 		asr	r3, r1, r3
 19988 0bf8 07F11C00 		add	r0, r7, #28
 19989 0bfc 2246     		mov	r2, r4
 19990 0bfe 5249     		ldr	r1, .L779+28
 19991 0c00 FFF7FEFF 		bl	sprintf
2615:..\src/command_processing.c **** 		strcat(info_string, str);
 19992              		.loc 1 2615 0
 19993 0c04 07F11C03 		add	r3, r7, #28
 19994 0c08 1946     		mov	r1, r3
 19995 0c0a 7869     		ldr	r0, [r7, #20]
 19996 0c0c FFF7FEFF 		bl	strcat
2616:..\src/command_processing.c **** 
2617:..\src/command_processing.c **** 		sprintf(str, "Current limit: %d\r\n", (int)MOT->current_limit);
 19997              		.loc 1 2617 0
 19998 0c10 D7F88430 		ldr	r3, [r7, #132]
 19999 0c14 B3F95C30 		ldrsh	r3, [r3, #92]
 20000 0c18 1A46     		mov	r2, r3
 20001 0c1a 07F11C03 		add	r3, r7, #28
 20002 0c1e 4B49     		ldr	r1, .L779+32
 20003 0c20 1846     		mov	r0, r3
 20004 0c22 FFF7FEFF 		bl	sprintf
2618:..\src/command_processing.c **** 		strcat(info_string, str);
 20005              		.loc 1 2618 0
 20006 0c26 07F11C03 		add	r3, r7, #28
 20007 0c2a 1946     		mov	r1, r3
 20008 0c2c 7869     		ldr	r0, [r7, #20]
 20009 0c2e FFF7FEFF 		bl	strcat
2619:..\src/command_processing.c **** 
2620:..\src/command_processing.c **** 		if ((MOT->input_mode == INPUT_MODE_EMG_PROPORTIONAL) ||
 20010              		.loc 1 2620 0
 20011 0c32 D7F88430 		ldr	r3, [r7, #132]
 20012 0c36 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
 20013 0c3a 022B     		cmp	r3, #2
 20014 0c3c 18D0     		beq	.L752
2621:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_INTEGRAL) ||
 20015              		.loc 1 2621 0 discriminator 1
 20016 0c3e D7F88430 		ldr	r3, [r7, #132]
 20017 0c42 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
2620:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_INTEGRAL) ||
 20018              		.loc 1 2620 0 discriminator 1
 20019 0c46 032B     		cmp	r3, #3
 20020 0c48 12D0     		beq	.L752
2622:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_FCFS) ||
 20021              		.loc 1 2622 0
 20022 0c4a D7F88430 		ldr	r3, [r7, #132]
 20023 0c4e 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
2621:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_INTEGRAL) ||
 20024              		.loc 1 2621 0
 20025 0c52 042B     		cmp	r3, #4
 20026 0c54 0CD0     		beq	.L752
2623:..\src/command_processing.c ****             (MOT->input_mode == INPUT_MODE_EMG_FCFS_ADV) ||
 20027              		.loc 1 2623 0
 20028 0c56 D7F88430 		ldr	r3, [r7, #132]
 20029 0c5a 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
2622:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_FCFS) ||
 20030              		.loc 1 2622 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 440


 20031 0c5e 052B     		cmp	r3, #5
 20032 0c60 06D0     		beq	.L752
2624:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_PROPORTIONAL_NC)) {
 20033              		.loc 1 2624 0
 20034 0c62 D7F88430 		ldr	r3, [r7, #132]
 20035 0c66 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
2623:..\src/command_processing.c ****             (MOT->input_mode == INPUT_MODE_EMG_FCFS_ADV) ||
 20036              		.loc 1 2623 0
 20037 0c6a 072B     		cmp	r3, #7
 20038 0c6c 40F0AA80 		bne	.L753
 20039              	.L752:
2625:..\src/command_processing.c **** 			sprintf(str, "EMG thresholds [0 - 1024]: %u, %u", MEM_P->emg.emg_threshold[0], MEM_P->emg.emg_th
 20040              		.loc 1 2625 0
 20041 0c70 D7F88C30 		ldr	r3, [r7, #140]
 20042 0c74 B3F8F031 		ldrh	r3, [r3, #496]
 20043 0c78 1A46     		mov	r2, r3
 20044 0c7a D7F88C30 		ldr	r3, [r7, #140]
 20045 0c7e B3F8F231 		ldrh	r3, [r3, #498]
 20046 0c82 07F11C00 		add	r0, r7, #28
 20047 0c86 3249     		ldr	r1, .L779+36
 20048 0c88 FFF7FEFF 		bl	sprintf
2626:..\src/command_processing.c **** 			strcat(info_string, str);
 20049              		.loc 1 2626 0
 20050 0c8c 07F11C03 		add	r3, r7, #28
 20051 0c90 1946     		mov	r1, r3
 20052 0c92 7869     		ldr	r0, [r7, #20]
 20053 0c94 FFF7FEFF 		bl	strcat
2627:..\src/command_processing.c **** 			strcat(info_string, "\r\n");
 20054              		.loc 1 2627 0
 20055 0c98 7869     		ldr	r0, [r7, #20]
 20056 0c9a FFF7FEFF 		bl	strlen
 20057 0c9e 0346     		mov	r3, r0
 20058 0ca0 1A46     		mov	r2, r3
 20059 0ca2 7B69     		ldr	r3, [r7, #20]
 20060 0ca4 1344     		add	r3, r3, r2
 20061 0ca6 234A     		ldr	r2, .L779+8
 20062 0ca8 1188     		ldrh	r1, [r2]	@ unaligned
 20063 0caa 9278     		ldrb	r2, [r2, #2]
 20064 0cac 1980     		strh	r1, [r3]	@ unaligned
 20065 0cae 9A70     		strb	r2, [r3, #2]
2628:..\src/command_processing.c **** 
2629:..\src/command_processing.c **** 			sprintf(str, "EMG max values [0 - 4096]: %lu, %lu", MEM_P->emg.emg_max_value[0], MEM_P->emg.emg_
 20066              		.loc 1 2629 0
 20067 0cb0 D7F88C30 		ldr	r3, [r7, #140]
 20068 0cb4 D3F8F421 		ldr	r2, [r3, #500]
 20069 0cb8 D7F88C30 		ldr	r3, [r7, #140]
 20070 0cbc D3F8F831 		ldr	r3, [r3, #504]
 20071 0cc0 07F11C00 		add	r0, r7, #28
 20072 0cc4 2349     		ldr	r1, .L779+40
 20073 0cc6 FFF7FEFF 		bl	sprintf
2630:..\src/command_processing.c **** 			strcat(info_string, str);
 20074              		.loc 1 2630 0
 20075 0cca 07F11C03 		add	r3, r7, #28
 20076 0cce 1946     		mov	r1, r3
 20077 0cd0 7869     		ldr	r0, [r7, #20]
 20078 0cd2 FFF7FEFF 		bl	strcat
2631:..\src/command_processing.c **** 			strcat(info_string, "\r\n");
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 441


 20079              		.loc 1 2631 0
 20080 0cd6 7869     		ldr	r0, [r7, #20]
 20081 0cd8 FFF7FEFF 		bl	strlen
 20082 0cdc 0346     		mov	r3, r0
 20083 0cde 1A46     		mov	r2, r3
 20084 0ce0 7B69     		ldr	r3, [r7, #20]
 20085 0ce2 1344     		add	r3, r3, r2
 20086 0ce4 134A     		ldr	r2, .L779+8
 20087 0ce6 1188     		ldrh	r1, [r2]	@ unaligned
 20088 0ce8 9278     		ldrb	r2, [r2, #2]
 20089 0cea 1980     		strh	r1, [r3]	@ unaligned
 20090 0cec 9A70     		strb	r2, [r3, #2]
2632:..\src/command_processing.c **** 
2633:..\src/command_processing.c **** 			if (MEM_P->emg.emg_calibration_flag)
 20091              		.loc 1 2633 0
 20092 0cee D7F88C30 		ldr	r3, [r7, #140]
 20093 0cf2 93F8FE31 		ldrb	r3, [r3, #510]	@ zero_extendqisi2
 20094 0cf6 002B     		cmp	r3, #0
 20095 0cf8 30D0     		beq	.L754
2634:..\src/command_processing.c **** 				strcat(info_string, "Calibration enabled: YES\r\n");
 20096              		.loc 1 2634 0
 20097 0cfa 7869     		ldr	r0, [r7, #20]
 20098 0cfc FFF7FEFF 		bl	strlen
 20099 0d00 0346     		mov	r3, r0
 20100 0d02 1A46     		mov	r2, r3
 20101 0d04 7B69     		ldr	r3, [r7, #20]
 20102 0d06 1344     		add	r3, r3, r2
 20103 0d08 134A     		ldr	r2, .L779+44
 20104 0d0a 1D46     		mov	r5, r3
 20105 0d0c 1446     		mov	r4, r2
 20106 0d0e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 20107 0d10 2860     		str	r0, [r5]	@ unaligned
 20108 0d12 6960     		str	r1, [r5, #4]	@ unaligned
 20109 0d14 AA60     		str	r2, [r5, #8]	@ unaligned
 20110 0d16 EB60     		str	r3, [r5, #12]	@ unaligned
 20111 0d18 03CC     		ldmia	r4!, {r0, r1}
 20112 0d1a 2861     		str	r0, [r5, #16]	@ unaligned
 20113 0d1c 6961     		str	r1, [r5, #20]	@ unaligned
 20114 0d1e 2388     		ldrh	r3, [r4]	@ unaligned
 20115 0d20 A278     		ldrb	r2, [r4, #2]
 20116 0d22 2B83     		strh	r3, [r5, #24]	@ unaligned
 20117 0d24 1346     		mov	r3, r2
 20118 0d26 AB76     		strb	r3, [r5, #26]
 20119 0d28 2CE0     		b	.L755
 20120              	.L780:
 20121 0d2a 00BF     		.align	2
 20122              	.L779:
 20123 0d2c 28170000 		.word	.LC221
 20124 0d30 80130000 		.word	.LC186
 20125 0d34 34110000 		.word	.LC154
 20126 0d38 AC1D0000 		.word	.LC282
 20127 0d3c 48170000 		.word	.LC223
 20128 0d40 BC1D0000 		.word	.LC283
 20129 0d44 F81D0000 		.word	.LC284
 20130 0d48 141E0000 		.word	.LC285
 20131 0d4c E8170000 		.word	.LC229
 20132 0d50 E0180000 		.word	.LC239
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 442


 20133 0d54 04190000 		.word	.LC240
 20134 0d58 54190000 		.word	.LC243
 20135              	.L754:
2635:..\src/command_processing.c **** 			else
2636:..\src/command_processing.c **** 				strcat(info_string, "Calibration enabled: NO\r\n");
 20136              		.loc 1 2636 0
 20137 0d5c 7869     		ldr	r0, [r7, #20]
 20138 0d5e FFF7FEFF 		bl	strlen
 20139 0d62 0346     		mov	r3, r0
 20140 0d64 1A46     		mov	r2, r3
 20141 0d66 7B69     		ldr	r3, [r7, #20]
 20142 0d68 1344     		add	r3, r3, r2
 20143 0d6a D04A     		ldr	r2, .L781
 20144 0d6c 1D46     		mov	r5, r3
 20145 0d6e 1446     		mov	r4, r2
 20146 0d70 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 20147 0d72 2860     		str	r0, [r5]	@ unaligned
 20148 0d74 6960     		str	r1, [r5, #4]	@ unaligned
 20149 0d76 AA60     		str	r2, [r5, #8]	@ unaligned
 20150 0d78 EB60     		str	r3, [r5, #12]	@ unaligned
 20151 0d7a 03CC     		ldmia	r4!, {r0, r1}
 20152 0d7c 2861     		str	r0, [r5, #16]	@ unaligned
 20153 0d7e 6961     		str	r1, [r5, #20]	@ unaligned
 20154 0d80 2388     		ldrh	r3, [r4]	@ unaligned
 20155 0d82 2B83     		strh	r3, [r5, #24]	@ unaligned
 20156              	.L755:
2637:..\src/command_processing.c **** 
2638:..\src/command_processing.c **** 			sprintf(str, "EMG max speed: %d %d", (int)MEM_P->emg.emg_speed[0], (int)MEM_P->emg.emg_speed[1])
 20157              		.loc 1 2638 0
 20158 0d84 D7F88C30 		ldr	r3, [r7, #140]
 20159 0d88 93F8FC31 		ldrb	r3, [r3, #508]	@ zero_extendqisi2
 20160 0d8c 1A46     		mov	r2, r3
 20161 0d8e D7F88C30 		ldr	r3, [r7, #140]
 20162 0d92 93F8FD31 		ldrb	r3, [r3, #509]	@ zero_extendqisi2
 20163 0d96 07F11C00 		add	r0, r7, #28
 20164 0d9a C549     		ldr	r1, .L781+4
 20165 0d9c FFF7FEFF 		bl	sprintf
2639:..\src/command_processing.c **** 			strcat(info_string, str);
 20166              		.loc 1 2639 0
 20167 0da0 07F11C03 		add	r3, r7, #28
 20168 0da4 1946     		mov	r1, r3
 20169 0da6 7869     		ldr	r0, [r7, #20]
 20170 0da8 FFF7FEFF 		bl	strcat
2640:..\src/command_processing.c **** 			strcat(info_string, "\r\n");
 20171              		.loc 1 2640 0
 20172 0dac 7869     		ldr	r0, [r7, #20]
 20173 0dae FFF7FEFF 		bl	strlen
 20174 0db2 0346     		mov	r3, r0
 20175 0db4 1A46     		mov	r2, r3
 20176 0db6 7B69     		ldr	r3, [r7, #20]
 20177 0db8 1344     		add	r3, r3, r2
 20178 0dba BE4A     		ldr	r2, .L781+8
 20179 0dbc 1188     		ldrh	r1, [r2]	@ unaligned
 20180 0dbe 9278     		ldrb	r2, [r2, #2]
 20181 0dc0 1980     		strh	r1, [r3]	@ unaligned
 20182 0dc2 9A70     		strb	r2, [r3, #2]
 20183              	.L753:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 443


 20184              	.LBE28:
2470:..\src/command_processing.c ****             
 20185              		.loc 1 2470 0 discriminator 2
 20186 0dc4 97F89330 		ldrb	r3, [r7, #147]	@ zero_extendqisi2
 20187 0dc8 0133     		adds	r3, r3, #1
 20188 0dca 87F89330 		strb	r3, [r7, #147]
 20189              	.L712:
2470:..\src/command_processing.c ****             
 20190              		.loc 1 2470 0 is_stmt 0 discriminator 1
 20191 0dce D7F88C30 		ldr	r3, [r7, #140]
 20192 0dd2 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 20193 0dd6 97F89320 		ldrb	r2, [r7, #147]	@ zero_extendqisi2
 20194 0dda 9A42     		cmp	r2, r3
 20195 0ddc 7FF699A9 		bls	.L756
 20196              	.LBE27:
2641:..\src/command_processing.c **** 		}
2642:..\src/command_processing.c **** 	}
2643:..\src/command_processing.c **** 	 
2644:..\src/command_processing.c ****     if (MEM_P->SH.rest_position_flag) {
 20197              		.loc 1 2644 0 is_stmt 1
 20198 0de0 D7F88C30 		ldr	r3, [r7, #140]
 20199 0de4 93F8AC32 		ldrb	r3, [r3, #684]	@ zero_extendqisi2
 20200 0de8 002B     		cmp	r3, #0
 20201 0dea 63D0     		beq	.L757
2645:..\src/command_processing.c **** 		sprintf(str, "Rest time delay (ms): %d", (int)MEM_P->SH.rest_delay);
 20202              		.loc 1 2645 0
 20203 0dec D7F88C30 		ldr	r3, [r7, #140]
 20204 0df0 D3F8A422 		ldr	r2, [r3, #676]
 20205 0df4 07F11C03 		add	r3, r7, #28
 20206 0df8 AF49     		ldr	r1, .L781+12
 20207 0dfa 1846     		mov	r0, r3
 20208 0dfc FFF7FEFF 		bl	sprintf
2646:..\src/command_processing.c ****         strcat(info_string, str);
 20209              		.loc 1 2646 0
 20210 0e00 07F11C03 		add	r3, r7, #28
 20211 0e04 1946     		mov	r1, r3
 20212 0e06 7869     		ldr	r0, [r7, #20]
 20213 0e08 FFF7FEFF 		bl	strcat
2647:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 20214              		.loc 1 2647 0
 20215 0e0c 7869     		ldr	r0, [r7, #20]
 20216 0e0e FFF7FEFF 		bl	strlen
 20217 0e12 0346     		mov	r3, r0
 20218 0e14 1A46     		mov	r2, r3
 20219 0e16 7B69     		ldr	r3, [r7, #20]
 20220 0e18 1344     		add	r3, r3, r2
 20221 0e1a A64A     		ldr	r2, .L781+8
 20222 0e1c 1188     		ldrh	r1, [r2]	@ unaligned
 20223 0e1e 9278     		ldrb	r2, [r2, #2]
 20224 0e20 1980     		strh	r1, [r3]	@ unaligned
 20225 0e22 9A70     		strb	r2, [r3, #2]
2648:..\src/command_processing.c ****         
2649:..\src/command_processing.c ****         sprintf(str, "Rest velocity closure (ticks/sec): %d", (int)MEM_P->SH.rest_vel);
 20226              		.loc 1 2649 0
 20227 0e24 D7F88C30 		ldr	r3, [r7, #140]
 20228 0e28 D3F8A822 		ldr	r2, [r3, #680]
 20229 0e2c 07F11C03 		add	r3, r7, #28
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 444


 20230 0e30 A249     		ldr	r1, .L781+16
 20231 0e32 1846     		mov	r0, r3
 20232 0e34 FFF7FEFF 		bl	sprintf
2650:..\src/command_processing.c ****         strcat(info_string, str);
 20233              		.loc 1 2650 0
 20234 0e38 07F11C03 		add	r3, r7, #28
 20235 0e3c 1946     		mov	r1, r3
 20236 0e3e 7869     		ldr	r0, [r7, #20]
 20237 0e40 FFF7FEFF 		bl	strcat
2651:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 20238              		.loc 1 2651 0
 20239 0e44 7869     		ldr	r0, [r7, #20]
 20240 0e46 FFF7FEFF 		bl	strlen
 20241 0e4a 0346     		mov	r3, r0
 20242 0e4c 1A46     		mov	r2, r3
 20243 0e4e 7B69     		ldr	r3, [r7, #20]
 20244 0e50 1344     		add	r3, r3, r2
 20245 0e52 984A     		ldr	r2, .L781+8
 20246 0e54 1188     		ldrh	r1, [r2]	@ unaligned
 20247 0e56 9278     		ldrb	r2, [r2, #2]
 20248 0e58 1980     		strh	r1, [r3]	@ unaligned
 20249 0e5a 9A70     		strb	r2, [r3, #2]
2652:..\src/command_processing.c ****         
2653:..\src/command_processing.c ****         sprintf(str, "Rest position: %d", (int)(MEM_P->SH.rest_pos >> MEM_P->enc[MEM_P->motor[0].en
 20250              		.loc 1 2653 0
 20251 0e5c D7F88C30 		ldr	r3, [r7, #140]
 20252 0e60 D3F8A022 		ldr	r2, [r3, #672]
 20253 0e64 D7F88C30 		ldr	r3, [r7, #140]
 20254 0e68 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 20255 0e6c 1846     		mov	r0, r3
 20256 0e6e D7F88C10 		ldr	r1, [r7, #140]
 20257 0e72 0346     		mov	r3, r0
 20258 0e74 5B00     		lsls	r3, r3, #1
 20259 0e76 0344     		add	r3, r3, r0
 20260 0e78 1B01     		lsls	r3, r3, #4
 20261 0e7a 0B44     		add	r3, r3, r1
 20262 0e7c 03F29513 		addw	r3, r3, #405
 20263 0e80 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20264 0e82 1A41     		asrs	r2, r2, r3
 20265 0e84 07F11C03 		add	r3, r7, #28
 20266 0e88 8D49     		ldr	r1, .L781+20
 20267 0e8a 1846     		mov	r0, r3
 20268 0e8c FFF7FEFF 		bl	sprintf
2654:..\src/command_processing.c ****         strcat(info_string, str);
 20269              		.loc 1 2654 0
 20270 0e90 07F11C03 		add	r3, r7, #28
 20271 0e94 1946     		mov	r1, r3
 20272 0e96 7869     		ldr	r0, [r7, #20]
 20273 0e98 FFF7FEFF 		bl	strcat
2655:..\src/command_processing.c ****         strcat(info_string, "\r\n");  
 20274              		.loc 1 2655 0
 20275 0e9c 7869     		ldr	r0, [r7, #20]
 20276 0e9e FFF7FEFF 		bl	strlen
 20277 0ea2 0346     		mov	r3, r0
 20278 0ea4 1A46     		mov	r2, r3
 20279 0ea6 7B69     		ldr	r3, [r7, #20]
 20280 0ea8 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 445


 20281 0eaa 824A     		ldr	r2, .L781+8
 20282 0eac 1188     		ldrh	r1, [r2]	@ unaligned
 20283 0eae 9278     		ldrb	r2, [r2, #2]
 20284 0eb0 1980     		strh	r1, [r3]	@ unaligned
 20285 0eb2 9A70     		strb	r2, [r3, #2]
 20286              	.L757:
2656:..\src/command_processing.c ****     }
2657:..\src/command_processing.c **** 	
2658:..\src/command_processing.c **** 	if (MEM_P->imu.read_imu_flag) {
 20287              		.loc 1 2658 0
 20288 0eb4 D7F88C30 		ldr	r3, [r7, #140]
 20289 0eb8 93F80032 		ldrb	r3, [r3, #512]	@ zero_extendqisi2
 20290 0ebc 002B     		cmp	r3, #0
 20291 0ebe 00F0CB81 		beq	.L772
2659:..\src/command_processing.c **** 		sprintf(str, "IMU Connected: %d\r\n", (int) N_IMU_Connected);
 20292              		.loc 1 2659 0
 20293 0ec2 804B     		ldr	r3, .L781+24
 20294 0ec4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20295 0ec6 1A46     		mov	r2, r3
 20296 0ec8 07F11C03 		add	r3, r7, #28
 20297 0ecc 7E49     		ldr	r1, .L781+28
 20298 0ece 1846     		mov	r0, r3
 20299 0ed0 FFF7FEFF 		bl	sprintf
2660:..\src/command_processing.c **** 		strcat(info_string, str);
 20300              		.loc 1 2660 0
 20301 0ed4 07F11C03 		add	r3, r7, #28
 20302 0ed8 1946     		mov	r1, r3
 20303 0eda 7869     		ldr	r0, [r7, #20]
 20304 0edc FFF7FEFF 		bl	strcat
2661:..\src/command_processing.c **** 		
2662:..\src/command_processing.c **** 		strcat(info_string, "\r\n");
 20305              		.loc 1 2662 0
 20306 0ee0 7869     		ldr	r0, [r7, #20]
 20307 0ee2 FFF7FEFF 		bl	strlen
 20308 0ee6 0346     		mov	r3, r0
 20309 0ee8 1A46     		mov	r2, r3
 20310 0eea 7B69     		ldr	r3, [r7, #20]
 20311 0eec 1344     		add	r3, r3, r2
 20312 0eee 714A     		ldr	r2, .L781+8
 20313 0ef0 1188     		ldrh	r1, [r2]	@ unaligned
 20314 0ef2 9278     		ldrb	r2, [r2, #2]
 20315 0ef4 1980     		strh	r1, [r3]	@ unaligned
 20316 0ef6 9A70     		strb	r2, [r3, #2]
2663:..\src/command_processing.c **** 		
2664:..\src/command_processing.c **** 		strcat(info_string, "IMUs CONFIGURATION\r\n");
 20317              		.loc 1 2664 0
 20318 0ef8 7869     		ldr	r0, [r7, #20]
 20319 0efa FFF7FEFF 		bl	strlen
 20320 0efe 0346     		mov	r3, r0
 20321 0f00 1A46     		mov	r2, r3
 20322 0f02 7B69     		ldr	r3, [r7, #20]
 20323 0f04 1344     		add	r3, r3, r2
 20324 0f06 714A     		ldr	r2, .L781+32
 20325 0f08 1D46     		mov	r5, r3
 20326 0f0a 1446     		mov	r4, r2
 20327 0f0c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 20328 0f0e 2860     		str	r0, [r5]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 446


 20329 0f10 6960     		str	r1, [r5, #4]	@ unaligned
 20330 0f12 AA60     		str	r2, [r5, #8]	@ unaligned
 20331 0f14 EB60     		str	r3, [r5, #12]	@ unaligned
 20332 0f16 2068     		ldr	r0, [r4]	@ unaligned
 20333 0f18 2861     		str	r0, [r5, #16]	@ unaligned
 20334 0f1a 2379     		ldrb	r3, [r4, #4]
 20335 0f1c 2B75     		strb	r3, [r5, #20]
2665:..\src/command_processing.c **** 		for (i=0; i<N_IMU_Connected; i++){
 20336              		.loc 1 2665 0
 20337 0f1e 0023     		movs	r3, #0
 20338 0f20 C7F89430 		str	r3, [r7, #148]
 20339 0f24 84E1     		b	.L759
 20340              	.L770:
2666:..\src/command_processing.c **** 			sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 20341              		.loc 1 2666 0
 20342 0f26 6A4A     		ldr	r2, .L781+36
 20343 0f28 D7F89430 		ldr	r3, [r7, #148]
 20344 0f2c 1344     		add	r3, r3, r2
 20345 0f2e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20346 0f30 07F11C00 		add	r0, r7, #28
 20347 0f34 D7F89420 		ldr	r2, [r7, #148]
 20348 0f38 6649     		ldr	r1, .L781+40
 20349 0f3a FFF7FEFF 		bl	sprintf
2667:..\src/command_processing.c **** 			strcat(info_string, str);
 20350              		.loc 1 2667 0
 20351 0f3e 07F11C03 		add	r3, r7, #28
 20352 0f42 1946     		mov	r1, r3
 20353 0f44 7869     		ldr	r0, [r7, #20]
 20354 0f46 FFF7FEFF 		bl	strcat
2668:..\src/command_processing.c **** 			
2669:..\src/command_processing.c **** 			sprintf(str, "\tAccelerometers: ");
 20355              		.loc 1 2669 0
 20356 0f4a 07F11C03 		add	r3, r7, #28
 20357 0f4e 624A     		ldr	r2, .L781+44
 20358 0f50 1C46     		mov	r4, r3
 20359 0f52 1546     		mov	r5, r2
 20360 0f54 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 20361 0f56 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 20362 0f58 2B68     		ldr	r3, [r5]
 20363 0f5a 2380     		strh	r3, [r4]	@ movhi
2670:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][0]))
 20364              		.loc 1 2670 0
 20365 0f5c 5C4A     		ldr	r2, .L781+36
 20366 0f5e D7F89430 		ldr	r3, [r7, #148]
 20367 0f62 1344     		add	r3, r3, r2
 20368 0f64 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20369 0f66 1946     		mov	r1, r3
 20370 0f68 D7F88C20 		ldr	r2, [r7, #140]
 20371 0f6c 0B46     		mov	r3, r1
 20372 0f6e 9B00     		lsls	r3, r3, #2
 20373 0f70 0B44     		add	r3, r3, r1
 20374 0f72 1344     		add	r3, r3, r2
 20375 0f74 03F20223 		addw	r3, r3, #514
 20376 0f78 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20377 0f7a 002B     		cmp	r3, #0
 20378 0f7c 0FD0     		beq	.L760
2671:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 447


 20379              		.loc 1 2671 0
 20380 0f7e 07F11C03 		add	r3, r7, #28
 20381 0f82 1846     		mov	r0, r3
 20382 0f84 FFF7FEFF 		bl	strlen
 20383 0f88 0346     		mov	r3, r0
 20384 0f8a 1A46     		mov	r2, r3
 20385 0f8c 07F11C03 		add	r3, r7, #28
 20386 0f90 1344     		add	r3, r3, r2
 20387 0f92 524A     		ldr	r2, .L781+48
 20388 0f94 1068     		ldr	r0, [r2]	@ unaligned
 20389 0f96 1860     		str	r0, [r3]	@ unaligned
 20390 0f98 9288     		ldrh	r2, [r2, #4]	@ unaligned
 20391 0f9a 9A80     		strh	r2, [r3, #4]	@ unaligned
 20392 0f9c 0EE0     		b	.L761
 20393              	.L760:
2672:..\src/command_processing.c **** 			else
2673:..\src/command_processing.c **** 				strcat(str, "NO\r\n"); 
 20394              		.loc 1 2673 0
 20395 0f9e 07F11C03 		add	r3, r7, #28
 20396 0fa2 1846     		mov	r0, r3
 20397 0fa4 FFF7FEFF 		bl	strlen
 20398 0fa8 0346     		mov	r3, r0
 20399 0faa 1A46     		mov	r2, r3
 20400 0fac 07F11C03 		add	r3, r7, #28
 20401 0fb0 1344     		add	r3, r3, r2
 20402 0fb2 4B4A     		ldr	r2, .L781+52
 20403 0fb4 1068     		ldr	r0, [r2]	@ unaligned
 20404 0fb6 1860     		str	r0, [r3]	@ unaligned
 20405 0fb8 1279     		ldrb	r2, [r2, #4]
 20406 0fba 1A71     		strb	r2, [r3, #4]
 20407              	.L761:
2674:..\src/command_processing.c **** 			strcat(str, "\tGyroscopes: ");
 20408              		.loc 1 2674 0
 20409 0fbc 07F11C03 		add	r3, r7, #28
 20410 0fc0 1846     		mov	r0, r3
 20411 0fc2 FFF7FEFF 		bl	strlen
 20412 0fc6 0346     		mov	r3, r0
 20413 0fc8 1A46     		mov	r2, r3
 20414 0fca 07F11C03 		add	r3, r7, #28
 20415 0fce 1344     		add	r3, r3, r2
 20416 0fd0 444A     		ldr	r2, .L781+56
 20417 0fd2 1C46     		mov	r4, r3
 20418 0fd4 1346     		mov	r3, r2
 20419 0fd6 07CB     		ldmia	r3!, {r0, r1, r2}
 20420 0fd8 2060     		str	r0, [r4]	@ unaligned
 20421 0fda 6160     		str	r1, [r4, #4]	@ unaligned
 20422 0fdc A260     		str	r2, [r4, #8]	@ unaligned
 20423 0fde 1B88     		ldrh	r3, [r3]	@ unaligned
 20424 0fe0 A381     		strh	r3, [r4, #12]	@ unaligned
2675:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][1]))
 20425              		.loc 1 2675 0
 20426 0fe2 3B4A     		ldr	r2, .L781+36
 20427 0fe4 D7F89430 		ldr	r3, [r7, #148]
 20428 0fe8 1344     		add	r3, r3, r2
 20429 0fea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20430 0fec 1946     		mov	r1, r3
 20431 0fee D7F88C20 		ldr	r2, [r7, #140]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 448


 20432 0ff2 0B46     		mov	r3, r1
 20433 0ff4 9B00     		lsls	r3, r3, #2
 20434 0ff6 0B44     		add	r3, r3, r1
 20435 0ff8 1344     		add	r3, r3, r2
 20436 0ffa 03F20323 		addw	r3, r3, #515
 20437 0ffe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20438 1000 002B     		cmp	r3, #0
 20439 1002 0FD0     		beq	.L762
2676:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 20440              		.loc 1 2676 0
 20441 1004 07F11C03 		add	r3, r7, #28
 20442 1008 1846     		mov	r0, r3
 20443 100a FFF7FEFF 		bl	strlen
 20444 100e 0346     		mov	r3, r0
 20445 1010 1A46     		mov	r2, r3
 20446 1012 07F11C03 		add	r3, r7, #28
 20447 1016 1344     		add	r3, r3, r2
 20448 1018 304A     		ldr	r2, .L781+48
 20449 101a 1068     		ldr	r0, [r2]	@ unaligned
 20450 101c 1860     		str	r0, [r3]	@ unaligned
 20451 101e 9288     		ldrh	r2, [r2, #4]	@ unaligned
 20452 1020 9A80     		strh	r2, [r3, #4]	@ unaligned
 20453 1022 0EE0     		b	.L763
 20454              	.L762:
2677:..\src/command_processing.c **** 			else
2678:..\src/command_processing.c **** 				strcat(str, "NO\r\n"); 
 20455              		.loc 1 2678 0
 20456 1024 07F11C03 		add	r3, r7, #28
 20457 1028 1846     		mov	r0, r3
 20458 102a FFF7FEFF 		bl	strlen
 20459 102e 0346     		mov	r3, r0
 20460 1030 1A46     		mov	r2, r3
 20461 1032 07F11C03 		add	r3, r7, #28
 20462 1036 1344     		add	r3, r3, r2
 20463 1038 294A     		ldr	r2, .L781+52
 20464 103a 1068     		ldr	r0, [r2]	@ unaligned
 20465 103c 1860     		str	r0, [r3]	@ unaligned
 20466 103e 1279     		ldrb	r2, [r2, #4]
 20467 1040 1A71     		strb	r2, [r3, #4]
 20468              	.L763:
2679:..\src/command_processing.c **** 			strcat(str, "\tMagnetometers: ");
 20469              		.loc 1 2679 0
 20470 1042 07F11C03 		add	r3, r7, #28
 20471 1046 1846     		mov	r0, r3
 20472 1048 FFF7FEFF 		bl	strlen
 20473 104c 0346     		mov	r3, r0
 20474 104e 1A46     		mov	r2, r3
 20475 1050 07F11C03 		add	r3, r7, #28
 20476 1054 1344     		add	r3, r3, r2
 20477 1056 244A     		ldr	r2, .L781+60
 20478 1058 1D46     		mov	r5, r3
 20479 105a 1446     		mov	r4, r2
 20480 105c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 20481 105e 2860     		str	r0, [r5]	@ unaligned
 20482 1060 6960     		str	r1, [r5, #4]	@ unaligned
 20483 1062 AA60     		str	r2, [r5, #8]	@ unaligned
 20484 1064 EB60     		str	r3, [r5, #12]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 449


 20485 1066 2378     		ldrb	r3, [r4]
 20486 1068 2B74     		strb	r3, [r5, #16]
2680:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][2]))
 20487              		.loc 1 2680 0
 20488 106a 194A     		ldr	r2, .L781+36
 20489 106c D7F89430 		ldr	r3, [r7, #148]
 20490 1070 1344     		add	r3, r3, r2
 20491 1072 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20492 1074 1946     		mov	r1, r3
 20493 1076 D7F88C20 		ldr	r2, [r7, #140]
 20494 107a 0B46     		mov	r3, r1
 20495 107c 9B00     		lsls	r3, r3, #2
 20496 107e 0B44     		add	r3, r3, r1
 20497 1080 1344     		add	r3, r3, r2
 20498 1082 03F50173 		add	r3, r3, #516
 20499 1086 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20500 1088 002B     		cmp	r3, #0
 20501 108a 2FD0     		beq	.L764
2681:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 20502              		.loc 1 2681 0
 20503 108c 07F11C03 		add	r3, r7, #28
 20504 1090 1846     		mov	r0, r3
 20505 1092 FFF7FEFF 		bl	strlen
 20506 1096 0346     		mov	r3, r0
 20507 1098 1A46     		mov	r2, r3
 20508 109a 07F11C03 		add	r3, r7, #28
 20509 109e 1344     		add	r3, r3, r2
 20510 10a0 0E4A     		ldr	r2, .L781+48
 20511 10a2 1068     		ldr	r0, [r2]	@ unaligned
 20512 10a4 1860     		str	r0, [r3]	@ unaligned
 20513 10a6 9288     		ldrh	r2, [r2, #4]	@ unaligned
 20514 10a8 9A80     		strh	r2, [r3, #4]	@ unaligned
 20515 10aa 2EE0     		b	.L765
 20516              	.L782:
 20517              		.align	2
 20518              	.L781:
 20519 10ac 70190000 		.word	.LC244
 20520 10b0 8C190000 		.word	.LC245
 20521 10b4 34110000 		.word	.LC154
 20522 10b8 401E0000 		.word	.LC286
 20523 10bc 5C1E0000 		.word	.LC287
 20524 10c0 841E0000 		.word	.LC288
 20525 10c4 00000000 		.word	N_IMU_Connected
 20526 10c8 A4190000 		.word	.LC246
 20527 10cc B8190000 		.word	.LC247
 20528 10d0 00000000 		.word	IMU_connected
 20529 10d4 D0190000 		.word	.LC248
 20530 10d8 E4190000 		.word	.LC249
 20531 10dc 0C130000 		.word	.LC177
 20532 10e0 14130000 		.word	.LC178
 20533 10e4 F8190000 		.word	.LC250
 20534 10e8 081A0000 		.word	.LC251
 20535              	.L764:
2682:..\src/command_processing.c **** 			else
2683:..\src/command_processing.c **** 				strcat(str, "NO\r\n");
 20536              		.loc 1 2683 0
 20537 10ec 07F11C03 		add	r3, r7, #28
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 450


 20538 10f0 1846     		mov	r0, r3
 20539 10f2 FFF7FEFF 		bl	strlen
 20540 10f6 0346     		mov	r3, r0
 20541 10f8 1A46     		mov	r2, r3
 20542 10fa 07F11C03 		add	r3, r7, #28
 20543 10fe 1344     		add	r3, r3, r2
 20544 1100 584A     		ldr	r2, .L783
 20545 1102 1068     		ldr	r0, [r2]	@ unaligned
 20546 1104 1860     		str	r0, [r3]	@ unaligned
 20547 1106 1279     		ldrb	r2, [r2, #4]
 20548 1108 1A71     		strb	r2, [r3, #4]
 20549              	.L765:
2684:..\src/command_processing.c **** 			strcat(str, "\tQuaternion: ");                
 20550              		.loc 1 2684 0
 20551 110a 07F11C03 		add	r3, r7, #28
 20552 110e 1846     		mov	r0, r3
 20553 1110 FFF7FEFF 		bl	strlen
 20554 1114 0346     		mov	r3, r0
 20555 1116 1A46     		mov	r2, r3
 20556 1118 07F11C03 		add	r3, r7, #28
 20557 111c 1344     		add	r3, r3, r2
 20558 111e 524A     		ldr	r2, .L783+4
 20559 1120 1C46     		mov	r4, r3
 20560 1122 1346     		mov	r3, r2
 20561 1124 07CB     		ldmia	r3!, {r0, r1, r2}
 20562 1126 2060     		str	r0, [r4]	@ unaligned
 20563 1128 6160     		str	r1, [r4, #4]	@ unaligned
 20564 112a A260     		str	r2, [r4, #8]	@ unaligned
 20565 112c 1B88     		ldrh	r3, [r3]	@ unaligned
 20566 112e A381     		strh	r3, [r4, #12]	@ unaligned
2685:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][3]))
 20567              		.loc 1 2685 0
 20568 1130 4E4A     		ldr	r2, .L783+8
 20569 1132 D7F89430 		ldr	r3, [r7, #148]
 20570 1136 1344     		add	r3, r3, r2
 20571 1138 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20572 113a 1946     		mov	r1, r3
 20573 113c D7F88C20 		ldr	r2, [r7, #140]
 20574 1140 0B46     		mov	r3, r1
 20575 1142 9B00     		lsls	r3, r3, #2
 20576 1144 0B44     		add	r3, r3, r1
 20577 1146 1344     		add	r3, r3, r2
 20578 1148 03F20523 		addw	r3, r3, #517
 20579 114c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20580 114e 002B     		cmp	r3, #0
 20581 1150 0FD0     		beq	.L766
2686:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 20582              		.loc 1 2686 0
 20583 1152 07F11C03 		add	r3, r7, #28
 20584 1156 1846     		mov	r0, r3
 20585 1158 FFF7FEFF 		bl	strlen
 20586 115c 0346     		mov	r3, r0
 20587 115e 1A46     		mov	r2, r3
 20588 1160 07F11C03 		add	r3, r7, #28
 20589 1164 1344     		add	r3, r3, r2
 20590 1166 424A     		ldr	r2, .L783+12
 20591 1168 1068     		ldr	r0, [r2]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 451


 20592 116a 1860     		str	r0, [r3]	@ unaligned
 20593 116c 9288     		ldrh	r2, [r2, #4]	@ unaligned
 20594 116e 9A80     		strh	r2, [r3, #4]	@ unaligned
 20595 1170 0EE0     		b	.L767
 20596              	.L766:
2687:..\src/command_processing.c **** 			else
2688:..\src/command_processing.c **** 				strcat(str, "NO\r\n");
 20597              		.loc 1 2688 0
 20598 1172 07F11C03 		add	r3, r7, #28
 20599 1176 1846     		mov	r0, r3
 20600 1178 FFF7FEFF 		bl	strlen
 20601 117c 0346     		mov	r3, r0
 20602 117e 1A46     		mov	r2, r3
 20603 1180 07F11C03 		add	r3, r7, #28
 20604 1184 1344     		add	r3, r3, r2
 20605 1186 374A     		ldr	r2, .L783
 20606 1188 1068     		ldr	r0, [r2]	@ unaligned
 20607 118a 1860     		str	r0, [r3]	@ unaligned
 20608 118c 1279     		ldrb	r2, [r2, #4]
 20609 118e 1A71     		strb	r2, [r3, #4]
 20610              	.L767:
2689:..\src/command_processing.c **** 			strcat(str, "\tTemperature: ");
 20611              		.loc 1 2689 0
 20612 1190 07F11C03 		add	r3, r7, #28
 20613 1194 1846     		mov	r0, r3
 20614 1196 FFF7FEFF 		bl	strlen
 20615 119a 0346     		mov	r3, r0
 20616 119c 1A46     		mov	r2, r3
 20617 119e 07F11C03 		add	r3, r7, #28
 20618 11a2 1344     		add	r3, r3, r2
 20619 11a4 334A     		ldr	r2, .L783+16
 20620 11a6 1C46     		mov	r4, r3
 20621 11a8 1346     		mov	r3, r2
 20622 11aa 07CB     		ldmia	r3!, {r0, r1, r2}
 20623 11ac 2060     		str	r0, [r4]	@ unaligned
 20624 11ae 6160     		str	r1, [r4, #4]	@ unaligned
 20625 11b0 A260     		str	r2, [r4, #8]	@ unaligned
 20626 11b2 1A88     		ldrh	r2, [r3]	@ unaligned
 20627 11b4 9B78     		ldrb	r3, [r3, #2]
 20628 11b6 A281     		strh	r2, [r4, #12]	@ unaligned
 20629 11b8 A373     		strb	r3, [r4, #14]
2690:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][4]))
 20630              		.loc 1 2690 0
 20631 11ba 2C4A     		ldr	r2, .L783+8
 20632 11bc D7F89430 		ldr	r3, [r7, #148]
 20633 11c0 1344     		add	r3, r3, r2
 20634 11c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20635 11c4 1946     		mov	r1, r3
 20636 11c6 D7F88C20 		ldr	r2, [r7, #140]
 20637 11ca 0B46     		mov	r3, r1
 20638 11cc 9B00     		lsls	r3, r3, #2
 20639 11ce 0B44     		add	r3, r3, r1
 20640 11d0 1344     		add	r3, r3, r2
 20641 11d2 03F20623 		addw	r3, r3, #518
 20642 11d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20643 11d8 002B     		cmp	r3, #0
 20644 11da 0FD0     		beq	.L768
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 452


2691:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 20645              		.loc 1 2691 0
 20646 11dc 07F11C03 		add	r3, r7, #28
 20647 11e0 1846     		mov	r0, r3
 20648 11e2 FFF7FEFF 		bl	strlen
 20649 11e6 0346     		mov	r3, r0
 20650 11e8 1A46     		mov	r2, r3
 20651 11ea 07F11C03 		add	r3, r7, #28
 20652 11ee 1344     		add	r3, r3, r2
 20653 11f0 1F4A     		ldr	r2, .L783+12
 20654 11f2 1068     		ldr	r0, [r2]	@ unaligned
 20655 11f4 1860     		str	r0, [r3]	@ unaligned
 20656 11f6 9288     		ldrh	r2, [r2, #4]	@ unaligned
 20657 11f8 9A80     		strh	r2, [r3, #4]	@ unaligned
 20658 11fa 0EE0     		b	.L769
 20659              	.L768:
2692:..\src/command_processing.c **** 			else
2693:..\src/command_processing.c **** 				strcat(str, "NO\r\n");
 20660              		.loc 1 2693 0
 20661 11fc 07F11C03 		add	r3, r7, #28
 20662 1200 1846     		mov	r0, r3
 20663 1202 FFF7FEFF 		bl	strlen
 20664 1206 0346     		mov	r3, r0
 20665 1208 1A46     		mov	r2, r3
 20666 120a 07F11C03 		add	r3, r7, #28
 20667 120e 1344     		add	r3, r3, r2
 20668 1210 144A     		ldr	r2, .L783
 20669 1212 1068     		ldr	r0, [r2]	@ unaligned
 20670 1214 1860     		str	r0, [r3]	@ unaligned
 20671 1216 1279     		ldrb	r2, [r2, #4]
 20672 1218 1A71     		strb	r2, [r3, #4]
 20673              	.L769:
2694:..\src/command_processing.c **** 				 
2695:..\src/command_processing.c **** 			strcat(info_string, str);
 20674              		.loc 1 2695 0 discriminator 2
 20675 121a 07F11C03 		add	r3, r7, #28
 20676 121e 1946     		mov	r1, r3
 20677 1220 7869     		ldr	r0, [r7, #20]
 20678 1222 FFF7FEFF 		bl	strcat
2665:..\src/command_processing.c **** 			sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 20679              		.loc 1 2665 0 discriminator 2
 20680 1226 D7F89430 		ldr	r3, [r7, #148]
 20681 122a 0133     		adds	r3, r3, #1
 20682 122c C7F89430 		str	r3, [r7, #148]
 20683              	.L759:
2665:..\src/command_processing.c **** 			sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 20684              		.loc 1 2665 0 is_stmt 0 discriminator 1
 20685 1230 114B     		ldr	r3, .L783+20
 20686 1232 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20687 1234 1A46     		mov	r2, r3
 20688 1236 D7F89430 		ldr	r3, [r7, #148]
 20689 123a 9A42     		cmp	r2, r3
 20690 123c 3FF773AE 		bgt	.L770
2696:..\src/command_processing.c **** 		}       
2697:..\src/command_processing.c **** 		
2698:..\src/command_processing.c **** 		strcat(info_string, "\r\n");
 20691              		.loc 1 2698 0 is_stmt 1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 453


 20692 1240 7869     		ldr	r0, [r7, #20]
 20693 1242 FFF7FEFF 		bl	strlen
 20694 1246 0346     		mov	r3, r0
 20695 1248 1A46     		mov	r2, r3
 20696 124a 7B69     		ldr	r3, [r7, #20]
 20697 124c 1344     		add	r3, r3, r2
 20698 124e 0B4A     		ldr	r2, .L783+24
 20699 1250 1188     		ldrh	r1, [r2]	@ unaligned
 20700 1252 9278     		ldrb	r2, [r2, #2]
 20701 1254 1980     		strh	r1, [r3]	@ unaligned
 20702 1256 9A70     		strb	r2, [r3, #2]
 20703              	.L772:
2699:..\src/command_processing.c **** 	}
2700:..\src/command_processing.c **** }
 20704              		.loc 1 2700 0
 20705 1258 00BF     		nop
 20706 125a 9C37     		adds	r7, r7, #156
 20707              		.cfi_def_cfa_offset 36
 20708 125c BD46     		mov	sp, r7
 20709              		.cfi_def_cfa_register 13
 20710              		@ sp needed
 20711 125e BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 20712              	.L784:
 20713 1262 00BF     		.align	2
 20714              	.L783:
 20715 1264 14130000 		.word	.LC178
 20716 1268 1C1A0000 		.word	.LC252
 20717 126c 00000000 		.word	IMU_connected
 20718 1270 0C130000 		.word	.LC177
 20719 1274 2C1A0000 		.word	.LC253
 20720 1278 00000000 		.word	N_IMU_Connected
 20721 127c 34110000 		.word	.LC154
 20722              		.cfi_endproc
 20723              	.LFE75:
 20724              		.size	prepare_SD_param_info, .-prepare_SD_param_info
 20725              		.section	.rodata
 20726 1e96 0000     		.align	2
 20727              	.LC289:
 20728 1e98 486F7572 		.ascii	"Hour,Min,Sec,\000"
 20728      2C4D696E 
 20728      2C536563 
 20728      2C00
 20729 1ea6 0000     		.align	2
 20730              	.LC290:
 20731 1ea8 42696E5F 		.ascii	"Bin_%d_Pos,\000"
 20731      25645F50 
 20731      6F732C00 
 20732              		.align	2
 20733              	.LC291:
 20734 1eb4 42696E5F 		.ascii	"Bin_%d_Curr,\000"
 20734      25645F43 
 20734      7572722C 
 20734      00
 20735 1ec1 000000   		.align	2
 20736              	.LC292:
 20737 1ec4 52657374 		.ascii	"Rest_times,Wire_disp,Total_rest_time,Power_cycles,E"
 20737      5F74696D 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 454


 20737      65732C57 
 20737      6972655F 
 20737      64697370 
 20738 1ef7 4D475F31 		.ascii	"MG_1_act,EMG_2_act,EMG_1_excess,EMG_2_excess,Motion"
 20738      5F616374 
 20738      2C454D47 
 20738      5F325F61 
 20738      63742C45 
 20739 1f2a 5F312C4D 		.ascii	"_1,Motion_2,Total_runtime\000"
 20739      6F74696F 
 20739      6E5F322C 
 20739      546F7461 
 20739      6C5F7275 
 20740              		.section	.text.prepare_SD_legend,"ax",%progbits
 20741              		.align	2
 20742              		.global	prepare_SD_legend
 20743              		.thumb
 20744              		.thumb_func
 20745              		.type	prepare_SD_legend, %function
 20746              	prepare_SD_legend:
 20747              	.LFB76:
2701:..\src/command_processing.c **** 
2702:..\src/command_processing.c **** 
2703:..\src/command_processing.c **** //==============================================================================
2704:..\src/command_processing.c **** //                                                        PREPARE SD CARD LEGEND
2705:..\src/command_processing.c **** //==============================================================================
2706:..\src/command_processing.c **** void prepare_SD_legend(char *info_string)
2707:..\src/command_processing.c **** {
 20748              		.loc 1 2707 0
 20749              		.cfi_startproc
 20750              		@ args = 0, pretend = 0, frame = 152
 20751              		@ frame_needed = 1, uses_anonymous_args = 0
 20752 0000 90B5     		push	{r4, r7, lr}
 20753              		.cfi_def_cfa_offset 12
 20754              		.cfi_offset 4, -12
 20755              		.cfi_offset 7, -8
 20756              		.cfi_offset 14, -4
 20757 0002 A7B0     		sub	sp, sp, #156
 20758              		.cfi_def_cfa_offset 168
 20759 0004 00AF     		add	r7, sp, #0
 20760              		.cfi_def_cfa_register 7
 20761 0006 7860     		str	r0, [r7, #4]
2708:..\src/command_processing.c ****     char str[140];  
2709:..\src/command_processing.c ****     int i;
2710:..\src/command_processing.c ****         
2711:..\src/command_processing.c ****     // Legend
2712:..\src/command_processing.c ****     strcpy(info_string, "Hour,Min,Sec,");
 20762              		.loc 1 2712 0
 20763 0008 7B68     		ldr	r3, [r7, #4]
 20764 000a 2F4A     		ldr	r2, .L790
 20765 000c 1C46     		mov	r4, r3
 20766 000e 1346     		mov	r3, r2
 20767 0010 07CB     		ldmia	r3!, {r0, r1, r2}
 20768 0012 2060     		str	r0, [r4]	@ unaligned
 20769 0014 6160     		str	r1, [r4, #4]	@ unaligned
 20770 0016 A260     		str	r2, [r4, #8]	@ unaligned
 20771 0018 1B88     		ldrh	r3, [r3]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 455


 20772 001a A381     		strh	r3, [r4, #12]	@ unaligned
2713:..\src/command_processing.c ****     for (i=1; i<=10;i++){       // Position bins
 20773              		.loc 1 2713 0
 20774 001c 0123     		movs	r3, #1
 20775 001e C7F89430 		str	r3, [r7, #148]
 20776 0022 12E0     		b	.L786
 20777              	.L787:
2714:..\src/command_processing.c ****         sprintf(str, "Bin_%d_Pos,", i); 
 20778              		.loc 1 2714 0 discriminator 3
 20779 0024 07F10803 		add	r3, r7, #8
 20780 0028 D7F89420 		ldr	r2, [r7, #148]
 20781 002c 2749     		ldr	r1, .L790+4
 20782 002e 1846     		mov	r0, r3
 20783 0030 FFF7FEFF 		bl	sprintf
2715:..\src/command_processing.c ****         strcat(info_string, str);
 20784              		.loc 1 2715 0 discriminator 3
 20785 0034 07F10803 		add	r3, r7, #8
 20786 0038 1946     		mov	r1, r3
 20787 003a 7868     		ldr	r0, [r7, #4]
 20788 003c FFF7FEFF 		bl	strcat
2713:..\src/command_processing.c ****     for (i=1; i<=10;i++){       // Position bins
 20789              		.loc 1 2713 0 discriminator 3
 20790 0040 D7F89430 		ldr	r3, [r7, #148]
 20791 0044 0133     		adds	r3, r3, #1
 20792 0046 C7F89430 		str	r3, [r7, #148]
 20793              	.L786:
2713:..\src/command_processing.c ****     for (i=1; i<=10;i++){       // Position bins
 20794              		.loc 1 2713 0 is_stmt 0 discriminator 1
 20795 004a D7F89430 		ldr	r3, [r7, #148]
 20796 004e 0A2B     		cmp	r3, #10
 20797 0050 E8DD     		ble	.L787
2716:..\src/command_processing.c ****     }
2717:..\src/command_processing.c ****     for (i=1; i<=4;i++){        // Current bins
 20798              		.loc 1 2717 0 is_stmt 1
 20799 0052 0123     		movs	r3, #1
 20800 0054 C7F89430 		str	r3, [r7, #148]
 20801 0058 12E0     		b	.L788
 20802              	.L789:
2718:..\src/command_processing.c ****         sprintf(str, "Bin_%d_Curr,", i); 
 20803              		.loc 1 2718 0 discriminator 3
 20804 005a 07F10803 		add	r3, r7, #8
 20805 005e D7F89420 		ldr	r2, [r7, #148]
 20806 0062 1B49     		ldr	r1, .L790+8
 20807 0064 1846     		mov	r0, r3
 20808 0066 FFF7FEFF 		bl	sprintf
2719:..\src/command_processing.c ****         strcat(info_string, str);
 20809              		.loc 1 2719 0 discriminator 3
 20810 006a 07F10803 		add	r3, r7, #8
 20811 006e 1946     		mov	r1, r3
 20812 0070 7868     		ldr	r0, [r7, #4]
 20813 0072 FFF7FEFF 		bl	strcat
2717:..\src/command_processing.c ****         sprintf(str, "Bin_%d_Curr,", i); 
 20814              		.loc 1 2717 0 discriminator 3
 20815 0076 D7F89430 		ldr	r3, [r7, #148]
 20816 007a 0133     		adds	r3, r3, #1
 20817 007c C7F89430 		str	r3, [r7, #148]
 20818              	.L788:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 456


2717:..\src/command_processing.c ****         sprintf(str, "Bin_%d_Curr,", i); 
 20819              		.loc 1 2717 0 is_stmt 0 discriminator 1
 20820 0080 D7F89430 		ldr	r3, [r7, #148]
 20821 0084 042B     		cmp	r3, #4
 20822 0086 E8DD     		ble	.L789
2720:..\src/command_processing.c ****     }
2721:..\src/command_processing.c ****     sprintf(str, "Rest_times,Wire_disp,Total_rest_time,Power_cycles,EMG_1_act,EMG_2_act,EMG_1_exces
 20823              		.loc 1 2721 0 is_stmt 1
 20824 0088 07F10803 		add	r3, r7, #8
 20825 008c 114A     		ldr	r2, .L790+12
 20826 008e 1846     		mov	r0, r3
 20827 0090 1146     		mov	r1, r2
 20828 0092 8023     		movs	r3, #128
 20829 0094 1A46     		mov	r2, r3
 20830 0096 FFF7FEFF 		bl	memcpy
2722:..\src/command_processing.c ****     strcat(info_string, str);
 20831              		.loc 1 2722 0
 20832 009a 07F10803 		add	r3, r7, #8
 20833 009e 1946     		mov	r1, r3
 20834 00a0 7868     		ldr	r0, [r7, #4]
 20835 00a2 FFF7FEFF 		bl	strcat
2723:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 20836              		.loc 1 2723 0
 20837 00a6 7868     		ldr	r0, [r7, #4]
 20838 00a8 FFF7FEFF 		bl	strlen
 20839 00ac 0346     		mov	r3, r0
 20840 00ae 1A46     		mov	r2, r3
 20841 00b0 7B68     		ldr	r3, [r7, #4]
 20842 00b2 1344     		add	r3, r3, r2
 20843 00b4 084A     		ldr	r2, .L790+16
 20844 00b6 1188     		ldrh	r1, [r2]	@ unaligned
 20845 00b8 9278     		ldrb	r2, [r2, #2]
 20846 00ba 1980     		strh	r1, [r3]	@ unaligned
 20847 00bc 9A70     		strb	r2, [r3, #2]
2724:..\src/command_processing.c **** }
 20848              		.loc 1 2724 0
 20849 00be 00BF     		nop
 20850 00c0 9C37     		adds	r7, r7, #156
 20851              		.cfi_def_cfa_offset 12
 20852 00c2 BD46     		mov	sp, r7
 20853              		.cfi_def_cfa_register 13
 20854              		@ sp needed
 20855 00c4 90BD     		pop	{r4, r7, pc}
 20856              	.L791:
 20857 00c6 00BF     		.align	2
 20858              	.L790:
 20859 00c8 981E0000 		.word	.LC289
 20860 00cc A81E0000 		.word	.LC290
 20861 00d0 B41E0000 		.word	.LC291
 20862 00d4 C41E0000 		.word	.LC292
 20863 00d8 34110000 		.word	.LC154
 20864              		.cfi_endproc
 20865              	.LFE76:
 20866              		.size	prepare_SD_legend, .-prepare_SD_legend
 20867              		.section	.rodata
 20868              		.align	2
 20869              	.LC293:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 457


 20870 1f44 25303264 		.ascii	"%02d,%02d,%02d,\000"
 20870      2C253032 
 20870      642C2530 
 20870      32642C00 
 20871              		.align	2
 20872              	.LC294:
 20873 1f54 256C752C 		.ascii	"%lu,\000"
 20873      00
 20874 1f59 000000   		.align	2
 20875              	.LC295:
 20876 1f5c 256C752C 		.ascii	"%lu,%lu,%lu,%lu,\000"
 20876      256C752C 
 20876      256C752C 
 20876      256C752C 
 20876      00
 20877 1f6d 000000   		.align	2
 20878              	.LC296:
 20879 1f70 256C752C 		.ascii	"%lu,%lu,%lu,%lu,%lu,%lu,\000"
 20879      256C752C 
 20879      256C752C 
 20879      256C752C 
 20879      256C752C 
 20880 1f89 000000   		.align	2
 20881              	.LC297:
 20882 1f8c 256C7500 		.ascii	"%lu\000"
 20883              		.section	.text.prepare_SD_info,"ax",%progbits
 20884              		.align	2
 20885              		.global	prepare_SD_info
 20886              		.thumb
 20887              		.thumb_func
 20888              		.type	prepare_SD_info, %function
 20889              	prepare_SD_info:
 20890              	.LFB77:
2725:..\src/command_processing.c **** 
2726:..\src/command_processing.c **** 
2727:..\src/command_processing.c **** //==============================================================================
2728:..\src/command_processing.c **** //                                                          PREPARE SD CARD INFO
2729:..\src/command_processing.c **** //==============================================================================
2730:..\src/command_processing.c **** void prepare_SD_info(char *info_string)
2731:..\src/command_processing.c **** {
 20891              		.loc 1 2731 0
 20892              		.cfi_startproc
 20893              		@ args = 0, pretend = 0, frame = 136
 20894              		@ frame_needed = 1, uses_anonymous_args = 0
 20895 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 20896              		.cfi_def_cfa_offset 20
 20897              		.cfi_offset 4, -20
 20898              		.cfi_offset 5, -16
 20899              		.cfi_offset 6, -12
 20900              		.cfi_offset 7, -8
 20901              		.cfi_offset 14, -4
 20902 0002 A7B0     		sub	sp, sp, #156
 20903              		.cfi_def_cfa_offset 176
 20904 0004 04AF     		add	r7, sp, #16
 20905              		.cfi_def_cfa 7, 160
 20906 0006 7860     		str	r0, [r7, #4]
2732:..\src/command_processing.c ****     char str[120];  
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 458


2733:..\src/command_processing.c ****     int i;
2734:..\src/command_processing.c ****             
2735:..\src/command_processing.c ****     strcpy(info_string, "");
 20907              		.loc 1 2735 0
 20908 0008 7B68     		ldr	r3, [r7, #4]
 20909 000a 0022     		movs	r2, #0
 20910 000c 1A70     		strb	r2, [r3]
2736:..\src/command_processing.c ****     
2737:..\src/command_processing.c ****     // Time
2738:..\src/command_processing.c ****     strcat(info_string, "");
2739:..\src/command_processing.c ****     sprintf(str, "%02d,%02d,%02d,", (int)g_mem.exp.curr_time[3], (int)g_mem.exp.curr_time[4], (int)
 20911              		.loc 1 2739 0
 20912 000e 554B     		ldr	r3, .L797
 20913 0010 93F82332 		ldrb	r3, [r3, #547]	@ zero_extendqisi2
 20914 0014 1A46     		mov	r2, r3
 20915 0016 534B     		ldr	r3, .L797
 20916 0018 93F82432 		ldrb	r3, [r3, #548]	@ zero_extendqisi2
 20917 001c 1946     		mov	r1, r3
 20918 001e 514B     		ldr	r3, .L797
 20919 0020 93F82532 		ldrb	r3, [r3, #549]	@ zero_extendqisi2
 20920 0024 07F10C00 		add	r0, r7, #12
 20921 0028 0093     		str	r3, [sp]
 20922 002a 0B46     		mov	r3, r1
 20923 002c 4E49     		ldr	r1, .L797+4
 20924 002e FFF7FEFF 		bl	sprintf
2740:..\src/command_processing.c ****     strcat(info_string, str);
 20925              		.loc 1 2740 0
 20926 0032 07F10C03 		add	r3, r7, #12
 20927 0036 1946     		mov	r1, r3
 20928 0038 7868     		ldr	r0, [r7, #4]
 20929 003a FFF7FEFF 		bl	strcat
2741:..\src/command_processing.c **** 
2742:..\src/command_processing.c ****     // Pos_Bin
2743:..\src/command_processing.c ****     for (i=1; i<=10;i++){
 20930              		.loc 1 2743 0
 20931 003e 0123     		movs	r3, #1
 20932 0040 C7F88430 		str	r3, [r7, #132]
 20933 0044 17E0     		b	.L793
 20934              	.L794:
2744:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.position_hist[i-1]); 
 20935              		.loc 1 2744 0 discriminator 3
 20936 0046 D7F88430 		ldr	r3, [r7, #132]
 20937 004a 013B     		subs	r3, r3, #1
 20938 004c 454A     		ldr	r2, .L797
 20939 004e 0633     		adds	r3, r3, #6
 20940 0050 52F82320 		ldr	r2, [r2, r3, lsl #2]
 20941 0054 07F10C03 		add	r3, r7, #12
 20942 0058 4449     		ldr	r1, .L797+8
 20943 005a 1846     		mov	r0, r3
 20944 005c FFF7FEFF 		bl	sprintf
2745:..\src/command_processing.c ****         strcat(info_string, str);
 20945              		.loc 1 2745 0 discriminator 3
 20946 0060 07F10C03 		add	r3, r7, #12
 20947 0064 1946     		mov	r1, r3
 20948 0066 7868     		ldr	r0, [r7, #4]
 20949 0068 FFF7FEFF 		bl	strcat
2743:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.position_hist[i-1]); 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 459


 20950              		.loc 1 2743 0 discriminator 3
 20951 006c D7F88430 		ldr	r3, [r7, #132]
 20952 0070 0133     		adds	r3, r3, #1
 20953 0072 C7F88430 		str	r3, [r7, #132]
 20954              	.L793:
2743:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.position_hist[i-1]); 
 20955              		.loc 1 2743 0 is_stmt 0 discriminator 1
 20956 0076 D7F88430 		ldr	r3, [r7, #132]
 20957 007a 0A2B     		cmp	r3, #10
 20958 007c E3DD     		ble	.L794
2746:..\src/command_processing.c ****     }
2747:..\src/command_processing.c ****     
2748:..\src/command_processing.c ****     // Curr_Bin
2749:..\src/command_processing.c ****     for (i=1; i<=4;i++){
 20959              		.loc 1 2749 0 is_stmt 1
 20960 007e 0123     		movs	r3, #1
 20961 0080 C7F88430 		str	r3, [r7, #132]
 20962 0084 17E0     		b	.L795
 20963              	.L796:
2750:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.current_hist[i-1]); 
 20964              		.loc 1 2750 0 discriminator 3
 20965 0086 D7F88430 		ldr	r3, [r7, #132]
 20966 008a 013B     		subs	r3, r3, #1
 20967 008c 354A     		ldr	r2, .L797
 20968 008e 1033     		adds	r3, r3, #16
 20969 0090 52F82320 		ldr	r2, [r2, r3, lsl #2]
 20970 0094 07F10C03 		add	r3, r7, #12
 20971 0098 3449     		ldr	r1, .L797+8
 20972 009a 1846     		mov	r0, r3
 20973 009c FFF7FEFF 		bl	sprintf
2751:..\src/command_processing.c ****         strcat(info_string, str);
 20974              		.loc 1 2751 0 discriminator 3
 20975 00a0 07F10C03 		add	r3, r7, #12
 20976 00a4 1946     		mov	r1, r3
 20977 00a6 7868     		ldr	r0, [r7, #4]
 20978 00a8 FFF7FEFF 		bl	strcat
2749:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.current_hist[i-1]); 
 20979              		.loc 1 2749 0 discriminator 3
 20980 00ac D7F88430 		ldr	r3, [r7, #132]
 20981 00b0 0133     		adds	r3, r3, #1
 20982 00b2 C7F88430 		str	r3, [r7, #132]
 20983              	.L795:
2749:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.current_hist[i-1]); 
 20984              		.loc 1 2749 0 is_stmt 0 discriminator 1
 20985 00b6 D7F88430 		ldr	r3, [r7, #132]
 20986 00ba 042B     		cmp	r3, #4
 20987 00bc E3DD     		ble	.L796
2752:..\src/command_processing.c ****     }
2753:..\src/command_processing.c **** 
2754:..\src/command_processing.c ****     // Rest_times, Wire_disp, Total_time_rest, Power_cycles
2755:..\src/command_processing.c ****     sprintf(str, "%lu,%lu,%lu,%lu,", g_mem.cnt.rest_counter, g_mem.cnt.wire_disp, g_mem.cnt.total_t
 20988              		.loc 1 2755 0 is_stmt 1
 20989 00be 294B     		ldr	r3, .L797
 20990 00c0 196D     		ldr	r1, [r3, #80]
 20991 00c2 284B     		ldr	r3, .L797
 20992 00c4 5C6D     		ldr	r4, [r3, #84]
 20993 00c6 274B     		ldr	r3, .L797
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 460


 20994 00c8 DB6D     		ldr	r3, [r3, #92]
 20995 00ca 264A     		ldr	r2, .L797
 20996 00cc 126E     		ldr	r2, [r2, #96]
 20997 00ce 07F10C00 		add	r0, r7, #12
 20998 00d2 0192     		str	r2, [sp, #4]
 20999 00d4 0093     		str	r3, [sp]
 21000 00d6 2346     		mov	r3, r4
 21001 00d8 0A46     		mov	r2, r1
 21002 00da 2549     		ldr	r1, .L797+12
 21003 00dc FFF7FEFF 		bl	sprintf
2756:..\src/command_processing.c ****     strcat(info_string, str);
 21004              		.loc 1 2756 0
 21005 00e0 07F10C03 		add	r3, r7, #12
 21006 00e4 1946     		mov	r1, r3
 21007 00e6 7868     		ldr	r0, [r7, #4]
 21008 00e8 FFF7FEFF 		bl	strcat
2757:..\src/command_processing.c ****     
2758:..\src/command_processing.c ****     // EMG_1_act, EMG_2_act, EMG_1_excess, EMG_2_excess, Motion_1, Motion_2
2759:..\src/command_processing.c ****     sprintf(str, "%lu,%lu,%lu,%lu,%lu,%lu,", g_mem.cnt.emg_act_counter[0], g_mem.cnt.emg_act_counte
 21009              		.loc 1 2759 0
 21010 00ec 1D4B     		ldr	r3, .L797
 21011 00ee 1D69     		ldr	r5, [r3, #16]
 21012 00f0 1C4B     		ldr	r3, .L797
 21013 00f2 5E69     		ldr	r6, [r3, #20]
 21014 00f4 1B4B     		ldr	r3, .L797
 21015 00f6 5B6E     		ldr	r3, [r3, #100]
 21016 00f8 1A4A     		ldr	r2, .L797
 21017 00fa 926E     		ldr	r2, [r2, #104]
 21018 00fc 1949     		ldr	r1, .L797
 21019 00fe C96E     		ldr	r1, [r1, #108]
 21020 0100 1848     		ldr	r0, .L797
 21021 0102 006F     		ldr	r0, [r0, #112]
 21022 0104 07F10C04 		add	r4, r7, #12
 21023 0108 0390     		str	r0, [sp, #12]
 21024 010a 0291     		str	r1, [sp, #8]
 21025 010c 0192     		str	r2, [sp, #4]
 21026 010e 0093     		str	r3, [sp]
 21027 0110 3346     		mov	r3, r6
 21028 0112 2A46     		mov	r2, r5
 21029 0114 1749     		ldr	r1, .L797+16
 21030 0116 2046     		mov	r0, r4
 21031 0118 FFF7FEFF 		bl	sprintf
2760:..\src/command_processing.c ****                                     g_mem.cnt.excessive_signal_activity[0], g_mem.cnt.excessive_sig
2761:..\src/command_processing.c ****                                     g_mem.cnt.motion_counter[0], g_mem.cnt.motion_counter[1]);
2762:..\src/command_processing.c ****     strcat(info_string, str);
 21032              		.loc 1 2762 0
 21033 011c 07F10C03 		add	r3, r7, #12
 21034 0120 1946     		mov	r1, r3
 21035 0122 7868     		ldr	r0, [r7, #4]
 21036 0124 FFF7FEFF 		bl	strcat
2763:..\src/command_processing.c ****     
2764:..\src/command_processing.c ****     // Total_runtime
2765:..\src/command_processing.c ****     sprintf(str, "%lu", g_mem.cnt.total_runtime);
 21037              		.loc 1 2765 0
 21038 0128 0E4B     		ldr	r3, .L797
 21039 012a 9A6D     		ldr	r2, [r3, #88]
 21040 012c 07F10C03 		add	r3, r7, #12
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 461


 21041 0130 1149     		ldr	r1, .L797+20
 21042 0132 1846     		mov	r0, r3
 21043 0134 FFF7FEFF 		bl	sprintf
2766:..\src/command_processing.c ****     strcat(info_string, str);
 21044              		.loc 1 2766 0
 21045 0138 07F10C03 		add	r3, r7, #12
 21046 013c 1946     		mov	r1, r3
 21047 013e 7868     		ldr	r0, [r7, #4]
 21048 0140 FFF7FEFF 		bl	strcat
2767:..\src/command_processing.c ****     
2768:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 21049              		.loc 1 2768 0
 21050 0144 7868     		ldr	r0, [r7, #4]
 21051 0146 FFF7FEFF 		bl	strlen
 21052 014a 0346     		mov	r3, r0
 21053 014c 1A46     		mov	r2, r3
 21054 014e 7B68     		ldr	r3, [r7, #4]
 21055 0150 1344     		add	r3, r3, r2
 21056 0152 0A4A     		ldr	r2, .L797+24
 21057 0154 1188     		ldrh	r1, [r2]	@ unaligned
 21058 0156 9278     		ldrb	r2, [r2, #2]
 21059 0158 1980     		strh	r1, [r3]	@ unaligned
 21060 015a 9A70     		strb	r2, [r3, #2]
2769:..\src/command_processing.c **** }
 21061              		.loc 1 2769 0
 21062 015c 00BF     		nop
 21063 015e 8C37     		adds	r7, r7, #140
 21064              		.cfi_def_cfa_offset 20
 21065 0160 BD46     		mov	sp, r7
 21066              		.cfi_def_cfa_register 13
 21067              		@ sp needed
 21068 0162 F0BD     		pop	{r4, r5, r6, r7, pc}
 21069              	.L798:
 21070              		.align	2
 21071              	.L797:
 21072 0164 00000000 		.word	g_mem
 21073 0168 441F0000 		.word	.LC293
 21074 016c 541F0000 		.word	.LC294
 21075 0170 5C1F0000 		.word	.LC295
 21076 0174 701F0000 		.word	.LC296
 21077 0178 8C1F0000 		.word	.LC297
 21078 017c 34110000 		.word	.LC154
 21079              		.cfi_endproc
 21080              	.LFE77:
 21081              		.size	prepare_SD_info, .-prepare_SD_info
 21082              		.section	.rodata
 21083              		.align	2
 21084              	.LC298:
 21085 1f90 54696D65 		.ascii	"Time,EMG1,EMG2\012\000"
 21085      2C454D47 
 21085      312C454D 
 21085      47320A00 
 21086              		.section	.text.prepare_SD_EMG_History_legend,"ax",%progbits
 21087              		.align	2
 21088              		.global	prepare_SD_EMG_History_legend
 21089              		.thumb
 21090              		.thumb_func
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 462


 21091              		.type	prepare_SD_EMG_History_legend, %function
 21092              	prepare_SD_EMG_History_legend:
 21093              	.LFB78:
2770:..\src/command_processing.c **** 
2771:..\src/command_processing.c **** //==============================================================================
2772:..\src/command_processing.c **** //                                            PREPARE SD CARD EMG HISTORY LEGEND
2773:..\src/command_processing.c **** //==============================================================================
2774:..\src/command_processing.c **** void prepare_SD_EMG_History_legend(char *info_string)
2775:..\src/command_processing.c **** {
 21094              		.loc 1 2775 0
 21095              		.cfi_startproc
 21096              		@ args = 0, pretend = 0, frame = 8
 21097              		@ frame_needed = 1, uses_anonymous_args = 0
 21098              		@ link register save eliminated.
 21099 0000 B0B4     		push	{r4, r5, r7}
 21100              		.cfi_def_cfa_offset 12
 21101              		.cfi_offset 4, -12
 21102              		.cfi_offset 5, -8
 21103              		.cfi_offset 7, -4
 21104 0002 83B0     		sub	sp, sp, #12
 21105              		.cfi_def_cfa_offset 24
 21106 0004 00AF     		add	r7, sp, #0
 21107              		.cfi_def_cfa_register 7
 21108 0006 7860     		str	r0, [r7, #4]
2776:..\src/command_processing.c ****         
2777:..\src/command_processing.c ****     // Legend
2778:..\src/command_processing.c ****     strcpy(info_string, "Time,EMG1,EMG2\n");
 21109              		.loc 1 2778 0
 21110 0008 7B68     		ldr	r3, [r7, #4]
 21111 000a 064A     		ldr	r2, .L800
 21112 000c 1C46     		mov	r4, r3
 21113 000e 1546     		mov	r5, r2
 21114 0010 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 21115 0012 2060     		str	r0, [r4]	@ unaligned
 21116 0014 6160     		str	r1, [r4, #4]	@ unaligned
 21117 0016 A260     		str	r2, [r4, #8]	@ unaligned
 21118 0018 E360     		str	r3, [r4, #12]	@ unaligned
2779:..\src/command_processing.c ****     
2780:..\src/command_processing.c **** }
 21119              		.loc 1 2780 0
 21120 001a 00BF     		nop
 21121 001c 0C37     		adds	r7, r7, #12
 21122              		.cfi_def_cfa_offset 12
 21123 001e BD46     		mov	sp, r7
 21124              		.cfi_def_cfa_register 13
 21125              		@ sp needed
 21126 0020 B0BC     		pop	{r4, r5, r7}
 21127              		.cfi_restore 7
 21128              		.cfi_restore 5
 21129              		.cfi_restore 4
 21130              		.cfi_def_cfa_offset 0
 21131 0022 7047     		bx	lr
 21132              	.L801:
 21133              		.align	2
 21134              	.L800:
 21135 0024 901F0000 		.word	.LC298
 21136              		.cfi_endproc
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 463


 21137              	.LFE78:
 21138              		.size	prepare_SD_EMG_History_legend, .-prepare_SD_EMG_History_legend
 21139              		.section	.rodata
 21140              		.align	2
 21141              	.LC299:
 21142 1fa0 252E3166 		.ascii	"%.1f,%u,%u\012\000"
 21142      2C25752C 
 21142      25750A00 
 21143              		.global	__aeabi_dadd
 21144              		.global	__aeabi_d2f
 21145              		.section	.text.prepare_SD_EMG_history,"ax",%progbits
 21146              		.align	2
 21147              		.global	prepare_SD_EMG_history
 21148              		.thumb
 21149              		.thumb_func
 21150              		.type	prepare_SD_EMG_history, %function
 21151              	prepare_SD_EMG_history:
 21152              	.LFB79:
2781:..\src/command_processing.c **** 
2782:..\src/command_processing.c **** //==============================================================================
2783:..\src/command_processing.c **** //                                                   PREPARE SD CARD EMG HISTORY
2784:..\src/command_processing.c **** //==============================================================================
2785:..\src/command_processing.c **** void prepare_SD_EMG_history(char *info_string)
2786:..\src/command_processing.c **** {
 21153              		.loc 1 2786 0
 21154              		.cfi_startproc
 21155              		@ args = 0, pretend = 0, frame = 120
 21156              		@ frame_needed = 1, uses_anonymous_args = 0
 21157 0000 B0B5     		push	{r4, r5, r7, lr}
 21158              		.cfi_def_cfa_offset 16
 21159              		.cfi_offset 4, -16
 21160              		.cfi_offset 5, -12
 21161              		.cfi_offset 7, -8
 21162              		.cfi_offset 14, -4
 21163 0002 A0B0     		sub	sp, sp, #128
 21164              		.cfi_def_cfa_offset 144
 21165 0004 02AF     		add	r7, sp, #8
 21166              		.cfi_def_cfa 7, 136
 21167 0006 7860     		str	r0, [r7, #4]
2787:..\src/command_processing.c ****     char str_data[100] = "";
 21168              		.loc 1 2787 0
 21169 0008 0023     		movs	r3, #0
 21170 000a FB60     		str	r3, [r7, #12]
 21171 000c 07F11003 		add	r3, r7, #16
 21172 0010 6022     		movs	r2, #96
 21173 0012 0021     		movs	r1, #0
 21174 0014 1846     		mov	r0, r3
 21175 0016 FFF7FEFF 		bl	memset
2788:..\src/command_processing.c ****     uint16 v_idx = 0;
 21176              		.loc 1 2788 0
 21177 001a 0023     		movs	r3, #0
 21178 001c A7F87630 		strh	r3, [r7, #118]	@ movhi
2789:..\src/command_processing.c ****     static float h_time = 0.0;
2790:..\src/command_processing.c ****                 
2791:..\src/command_processing.c ****     strcpy(info_string, "");
 21179              		.loc 1 2791 0
 21180 0020 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 464


 21181 0022 0022     		movs	r2, #0
 21182 0024 1A70     		strb	r2, [r3]
 21183              	.LBB29:
2792:..\src/command_processing.c ****     
2793:..\src/command_processing.c ****     // Oldest samples of the vector
2794:..\src/command_processing.c ****     for (int i = 0; i < SAMPLES_FOR_EMG_HISTORY; i++){
 21184              		.loc 1 2794 0
 21185 0026 0023     		movs	r3, #0
 21186 0028 3B67     		str	r3, [r7, #112]
 21187 002a 4AE0     		b	.L803
 21188              	.L805:
2795:..\src/command_processing.c ****               
2796:..\src/command_processing.c ****         // Send line per line all the history vector
2797:..\src/command_processing.c ****         // First line (oldest) is made by values of emg_history_next_idx index (they will be the ne
2798:..\src/command_processing.c ****         v_idx = emg_history_next_idx + i;
 21189              		.loc 1 2798 0
 21190 002c 2C4B     		ldr	r3, .L806+8
 21191 002e 1B68     		ldr	r3, [r3]
 21192 0030 9AB2     		uxth	r2, r3
 21193 0032 3B6F     		ldr	r3, [r7, #112]
 21194 0034 9BB2     		uxth	r3, r3
 21195 0036 1344     		add	r3, r3, r2
 21196 0038 A7F87630 		strh	r3, [r7, #118]	@ movhi
2799:..\src/command_processing.c ****         if (v_idx > SAMPLES_FOR_EMG_HISTORY){
 21197              		.loc 1 2799 0
 21198 003c B7F87630 		ldrh	r3, [r7, #118]
 21199 0040 B3F5167F 		cmp	r3, #600
 21200 0044 05D9     		bls	.L804
2800:..\src/command_processing.c ****             v_idx -= SAMPLES_FOR_EMG_HISTORY;
 21201              		.loc 1 2800 0
 21202 0046 B7F87630 		ldrh	r3, [r7, #118]	@ movhi
 21203 004a A3F51673 		sub	r3, r3, #600
 21204 004e A7F87630 		strh	r3, [r7, #118]	@ movhi
 21205              	.L804:
2801:..\src/command_processing.c ****         }
2802:..\src/command_processing.c ****         
2803:..\src/command_processing.c ****         // Time vector is reconstructed setting oldest samples as t=0.0s
2804:..\src/command_processing.c ****         sprintf(str_data, "%.1f,%u,%u\n", h_time, emg_history[v_idx][0], emg_history[v_idx][1]);
 21206              		.loc 1 2804 0 discriminator 2
 21207 0052 244B     		ldr	r3, .L806+12
 21208 0054 1B68     		ldr	r3, [r3]	@ float
 21209 0056 1846     		mov	r0, r3
 21210 0058 FFF7FEFF 		bl	__aeabi_f2d
 21211 005c 0446     		mov	r4, r0
 21212 005e 0D46     		mov	r5, r1
 21213 0060 B7F87630 		ldrh	r3, [r7, #118]
 21214 0064 204A     		ldr	r2, .L806+16
 21215 0066 32F82330 		ldrh	r3, [r2, r3, lsl #2]
 21216 006a 1946     		mov	r1, r3
 21217 006c B7F87630 		ldrh	r3, [r7, #118]
 21218 0070 1D4A     		ldr	r2, .L806+16
 21219 0072 9B00     		lsls	r3, r3, #2
 21220 0074 1344     		add	r3, r3, r2
 21221 0076 5B88     		ldrh	r3, [r3, #2]
 21222 0078 07F10C00 		add	r0, r7, #12
 21223 007c 0193     		str	r3, [sp, #4]
 21224 007e 0091     		str	r1, [sp]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 465


 21225 0080 2246     		mov	r2, r4
 21226 0082 2B46     		mov	r3, r5
 21227 0084 1949     		ldr	r1, .L806+20
 21228 0086 FFF7FEFF 		bl	sprintf
2805:..\src/command_processing.c ****         
2806:..\src/command_processing.c ****         strcat(info_string, str_data);
 21229              		.loc 1 2806 0 discriminator 2
 21230 008a 07F10C03 		add	r3, r7, #12
 21231 008e 1946     		mov	r1, r3
 21232 0090 7868     		ldr	r0, [r7, #4]
 21233 0092 FFF7FEFF 		bl	strcat
2807:..\src/command_processing.c ****         
2808:..\src/command_processing.c ****         h_time += 0.2;      // Row time interval is 200ms (5Hz)
 21234              		.loc 1 2808 0 discriminator 2
 21235 0096 134B     		ldr	r3, .L806+12
 21236 0098 1B68     		ldr	r3, [r3]	@ float
 21237 009a 1846     		mov	r0, r3
 21238 009c FFF7FEFF 		bl	__aeabi_f2d
 21239 00a0 0DA3     		adr	r3, .L806
 21240 00a2 D3E90023 		ldrd	r2, [r3]
 21241 00a6 FFF7FEFF 		bl	__aeabi_dadd
 21242 00aa 0346     		mov	r3, r0
 21243 00ac 0C46     		mov	r4, r1
 21244 00ae 1846     		mov	r0, r3
 21245 00b0 2146     		mov	r1, r4
 21246 00b2 FFF7FEFF 		bl	__aeabi_d2f
 21247 00b6 0246     		mov	r2, r0
 21248 00b8 0A4B     		ldr	r3, .L806+12
 21249 00ba 1A60     		str	r2, [r3]	@ float
2794:..\src/command_processing.c ****               
 21250              		.loc 1 2794 0 discriminator 2
 21251 00bc 3B6F     		ldr	r3, [r7, #112]
 21252 00be 0133     		adds	r3, r3, #1
 21253 00c0 3B67     		str	r3, [r7, #112]
 21254              	.L803:
2794:..\src/command_processing.c ****               
 21255              		.loc 1 2794 0 is_stmt 0 discriminator 1
 21256 00c2 3B6F     		ldr	r3, [r7, #112]
 21257 00c4 B3F5167F 		cmp	r3, #600
 21258 00c8 B0DB     		blt	.L805
 21259              	.LBE29:
2809:..\src/command_processing.c **** 
2810:..\src/command_processing.c ****     }
2811:..\src/command_processing.c ****     
2812:..\src/command_processing.c **** }
 21260              		.loc 1 2812 0 is_stmt 1
 21261 00ca 00BF     		nop
 21262 00cc 7837     		adds	r7, r7, #120
 21263              		.cfi_def_cfa_offset 16
 21264 00ce BD46     		mov	sp, r7
 21265              		.cfi_def_cfa_register 13
 21266              		@ sp needed
 21267 00d0 B0BD     		pop	{r4, r5, r7, pc}
 21268              	.L807:
 21269 00d2 00BFAFF3 		.align	3
 21269      0080
 21270              	.L806:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 466


 21271 00d8 9A999999 		.word	-1717986918
 21272 00dc 9999C93F 		.word	1070176665
 21273 00e0 00000000 		.word	emg_history_next_idx
 21274 00e4 00000000 		.word	h_time.11211
 21275 00e8 00000000 		.word	emg_history
 21276 00ec A01F0000 		.word	.LC299
 21277              		.cfi_endproc
 21278              	.LFE79:
 21279              		.size	prepare_SD_EMG_history, .-prepare_SD_EMG_history
 21280              		.section	.rodata
 21281              		.align	2
 21282              	.LC300:
 21283 1fac 53454E53 		.ascii	"SENSORS INFO\015\012\000"
 21283      4F525320 
 21283      494E464F 
 21283      0D0A00
 21284 1fbb 00       		.align	2
 21285              	.LC301:
 21286 1fbc 09416363 		.ascii	"\011Acc: %d\011%d\011%d\015\012\000"
 21286      3A202564 
 21286      09256409 
 21286      25640D0A 
 21286      00
 21287 1fcd 000000   		.align	2
 21288              	.LC302:
 21289 1fd0 09477972 		.ascii	"\011Gyro: %d\011%d\011%d\015\012\000"
 21289      6F3A2025 
 21289      64092564 
 21289      0925640D 
 21289      0A00
 21290 1fe2 0000     		.align	2
 21291              	.LC303:
 21292 1fe4 094D6167 		.ascii	"\011Mag: %d\011%d\011%d\015\012\000"
 21292      3A202564 
 21292      09256409 
 21292      25640D0A 
 21292      00
 21293 1ff5 000000   		.align	2
 21294              	.LC304:
 21295 1ff8 09517561 		.ascii	"\011Quat: %.3f\011%.3f\011%.3f\011%.3f\015\012\000"
 21295      743A2025 
 21295      2E336609 
 21295      252E3366 
 21295      09252E33 
 21296 2015 000000   		.align	2
 21297              	.LC305:
 21298 2018 0954656D 		.ascii	"\011Temperature: %d\015\012\000"
 21298      70657261 
 21298      74757265 
 21298      3A202564 
 21298      0D0A00
 21299              		.section	.text.IMU_reading_info,"ax",%progbits
 21300              		.align	2
 21301              		.global	IMU_reading_info
 21302              		.thumb
 21303              		.thumb_func
 21304              		.type	IMU_reading_info, %function
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 467


 21305              	IMU_reading_info:
 21306              	.LFB80:
2813:..\src/command_processing.c **** 
2814:..\src/command_processing.c **** //==============================================================================
2815:..\src/command_processing.c **** //                                                              IMU READING INFO
2816:..\src/command_processing.c **** //==============================================================================
2817:..\src/command_processing.c **** 
2818:..\src/command_processing.c **** void IMU_reading_info(char *info_string)
2819:..\src/command_processing.c **** {
 21307              		.loc 1 2819 0
 21308              		.cfi_startproc
 21309              		@ args = 0, pretend = 0, frame = 312
 21310              		@ frame_needed = 1, uses_anonymous_args = 0
 21311 0000 2DE9B04F 		push	{r4, r5, r7, r8, r9, r10, fp, lr}
 21312              		.cfi_def_cfa_offset 32
 21313              		.cfi_offset 4, -32
 21314              		.cfi_offset 5, -28
 21315              		.cfi_offset 7, -24
 21316              		.cfi_offset 8, -20
 21317              		.cfi_offset 9, -16
 21318              		.cfi_offset 10, -12
 21319              		.cfi_offset 11, -8
 21320              		.cfi_offset 14, -4
 21321 0004 D4B0     		sub	sp, sp, #336
 21322              		.cfi_def_cfa_offset 368
 21323 0006 06AF     		add	r7, sp, #24
 21324              		.cfi_def_cfa 7, 344
 21325 0008 3B1D     		adds	r3, r7, #4
 21326 000a 1860     		str	r0, [r3]
2820:..\src/command_processing.c ****     char str[300];  
2821:..\src/command_processing.c ****     int i;
2822:..\src/command_processing.c ****                  
2823:..\src/command_processing.c ****     strcat(info_string, "SENSORS INFO\r\n");
 21327              		.loc 1 2823 0
 21328 000c 3B1D     		adds	r3, r7, #4
 21329 000e 1868     		ldr	r0, [r3]
 21330 0010 FFF7FEFF 		bl	strlen
 21331 0014 0346     		mov	r3, r0
 21332 0016 1A46     		mov	r2, r3
 21333 0018 3B1D     		adds	r3, r7, #4
 21334 001a 1B68     		ldr	r3, [r3]
 21335 001c 1344     		add	r3, r3, r2
 21336 001e C94A     		ldr	r2, .L816
 21337 0020 1C46     		mov	r4, r3
 21338 0022 1346     		mov	r3, r2
 21339 0024 07CB     		ldmia	r3!, {r0, r1, r2}
 21340 0026 2060     		str	r0, [r4]	@ unaligned
 21341 0028 6160     		str	r1, [r4, #4]	@ unaligned
 21342 002a A260     		str	r2, [r4, #8]	@ unaligned
 21343 002c 1A88     		ldrh	r2, [r3]	@ unaligned
 21344 002e 9B78     		ldrb	r3, [r3, #2]
 21345 0030 A281     		strh	r2, [r4, #12]	@ unaligned
 21346 0032 A373     		strb	r3, [r4, #14]
2824:..\src/command_processing.c ****     for (i=0; i<N_IMU_Connected; i++){
 21347              		.loc 1 2824 0
 21348 0034 0023     		movs	r3, #0
 21349 0036 C7F83431 		str	r3, [r7, #308]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 468


 21350 003a 66E1     		b	.L809
 21351              	.L815:
2825:..\src/command_processing.c ****         sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 21352              		.loc 1 2825 0
 21353 003c C24A     		ldr	r2, .L816+4
 21354 003e D7F83431 		ldr	r3, [r7, #308]
 21355 0042 1344     		add	r3, r3, r2
 21356 0044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21357 0046 07F10800 		add	r0, r7, #8
 21358 004a D7F83421 		ldr	r2, [r7, #308]
 21359 004e BF49     		ldr	r1, .L816+8
 21360 0050 FFF7FEFF 		bl	sprintf
2826:..\src/command_processing.c ****         strcat(info_string, str);
 21361              		.loc 1 2826 0
 21362 0054 07F10802 		add	r2, r7, #8
 21363 0058 3B1D     		adds	r3, r7, #4
 21364 005a 1146     		mov	r1, r2
 21365 005c 1868     		ldr	r0, [r3]
 21366 005e FFF7FEFF 		bl	strcat
2827:..\src/command_processing.c ****         
2828:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][0])){
 21367              		.loc 1 2828 0
 21368 0062 B94A     		ldr	r2, .L816+4
 21369 0064 D7F83431 		ldr	r3, [r7, #308]
 21370 0068 1344     		add	r3, r3, r2
 21371 006a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21372 006c 1946     		mov	r1, r3
 21373 006e B84A     		ldr	r2, .L816+12
 21374 0070 0B46     		mov	r3, r1
 21375 0072 9B00     		lsls	r3, r3, #2
 21376 0074 0B44     		add	r3, r3, r1
 21377 0076 1344     		add	r3, r3, r2
 21378 0078 03F20223 		addw	r3, r3, #514
 21379 007c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21380 007e 002B     		cmp	r3, #0
 21381 0080 31D0     		beq	.L810
2829:..\src/command_processing.c ****             sprintf(str, "\tAcc: %d\t%d\t%d\r\n", (int16) g_imu[i].accel_value[0], (int16) g_imu[i]
 21382              		.loc 1 2829 0
 21383 0082 B449     		ldr	r1, .L816+16
 21384 0084 D7F83421 		ldr	r2, [r7, #308]
 21385 0088 1346     		mov	r3, r2
 21386 008a 9B00     		lsls	r3, r3, #2
 21387 008c 1344     		add	r3, r3, r2
 21388 008e DB00     		lsls	r3, r3, #3
 21389 0090 0B44     		add	r3, r3, r1
 21390 0092 0233     		adds	r3, r3, #2
 21391 0094 B3F90030 		ldrsh	r3, [r3]
 21392 0098 1C46     		mov	r4, r3
 21393 009a AE49     		ldr	r1, .L816+16
 21394 009c D7F83421 		ldr	r2, [r7, #308]
 21395 00a0 1346     		mov	r3, r2
 21396 00a2 9B00     		lsls	r3, r3, #2
 21397 00a4 1344     		add	r3, r3, r2
 21398 00a6 DB00     		lsls	r3, r3, #3
 21399 00a8 0B44     		add	r3, r3, r1
 21400 00aa 0433     		adds	r3, r3, #4
 21401 00ac B3F90030 		ldrsh	r3, [r3]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 469


 21402 00b0 1D46     		mov	r5, r3
 21403 00b2 A849     		ldr	r1, .L816+16
 21404 00b4 D7F83421 		ldr	r2, [r7, #308]
 21405 00b8 1346     		mov	r3, r2
 21406 00ba 9B00     		lsls	r3, r3, #2
 21407 00bc 1344     		add	r3, r3, r2
 21408 00be DB00     		lsls	r3, r3, #3
 21409 00c0 0B44     		add	r3, r3, r1
 21410 00c2 0633     		adds	r3, r3, #6
 21411 00c4 B3F90030 		ldrsh	r3, [r3]
 21412 00c8 07F10800 		add	r0, r7, #8
 21413 00cc 0093     		str	r3, [sp]
 21414 00ce 2B46     		mov	r3, r5
 21415 00d0 2246     		mov	r2, r4
 21416 00d2 A149     		ldr	r1, .L816+20
 21417 00d4 FFF7FEFF 		bl	sprintf
2830:..\src/command_processing.c ****             strcat(info_string, str);
 21418              		.loc 1 2830 0
 21419 00d8 07F10802 		add	r2, r7, #8
 21420 00dc 3B1D     		adds	r3, r7, #4
 21421 00de 1146     		mov	r1, r2
 21422 00e0 1868     		ldr	r0, [r3]
 21423 00e2 FFF7FEFF 		bl	strcat
 21424              	.L810:
2831:..\src/command_processing.c ****         }
2832:..\src/command_processing.c **** 
2833:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][1])){
 21425              		.loc 1 2833 0
 21426 00e6 984A     		ldr	r2, .L816+4
 21427 00e8 D7F83431 		ldr	r3, [r7, #308]
 21428 00ec 1344     		add	r3, r3, r2
 21429 00ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21430 00f0 1946     		mov	r1, r3
 21431 00f2 974A     		ldr	r2, .L816+12
 21432 00f4 0B46     		mov	r3, r1
 21433 00f6 9B00     		lsls	r3, r3, #2
 21434 00f8 0B44     		add	r3, r3, r1
 21435 00fa 1344     		add	r3, r3, r2
 21436 00fc 03F20323 		addw	r3, r3, #515
 21437 0100 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21438 0102 002B     		cmp	r3, #0
 21439 0104 31D0     		beq	.L811
2834:..\src/command_processing.c ****             sprintf(str, "\tGyro: %d\t%d\t%d\r\n", (int16) g_imu[i].gyro_value[0], (int16) g_imu[i]
 21440              		.loc 1 2834 0
 21441 0106 9349     		ldr	r1, .L816+16
 21442 0108 D7F83421 		ldr	r2, [r7, #308]
 21443 010c 1346     		mov	r3, r2
 21444 010e 9B00     		lsls	r3, r3, #2
 21445 0110 1344     		add	r3, r3, r2
 21446 0112 DB00     		lsls	r3, r3, #3
 21447 0114 0B44     		add	r3, r3, r1
 21448 0116 0833     		adds	r3, r3, #8
 21449 0118 B3F90030 		ldrsh	r3, [r3]
 21450 011c 1C46     		mov	r4, r3
 21451 011e 8D49     		ldr	r1, .L816+16
 21452 0120 D7F83421 		ldr	r2, [r7, #308]
 21453 0124 1346     		mov	r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 470


 21454 0126 9B00     		lsls	r3, r3, #2
 21455 0128 1344     		add	r3, r3, r2
 21456 012a DB00     		lsls	r3, r3, #3
 21457 012c 0B44     		add	r3, r3, r1
 21458 012e 0A33     		adds	r3, r3, #10
 21459 0130 B3F90030 		ldrsh	r3, [r3]
 21460 0134 1D46     		mov	r5, r3
 21461 0136 8749     		ldr	r1, .L816+16
 21462 0138 D7F83421 		ldr	r2, [r7, #308]
 21463 013c 1346     		mov	r3, r2
 21464 013e 9B00     		lsls	r3, r3, #2
 21465 0140 1344     		add	r3, r3, r2
 21466 0142 DB00     		lsls	r3, r3, #3
 21467 0144 0B44     		add	r3, r3, r1
 21468 0146 0C33     		adds	r3, r3, #12
 21469 0148 B3F90030 		ldrsh	r3, [r3]
 21470 014c 07F10800 		add	r0, r7, #8
 21471 0150 0093     		str	r3, [sp]
 21472 0152 2B46     		mov	r3, r5
 21473 0154 2246     		mov	r2, r4
 21474 0156 8149     		ldr	r1, .L816+24
 21475 0158 FFF7FEFF 		bl	sprintf
2835:..\src/command_processing.c ****             strcat(info_string, str);
 21476              		.loc 1 2835 0
 21477 015c 07F10802 		add	r2, r7, #8
 21478 0160 3B1D     		adds	r3, r7, #4
 21479 0162 1146     		mov	r1, r2
 21480 0164 1868     		ldr	r0, [r3]
 21481 0166 FFF7FEFF 		bl	strcat
 21482              	.L811:
2836:..\src/command_processing.c ****         }
2837:..\src/command_processing.c **** 
2838:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][2])){
 21483              		.loc 1 2838 0
 21484 016a 774A     		ldr	r2, .L816+4
 21485 016c D7F83431 		ldr	r3, [r7, #308]
 21486 0170 1344     		add	r3, r3, r2
 21487 0172 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21488 0174 1946     		mov	r1, r3
 21489 0176 764A     		ldr	r2, .L816+12
 21490 0178 0B46     		mov	r3, r1
 21491 017a 9B00     		lsls	r3, r3, #2
 21492 017c 0B44     		add	r3, r3, r1
 21493 017e 1344     		add	r3, r3, r2
 21494 0180 03F50173 		add	r3, r3, #516
 21495 0184 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21496 0186 002B     		cmp	r3, #0
 21497 0188 31D0     		beq	.L812
2839:..\src/command_processing.c ****             sprintf(str, "\tMag: %d\t%d\t%d\r\n", (int16) g_imu[i].mag_value[0], (int16) g_imu[i].m
 21498              		.loc 1 2839 0
 21499 018a 7249     		ldr	r1, .L816+16
 21500 018c D7F83421 		ldr	r2, [r7, #308]
 21501 0190 1346     		mov	r3, r2
 21502 0192 9B00     		lsls	r3, r3, #2
 21503 0194 1344     		add	r3, r3, r2
 21504 0196 DB00     		lsls	r3, r3, #3
 21505 0198 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 471


 21506 019a 0E33     		adds	r3, r3, #14
 21507 019c B3F90030 		ldrsh	r3, [r3]
 21508 01a0 1C46     		mov	r4, r3
 21509 01a2 6C49     		ldr	r1, .L816+16
 21510 01a4 D7F83421 		ldr	r2, [r7, #308]
 21511 01a8 1346     		mov	r3, r2
 21512 01aa 9B00     		lsls	r3, r3, #2
 21513 01ac 1344     		add	r3, r3, r2
 21514 01ae DB00     		lsls	r3, r3, #3
 21515 01b0 0B44     		add	r3, r3, r1
 21516 01b2 1033     		adds	r3, r3, #16
 21517 01b4 B3F90030 		ldrsh	r3, [r3]
 21518 01b8 1D46     		mov	r5, r3
 21519 01ba 6649     		ldr	r1, .L816+16
 21520 01bc D7F83421 		ldr	r2, [r7, #308]
 21521 01c0 1346     		mov	r3, r2
 21522 01c2 9B00     		lsls	r3, r3, #2
 21523 01c4 1344     		add	r3, r3, r2
 21524 01c6 DB00     		lsls	r3, r3, #3
 21525 01c8 0B44     		add	r3, r3, r1
 21526 01ca 1233     		adds	r3, r3, #18
 21527 01cc B3F90030 		ldrsh	r3, [r3]
 21528 01d0 07F10800 		add	r0, r7, #8
 21529 01d4 0093     		str	r3, [sp]
 21530 01d6 2B46     		mov	r3, r5
 21531 01d8 2246     		mov	r2, r4
 21532 01da 6149     		ldr	r1, .L816+28
 21533 01dc FFF7FEFF 		bl	sprintf
2840:..\src/command_processing.c ****             strcat(info_string, str);
 21534              		.loc 1 2840 0
 21535 01e0 07F10802 		add	r2, r7, #8
 21536 01e4 3B1D     		adds	r3, r7, #4
 21537 01e6 1146     		mov	r1, r2
 21538 01e8 1868     		ldr	r0, [r3]
 21539 01ea FFF7FEFF 		bl	strcat
 21540              	.L812:
2841:..\src/command_processing.c ****         }
2842:..\src/command_processing.c ****         
2843:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][3])){
 21541              		.loc 1 2843 0
 21542 01ee 564A     		ldr	r2, .L816+4
 21543 01f0 D7F83431 		ldr	r3, [r7, #308]
 21544 01f4 1344     		add	r3, r3, r2
 21545 01f6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21546 01f8 1946     		mov	r1, r3
 21547 01fa 554A     		ldr	r2, .L816+12
 21548 01fc 0B46     		mov	r3, r1
 21549 01fe 9B00     		lsls	r3, r3, #2
 21550 0200 0B44     		add	r3, r3, r1
 21551 0202 1344     		add	r3, r3, r2
 21552 0204 03F20523 		addw	r3, r3, #517
 21553 0208 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21554 020a 002B     		cmp	r3, #0
 21555 020c 4FD0     		beq	.L813
2844:..\src/command_processing.c ****             sprintf(str, "\tQuat: %.3f\t%.3f\t%.3f\t%.3f\r\n", (float) g_imu[i].quat_value[0], (flo
 21556              		.loc 1 2844 0
 21557 020e 5149     		ldr	r1, .L816+16
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 472


 21558 0210 D7F83421 		ldr	r2, [r7, #308]
 21559 0214 1346     		mov	r3, r2
 21560 0216 9B00     		lsls	r3, r3, #2
 21561 0218 1344     		add	r3, r3, r2
 21562 021a DB00     		lsls	r3, r3, #3
 21563 021c 0B44     		add	r3, r3, r1
 21564 021e 1433     		adds	r3, r3, #20
 21565 0220 1B68     		ldr	r3, [r3]	@ float
 21566 0222 1846     		mov	r0, r3
 21567 0224 FFF7FEFF 		bl	__aeabi_f2d
 21568 0228 8246     		mov	r10, r0
 21569 022a 8B46     		mov	fp, r1
 21570 022c 4949     		ldr	r1, .L816+16
 21571 022e D7F83421 		ldr	r2, [r7, #308]
 21572 0232 1346     		mov	r3, r2
 21573 0234 9B00     		lsls	r3, r3, #2
 21574 0236 1344     		add	r3, r3, r2
 21575 0238 DB00     		lsls	r3, r3, #3
 21576 023a 0B44     		add	r3, r3, r1
 21577 023c 1833     		adds	r3, r3, #24
 21578 023e 1B68     		ldr	r3, [r3]	@ float
 21579 0240 1846     		mov	r0, r3
 21580 0242 FFF7FEFF 		bl	__aeabi_f2d
 21581 0246 0446     		mov	r4, r0
 21582 0248 0D46     		mov	r5, r1
 21583 024a 4249     		ldr	r1, .L816+16
 21584 024c D7F83421 		ldr	r2, [r7, #308]
 21585 0250 1346     		mov	r3, r2
 21586 0252 9B00     		lsls	r3, r3, #2
 21587 0254 1344     		add	r3, r3, r2
 21588 0256 DB00     		lsls	r3, r3, #3
 21589 0258 0B44     		add	r3, r3, r1
 21590 025a 1C33     		adds	r3, r3, #28
 21591 025c 1B68     		ldr	r3, [r3]	@ float
 21592 025e 1846     		mov	r0, r3
 21593 0260 FFF7FEFF 		bl	__aeabi_f2d
 21594 0264 8046     		mov	r8, r0
 21595 0266 8946     		mov	r9, r1
 21596 0268 3A49     		ldr	r1, .L816+16
 21597 026a D7F83421 		ldr	r2, [r7, #308]
 21598 026e 1346     		mov	r3, r2
 21599 0270 9B00     		lsls	r3, r3, #2
 21600 0272 1344     		add	r3, r3, r2
 21601 0274 DB00     		lsls	r3, r3, #3
 21602 0276 0B44     		add	r3, r3, r1
 21603 0278 2033     		adds	r3, r3, #32
 21604 027a 1B68     		ldr	r3, [r3]	@ float
 21605 027c 1846     		mov	r0, r3
 21606 027e FFF7FEFF 		bl	__aeabi_f2d
 21607 0282 0246     		mov	r2, r0
 21608 0284 0B46     		mov	r3, r1
 21609 0286 07F10800 		add	r0, r7, #8
 21610 028a CDE90423 		strd	r2, [sp, #16]
 21611 028e CDE90289 		strd	r8, [sp, #8]
 21612 0292 CDE90045 		strd	r4, [sp]
 21613 0296 5246     		mov	r2, r10
 21614 0298 5B46     		mov	r3, fp
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 473


 21615 029a 3249     		ldr	r1, .L816+32
 21616 029c FFF7FEFF 		bl	sprintf
2845:..\src/command_processing.c ****             strcat(info_string, str);
 21617              		.loc 1 2845 0
 21618 02a0 07F10802 		add	r2, r7, #8
 21619 02a4 3B1D     		adds	r3, r7, #4
 21620 02a6 1146     		mov	r1, r2
 21621 02a8 1868     		ldr	r0, [r3]
 21622 02aa FFF7FEFF 		bl	strcat
 21623              	.L813:
2846:..\src/command_processing.c ****         }
2847:..\src/command_processing.c ****         
2848:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][4])){
 21624              		.loc 1 2848 0
 21625 02ae 264A     		ldr	r2, .L816+4
 21626 02b0 D7F83431 		ldr	r3, [r7, #308]
 21627 02b4 1344     		add	r3, r3, r2
 21628 02b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21629 02b8 1946     		mov	r1, r3
 21630 02ba 254A     		ldr	r2, .L816+12
 21631 02bc 0B46     		mov	r3, r1
 21632 02be 9B00     		lsls	r3, r3, #2
 21633 02c0 0B44     		add	r3, r3, r1
 21634 02c2 1344     		add	r3, r3, r2
 21635 02c4 03F20623 		addw	r3, r3, #518
 21636 02c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21637 02ca 002B     		cmp	r3, #0
 21638 02cc 18D0     		beq	.L814
2849:..\src/command_processing.c ****             sprintf(str, "\tTemperature: %d\r\n", (int16) g_imu[i].temp_value);
 21639              		.loc 1 2849 0
 21640 02ce 2149     		ldr	r1, .L816+16
 21641 02d0 D7F83421 		ldr	r2, [r7, #308]
 21642 02d4 1346     		mov	r3, r2
 21643 02d6 9B00     		lsls	r3, r3, #2
 21644 02d8 1344     		add	r3, r3, r2
 21645 02da DB00     		lsls	r3, r3, #3
 21646 02dc 0B44     		add	r3, r3, r1
 21647 02de 2433     		adds	r3, r3, #36
 21648 02e0 B3F90030 		ldrsh	r3, [r3]
 21649 02e4 1A46     		mov	r2, r3
 21650 02e6 07F10803 		add	r3, r7, #8
 21651 02ea 1F49     		ldr	r1, .L816+36
 21652 02ec 1846     		mov	r0, r3
 21653 02ee FFF7FEFF 		bl	sprintf
2850:..\src/command_processing.c ****             strcat(info_string, str);
 21654              		.loc 1 2850 0
 21655 02f2 07F10802 		add	r2, r7, #8
 21656 02f6 3B1D     		adds	r3, r7, #4
 21657 02f8 1146     		mov	r1, r2
 21658 02fa 1868     		ldr	r0, [r3]
 21659 02fc FFF7FEFF 		bl	strcat
 21660              	.L814:
2824:..\src/command_processing.c ****         sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 21661              		.loc 1 2824 0 discriminator 2
 21662 0300 D7F83431 		ldr	r3, [r7, #308]
 21663 0304 0133     		adds	r3, r3, #1
 21664 0306 C7F83431 		str	r3, [r7, #308]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 474


 21665              	.L809:
2824:..\src/command_processing.c ****         sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 21666              		.loc 1 2824 0 is_stmt 0 discriminator 1
 21667 030a 184B     		ldr	r3, .L816+40
 21668 030c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21669 030e 1A46     		mov	r2, r3
 21670 0310 D7F83431 		ldr	r3, [r7, #308]
 21671 0314 9A42     		cmp	r2, r3
 21672 0316 3FF791AE 		bgt	.L815
2851:..\src/command_processing.c ****         }
2852:..\src/command_processing.c ****         
2853:..\src/command_processing.c ****     }
2854:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 21673              		.loc 1 2854 0 is_stmt 1
 21674 031a 3B1D     		adds	r3, r7, #4
 21675 031c 1868     		ldr	r0, [r3]
 21676 031e FFF7FEFF 		bl	strlen
 21677 0322 0346     		mov	r3, r0
 21678 0324 1A46     		mov	r2, r3
 21679 0326 3B1D     		adds	r3, r7, #4
 21680 0328 1B68     		ldr	r3, [r3]
 21681 032a 1344     		add	r3, r3, r2
 21682 032c 104A     		ldr	r2, .L816+44
 21683 032e 1188     		ldrh	r1, [r2]	@ unaligned
 21684 0330 9278     		ldrb	r2, [r2, #2]
 21685 0332 1980     		strh	r1, [r3]	@ unaligned
 21686 0334 9A70     		strb	r2, [r3, #2]
2855:..\src/command_processing.c **** }
 21687              		.loc 1 2855 0
 21688 0336 00BF     		nop
 21689 0338 07F59C77 		add	r7, r7, #312
 21690              		.cfi_def_cfa_offset 32
 21691 033c BD46     		mov	sp, r7
 21692              		.cfi_def_cfa_register 13
 21693              		@ sp needed
 21694 033e BDE8B08F 		pop	{r4, r5, r7, r8, r9, r10, fp, pc}
 21695              	.L817:
 21696 0342 00BF     		.align	2
 21697              	.L816:
 21698 0344 AC1F0000 		.word	.LC300
 21699 0348 00000000 		.word	IMU_connected
 21700 034c D0190000 		.word	.LC248
 21701 0350 00000000 		.word	c_mem
 21702 0354 00000000 		.word	g_imu
 21703 0358 BC1F0000 		.word	.LC301
 21704 035c D01F0000 		.word	.LC302
 21705 0360 E41F0000 		.word	.LC303
 21706 0364 F81F0000 		.word	.LC304
 21707 0368 18200000 		.word	.LC305
 21708 036c 00000000 		.word	N_IMU_Connected
 21709 0370 34110000 		.word	.LC154
 21710              		.cfi_endproc
 21711              	.LFE80:
 21712              		.size	IMU_reading_info, .-IMU_reading_info
 21713              		.section	.text.commWrite_old_id,"ax",%progbits
 21714              		.align	2
 21715              		.global	commWrite_old_id
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 475


 21716              		.thumb
 21717              		.thumb_func
 21718              		.type	commWrite_old_id, %function
 21719              	commWrite_old_id:
 21720              	.LFB81:
2856:..\src/command_processing.c **** 
2857:..\src/command_processing.c **** //==============================================================================
2858:..\src/command_processing.c **** //                                                     WRITE FUNCTIONS FOR RS485
2859:..\src/command_processing.c **** //==============================================================================
2860:..\src/command_processing.c **** 
2861:..\src/command_processing.c **** void commWrite_old_id(uint8 *packet_data, uint16 packet_lenght, uint8 old_id)
2862:..\src/command_processing.c **** {
 21721              		.loc 1 2862 0
 21722              		.cfi_startproc
 21723              		@ args = 0, pretend = 0, frame = 16
 21724              		@ frame_needed = 1, uses_anonymous_args = 0
 21725 0000 80B5     		push	{r7, lr}
 21726              		.cfi_def_cfa_offset 8
 21727              		.cfi_offset 7, -8
 21728              		.cfi_offset 14, -4
 21729 0002 84B0     		sub	sp, sp, #16
 21730              		.cfi_def_cfa_offset 24
 21731 0004 00AF     		add	r7, sp, #0
 21732              		.cfi_def_cfa_register 7
 21733 0006 7860     		str	r0, [r7, #4]
 21734 0008 0B46     		mov	r3, r1
 21735 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 21736 000c 1346     		mov	r3, r2
 21737 000e 7B70     		strb	r3, [r7, #1]
2863:..\src/command_processing.c ****     uint16 CYDATA index;    // iterator
2864:..\src/command_processing.c **** 
2865:..\src/command_processing.c ****     // frame - start
2866:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 21738              		.loc 1 2866 0
 21739 0010 3A20     		movs	r0, #58
 21740 0012 FFF7FEFF 		bl	UART_RS485_PutChar
2867:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 21741              		.loc 1 2867 0
 21742 0016 3A20     		movs	r0, #58
 21743 0018 FFF7FEFF 		bl	UART_RS485_PutChar
2868:..\src/command_processing.c ****     // frame - ID
2869:..\src/command_processing.c ****     //if(old_id)
2870:..\src/command_processing.c ****         UART_RS485_PutChar(old_id);
 21744              		.loc 1 2870 0
 21745 001c 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 21746 001e 1846     		mov	r0, r3
 21747 0020 FFF7FEFF 		bl	UART_RS485_PutChar
2871:..\src/command_processing.c ****     //else
2872:..\src/command_processing.c ****         //UART_RS485_PutChar(g_mem.id);
2873:..\src/command_processing.c ****         
2874:..\src/command_processing.c ****     // frame - length
2875:..\src/command_processing.c ****     UART_RS485_PutChar((uint8)packet_lenght);
 21748              		.loc 1 2875 0
 21749 0024 7B88     		ldrh	r3, [r7, #2]	@ movhi
 21750 0026 DBB2     		uxtb	r3, r3
 21751 0028 1846     		mov	r0, r3
 21752 002a FFF7FEFF 		bl	UART_RS485_PutChar
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 476


2876:..\src/command_processing.c ****     // frame - packet data
2877:..\src/command_processing.c ****     for(index = 0; index < packet_lenght; ++index) {
 21753              		.loc 1 2877 0
 21754 002e 0023     		movs	r3, #0
 21755 0030 FB81     		strh	r3, [r7, #14]	@ movhi
 21756 0032 09E0     		b	.L819
 21757              	.L820:
2878:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 21758              		.loc 1 2878 0 discriminator 3
 21759 0034 FB89     		ldrh	r3, [r7, #14]
 21760 0036 7A68     		ldr	r2, [r7, #4]
 21761 0038 1344     		add	r3, r3, r2
 21762 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21763 003c 1846     		mov	r0, r3
 21764 003e FFF7FEFF 		bl	UART_RS485_PutChar
2877:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 21765              		.loc 1 2877 0 discriminator 3
 21766 0042 FB89     		ldrh	r3, [r7, #14]	@ movhi
 21767 0044 0133     		adds	r3, r3, #1
 21768 0046 FB81     		strh	r3, [r7, #14]	@ movhi
 21769              	.L819:
2877:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 21770              		.loc 1 2877 0 is_stmt 0 discriminator 1
 21771 0048 FA89     		ldrh	r2, [r7, #14]
 21772 004a 7B88     		ldrh	r3, [r7, #2]
 21773 004c 9A42     		cmp	r2, r3
 21774 004e F1D3     		bcc	.L820
2879:..\src/command_processing.c ****     }
2880:..\src/command_processing.c **** 
2881:..\src/command_processing.c ****     index = 0;
 21775              		.loc 1 2881 0 is_stmt 1
 21776 0050 0023     		movs	r3, #0
 21777 0052 FB81     		strh	r3, [r7, #14]	@ movhi
2882:..\src/command_processing.c **** 
2883:..\src/command_processing.c ****     while(!(UART_RS485_ReadTxStatus() & UART_RS485_TX_STS_COMPLETE) && index++ <= 1000){}
 21778              		.loc 1 2883 0
 21779 0054 00BF     		nop
 21780              	.L822:
 21781              		.loc 1 2883 0 is_stmt 0 discriminator 2
 21782 0056 FFF7FEFF 		bl	UART_RS485_ReadTxStatus
 21783 005a 0346     		mov	r3, r0
 21784 005c 03F00103 		and	r3, r3, #1
 21785 0060 002B     		cmp	r3, #0
 21786 0062 05D1     		bne	.L821
 21787              		.loc 1 2883 0 discriminator 1
 21788 0064 FB89     		ldrh	r3, [r7, #14]
 21789 0066 5A1C     		adds	r2, r3, #1
 21790 0068 FA81     		strh	r2, [r7, #14]	@ movhi
 21791 006a B3F57A7F 		cmp	r3, #1000
 21792 006e F2D9     		bls	.L822
 21793              	.L821:
2884:..\src/command_processing.c **** 
2885:..\src/command_processing.c ****     RS485_CTS_Write(1);
 21794              		.loc 1 2885 0 is_stmt 1
 21795 0070 0120     		movs	r0, #1
 21796 0072 FFF7FEFF 		bl	RS485_CTS_Write
2886:..\src/command_processing.c ****     RS485_CTS_Write(0);
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 477


 21797              		.loc 1 2886 0
 21798 0076 0020     		movs	r0, #0
 21799 0078 FFF7FEFF 		bl	RS485_CTS_Write
2887:..\src/command_processing.c **** }
 21800              		.loc 1 2887 0
 21801 007c 00BF     		nop
 21802 007e 1037     		adds	r7, r7, #16
 21803              		.cfi_def_cfa_offset 8
 21804 0080 BD46     		mov	sp, r7
 21805              		.cfi_def_cfa_register 13
 21806              		@ sp needed
 21807 0082 80BD     		pop	{r7, pc}
 21808              		.cfi_endproc
 21809              	.LFE81:
 21810              		.size	commWrite_old_id, .-commWrite_old_id
 21811              		.section	.text.commWrite,"ax",%progbits
 21812              		.align	2
 21813              		.global	commWrite
 21814              		.thumb
 21815              		.thumb_func
 21816              		.type	commWrite, %function
 21817              	commWrite:
 21818              	.LFB82:
2888:..\src/command_processing.c **** 
2889:..\src/command_processing.c **** void commWrite(uint8 *packet_data, uint16 packet_lenght)
2890:..\src/command_processing.c **** {
 21819              		.loc 1 2890 0
 21820              		.cfi_startproc
 21821              		@ args = 0, pretend = 0, frame = 16
 21822              		@ frame_needed = 1, uses_anonymous_args = 0
 21823 0000 80B5     		push	{r7, lr}
 21824              		.cfi_def_cfa_offset 8
 21825              		.cfi_offset 7, -8
 21826              		.cfi_offset 14, -4
 21827 0002 84B0     		sub	sp, sp, #16
 21828              		.cfi_def_cfa_offset 24
 21829 0004 00AF     		add	r7, sp, #0
 21830              		.cfi_def_cfa_register 7
 21831 0006 7860     		str	r0, [r7, #4]
 21832 0008 0B46     		mov	r3, r1
 21833 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2891:..\src/command_processing.c ****     uint16 CYDATA index;    // iterator
2892:..\src/command_processing.c **** 
2893:..\src/command_processing.c ****     // frame - start
2894:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 21834              		.loc 1 2894 0
 21835 000c 3A20     		movs	r0, #58
 21836 000e FFF7FEFF 		bl	UART_RS485_PutChar
2895:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 21837              		.loc 1 2895 0
 21838 0012 3A20     		movs	r0, #58
 21839 0014 FFF7FEFF 		bl	UART_RS485_PutChar
2896:..\src/command_processing.c ****     // frame - ID
2897:..\src/command_processing.c ****     UART_RS485_PutChar(g_mem.dev.id);
 21840              		.loc 1 2897 0
 21841 0018 1A4B     		ldr	r3, .L828
 21842 001a 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 478


 21843 001e 1846     		mov	r0, r3
 21844 0020 FFF7FEFF 		bl	UART_RS485_PutChar
2898:..\src/command_processing.c ****     // frame - length
2899:..\src/command_processing.c ****     UART_RS485_PutChar((uint8)packet_lenght);
 21845              		.loc 1 2899 0
 21846 0024 7B88     		ldrh	r3, [r7, #2]	@ movhi
 21847 0026 DBB2     		uxtb	r3, r3
 21848 0028 1846     		mov	r0, r3
 21849 002a FFF7FEFF 		bl	UART_RS485_PutChar
2900:..\src/command_processing.c ****     // frame - packet data
2901:..\src/command_processing.c ****     for(index = 0; index < packet_lenght; ++index) {
 21850              		.loc 1 2901 0
 21851 002e 0023     		movs	r3, #0
 21852 0030 FB81     		strh	r3, [r7, #14]	@ movhi
 21853 0032 09E0     		b	.L824
 21854              	.L825:
2902:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 21855              		.loc 1 2902 0 discriminator 3
 21856 0034 FB89     		ldrh	r3, [r7, #14]
 21857 0036 7A68     		ldr	r2, [r7, #4]
 21858 0038 1344     		add	r3, r3, r2
 21859 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21860 003c 1846     		mov	r0, r3
 21861 003e FFF7FEFF 		bl	UART_RS485_PutChar
2901:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 21862              		.loc 1 2901 0 discriminator 3
 21863 0042 FB89     		ldrh	r3, [r7, #14]	@ movhi
 21864 0044 0133     		adds	r3, r3, #1
 21865 0046 FB81     		strh	r3, [r7, #14]	@ movhi
 21866              	.L824:
2901:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 21867              		.loc 1 2901 0 is_stmt 0 discriminator 1
 21868 0048 FA89     		ldrh	r2, [r7, #14]
 21869 004a 7B88     		ldrh	r3, [r7, #2]
 21870 004c 9A42     		cmp	r2, r3
 21871 004e F1D3     		bcc	.L825
2903:..\src/command_processing.c ****     }
2904:..\src/command_processing.c **** 
2905:..\src/command_processing.c ****     index = 0;
 21872              		.loc 1 2905 0 is_stmt 1
 21873 0050 0023     		movs	r3, #0
 21874 0052 FB81     		strh	r3, [r7, #14]	@ movhi
2906:..\src/command_processing.c **** 
2907:..\src/command_processing.c ****     while(!(UART_RS485_ReadTxStatus() & UART_RS485_TX_STS_COMPLETE) && index++ <= 1000){}
 21875              		.loc 1 2907 0
 21876 0054 00BF     		nop
 21877              	.L827:
 21878              		.loc 1 2907 0 is_stmt 0 discriminator 2
 21879 0056 FFF7FEFF 		bl	UART_RS485_ReadTxStatus
 21880 005a 0346     		mov	r3, r0
 21881 005c 03F00103 		and	r3, r3, #1
 21882 0060 002B     		cmp	r3, #0
 21883 0062 05D1     		bne	.L826
 21884              		.loc 1 2907 0 discriminator 1
 21885 0064 FB89     		ldrh	r3, [r7, #14]
 21886 0066 5A1C     		adds	r2, r3, #1
 21887 0068 FA81     		strh	r2, [r7, #14]	@ movhi
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 479


 21888 006a B3F57A7F 		cmp	r3, #1000
 21889 006e F2D9     		bls	.L827
 21890              	.L826:
2908:..\src/command_processing.c **** 
2909:..\src/command_processing.c ****     RS485_CTS_Write(1);
 21891              		.loc 1 2909 0 is_stmt 1
 21892 0070 0120     		movs	r0, #1
 21893 0072 FFF7FEFF 		bl	RS485_CTS_Write
2910:..\src/command_processing.c ****     RS485_CTS_Write(0);
 21894              		.loc 1 2910 0
 21895 0076 0020     		movs	r0, #0
 21896 0078 FFF7FEFF 		bl	RS485_CTS_Write
2911:..\src/command_processing.c **** }
 21897              		.loc 1 2911 0
 21898 007c 00BF     		nop
 21899 007e 1037     		adds	r7, r7, #16
 21900              		.cfi_def_cfa_offset 8
 21901 0080 BD46     		mov	sp, r7
 21902              		.cfi_def_cfa_register 13
 21903              		@ sp needed
 21904 0082 80BD     		pop	{r7, pc}
 21905              	.L829:
 21906              		.align	2
 21907              	.L828:
 21908 0084 00000000 		.word	g_mem
 21909              		.cfi_endproc
 21910              	.LFE82:
 21911              		.size	commWrite, .-commWrite
 21912              		.section	.text.commWriteID,"ax",%progbits
 21913              		.align	2
 21914              		.global	commWriteID
 21915              		.thumb
 21916              		.thumb_func
 21917              		.type	commWriteID, %function
 21918              	commWriteID:
 21919              	.LFB83:
2912:..\src/command_processing.c **** 
2913:..\src/command_processing.c **** //==============================================================================
2914:..\src/command_processing.c **** //                                             WRITE FUNCTION FOR ANOTHER DEVICE
2915:..\src/command_processing.c **** //==============================================================================
2916:..\src/command_processing.c **** 
2917:..\src/command_processing.c **** void commWriteID(uint8 *packet_data, uint16 packet_lenght, uint8 id)
2918:..\src/command_processing.c **** {
 21920              		.loc 1 2918 0
 21921              		.cfi_startproc
 21922              		@ args = 0, pretend = 0, frame = 8
 21923              		@ frame_needed = 1, uses_anonymous_args = 0
 21924 0000 80B5     		push	{r7, lr}
 21925              		.cfi_def_cfa_offset 8
 21926              		.cfi_offset 7, -8
 21927              		.cfi_offset 14, -4
 21928 0002 82B0     		sub	sp, sp, #8
 21929              		.cfi_def_cfa_offset 16
 21930 0004 00AF     		add	r7, sp, #0
 21931              		.cfi_def_cfa_register 7
 21932 0006 7860     		str	r0, [r7, #4]
 21933 0008 0B46     		mov	r3, r1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 480


 21934 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 21935 000c 1346     		mov	r3, r2
 21936 000e 7B70     		strb	r3, [r7, #1]
2919:..\src/command_processing.c ****     static uint16 CYDATA i;    // iterator
2920:..\src/command_processing.c **** 
2921:..\src/command_processing.c ****     // frame - start
2922:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 21937              		.loc 1 2922 0
 21938 0010 3A20     		movs	r0, #58
 21939 0012 FFF7FEFF 		bl	UART_RS485_PutChar
2923:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 21940              		.loc 1 2923 0
 21941 0016 3A20     		movs	r0, #58
 21942 0018 FFF7FEFF 		bl	UART_RS485_PutChar
2924:..\src/command_processing.c ****     // frame - ID
2925:..\src/command_processing.c ****     UART_RS485_PutChar(id);
 21943              		.loc 1 2925 0
 21944 001c 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 21945 001e 1846     		mov	r0, r3
 21946 0020 FFF7FEFF 		bl	UART_RS485_PutChar
2926:..\src/command_processing.c ****     // frame - length
2927:..\src/command_processing.c ****     UART_RS485_PutChar((uint8)packet_lenght);
 21947              		.loc 1 2927 0
 21948 0024 7B88     		ldrh	r3, [r7, #2]	@ movhi
 21949 0026 DBB2     		uxtb	r3, r3
 21950 0028 1846     		mov	r0, r3
 21951 002a FFF7FEFF 		bl	UART_RS485_PutChar
2928:..\src/command_processing.c ****     // frame - packet data
2929:..\src/command_processing.c ****     for(i = 0; i < packet_lenght; ++i) {
 21952              		.loc 1 2929 0
 21953 002e 1B4B     		ldr	r3, .L835
 21954 0030 0022     		movs	r2, #0
 21955 0032 1A80     		strh	r2, [r3]	@ movhi
 21956 0034 0EE0     		b	.L831
 21957              	.L832:
2930:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[i]);
 21958              		.loc 1 2930 0 discriminator 3
 21959 0036 194B     		ldr	r3, .L835
 21960 0038 1B88     		ldrh	r3, [r3]
 21961 003a 1A46     		mov	r2, r3
 21962 003c 7B68     		ldr	r3, [r7, #4]
 21963 003e 1344     		add	r3, r3, r2
 21964 0040 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21965 0042 1846     		mov	r0, r3
 21966 0044 FFF7FEFF 		bl	UART_RS485_PutChar
2929:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[i]);
 21967              		.loc 1 2929 0 discriminator 3
 21968 0048 144B     		ldr	r3, .L835
 21969 004a 1B88     		ldrh	r3, [r3]
 21970 004c 0133     		adds	r3, r3, #1
 21971 004e 9AB2     		uxth	r2, r3
 21972 0050 124B     		ldr	r3, .L835
 21973 0052 1A80     		strh	r2, [r3]	@ movhi
 21974              	.L831:
2929:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[i]);
 21975              		.loc 1 2929 0 is_stmt 0 discriminator 1
 21976 0054 114B     		ldr	r3, .L835
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 481


 21977 0056 1B88     		ldrh	r3, [r3]
 21978 0058 7A88     		ldrh	r2, [r7, #2]
 21979 005a 9A42     		cmp	r2, r3
 21980 005c EBD8     		bhi	.L832
2931:..\src/command_processing.c ****     }
2932:..\src/command_processing.c **** 
2933:..\src/command_processing.c ****     i = 0;
 21981              		.loc 1 2933 0 is_stmt 1
 21982 005e 0F4B     		ldr	r3, .L835
 21983 0060 0022     		movs	r2, #0
 21984 0062 1A80     		strh	r2, [r3]	@ movhi
2934:..\src/command_processing.c **** 
2935:..\src/command_processing.c ****     while(!(UART_RS485_ReadTxStatus() & UART_RS485_TX_STS_COMPLETE) && i++ <= 1000){}
 21985              		.loc 1 2935 0
 21986 0064 00BF     		nop
 21987              	.L834:
 21988              		.loc 1 2935 0 is_stmt 0 discriminator 2
 21989 0066 FFF7FEFF 		bl	UART_RS485_ReadTxStatus
 21990 006a 0346     		mov	r3, r0
 21991 006c 03F00103 		and	r3, r3, #1
 21992 0070 002B     		cmp	r3, #0
 21993 0072 08D1     		bne	.L833
 21994              		.loc 1 2935 0 discriminator 1
 21995 0074 094B     		ldr	r3, .L835
 21996 0076 1B88     		ldrh	r3, [r3]
 21997 0078 5A1C     		adds	r2, r3, #1
 21998 007a 91B2     		uxth	r1, r2
 21999 007c 074A     		ldr	r2, .L835
 22000 007e 1180     		strh	r1, [r2]	@ movhi
 22001 0080 B3F57A7F 		cmp	r3, #1000
 22002 0084 EFD9     		bls	.L834
 22003              	.L833:
2936:..\src/command_processing.c ****     
2937:..\src/command_processing.c ****     RS485_CTS_Write(1);
 22004              		.loc 1 2937 0 is_stmt 1
 22005 0086 0120     		movs	r0, #1
 22006 0088 FFF7FEFF 		bl	RS485_CTS_Write
2938:..\src/command_processing.c ****     RS485_CTS_Write(0);
 22007              		.loc 1 2938 0
 22008 008c 0020     		movs	r0, #0
 22009 008e FFF7FEFF 		bl	RS485_CTS_Write
2939:..\src/command_processing.c **** }
 22010              		.loc 1 2939 0
 22011 0092 00BF     		nop
 22012 0094 0837     		adds	r7, r7, #8
 22013              		.cfi_def_cfa_offset 8
 22014 0096 BD46     		mov	sp, r7
 22015              		.cfi_def_cfa_register 13
 22016              		@ sp needed
 22017 0098 80BD     		pop	{r7, pc}
 22018              	.L836:
 22019 009a 00BF     		.align	2
 22020              	.L835:
 22021 009c 04000000 		.word	i.11252
 22022              		.cfi_endproc
 22023              	.LFE83:
 22024              		.size	commWriteID, .-commWriteID
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 482


 22025              		.section	.text.LCRChecksum,"ax",%progbits
 22026              		.align	2
 22027              		.global	LCRChecksum
 22028              		.thumb
 22029              		.thumb_func
 22030              		.type	LCRChecksum, %function
 22031              	LCRChecksum:
 22032              	.LFB84:
2940:..\src/command_processing.c **** 
2941:..\src/command_processing.c **** //==============================================================================
2942:..\src/command_processing.c **** //                                                             CHECKSUM FUNCTION
2943:..\src/command_processing.c **** //==============================================================================
2944:..\src/command_processing.c **** 
2945:..\src/command_processing.c **** // Performs a XOR byte by byte on the entire vector
2946:..\src/command_processing.c **** 
2947:..\src/command_processing.c **** uint8 LCRChecksum(uint8 *data_array, uint8 data_length) {
 22033              		.loc 1 2947 0
 22034              		.cfi_startproc
 22035              		@ args = 0, pretend = 0, frame = 16
 22036              		@ frame_needed = 1, uses_anonymous_args = 0
 22037              		@ link register save eliminated.
 22038 0000 80B4     		push	{r7}
 22039              		.cfi_def_cfa_offset 4
 22040              		.cfi_offset 7, -4
 22041 0002 85B0     		sub	sp, sp, #20
 22042              		.cfi_def_cfa_offset 24
 22043 0004 00AF     		add	r7, sp, #0
 22044              		.cfi_def_cfa_register 7
 22045 0006 7860     		str	r0, [r7, #4]
 22046 0008 0B46     		mov	r3, r1
 22047 000a FB70     		strb	r3, [r7, #3]
2948:..\src/command_processing.c ****     
2949:..\src/command_processing.c ****     uint8 CYDATA i;
2950:..\src/command_processing.c ****     uint8 CYDATA checksum = 0x00;
 22048              		.loc 1 2950 0
 22049 000c 0023     		movs	r3, #0
 22050 000e BB73     		strb	r3, [r7, #14]
2951:..\src/command_processing.c ****     
2952:..\src/command_processing.c ****     for(i = 0; i < data_length; ++i)
 22051              		.loc 1 2952 0
 22052 0010 0023     		movs	r3, #0
 22053 0012 FB73     		strb	r3, [r7, #15]
 22054 0014 09E0     		b	.L838
 22055              	.L839:
2953:..\src/command_processing.c ****        checksum ^= data_array[i];
 22056              		.loc 1 2953 0 discriminator 3
 22057 0016 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 22058 0018 7A68     		ldr	r2, [r7, #4]
 22059 001a 1344     		add	r3, r3, r2
 22060 001c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 22061 001e BB7B     		ldrb	r3, [r7, #14]
 22062 0020 5340     		eors	r3, r3, r2
 22063 0022 BB73     		strb	r3, [r7, #14]
2952:..\src/command_processing.c ****        checksum ^= data_array[i];
 22064              		.loc 1 2952 0 discriminator 3
 22065 0024 FB7B     		ldrb	r3, [r7, #15]
 22066 0026 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 483


 22067 0028 FB73     		strb	r3, [r7, #15]
 22068              	.L838:
2952:..\src/command_processing.c ****        checksum ^= data_array[i];
 22069              		.loc 1 2952 0 is_stmt 0 discriminator 1
 22070 002a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 22071 002c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 22072 002e 9A42     		cmp	r2, r3
 22073 0030 F1D3     		bcc	.L839
2954:..\src/command_processing.c ****   
2955:..\src/command_processing.c ****     return checksum;
 22074              		.loc 1 2955 0 is_stmt 1
 22075 0032 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
2956:..\src/command_processing.c **** }
 22076              		.loc 1 2956 0
 22077 0034 1846     		mov	r0, r3
 22078 0036 1437     		adds	r7, r7, #20
 22079              		.cfi_def_cfa_offset 4
 22080 0038 BD46     		mov	sp, r7
 22081              		.cfi_def_cfa_register 13
 22082              		@ sp needed
 22083 003a 80BC     		pop	{r7}
 22084              		.cfi_restore 7
 22085              		.cfi_def_cfa_offset 0
 22086 003c 7047     		bx	lr
 22087              		.cfi_endproc
 22088              	.LFE84:
 22089              		.size	LCRChecksum, .-LCRChecksum
 22090 003e 00BF     		.section	.text.sendAcknowledgment,"ax",%progbits
 22091              		.align	2
 22092              		.global	sendAcknowledgment
 22093              		.thumb
 22094              		.thumb_func
 22095              		.type	sendAcknowledgment, %function
 22096              	sendAcknowledgment:
 22097              	.LFB85:
2957:..\src/command_processing.c **** 
2958:..\src/command_processing.c **** 
2959:..\src/command_processing.c **** //==============================================================================
2960:..\src/command_processing.c **** //                                                       ACKNOWLEDGMENT FUNCTION
2961:..\src/command_processing.c **** //==============================================================================
2962:..\src/command_processing.c **** 
2963:..\src/command_processing.c **** void sendAcknowledgment(uint8 value) {
 22098              		.loc 1 2963 0
 22099              		.cfi_startproc
 22100              		@ args = 0, pretend = 0, frame = 16
 22101              		@ frame_needed = 1, uses_anonymous_args = 0
 22102 0000 80B5     		push	{r7, lr}
 22103              		.cfi_def_cfa_offset 8
 22104              		.cfi_offset 7, -8
 22105              		.cfi_offset 14, -4
 22106 0002 84B0     		sub	sp, sp, #16
 22107              		.cfi_def_cfa_offset 24
 22108 0004 00AF     		add	r7, sp, #0
 22109              		.cfi_def_cfa_register 7
 22110 0006 0346     		mov	r3, r0
 22111 0008 FB71     		strb	r3, [r7, #7]
2964:..\src/command_processing.c ****     int packet_lenght = 2;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 484


 22112              		.loc 1 2964 0
 22113 000a 0223     		movs	r3, #2
 22114 000c FB60     		str	r3, [r7, #12]
2965:..\src/command_processing.c ****     uint8 packet_data[2];
2966:..\src/command_processing.c **** 
2967:..\src/command_processing.c ****     packet_data[0] = value;
 22115              		.loc 1 2967 0
 22116 000e FB79     		ldrb	r3, [r7, #7]
 22117 0010 3B72     		strb	r3, [r7, #8]
2968:..\src/command_processing.c ****     packet_data[1] = value;
 22118              		.loc 1 2968 0
 22119 0012 FB79     		ldrb	r3, [r7, #7]
 22120 0014 7B72     		strb	r3, [r7, #9]
2969:..\src/command_processing.c **** 
2970:..\src/command_processing.c ****     commWrite(packet_data, packet_lenght);
 22121              		.loc 1 2970 0
 22122 0016 FB68     		ldr	r3, [r7, #12]
 22123 0018 9AB2     		uxth	r2, r3
 22124 001a 07F10803 		add	r3, r7, #8
 22125 001e 1146     		mov	r1, r2
 22126 0020 1846     		mov	r0, r3
 22127 0022 FFF7FEFF 		bl	commWrite
2971:..\src/command_processing.c **** }
 22128              		.loc 1 2971 0
 22129 0026 00BF     		nop
 22130 0028 1037     		adds	r7, r7, #16
 22131              		.cfi_def_cfa_offset 8
 22132 002a BD46     		mov	sp, r7
 22133              		.cfi_def_cfa_register 13
 22134              		@ sp needed
 22135 002c 80BD     		pop	{r7, pc}
 22136              		.cfi_endproc
 22137              	.LFE85:
 22138              		.size	sendAcknowledgment, .-sendAcknowledgment
 22139 002e 00BF     		.section	.text.memStore,"ax",%progbits
 22140              		.align	2
 22141              		.global	memStore
 22142              		.thumb
 22143              		.thumb_func
 22144              		.type	memStore, %function
 22145              	memStore:
 22146              	.LFB86:
2972:..\src/command_processing.c **** 
2973:..\src/command_processing.c **** //==============================================================================
2974:..\src/command_processing.c **** //                                                                  STORE MEMORY
2975:..\src/command_processing.c **** //==============================================================================
2976:..\src/command_processing.c **** 
2977:..\src/command_processing.c **** 
2978:..\src/command_processing.c **** uint8 memStore(int displacement)
2979:..\src/command_processing.c **** {
 22147              		.loc 1 2979 0
 22148              		.cfi_startproc
 22149              		@ args = 0, pretend = 0, frame = 24
 22150              		@ frame_needed = 1, uses_anonymous_args = 0
 22151 0000 80B5     		push	{r7, lr}
 22152              		.cfi_def_cfa_offset 8
 22153              		.cfi_offset 7, -8
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 485


 22154              		.cfi_offset 14, -4
 22155 0002 86B0     		sub	sp, sp, #24
 22156              		.cfi_def_cfa_offset 32
 22157 0004 00AF     		add	r7, sp, #0
 22158              		.cfi_def_cfa_register 7
 22159 0006 7860     		str	r0, [r7, #4]
2980:..\src/command_processing.c ****     int i;  // iterator
2981:..\src/command_processing.c ****     uint8 writeStatus;
2982:..\src/command_processing.c ****     int pages;
2983:..\src/command_processing.c ****     uint8 ret_val = 1;
 22160              		.loc 1 2983 0
 22161 0008 0123     		movs	r3, #1
 22162 000a FB74     		strb	r3, [r7, #19]
2984:..\src/command_processing.c **** 
2985:..\src/command_processing.c ****     // Disable Interrupt
2986:..\src/command_processing.c ****     ISR_RS485_RX_Disable();
 22163              		.loc 1 2986 0
 22164 000c FFF7FEFF 		bl	ISR_RS485_RX_Disable
2987:..\src/command_processing.c **** 
2988:..\src/command_processing.c ****     // Stop motor
2989:..\src/command_processing.c ****     PWM_MOTORS_WriteCompare1(0);
 22165              		.loc 1 2989 0
 22166 0010 0020     		movs	r0, #0
 22167 0012 FFF7FEFF 		bl	PWM_MOTORS_WriteCompare1
2990:..\src/command_processing.c **** 
2991:..\src/command_processing.c ****     // Update temperature information for better writing performance
2992:..\src/command_processing.c ****     EEPROM_UpdateTemperature();
 22168              		.loc 1 2992 0
 22169 0016 FFF7FEFF 		bl	EEPROM_UpdateTemperature
2993:..\src/command_processing.c **** 
2994:..\src/command_processing.c ****     memcpy( &c_mem, &g_mem, sizeof(g_mem) );
 22170              		.loc 1 2994 0
 22171 001a 1D4A     		ldr	r2, .L848
 22172 001c 1D4B     		ldr	r3, .L848+4
 22173 001e 1046     		mov	r0, r2
 22174 0020 1946     		mov	r1, r3
 22175 0022 4FF43D73 		mov	r3, #756
 22176 0026 1A46     		mov	r2, r3
 22177 0028 FFF7FEFF 		bl	memcpy
2995:..\src/command_processing.c **** 
2996:..\src/command_processing.c ****     pages = sizeof(g_mem) / 16 + (sizeof(g_mem) % 16 > 0);
 22178              		.loc 1 2996 0
 22179 002c 3023     		movs	r3, #48
 22180 002e FB60     		str	r3, [r7, #12]
2997:..\src/command_processing.c **** 
2998:..\src/command_processing.c ****     for(i = 0; i < pages; ++i) {
 22181              		.loc 1 2998 0
 22182 0030 0023     		movs	r3, #0
 22183 0032 7B61     		str	r3, [r7, #20]
 22184 0034 18E0     		b	.L843
 22185              	.L846:
2999:..\src/command_processing.c ****         writeStatus = EEPROM_Write((uint8*)&g_mem.flag + 16 * i, i + displacement);
 22186              		.loc 1 2999 0
 22187 0036 7B69     		ldr	r3, [r7, #20]
 22188 0038 1B01     		lsls	r3, r3, #4
 22189 003a 1A46     		mov	r2, r3
 22190 003c 154B     		ldr	r3, .L848+4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 486


 22191 003e D018     		adds	r0, r2, r3
 22192 0040 7B69     		ldr	r3, [r7, #20]
 22193 0042 DAB2     		uxtb	r2, r3
 22194 0044 7B68     		ldr	r3, [r7, #4]
 22195 0046 DBB2     		uxtb	r3, r3
 22196 0048 1344     		add	r3, r3, r2
 22197 004a DBB2     		uxtb	r3, r3
 22198 004c 1946     		mov	r1, r3
 22199 004e FFF7FEFF 		bl	EEPROM_Write
 22200 0052 0346     		mov	r3, r0
 22201 0054 FB72     		strb	r3, [r7, #11]
3000:..\src/command_processing.c ****         if(writeStatus != CYRET_SUCCESS) {
 22202              		.loc 1 3000 0
 22203 0056 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 22204 0058 002B     		cmp	r3, #0
 22205 005a 02D0     		beq	.L844
3001:..\src/command_processing.c ****             ret_val = 0;
 22206              		.loc 1 3001 0
 22207 005c 0023     		movs	r3, #0
 22208 005e FB74     		strb	r3, [r7, #19]
3002:..\src/command_processing.c ****             break;
 22209              		.loc 1 3002 0
 22210 0060 06E0     		b	.L845
 22211              	.L844:
2998:..\src/command_processing.c ****         writeStatus = EEPROM_Write((uint8*)&g_mem.flag + 16 * i, i + displacement);
 22212              		.loc 1 2998 0 discriminator 2
 22213 0062 7B69     		ldr	r3, [r7, #20]
 22214 0064 0133     		adds	r3, r3, #1
 22215 0066 7B61     		str	r3, [r7, #20]
 22216              	.L843:
2998:..\src/command_processing.c ****         writeStatus = EEPROM_Write((uint8*)&g_mem.flag + 16 * i, i + displacement);
 22217              		.loc 1 2998 0 is_stmt 0 discriminator 1
 22218 0068 7A69     		ldr	r2, [r7, #20]
 22219 006a FB68     		ldr	r3, [r7, #12]
 22220 006c 9A42     		cmp	r2, r3
 22221 006e E2DB     		blt	.L846
 22222              	.L845:
3003:..\src/command_processing.c ****         }
3004:..\src/command_processing.c ****     }
3005:..\src/command_processing.c **** 
3006:..\src/command_processing.c ****     memcpy( &g_mem, &c_mem, sizeof(g_mem) );
 22223              		.loc 1 3006 0 is_stmt 1
 22224 0070 084A     		ldr	r2, .L848+4
 22225 0072 074B     		ldr	r3, .L848
 22226 0074 1046     		mov	r0, r2
 22227 0076 1946     		mov	r1, r3
 22228 0078 4FF43D73 		mov	r3, #756
 22229 007c 1A46     		mov	r2, r3
 22230 007e FFF7FEFF 		bl	memcpy
3007:..\src/command_processing.c **** 
3008:..\src/command_processing.c ****     // Re-Enable Interrupt
3009:..\src/command_processing.c ****     ISR_RS485_RX_Enable();
 22231              		.loc 1 3009 0
 22232 0082 FFF7FEFF 		bl	ISR_RS485_RX_Enable
3010:..\src/command_processing.c **** 
3011:..\src/command_processing.c ****     return ret_val;
 22233              		.loc 1 3011 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 487


 22234 0086 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
3012:..\src/command_processing.c **** }
 22235              		.loc 1 3012 0
 22236 0088 1846     		mov	r0, r3
 22237 008a 1837     		adds	r7, r7, #24
 22238              		.cfi_def_cfa_offset 8
 22239 008c BD46     		mov	sp, r7
 22240              		.cfi_def_cfa_register 13
 22241              		@ sp needed
 22242 008e 80BD     		pop	{r7, pc}
 22243              	.L849:
 22244              		.align	2
 22245              	.L848:
 22246 0090 00000000 		.word	c_mem
 22247 0094 00000000 		.word	g_mem
 22248              		.cfi_endproc
 22249              	.LFE86:
 22250              		.size	memStore, .-memStore
 22251              		.section	.text.memRecall,"ax",%progbits
 22252              		.align	2
 22253              		.global	memRecall
 22254              		.thumb
 22255              		.thumb_func
 22256              		.type	memRecall, %function
 22257              	memRecall:
 22258              	.LFB87:
3013:..\src/command_processing.c **** 
3014:..\src/command_processing.c **** 
3015:..\src/command_processing.c **** //==============================================================================
3016:..\src/command_processing.c **** //                                                                 RECALL MEMORY
3017:..\src/command_processing.c **** //==============================================================================
3018:..\src/command_processing.c **** 
3019:..\src/command_processing.c **** 
3020:..\src/command_processing.c **** void memRecall(void)
3021:..\src/command_processing.c **** {
 22259              		.loc 1 3021 0
 22260              		.cfi_startproc
 22261              		@ args = 0, pretend = 0, frame = 8
 22262              		@ frame_needed = 1, uses_anonymous_args = 0
 22263 0000 80B5     		push	{r7, lr}
 22264              		.cfi_def_cfa_offset 8
 22265              		.cfi_offset 7, -8
 22266              		.cfi_offset 14, -4
 22267 0002 82B0     		sub	sp, sp, #8
 22268              		.cfi_def_cfa_offset 16
 22269 0004 00AF     		add	r7, sp, #0
 22270              		.cfi_def_cfa_register 7
3022:..\src/command_processing.c ****     uint16 i;
3023:..\src/command_processing.c **** 
3024:..\src/command_processing.c ****     for (i = 0; i < sizeof(g_mem); i++) {
 22271              		.loc 1 3024 0
 22272 0006 0023     		movs	r3, #0
 22273 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 22274 000a 0CE0     		b	.L851
 22275              	.L852:
3025:..\src/command_processing.c ****         ((reg8 *) &g_mem.flag)[i] = EEPROM_ADDR[i];
 22276              		.loc 1 3025 0 discriminator 3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 488


 22277 000c FB88     		ldrh	r3, [r7, #6]
 22278 000e 184A     		ldr	r2, .L856
 22279 0010 1344     		add	r3, r3, r2
 22280 0012 184A     		ldr	r2, .L856+4
 22281 0014 1168     		ldr	r1, [r2]
 22282 0016 FA88     		ldrh	r2, [r7, #6]
 22283 0018 0A44     		add	r2, r2, r1
 22284 001a 1278     		ldrb	r2, [r2]
 22285 001c D2B2     		uxtb	r2, r2
 22286 001e 1A70     		strb	r2, [r3]
3024:..\src/command_processing.c ****         ((reg8 *) &g_mem.flag)[i] = EEPROM_ADDR[i];
 22287              		.loc 1 3024 0 discriminator 3
 22288 0020 FB88     		ldrh	r3, [r7, #6]
 22289 0022 0133     		adds	r3, r3, #1
 22290 0024 FB80     		strh	r3, [r7, #6]	@ movhi
 22291              	.L851:
3024:..\src/command_processing.c ****         ((reg8 *) &g_mem.flag)[i] = EEPROM_ADDR[i];
 22292              		.loc 1 3024 0 is_stmt 0 discriminator 1
 22293 0026 FB88     		ldrh	r3, [r7, #6]
 22294 0028 B3F53D7F 		cmp	r3, #756
 22295 002c EED3     		bcc	.L852
3026:..\src/command_processing.c ****     }
3027:..\src/command_processing.c ****     
3028:..\src/command_processing.c ****     // Recall saved user_emg structure
3029:..\src/command_processing.c ****     memcpy( &(g_mem.emg), &(g_mem.user[g_mem.dev.user_id].user_emg), sizeof(g_mem.emg) );
 22296              		.loc 1 3029 0 is_stmt 1
 22297 002e 104B     		ldr	r3, .L856
 22298 0030 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 22299 0034 5B01     		lsls	r3, r3, #5
 22300 0036 03F51273 		add	r3, r3, #584
 22301 003a 0D4A     		ldr	r2, .L856
 22302 003c 1344     		add	r3, r3, r2
 22303 003e 1022     		movs	r2, #16
 22304 0040 1946     		mov	r1, r3
 22305 0042 0D48     		ldr	r0, .L856+8
 22306 0044 FFF7FEFF 		bl	memcpy
3030:..\src/command_processing.c **** 
3031:..\src/command_processing.c ****     //check for initialization
3032:..\src/command_processing.c ****     if (g_mem.flag == FALSE) {
 22307              		.loc 1 3032 0
 22308 0048 094B     		ldr	r3, .L856
 22309 004a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22310 004c 002B     		cmp	r3, #0
 22311 004e 02D1     		bne	.L853
3033:..\src/command_processing.c ****         memRestore();
 22312              		.loc 1 3033 0
 22313 0050 FFF7FEFF 		bl	memRestore
3034:..\src/command_processing.c ****     } else {
3035:..\src/command_processing.c ****         memcpy( &c_mem, &g_mem, sizeof(g_mem) );
3036:..\src/command_processing.c ****     }        
3037:..\src/command_processing.c **** }
 22314              		.loc 1 3037 0
 22315 0054 08E0     		b	.L855
 22316              	.L853:
3035:..\src/command_processing.c ****     }        
 22317              		.loc 1 3035 0
 22318 0056 094A     		ldr	r2, .L856+12
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 489


 22319 0058 054B     		ldr	r3, .L856
 22320 005a 1046     		mov	r0, r2
 22321 005c 1946     		mov	r1, r3
 22322 005e 4FF43D73 		mov	r3, #756
 22323 0062 1A46     		mov	r2, r3
 22324 0064 FFF7FEFF 		bl	memcpy
 22325              	.L855:
 22326              		.loc 1 3037 0
 22327 0068 00BF     		nop
 22328 006a 0837     		adds	r7, r7, #8
 22329              		.cfi_def_cfa_offset 8
 22330 006c BD46     		mov	sp, r7
 22331              		.cfi_def_cfa_register 13
 22332              		@ sp needed
 22333 006e 80BD     		pop	{r7, pc}
 22334              	.L857:
 22335              		.align	2
 22336              	.L856:
 22337 0070 00000000 		.word	g_mem
 22338 0074 00000000 		.word	EEPROM_ADDR
 22339 0078 F0010000 		.word	g_mem+496
 22340 007c 00000000 		.word	c_mem
 22341              		.cfi_endproc
 22342              	.LFE87:
 22343              		.size	memRecall, .-memRecall
 22344              		.section	.text.memRestore,"ax",%progbits
 22345              		.align	2
 22346              		.global	memRestore
 22347              		.thumb
 22348              		.thumb_func
 22349              		.type	memRestore, %function
 22350              	memRestore:
 22351              	.LFB88:
3038:..\src/command_processing.c **** 
3039:..\src/command_processing.c **** 
3040:..\src/command_processing.c **** //==============================================================================
3041:..\src/command_processing.c **** //                                                                RESTORE MEMORY
3042:..\src/command_processing.c **** //==============================================================================
3043:..\src/command_processing.c **** 
3044:..\src/command_processing.c **** 
3045:..\src/command_processing.c **** uint8 memRestore(void) {
 22352              		.loc 1 3045 0
 22353              		.cfi_startproc
 22354              		@ args = 0, pretend = 0, frame = 8
 22355              		@ frame_needed = 1, uses_anonymous_args = 0
 22356 0000 80B5     		push	{r7, lr}
 22357              		.cfi_def_cfa_offset 8
 22358              		.cfi_offset 7, -8
 22359              		.cfi_offset 14, -4
 22360 0002 82B0     		sub	sp, sp, #8
 22361              		.cfi_def_cfa_offset 16
 22362 0004 00AF     		add	r7, sp, #0
 22363              		.cfi_def_cfa_register 7
3046:..\src/command_processing.c ****     uint16 i;
3047:..\src/command_processing.c **** 
3048:..\src/command_processing.c ****     for (i = 0; i < sizeof(g_mem); i++) {
 22364              		.loc 1 3048 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 490


 22365 0006 0023     		movs	r3, #0
 22366 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 22367 000a 0EE0     		b	.L859
 22368              	.L860:
3049:..\src/command_processing.c ****         ((reg8 *) (uint8*)&g_mem.flag)[i] = EEPROM_ADDR[i + (DEFAULT_EEPROM_DISPLACEMENT * 16)];
 22369              		.loc 1 3049 0 discriminator 3
 22370 000c FB88     		ldrh	r3, [r7, #6]
 22371 000e 114A     		ldr	r2, .L863
 22372 0010 1344     		add	r3, r3, r2
 22373 0012 114A     		ldr	r2, .L863+4
 22374 0014 1168     		ldr	r1, [r2]
 22375 0016 FA88     		ldrh	r2, [r7, #6]
 22376 0018 02F54872 		add	r2, r2, #800
 22377 001c 0A44     		add	r2, r2, r1
 22378 001e 1278     		ldrb	r2, [r2]
 22379 0020 D2B2     		uxtb	r2, r2
 22380 0022 1A70     		strb	r2, [r3]
3048:..\src/command_processing.c ****         ((reg8 *) (uint8*)&g_mem.flag)[i] = EEPROM_ADDR[i + (DEFAULT_EEPROM_DISPLACEMENT * 16)];
 22381              		.loc 1 3048 0 discriminator 3
 22382 0024 FB88     		ldrh	r3, [r7, #6]
 22383 0026 0133     		adds	r3, r3, #1
 22384 0028 FB80     		strh	r3, [r7, #6]	@ movhi
 22385              	.L859:
3048:..\src/command_processing.c ****         ((reg8 *) (uint8*)&g_mem.flag)[i] = EEPROM_ADDR[i + (DEFAULT_EEPROM_DISPLACEMENT * 16)];
 22386              		.loc 1 3048 0 is_stmt 0 discriminator 1
 22387 002a FB88     		ldrh	r3, [r7, #6]
 22388 002c B3F53D7F 		cmp	r3, #756
 22389 0030 ECD3     		bcc	.L860
3050:..\src/command_processing.c ****     }
3051:..\src/command_processing.c **** 
3052:..\src/command_processing.c ****     //check for initialization
3053:..\src/command_processing.c ****     if (g_mem.flag == FALSE) {
 22390              		.loc 1 3053 0 is_stmt 1
 22391 0032 084B     		ldr	r3, .L863
 22392 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22393 0036 002B     		cmp	r3, #0
 22394 0038 03D1     		bne	.L861
3054:..\src/command_processing.c ****         return memInit();
 22395              		.loc 1 3054 0
 22396 003a FFF7FEFF 		bl	memInit
 22397 003e 0346     		mov	r3, r0
 22398 0040 03E0     		b	.L862
 22399              	.L861:
3055:..\src/command_processing.c ****     } else {
3056:..\src/command_processing.c ****         return memStore(0);
 22400              		.loc 1 3056 0
 22401 0042 0020     		movs	r0, #0
 22402 0044 FFF7FEFF 		bl	memStore
 22403 0048 0346     		mov	r3, r0
 22404              	.L862:
3057:..\src/command_processing.c ****     }  
3058:..\src/command_processing.c **** }
 22405              		.loc 1 3058 0
 22406 004a 1846     		mov	r0, r3
 22407 004c 0837     		adds	r7, r7, #8
 22408              		.cfi_def_cfa_offset 8
 22409 004e BD46     		mov	sp, r7
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 491


 22410              		.cfi_def_cfa_register 13
 22411              		@ sp needed
 22412 0050 80BD     		pop	{r7, pc}
 22413              	.L864:
 22414 0052 00BF     		.align	2
 22415              	.L863:
 22416 0054 00000000 		.word	g_mem
 22417 0058 00000000 		.word	EEPROM_ADDR
 22418              		.cfi_endproc
 22419              	.LFE88:
 22420              		.size	memRestore, .-memRestore
 22421              		.section	.rodata
 22422 202b 00       		.align	2
 22423              	.LC306:
 22424 202c 47454E30 		.ascii	"GEN001\000"
 22424      303100
 22425              		.section	.text.memInit,"ax",%progbits
 22426              		.align	2
 22427              		.global	memInit
 22428              		.thumb
 22429              		.thumb_func
 22430              		.type	memInit, %function
 22431              	memInit:
 22432              	.LFB89:
3059:..\src/command_processing.c **** 
3060:..\src/command_processing.c **** //==============================================================================
3061:..\src/command_processing.c **** //                                                                   MEMORY INIT
3062:..\src/command_processing.c **** //==============================================================================
3063:..\src/command_processing.c **** 
3064:..\src/command_processing.c **** uint8 memInit(void)
3065:..\src/command_processing.c **** {
 22433              		.loc 1 3065 0
 22434              		.cfi_startproc
 22435              		@ args = 0, pretend = 0, frame = 8
 22436              		@ frame_needed = 1, uses_anonymous_args = 0
 22437 0000 80B5     		push	{r7, lr}
 22438              		.cfi_def_cfa_offset 8
 22439              		.cfi_offset 7, -8
 22440              		.cfi_offset 14, -4
 22441 0002 82B0     		sub	sp, sp, #8
 22442              		.cfi_def_cfa_offset 16
 22443 0004 00AF     		add	r7, sp, #0
 22444              		.cfi_def_cfa_register 7
3066:..\src/command_processing.c ****     uint8 i, j;
3067:..\src/command_processing.c **** 
3068:..\src/command_processing.c ****     //initialize memory settings
3069:..\src/command_processing.c ****     for (i=0; i<15; i++){
 22445              		.loc 1 3069 0
 22446 0006 0023     		movs	r3, #0
 22447 0008 FB71     		strb	r3, [r7, #7]
 22448 000a 07E0     		b	.L866
 22449              	.L867:
3070:..\src/command_processing.c ****         g_mem.unused_bytes[i] = 0;
 22450              		.loc 1 3070 0 discriminator 3
 22451 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22452 000e B14A     		ldr	r2, .L892
 22453 0010 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 492


 22454 0012 0022     		movs	r2, #0
 22455 0014 5A70     		strb	r2, [r3, #1]
3069:..\src/command_processing.c ****         g_mem.unused_bytes[i] = 0;
 22456              		.loc 1 3069 0 discriminator 3
 22457 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22458 0018 0133     		adds	r3, r3, #1
 22459 001a FB71     		strb	r3, [r7, #7]
 22460              	.L866:
3069:..\src/command_processing.c ****         g_mem.unused_bytes[i] = 0;
 22461              		.loc 1 3069 0 is_stmt 0 discriminator 1
 22462 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22463 001e 0E2B     		cmp	r3, #14
 22464 0020 F4D9     		bls	.L867
3071:..\src/command_processing.c ****     }
3072:..\src/command_processing.c ****  
3073:..\src/command_processing.c **** // INITIALIZATION FOR ELECTROSTIMULATION FIRMWARE
3074:..\src/command_processing.c ****     
3075:..\src/command_processing.c ****     // DEV STRUCT
3076:..\src/command_processing.c ****     g_mem.dev.id                = 1;
 22465              		.loc 1 3076 0 is_stmt 1
 22466 0022 AC4B     		ldr	r3, .L892
 22467 0024 0122     		movs	r2, #1
 22468 0026 83F8A020 		strb	r2, [r3, #160]
3077:..\src/command_processing.c ****     g_mem.dev.right_left        = RIGHT_HAND;
 22469              		.loc 1 3077 0
 22470 002a AA4B     		ldr	r3, .L892
 22471 002c 0022     		movs	r2, #0
 22472 002e 83F8A720 		strb	r2, [r3, #167]
3078:..\src/command_processing.c ****     g_mem.dev.dev_type          = GENERIC_2_MOTORS;
 22473              		.loc 1 3078 0
 22474 0032 A84B     		ldr	r3, .L892
 22475 0034 0122     		movs	r2, #1
 22476 0036 83F8AC20 		strb	r2, [r3, #172]
3079:..\src/command_processing.c ****     g_mem.dev.reset_counters    = FALSE;   
 22477              		.loc 1 3079 0
 22478 003a A64B     		ldr	r3, .L892
 22479 003c 0022     		movs	r2, #0
 22480 003e 83F8A820 		strb	r2, [r3, #168]
3080:..\src/command_processing.c ****     reset_counters();                       //Initialize counters
 22481              		.loc 1 3080 0
 22482 0042 FFF7FEFF 		bl	reset_counters
3081:..\src/command_processing.c ****     for (i=0; i<EEPROM_BYTES_ROW*EEPROM_AFTER_CNT_FREE_ROWS; i++){
 22483              		.loc 1 3081 0
 22484 0046 0023     		movs	r3, #0
 22485 0048 FB71     		strb	r3, [r7, #7]
 22486 004a 08E0     		b	.L868
 22487              	.L869:
3082:..\src/command_processing.c ****         g_mem.unused_bytes1[i] = 0;
 22488              		.loc 1 3082 0 discriminator 3
 22489 004c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22490 004e A14A     		ldr	r2, .L892
 22491 0050 1344     		add	r3, r3, r2
 22492 0052 0022     		movs	r2, #0
 22493 0054 83F88020 		strb	r2, [r3, #128]
3081:..\src/command_processing.c ****     for (i=0; i<EEPROM_BYTES_ROW*EEPROM_AFTER_CNT_FREE_ROWS; i++){
 22494              		.loc 1 3081 0 discriminator 3
 22495 0058 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 493


 22496 005a 0133     		adds	r3, r3, #1
 22497 005c FB71     		strb	r3, [r7, #7]
 22498              	.L868:
3081:..\src/command_processing.c ****     for (i=0; i<EEPROM_BYTES_ROW*EEPROM_AFTER_CNT_FREE_ROWS; i++){
 22499              		.loc 1 3081 0 is_stmt 0 discriminator 1
 22500 005e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22501 0060 1F2B     		cmp	r3, #31
 22502 0062 F3D9     		bls	.L869
3083:..\src/command_processing.c ****     }
3084:..\src/command_processing.c ****     g_mem.dev.use_2nd_motor_flag = TRUE;
 22503              		.loc 1 3084 0 is_stmt 1
 22504 0064 9B4B     		ldr	r3, .L892
 22505 0066 0122     		movs	r2, #1
 22506 0068 83F8A920 		strb	r2, [r3, #169]
3085:..\src/command_processing.c **** 
3086:..\src/command_processing.c ****     // MOTOR STRUCT
3087:..\src/command_processing.c ****     for (i=0; i< NUM_OF_MOTORS; i++) {
 22507              		.loc 1 3087 0
 22508 006c 0023     		movs	r3, #0
 22509 006e FB71     		strb	r3, [r7, #7]
 22510 0070 10E1     		b	.L870
 22511              	.L873:
3088:..\src/command_processing.c ****         g_mem.motor[i].k_p           =     0 * 65536;
 22512              		.loc 1 3088 0
 22513 0072 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22514 0074 9749     		ldr	r1, .L892
 22515 0076 1346     		mov	r3, r2
 22516 0078 DB00     		lsls	r3, r3, #3
 22517 007a 9B1A     		subs	r3, r3, r2
 22518 007c 1B01     		lsls	r3, r3, #4
 22519 007e 0B44     		add	r3, r3, r1
 22520 0080 B033     		adds	r3, r3, #176
 22521 0082 0022     		movs	r2, #0
 22522 0084 1A60     		str	r2, [r3]
3089:..\src/command_processing.c ****         g_mem.motor[i].k_i           =     0 * 65536;
 22523              		.loc 1 3089 0
 22524 0086 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22525 0088 9249     		ldr	r1, .L892
 22526 008a 1346     		mov	r3, r2
 22527 008c DB00     		lsls	r3, r3, #3
 22528 008e 9B1A     		subs	r3, r3, r2
 22529 0090 1B01     		lsls	r3, r3, #4
 22530 0092 0B44     		add	r3, r3, r1
 22531 0094 B433     		adds	r3, r3, #180
 22532 0096 0022     		movs	r2, #0
 22533 0098 1A60     		str	r2, [r3]
3090:..\src/command_processing.c ****         g_mem.motor[i].k_d           =     0 * 65536;  // changed in order to avoid metallic clatte
 22534              		.loc 1 3090 0
 22535 009a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22536 009c 8D49     		ldr	r1, .L892
 22537 009e 1346     		mov	r3, r2
 22538 00a0 DB00     		lsls	r3, r3, #3
 22539 00a2 9B1A     		subs	r3, r3, r2
 22540 00a4 1B01     		lsls	r3, r3, #4
 22541 00a6 0B44     		add	r3, r3, r1
 22542 00a8 B833     		adds	r3, r3, #184
 22543 00aa 0022     		movs	r2, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 494


 22544 00ac 1A60     		str	r2, [r3]
3091:..\src/command_processing.c ****         g_mem.motor[i].k_p_c         =     0 * 65536;
 22545              		.loc 1 3091 0
 22546 00ae FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22547 00b0 8849     		ldr	r1, .L892
 22548 00b2 1346     		mov	r3, r2
 22549 00b4 DB00     		lsls	r3, r3, #3
 22550 00b6 9B1A     		subs	r3, r3, r2
 22551 00b8 1B01     		lsls	r3, r3, #4
 22552 00ba 0B44     		add	r3, r3, r1
 22553 00bc BC33     		adds	r3, r3, #188
 22554 00be 0022     		movs	r2, #0
 22555 00c0 1A60     		str	r2, [r3]
3092:..\src/command_processing.c ****         g_mem.motor[i].k_i_c         =     0 * 65536;
 22556              		.loc 1 3092 0
 22557 00c2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22558 00c4 8349     		ldr	r1, .L892
 22559 00c6 1346     		mov	r3, r2
 22560 00c8 DB00     		lsls	r3, r3, #3
 22561 00ca 9B1A     		subs	r3, r3, r2
 22562 00cc 1B01     		lsls	r3, r3, #4
 22563 00ce 0B44     		add	r3, r3, r1
 22564 00d0 C033     		adds	r3, r3, #192
 22565 00d2 0022     		movs	r2, #0
 22566 00d4 1A60     		str	r2, [r3]
3093:..\src/command_processing.c ****         g_mem.motor[i].k_d_c         =     0 * 65536;
 22567              		.loc 1 3093 0
 22568 00d6 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22569 00d8 7E49     		ldr	r1, .L892
 22570 00da 1346     		mov	r3, r2
 22571 00dc DB00     		lsls	r3, r3, #3
 22572 00de 9B1A     		subs	r3, r3, r2
 22573 00e0 1B01     		lsls	r3, r3, #4
 22574 00e2 0B44     		add	r3, r3, r1
 22575 00e4 C433     		adds	r3, r3, #196
 22576 00e6 0022     		movs	r2, #0
 22577 00e8 1A60     		str	r2, [r3]
3094:..\src/command_processing.c **** 
3095:..\src/command_processing.c ****         g_mem.motor[i].k_p_dl        =     0 * 65536;
 22578              		.loc 1 3095 0
 22579 00ea FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22580 00ec 7949     		ldr	r1, .L892
 22581 00ee 1346     		mov	r3, r2
 22582 00f0 DB00     		lsls	r3, r3, #3
 22583 00f2 9B1A     		subs	r3, r3, r2
 22584 00f4 1B01     		lsls	r3, r3, #4
 22585 00f6 0B44     		add	r3, r3, r1
 22586 00f8 C833     		adds	r3, r3, #200
 22587 00fa 0022     		movs	r2, #0
 22588 00fc 1A60     		str	r2, [r3]
3096:..\src/command_processing.c ****         g_mem.motor[i].k_i_dl        =     0 * 65536;
 22589              		.loc 1 3096 0
 22590 00fe FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22591 0100 7449     		ldr	r1, .L892
 22592 0102 1346     		mov	r3, r2
 22593 0104 DB00     		lsls	r3, r3, #3
 22594 0106 9B1A     		subs	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 495


 22595 0108 1B01     		lsls	r3, r3, #4
 22596 010a 0B44     		add	r3, r3, r1
 22597 010c CC33     		adds	r3, r3, #204
 22598 010e 0022     		movs	r2, #0
 22599 0110 1A60     		str	r2, [r3]
3097:..\src/command_processing.c ****         g_mem.motor[i].k_d_dl        =     0 * 65536;
 22600              		.loc 1 3097 0
 22601 0112 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22602 0114 6F49     		ldr	r1, .L892
 22603 0116 1346     		mov	r3, r2
 22604 0118 DB00     		lsls	r3, r3, #3
 22605 011a 9B1A     		subs	r3, r3, r2
 22606 011c 1B01     		lsls	r3, r3, #4
 22607 011e 0B44     		add	r3, r3, r1
 22608 0120 D033     		adds	r3, r3, #208
 22609 0122 0022     		movs	r2, #0
 22610 0124 1A60     		str	r2, [r3]
3098:..\src/command_processing.c ****         g_mem.motor[i].k_p_c_dl      =     0 * 65536;
 22611              		.loc 1 3098 0
 22612 0126 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22613 0128 6A49     		ldr	r1, .L892
 22614 012a 1346     		mov	r3, r2
 22615 012c DB00     		lsls	r3, r3, #3
 22616 012e 9B1A     		subs	r3, r3, r2
 22617 0130 1B01     		lsls	r3, r3, #4
 22618 0132 0B44     		add	r3, r3, r1
 22619 0134 D433     		adds	r3, r3, #212
 22620 0136 0022     		movs	r2, #0
 22621 0138 1A60     		str	r2, [r3]
3099:..\src/command_processing.c ****         g_mem.motor[i].k_i_c_dl      =     0 * 65536;
 22622              		.loc 1 3099 0
 22623 013a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22624 013c 6549     		ldr	r1, .L892
 22625 013e 1346     		mov	r3, r2
 22626 0140 DB00     		lsls	r3, r3, #3
 22627 0142 9B1A     		subs	r3, r3, r2
 22628 0144 1B01     		lsls	r3, r3, #4
 22629 0146 0B44     		add	r3, r3, r1
 22630 0148 D833     		adds	r3, r3, #216
 22631 014a 0022     		movs	r2, #0
 22632 014c 1A60     		str	r2, [r3]
3100:..\src/command_processing.c ****         g_mem.motor[i].k_d_c_dl      =     0 * 65536;
 22633              		.loc 1 3100 0
 22634 014e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22635 0150 6049     		ldr	r1, .L892
 22636 0152 1346     		mov	r3, r2
 22637 0154 DB00     		lsls	r3, r3, #3
 22638 0156 9B1A     		subs	r3, r3, r2
 22639 0158 1B01     		lsls	r3, r3, #4
 22640 015a 0B44     		add	r3, r3, r1
 22641 015c DC33     		adds	r3, r3, #220
 22642 015e 0022     		movs	r2, #0
 22643 0160 1A60     		str	r2, [r3]
3101:..\src/command_processing.c **** 
3102:..\src/command_processing.c ****         g_mem.motor[i].activ         = 1;
 22644              		.loc 1 3102 0
 22645 0162 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 496


 22646 0164 5B49     		ldr	r1, .L892
 22647 0166 1346     		mov	r3, r2
 22648 0168 DB00     		lsls	r3, r3, #3
 22649 016a 9B1A     		subs	r3, r3, r2
 22650 016c 1B01     		lsls	r3, r3, #4
 22651 016e 0B44     		add	r3, r3, r1
 22652 0170 E033     		adds	r3, r3, #224
 22653 0172 0122     		movs	r2, #1
 22654 0174 1A70     		strb	r2, [r3]
3103:..\src/command_processing.c ****         g_mem.motor[i].activate_pwm_rescaling = MAXON_24V;      //rescaling active for 12V motor
 22655              		.loc 1 3103 0
 22656 0176 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22657 0178 5649     		ldr	r1, .L892
 22658 017a 1346     		mov	r3, r2
 22659 017c DB00     		lsls	r3, r3, #3
 22660 017e 9B1A     		subs	r3, r3, r2
 22661 0180 1B01     		lsls	r3, r3, #4
 22662 0182 0B44     		add	r3, r3, r1
 22663 0184 E133     		adds	r3, r3, #225
 22664 0186 0022     		movs	r2, #0
 22665 0188 1A70     		strb	r2, [r3]
3104:..\src/command_processing.c ****         g_mem.motor[i].motor_pwm_frequency = FREQ_100HZ;        //100 Hz Frequency as Default
 22666              		.loc 1 3104 0
 22667 018a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22668 018c 5149     		ldr	r1, .L892
 22669 018e 1346     		mov	r3, r2
 22670 0190 DB00     		lsls	r3, r3, #3
 22671 0192 9B1A     		subs	r3, r3, r2
 22672 0194 1B01     		lsls	r3, r3, #4
 22673 0196 0B44     		add	r3, r3, r1
 22674 0198 E233     		adds	r3, r3, #226
 22675 019a 0122     		movs	r2, #1
 22676 019c 1A70     		strb	r2, [r3]
3105:..\src/command_processing.c ****         g_mem.motor[i].input_mode    = INPUT_MODE_EXTERNAL;
 22677              		.loc 1 3105 0
 22678 019e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22679 01a0 4C49     		ldr	r1, .L892
 22680 01a2 1346     		mov	r3, r2
 22681 01a4 DB00     		lsls	r3, r3, #3
 22682 01a6 9B1A     		subs	r3, r3, r2
 22683 01a8 1B01     		lsls	r3, r3, #4
 22684 01aa 0B44     		add	r3, r3, r1
 22685 01ac 03F58773 		add	r3, r3, #270
 22686 01b0 0022     		movs	r2, #0
 22687 01b2 1A70     		strb	r2, [r3]
3106:..\src/command_processing.c ****         g_mem.motor[i].control_mode  = CONTROL_PWM;
 22688              		.loc 1 3106 0
 22689 01b4 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22690 01b6 4749     		ldr	r1, .L892
 22691 01b8 1346     		mov	r3, r2
 22692 01ba DB00     		lsls	r3, r3, #3
 22693 01bc 9B1A     		subs	r3, r3, r2
 22694 01be 1B01     		lsls	r3, r3, #4
 22695 01c0 0B44     		add	r3, r3, r1
 22696 01c2 03F20F13 		addw	r3, r3, #271
 22697 01c6 0122     		movs	r2, #1
 22698 01c8 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 497


3107:..\src/command_processing.c ****         g_mem.motor[i].max_step_pos = 0;
 22699              		.loc 1 3107 0
 22700 01ca FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22701 01cc 4149     		ldr	r1, .L892
 22702 01ce 1346     		mov	r3, r2
 22703 01d0 DB00     		lsls	r3, r3, #3
 22704 01d2 9B1A     		subs	r3, r3, r2
 22705 01d4 1B01     		lsls	r3, r3, #4
 22706 01d6 0B44     		add	r3, r3, r1
 22707 01d8 F033     		adds	r3, r3, #240
 22708 01da 0022     		movs	r2, #0
 22709 01dc 1A60     		str	r2, [r3]
3108:..\src/command_processing.c ****         g_mem.motor[i].max_step_neg = 0;
 22710              		.loc 1 3108 0
 22711 01de FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22712 01e0 3C49     		ldr	r1, .L892
 22713 01e2 1346     		mov	r3, r2
 22714 01e4 DB00     		lsls	r3, r3, #3
 22715 01e6 9B1A     		subs	r3, r3, r2
 22716 01e8 1B01     		lsls	r3, r3, #4
 22717 01ea 0B44     		add	r3, r3, r1
 22718 01ec EC33     		adds	r3, r3, #236
 22719 01ee 0022     		movs	r2, #0
 22720 01f0 1A60     		str	r2, [r3]
3109:..\src/command_processing.c ****         for(j = 0; j < LOOKUP_DIM; j++) {
 22721              		.loc 1 3109 0
 22722 01f2 0023     		movs	r3, #0
 22723 01f4 BB71     		strb	r3, [r7, #6]
 22724 01f6 10E0     		b	.L871
 22725              	.L872:
3110:..\src/command_processing.c ****             g_mem.motor[i].curr_lookup[j] = 0;
 22726              		.loc 1 3110 0 discriminator 3
 22727 01f8 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22728 01fa B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 22729 01fc 3548     		ldr	r0, .L892
 22730 01fe 1346     		mov	r3, r2
 22731 0200 DB00     		lsls	r3, r3, #3
 22732 0202 9B1A     		subs	r3, r3, r2
 22733 0204 9B00     		lsls	r3, r3, #2
 22734 0206 0B44     		add	r3, r3, r1
 22735 0208 3C33     		adds	r3, r3, #60
 22736 020a 9B00     		lsls	r3, r3, #2
 22737 020c 0344     		add	r3, r3, r0
 22738 020e 4FF00002 		mov	r2, #0
 22739 0212 5A60     		str	r2, [r3, #4]	@ float
3109:..\src/command_processing.c ****         for(j = 0; j < LOOKUP_DIM; j++) {
 22740              		.loc 1 3109 0 discriminator 3
 22741 0214 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22742 0216 0133     		adds	r3, r3, #1
 22743 0218 BB71     		strb	r3, [r7, #6]
 22744              	.L871:
3109:..\src/command_processing.c ****         for(j = 0; j < LOOKUP_DIM; j++) {
 22745              		.loc 1 3109 0 is_stmt 0 discriminator 1
 22746 021a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22747 021c 052B     		cmp	r3, #5
 22748 021e EBD9     		bls	.L872
3111:..\src/command_processing.c ****         }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 498


3112:..\src/command_processing.c ****         g_mem.motor[i].current_limit = DEFAULT_CURRENT_LIMIT;
 22749              		.loc 1 3112 0 is_stmt 1 discriminator 2
 22750 0220 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22751 0222 2C49     		ldr	r1, .L892
 22752 0224 1346     		mov	r3, r2
 22753 0226 DB00     		lsls	r3, r3, #3
 22754 0228 9B1A     		subs	r3, r3, r2
 22755 022a 1B01     		lsls	r3, r3, #4
 22756 022c 0B44     		add	r3, r3, r1
 22757 022e 03F58673 		add	r3, r3, #268
 22758 0232 40F2DC52 		movw	r2, #1500
 22759 0236 1A80     		strh	r2, [r3]	@ movhi
3113:..\src/command_processing.c ****         g_mem.motor[i].encoder_line = i;    
 22760              		.loc 1 3113 0 discriminator 2
 22761 0238 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22762 023a 2649     		ldr	r1, .L892
 22763 023c 1346     		mov	r3, r2
 22764 023e DB00     		lsls	r3, r3, #3
 22765 0240 9B1A     		subs	r3, r3, r2
 22766 0242 1B01     		lsls	r3, r3, #4
 22767 0244 0B44     		add	r3, r3, r1
 22768 0246 03F58873 		add	r3, r3, #272
 22769 024a FA79     		ldrb	r2, [r7, #7]
 22770 024c 1A70     		strb	r2, [r3]
3114:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_flag = 0;
 22771              		.loc 1 3114 0 discriminator 2
 22772 024e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22773 0250 2049     		ldr	r1, .L892
 22774 0252 1346     		mov	r3, r2
 22775 0254 DB00     		lsls	r3, r3, #3
 22776 0256 9B1A     		subs	r3, r3, r2
 22777 0258 1B01     		lsls	r3, r3, #4
 22778 025a 0B44     		add	r3, r3, r1
 22779 025c E333     		adds	r3, r3, #227
 22780 025e 0022     		movs	r2, #0
 22781 0260 1A70     		strb	r2, [r3]
3115:..\src/command_processing.c ****         
3116:..\src/command_processing.c ****         g_mem.motor[i].pwm_rate_limiter = PWM_RATE_LIMITER_MAX;
 22782              		.loc 1 3116 0 discriminator 2
 22783 0262 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22784 0264 1B49     		ldr	r1, .L892
 22785 0266 1346     		mov	r3, r2
 22786 0268 DB00     		lsls	r3, r3, #3
 22787 026a 9B1A     		subs	r3, r3, r2
 22788 026c 1B01     		lsls	r3, r3, #4
 22789 026e 0B44     		add	r3, r3, r1
 22790 0270 03F21113 		addw	r3, r3, #273
 22791 0274 0122     		movs	r2, #1
 22792 0276 1A70     		strb	r2, [r3]
3117:..\src/command_processing.c ****         g_mem.motor[i].not_revers_motor_flag = FALSE;       // Generic reversible motor  
 22793              		.loc 1 3117 0 discriminator 2
 22794 0278 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22795 027a 1649     		ldr	r1, .L892
 22796 027c 1346     		mov	r3, r2
 22797 027e DB00     		lsls	r3, r3, #3
 22798 0280 9B1A     		subs	r3, r3, r2
 22799 0282 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 499


 22800 0284 0B44     		add	r3, r3, r1
 22801 0286 03F58973 		add	r3, r3, #274
 22802 028a 0022     		movs	r2, #0
 22803 028c 1A70     		strb	r2, [r3]
3087:..\src/command_processing.c ****         g_mem.motor[i].k_p           =     0 * 65536;
 22804              		.loc 1 3087 0 discriminator 2
 22805 028e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22806 0290 0133     		adds	r3, r3, #1
 22807 0292 FB71     		strb	r3, [r7, #7]
 22808              	.L870:
3087:..\src/command_processing.c ****         g_mem.motor[i].k_p           =     0 * 65536;
 22809              		.loc 1 3087 0 is_stmt 0 discriminator 1
 22810 0294 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22811 0296 012B     		cmp	r3, #1
 22812 0298 7FF6EBAE 		bls	.L873
3118:..\src/command_processing.c ****     }
3119:..\src/command_processing.c ****     
3120:..\src/command_processing.c ****     // ENC STRUCT
3121:..\src/command_processing.c ****     for (i = 0; i< N_ENCODER_LINE_MAX; i++){
 22813              		.loc 1 3121 0 is_stmt 1
 22814 029c 0023     		movs	r3, #0
 22815 029e FB71     		strb	r3, [r7, #7]
 22816 02a0 97E0     		b	.L874
 22817              	.L881:
3122:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 22818              		.loc 1 3122 0
 22819 02a2 0023     		movs	r3, #0
 22820 02a4 BB71     		strb	r3, [r7, #6]
 22821 02a6 0FE0     		b	.L875
 22822              	.L876:
3123:..\src/command_processing.c ****             g_mem.enc[i].Enc_raw_read_conf[j] = 0;
 22823              		.loc 1 3123 0 discriminator 3
 22824 02a8 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22825 02aa B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 22826 02ac 0948     		ldr	r0, .L892
 22827 02ae 1346     		mov	r3, r2
 22828 02b0 5B00     		lsls	r3, r3, #1
 22829 02b2 1344     		add	r3, r3, r2
 22830 02b4 1B01     		lsls	r3, r3, #4
 22831 02b6 0344     		add	r3, r3, r0
 22832 02b8 0B44     		add	r3, r3, r1
 22833 02ba 03F5C873 		add	r3, r3, #400
 22834 02be 0022     		movs	r2, #0
 22835 02c0 1A70     		strb	r2, [r3]
3122:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 22836              		.loc 1 3122 0 discriminator 3
 22837 02c2 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22838 02c4 0133     		adds	r3, r3, #1
 22839 02c6 BB71     		strb	r3, [r7, #6]
 22840              	.L875:
3122:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 22841              		.loc 1 3122 0 is_stmt 0 discriminator 1
 22842 02c8 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22843 02ca 042B     		cmp	r3, #4
 22844 02cc ECD9     		bls	.L876
3124:..\src/command_processing.c ****         }
3125:..\src/command_processing.c ****         for(j = 0; j < NUM_OF_SENSORS; j++){
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 500


 22845              		.loc 1 3125 0 is_stmt 1
 22846 02ce 0023     		movs	r3, #0
 22847 02d0 BB71     		strb	r3, [r7, #6]
 22848 02d2 2BE0     		b	.L877
 22849              	.L893:
 22850              		.align	2
 22851              	.L892:
 22852 02d4 00000000 		.word	g_mem
 22853              	.L878:
3126:..\src/command_processing.c ****             g_mem.enc[i].res[j] = 3;
 22854              		.loc 1 3126 0 discriminator 3
 22855 02d8 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22856 02da B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 22857 02dc C948     		ldr	r0, .L894
 22858 02de 1346     		mov	r3, r2
 22859 02e0 5B00     		lsls	r3, r3, #1
 22860 02e2 1344     		add	r3, r3, r2
 22861 02e4 1B01     		lsls	r3, r3, #4
 22862 02e6 0344     		add	r3, r3, r0
 22863 02e8 0B44     		add	r3, r3, r1
 22864 02ea 03F29513 		addw	r3, r3, #405
 22865 02ee 0322     		movs	r2, #3
 22866 02f0 1A70     		strb	r2, [r3]
3127:..\src/command_processing.c ****             g_mem.enc[i].m_mult[j] = 1;
 22867              		.loc 1 3127 0 discriminator 3
 22868 02f2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22869 02f4 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 22870 02f6 C348     		ldr	r0, .L894
 22871 02f8 1346     		mov	r3, r2
 22872 02fa 5B00     		lsls	r3, r3, #1
 22873 02fc 1344     		add	r3, r3, r2
 22874 02fe 9B00     		lsls	r3, r3, #2
 22875 0300 0B44     		add	r3, r3, r1
 22876 0302 6833     		adds	r3, r3, #104
 22877 0304 9B00     		lsls	r3, r3, #2
 22878 0306 0344     		add	r3, r3, r0
 22879 0308 4FF07E52 		mov	r2, #1065353216
 22880 030c 5A60     		str	r2, [r3, #4]	@ float
3128:..\src/command_processing.c ****             g_mem.enc[i].m_off[j] = (int32)0 << g_mem.enc[i].res[j];
 22881              		.loc 1 3128 0 discriminator 3
 22882 030e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22883 0310 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 22884 0312 BC48     		ldr	r0, .L894
 22885 0314 1346     		mov	r3, r2
 22886 0316 5B00     		lsls	r3, r3, #1
 22887 0318 1344     		add	r3, r3, r2
 22888 031a 9B00     		lsls	r3, r3, #2
 22889 031c 0B44     		add	r3, r3, r1
 22890 031e 6633     		adds	r3, r3, #102
 22891 0320 0022     		movs	r2, #0
 22892 0322 40F82320 		str	r2, [r0, r3, lsl #2]
3125:..\src/command_processing.c ****             g_mem.enc[i].res[j] = 3;
 22893              		.loc 1 3125 0 discriminator 3
 22894 0326 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22895 0328 0133     		adds	r3, r3, #1
 22896 032a BB71     		strb	r3, [r7, #6]
 22897              	.L877:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 501


3125:..\src/command_processing.c ****             g_mem.enc[i].res[j] = 3;
 22898              		.loc 1 3125 0 is_stmt 0 discriminator 1
 22899 032c BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22900 032e 022B     		cmp	r3, #2
 22901 0330 D2D9     		bls	.L878
3129:..\src/command_processing.c ****         }
3130:..\src/command_processing.c ****         g_mem.enc[i].double_encoder_on_off = FALSE;
 22902              		.loc 1 3130 0 is_stmt 1
 22903 0332 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22904 0334 B349     		ldr	r1, .L894
 22905 0336 1346     		mov	r3, r2
 22906 0338 5B00     		lsls	r3, r3, #1
 22907 033a 1344     		add	r3, r3, r2
 22908 033c 1B01     		lsls	r3, r3, #4
 22909 033e 0B44     		add	r3, r3, r1
 22910 0340 03F5D873 		add	r3, r3, #432
 22911 0344 0022     		movs	r2, #0
 22912 0346 1A70     		strb	r2, [r3]
3131:..\src/command_processing.c ****         g_mem.enc[i].motor_handle_ratio = 22;     
 22913              		.loc 1 3131 0
 22914 0348 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22915 034a AE49     		ldr	r1, .L894
 22916 034c 1346     		mov	r3, r2
 22917 034e 5B00     		lsls	r3, r3, #1
 22918 0350 1344     		add	r3, r3, r2
 22919 0352 1B01     		lsls	r3, r3, #4
 22920 0354 0B44     		add	r3, r3, r1
 22921 0356 03F5DA73 		add	r3, r3, #436
 22922 035a 1622     		movs	r2, #22
 22923 035c 1A70     		strb	r2, [r3]
3132:..\src/command_processing.c ****         for(j = 0; j < NUM_OF_SENSORS; j++){
 22924              		.loc 1 3132 0
 22925 035e 0023     		movs	r3, #0
 22926 0360 BB71     		strb	r3, [r7, #6]
 22927 0362 0FE0     		b	.L879
 22928              	.L880:
3133:..\src/command_processing.c ****             g_mem.enc[i].Enc_idx_use_for_control[j] = j;    // First encoder is that with index 0 a
 22929              		.loc 1 3133 0 discriminator 3
 22930 0364 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22931 0366 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 22932 0368 A648     		ldr	r0, .L894
 22933 036a 1346     		mov	r3, r2
 22934 036c 5B00     		lsls	r3, r3, #1
 22935 036e 1344     		add	r3, r3, r2
 22936 0370 1B01     		lsls	r3, r3, #4
 22937 0372 0344     		add	r3, r3, r0
 22938 0374 0B44     		add	r3, r3, r1
 22939 0376 03F2B113 		addw	r3, r3, #433
 22940 037a BA79     		ldrb	r2, [r7, #6]
 22941 037c 1A70     		strb	r2, [r3]
3132:..\src/command_processing.c ****         for(j = 0; j < NUM_OF_SENSORS; j++){
 22942              		.loc 1 3132 0 discriminator 3
 22943 037e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22944 0380 0133     		adds	r3, r3, #1
 22945 0382 BB71     		strb	r3, [r7, #6]
 22946              	.L879:
3132:..\src/command_processing.c ****         for(j = 0; j < NUM_OF_SENSORS; j++){
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 502


 22947              		.loc 1 3132 0 is_stmt 0 discriminator 1
 22948 0384 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22949 0386 022B     		cmp	r3, #2
 22950 0388 ECD9     		bls	.L880
3134:..\src/command_processing.c ****         }
3135:..\src/command_processing.c ****         g_mem.enc[i].gears_params[0] = 15;     
 22951              		.loc 1 3135 0 is_stmt 1 discriminator 2
 22952 038a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22953 038c 9D49     		ldr	r1, .L894
 22954 038e 1346     		mov	r3, r2
 22955 0390 5B00     		lsls	r3, r3, #1
 22956 0392 1344     		add	r3, r3, r2
 22957 0394 1B01     		lsls	r3, r3, #4
 22958 0396 0B44     		add	r3, r3, r1
 22959 0398 03F2B513 		addw	r3, r3, #437
 22960 039c 0F22     		movs	r2, #15
 22961 039e 1A70     		strb	r2, [r3]
3136:..\src/command_processing.c ****         g_mem.enc[i].gears_params[1] = 14;     
 22962              		.loc 1 3136 0 discriminator 2
 22963 03a0 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22964 03a2 9849     		ldr	r1, .L894
 22965 03a4 1346     		mov	r3, r2
 22966 03a6 5B00     		lsls	r3, r3, #1
 22967 03a8 1344     		add	r3, r3, r2
 22968 03aa 1B01     		lsls	r3, r3, #4
 22969 03ac 0B44     		add	r3, r3, r1
 22970 03ae 03F5DB73 		add	r3, r3, #438
 22971 03b2 0E22     		movs	r2, #14
 22972 03b4 1A70     		strb	r2, [r3]
3137:..\src/command_processing.c ****         g_mem.enc[i].gears_params[2] = 1;  
 22973              		.loc 1 3137 0 discriminator 2
 22974 03b6 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22975 03b8 9249     		ldr	r1, .L894
 22976 03ba 1346     		mov	r3, r2
 22977 03bc 5B00     		lsls	r3, r3, #1
 22978 03be 1344     		add	r3, r3, r2
 22979 03c0 1B01     		lsls	r3, r3, #4
 22980 03c2 0B44     		add	r3, r3, r1
 22981 03c4 03F2B713 		addw	r3, r3, #439
 22982 03c8 0122     		movs	r2, #1
 22983 03ca 1A70     		strb	r2, [r3]
3121:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 22984              		.loc 1 3121 0 discriminator 2
 22985 03cc FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22986 03ce 0133     		adds	r3, r3, #1
 22987 03d0 FB71     		strb	r3, [r7, #7]
 22988              	.L874:
3121:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 22989              		.loc 1 3121 0 is_stmt 0 discriminator 1
 22990 03d2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22991 03d4 012B     		cmp	r3, #1
 22992 03d6 7FF664AF 		bls	.L881
3138:..\src/command_processing.c ****     }
3139:..\src/command_processing.c ****     
3140:..\src/command_processing.c ****     for (i=0; i< NUM_OF_MOTORS; i++) {
 22993              		.loc 1 3140 0 is_stmt 1
 22994 03da 0023     		movs	r3, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 503


 22995 03dc FB71     		strb	r3, [r7, #7]
 22996 03de 2EE0     		b	.L882
 22997              	.L883:
3141:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_inf = 0;
 22998              		.loc 1 3141 0 discriminator 3
 22999 03e0 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 23000 03e2 8849     		ldr	r1, .L894
 23001 03e4 1346     		mov	r3, r2
 23002 03e6 DB00     		lsls	r3, r3, #3
 23003 03e8 9B1A     		subs	r3, r3, r2
 23004 03ea 1B01     		lsls	r3, r3, #4
 23005 03ec 0B44     		add	r3, r3, r1
 23006 03ee E433     		adds	r3, r3, #228
 23007 03f0 0022     		movs	r2, #0
 23008 03f2 1A60     		str	r2, [r3]
3142:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_sup = (int32)19000 << g_mem.enc[g_mem.motor[i].encoder_line].res[0];
 23009              		.loc 1 3142 0 discriminator 3
 23010 03f4 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 23011 03f6 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 23012 03f8 8248     		ldr	r0, .L894
 23013 03fa 0B46     		mov	r3, r1
 23014 03fc DB00     		lsls	r3, r3, #3
 23015 03fe 5B1A     		subs	r3, r3, r1
 23016 0400 1B01     		lsls	r3, r3, #4
 23017 0402 0344     		add	r3, r3, r0
 23018 0404 03F58873 		add	r3, r3, #272
 23019 0408 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23020 040a 1846     		mov	r0, r3
 23021 040c 7D49     		ldr	r1, .L894
 23022 040e 0346     		mov	r3, r0
 23023 0410 5B00     		lsls	r3, r3, #1
 23024 0412 0344     		add	r3, r3, r0
 23025 0414 1B01     		lsls	r3, r3, #4
 23026 0416 0B44     		add	r3, r3, r1
 23027 0418 03F29513 		addw	r3, r3, #405
 23028 041c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23029 041e 1946     		mov	r1, r3
 23030 0420 44F63823 		movw	r3, #19000
 23031 0424 03FA01F1 		lsl	r1, r3, r1
 23032 0428 7648     		ldr	r0, .L894
 23033 042a 1346     		mov	r3, r2
 23034 042c DB00     		lsls	r3, r3, #3
 23035 042e 9B1A     		subs	r3, r3, r2
 23036 0430 1B01     		lsls	r3, r3, #4
 23037 0432 0344     		add	r3, r3, r0
 23038 0434 E833     		adds	r3, r3, #232
 23039 0436 1960     		str	r1, [r3]
3140:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_inf = 0;
 23040              		.loc 1 3140 0 discriminator 3
 23041 0438 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 23042 043a 0133     		adds	r3, r3, #1
 23043 043c FB71     		strb	r3, [r7, #7]
 23044              	.L882:
3140:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_inf = 0;
 23045              		.loc 1 3140 0 is_stmt 0 discriminator 1
 23046 043e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 23047 0440 012B     		cmp	r3, #1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 504


 23048 0442 CDD9     		bls	.L883
3143:..\src/command_processing.c ****     }
3144:..\src/command_processing.c ****     
3145:..\src/command_processing.c ****     // EMG STRUCT     
3146:..\src/command_processing.c ****     g_mem.emg.emg_threshold[0] = 200;
 23049              		.loc 1 3146 0 is_stmt 1
 23050 0444 6F4B     		ldr	r3, .L894
 23051 0446 C822     		movs	r2, #200
 23052 0448 A3F8F021 		strh	r2, [r3, #496]	@ movhi
3147:..\src/command_processing.c ****     g_mem.emg.emg_threshold[1] = 200;
 23053              		.loc 1 3147 0
 23054 044c 6D4B     		ldr	r3, .L894
 23055 044e C822     		movs	r2, #200
 23056 0450 A3F8F221 		strh	r2, [r3, #498]	@ movhi
3148:..\src/command_processing.c ****     g_mem.emg.emg_max_value[0] = 1024;
 23057              		.loc 1 3148 0
 23058 0454 6B4B     		ldr	r3, .L894
 23059 0456 4FF48062 		mov	r2, #1024
 23060 045a C3F8F421 		str	r2, [r3, #500]
3149:..\src/command_processing.c ****     g_mem.emg.emg_max_value[1] = 1024;   
 23061              		.loc 1 3149 0
 23062 045e 694B     		ldr	r3, .L894
 23063 0460 4FF48062 		mov	r2, #1024
 23064 0464 C3F8F821 		str	r2, [r3, #504]
3150:..\src/command_processing.c ****     g_mem.emg.emg_speed[0] = 100; 
 23065              		.loc 1 3150 0
 23066 0468 664B     		ldr	r3, .L894
 23067 046a 6422     		movs	r2, #100
 23068 046c 83F8FC21 		strb	r2, [r3, #508]
3151:..\src/command_processing.c ****     g_mem.emg.emg_speed[1] = 100; 
 23069              		.loc 1 3151 0
 23070 0470 644B     		ldr	r3, .L894
 23071 0472 6422     		movs	r2, #100
 23072 0474 83F8FD21 		strb	r2, [r3, #509]
3152:..\src/command_processing.c ****     g_mem.emg.emg_calibration_flag = 0;      // EMG calibration disabled by default
 23073              		.loc 1 3152 0
 23074 0478 624B     		ldr	r3, .L894
 23075 047a 0022     		movs	r2, #0
 23076 047c 83F8FE21 		strb	r2, [r3, #510]
3153:..\src/command_processing.c ****     g_mem.emg.switch_emg = 0;    
 23077              		.loc 1 3153 0
 23078 0480 604B     		ldr	r3, .L894
 23079 0482 0022     		movs	r2, #0
 23080 0484 83F8FF21 		strb	r2, [r3, #511]
3154:..\src/command_processing.c **** 
3155:..\src/command_processing.c ****     // IMU STRUCT
3156:..\src/command_processing.c ****     g_mem.imu.read_imu_flag = FALSE;
 23081              		.loc 1 3156 0
 23082 0488 5E4B     		ldr	r3, .L894
 23083 048a 0022     		movs	r2, #0
 23084 048c 83F80022 		strb	r2, [r3, #512]
3157:..\src/command_processing.c ****     g_mem.imu.SPI_read_delay = 0;       // 0 - No delay
 23085              		.loc 1 3157 0
 23086 0490 5C4B     		ldr	r3, .L894
 23087 0492 0022     		movs	r2, #0
 23088 0494 83F80122 		strb	r2, [r3, #513]
3158:..\src/command_processing.c ****     for (i = 0; i< N_IMU_MAX; i++){
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 505


 23089              		.loc 1 3158 0
 23090 0498 0023     		movs	r3, #0
 23091 049a FB71     		strb	r3, [r7, #7]
 23092 049c 34E0     		b	.L884
 23093              	.L885:
3159:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][0] = 1;   // Accelerometers
 23094              		.loc 1 3159 0 discriminator 3
 23095 049e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 23096 04a0 5849     		ldr	r1, .L894
 23097 04a2 1346     		mov	r3, r2
 23098 04a4 9B00     		lsls	r3, r3, #2
 23099 04a6 1344     		add	r3, r3, r2
 23100 04a8 0B44     		add	r3, r3, r1
 23101 04aa 03F20223 		addw	r3, r3, #514
 23102 04ae 0122     		movs	r2, #1
 23103 04b0 1A70     		strb	r2, [r3]
3160:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][1] = 1;   // Gyroscopes
 23104              		.loc 1 3160 0 discriminator 3
 23105 04b2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 23106 04b4 5349     		ldr	r1, .L894
 23107 04b6 1346     		mov	r3, r2
 23108 04b8 9B00     		lsls	r3, r3, #2
 23109 04ba 1344     		add	r3, r3, r2
 23110 04bc 0B44     		add	r3, r3, r1
 23111 04be 03F20323 		addw	r3, r3, #515
 23112 04c2 0122     		movs	r2, #1
 23113 04c4 1A70     		strb	r2, [r3]
3161:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][2] = 0;   // Magnetometers
 23114              		.loc 1 3161 0 discriminator 3
 23115 04c6 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 23116 04c8 4E49     		ldr	r1, .L894
 23117 04ca 1346     		mov	r3, r2
 23118 04cc 9B00     		lsls	r3, r3, #2
 23119 04ce 1344     		add	r3, r3, r2
 23120 04d0 0B44     		add	r3, r3, r1
 23121 04d2 03F50173 		add	r3, r3, #516
 23122 04d6 0022     		movs	r2, #0
 23123 04d8 1A70     		strb	r2, [r3]
3162:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][3] = 0;   // Quaternions
 23124              		.loc 1 3162 0 discriminator 3
 23125 04da FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 23126 04dc 4949     		ldr	r1, .L894
 23127 04de 1346     		mov	r3, r2
 23128 04e0 9B00     		lsls	r3, r3, #2
 23129 04e2 1344     		add	r3, r3, r2
 23130 04e4 0B44     		add	r3, r3, r1
 23131 04e6 03F20523 		addw	r3, r3, #517
 23132 04ea 0022     		movs	r2, #0
 23133 04ec 1A70     		strb	r2, [r3]
3163:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][4] = 0;   // Temperatures
 23134              		.loc 1 3163 0 discriminator 3
 23135 04ee FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 23136 04f0 4449     		ldr	r1, .L894
 23137 04f2 1346     		mov	r3, r2
 23138 04f4 9B00     		lsls	r3, r3, #2
 23139 04f6 1344     		add	r3, r3, r2
 23140 04f8 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 506


 23141 04fa 03F20623 		addw	r3, r3, #518
 23142 04fe 0022     		movs	r2, #0
 23143 0500 1A70     		strb	r2, [r3]
3158:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][0] = 1;   // Accelerometers
 23144              		.loc 1 3158 0 discriminator 3
 23145 0502 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 23146 0504 0133     		adds	r3, r3, #1
 23147 0506 FB71     		strb	r3, [r7, #7]
 23148              	.L884:
3158:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][0] = 1;   // Accelerometers
 23149              		.loc 1 3158 0 is_stmt 0 discriminator 1
 23150 0508 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 23151 050a 042B     		cmp	r3, #4
 23152 050c C7D9     		bls	.L885
3164:..\src/command_processing.c ****     }
3165:..\src/command_processing.c ****      
3166:..\src/command_processing.c ****     // EXP STRUCT
3167:..\src/command_processing.c ****     g_mem.exp.read_exp_port_flag = EXP_NONE;       // 0 - None
 23153              		.loc 1 3167 0 is_stmt 1
 23154 050e 3D4B     		ldr	r3, .L894
 23155 0510 0022     		movs	r2, #0
 23156 0512 83F82622 		strb	r2, [r3, #550]
3168:..\src/command_processing.c ****     strcpy(g_mem.user[g_mem.dev.user_id].user_code_string, "GEN001");
 23157              		.loc 1 3168 0
 23158 0516 3B4B     		ldr	r3, .L894
 23159 0518 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 23160 051c 1233     		adds	r3, r3, #18
 23161 051e 5B01     		lsls	r3, r3, #5
 23162 0520 384A     		ldr	r2, .L894
 23163 0522 1344     		add	r3, r3, r2
 23164 0524 384A     		ldr	r2, .L894+4
 23165 0526 1068     		ldr	r0, [r2]	@ unaligned
 23166 0528 1860     		str	r0, [r3]	@ unaligned
 23167 052a 9188     		ldrh	r1, [r2, #4]	@ unaligned
 23168 052c 9279     		ldrb	r2, [r2, #6]
 23169 052e 9980     		strh	r1, [r3, #4]	@ unaligned
 23170 0530 9A71     		strb	r2, [r3, #6]
3169:..\src/command_processing.c ****     if (g_mem.exp.read_exp_port_flag == EXP_SD_RTC) {
 23171              		.loc 1 3169 0
 23172 0532 344B     		ldr	r3, .L894
 23173 0534 93F82632 		ldrb	r3, [r3, #550]	@ zero_extendqisi2
 23174 0538 012B     		cmp	r3, #1
 23175 053a 13D1     		bne	.L886
3170:..\src/command_processing.c ****         // Set date of maintenance from RTC
3171:..\src/command_processing.c ****         store_RTC_current_time();
 23176              		.loc 1 3171 0
 23177 053c FFF7FEFF 		bl	store_RTC_current_time
3172:..\src/command_processing.c ****         
3173:..\src/command_processing.c ****         g_mem.dev.stats_period_begin_date[0] = g_mem.exp.curr_time[0];
 23178              		.loc 1 3173 0
 23179 0540 304B     		ldr	r3, .L894
 23180 0542 93F82022 		ldrb	r2, [r3, #544]	@ zero_extendqisi2
 23181 0546 2F4B     		ldr	r3, .L894
 23182 0548 83F8A420 		strb	r2, [r3, #164]
3174:..\src/command_processing.c ****         g_mem.dev.stats_period_begin_date[1] = g_mem.exp.curr_time[1];
 23183              		.loc 1 3174 0
 23184 054c 2D4B     		ldr	r3, .L894
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 507


 23185 054e 93F82122 		ldrb	r2, [r3, #545]	@ zero_extendqisi2
 23186 0552 2C4B     		ldr	r3, .L894
 23187 0554 83F8A520 		strb	r2, [r3, #165]
3175:..\src/command_processing.c ****         g_mem.dev.stats_period_begin_date[2] = g_mem.exp.curr_time[2];
 23188              		.loc 1 3175 0
 23189 0558 2A4B     		ldr	r3, .L894
 23190 055a 93F82222 		ldrb	r2, [r3, #546]	@ zero_extendqisi2
 23191 055e 294B     		ldr	r3, .L894
 23192 0560 83F8A620 		strb	r2, [r3, #166]
 23193              	.L886:
3176:..\src/command_processing.c ****     }
3177:..\src/command_processing.c ****     g_mem.exp.read_ADC_sensors_port_flag = FALSE;
 23194              		.loc 1 3177 0
 23195 0564 274B     		ldr	r3, .L894
 23196 0566 0022     		movs	r2, #0
 23197 0568 83F82722 		strb	r2, [r3, #551]
3178:..\src/command_processing.c ****     for (i = 0; i < NUM_OF_ADC_CHANNELS_MAX; i++) {
 23198              		.loc 1 3178 0
 23199 056c 0023     		movs	r3, #0
 23200 056e FB71     		strb	r3, [r7, #7]
 23201 0570 08E0     		b	.L887
 23202              	.L888:
3179:..\src/command_processing.c ****         g_mem.exp.ADC_conf[i] = 0;
 23203              		.loc 1 3179 0 discriminator 3
 23204 0572 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 23205 0574 234A     		ldr	r2, .L894
 23206 0576 1344     		add	r3, r3, r2
 23207 0578 0022     		movs	r2, #0
 23208 057a 83F82822 		strb	r2, [r3, #552]
3178:..\src/command_processing.c ****     for (i = 0; i < NUM_OF_ADC_CHANNELS_MAX; i++) {
 23209              		.loc 1 3178 0 discriminator 3
 23210 057e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 23211 0580 0133     		adds	r3, r3, #1
 23212 0582 FB71     		strb	r3, [r7, #7]
 23213              	.L887:
3178:..\src/command_processing.c ****     for (i = 0; i < NUM_OF_ADC_CHANNELS_MAX; i++) {
 23214              		.loc 1 3178 0 is_stmt 0 discriminator 1
 23215 0584 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 23216 0586 0B2B     		cmp	r3, #11
 23217 0588 F3D9     		bls	.L888
3180:..\src/command_processing.c ****     }
3181:..\src/command_processing.c ****     //Activate only the two EMG channels by default for every firmware configuration
3182:..\src/command_processing.c ****     g_mem.exp.ADC_conf[2] = 1;
 23218              		.loc 1 3182 0 is_stmt 1
 23219 058a 1E4B     		ldr	r3, .L894
 23220 058c 0122     		movs	r2, #1
 23221 058e 83F82A22 		strb	r2, [r3, #554]
3183:..\src/command_processing.c ****     g_mem.exp.ADC_conf[3] = 1;
 23222              		.loc 1 3183 0
 23223 0592 1C4B     		ldr	r3, .L894
 23224 0594 0122     		movs	r2, #1
 23225 0596 83F82B22 		strb	r2, [r3, #555]
3184:..\src/command_processing.c ****     g_mem.exp.record_EMG_history_on_SD = FALSE;
 23226              		.loc 1 3184 0
 23227 059a 1A4B     		ldr	r3, .L894
 23228 059c 0022     		movs	r2, #0
 23229 059e 83F83422 		strb	r2, [r3, #564]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 508


3185:..\src/command_processing.c **** 
3186:..\src/command_processing.c ****     // WR STRUCT (default in generic fw)
3187:..\src/command_processing.c ****     g_mem.WR.activation_mode = 0;                // Default Fast:wrist/syn2, Slow:hand/syn1
 23230              		.loc 1 3187 0
 23231 05a2 184B     		ldr	r3, .L894
 23232 05a4 0022     		movs	r2, #0
 23233 05a6 83F8E022 		strb	r2, [r3, #736]
3188:..\src/command_processing.c ****     g_mem.WR.fast_act_threshold[0] = 800;
 23234              		.loc 1 3188 0
 23235 05aa 164B     		ldr	r3, .L894
 23236 05ac 4FF44872 		mov	r2, #800
 23237 05b0 A3F8E222 		strh	r2, [r3, #738]	@ movhi
3189:..\src/command_processing.c **** 
3190:..\src/command_processing.c ****     // JOYSTICK STRUCT
3191:..\src/command_processing.c ****     g_mem.JOY_spec.joystick_closure_speed = 150;
 23238              		.loc 1 3191 0
 23239 05b4 134B     		ldr	r3, .L894
 23240 05b6 9622     		movs	r2, #150
 23241 05b8 A3F8B022 		strh	r2, [r3, #688]	@ movhi
3192:..\src/command_processing.c ****     g_mem.JOY_spec.joystick_threshold = 100;
 23242              		.loc 1 3192 0
 23243 05bc 114B     		ldr	r3, .L894
 23244 05be 6422     		movs	r2, #100
 23245 05c0 A3F8B222 		strh	r2, [r3, #690]	@ movhi
3193:..\src/command_processing.c ****     g_mem.JOY_spec.joystick_gains[0] = 1024;
 23246              		.loc 1 3193 0
 23247 05c4 0F4B     		ldr	r3, .L894
 23248 05c6 4FF48062 		mov	r2, #1024
 23249 05ca A3F8B422 		strh	r2, [r3, #692]	@ movhi
3194:..\src/command_processing.c ****     g_mem.JOY_spec.joystick_gains[1] = 1024;
 23250              		.loc 1 3194 0
 23251 05ce 0D4B     		ldr	r3, .L894
 23252 05d0 4FF48062 		mov	r2, #1024
 23253 05d4 A3F8B622 		strh	r2, [r3, #694]	@ movhi
3195:..\src/command_processing.c **** 
3196:..\src/command_processing.c ****     // Default generic user_id
3197:..\src/command_processing.c ****     g_mem.dev.user_id = GENERIC_USER;    
 23254              		.loc 1 3197 0
 23255 05d8 0A4B     		ldr	r3, .L894
 23256 05da 0022     		movs	r2, #0
 23257 05dc 83F8AB20 		strb	r2, [r3, #171]
3198:..\src/command_processing.c **** 
3199:..\src/command_processing.c ****     // set the initialized flag to show EEPROM has been populated
3200:..\src/command_processing.c ****     g_mem.flag = TRUE;
 23258              		.loc 1 3200 0
 23259 05e0 084B     		ldr	r3, .L894
 23260 05e2 0122     		movs	r2, #1
 23261 05e4 1A70     		strb	r2, [r3]
3201:..\src/command_processing.c ****     
3202:..\src/command_processing.c ****     //write that configuration to EEPROM
3203:..\src/command_processing.c ****     return ( memStore(0) && memStore(DEFAULT_EEPROM_DISPLACEMENT) );
 23262              		.loc 1 3203 0
 23263 05e6 0020     		movs	r0, #0
 23264 05e8 FFF7FEFF 		bl	memStore
 23265 05ec 0346     		mov	r3, r0
 23266 05ee 002B     		cmp	r3, #0
 23267 05f0 0CD0     		beq	.L889
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 509


 23268              		.loc 1 3203 0 is_stmt 0 discriminator 1
 23269 05f2 3220     		movs	r0, #50
 23270 05f4 FFF7FEFF 		bl	memStore
 23271 05f8 0346     		mov	r3, r0
 23272 05fa 002B     		cmp	r3, #0
 23273 05fc 06D0     		beq	.L889
 23274              		.loc 1 3203 0 discriminator 3
 23275 05fe 0123     		movs	r3, #1
 23276 0600 05E0     		b	.L890
 23277              	.L895:
 23278 0602 00BF     		.align	2
 23279              	.L894:
 23280 0604 00000000 		.word	g_mem
 23281 0608 2C200000 		.word	.LC306
 23282              	.L889:
 23283              		.loc 1 3203 0 discriminator 4
 23284 060c 0023     		movs	r3, #0
 23285              	.L890:
 23286              		.loc 1 3203 0 discriminator 6
 23287 060e DBB2     		uxtb	r3, r3
3204:..\src/command_processing.c **** }
 23288              		.loc 1 3204 0 is_stmt 1 discriminator 6
 23289 0610 1846     		mov	r0, r3
 23290 0612 0837     		adds	r7, r7, #8
 23291              		.cfi_def_cfa_offset 8
 23292 0614 BD46     		mov	sp, r7
 23293              		.cfi_def_cfa_register 13
 23294              		@ sp needed
 23295 0616 80BD     		pop	{r7, pc}
 23296              		.cfi_endproc
 23297              	.LFE89:
 23298              		.size	memInit, .-memInit
 23299              		.section	.rodata
 23300 2033 00       		.align	2
 23301              	.LC307:
 23302 2034 55535230 		.ascii	"USR001\000"
 23302      303100
 23303              		.section	.text.memInit_SoftHandPro,"ax",%progbits
 23304              		.align	2
 23305              		.global	memInit_SoftHandPro
 23306              		.thumb
 23307              		.thumb_func
 23308              		.type	memInit_SoftHandPro, %function
 23309              	memInit_SoftHandPro:
 23310              	.LFB90:
3205:..\src/command_processing.c **** 
3206:..\src/command_processing.c **** //==============================================================================
3207:..\src/command_processing.c **** //                                                          MEMORY INIT SOFTHAND
3208:..\src/command_processing.c **** //==============================================================================
3209:..\src/command_processing.c **** void memInit_SoftHandPro(void)
3210:..\src/command_processing.c **** {
 23311              		.loc 1 3210 0
 23312              		.cfi_startproc
 23313              		@ args = 0, pretend = 0, frame = 8
 23314              		@ frame_needed = 1, uses_anonymous_args = 0
 23315              		@ link register save eliminated.
 23316 0000 80B4     		push	{r7}
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 510


 23317              		.cfi_def_cfa_offset 4
 23318              		.cfi_offset 7, -4
 23319 0002 83B0     		sub	sp, sp, #12
 23320              		.cfi_def_cfa_offset 16
 23321 0004 00AF     		add	r7, sp, #0
 23322              		.cfi_def_cfa_register 7
3211:..\src/command_processing.c ****     uint8 MOTOR_IDX = 0;
 23323              		.loc 1 3211 0
 23324 0006 0023     		movs	r3, #0
 23325 0008 FB70     		strb	r3, [r7, #3]
3212:..\src/command_processing.c ****     
3213:..\src/command_processing.c ****     //initialize memory settings ( Specific for SoftHand Pro device )    
3214:..\src/command_processing.c ****     g_mem.dev.right_left = LEFT_HAND;
 23326              		.loc 1 3214 0
 23327 000a 8B4B     		ldr	r3, .L899
 23328 000c 0122     		movs	r2, #1
 23329 000e 83F8A720 		strb	r2, [r3, #167]
3215:..\src/command_processing.c ****     g_mem.dev.dev_type = SOFTHAND_PRO;
 23330              		.loc 1 3215 0
 23331 0012 894B     		ldr	r3, .L899
 23332 0014 0022     		movs	r2, #0
 23333 0016 83F8AC20 		strb	r2, [r3, #172]
3216:..\src/command_processing.c ****     
3217:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].activ         = 1;
 23334              		.loc 1 3217 0
 23335 001a FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 23336 001c 8649     		ldr	r1, .L899
 23337 001e 1346     		mov	r3, r2
 23338 0020 DB00     		lsls	r3, r3, #3
 23339 0022 9B1A     		subs	r3, r3, r2
 23340 0024 1B01     		lsls	r3, r3, #4
 23341 0026 0B44     		add	r3, r3, r1
 23342 0028 E033     		adds	r3, r3, #224
 23343 002a 0122     		movs	r2, #1
 23344 002c 1A70     		strb	r2, [r3]
3218:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].input_mode    = INPUT_MODE_EXTERNAL;
 23345              		.loc 1 3218 0
 23346 002e FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 23347 0030 8149     		ldr	r1, .L899
 23348 0032 1346     		mov	r3, r2
 23349 0034 DB00     		lsls	r3, r3, #3
 23350 0036 9B1A     		subs	r3, r3, r2
 23351 0038 1B01     		lsls	r3, r3, #4
 23352 003a 0B44     		add	r3, r3, r1
 23353 003c 03F58773 		add	r3, r3, #270
 23354 0040 0022     		movs	r2, #0
 23355 0042 1A70     		strb	r2, [r3]
3219:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].control_mode  = CONTROL_ANGLE;
 23356              		.loc 1 3219 0
 23357 0044 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 23358 0046 7C49     		ldr	r1, .L899
 23359 0048 1346     		mov	r3, r2
 23360 004a DB00     		lsls	r3, r3, #3
 23361 004c 9B1A     		subs	r3, r3, r2
 23362 004e 1B01     		lsls	r3, r3, #4
 23363 0050 0B44     		add	r3, r3, r1
 23364 0052 03F20F13 		addw	r3, r3, #271
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 511


 23365 0056 0022     		movs	r2, #0
 23366 0058 1A70     		strb	r2, [r3]
3220:..\src/command_processing.c ****     
3221:..\src/command_processing.c ****     // Get CS0 encoder line for RIGHT HAND and CS1 line for LEFT HAND as default
3222:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].encoder_line  = g_mem.dev.right_left;
 23367              		.loc 1 3222 0
 23368 005a FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 23369 005c 764B     		ldr	r3, .L899
 23370 005e 93F8A700 		ldrb	r0, [r3, #167]	@ zero_extendqisi2
 23371 0062 7549     		ldr	r1, .L899
 23372 0064 1346     		mov	r3, r2
 23373 0066 DB00     		lsls	r3, r3, #3
 23374 0068 9B1A     		subs	r3, r3, r2
 23375 006a 1B01     		lsls	r3, r3, #4
 23376 006c 0B44     		add	r3, r3, r1
 23377 006e 03F58873 		add	r3, r3, #272
 23378 0072 0246     		mov	r2, r0
 23379 0074 1A70     		strb	r2, [r3]
3223:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].pwm_rate_limiter = PWM_RATE_LIMITER_MAX;
 23380              		.loc 1 3223 0
 23381 0076 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 23382 0078 6F49     		ldr	r1, .L899
 23383 007a 1346     		mov	r3, r2
 23384 007c DB00     		lsls	r3, r3, #3
 23385 007e 9B1A     		subs	r3, r3, r2
 23386 0080 1B01     		lsls	r3, r3, #4
 23387 0082 0B44     		add	r3, r3, r1
 23388 0084 03F21113 		addw	r3, r3, #273
 23389 0088 0122     		movs	r2, #1
 23390 008a 1A70     		strb	r2, [r3]
3224:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].not_revers_motor_flag = TRUE;       // SoftHand not reversible motor
 23391              		.loc 1 3224 0
 23392 008c FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 23393 008e 6A49     		ldr	r1, .L899
 23394 0090 1346     		mov	r3, r2
 23395 0092 DB00     		lsls	r3, r3, #3
 23396 0094 9B1A     		subs	r3, r3, r2
 23397 0096 1B01     		lsls	r3, r3, #4
 23398 0098 0B44     		add	r3, r3, r1
 23399 009a 03F58973 		add	r3, r3, #274
 23400 009e 0122     		movs	r2, #1
 23401 00a0 1A70     		strb	r2, [r3]
3225:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].pos_lim_inf = 0;
 23402              		.loc 1 3225 0
 23403 00a2 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 23404 00a4 6449     		ldr	r1, .L899
 23405 00a6 1346     		mov	r3, r2
 23406 00a8 DB00     		lsls	r3, r3, #3
 23407 00aa 9B1A     		subs	r3, r3, r2
 23408 00ac 1B01     		lsls	r3, r3, #4
 23409 00ae 0B44     		add	r3, r3, r1
 23410 00b0 E433     		adds	r3, r3, #228
 23411 00b2 0022     		movs	r2, #0
 23412 00b4 1A60     		str	r2, [r3]
3226:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].pos_lim_sup = (int32)16000 << g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_l
 23413              		.loc 1 3226 0
 23414 00b6 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 512


 23415 00b8 F978     		ldrb	r1, [r7, #3]	@ zero_extendqisi2
 23416 00ba 5F48     		ldr	r0, .L899
 23417 00bc 0B46     		mov	r3, r1
 23418 00be DB00     		lsls	r3, r3, #3
 23419 00c0 5B1A     		subs	r3, r3, r1
 23420 00c2 1B01     		lsls	r3, r3, #4
 23421 00c4 0344     		add	r3, r3, r0
 23422 00c6 03F58873 		add	r3, r3, #272
 23423 00ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23424 00cc 1846     		mov	r0, r3
 23425 00ce 5A49     		ldr	r1, .L899
 23426 00d0 0346     		mov	r3, r0
 23427 00d2 5B00     		lsls	r3, r3, #1
 23428 00d4 0344     		add	r3, r3, r0
 23429 00d6 1B01     		lsls	r3, r3, #4
 23430 00d8 0B44     		add	r3, r3, r1
 23431 00da 03F29513 		addw	r3, r3, #405
 23432 00de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23433 00e0 1946     		mov	r1, r3
 23434 00e2 4FF47A53 		mov	r3, #16000
 23435 00e6 03FA01F1 		lsl	r1, r3, r1
 23436 00ea 5348     		ldr	r0, .L899
 23437 00ec 1346     		mov	r3, r2
 23438 00ee DB00     		lsls	r3, r3, #3
 23439 00f0 9B1A     		subs	r3, r3, r2
 23440 00f2 1B01     		lsls	r3, r3, #4
 23441 00f4 0344     		add	r3, r3, r0
 23442 00f6 E833     		adds	r3, r3, #232
 23443 00f8 1960     		str	r1, [r3]
 23444              	.LBB30:
3227:..\src/command_processing.c ****     
3228:..\src/command_processing.c ****     for (int i=0; i < N_ENCODER_LINE_MAX; i++) {
 23445              		.loc 1 3228 0
 23446 00fa 0023     		movs	r3, #0
 23447 00fc 7B60     		str	r3, [r7, #4]
 23448 00fe 2EE0     		b	.L897
 23449              	.L898:
3229:..\src/command_processing.c ****         // Initialize parameters for each encoder line (either for RIGHT and for LEFT hand)
3230:..\src/command_processing.c ****         g_mem.enc[i].double_encoder_on_off = TRUE;
 23450              		.loc 1 3230 0 discriminator 3
 23451 0100 4D49     		ldr	r1, .L899
 23452 0102 7A68     		ldr	r2, [r7, #4]
 23453 0104 1346     		mov	r3, r2
 23454 0106 5B00     		lsls	r3, r3, #1
 23455 0108 1344     		add	r3, r3, r2
 23456 010a 1B01     		lsls	r3, r3, #4
 23457 010c 0B44     		add	r3, r3, r1
 23458 010e 03F5D873 		add	r3, r3, #432
 23459 0112 0122     		movs	r2, #1
 23460 0114 1A70     		strb	r2, [r3]
3231:..\src/command_processing.c ****         g_mem.enc[i].gears_params[0] = SH_N1;     
 23461              		.loc 1 3231 0 discriminator 3
 23462 0116 4849     		ldr	r1, .L899
 23463 0118 7A68     		ldr	r2, [r7, #4]
 23464 011a 1346     		mov	r3, r2
 23465 011c 5B00     		lsls	r3, r3, #1
 23466 011e 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 513


 23467 0120 1B01     		lsls	r3, r3, #4
 23468 0122 0B44     		add	r3, r3, r1
 23469 0124 03F2B513 		addw	r3, r3, #437
 23470 0128 2322     		movs	r2, #35
 23471 012a 1A70     		strb	r2, [r3]
3232:..\src/command_processing.c ****         g_mem.enc[i].gears_params[1] = SH_N2;     
 23472              		.loc 1 3232 0 discriminator 3
 23473 012c 4249     		ldr	r1, .L899
 23474 012e 7A68     		ldr	r2, [r7, #4]
 23475 0130 1346     		mov	r3, r2
 23476 0132 5B00     		lsls	r3, r3, #1
 23477 0134 1344     		add	r3, r3, r2
 23478 0136 1B01     		lsls	r3, r3, #4
 23479 0138 0B44     		add	r3, r3, r1
 23480 013a 03F5DB73 		add	r3, r3, #438
 23481 013e 0322     		movs	r2, #3
 23482 0140 1A70     		strb	r2, [r3]
3233:..\src/command_processing.c ****         g_mem.enc[i].gears_params[2] = SH_I1;  
 23483              		.loc 1 3233 0 discriminator 3
 23484 0142 3D49     		ldr	r1, .L899
 23485 0144 7A68     		ldr	r2, [r7, #4]
 23486 0146 1346     		mov	r3, r2
 23487 0148 5B00     		lsls	r3, r3, #1
 23488 014a 1344     		add	r3, r3, r2
 23489 014c 1B01     		lsls	r3, r3, #4
 23490 014e 0B44     		add	r3, r3, r1
 23491 0150 03F2B713 		addw	r3, r3, #439
 23492 0154 FF22     		movs	r2, #255
 23493 0156 1A70     		strb	r2, [r3]
3228:..\src/command_processing.c ****         // Initialize parameters for each encoder line (either for RIGHT and for LEFT hand)
 23494              		.loc 1 3228 0 discriminator 3
 23495 0158 7B68     		ldr	r3, [r7, #4]
 23496 015a 0133     		adds	r3, r3, #1
 23497 015c 7B60     		str	r3, [r7, #4]
 23498              	.L897:
3228:..\src/command_processing.c ****         // Initialize parameters for each encoder line (either for RIGHT and for LEFT hand)
 23499              		.loc 1 3228 0 is_stmt 0 discriminator 1
 23500 015e 7B68     		ldr	r3, [r7, #4]
 23501 0160 012B     		cmp	r3, #1
 23502 0162 CDDD     		ble	.L898
 23503              	.LBE30:
3234:..\src/command_processing.c ****     }
3235:..\src/command_processing.c ****     
3236:..\src/command_processing.c ****     g_mem.emg.emg_max_value[0] = 1024;
 23504              		.loc 1 3236 0 is_stmt 1
 23505 0164 344B     		ldr	r3, .L899
 23506 0166 4FF48062 		mov	r2, #1024
 23507 016a C3F8F421 		str	r2, [r3, #500]
3237:..\src/command_processing.c ****     g_mem.emg.emg_max_value[1] = 1024;
 23508              		.loc 1 3237 0
 23509 016e 324B     		ldr	r3, .L899
 23510 0170 4FF48062 		mov	r2, #1024
 23511 0174 C3F8F821 		str	r2, [r3, #504]
3238:..\src/command_processing.c ****     g_mem.emg.emg_threshold[0] = 200;
 23512              		.loc 1 3238 0
 23513 0178 2F4B     		ldr	r3, .L899
 23514 017a C822     		movs	r2, #200
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 514


 23515 017c A3F8F021 		strh	r2, [r3, #496]	@ movhi
3239:..\src/command_processing.c ****     g_mem.emg.emg_threshold[1] = 200;
 23516              		.loc 1 3239 0
 23517 0180 2D4B     		ldr	r3, .L899
 23518 0182 C822     		movs	r2, #200
 23519 0184 A3F8F221 		strh	r2, [r3, #498]	@ movhi
3240:..\src/command_processing.c ****     g_mem.emg.emg_speed[0] = 100;
 23520              		.loc 1 3240 0
 23521 0188 2B4B     		ldr	r3, .L899
 23522 018a 6422     		movs	r2, #100
 23523 018c 83F8FC21 		strb	r2, [r3, #508]
3241:..\src/command_processing.c ****     g_mem.emg.emg_speed[1] = 100;
 23524              		.loc 1 3241 0
 23525 0190 294B     		ldr	r3, .L899
 23526 0192 6422     		movs	r2, #100
 23527 0194 83F8FD21 		strb	r2, [r3, #509]
3242:..\src/command_processing.c ****     g_mem.emg.emg_calibration_flag = 0;      // EMG calibration disabled by default
 23528              		.loc 1 3242 0
 23529 0198 274B     		ldr	r3, .L899
 23530 019a 0022     		movs	r2, #0
 23531 019c 83F8FE21 		strb	r2, [r3, #510]
3243:..\src/command_processing.c ****     g_mem.emg.switch_emg = 0;
 23532              		.loc 1 3243 0
 23533 01a0 254B     		ldr	r3, .L899
 23534 01a2 0022     		movs	r2, #0
 23535 01a4 83F8FF21 		strb	r2, [r3, #511]
3244:..\src/command_processing.c ****     
3245:..\src/command_processing.c ****     //Initialize rest position parameters  
3246:..\src/command_processing.c ****     g_mem.SH.rest_position_flag = FALSE;
 23536              		.loc 1 3246 0
 23537 01a8 234B     		ldr	r3, .L899
 23538 01aa 0022     		movs	r2, #0
 23539 01ac 83F8AC22 		strb	r2, [r3, #684]
3247:..\src/command_processing.c ****     g_mem.SH.rest_pos = (int32)7000 << g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].res[0]; // 56
 23540              		.loc 1 3247 0
 23541 01b0 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 23542 01b2 2149     		ldr	r1, .L899
 23543 01b4 1346     		mov	r3, r2
 23544 01b6 DB00     		lsls	r3, r3, #3
 23545 01b8 9B1A     		subs	r3, r3, r2
 23546 01ba 1B01     		lsls	r3, r3, #4
 23547 01bc 0B44     		add	r3, r3, r1
 23548 01be 03F58873 		add	r3, r3, #272
 23549 01c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23550 01c4 1946     		mov	r1, r3
 23551 01c6 1C4A     		ldr	r2, .L899
 23552 01c8 0B46     		mov	r3, r1
 23553 01ca 5B00     		lsls	r3, r3, #1
 23554 01cc 0B44     		add	r3, r3, r1
 23555 01ce 1B01     		lsls	r3, r3, #4
 23556 01d0 1344     		add	r3, r3, r2
 23557 01d2 03F29513 		addw	r3, r3, #405
 23558 01d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23559 01d8 1A46     		mov	r2, r3
 23560 01da 41F65833 		movw	r3, #7000
 23561 01de 9340     		lsls	r3, r3, r2
 23562 01e0 154A     		ldr	r2, .L899
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 515


 23563 01e2 C2F8A032 		str	r3, [r2, #672]
3248:..\src/command_processing.c **** 	g_mem.SH.rest_delay = 10;
 23564              		.loc 1 3248 0
 23565 01e6 144B     		ldr	r3, .L899
 23566 01e8 0A22     		movs	r2, #10
 23567 01ea C3F8A422 		str	r2, [r3, #676]
3249:..\src/command_processing.c ****     g_mem.SH.rest_vel = 10000;
 23568              		.loc 1 3249 0
 23569 01ee 124B     		ldr	r3, .L899
 23570 01f0 42F21072 		movw	r2, #10000
 23571 01f4 C3F8A822 		str	r2, [r3, #680]
3250:..\src/command_processing.c **** 	
3251:..\src/command_processing.c ****     g_mem.imu.read_imu_flag = FALSE;
 23572              		.loc 1 3251 0
 23573 01f8 0F4B     		ldr	r3, .L899
 23574 01fa 0022     		movs	r2, #0
 23575 01fc 83F80022 		strb	r2, [r3, #512]
3252:..\src/command_processing.c ****     g_mem.exp.read_exp_port_flag = EXP_NONE;       // 0 - None
 23576              		.loc 1 3252 0
 23577 0200 0D4B     		ldr	r3, .L899
 23578 0202 0022     		movs	r2, #0
 23579 0204 83F82622 		strb	r2, [r3, #550]
3253:..\src/command_processing.c ****     g_mem.exp.record_EMG_history_on_SD = FALSE;
 23580              		.loc 1 3253 0
 23581 0208 0B4B     		ldr	r3, .L899
 23582 020a 0022     		movs	r2, #0
 23583 020c 83F83422 		strb	r2, [r3, #564]
3254:..\src/command_processing.c ****     strcpy(g_mem.user[g_mem.dev.user_id].user_code_string, "USR001");
 23584              		.loc 1 3254 0
 23585 0210 094B     		ldr	r3, .L899
 23586 0212 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 23587 0216 1233     		adds	r3, r3, #18
 23588 0218 5B01     		lsls	r3, r3, #5
 23589 021a 074A     		ldr	r2, .L899
 23590 021c 1344     		add	r3, r3, r2
 23591 021e 074A     		ldr	r2, .L899+4
 23592 0220 1068     		ldr	r0, [r2]	@ unaligned
 23593 0222 1860     		str	r0, [r3]	@ unaligned
 23594 0224 9188     		ldrh	r1, [r2, #4]	@ unaligned
 23595 0226 9279     		ldrb	r2, [r2, #6]
 23596 0228 9980     		strh	r1, [r3, #4]	@ unaligned
 23597 022a 9A71     		strb	r2, [r3, #6]
3255:..\src/command_processing.c **** }
 23598              		.loc 1 3255 0
 23599 022c 00BF     		nop
 23600 022e 0C37     		adds	r7, r7, #12
 23601              		.cfi_def_cfa_offset 4
 23602 0230 BD46     		mov	sp, r7
 23603              		.cfi_def_cfa_register 13
 23604              		@ sp needed
 23605 0232 80BC     		pop	{r7}
 23606              		.cfi_restore 7
 23607              		.cfi_def_cfa_offset 0
 23608 0234 7047     		bx	lr
 23609              	.L900:
 23610 0236 00BF     		.align	2
 23611              	.L899:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 516


 23612 0238 00000000 		.word	g_mem
 23613 023c 34200000 		.word	.LC307
 23614              		.cfi_endproc
 23615              	.LFE90:
 23616              		.size	memInit_SoftHandPro, .-memInit_SoftHandPro
 23617              		.section	.text.cmd_get_measurements,"ax",%progbits
 23618              		.align	2
 23619              		.global	cmd_get_measurements
 23620              		.thumb
 23621              		.thumb_func
 23622              		.type	cmd_get_measurements, %function
 23623              	cmd_get_measurements:
 23624              	.LFB91:
3256:..\src/command_processing.c **** 
3257:..\src/command_processing.c **** 
3258:..\src/command_processing.c **** //==============================================================================
3259:..\src/command_processing.c **** //                                                    ROUTINE INTERRUPT FUNCTION
3260:..\src/command_processing.c **** //==============================================================================
3261:..\src/command_processing.c **** /**
3262:..\src/command_processing.c **** * Bunch of functions used on request from UART communication
3263:..\src/command_processing.c **** **/
3264:..\src/command_processing.c **** 
3265:..\src/command_processing.c **** void cmd_get_measurements(){
 23625              		.loc 1 3265 0
 23626              		.cfi_startproc
 23627              		@ args = 0, pretend = 0, frame = 16
 23628              		@ frame_needed = 1, uses_anonymous_args = 0
 23629 0000 90B5     		push	{r4, r7, lr}
 23630              		.cfi_def_cfa_offset 12
 23631              		.cfi_offset 4, -12
 23632              		.cfi_offset 7, -8
 23633              		.cfi_offset 14, -4
 23634 0002 85B0     		sub	sp, sp, #20
 23635              		.cfi_def_cfa_offset 32
 23636 0004 00AF     		add	r7, sp, #0
 23637              		.cfi_def_cfa_register 7
3266:..\src/command_processing.c ****  
3267:..\src/command_processing.c ****     uint8 CYDATA index;
3268:..\src/command_processing.c ****     int16 aux_int16;
3269:..\src/command_processing.c ****     // Packet: header + measure(int16) + crc
3270:..\src/command_processing.c ****     
3271:..\src/command_processing.c ****     uint8 packet_data[8]; 
3272:..\src/command_processing.c ****     
3273:..\src/command_processing.c ****     //Header package
3274:..\src/command_processing.c ****     packet_data[0] = CMD_GET_MEASUREMENTS;   
 23638              		.loc 1 3274 0
 23639 0006 8423     		movs	r3, #132
 23640 0008 3B71     		strb	r3, [r7, #4]
3275:..\src/command_processing.c ****     
3276:..\src/command_processing.c ****     for (index = NUM_OF_SENSORS; index--;) {
 23641              		.loc 1 3276 0
 23642 000a 0323     		movs	r3, #3
 23643 000c FB73     		strb	r3, [r7, #15]
 23644 000e 38E0     		b	.L902
 23645              	.L903:
3277:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].pos[index] >> g_mem.enc[g_mem.mo
 23646              		.loc 1 3277 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 517


 23647 0010 434B     		ldr	r3, .L905
 23648 0012 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 23649 0016 1A46     		mov	r2, r3
 23650 0018 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 23651 001a 4248     		ldr	r0, .L905+4
 23652 001c 1346     		mov	r3, r2
 23653 001e 5B00     		lsls	r3, r3, #1
 23654 0020 1344     		add	r3, r3, r2
 23655 0022 9B00     		lsls	r3, r3, #2
 23656 0024 1344     		add	r3, r3, r2
 23657 0026 0B44     		add	r3, r3, r1
 23658 0028 50F82320 		ldr	r2, [r0, r3, lsl #2]
 23659 002c 3C4B     		ldr	r3, .L905
 23660 002e 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 23661 0032 1C46     		mov	r4, r3
 23662 0034 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 23663 0036 3A48     		ldr	r0, .L905
 23664 0038 2346     		mov	r3, r4
 23665 003a 5B00     		lsls	r3, r3, #1
 23666 003c 2344     		add	r3, r3, r4
 23667 003e 1B01     		lsls	r3, r3, #4
 23668 0040 0344     		add	r3, r3, r0
 23669 0042 0B44     		add	r3, r3, r1
 23670 0044 03F29513 		addw	r3, r3, #405
 23671 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23672 004a 42FA03F3 		asr	r3, r2, r3
 23673 004e 1BB2     		sxth	r3, r3
 23674 0050 BB81     		strh	r3, [r7, #12]	@ movhi
3278:..\src/command_processing.c ****         packet_data[(index << 1) + 2] = ((char*)(&aux_int16))[0];
 23675              		.loc 1 3278 0
 23676 0052 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 23677 0054 5B00     		lsls	r3, r3, #1
 23678 0056 0233     		adds	r3, r3, #2
 23679 0058 07F10C02 		add	r2, r7, #12
 23680 005c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 23681 005e 07F11001 		add	r1, r7, #16
 23682 0062 0B44     		add	r3, r3, r1
 23683 0064 03F80C2C 		strb	r2, [r3, #-12]
3279:..\src/command_processing.c ****         packet_data[(index << 1) + 1] = ((char*)(&aux_int16))[1];
 23684              		.loc 1 3279 0
 23685 0068 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 23686 006a 5B00     		lsls	r3, r3, #1
 23687 006c 5A1C     		adds	r2, r3, #1
 23688 006e 07F10C03 		add	r3, r7, #12
 23689 0072 0133     		adds	r3, r3, #1
 23690 0074 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 23691 0076 07F11003 		add	r3, r7, #16
 23692 007a 1344     		add	r3, r3, r2
 23693 007c 0A46     		mov	r2, r1
 23694 007e 03F80C2C 		strb	r2, [r3, #-12]
 23695              	.L902:
3276:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].pos[index] >> g_mem.enc[g_mem.mo
 23696              		.loc 1 3276 0 discriminator 1
 23697 0082 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 23698 0084 5A1E     		subs	r2, r3, #1
 23699 0086 FA73     		strb	r2, [r7, #15]
 23700 0088 002B     		cmp	r3, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 518


 23701 008a C1D1     		bne	.L903
3280:..\src/command_processing.c ****     }
3281:..\src/command_processing.c **** 
3282:..\src/command_processing.c ****     if (g_mem.dev.use_2nd_motor_flag == TRUE){
 23702              		.loc 1 3282 0
 23703 008c 244B     		ldr	r3, .L905
 23704 008e 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 23705 0092 012B     		cmp	r3, #1
 23706 0094 34D1     		bne	.L904
3283:..\src/command_processing.c ****         //Overwrite only second measure with first encoder on second motor line (just to have a mea
3284:..\src/command_processing.c ****         index = 1;
 23707              		.loc 1 3284 0
 23708 0096 0123     		movs	r3, #1
 23709 0098 FB73     		strb	r3, [r7, #15]
3285:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[1].encoder_line].pos[0] >> g_mem.enc[g_mem.motor[
 23710              		.loc 1 3285 0
 23711 009a 214B     		ldr	r3, .L905
 23712 009c 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 23713 00a0 1946     		mov	r1, r3
 23714 00a2 204A     		ldr	r2, .L905+4
 23715 00a4 3423     		movs	r3, #52
 23716 00a6 03FB01F3 		mul	r3, r3, r1
 23717 00aa 1344     		add	r3, r3, r2
 23718 00ac 1A68     		ldr	r2, [r3]
 23719 00ae 1C4B     		ldr	r3, .L905
 23720 00b0 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 23721 00b4 1846     		mov	r0, r3
 23722 00b6 1A49     		ldr	r1, .L905
 23723 00b8 0346     		mov	r3, r0
 23724 00ba 5B00     		lsls	r3, r3, #1
 23725 00bc 0344     		add	r3, r3, r0
 23726 00be 1B01     		lsls	r3, r3, #4
 23727 00c0 0B44     		add	r3, r3, r1
 23728 00c2 03F29513 		addw	r3, r3, #405
 23729 00c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23730 00c8 42FA03F3 		asr	r3, r2, r3
 23731 00cc 1BB2     		sxth	r3, r3
 23732 00ce BB81     		strh	r3, [r7, #12]	@ movhi
3286:..\src/command_processing.c ****         packet_data[(index << 1) + 2] = ((char*)(&aux_int16))[0];
 23733              		.loc 1 3286 0
 23734 00d0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 23735 00d2 5B00     		lsls	r3, r3, #1
 23736 00d4 0233     		adds	r3, r3, #2
 23737 00d6 07F10C02 		add	r2, r7, #12
 23738 00da 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 23739 00dc 07F11001 		add	r1, r7, #16
 23740 00e0 0B44     		add	r3, r3, r1
 23741 00e2 03F80C2C 		strb	r2, [r3, #-12]
3287:..\src/command_processing.c ****         packet_data[(index << 1) + 1] = ((char*)(&aux_int16))[1];
 23742              		.loc 1 3287 0
 23743 00e6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 23744 00e8 5B00     		lsls	r3, r3, #1
 23745 00ea 5A1C     		adds	r2, r3, #1
 23746 00ec 07F10C03 		add	r3, r7, #12
 23747 00f0 0133     		adds	r3, r3, #1
 23748 00f2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 23749 00f4 07F11003 		add	r3, r7, #16
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 519


 23750 00f8 1344     		add	r3, r3, r2
 23751 00fa 0A46     		mov	r2, r1
 23752 00fc 03F80C2C 		strb	r2, [r3, #-12]
 23753              	.L904:
3288:..\src/command_processing.c ****     }
3289:..\src/command_processing.c ****     
3290:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3291:..\src/command_processing.c **** 
3292:..\src/command_processing.c ****     packet_data[7] = LCRChecksum (packet_data, 7);
 23754              		.loc 1 3292 0
 23755 0100 3B1D     		adds	r3, r7, #4
 23756 0102 0721     		movs	r1, #7
 23757 0104 1846     		mov	r0, r3
 23758 0106 FFF7FEFF 		bl	LCRChecksum
 23759 010a 0346     		mov	r3, r0
 23760 010c FB72     		strb	r3, [r7, #11]
3293:..\src/command_processing.c **** 
3294:..\src/command_processing.c ****     commWrite(packet_data, 8);
 23761              		.loc 1 3294 0
 23762 010e 3B1D     		adds	r3, r7, #4
 23763 0110 0821     		movs	r1, #8
 23764 0112 1846     		mov	r0, r3
 23765 0114 FFF7FEFF 		bl	commWrite
3295:..\src/command_processing.c ****    
3296:..\src/command_processing.c **** }
 23766              		.loc 1 3296 0
 23767 0118 00BF     		nop
 23768 011a 1437     		adds	r7, r7, #20
 23769              		.cfi_def_cfa_offset 12
 23770 011c BD46     		mov	sp, r7
 23771              		.cfi_def_cfa_register 13
 23772              		@ sp needed
 23773 011e 90BD     		pop	{r4, r7, pc}
 23774              	.L906:
 23775              		.align	2
 23776              	.L905:
 23777 0120 00000000 		.word	g_mem
 23778 0124 00000000 		.word	g_measOld
 23779              		.cfi_endproc
 23780              	.LFE91:
 23781              		.size	cmd_get_measurements, .-cmd_get_measurements
 23782              		.section	.text.cmd_get_velocities,"ax",%progbits
 23783              		.align	2
 23784              		.global	cmd_get_velocities
 23785              		.thumb
 23786              		.thumb_func
 23787              		.type	cmd_get_velocities, %function
 23788              	cmd_get_velocities:
 23789              	.LFB92:
3297:..\src/command_processing.c **** 
3298:..\src/command_processing.c **** void cmd_get_velocities(){
 23790              		.loc 1 3298 0
 23791              		.cfi_startproc
 23792              		@ args = 0, pretend = 0, frame = 16
 23793              		@ frame_needed = 1, uses_anonymous_args = 0
 23794 0000 90B5     		push	{r4, r7, lr}
 23795              		.cfi_def_cfa_offset 12
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 520


 23796              		.cfi_offset 4, -12
 23797              		.cfi_offset 7, -8
 23798              		.cfi_offset 14, -4
 23799 0002 85B0     		sub	sp, sp, #20
 23800              		.cfi_def_cfa_offset 32
 23801 0004 00AF     		add	r7, sp, #0
 23802              		.cfi_def_cfa_register 7
3299:..\src/command_processing.c ****  
3300:..\src/command_processing.c ****     uint8 CYDATA index;
3301:..\src/command_processing.c ****     int16 aux_int16;
3302:..\src/command_processing.c ****    
3303:..\src/command_processing.c ****     // Packet: header + measure(int16) + crc
3304:..\src/command_processing.c ****     
3305:..\src/command_processing.c ****     uint8 packet_data[8]; 
3306:..\src/command_processing.c ****     
3307:..\src/command_processing.c ****     //Header package
3308:..\src/command_processing.c ****     packet_data[0] = CMD_GET_VELOCITIES;
 23803              		.loc 1 3308 0
 23804 0006 8923     		movs	r3, #137
 23805 0008 3B71     		strb	r3, [r7, #4]
3309:..\src/command_processing.c ****     
3310:..\src/command_processing.c ****     for (index = NUM_OF_SENSORS; index--;) {
 23806              		.loc 1 3310 0
 23807 000a 0323     		movs	r3, #3
 23808 000c FB73     		strb	r3, [r7, #15]
 23809 000e 3AE0     		b	.L908
 23810              	.L909:
3311:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].vel[index] >> g_mem.enc[g_mem.mo
 23811              		.loc 1 3311 0
 23812 0010 274B     		ldr	r3, .L910
 23813 0012 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 23814 0016 1A46     		mov	r2, r3
 23815 0018 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 23816 001a 2648     		ldr	r0, .L910+4
 23817 001c 1346     		mov	r3, r2
 23818 001e 5B00     		lsls	r3, r3, #1
 23819 0020 1344     		add	r3, r3, r2
 23820 0022 9B00     		lsls	r3, r3, #2
 23821 0024 1344     		add	r3, r3, r2
 23822 0026 0B44     		add	r3, r3, r1
 23823 0028 0633     		adds	r3, r3, #6
 23824 002a 9B00     		lsls	r3, r3, #2
 23825 002c 0344     		add	r3, r3, r0
 23826 002e 5A68     		ldr	r2, [r3, #4]
 23827 0030 1F4B     		ldr	r3, .L910
 23828 0032 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 23829 0036 1C46     		mov	r4, r3
 23830 0038 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 23831 003a 1D48     		ldr	r0, .L910
 23832 003c 2346     		mov	r3, r4
 23833 003e 5B00     		lsls	r3, r3, #1
 23834 0040 2344     		add	r3, r3, r4
 23835 0042 1B01     		lsls	r3, r3, #4
 23836 0044 0344     		add	r3, r3, r0
 23837 0046 0B44     		add	r3, r3, r1
 23838 0048 03F29513 		addw	r3, r3, #405
 23839 004c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 521


 23840 004e 42FA03F3 		asr	r3, r2, r3
 23841 0052 1BB2     		sxth	r3, r3
 23842 0054 BB81     		strh	r3, [r7, #12]	@ movhi
3312:..\src/command_processing.c ****         packet_data[(index << 1) + 2] = ((char*)(&aux_int16))[0];
 23843              		.loc 1 3312 0
 23844 0056 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 23845 0058 5B00     		lsls	r3, r3, #1
 23846 005a 0233     		adds	r3, r3, #2
 23847 005c 07F10C02 		add	r2, r7, #12
 23848 0060 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 23849 0062 07F11001 		add	r1, r7, #16
 23850 0066 0B44     		add	r3, r3, r1
 23851 0068 03F80C2C 		strb	r2, [r3, #-12]
3313:..\src/command_processing.c ****         packet_data[(index << 1) + 1] = ((char*)(&aux_int16))[1];
 23852              		.loc 1 3313 0
 23853 006c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 23854 006e 5B00     		lsls	r3, r3, #1
 23855 0070 5A1C     		adds	r2, r3, #1
 23856 0072 07F10C03 		add	r3, r7, #12
 23857 0076 0133     		adds	r3, r3, #1
 23858 0078 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 23859 007a 07F11003 		add	r3, r7, #16
 23860 007e 1344     		add	r3, r3, r2
 23861 0080 0A46     		mov	r2, r1
 23862 0082 03F80C2C 		strb	r2, [r3, #-12]
 23863              	.L908:
3310:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].vel[index] >> g_mem.enc[g_mem.mo
 23864              		.loc 1 3310 0 discriminator 1
 23865 0086 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 23866 0088 5A1E     		subs	r2, r3, #1
 23867 008a FA73     		strb	r2, [r7, #15]
 23868 008c 002B     		cmp	r3, #0
 23869 008e BFD1     		bne	.L909
3314:..\src/command_processing.c ****     }
3315:..\src/command_processing.c ****             
3316:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3317:..\src/command_processing.c **** 
3318:..\src/command_processing.c ****     packet_data[7] = LCRChecksum (packet_data, 7);
 23870              		.loc 1 3318 0
 23871 0090 3B1D     		adds	r3, r7, #4
 23872 0092 0721     		movs	r1, #7
 23873 0094 1846     		mov	r0, r3
 23874 0096 FFF7FEFF 		bl	LCRChecksum
 23875 009a 0346     		mov	r3, r0
 23876 009c FB72     		strb	r3, [r7, #11]
3319:..\src/command_processing.c **** 
3320:..\src/command_processing.c ****     commWrite(packet_data, 8); 
 23877              		.loc 1 3320 0
 23878 009e 3B1D     		adds	r3, r7, #4
 23879 00a0 0821     		movs	r1, #8
 23880 00a2 1846     		mov	r0, r3
 23881 00a4 FFF7FEFF 		bl	commWrite
3321:..\src/command_processing.c **** }
 23882              		.loc 1 3321 0
 23883 00a8 00BF     		nop
 23884 00aa 1437     		adds	r7, r7, #20
 23885              		.cfi_def_cfa_offset 12
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 522


 23886 00ac BD46     		mov	sp, r7
 23887              		.cfi_def_cfa_register 13
 23888              		@ sp needed
 23889 00ae 90BD     		pop	{r4, r7, pc}
 23890              	.L911:
 23891              		.align	2
 23892              	.L910:
 23893 00b0 00000000 		.word	g_mem
 23894 00b4 00000000 		.word	g_measOld
 23895              		.cfi_endproc
 23896              	.LFE92:
 23897              		.size	cmd_get_velocities, .-cmd_get_velocities
 23898              		.section	.text.cmd_get_accelerations,"ax",%progbits
 23899              		.align	2
 23900              		.global	cmd_get_accelerations
 23901              		.thumb
 23902              		.thumb_func
 23903              		.type	cmd_get_accelerations, %function
 23904              	cmd_get_accelerations:
 23905              	.LFB93:
3322:..\src/command_processing.c **** 
3323:..\src/command_processing.c **** void cmd_get_accelerations(){
 23906              		.loc 1 3323 0
 23907              		.cfi_startproc
 23908              		@ args = 0, pretend = 0, frame = 16
 23909              		@ frame_needed = 1, uses_anonymous_args = 0
 23910 0000 90B5     		push	{r4, r7, lr}
 23911              		.cfi_def_cfa_offset 12
 23912              		.cfi_offset 4, -12
 23913              		.cfi_offset 7, -8
 23914              		.cfi_offset 14, -4
 23915 0002 85B0     		sub	sp, sp, #20
 23916              		.cfi_def_cfa_offset 32
 23917 0004 00AF     		add	r7, sp, #0
 23918              		.cfi_def_cfa_register 7
3324:..\src/command_processing.c ****  
3325:..\src/command_processing.c ****     uint8 CYDATA index;
3326:..\src/command_processing.c ****     int16 aux_int16;
3327:..\src/command_processing.c ****     
3328:..\src/command_processing.c ****     // Packet: header + measure(int16) + crc
3329:..\src/command_processing.c ****     
3330:..\src/command_processing.c ****     uint8 packet_data[8]; 
3331:..\src/command_processing.c ****     
3332:..\src/command_processing.c ****     //Header package
3333:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ACCEL;   
 23919              		.loc 1 3333 0
 23920 0006 8B23     		movs	r3, #139
 23921 0008 3B71     		strb	r3, [r7, #4]
3334:..\src/command_processing.c ****     
3335:..\src/command_processing.c ****     for (index = NUM_OF_SENSORS; index--;) {
 23922              		.loc 1 3335 0
 23923 000a 0323     		movs	r3, #3
 23924 000c FB73     		strb	r3, [r7, #15]
 23925 000e 39E0     		b	.L913
 23926              	.L914:
3336:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].acc[index] >> g_mem.enc[g_mem.mo
 23927              		.loc 1 3336 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 523


 23928 0010 274B     		ldr	r3, .L915
 23929 0012 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 23930 0016 1A46     		mov	r2, r3
 23931 0018 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 23932 001a 2648     		ldr	r0, .L915+4
 23933 001c 1346     		mov	r3, r2
 23934 001e 5B00     		lsls	r3, r3, #1
 23935 0020 1344     		add	r3, r3, r2
 23936 0022 9B00     		lsls	r3, r3, #2
 23937 0024 1344     		add	r3, r3, r2
 23938 0026 0B44     		add	r3, r3, r1
 23939 0028 0A33     		adds	r3, r3, #10
 23940 002a 50F82320 		ldr	r2, [r0, r3, lsl #2]
 23941 002e 204B     		ldr	r3, .L915
 23942 0030 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 23943 0034 1C46     		mov	r4, r3
 23944 0036 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 23945 0038 1D48     		ldr	r0, .L915
 23946 003a 2346     		mov	r3, r4
 23947 003c 5B00     		lsls	r3, r3, #1
 23948 003e 2344     		add	r3, r3, r4
 23949 0040 1B01     		lsls	r3, r3, #4
 23950 0042 0344     		add	r3, r3, r0
 23951 0044 0B44     		add	r3, r3, r1
 23952 0046 03F29513 		addw	r3, r3, #405
 23953 004a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23954 004c 42FA03F3 		asr	r3, r2, r3
 23955 0050 1BB2     		sxth	r3, r3
 23956 0052 BB81     		strh	r3, [r7, #12]	@ movhi
3337:..\src/command_processing.c ****         packet_data[(index << 1) + 2] = ((char*)(&aux_int16))[0];
 23957              		.loc 1 3337 0
 23958 0054 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 23959 0056 5B00     		lsls	r3, r3, #1
 23960 0058 0233     		adds	r3, r3, #2
 23961 005a 07F10C02 		add	r2, r7, #12
 23962 005e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 23963 0060 07F11001 		add	r1, r7, #16
 23964 0064 0B44     		add	r3, r3, r1
 23965 0066 03F80C2C 		strb	r2, [r3, #-12]
3338:..\src/command_processing.c ****         packet_data[(index << 1) + 1] = ((char*)(&aux_int16))[1];
 23966              		.loc 1 3338 0
 23967 006a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 23968 006c 5B00     		lsls	r3, r3, #1
 23969 006e 5A1C     		adds	r2, r3, #1
 23970 0070 07F10C03 		add	r3, r7, #12
 23971 0074 0133     		adds	r3, r3, #1
 23972 0076 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 23973 0078 07F11003 		add	r3, r7, #16
 23974 007c 1344     		add	r3, r3, r2
 23975 007e 0A46     		mov	r2, r1
 23976 0080 03F80C2C 		strb	r2, [r3, #-12]
 23977              	.L913:
3335:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].acc[index] >> g_mem.enc[g_mem.mo
 23978              		.loc 1 3335 0 discriminator 1
 23979 0084 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 23980 0086 5A1E     		subs	r2, r3, #1
 23981 0088 FA73     		strb	r2, [r7, #15]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 524


 23982 008a 002B     		cmp	r3, #0
 23983 008c C0D1     		bne	.L914
3339:..\src/command_processing.c ****     }
3340:..\src/command_processing.c ****     
3341:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3342:..\src/command_processing.c **** 
3343:..\src/command_processing.c ****     packet_data[7] = LCRChecksum (packet_data, 7);
 23984              		.loc 1 3343 0
 23985 008e 3B1D     		adds	r3, r7, #4
 23986 0090 0721     		movs	r1, #7
 23987 0092 1846     		mov	r0, r3
 23988 0094 FFF7FEFF 		bl	LCRChecksum
 23989 0098 0346     		mov	r3, r0
 23990 009a FB72     		strb	r3, [r7, #11]
3344:..\src/command_processing.c **** 
3345:..\src/command_processing.c ****     commWrite(packet_data, 8); 
 23991              		.loc 1 3345 0
 23992 009c 3B1D     		adds	r3, r7, #4
 23993 009e 0821     		movs	r1, #8
 23994 00a0 1846     		mov	r0, r3
 23995 00a2 FFF7FEFF 		bl	commWrite
3346:..\src/command_processing.c **** }
 23996              		.loc 1 3346 0
 23997 00a6 00BF     		nop
 23998 00a8 1437     		adds	r7, r7, #20
 23999              		.cfi_def_cfa_offset 12
 24000 00aa BD46     		mov	sp, r7
 24001              		.cfi_def_cfa_register 13
 24002              		@ sp needed
 24003 00ac 90BD     		pop	{r4, r7, pc}
 24004              	.L916:
 24005 00ae 00BF     		.align	2
 24006              	.L915:
 24007 00b0 00000000 		.word	g_mem
 24008 00b4 00000000 		.word	g_measOld
 24009              		.cfi_endproc
 24010              	.LFE93:
 24011              		.size	cmd_get_accelerations, .-cmd_get_accelerations
 24012              		.section	.text.cmd_get_joystick,"ax",%progbits
 24013              		.align	2
 24014              		.global	cmd_get_joystick
 24015              		.thumb
 24016              		.thumb_func
 24017              		.type	cmd_get_joystick, %function
 24018              	cmd_get_joystick:
 24019              	.LFB94:
3347:..\src/command_processing.c **** 
3348:..\src/command_processing.c **** void cmd_get_joystick() {
 24020              		.loc 1 3348 0
 24021              		.cfi_startproc
 24022              		@ args = 0, pretend = 0, frame = 8
 24023              		@ frame_needed = 1, uses_anonymous_args = 0
 24024 0000 80B5     		push	{r7, lr}
 24025              		.cfi_def_cfa_offset 8
 24026              		.cfi_offset 7, -8
 24027              		.cfi_offset 14, -4
 24028 0002 82B0     		sub	sp, sp, #8
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 525


 24029              		.cfi_def_cfa_offset 16
 24030 0004 00AF     		add	r7, sp, #0
 24031              		.cfi_def_cfa_register 7
3349:..\src/command_processing.c ****  
3350:..\src/command_processing.c ****     int16 aux_int16;
3351:..\src/command_processing.c ****     
3352:..\src/command_processing.c ****     // Packet: header + measure(int16) + crc
3353:..\src/command_processing.c ****     
3354:..\src/command_processing.c ****     uint8 packet_data[6];
3355:..\src/command_processing.c ****     
3356:..\src/command_processing.c ****     // Header        
3357:..\src/command_processing.c ****     packet_data[0] = CMD_GET_JOYSTICK;
 24032              		.loc 1 3357 0
 24033 0006 9223     		movs	r3, #146
 24034 0008 3B70     		strb	r3, [r7]
3358:..\src/command_processing.c ****     
3359:..\src/command_processing.c ****     aux_int16 = (int16) g_adc_measOld.joystick[0];
 24035              		.loc 1 3359 0
 24036 000a 134B     		ldr	r3, .L918
 24037 000c 1B6A     		ldr	r3, [r3, #32]
 24038 000e 1BB2     		sxth	r3, r3
 24039 0010 FB80     		strh	r3, [r7, #6]	@ movhi
3360:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 24040              		.loc 1 3360 0
 24041 0012 BB1D     		adds	r3, r7, #6
 24042 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24043 0016 BB70     		strb	r3, [r7, #2]
3361:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 24044              		.loc 1 3361 0
 24045 0018 BB1D     		adds	r3, r7, #6
 24046 001a 0133     		adds	r3, r3, #1
 24047 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24048 001e 7B70     		strb	r3, [r7, #1]
3362:..\src/command_processing.c ****     
3363:..\src/command_processing.c ****     aux_int16 = (int16) g_adc_measOld.joystick[1];
 24049              		.loc 1 3363 0
 24050 0020 0D4B     		ldr	r3, .L918
 24051 0022 5B6A     		ldr	r3, [r3, #36]
 24052 0024 1BB2     		sxth	r3, r3
 24053 0026 FB80     		strh	r3, [r7, #6]	@ movhi
3364:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
 24054              		.loc 1 3364 0
 24055 0028 BB1D     		adds	r3, r7, #6
 24056 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24057 002c 3B71     		strb	r3, [r7, #4]
3365:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
 24058              		.loc 1 3365 0
 24059 002e BB1D     		adds	r3, r7, #6
 24060 0030 0133     		adds	r3, r3, #1
 24061 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24062 0034 FB70     		strb	r3, [r7, #3]
3366:..\src/command_processing.c **** 
3367:..\src/command_processing.c ****     packet_data[5] = LCRChecksum (packet_data, 5);
 24063              		.loc 1 3367 0
 24064 0036 3B46     		mov	r3, r7
 24065 0038 0521     		movs	r1, #5
 24066 003a 1846     		mov	r0, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 526


 24067 003c FFF7FEFF 		bl	LCRChecksum
 24068 0040 0346     		mov	r3, r0
 24069 0042 7B71     		strb	r3, [r7, #5]
3368:..\src/command_processing.c **** 
3369:..\src/command_processing.c ****     commWrite(packet_data, 6);
 24070              		.loc 1 3369 0
 24071 0044 3B46     		mov	r3, r7
 24072 0046 0621     		movs	r1, #6
 24073 0048 1846     		mov	r0, r3
 24074 004a FFF7FEFF 		bl	commWrite
3370:..\src/command_processing.c **** }
 24075              		.loc 1 3370 0
 24076 004e 00BF     		nop
 24077 0050 0837     		adds	r7, r7, #8
 24078              		.cfi_def_cfa_offset 8
 24079 0052 BD46     		mov	sp, r7
 24080              		.cfi_def_cfa_register 13
 24081              		@ sp needed
 24082 0054 80BD     		pop	{r7, pc}
 24083              	.L919:
 24084 0056 00BF     		.align	2
 24085              	.L918:
 24086 0058 00000000 		.word	g_adc_measOld
 24087              		.cfi_endproc
 24088              	.LFE94:
 24089              		.size	cmd_get_joystick, .-cmd_get_joystick
 24090              		.section	.text.cmd_set_inputs,"ax",%progbits
 24091              		.align	2
 24092              		.global	cmd_set_inputs
 24093              		.thumb
 24094              		.thumb_func
 24095              		.type	cmd_set_inputs, %function
 24096              	cmd_set_inputs:
 24097              	.LFB95:
3371:..\src/command_processing.c **** 
3372:..\src/command_processing.c **** void cmd_set_inputs(){
 24098              		.loc 1 3372 0
 24099              		.cfi_startproc
 24100              		@ args = 0, pretend = 0, frame = 8
 24101              		@ frame_needed = 1, uses_anonymous_args = 0
 24102              		@ link register save eliminated.
 24103 0000 90B4     		push	{r4, r7}
 24104              		.cfi_def_cfa_offset 8
 24105              		.cfi_offset 4, -8
 24106              		.cfi_offset 7, -4
 24107 0002 82B0     		sub	sp, sp, #8
 24108              		.cfi_def_cfa_offset 16
 24109 0004 00AF     		add	r7, sp, #0
 24110              		.cfi_def_cfa_register 7
3373:..\src/command_processing.c ****     
3374:..\src/command_processing.c ****     // Store position setted in right variables
3375:..\src/command_processing.c ****     int16 aux_int16[NUM_OF_MOTORS];
3376:..\src/command_processing.c ****     
3377:..\src/command_processing.c ****     aux_int16[0] = (int16)(g_rx.buffer[1]<<8 | g_rx.buffer[2]);
 24111              		.loc 1 3377 0
 24112 0006 724B     		ldr	r3, .L929
 24113 0008 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 527


 24114 000a 1B02     		lsls	r3, r3, #8
 24115 000c 1AB2     		sxth	r2, r3
 24116 000e 704B     		ldr	r3, .L929
 24117 0010 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 24118 0012 1BB2     		sxth	r3, r3
 24119 0014 1343     		orrs	r3, r3, r2
 24120 0016 1BB2     		sxth	r3, r3
 24121 0018 3B80     		strh	r3, [r7]	@ movhi
3378:..\src/command_processing.c ****     aux_int16[1] = (int16)(g_rx.buffer[3]<<8 | g_rx.buffer[4]);
 24122              		.loc 1 3378 0
 24123 001a 6D4B     		ldr	r3, .L929
 24124 001c DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 24125 001e 1B02     		lsls	r3, r3, #8
 24126 0020 1AB2     		sxth	r2, r3
 24127 0022 6B4B     		ldr	r3, .L929
 24128 0024 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 24129 0026 1BB2     		sxth	r3, r3
 24130 0028 1343     		orrs	r3, r3, r2
 24131 002a 1BB2     		sxth	r3, r3
 24132 002c 7B80     		strh	r3, [r7, #2]	@ movhi
 24133              	.LBB31:
3379:..\src/command_processing.c **** 
3380:..\src/command_processing.c ****     // Update g_refNew in case a new command has been received
3381:..\src/command_processing.c ****     for (uint8 i = 0; i< NUM_OF_MOTORS; i++) {
 24134              		.loc 1 3381 0
 24135 002e 0023     		movs	r3, #0
 24136 0030 FB71     		strb	r3, [r7, #7]
 24137 0032 C4E0     		b	.L921
 24138              	.L928:
3382:..\src/command_processing.c ****         if(g_mem.motor[i].control_mode == CONTROL_CURRENT) {
 24139              		.loc 1 3382 0
 24140 0034 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 24141 0036 6749     		ldr	r1, .L929+4
 24142 0038 1346     		mov	r3, r2
 24143 003a DB00     		lsls	r3, r3, #3
 24144 003c 9B1A     		subs	r3, r3, r2
 24145 003e 1B01     		lsls	r3, r3, #4
 24146 0040 0B44     		add	r3, r3, r1
 24147 0042 03F20F13 		addw	r3, r3, #271
 24148 0046 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24149 0048 022B     		cmp	r3, #2
 24150 004a 0ED1     		bne	.L922
3383:..\src/command_processing.c ****             g_refNew[i].curr = aux_int16[i];
 24151              		.loc 1 3383 0
 24152 004c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 24153 004e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 24154 0050 5B00     		lsls	r3, r3, #1
 24155 0052 07F10801 		add	r1, r7, #8
 24156 0056 0B44     		add	r3, r3, r1
 24157 0058 33F9083C 		ldrsh	r3, [r3, #-8]
 24158 005c 1846     		mov	r0, r3
 24159 005e 5E49     		ldr	r1, .L929+8
 24160 0060 1301     		lsls	r3, r2, #4
 24161 0062 0B44     		add	r3, r3, r1
 24162 0064 0433     		adds	r3, r3, #4
 24163 0066 1860     		str	r0, [r3]
 24164 0068 47E0     		b	.L923
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 528


 24165              	.L922:
3384:..\src/command_processing.c ****         }
3385:..\src/command_processing.c ****         else {
3386:..\src/command_processing.c ****             if(g_mem.motor[i].control_mode == CONTROL_PWM) {
 24166              		.loc 1 3386 0
 24167 006a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 24168 006c 5949     		ldr	r1, .L929+4
 24169 006e 1346     		mov	r3, r2
 24170 0070 DB00     		lsls	r3, r3, #3
 24171 0072 9B1A     		subs	r3, r3, r2
 24172 0074 1B01     		lsls	r3, r3, #4
 24173 0076 0B44     		add	r3, r3, r1
 24174 0078 03F20F13 		addw	r3, r3, #271
 24175 007c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24176 007e 012B     		cmp	r3, #1
 24177 0080 0ED1     		bne	.L924
3387:..\src/command_processing.c ****                 g_refNew[i].pwm = aux_int16[i];
 24178              		.loc 1 3387 0
 24179 0082 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 24180 0084 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 24181 0086 5B00     		lsls	r3, r3, #1
 24182 0088 07F10801 		add	r1, r7, #8
 24183 008c 0B44     		add	r3, r3, r1
 24184 008e 33F9083C 		ldrsh	r3, [r3, #-8]
 24185 0092 1846     		mov	r0, r3
 24186 0094 5049     		ldr	r1, .L929+8
 24187 0096 1301     		lsls	r3, r2, #4
 24188 0098 0B44     		add	r3, r3, r1
 24189 009a 0833     		adds	r3, r3, #8
 24190 009c 1860     		str	r0, [r3]
 24191 009e 2CE0     		b	.L923
 24192              	.L924:
3388:..\src/command_processing.c ****             }
3389:..\src/command_processing.c ****             else {
3390:..\src/command_processing.c ****                 g_refNew[i].pos = aux_int16[i];   // motor ref
 24193              		.loc 1 3390 0
 24194 00a0 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 24195 00a2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 24196 00a4 5B00     		lsls	r3, r3, #1
 24197 00a6 07F10801 		add	r1, r7, #8
 24198 00aa 0B44     		add	r3, r3, r1
 24199 00ac 33F9083C 		ldrsh	r3, [r3, #-8]
 24200 00b0 1846     		mov	r0, r3
 24201 00b2 4949     		ldr	r1, .L929+8
 24202 00b4 1301     		lsls	r3, r2, #4
 24203 00b6 0B44     		add	r3, r3, r1
 24204 00b8 1860     		str	r0, [r3]
3391:..\src/command_processing.c ****                 g_refNew[i].pos = g_refNew[i].pos << g_mem.enc[c_mem.motor[i].encoder_line].res[0];
 24205              		.loc 1 3391 0
 24206 00ba F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 24207 00bc FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 24208 00be 464A     		ldr	r2, .L929+8
 24209 00c0 1B01     		lsls	r3, r3, #4
 24210 00c2 1344     		add	r3, r3, r2
 24211 00c4 1868     		ldr	r0, [r3]
 24212 00c6 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 24213 00c8 444C     		ldr	r4, .L929+12
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 529


 24214 00ca 1346     		mov	r3, r2
 24215 00cc DB00     		lsls	r3, r3, #3
 24216 00ce 9B1A     		subs	r3, r3, r2
 24217 00d0 1B01     		lsls	r3, r3, #4
 24218 00d2 2344     		add	r3, r3, r4
 24219 00d4 03F58873 		add	r3, r3, #272
 24220 00d8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24221 00da 1C46     		mov	r4, r3
 24222 00dc 3D4A     		ldr	r2, .L929+4
 24223 00de 2346     		mov	r3, r4
 24224 00e0 5B00     		lsls	r3, r3, #1
 24225 00e2 2344     		add	r3, r3, r4
 24226 00e4 1B01     		lsls	r3, r3, #4
 24227 00e6 1344     		add	r3, r3, r2
 24228 00e8 03F29513 		addw	r3, r3, #405
 24229 00ec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24230 00ee 00FA03F2 		lsl	r2, r0, r3
 24231 00f2 3948     		ldr	r0, .L929+8
 24232 00f4 0B01     		lsls	r3, r1, #4
 24233 00f6 0344     		add	r3, r3, r0
 24234 00f8 1A60     		str	r2, [r3]
 24235              	.L923:
3392:..\src/command_processing.c ****             }
3393:..\src/command_processing.c ****         }  
3394:..\src/command_processing.c ****            
3395:..\src/command_processing.c ****         // Check if the reference is nor higher or lower than the position limits
3396:..\src/command_processing.c ****         if (c_mem.motor[i].pos_lim_flag && (g_mem.motor[i].control_mode == CURR_AND_POS_CONTROL || 
 24236              		.loc 1 3396 0
 24237 00fa FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 24238 00fc 3749     		ldr	r1, .L929+12
 24239 00fe 1346     		mov	r3, r2
 24240 0100 DB00     		lsls	r3, r3, #3
 24241 0102 9B1A     		subs	r3, r3, r2
 24242 0104 1B01     		lsls	r3, r3, #4
 24243 0106 0B44     		add	r3, r3, r1
 24244 0108 E333     		adds	r3, r3, #227
 24245 010a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24246 010c 002B     		cmp	r3, #0
 24247 010e 53D0     		beq	.L925
 24248              		.loc 1 3396 0 is_stmt 0 discriminator 1
 24249 0110 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 24250 0112 3049     		ldr	r1, .L929+4
 24251 0114 1346     		mov	r3, r2
 24252 0116 DB00     		lsls	r3, r3, #3
 24253 0118 9B1A     		subs	r3, r3, r2
 24254 011a 1B01     		lsls	r3, r3, #4
 24255 011c 0B44     		add	r3, r3, r1
 24256 011e 03F20F13 		addw	r3, r3, #271
 24257 0122 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24258 0124 032B     		cmp	r3, #3
 24259 0126 0BD0     		beq	.L926
 24260              		.loc 1 3396 0 discriminator 2
 24261 0128 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 24262 012a 2A49     		ldr	r1, .L929+4
 24263 012c 1346     		mov	r3, r2
 24264 012e DB00     		lsls	r3, r3, #3
 24265 0130 9B1A     		subs	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 530


 24266 0132 1B01     		lsls	r3, r3, #4
 24267 0134 0B44     		add	r3, r3, r1
 24268 0136 03F20F13 		addw	r3, r3, #271
 24269 013a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24270 013c 002B     		cmp	r3, #0
 24271 013e 3BD1     		bne	.L925
 24272              	.L926:
3397:..\src/command_processing.c ****             
3398:..\src/command_processing.c ****             if (g_refNew[i].pos < c_mem.motor[i].pos_lim_inf) 
 24273              		.loc 1 3398 0 is_stmt 1
 24274 0140 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 24275 0142 254A     		ldr	r2, .L929+8
 24276 0144 1B01     		lsls	r3, r3, #4
 24277 0146 1344     		add	r3, r3, r2
 24278 0148 1968     		ldr	r1, [r3]
 24279 014a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 24280 014c 2348     		ldr	r0, .L929+12
 24281 014e 1346     		mov	r3, r2
 24282 0150 DB00     		lsls	r3, r3, #3
 24283 0152 9B1A     		subs	r3, r3, r2
 24284 0154 1B01     		lsls	r3, r3, #4
 24285 0156 0344     		add	r3, r3, r0
 24286 0158 E433     		adds	r3, r3, #228
 24287 015a 1B68     		ldr	r3, [r3]
 24288 015c 9942     		cmp	r1, r3
 24289 015e 0DDA     		bge	.L927
3399:..\src/command_processing.c ****                 g_refNew[i].pos = c_mem.motor[i].pos_lim_inf;
 24290              		.loc 1 3399 0
 24291 0160 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 24292 0162 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 24293 0164 1D48     		ldr	r0, .L929+12
 24294 0166 1346     		mov	r3, r2
 24295 0168 DB00     		lsls	r3, r3, #3
 24296 016a 9B1A     		subs	r3, r3, r2
 24297 016c 1B01     		lsls	r3, r3, #4
 24298 016e 0344     		add	r3, r3, r0
 24299 0170 E433     		adds	r3, r3, #228
 24300 0172 1A68     		ldr	r2, [r3]
 24301 0174 1848     		ldr	r0, .L929+8
 24302 0176 0B01     		lsls	r3, r1, #4
 24303 0178 0344     		add	r3, r3, r0
 24304 017a 1A60     		str	r2, [r3]
 24305              	.L927:
3400:..\src/command_processing.c **** 
3401:..\src/command_processing.c ****             if (g_refNew[i].pos > c_mem.motor[i].pos_lim_sup) 
 24306              		.loc 1 3401 0
 24307 017c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 24308 017e 164A     		ldr	r2, .L929+8
 24309 0180 1B01     		lsls	r3, r3, #4
 24310 0182 1344     		add	r3, r3, r2
 24311 0184 1968     		ldr	r1, [r3]
 24312 0186 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 24313 0188 1448     		ldr	r0, .L929+12
 24314 018a 1346     		mov	r3, r2
 24315 018c DB00     		lsls	r3, r3, #3
 24316 018e 9B1A     		subs	r3, r3, r2
 24317 0190 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 531


 24318 0192 0344     		add	r3, r3, r0
 24319 0194 E833     		adds	r3, r3, #232
 24320 0196 1B68     		ldr	r3, [r3]
 24321 0198 9942     		cmp	r1, r3
 24322 019a 0DDD     		ble	.L925
3402:..\src/command_processing.c ****                 g_refNew[i].pos = c_mem.motor[i].pos_lim_sup;
 24323              		.loc 1 3402 0
 24324 019c F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 24325 019e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 24326 01a0 0E48     		ldr	r0, .L929+12
 24327 01a2 1346     		mov	r3, r2
 24328 01a4 DB00     		lsls	r3, r3, #3
 24329 01a6 9B1A     		subs	r3, r3, r2
 24330 01a8 1B01     		lsls	r3, r3, #4
 24331 01aa 0344     		add	r3, r3, r0
 24332 01ac E833     		adds	r3, r3, #232
 24333 01ae 1A68     		ldr	r2, [r3]
 24334 01b0 0948     		ldr	r0, .L929+8
 24335 01b2 0B01     		lsls	r3, r1, #4
 24336 01b4 0344     		add	r3, r3, r0
 24337 01b6 1A60     		str	r2, [r3]
 24338              	.L925:
3381:..\src/command_processing.c ****         if(g_mem.motor[i].control_mode == CONTROL_CURRENT) {
 24339              		.loc 1 3381 0 discriminator 2
 24340 01b8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 24341 01ba 0133     		adds	r3, r3, #1
 24342 01bc FB71     		strb	r3, [r7, #7]
 24343              	.L921:
3381:..\src/command_processing.c ****         if(g_mem.motor[i].control_mode == CONTROL_CURRENT) {
 24344              		.loc 1 3381 0 is_stmt 0 discriminator 1
 24345 01be FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 24346 01c0 012B     		cmp	r3, #1
 24347 01c2 7FF637AF 		bls	.L928
 24348              	.LBE31:
3403:..\src/command_processing.c ****         }
3404:..\src/command_processing.c ****     }
3405:..\src/command_processing.c **** }
 24349              		.loc 1 3405 0 is_stmt 1
 24350 01c6 00BF     		nop
 24351 01c8 0837     		adds	r7, r7, #8
 24352              		.cfi_def_cfa_offset 8
 24353 01ca BD46     		mov	sp, r7
 24354              		.cfi_def_cfa_register 13
 24355              		@ sp needed
 24356 01cc 90BC     		pop	{r4, r7}
 24357              		.cfi_restore 7
 24358              		.cfi_restore 4
 24359              		.cfi_def_cfa_offset 0
 24360 01ce 7047     		bx	lr
 24361              	.L930:
 24362              		.align	2
 24363              	.L929:
 24364 01d0 00000000 		.word	g_rx
 24365 01d4 00000000 		.word	g_mem
 24366 01d8 00000000 		.word	g_refNew
 24367 01dc 00000000 		.word	c_mem
 24368              		.cfi_endproc
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 532


 24369              	.LFE95:
 24370              		.size	cmd_set_inputs, .-cmd_set_inputs
 24371              		.section	.text.cmd_activate,"ax",%progbits
 24372              		.align	2
 24373              		.global	cmd_activate
 24374              		.thumb
 24375              		.thumb_func
 24376              		.type	cmd_activate, %function
 24377              	cmd_activate:
 24378              	.LFB96:
3406:..\src/command_processing.c **** 
3407:..\src/command_processing.c **** void cmd_activate(){
 24379              		.loc 1 3407 0
 24380              		.cfi_startproc
 24381              		@ args = 0, pretend = 0, frame = 8
 24382              		@ frame_needed = 1, uses_anonymous_args = 0
 24383 0000 80B5     		push	{r7, lr}
 24384              		.cfi_def_cfa_offset 8
 24385              		.cfi_offset 7, -8
 24386              		.cfi_offset 14, -4
 24387 0002 82B0     		sub	sp, sp, #8
 24388              		.cfi_def_cfa_offset 16
 24389 0004 00AF     		add	r7, sp, #0
 24390              		.cfi_def_cfa_register 7
3408:..\src/command_processing.c ****     
3409:..\src/command_processing.c ****     // Store new value reads
3410:..\src/command_processing.c ****     uint8 aux = g_rx.buffer[1];
 24391              		.loc 1 3410 0
 24392 0006 294B     		ldr	r3, .L938
 24393 0008 5B78     		ldrb	r3, [r3, #1]
 24394 000a FB71     		strb	r3, [r7, #7]
3411:..\src/command_processing.c ****     
3412:..\src/command_processing.c ****     // Check type of control mode enabled
3413:..\src/command_processing.c ****     if ((g_mem.motor[0].control_mode == CONTROL_ANGLE) || (g_mem.motor[0].control_mode == CURR_AND_
 24395              		.loc 1 3413 0
 24396 000c 284B     		ldr	r3, .L938+4
 24397 000e 93F80F31 		ldrb	r3, [r3, #271]	@ zero_extendqisi2
 24398 0012 002B     		cmp	r3, #0
 24399 0014 04D0     		beq	.L932
 24400              		.loc 1 3413 0 is_stmt 0 discriminator 1
 24401 0016 264B     		ldr	r3, .L938+4
 24402 0018 93F80F31 		ldrb	r3, [r3, #271]	@ zero_extendqisi2
 24403 001c 032B     		cmp	r3, #3
 24404 001e 0BD1     		bne	.L933
 24405              	.L932:
3414:..\src/command_processing.c ****         g_refNew[0].pos = g_meas[g_mem.motor[0].encoder_line].pos[0];
 24406              		.loc 1 3414 0 is_stmt 1
 24407 0020 234B     		ldr	r3, .L938+4
 24408 0022 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 24409 0026 1946     		mov	r1, r3
 24410 0028 224A     		ldr	r2, .L938+8
 24411 002a 3423     		movs	r3, #52
 24412 002c 03FB01F3 		mul	r3, r3, r1
 24413 0030 1344     		add	r3, r3, r2
 24414 0032 1B68     		ldr	r3, [r3]
 24415 0034 204A     		ldr	r2, .L938+12
 24416 0036 1360     		str	r3, [r2]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 533


 24417              	.L933:
3415:..\src/command_processing.c ****     }
3416:..\src/command_processing.c ****     g_refNew[0].onoff = (aux & 0x01);
 24418              		.loc 1 3416 0
 24419 0038 FB79     		ldrb	r3, [r7, #7]
 24420 003a 03F00103 		and	r3, r3, #1
 24421 003e DAB2     		uxtb	r2, r3
 24422 0040 1D4B     		ldr	r3, .L938+12
 24423 0042 1A73     		strb	r2, [r3, #12]
3417:..\src/command_processing.c ****     
3418:..\src/command_processing.c **** #ifdef AIR_CHAMBERS_FB_FW
3419:..\src/command_processing.c ****     if (g_mem.dev.dev_type == AIR_CHAMBERS_FB){
3420:..\src/command_processing.c ****         // Send PWM 0 to the PUMP in case a deactivation command arrives
3421:..\src/command_processing.c ****         // [There is no driver activation, so g_refNew[i].onoff is useless]
3422:..\src/command_processing.c ****         if (!(g_refNew[0].onoff)) {
3423:..\src/command_processing.c ****             g_refNew[0].pwm = 0;
3424:..\src/command_processing.c ****         }
3425:..\src/command_processing.c ****         
3426:..\src/command_processing.c ****         // Activate or deactivate the valve
3427:..\src/command_processing.c ****         VALVE_Write((aux >> 1) & 0x01);
3428:..\src/command_processing.c ****     }
3429:..\src/command_processing.c **** #endif
3430:..\src/command_processing.c ****     
3431:..\src/command_processing.c ****     // Activate/Deactivate motor
3432:..\src/command_processing.c ****     enable_motor(0, g_refNew[0].onoff); 
 24424              		.loc 1 3432 0
 24425 0044 1C4B     		ldr	r3, .L938+12
 24426 0046 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 24427 0048 1946     		mov	r1, r3
 24428 004a 0020     		movs	r0, #0
 24429 004c FFF7FEFF 		bl	enable_motor
3433:..\src/command_processing.c ****     
3434:..\src/command_processing.c ****     if (g_mem.dev.use_2nd_motor_flag == TRUE) {
 24430              		.loc 1 3434 0
 24431 0050 174B     		ldr	r3, .L938+4
 24432 0052 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 24433 0056 012B     		cmp	r3, #1
 24434 0058 23D1     		bne	.L937
3435:..\src/command_processing.c ****         if ((g_mem.motor[1].control_mode == CONTROL_ANGLE) || (g_mem.motor[1].control_mode == CURR_
 24435              		.loc 1 3435 0
 24436 005a 154B     		ldr	r3, .L938+4
 24437 005c 93F87F31 		ldrb	r3, [r3, #383]	@ zero_extendqisi2
 24438 0060 002B     		cmp	r3, #0
 24439 0062 04D0     		beq	.L935
 24440              		.loc 1 3435 0 is_stmt 0 discriminator 1
 24441 0064 124B     		ldr	r3, .L938+4
 24442 0066 93F87F31 		ldrb	r3, [r3, #383]	@ zero_extendqisi2
 24443 006a 032B     		cmp	r3, #3
 24444 006c 0BD1     		bne	.L936
 24445              	.L935:
3436:..\src/command_processing.c ****             g_refNew[1].pos = g_meas[g_mem.motor[1].encoder_line].pos[0];
 24446              		.loc 1 3436 0 is_stmt 1
 24447 006e 104B     		ldr	r3, .L938+4
 24448 0070 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 24449 0074 1946     		mov	r1, r3
 24450 0076 0F4A     		ldr	r2, .L938+8
 24451 0078 3423     		movs	r3, #52
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 534


 24452 007a 03FB01F3 		mul	r3, r3, r1
 24453 007e 1344     		add	r3, r3, r2
 24454 0080 1B68     		ldr	r3, [r3]
 24455 0082 0D4A     		ldr	r2, .L938+12
 24456 0084 1361     		str	r3, [r2, #16]
 24457              	.L936:
3437:..\src/command_processing.c ****         }
3438:..\src/command_processing.c ****         g_refNew[1].onoff = ((aux >> 1) & 0x01);
 24458              		.loc 1 3438 0
 24459 0086 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 24460 0088 5B08     		lsrs	r3, r3, #1
 24461 008a DBB2     		uxtb	r3, r3
 24462 008c 03F00103 		and	r3, r3, #1
 24463 0090 DAB2     		uxtb	r2, r3
 24464 0092 094B     		ldr	r3, .L938+12
 24465 0094 1A77     		strb	r2, [r3, #28]
3439:..\src/command_processing.c ****         enable_motor(1, g_refNew[1].onoff); 
 24466              		.loc 1 3439 0
 24467 0096 084B     		ldr	r3, .L938+12
 24468 0098 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 24469 009a 1946     		mov	r1, r3
 24470 009c 0120     		movs	r0, #1
 24471 009e FFF7FEFF 		bl	enable_motor
 24472              	.L937:
3440:..\src/command_processing.c ****     }
3441:..\src/command_processing.c ****     
3442:..\src/command_processing.c **** }
 24473              		.loc 1 3442 0
 24474 00a2 00BF     		nop
 24475 00a4 0837     		adds	r7, r7, #8
 24476              		.cfi_def_cfa_offset 8
 24477 00a6 BD46     		mov	sp, r7
 24478              		.cfi_def_cfa_register 13
 24479              		@ sp needed
 24480 00a8 80BD     		pop	{r7, pc}
 24481              	.L939:
 24482 00aa 00BF     		.align	2
 24483              	.L938:
 24484 00ac 00000000 		.word	g_rx
 24485 00b0 00000000 		.word	g_mem
 24486 00b4 00000000 		.word	g_meas
 24487 00b8 00000000 		.word	g_refNew
 24488              		.cfi_endproc
 24489              	.LFE96:
 24490              		.size	cmd_activate, .-cmd_activate
 24491              		.section	.text.cmd_get_activate,"ax",%progbits
 24492              		.align	2
 24493              		.global	cmd_get_activate
 24494              		.thumb
 24495              		.thumb_func
 24496              		.type	cmd_get_activate, %function
 24497              	cmd_get_activate:
 24498              	.LFB97:
3443:..\src/command_processing.c **** 
3444:..\src/command_processing.c **** void cmd_get_activate(){
 24499              		.loc 1 3444 0
 24500              		.cfi_startproc
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 535


 24501              		@ args = 0, pretend = 0, frame = 8
 24502              		@ frame_needed = 1, uses_anonymous_args = 0
 24503 0000 80B5     		push	{r7, lr}
 24504              		.cfi_def_cfa_offset 8
 24505              		.cfi_offset 7, -8
 24506              		.cfi_offset 14, -4
 24507 0002 82B0     		sub	sp, sp, #8
 24508              		.cfi_def_cfa_offset 16
 24509 0004 00AF     		add	r7, sp, #0
 24510              		.cfi_def_cfa_register 7
3445:..\src/command_processing.c ****     
3446:..\src/command_processing.c ****     uint8 packet_data[3];
3447:..\src/command_processing.c **** 
3448:..\src/command_processing.c ****     // Header        
3449:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ACTIVATE;
 24511              		.loc 1 3449 0
 24512 0006 8123     		movs	r3, #129
 24513 0008 3B71     		strb	r3, [r7, #4]
3450:..\src/command_processing.c ****     
3451:..\src/command_processing.c ****     // Fill payload
3452:..\src/command_processing.c ****     if (g_mem.dev.use_2nd_motor_flag == TRUE) {
 24514              		.loc 1 3452 0
 24515 000a 124B     		ldr	r3, .L943
 24516 000c 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 24517 0010 012B     		cmp	r3, #1
 24518 0012 0BD1     		bne	.L941
3453:..\src/command_processing.c ****         packet_data[1] = ((g_ref[1].onoff << 1) | g_ref[0].onoff);
 24519              		.loc 1 3453 0
 24520 0014 104B     		ldr	r3, .L943+4
 24521 0016 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 24522 0018 5B00     		lsls	r3, r3, #1
 24523 001a 5AB2     		sxtb	r2, r3
 24524 001c 0E4B     		ldr	r3, .L943+4
 24525 001e 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 24526 0020 5BB2     		sxtb	r3, r3
 24527 0022 1343     		orrs	r3, r3, r2
 24528 0024 5BB2     		sxtb	r3, r3
 24529 0026 DBB2     		uxtb	r3, r3
 24530 0028 7B71     		strb	r3, [r7, #5]
 24531 002a 02E0     		b	.L942
 24532              	.L941:
3454:..\src/command_processing.c ****     } 
3455:..\src/command_processing.c ****     else {
3456:..\src/command_processing.c ****         packet_data[1] = g_ref[0].onoff;
 24533              		.loc 1 3456 0
 24534 002c 0A4B     		ldr	r3, .L943+4
 24535 002e 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 24536 0030 7B71     		strb	r3, [r7, #5]
 24537              	.L942:
3457:..\src/command_processing.c ****     }
3458:..\src/command_processing.c ****     
3459:..\src/command_processing.c ****     // Calculate checksum
3460:..\src/command_processing.c ****     packet_data[2] = LCRChecksum(packet_data, 2);
 24538              		.loc 1 3460 0
 24539 0032 3B1D     		adds	r3, r7, #4
 24540 0034 0221     		movs	r1, #2
 24541 0036 1846     		mov	r0, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 536


 24542 0038 FFF7FEFF 		bl	LCRChecksum
 24543 003c 0346     		mov	r3, r0
 24544 003e BB71     		strb	r3, [r7, #6]
3461:..\src/command_processing.c ****     
3462:..\src/command_processing.c ****     // Send package to UART
3463:..\src/command_processing.c ****     commWrite(packet_data, 3);
 24545              		.loc 1 3463 0
 24546 0040 3B1D     		adds	r3, r7, #4
 24547 0042 0321     		movs	r1, #3
 24548 0044 1846     		mov	r0, r3
 24549 0046 FFF7FEFF 		bl	commWrite
3464:..\src/command_processing.c **** 
3465:..\src/command_processing.c **** }
 24550              		.loc 1 3465 0
 24551 004a 00BF     		nop
 24552 004c 0837     		adds	r7, r7, #8
 24553              		.cfi_def_cfa_offset 8
 24554 004e BD46     		mov	sp, r7
 24555              		.cfi_def_cfa_register 13
 24556              		@ sp needed
 24557 0050 80BD     		pop	{r7, pc}
 24558              	.L944:
 24559 0052 00BF     		.align	2
 24560              	.L943:
 24561 0054 00000000 		.word	g_mem
 24562 0058 00000000 		.word	g_ref
 24563              		.cfi_endproc
 24564              	.LFE97:
 24565              		.size	cmd_get_activate, .-cmd_get_activate
 24566              		.section	.text.cmd_get_curr_and_meas,"ax",%progbits
 24567              		.align	2
 24568              		.global	cmd_get_curr_and_meas
 24569              		.thumb
 24570              		.thumb_func
 24571              		.type	cmd_get_curr_and_meas, %function
 24572              	cmd_get_curr_and_meas:
 24573              	.LFB98:
3466:..\src/command_processing.c **** 
3467:..\src/command_processing.c **** void cmd_get_curr_and_meas(){
 24574              		.loc 1 3467 0
 24575              		.cfi_startproc
 24576              		@ args = 0, pretend = 0, frame = 16
 24577              		@ frame_needed = 1, uses_anonymous_args = 0
 24578 0000 90B5     		push	{r4, r7, lr}
 24579              		.cfi_def_cfa_offset 12
 24580              		.cfi_offset 4, -12
 24581              		.cfi_offset 7, -8
 24582              		.cfi_offset 14, -4
 24583 0002 85B0     		sub	sp, sp, #20
 24584              		.cfi_def_cfa_offset 32
 24585 0004 00AF     		add	r7, sp, #0
 24586              		.cfi_def_cfa_register 7
3468:..\src/command_processing.c ****     
3469:..\src/command_processing.c ****     uint8 CYDATA index;
3470:..\src/command_processing.c ****     int16 aux_int16;
3471:..\src/command_processing.c ****    
3472:..\src/command_processing.c ****     //Packet: header + curr_meas(int16) + pos_meas(int16) + CRC
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 537


3473:..\src/command_processing.c ****     
3474:..\src/command_processing.c ****     uint8 packet_data[12]; 
3475:..\src/command_processing.c **** 
3476:..\src/command_processing.c ****     //Header package
3477:..\src/command_processing.c ****     packet_data[0] = CMD_GET_CURR_AND_MEAS;
 24587              		.loc 1 3477 0
 24588 0006 8623     		movs	r3, #134
 24589 0008 3B70     		strb	r3, [r7]
3478:..\src/command_processing.c **** 
3479:..\src/command_processing.c ****     // Currents
3480:..\src/command_processing.c ****     aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].curr; //Real current motor1
 24590              		.loc 1 3480 0
 24591 000a 484B     		ldr	r3, .L950
 24592 000c 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 24593 0010 1946     		mov	r1, r3
 24594 0012 474A     		ldr	r2, .L950+4
 24595 0014 3423     		movs	r3, #52
 24596 0016 03FB01F3 		mul	r3, r3, r1
 24597 001a 1344     		add	r3, r3, r2
 24598 001c 0C33     		adds	r3, r3, #12
 24599 001e 1B68     		ldr	r3, [r3]
 24600 0020 1BB2     		sxth	r3, r3
 24601 0022 BB81     		strh	r3, [r7, #12]	@ movhi
3481:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 24602              		.loc 1 3481 0
 24603 0024 07F10C03 		add	r3, r7, #12
 24604 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24605 002a BB70     		strb	r3, [r7, #2]
3482:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 24606              		.loc 1 3482 0
 24607 002c 07F10C03 		add	r3, r7, #12
 24608 0030 0133     		adds	r3, r3, #1
 24609 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24610 0034 7B70     		strb	r3, [r7, #1]
3483:..\src/command_processing.c ****     
3484:..\src/command_processing.c ****     if (c_mem.dev.use_2nd_motor_flag == TRUE) {
 24611              		.loc 1 3484 0
 24612 0036 3F4B     		ldr	r3, .L950+8
 24613 0038 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 24614 003c 012B     		cmp	r3, #1
 24615 003e 0DD1     		bne	.L946
3485:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld[g_mem.motor[1].encoder_line].curr; //Real current motor 2
 24616              		.loc 1 3485 0
 24617 0040 3A4B     		ldr	r3, .L950
 24618 0042 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 24619 0046 1946     		mov	r1, r3
 24620 0048 394A     		ldr	r2, .L950+4
 24621 004a 3423     		movs	r3, #52
 24622 004c 03FB01F3 		mul	r3, r3, r1
 24623 0050 1344     		add	r3, r3, r2
 24624 0052 0C33     		adds	r3, r3, #12
 24625 0054 1B68     		ldr	r3, [r3]
 24626 0056 1BB2     		sxth	r3, r3
 24627 0058 BB81     		strh	r3, [r7, #12]	@ movhi
 24628 005a 0CE0     		b	.L947
 24629              	.L946:
3486:..\src/command_processing.c ****     }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 538


3487:..\src/command_processing.c ****     else {
3488:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].estim_curr; //Estimated current
 24630              		.loc 1 3488 0
 24631 005c 334B     		ldr	r3, .L950
 24632 005e 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 24633 0062 1946     		mov	r1, r3
 24634 0064 324A     		ldr	r2, .L950+4
 24635 0066 3423     		movs	r3, #52
 24636 0068 03FB01F3 		mul	r3, r3, r1
 24637 006c 1344     		add	r3, r3, r2
 24638 006e 1033     		adds	r3, r3, #16
 24639 0070 1B68     		ldr	r3, [r3]
 24640 0072 1BB2     		sxth	r3, r3
 24641 0074 BB81     		strh	r3, [r7, #12]	@ movhi
 24642              	.L947:
3489:..\src/command_processing.c ****     }
3490:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
 24643              		.loc 1 3490 0
 24644 0076 07F10C03 		add	r3, r7, #12
 24645 007a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24646 007c 3B71     		strb	r3, [r7, #4]
3491:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
 24647              		.loc 1 3491 0
 24648 007e 07F10C03 		add	r3, r7, #12
 24649 0082 0133     		adds	r3, r3, #1
 24650 0084 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24651 0086 FB70     		strb	r3, [r7, #3]
3492:..\src/command_processing.c **** 
3493:..\src/command_processing.c ****     // Positions
3494:..\src/command_processing.c ****     for (index = NUM_OF_SENSORS; index--;) {
 24652              		.loc 1 3494 0
 24653 0088 0323     		movs	r3, #3
 24654 008a FB73     		strb	r3, [r7, #15]
 24655 008c 38E0     		b	.L948
 24656              	.L949:
3495:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].pos[index] >> g_mem.enc[g_mem.mo
 24657              		.loc 1 3495 0
 24658 008e 274B     		ldr	r3, .L950
 24659 0090 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 24660 0094 1A46     		mov	r2, r3
 24661 0096 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 24662 0098 2548     		ldr	r0, .L950+4
 24663 009a 1346     		mov	r3, r2
 24664 009c 5B00     		lsls	r3, r3, #1
 24665 009e 1344     		add	r3, r3, r2
 24666 00a0 9B00     		lsls	r3, r3, #2
 24667 00a2 1344     		add	r3, r3, r2
 24668 00a4 0B44     		add	r3, r3, r1
 24669 00a6 50F82320 		ldr	r2, [r0, r3, lsl #2]
 24670 00aa 204B     		ldr	r3, .L950
 24671 00ac 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 24672 00b0 1C46     		mov	r4, r3
 24673 00b2 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 24674 00b4 1D48     		ldr	r0, .L950
 24675 00b6 2346     		mov	r3, r4
 24676 00b8 5B00     		lsls	r3, r3, #1
 24677 00ba 2344     		add	r3, r3, r4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 539


 24678 00bc 1B01     		lsls	r3, r3, #4
 24679 00be 0344     		add	r3, r3, r0
 24680 00c0 0B44     		add	r3, r3, r1
 24681 00c2 03F29513 		addw	r3, r3, #405
 24682 00c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24683 00c8 42FA03F3 		asr	r3, r2, r3
 24684 00cc 1BB2     		sxth	r3, r3
 24685 00ce BB81     		strh	r3, [r7, #12]	@ movhi
3496:..\src/command_processing.c ****         packet_data[(index << 1) + 6] = ((char*)(&aux_int16))[0];
 24686              		.loc 1 3496 0
 24687 00d0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24688 00d2 5B00     		lsls	r3, r3, #1
 24689 00d4 0633     		adds	r3, r3, #6
 24690 00d6 07F10C02 		add	r2, r7, #12
 24691 00da 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 24692 00dc 07F11001 		add	r1, r7, #16
 24693 00e0 0B44     		add	r3, r3, r1
 24694 00e2 03F8102C 		strb	r2, [r3, #-16]
3497:..\src/command_processing.c ****         packet_data[(index << 1) + 5] = ((char*)(&aux_int16))[1];
 24695              		.loc 1 3497 0
 24696 00e6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24697 00e8 5B00     		lsls	r3, r3, #1
 24698 00ea 5A1D     		adds	r2, r3, #5
 24699 00ec 07F10C03 		add	r3, r7, #12
 24700 00f0 0133     		adds	r3, r3, #1
 24701 00f2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 24702 00f4 07F11003 		add	r3, r7, #16
 24703 00f8 1344     		add	r3, r3, r2
 24704 00fa 0A46     		mov	r2, r1
 24705 00fc 03F8102C 		strb	r2, [r3, #-16]
 24706              	.L948:
3494:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].pos[index] >> g_mem.enc[g_mem.mo
 24707              		.loc 1 3494 0 discriminator 1
 24708 0100 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24709 0102 5A1E     		subs	r2, r3, #1
 24710 0104 FA73     		strb	r2, [r7, #15]
 24711 0106 002B     		cmp	r3, #0
 24712 0108 C1D1     		bne	.L949
3498:..\src/command_processing.c ****     }
3499:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3500:..\src/command_processing.c ****         
3501:..\src/command_processing.c ****     packet_data[11] = LCRChecksum (packet_data, 11);
 24713              		.loc 1 3501 0
 24714 010a 3B46     		mov	r3, r7
 24715 010c 0B21     		movs	r1, #11
 24716 010e 1846     		mov	r0, r3
 24717 0110 FFF7FEFF 		bl	LCRChecksum
 24718 0114 0346     		mov	r3, r0
 24719 0116 FB72     		strb	r3, [r7, #11]
3502:..\src/command_processing.c ****     commWrite(packet_data, 12);
 24720              		.loc 1 3502 0
 24721 0118 3B46     		mov	r3, r7
 24722 011a 0C21     		movs	r1, #12
 24723 011c 1846     		mov	r0, r3
 24724 011e FFF7FEFF 		bl	commWrite
3503:..\src/command_processing.c ****    
3504:..\src/command_processing.c **** }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 540


 24725              		.loc 1 3504 0
 24726 0122 00BF     		nop
 24727 0124 1437     		adds	r7, r7, #20
 24728              		.cfi_def_cfa_offset 12
 24729 0126 BD46     		mov	sp, r7
 24730              		.cfi_def_cfa_register 13
 24731              		@ sp needed
 24732 0128 90BD     		pop	{r4, r7, pc}
 24733              	.L951:
 24734 012a 00BF     		.align	2
 24735              	.L950:
 24736 012c 00000000 		.word	g_mem
 24737 0130 00000000 		.word	g_measOld
 24738 0134 00000000 		.word	c_mem
 24739              		.cfi_endproc
 24740              	.LFE98:
 24741              		.size	cmd_get_curr_and_meas, .-cmd_get_curr_and_meas
 24742              		.global	__aeabi_dmul
 24743              		.global	__aeabi_d2iz
 24744              		.section	.text.cmd_get_currents,"ax",%progbits
 24745              		.align	2
 24746              		.global	cmd_get_currents
 24747              		.thumb
 24748              		.thumb_func
 24749              		.type	cmd_get_currents, %function
 24750              	cmd_get_currents:
 24751              	.LFB99:
3505:..\src/command_processing.c **** 
3506:..\src/command_processing.c **** void cmd_get_currents(){
 24752              		.loc 1 3506 0
 24753              		.cfi_startproc
 24754              		@ args = 0, pretend = 0, frame = 16
 24755              		@ frame_needed = 1, uses_anonymous_args = 0
 24756 0000 90B5     		push	{r4, r7, lr}
 24757              		.cfi_def_cfa_offset 12
 24758              		.cfi_offset 4, -12
 24759              		.cfi_offset 7, -8
 24760              		.cfi_offset 14, -4
 24761 0002 85B0     		sub	sp, sp, #20
 24762              		.cfi_def_cfa_offset 32
 24763 0004 00AF     		add	r7, sp, #0
 24764              		.cfi_def_cfa_register 7
3507:..\src/command_processing.c ****     
3508:..\src/command_processing.c ****     // Packet: header + motor_measure(int16) + crc
3509:..\src/command_processing.c ****     
3510:..\src/command_processing.c ****     uint8 packet_data[6]; 
3511:..\src/command_processing.c ****     int16 aux_int16;
3512:..\src/command_processing.c ****     
3513:..\src/command_processing.c ****     //Header package
3514:..\src/command_processing.c **** 
3515:..\src/command_processing.c ****     packet_data[0] = CMD_GET_CURRENTS;
 24765              		.loc 1 3515 0
 24766 0006 8523     		movs	r3, #133
 24767 0008 3B72     		strb	r3, [r7, #8]
3516:..\src/command_processing.c **** 
3517:..\src/command_processing.c ****     if (c_mem.dev.dev_type != AIR_CHAMBERS_FB){
 24768              		.loc 1 3517 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 541


 24769 000a 334B     		ldr	r3, .L957
 24770 000c 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 24771 0010 022B     		cmp	r3, #2
 24772 0012 0DD0     		beq	.L953
3518:..\src/command_processing.c ****         // Currents
3519:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].curr; //Real current
 24773              		.loc 1 3519 0
 24774 0014 314B     		ldr	r3, .L957+4
 24775 0016 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 24776 001a 1946     		mov	r1, r3
 24777 001c 304A     		ldr	r2, .L957+8
 24778 001e 3423     		movs	r3, #52
 24779 0020 03FB01F3 		mul	r3, r3, r1
 24780 0024 1344     		add	r3, r3, r2
 24781 0026 0C33     		adds	r3, r3, #12
 24782 0028 1B68     		ldr	r3, [r3]
 24783 002a 1BB2     		sxth	r3, r3
 24784 002c FB80     		strh	r3, [r7, #6]	@ movhi
 24785 002e 12E0     		b	.L954
 24786              	.L953:
3520:..\src/command_processing.c ****     }
3521:..\src/command_processing.c ****     else {
3522:..\src/command_processing.c ****         // Send pressure times 100 here instead of current (Simulink use)
3523:..\src/command_processing.c ****         aux_int16 = (int16)(g_fb_meas.pressure*100.0); //Pressure
 24787              		.loc 1 3523 0
 24788 0030 2C4B     		ldr	r3, .L957+12
 24789 0032 1B68     		ldr	r3, [r3]	@ float
 24790 0034 1846     		mov	r0, r3
 24791 0036 FFF7FEFF 		bl	__aeabi_f2d
 24792 003a 4FF00002 		mov	r2, #0
 24793 003e 2A4B     		ldr	r3, .L957+16
 24794 0040 FFF7FEFF 		bl	__aeabi_dmul
 24795 0044 0346     		mov	r3, r0
 24796 0046 0C46     		mov	r4, r1
 24797 0048 1846     		mov	r0, r3
 24798 004a 2146     		mov	r1, r4
 24799 004c FFF7FEFF 		bl	__aeabi_d2iz
 24800 0050 0346     		mov	r3, r0
 24801 0052 1BB2     		sxth	r3, r3
 24802 0054 FB80     		strh	r3, [r7, #6]	@ movhi
 24803              	.L954:
3524:..\src/command_processing.c ****     }
3525:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 24804              		.loc 1 3525 0
 24805 0056 BB1D     		adds	r3, r7, #6
 24806 0058 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24807 005a BB72     		strb	r3, [r7, #10]
3526:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 24808              		.loc 1 3526 0
 24809 005c BB1D     		adds	r3, r7, #6
 24810 005e 0133     		adds	r3, r3, #1
 24811 0060 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24812 0062 7B72     		strb	r3, [r7, #9]
3527:..\src/command_processing.c ****     
3528:..\src/command_processing.c ****     if (c_mem.dev.use_2nd_motor_flag == TRUE) {
 24813              		.loc 1 3528 0
 24814 0064 1C4B     		ldr	r3, .L957
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 542


 24815 0066 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 24816 006a 012B     		cmp	r3, #1
 24817 006c 0DD1     		bne	.L955
3529:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld[g_mem.motor[1].encoder_line].curr; //Real current motor 2
 24818              		.loc 1 3529 0
 24819 006e 1B4B     		ldr	r3, .L957+4
 24820 0070 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 24821 0074 1946     		mov	r1, r3
 24822 0076 1A4A     		ldr	r2, .L957+8
 24823 0078 3423     		movs	r3, #52
 24824 007a 03FB01F3 		mul	r3, r3, r1
 24825 007e 1344     		add	r3, r3, r2
 24826 0080 0C33     		adds	r3, r3, #12
 24827 0082 1B68     		ldr	r3, [r3]
 24828 0084 1BB2     		sxth	r3, r3
 24829 0086 FB80     		strh	r3, [r7, #6]	@ movhi
 24830 0088 0CE0     		b	.L956
 24831              	.L955:
3530:..\src/command_processing.c ****     }
3531:..\src/command_processing.c ****     else {
3532:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].estim_curr; //Estimated current
 24832              		.loc 1 3532 0
 24833 008a 144B     		ldr	r3, .L957+4
 24834 008c 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 24835 0090 1946     		mov	r1, r3
 24836 0092 134A     		ldr	r2, .L957+8
 24837 0094 3423     		movs	r3, #52
 24838 0096 03FB01F3 		mul	r3, r3, r1
 24839 009a 1344     		add	r3, r3, r2
 24840 009c 1033     		adds	r3, r3, #16
 24841 009e 1B68     		ldr	r3, [r3]
 24842 00a0 1BB2     		sxth	r3, r3
 24843 00a2 FB80     		strh	r3, [r7, #6]	@ movhi
 24844              	.L956:
3533:..\src/command_processing.c ****     }
3534:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
 24845              		.loc 1 3534 0
 24846 00a4 BB1D     		adds	r3, r7, #6
 24847 00a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24848 00a8 3B73     		strb	r3, [r7, #12]
3535:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
 24849              		.loc 1 3535 0
 24850 00aa BB1D     		adds	r3, r7, #6
 24851 00ac 0133     		adds	r3, r3, #1
 24852 00ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24853 00b0 FB72     		strb	r3, [r7, #11]
3536:..\src/command_processing.c **** 
3537:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3538:..\src/command_processing.c **** 
3539:..\src/command_processing.c ****     packet_data[5] = LCRChecksum (packet_data, 5);
 24854              		.loc 1 3539 0
 24855 00b2 07F10803 		add	r3, r7, #8
 24856 00b6 0521     		movs	r1, #5
 24857 00b8 1846     		mov	r0, r3
 24858 00ba FFF7FEFF 		bl	LCRChecksum
 24859 00be 0346     		mov	r3, r0
 24860 00c0 7B73     		strb	r3, [r7, #13]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 543


3540:..\src/command_processing.c ****     
3541:..\src/command_processing.c ****     commWrite(packet_data, 6);
 24861              		.loc 1 3541 0
 24862 00c2 07F10803 		add	r3, r7, #8
 24863 00c6 0621     		movs	r1, #6
 24864 00c8 1846     		mov	r0, r3
 24865 00ca FFF7FEFF 		bl	commWrite
3542:..\src/command_processing.c **** }
 24866              		.loc 1 3542 0
 24867 00ce 00BF     		nop
 24868 00d0 1437     		adds	r7, r7, #20
 24869              		.cfi_def_cfa_offset 12
 24870 00d2 BD46     		mov	sp, r7
 24871              		.cfi_def_cfa_register 13
 24872              		@ sp needed
 24873 00d4 90BD     		pop	{r4, r7, pc}
 24874              	.L958:
 24875 00d6 00BF     		.align	2
 24876              	.L957:
 24877 00d8 00000000 		.word	c_mem
 24878 00dc 00000000 		.word	g_mem
 24879 00e0 00000000 		.word	g_measOld
 24880 00e4 00000000 		.word	g_fb_meas
 24881 00e8 00005940 		.word	1079574528
 24882              		.cfi_endproc
 24883              	.LFE99:
 24884              		.size	cmd_get_currents, .-cmd_get_currents
 24885              		.section	.text.cmd_get_currents_for_cuff,"ax",%progbits
 24886              		.align	2
 24887              		.global	cmd_get_currents_for_cuff
 24888              		.thumb
 24889              		.thumb_func
 24890              		.type	cmd_get_currents_for_cuff, %function
 24891              	cmd_get_currents_for_cuff:
 24892              	.LFB100:
3543:..\src/command_processing.c **** 
3544:..\src/command_processing.c **** void cmd_get_currents_for_cuff(){
 24893              		.loc 1 3544 0
 24894              		.cfi_startproc
 24895              		@ args = 0, pretend = 0, frame = 8
 24896              		@ frame_needed = 1, uses_anonymous_args = 0
 24897 0000 80B5     		push	{r7, lr}
 24898              		.cfi_def_cfa_offset 8
 24899              		.cfi_offset 7, -8
 24900              		.cfi_offset 14, -4
 24901 0002 82B0     		sub	sp, sp, #8
 24902              		.cfi_def_cfa_offset 16
 24903 0004 00AF     		add	r7, sp, #0
 24904              		.cfi_def_cfa_register 7
3545:..\src/command_processing.c ****     
3546:..\src/command_processing.c ****     // Packet: header + motor_measure(int16) + crc
3547:..\src/command_processing.c ****     
3548:..\src/command_processing.c ****     uint8 packet_data[4]; 
3549:..\src/command_processing.c ****     int16 aux_int16;
3550:..\src/command_processing.c ****     
3551:..\src/command_processing.c ****     //Header package
3552:..\src/command_processing.c **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 544


3553:..\src/command_processing.c ****     packet_data[0] = CMD_SET_CUFF_INPUTS;
 24905              		.loc 1 3553 0
 24906 0006 8E23     		movs	r3, #142
 24907 0008 3B71     		strb	r3, [r7, #4]
3554:..\src/command_processing.c **** 
3555:..\src/command_processing.c ****     aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].estim_curr; //Estimated Current
 24908              		.loc 1 3555 0
 24909 000a 144B     		ldr	r3, .L960
 24910 000c 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 24911 0010 1946     		mov	r1, r3
 24912 0012 134A     		ldr	r2, .L960+4
 24913 0014 3423     		movs	r3, #52
 24914 0016 03FB01F3 		mul	r3, r3, r1
 24915 001a 1344     		add	r3, r3, r2
 24916 001c 1033     		adds	r3, r3, #16
 24917 001e 1B68     		ldr	r3, [r3]
 24918 0020 1BB2     		sxth	r3, r3
 24919 0022 7B80     		strh	r3, [r7, #2]	@ movhi
3556:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 24920              		.loc 1 3556 0
 24921 0024 BB1C     		adds	r3, r7, #2
 24922 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24923 0028 BB71     		strb	r3, [r7, #6]
3557:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 24924              		.loc 1 3557 0
 24925 002a BB1C     		adds	r3, r7, #2
 24926 002c 0133     		adds	r3, r3, #1
 24927 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24928 0030 7B71     		strb	r3, [r7, #5]
3558:..\src/command_processing.c **** 
3559:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3560:..\src/command_processing.c **** 
3561:..\src/command_processing.c ****     packet_data[3] = LCRChecksum (packet_data, 3);
 24929              		.loc 1 3561 0
 24930 0032 3B1D     		adds	r3, r7, #4
 24931 0034 0321     		movs	r1, #3
 24932 0036 1846     		mov	r0, r3
 24933 0038 FFF7FEFF 		bl	LCRChecksum
 24934 003c 0346     		mov	r3, r0
 24935 003e FB71     		strb	r3, [r7, #7]
3562:..\src/command_processing.c ****     
3563:..\src/command_processing.c ****     commWriteID(packet_data, 4, g_mem.dev.id -1);
 24936              		.loc 1 3563 0
 24937 0040 064B     		ldr	r3, .L960
 24938 0042 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 24939 0046 013B     		subs	r3, r3, #1
 24940 0048 DAB2     		uxtb	r2, r3
 24941 004a 3B1D     		adds	r3, r7, #4
 24942 004c 0421     		movs	r1, #4
 24943 004e 1846     		mov	r0, r3
 24944 0050 FFF7FEFF 		bl	commWriteID
3564:..\src/command_processing.c **** }
 24945              		.loc 1 3564 0
 24946 0054 00BF     		nop
 24947 0056 0837     		adds	r7, r7, #8
 24948              		.cfi_def_cfa_offset 8
 24949 0058 BD46     		mov	sp, r7
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 545


 24950              		.cfi_def_cfa_register 13
 24951              		@ sp needed
 24952 005a 80BD     		pop	{r7, pc}
 24953              	.L961:
 24954              		.align	2
 24955              	.L960:
 24956 005c 00000000 		.word	g_mem
 24957 0060 00000000 		.word	g_measOld
 24958              		.cfi_endproc
 24959              	.LFE100:
 24960              		.size	cmd_get_currents_for_cuff, .-cmd_get_currents_for_cuff
 24961              		.section	.text.commReadResCurrFromSH,"ax",%progbits
 24962              		.align	2
 24963              		.global	commReadResCurrFromSH
 24964              		.thumb
 24965              		.thumb_func
 24966              		.type	commReadResCurrFromSH, %function
 24967              	commReadResCurrFromSH:
 24968              	.LFB101:
3565:..\src/command_processing.c **** 
3566:..\src/command_processing.c **** //==============================================================================
3567:..\src/command_processing.c **** //                                  READ RESIDUAL CURRENT FUNCTION FROM SOFTHAND
3568:..\src/command_processing.c **** //==============================================================================
3569:..\src/command_processing.c **** 
3570:..\src/command_processing.c **** int16 commReadResCurrFromSH()
3571:..\src/command_processing.c **** {
 24969              		.loc 1 3571 0
 24970              		.cfi_startproc
 24971              		@ args = 0, pretend = 0, frame = 32
 24972              		@ frame_needed = 1, uses_anonymous_args = 0
 24973 0000 80B5     		push	{r7, lr}
 24974              		.cfi_def_cfa_offset 8
 24975              		.cfi_offset 7, -8
 24976              		.cfi_offset 14, -4
 24977 0002 88B0     		sub	sp, sp, #32
 24978              		.cfi_def_cfa_offset 40
 24979 0004 00AF     		add	r7, sp, #0
 24980              		.cfi_def_cfa_register 7
3572:..\src/command_processing.c ****     uint8 packet_data[16];
3573:..\src/command_processing.c ****     uint8 packet_lenght;
3574:..\src/command_processing.c ****     int16 curr_diff = 0;
 24981              		.loc 1 3574 0
 24982 0006 0023     		movs	r3, #0
 24983 0008 FB83     		strh	r3, [r7, #30]	@ movhi
3575:..\src/command_processing.c ****     uint32 t_start, t_end;
3576:..\src/command_processing.c ****     uint8 read_flag = TRUE;
 24984              		.loc 1 3576 0
 24985 000a 0123     		movs	r3, #1
 24986 000c 7B77     		strb	r3, [r7, #29]
3577:..\src/command_processing.c **** 
3578:..\src/command_processing.c ****     packet_lenght = 2;
 24987              		.loc 1 3578 0
 24988 000e 0223     		movs	r3, #2
 24989 0010 3B77     		strb	r3, [r7, #28]
3579:..\src/command_processing.c ****     packet_data[0] = CMD_GET_CURR_DIFF;
 24990              		.loc 1 3579 0
 24991 0012 8C23     		movs	r3, #140
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 546


 24992 0014 3B71     		strb	r3, [r7, #4]
3580:..\src/command_processing.c ****     packet_data[1] = CMD_GET_CURR_DIFF;
 24993              		.loc 1 3580 0
 24994 0016 8C23     		movs	r3, #140
 24995 0018 7B71     		strb	r3, [r7, #5]
3581:..\src/command_processing.c ****     commWriteID(packet_data, packet_lenght, c_mem.MS.slave_ID);
 24996              		.loc 1 3581 0
 24997 001a 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 24998 001c 99B2     		uxth	r1, r3
 24999 001e 1D4B     		ldr	r3, .L969
 25000 0020 93F8C122 		ldrb	r2, [r3, #705]	@ zero_extendqisi2
 25001 0024 3B1D     		adds	r3, r7, #4
 25002 0026 1846     		mov	r0, r3
 25003 0028 FFF7FEFF 		bl	commWriteID
3582:..\src/command_processing.c **** 
3583:..\src/command_processing.c ****     t_start = (uint32) MY_TIMER_ReadCounter();
 25004              		.loc 1 3583 0
 25005 002c FFF7FEFF 		bl	MY_TIMER_ReadCounter
 25006 0030 0346     		mov	r3, r0
 25007 0032 BB61     		str	r3, [r7, #24]
3584:..\src/command_processing.c ****     while(g_rx.buffer[0] != CMD_SET_CUFF_INPUTS) {
 25008              		.loc 1 3584 0
 25009 0034 18E0     		b	.L963
 25010              	.L966:
3585:..\src/command_processing.c ****         if (interrupt_flag){
 25011              		.loc 1 3585 0
 25012 0036 184B     		ldr	r3, .L969+4
 25013 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25014 003a 002B     		cmp	r3, #0
 25015 003c 04D0     		beq	.L964
3586:..\src/command_processing.c ****             interrupt_flag = FALSE;
 25016              		.loc 1 3586 0
 25017 003e 164B     		ldr	r3, .L969+4
 25018 0040 0022     		movs	r2, #0
 25019 0042 1A70     		strb	r2, [r3]
3587:..\src/command_processing.c ****             interrupt_manager();
 25020              		.loc 1 3587 0
 25021 0044 FFF7FEFF 		bl	interrupt_manager
 25022              	.L964:
3588:..\src/command_processing.c ****         }
3589:..\src/command_processing.c **** 
3590:..\src/command_processing.c ****         t_end = (uint32) MY_TIMER_ReadCounter();
 25023              		.loc 1 3590 0
 25024 0048 FFF7FEFF 		bl	MY_TIMER_ReadCounter
 25025 004c 0346     		mov	r3, r0
 25026 004e 7B61     		str	r3, [r7, #20]
3591:..\src/command_processing.c ****         if((t_start - t_end) > 4500000){            // 4.5 s timeout
 25027              		.loc 1 3591 0
 25028 0050 BA69     		ldr	r2, [r7, #24]
 25029 0052 7B69     		ldr	r3, [r7, #20]
 25030 0054 D31A     		subs	r3, r2, r3
 25031 0056 114A     		ldr	r2, .L969+8
 25032 0058 9342     		cmp	r3, r2
 25033 005a 05D9     		bls	.L963
3592:..\src/command_processing.c ****             read_flag = FALSE;
 25034              		.loc 1 3592 0
 25035 005c 0023     		movs	r3, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 547


 25036 005e 7B77     		strb	r3, [r7, #29]
3593:..\src/command_processing.c ****             master_mode = 0;                // Exit from master mode
 25037              		.loc 1 3593 0
 25038 0060 0F4B     		ldr	r3, .L969+12
 25039 0062 0022     		movs	r2, #0
 25040 0064 1A70     		strb	r2, [r3]
3594:..\src/command_processing.c ****             break;
 25041              		.loc 1 3594 0
 25042 0066 03E0     		b	.L965
 25043              	.L963:
3584:..\src/command_processing.c ****         if (interrupt_flag){
 25044              		.loc 1 3584 0
 25045 0068 0E4B     		ldr	r3, .L969+16
 25046 006a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25047 006c 8E2B     		cmp	r3, #142
 25048 006e E2D1     		bne	.L966
 25049              	.L965:
3595:..\src/command_processing.c ****         }
3596:..\src/command_processing.c ****     }
3597:..\src/command_processing.c **** 
3598:..\src/command_processing.c ****     if (read_flag) {
 25050              		.loc 1 3598 0
 25051 0070 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 25052 0072 002B     		cmp	r3, #0
 25053 0074 08D0     		beq	.L967
3599:..\src/command_processing.c ****         curr_diff = (int16)(g_rx.buffer[1]<<8 | g_rx.buffer[2]);                        
 25054              		.loc 1 3599 0
 25055 0076 0B4B     		ldr	r3, .L969+16
 25056 0078 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 25057 007a 1B02     		lsls	r3, r3, #8
 25058 007c 1AB2     		sxth	r2, r3
 25059 007e 094B     		ldr	r3, .L969+16
 25060 0080 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 25061 0082 1BB2     		sxth	r3, r3
 25062 0084 1343     		orrs	r3, r3, r2
 25063 0086 FB83     		strh	r3, [r7, #30]	@ movhi
 25064              	.L967:
3600:..\src/command_processing.c ****     }
3601:..\src/command_processing.c ****     
3602:..\src/command_processing.c ****     return curr_diff;
 25065              		.loc 1 3602 0
 25066 0088 B7F91E30 		ldrsh	r3, [r7, #30]
3603:..\src/command_processing.c **** }
 25067              		.loc 1 3603 0
 25068 008c 1846     		mov	r0, r3
 25069 008e 2037     		adds	r7, r7, #32
 25070              		.cfi_def_cfa_offset 8
 25071 0090 BD46     		mov	sp, r7
 25072              		.cfi_def_cfa_register 13
 25073              		@ sp needed
 25074 0092 80BD     		pop	{r7, pc}
 25075              	.L970:
 25076              		.align	2
 25077              	.L969:
 25078 0094 00000000 		.word	c_mem
 25079 0098 00000000 		.word	interrupt_flag
 25080 009c 20AA4400 		.word	4500000
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 548


 25081 00a0 00000000 		.word	master_mode
 25082 00a4 00000000 		.word	g_rx
 25083              		.cfi_endproc
 25084              	.LFE101:
 25085              		.size	commReadResCurrFromSH, .-commReadResCurrFromSH
 25086              		.section	.text.cmd_set_baudrate,"ax",%progbits
 25087              		.align	2
 25088              		.global	cmd_set_baudrate
 25089              		.thumb
 25090              		.thumb_func
 25091              		.type	cmd_set_baudrate, %function
 25092              	cmd_set_baudrate:
 25093              	.LFB102:
3604:..\src/command_processing.c **** 
3605:..\src/command_processing.c **** void cmd_set_baudrate(){
 25094              		.loc 1 3605 0
 25095              		.cfi_startproc
 25096              		@ args = 0, pretend = 0, frame = 0
 25097              		@ frame_needed = 1, uses_anonymous_args = 0
 25098 0000 80B5     		push	{r7, lr}
 25099              		.cfi_def_cfa_offset 8
 25100              		.cfi_offset 7, -8
 25101              		.cfi_offset 14, -4
 25102 0002 00AF     		add	r7, sp, #0
 25103              		.cfi_def_cfa_register 7
3606:..\src/command_processing.c ****     
3607:..\src/command_processing.c ****     // Set BaudRate
3608:..\src/command_processing.c ****     c_mem.dev.baud_rate = g_rx.buffer[1];
 25104              		.loc 1 3608 0
 25105 0004 094B     		ldr	r3, .L976
 25106 0006 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 25107 0008 094B     		ldr	r3, .L976+4
 25108 000a 83F8AA20 		strb	r2, [r3, #170]
3609:..\src/command_processing.c ****     
3610:..\src/command_processing.c ****     switch(g_rx.buffer[1]){
 25109              		.loc 1 3610 0
 25110 000e 074B     		ldr	r3, .L976
 25111 0010 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 25112 0012 0D2B     		cmp	r3, #13
 25113 0014 04D1     		bne	.L975
3611:..\src/command_processing.c ****         case 13:
3612:..\src/command_processing.c ****             CLOCK_UART_SetDividerValue(13);
 25114              		.loc 1 3612 0
 25115 0016 0121     		movs	r1, #1
 25116 0018 0C20     		movs	r0, #12
 25117 001a FFF7FEFF 		bl	CLOCK_UART_SetDividerRegister
3613:..\src/command_processing.c ****             break;
 25118              		.loc 1 3613 0
 25119 001e 03E0     		b	.L974
 25120              	.L975:
3614:..\src/command_processing.c ****         default:
3615:..\src/command_processing.c ****             CLOCK_UART_SetDividerValue(3);
 25121              		.loc 1 3615 0
 25122 0020 0121     		movs	r1, #1
 25123 0022 0220     		movs	r0, #2
 25124 0024 FFF7FEFF 		bl	CLOCK_UART_SetDividerRegister
 25125              	.L974:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 549


3616:..\src/command_processing.c ****     }
3617:..\src/command_processing.c **** }
 25126              		.loc 1 3617 0
 25127 0028 00BF     		nop
 25128 002a 80BD     		pop	{r7, pc}
 25129              	.L977:
 25130              		.align	2
 25131              	.L976:
 25132 002c 00000000 		.word	g_rx
 25133 0030 00000000 		.word	c_mem
 25134              		.cfi_endproc
 25135              	.LFE102:
 25136              		.size	cmd_set_baudrate, .-cmd_set_baudrate
 25137              		.section	.text.cmd_ping,"ax",%progbits
 25138              		.align	2
 25139              		.global	cmd_ping
 25140              		.thumb
 25141              		.thumb_func
 25142              		.type	cmd_ping, %function
 25143              	cmd_ping:
 25144              	.LFB103:
3618:..\src/command_processing.c **** 
3619:..\src/command_processing.c **** void cmd_ping(){
 25145              		.loc 1 3619 0
 25146              		.cfi_startproc
 25147              		@ args = 0, pretend = 0, frame = 8
 25148              		@ frame_needed = 1, uses_anonymous_args = 0
 25149 0000 80B5     		push	{r7, lr}
 25150              		.cfi_def_cfa_offset 8
 25151              		.cfi_offset 7, -8
 25152              		.cfi_offset 14, -4
 25153 0002 82B0     		sub	sp, sp, #8
 25154              		.cfi_def_cfa_offset 16
 25155 0004 00AF     		add	r7, sp, #0
 25156              		.cfi_def_cfa_register 7
3620:..\src/command_processing.c **** 
3621:..\src/command_processing.c ****     uint8 packet_data[2];
3622:..\src/command_processing.c **** 
3623:..\src/command_processing.c ****     // Header
3624:..\src/command_processing.c ****     packet_data[0] = CMD_PING;
 25157              		.loc 1 3624 0
 25158 0006 0023     		movs	r3, #0
 25159 0008 3B71     		strb	r3, [r7, #4]
3625:..\src/command_processing.c ****     
3626:..\src/command_processing.c ****     // Load Payload
3627:..\src/command_processing.c ****     packet_data[1] = CMD_PING;
 25160              		.loc 1 3627 0
 25161 000a 0023     		movs	r3, #0
 25162 000c 7B71     		strb	r3, [r7, #5]
3628:..\src/command_processing.c **** 
3629:..\src/command_processing.c ****     // Send Package to uart
3630:..\src/command_processing.c ****     commWrite(packet_data, 2);
 25163              		.loc 1 3630 0
 25164 000e 3B1D     		adds	r3, r7, #4
 25165 0010 0221     		movs	r1, #2
 25166 0012 1846     		mov	r0, r3
 25167 0014 FFF7FEFF 		bl	commWrite
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 550


3631:..\src/command_processing.c **** }
 25168              		.loc 1 3631 0
 25169 0018 00BF     		nop
 25170 001a 0837     		adds	r7, r7, #8
 25171              		.cfi_def_cfa_offset 8
 25172 001c BD46     		mov	sp, r7
 25173              		.cfi_def_cfa_register 13
 25174              		@ sp needed
 25175 001e 80BD     		pop	{r7, pc}
 25176              		.cfi_endproc
 25177              	.LFE103:
 25178              		.size	cmd_ping, .-cmd_ping
 25179              		.section	.text.cmd_get_inputs,"ax",%progbits
 25180              		.align	2
 25181              		.global	cmd_get_inputs
 25182              		.thumb
 25183              		.thumb_func
 25184              		.type	cmd_get_inputs, %function
 25185              	cmd_get_inputs:
 25186              	.LFB104:
3632:..\src/command_processing.c **** 
3633:..\src/command_processing.c **** void cmd_get_inputs(){
 25187              		.loc 1 3633 0
 25188              		.cfi_startproc
 25189              		@ args = 0, pretend = 0, frame = 16
 25190              		@ frame_needed = 1, uses_anonymous_args = 0
 25191 0000 80B5     		push	{r7, lr}
 25192              		.cfi_def_cfa_offset 8
 25193              		.cfi_offset 7, -8
 25194              		.cfi_offset 14, -4
 25195 0002 84B0     		sub	sp, sp, #16
 25196              		.cfi_def_cfa_offset 24
 25197 0004 00AF     		add	r7, sp, #0
 25198              		.cfi_def_cfa_register 7
3634:..\src/command_processing.c **** 
3635:..\src/command_processing.c ****     // Packet: header + motor_measure(int16) + crc
3636:..\src/command_processing.c **** 
3637:..\src/command_processing.c ****     uint8 packet_data[6]; 
3638:..\src/command_processing.c ****     int16 aux_int16;
3639:..\src/command_processing.c ****     
3640:..\src/command_processing.c ****     //Header package
3641:..\src/command_processing.c **** 
3642:..\src/command_processing.c ****     packet_data[0] = CMD_GET_INPUTS;
 25199              		.loc 1 3642 0
 25200 0006 8323     		movs	r3, #131
 25201 0008 3B72     		strb	r3, [r7, #8]
3643:..\src/command_processing.c ****         
3644:..\src/command_processing.c ****     aux_int16 = (int16)(g_refOld[0].pos >> g_mem.enc[g_mem.motor[0].encoder_line].res[0]);
 25202              		.loc 1 3644 0
 25203 000a 234B     		ldr	r3, .L980
 25204 000c 1A68     		ldr	r2, [r3]
 25205 000e 234B     		ldr	r3, .L980+4
 25206 0010 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 25207 0014 1846     		mov	r0, r3
 25208 0016 2149     		ldr	r1, .L980+4
 25209 0018 0346     		mov	r3, r0
 25210 001a 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 551


 25211 001c 0344     		add	r3, r3, r0
 25212 001e 1B01     		lsls	r3, r3, #4
 25213 0020 0B44     		add	r3, r3, r1
 25214 0022 03F29513 		addw	r3, r3, #405
 25215 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25216 0028 42FA03F3 		asr	r3, r2, r3
 25217 002c 1BB2     		sxth	r3, r3
 25218 002e FB80     		strh	r3, [r7, #6]	@ movhi
3645:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 25219              		.loc 1 3645 0
 25220 0030 BB1D     		adds	r3, r7, #6
 25221 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25222 0034 BB72     		strb	r3, [r7, #10]
3646:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 25223              		.loc 1 3646 0
 25224 0036 BB1D     		adds	r3, r7, #6
 25225 0038 0133     		adds	r3, r3, #1
 25226 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25227 003c 7B72     		strb	r3, [r7, #9]
3647:..\src/command_processing.c ****     aux_int16 = (int16)(g_refOld[1].pos >> g_mem.enc[g_mem.motor[1].encoder_line].res[0]);
 25228              		.loc 1 3647 0
 25229 003e 164B     		ldr	r3, .L980
 25230 0040 1A69     		ldr	r2, [r3, #16]
 25231 0042 164B     		ldr	r3, .L980+4
 25232 0044 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 25233 0048 1846     		mov	r0, r3
 25234 004a 1449     		ldr	r1, .L980+4
 25235 004c 0346     		mov	r3, r0
 25236 004e 5B00     		lsls	r3, r3, #1
 25237 0050 0344     		add	r3, r3, r0
 25238 0052 1B01     		lsls	r3, r3, #4
 25239 0054 0B44     		add	r3, r3, r1
 25240 0056 03F29513 		addw	r3, r3, #405
 25241 005a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25242 005c 42FA03F3 		asr	r3, r2, r3
 25243 0060 1BB2     		sxth	r3, r3
 25244 0062 FB80     		strh	r3, [r7, #6]	@ movhi
3648:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
 25245              		.loc 1 3648 0
 25246 0064 BB1D     		adds	r3, r7, #6
 25247 0066 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25248 0068 3B73     		strb	r3, [r7, #12]
3649:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
 25249              		.loc 1 3649 0
 25250 006a BB1D     		adds	r3, r7, #6
 25251 006c 0133     		adds	r3, r3, #1
 25252 006e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25253 0070 FB72     		strb	r3, [r7, #11]
3650:..\src/command_processing.c ****     
3651:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3652:..\src/command_processing.c **** 
3653:..\src/command_processing.c ****     packet_data[5] = LCRChecksum(packet_data, 5);
 25254              		.loc 1 3653 0
 25255 0072 07F10803 		add	r3, r7, #8
 25256 0076 0521     		movs	r1, #5
 25257 0078 1846     		mov	r0, r3
 25258 007a FFF7FEFF 		bl	LCRChecksum
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 552


 25259 007e 0346     		mov	r3, r0
 25260 0080 7B73     		strb	r3, [r7, #13]
3654:..\src/command_processing.c **** 
3655:..\src/command_processing.c ****     commWrite(packet_data, 6);
 25261              		.loc 1 3655 0
 25262 0082 07F10803 		add	r3, r7, #8
 25263 0086 0621     		movs	r1, #6
 25264 0088 1846     		mov	r0, r3
 25265 008a FFF7FEFF 		bl	commWrite
3656:..\src/command_processing.c **** }
 25266              		.loc 1 3656 0
 25267 008e 00BF     		nop
 25268 0090 1037     		adds	r7, r7, #16
 25269              		.cfi_def_cfa_offset 8
 25270 0092 BD46     		mov	sp, r7
 25271              		.cfi_def_cfa_register 13
 25272              		@ sp needed
 25273 0094 80BD     		pop	{r7, pc}
 25274              	.L981:
 25275 0096 00BF     		.align	2
 25276              	.L980:
 25277 0098 00000000 		.word	g_refOld
 25278 009c 00000000 		.word	g_mem
 25279              		.cfi_endproc
 25280              	.LFE104:
 25281              		.size	cmd_get_inputs, .-cmd_get_inputs
 25282              		.section	.text.cmd_store_params,"ax",%progbits
 25283              		.align	2
 25284              		.global	cmd_store_params
 25285              		.thumb
 25286              		.thumb_func
 25287              		.type	cmd_store_params, %function
 25288              	cmd_store_params:
 25289              	.LFB105:
3657:..\src/command_processing.c **** 
3658:..\src/command_processing.c **** void cmd_store_params(){
 25290              		.loc 1 3658 0
 25291              		.cfi_startproc
 25292              		@ args = 0, pretend = 0, frame = 16
 25293              		@ frame_needed = 1, uses_anonymous_args = 0
 25294 0000 80B5     		push	{r7, lr}
 25295              		.cfi_def_cfa_offset 8
 25296              		.cfi_offset 7, -8
 25297              		.cfi_offset 14, -4
 25298 0002 84B0     		sub	sp, sp, #16
 25299              		.cfi_def_cfa_offset 24
 25300 0004 00AF     		add	r7, sp, #0
 25301              		.cfi_def_cfa_register 7
3659:..\src/command_processing.c ****     
3660:..\src/command_processing.c ****     // Check input mode enabled
3661:..\src/command_processing.c ****     uint32 off_1;
3662:..\src/command_processing.c ****     float mult_1;
3663:..\src/command_processing.c ****     uint8 CYDATA packet_lenght = 2;
 25302              		.loc 1 3663 0
 25303 0006 0223     		movs	r3, #2
 25304 0008 FB73     		strb	r3, [r7, #15]
3664:..\src/command_processing.c ****     uint8 CYDATA packet_data[2];
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 553


3665:..\src/command_processing.c ****     uint8 CYDATA old_id;
3666:..\src/command_processing.c ****     
3667:..\src/command_processing.c ****     if( c_mem.motor[0].input_mode == INPUT_MODE_EXTERNAL ) {
 25305              		.loc 1 3667 0
 25306 000a 674B     		ldr	r3, .L993
 25307 000c 93F80E31 		ldrb	r3, [r3, #270]	@ zero_extendqisi2
 25308 0010 002B     		cmp	r3, #0
 25309 0012 7CD1     		bne	.L983
3668:..\src/command_processing.c ****         off_1 = c_mem.enc[c_mem.motor[0].encoder_line].m_off[0];
 25310              		.loc 1 3668 0
 25311 0014 644B     		ldr	r3, .L993
 25312 0016 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 25313 001a 1946     		mov	r1, r3
 25314 001c 624A     		ldr	r2, .L993
 25315 001e 0B46     		mov	r3, r1
 25316 0020 5B00     		lsls	r3, r3, #1
 25317 0022 0B44     		add	r3, r3, r1
 25318 0024 1B01     		lsls	r3, r3, #4
 25319 0026 1344     		add	r3, r3, r2
 25320 0028 03F5CC73 		add	r3, r3, #408
 25321 002c 1B68     		ldr	r3, [r3]
 25322 002e BB60     		str	r3, [r7, #8]
3669:..\src/command_processing.c ****         mult_1 = c_mem.enc[c_mem.motor[0].encoder_line].m_mult[0];
 25323              		.loc 1 3669 0
 25324 0030 5D4B     		ldr	r3, .L993
 25325 0032 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 25326 0036 1946     		mov	r1, r3
 25327 0038 5B4A     		ldr	r2, .L993
 25328 003a 0B46     		mov	r3, r1
 25329 003c 5B00     		lsls	r3, r3, #1
 25330 003e 0B44     		add	r3, r3, r1
 25331 0040 1B01     		lsls	r3, r3, #4
 25332 0042 1344     		add	r3, r3, r2
 25333 0044 03F5D273 		add	r3, r3, #420
 25334 0048 1B68     		ldr	r3, [r3]	@ float
 25335 004a 7B60     		str	r3, [r7, #4]	@ float
3670:..\src/command_processing.c **** 
3671:..\src/command_processing.c ****         g_refNew[0].pos = (int32)((float)g_refNew[0].pos / mult_1);
 25336              		.loc 1 3671 0
 25337 004c 574B     		ldr	r3, .L993+4
 25338 004e 1B68     		ldr	r3, [r3]
 25339 0050 1846     		mov	r0, r3
 25340 0052 FFF7FEFF 		bl	__aeabi_i2f
 25341 0056 0346     		mov	r3, r0
 25342 0058 7968     		ldr	r1, [r7, #4]	@ float
 25343 005a 1846     		mov	r0, r3
 25344 005c FFF7FEFF 		bl	__aeabi_fdiv
 25345 0060 0346     		mov	r3, r0
 25346 0062 1846     		mov	r0, r3
 25347 0064 FFF7FEFF 		bl	__aeabi_f2iz
 25348 0068 0246     		mov	r2, r0
 25349 006a 504B     		ldr	r3, .L993+4
 25350 006c 1A60     		str	r2, [r3]
3672:..\src/command_processing.c **** 
3673:..\src/command_processing.c ****         g_refNew[0].pos = (int32)((float)g_refNew[0].pos * g_mem.enc[c_mem.motor[0].encoder_line].m
 25351              		.loc 1 3673 0
 25352 006e 4F4B     		ldr	r3, .L993+4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 554


 25353 0070 1B68     		ldr	r3, [r3]
 25354 0072 1846     		mov	r0, r3
 25355 0074 FFF7FEFF 		bl	__aeabi_i2f
 25356 0078 4B4B     		ldr	r3, .L993
 25357 007a 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 25358 007e 1946     		mov	r1, r3
 25359 0080 4B4A     		ldr	r2, .L993+8
 25360 0082 0B46     		mov	r3, r1
 25361 0084 5B00     		lsls	r3, r3, #1
 25362 0086 0B44     		add	r3, r3, r1
 25363 0088 1B01     		lsls	r3, r3, #4
 25364 008a 1344     		add	r3, r3, r2
 25365 008c 03F5D273 		add	r3, r3, #420
 25366 0090 1B68     		ldr	r3, [r3]	@ float
 25367 0092 1946     		mov	r1, r3
 25368 0094 FFF7FEFF 		bl	__aeabi_fmul
 25369 0098 0346     		mov	r3, r0
 25370 009a 1846     		mov	r0, r3
 25371 009c FFF7FEFF 		bl	__aeabi_f2iz
 25372 00a0 0246     		mov	r2, r0
 25373 00a2 424B     		ldr	r3, .L993+4
 25374 00a4 1A60     		str	r2, [r3]
3674:..\src/command_processing.c **** 
3675:..\src/command_processing.c ****         g_refNew[0].pos += (g_mem.enc[c_mem.motor[0].encoder_line].m_off[0] - off_1);
 25375              		.loc 1 3675 0
 25376 00a6 414B     		ldr	r3, .L993+4
 25377 00a8 1B68     		ldr	r3, [r3]
 25378 00aa 1846     		mov	r0, r3
 25379 00ac 3E4B     		ldr	r3, .L993
 25380 00ae 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 25381 00b2 1946     		mov	r1, r3
 25382 00b4 3E4A     		ldr	r2, .L993+8
 25383 00b6 0B46     		mov	r3, r1
 25384 00b8 5B00     		lsls	r3, r3, #1
 25385 00ba 0B44     		add	r3, r3, r1
 25386 00bc 1B01     		lsls	r3, r3, #4
 25387 00be 1344     		add	r3, r3, r2
 25388 00c0 03F5CC73 		add	r3, r3, #408
 25389 00c4 1B68     		ldr	r3, [r3]
 25390 00c6 1A46     		mov	r2, r3
 25391 00c8 BB68     		ldr	r3, [r7, #8]
 25392 00ca D31A     		subs	r3, r2, r3
 25393 00cc 0344     		add	r3, r3, r0
 25394 00ce 1A46     		mov	r2, r3
 25395 00d0 364B     		ldr	r3, .L993+4
 25396 00d2 1A60     		str	r2, [r3]
3676:..\src/command_processing.c ****         
3677:..\src/command_processing.c ****         // Check position Limits
3678:..\src/command_processing.c **** 
3679:..\src/command_processing.c ****         if (c_mem.motor[0].pos_lim_flag) {                   // position limiting
 25397              		.loc 1 3679 0
 25398 00d4 344B     		ldr	r3, .L993
 25399 00d6 93F8E330 		ldrb	r3, [r3, #227]	@ zero_extendqisi2
 25400 00da 002B     		cmp	r3, #0
 25401 00dc 17D0     		beq	.L983
3680:..\src/command_processing.c ****             if (g_refNew[0].pos < c_mem.motor[0].pos_lim_inf) 
 25402              		.loc 1 3680 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 555


 25403 00de 334B     		ldr	r3, .L993+4
 25404 00e0 1A68     		ldr	r2, [r3]
 25405 00e2 314B     		ldr	r3, .L993
 25406 00e4 D3F8E430 		ldr	r3, [r3, #228]
 25407 00e8 9A42     		cmp	r2, r3
 25408 00ea 04DA     		bge	.L984
3681:..\src/command_processing.c ****                 g_refNew[0].pos = c_mem.motor[0].pos_lim_inf;
 25409              		.loc 1 3681 0
 25410 00ec 2E4B     		ldr	r3, .L993
 25411 00ee D3F8E430 		ldr	r3, [r3, #228]
 25412 00f2 2E4A     		ldr	r2, .L993+4
 25413 00f4 1360     		str	r3, [r2]
 25414              	.L984:
3682:..\src/command_processing.c **** 
3683:..\src/command_processing.c ****             if (g_refNew[0].pos > c_mem.motor[0].pos_lim_sup) 
 25415              		.loc 1 3683 0
 25416 00f6 2D4B     		ldr	r3, .L993+4
 25417 00f8 1A68     		ldr	r2, [r3]
 25418 00fa 2B4B     		ldr	r3, .L993
 25419 00fc D3F8E830 		ldr	r3, [r3, #232]
 25420 0100 9A42     		cmp	r2, r3
 25421 0102 04DD     		ble	.L983
3684:..\src/command_processing.c ****                 g_refNew[0].pos = c_mem.motor[0].pos_lim_sup;
 25422              		.loc 1 3684 0
 25423 0104 284B     		ldr	r3, .L993
 25424 0106 D3F8E830 		ldr	r3, [r3, #232]
 25425 010a 284A     		ldr	r2, .L993+4
 25426 010c 1360     		str	r3, [r2]
 25427              	.L983:
3685:..\src/command_processing.c ****         }
3686:..\src/command_processing.c ****     }
3687:..\src/command_processing.c ****     
3688:..\src/command_processing.c ****     // If SD is used, create new param and data file
3689:..\src/command_processing.c ****     if (c_mem.exp.read_exp_port_flag == EXP_SD_RTC) {
 25428              		.loc 1 3689 0
 25429 010e 264B     		ldr	r3, .L993
 25430 0110 93F82632 		ldrb	r3, [r3, #550]	@ zero_extendqisi2
 25431 0114 012B     		cmp	r3, #1
 25432 0116 06D1     		bne	.L985
3690:..\src/command_processing.c ****         FS_FClose(pFile);
 25433              		.loc 1 3690 0
 25434 0118 264B     		ldr	r3, .L993+12
 25435 011a 1B68     		ldr	r3, [r3]
 25436 011c 1846     		mov	r0, r3
 25437 011e FFF7FEFF 		bl	FS_FClose
3691:..\src/command_processing.c ****         
3692:..\src/command_processing.c ****         InitSD_FS();
 25438              		.loc 1 3692 0
 25439 0122 FFF7FEFF 		bl	InitSD_FS
 25440              	.L985:
3693:..\src/command_processing.c ****     }
3694:..\src/command_processing.c ****    
3695:..\src/command_processing.c ****     // Store params 
3696:..\src/command_processing.c **** 
3697:..\src/command_processing.c ****     if (c_mem.dev.id != g_mem.dev.id) {     //If a new id is going to be set we will lose communica
 25441              		.loc 1 3697 0
 25442 0126 204B     		ldr	r3, .L993
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 556


 25443 0128 93F8A020 		ldrb	r2, [r3, #160]	@ zero_extendqisi2
 25444 012c 204B     		ldr	r3, .L993+8
 25445 012e 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 25446 0132 9A42     		cmp	r2, r3
 25447 0134 21D0     		beq	.L986
3698:..\src/command_processing.c ****         old_id = c_mem.dev.id;          //after the memstore(0) and the ACK won't be recognised
 25448              		.loc 1 3698 0
 25449 0136 1C4B     		ldr	r3, .L993
 25450 0138 93F8A030 		ldrb	r3, [r3, #160]
 25451 013c FB70     		strb	r3, [r7, #3]
3699:..\src/command_processing.c ****         if(memStore(0)) {
 25452              		.loc 1 3699 0
 25453 013e 0020     		movs	r0, #0
 25454 0140 FFF7FEFF 		bl	memStore
 25455 0144 0346     		mov	r3, r0
 25456 0146 002B     		cmp	r3, #0
 25457 0148 0BD0     		beq	.L987
3700:..\src/command_processing.c ****             packet_data[0] = ACK_OK;
 25458              		.loc 1 3700 0
 25459 014a 0123     		movs	r3, #1
 25460 014c 3B70     		strb	r3, [r7]
3701:..\src/command_processing.c ****             packet_data[1] = ACK_OK;
 25461              		.loc 1 3701 0
 25462 014e 0123     		movs	r3, #1
 25463 0150 7B70     		strb	r3, [r7, #1]
3702:..\src/command_processing.c ****             commWrite_old_id(packet_data, packet_lenght, old_id);
 25464              		.loc 1 3702 0
 25465 0152 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 25466 0154 99B2     		uxth	r1, r3
 25467 0156 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 25468 0158 3B46     		mov	r3, r7
 25469 015a 1846     		mov	r0, r3
 25470 015c FFF7FEFF 		bl	commWrite_old_id
 25471 0160 18E0     		b	.L989
 25472              	.L987:
3703:..\src/command_processing.c ****         }    
3704:..\src/command_processing.c ****         else{
3705:..\src/command_processing.c ****             packet_data[0] = ACK_ERROR;
 25473              		.loc 1 3705 0
 25474 0162 0023     		movs	r3, #0
 25475 0164 3B70     		strb	r3, [r7]
3706:..\src/command_processing.c ****             packet_data[1] = ACK_ERROR;
 25476              		.loc 1 3706 0
 25477 0166 0023     		movs	r3, #0
 25478 0168 7B70     		strb	r3, [r7, #1]
3707:..\src/command_processing.c ****             commWrite_old_id(packet_data, packet_lenght, old_id);
 25479              		.loc 1 3707 0
 25480 016a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 25481 016c 99B2     		uxth	r1, r3
 25482 016e FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 25483 0170 3B46     		mov	r3, r7
 25484 0172 1846     		mov	r0, r3
 25485 0174 FFF7FEFF 		bl	commWrite_old_id
 25486 0178 0CE0     		b	.L989
 25487              	.L986:
3708:..\src/command_processing.c ****         }
3709:..\src/command_processing.c ****     }    
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 557


3710:..\src/command_processing.c ****     else {
3711:..\src/command_processing.c ****         if(memStore(0))
 25488              		.loc 1 3711 0
 25489 017a 0020     		movs	r0, #0
 25490 017c FFF7FEFF 		bl	memStore
 25491 0180 0346     		mov	r3, r0
 25492 0182 002B     		cmp	r3, #0
 25493 0184 03D0     		beq	.L990
3712:..\src/command_processing.c ****             sendAcknowledgment(ACK_OK);
 25494              		.loc 1 3712 0
 25495 0186 0120     		movs	r0, #1
 25496 0188 FFF7FEFF 		bl	sendAcknowledgment
 25497 018c 02E0     		b	.L989
 25498              	.L990:
3713:..\src/command_processing.c ****         else
3714:..\src/command_processing.c ****             sendAcknowledgment(ACK_ERROR);
 25499              		.loc 1 3714 0
 25500 018e 0020     		movs	r0, #0
 25501 0190 FFF7FEFF 		bl	sendAcknowledgment
 25502              	.L989:
3715:..\src/command_processing.c ****     }
3716:..\src/command_processing.c ****     
3717:..\src/command_processing.c ****     // FW reset (if necessary)
3718:..\src/command_processing.c ****     if (reset_PSoC_flag == TRUE) {
 25503              		.loc 1 3718 0
 25504 0194 084B     		ldr	r3, .L993+16
 25505 0196 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25506 0198 012B     		cmp	r3, #1
 25507 019a 01D1     		bne	.L992
3719:..\src/command_processing.c ****         CySoftwareReset();
 25508              		.loc 1 3719 0
 25509 019c FFF7FEFF 		bl	CySoftwareReset
 25510              	.L992:
3720:..\src/command_processing.c ****     }
3721:..\src/command_processing.c **** }
 25511              		.loc 1 3721 0
 25512 01a0 00BF     		nop
 25513 01a2 1037     		adds	r7, r7, #16
 25514              		.cfi_def_cfa_offset 8
 25515 01a4 BD46     		mov	sp, r7
 25516              		.cfi_def_cfa_register 13
 25517              		@ sp needed
 25518 01a6 80BD     		pop	{r7, pc}
 25519              	.L994:
 25520              		.align	2
 25521              	.L993:
 25522 01a8 00000000 		.word	c_mem
 25523 01ac 00000000 		.word	g_refNew
 25524 01b0 00000000 		.word	g_mem
 25525 01b4 00000000 		.word	pFile
 25526 01b8 00000000 		.word	reset_PSoC_flag
 25527              		.cfi_endproc
 25528              	.LFE105:
 25529              		.size	cmd_store_params, .-cmd_store_params
 25530              		.section	.text.cmd_get_emg,"ax",%progbits
 25531              		.align	2
 25532              		.global	cmd_get_emg
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 558


 25533              		.thumb
 25534              		.thumb_func
 25535              		.type	cmd_get_emg, %function
 25536              	cmd_get_emg:
 25537              	.LFB106:
3722:..\src/command_processing.c **** 
3723:..\src/command_processing.c **** void cmd_get_emg(){
 25538              		.loc 1 3723 0
 25539              		.cfi_startproc
 25540              		@ args = 0, pretend = 0, frame = 16
 25541              		@ frame_needed = 1, uses_anonymous_args = 0
 25542 0000 80B5     		push	{r7, lr}
 25543              		.cfi_def_cfa_offset 8
 25544              		.cfi_offset 7, -8
 25545              		.cfi_offset 14, -4
 25546 0002 84B0     		sub	sp, sp, #16
 25547              		.cfi_def_cfa_offset 24
 25548 0004 00AF     		add	r7, sp, #0
 25549              		.cfi_def_cfa_register 7
3724:..\src/command_processing.c ****     
3725:..\src/command_processing.c ****     uint8 packet_data[6];
3726:..\src/command_processing.c ****     int16 aux_int16;
3727:..\src/command_processing.c ****     
3728:..\src/command_processing.c ****     // Header        
3729:..\src/command_processing.c ****     packet_data[0] = CMD_GET_EMG;
 25550              		.loc 1 3729 0
 25551 0006 8823     		movs	r3, #136
 25552 0008 3B72     		strb	r3, [r7, #8]
3730:..\src/command_processing.c ****     
3731:..\src/command_processing.c ****     aux_int16 = (int16) g_adc_measOld.emg[0];
 25553              		.loc 1 3731 0
 25554 000a 144B     		ldr	r3, .L996
 25555 000c 1B68     		ldr	r3, [r3]
 25556 000e 1BB2     		sxth	r3, r3
 25557 0010 FB80     		strh	r3, [r7, #6]	@ movhi
3732:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 25558              		.loc 1 3732 0
 25559 0012 BB1D     		adds	r3, r7, #6
 25560 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25561 0016 BB72     		strb	r3, [r7, #10]
3733:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 25562              		.loc 1 3733 0
 25563 0018 BB1D     		adds	r3, r7, #6
 25564 001a 0133     		adds	r3, r3, #1
 25565 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25566 001e 7B72     		strb	r3, [r7, #9]
3734:..\src/command_processing.c ****     
3735:..\src/command_processing.c ****     aux_int16 = (int16) g_adc_measOld.emg[1];
 25567              		.loc 1 3735 0
 25568 0020 0E4B     		ldr	r3, .L996
 25569 0022 5B68     		ldr	r3, [r3, #4]
 25570 0024 1BB2     		sxth	r3, r3
 25571 0026 FB80     		strh	r3, [r7, #6]	@ movhi
3736:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
 25572              		.loc 1 3736 0
 25573 0028 BB1D     		adds	r3, r7, #6
 25574 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 559


 25575 002c 3B73     		strb	r3, [r7, #12]
3737:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
 25576              		.loc 1 3737 0
 25577 002e BB1D     		adds	r3, r7, #6
 25578 0030 0133     		adds	r3, r3, #1
 25579 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25580 0034 FB72     		strb	r3, [r7, #11]
3738:..\src/command_processing.c **** 
3739:..\src/command_processing.c ****     packet_data[5] = LCRChecksum (packet_data, 5);
 25581              		.loc 1 3739 0
 25582 0036 07F10803 		add	r3, r7, #8
 25583 003a 0521     		movs	r1, #5
 25584 003c 1846     		mov	r0, r3
 25585 003e FFF7FEFF 		bl	LCRChecksum
 25586 0042 0346     		mov	r3, r0
 25587 0044 7B73     		strb	r3, [r7, #13]
3740:..\src/command_processing.c **** 
3741:..\src/command_processing.c ****     commWrite(packet_data, 6);
 25588              		.loc 1 3741 0
 25589 0046 07F10803 		add	r3, r7, #8
 25590 004a 0621     		movs	r1, #6
 25591 004c 1846     		mov	r0, r3
 25592 004e FFF7FEFF 		bl	commWrite
3742:..\src/command_processing.c **** 
3743:..\src/command_processing.c **** }
 25593              		.loc 1 3743 0
 25594 0052 00BF     		nop
 25595 0054 1037     		adds	r7, r7, #16
 25596              		.cfi_def_cfa_offset 8
 25597 0056 BD46     		mov	sp, r7
 25598              		.cfi_def_cfa_register 13
 25599              		@ sp needed
 25600 0058 80BD     		pop	{r7, pc}
 25601              	.L997:
 25602 005a 00BF     		.align	2
 25603              	.L996:
 25604 005c 00000000 		.word	g_adc_measOld
 25605              		.cfi_endproc
 25606              	.LFE106:
 25607              		.size	cmd_get_emg, .-cmd_get_emg
 25608              		.section	.text.cmd_get_imu_readings,"ax",%progbits
 25609              		.align	2
 25610              		.global	cmd_get_imu_readings
 25611              		.thumb
 25612              		.thumb_func
 25613              		.type	cmd_get_imu_readings, %function
 25614              	cmd_get_imu_readings:
 25615              	.LFB107:
3744:..\src/command_processing.c **** 
3745:..\src/command_processing.c **** void cmd_get_imu_readings(){
 25616              		.loc 1 3745 0
 25617              		.cfi_startproc
 25618              		@ args = 0, pretend = 0, frame = 400
 25619              		@ frame_needed = 1, uses_anonymous_args = 0
 25620 0000 90B5     		push	{r4, r7, lr}
 25621              		.cfi_def_cfa_offset 12
 25622              		.cfi_offset 4, -12
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 560


 25623              		.cfi_offset 7, -8
 25624              		.cfi_offset 14, -4
 25625 0002 E5B0     		sub	sp, sp, #404
 25626              		.cfi_def_cfa_offset 416
 25627 0004 00AF     		add	r7, sp, #0
 25628              		.cfi_def_cfa_register 7
3746:..\src/command_processing.c ****     //Retrieve accelerometers, gyroscopes, magnetometers, quaternions and temperatures readings
3747:..\src/command_processing.c ****     
3748:..\src/command_processing.c ****     uint8 k_imu;
3749:..\src/command_processing.c ****     uint16 c = 1;
 25629              		.loc 1 3749 0
 25630 0006 0123     		movs	r3, #1
 25631 0008 A7F88C31 		strh	r3, [r7, #396]	@ movhi
3750:..\src/command_processing.c ****     uint8 k = 0;
 25632              		.loc 1 3750 0
 25633 000c 0023     		movs	r3, #0
 25634 000e 87F88B31 		strb	r3, [r7, #395]
3751:..\src/command_processing.c ****     uint16 gl_c = 1;
 25635              		.loc 1 3751 0
 25636 0012 0123     		movs	r3, #1
 25637 0014 A7F88831 		strh	r3, [r7, #392]	@ movhi
3752:..\src/command_processing.c ****     int16 aux_int16;
3753:..\src/command_processing.c ****     float aux_float;
3754:..\src/command_processing.c ****     
3755:..\src/command_processing.c ****     // Packet: header + imu id(uint8) + imu flags(uint8) + crc  
3756:..\src/command_processing.c ****     uint8 packet_data[350];
3757:..\src/command_processing.c ****     uint8 single_packet[32];
3758:..\src/command_processing.c ****     
3759:..\src/command_processing.c ****     //Header package 
3760:..\src/command_processing.c ****     packet_data[0] = CMD_GET_IMU_READINGS;
 25638              		.loc 1 3760 0
 25639 0018 07F12003 		add	r3, r7, #32
 25640 001c A122     		movs	r2, #161
 25641 001e 1A70     		strb	r2, [r3]
3761:..\src/command_processing.c ****  
3762:..\src/command_processing.c ****     for (k_imu = 0; k_imu < N_IMU_Connected; k_imu++) 
 25642              		.loc 1 3762 0
 25643 0020 0023     		movs	r3, #0
 25644 0022 87F88F31 		strb	r3, [r7, #399]
 25645 0026 82E2     		b	.L999
 25646              	.L1015:
3763:..\src/command_processing.c ****     {	
3764:..\src/command_processing.c ****             
3765:..\src/command_processing.c ****         single_packet[0] = (uint8) 0x3A; //':';
 25647              		.loc 1 3765 0
 25648 0028 3B46     		mov	r3, r7
 25649 002a 3A22     		movs	r2, #58
 25650 002c 1A70     		strb	r2, [r3]
3766:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][0]){
 25651              		.loc 1 3766 0
 25652 002e 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 25653 0032 DB4A     		ldr	r2, .L1016
 25654 0034 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 25655 0036 1946     		mov	r1, r3
 25656 0038 DA4A     		ldr	r2, .L1016+4
 25657 003a 0B46     		mov	r3, r1
 25658 003c 9B00     		lsls	r3, r3, #2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 561


 25659 003e 0B44     		add	r3, r3, r1
 25660 0040 1344     		add	r3, r3, r2
 25661 0042 03F20223 		addw	r3, r3, #514
 25662 0046 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25663 0048 002B     		cmp	r3, #0
 25664 004a 5DD0     		beq	.L1000
3767:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].accel_value[0];
 25665              		.loc 1 3767 0
 25666 004c 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 25667 0050 D549     		ldr	r1, .L1016+8
 25668 0052 1346     		mov	r3, r2
 25669 0054 9B00     		lsls	r3, r3, #2
 25670 0056 1344     		add	r3, r3, r2
 25671 0058 DB00     		lsls	r3, r3, #3
 25672 005a 0B44     		add	r3, r3, r1
 25673 005c 0233     		adds	r3, r3, #2
 25674 005e B3F90030 		ldrsh	r3, [r3]
 25675 0062 A7F88631 		strh	r3, [r7, #390]	@ movhi
3768:..\src/command_processing.c ****             single_packet[c + 1] = ((char*)(&aux_int16))[0];
 25676              		.loc 1 3768 0
 25677 0066 B7F88C31 		ldrh	r3, [r7, #396]
 25678 006a 0133     		adds	r3, r3, #1
 25679 006c 07F5C372 		add	r2, r7, #390
 25680 0070 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 25681 0072 3A46     		mov	r2, r7
 25682 0074 D154     		strb	r1, [r2, r3]
3769:..\src/command_processing.c ****             single_packet[c] = ((char*)(&aux_int16))[1];
 25683              		.loc 1 3769 0
 25684 0076 B7F88C21 		ldrh	r2, [r7, #396]
 25685 007a 07F5C373 		add	r3, r7, #390
 25686 007e 0133     		adds	r3, r3, #1
 25687 0080 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 25688 0082 3B46     		mov	r3, r7
 25689 0084 9954     		strb	r1, [r3, r2]
3770:..\src/command_processing.c **** 
3771:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].accel_value[1];
 25690              		.loc 1 3771 0
 25691 0086 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 25692 008a C749     		ldr	r1, .L1016+8
 25693 008c 1346     		mov	r3, r2
 25694 008e 9B00     		lsls	r3, r3, #2
 25695 0090 1344     		add	r3, r3, r2
 25696 0092 DB00     		lsls	r3, r3, #3
 25697 0094 0B44     		add	r3, r3, r1
 25698 0096 0433     		adds	r3, r3, #4
 25699 0098 B3F90030 		ldrsh	r3, [r3]
 25700 009c A7F88631 		strh	r3, [r7, #390]	@ movhi
3772:..\src/command_processing.c ****             single_packet[c + 3] = ((char*)(&aux_int16))[0];
 25701              		.loc 1 3772 0
 25702 00a0 B7F88C31 		ldrh	r3, [r7, #396]
 25703 00a4 0333     		adds	r3, r3, #3
 25704 00a6 07F5C372 		add	r2, r7, #390
 25705 00aa 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 25706 00ac 3A46     		mov	r2, r7
 25707 00ae D154     		strb	r1, [r2, r3]
3773:..\src/command_processing.c ****             single_packet[c + 2] = ((char*)(&aux_int16))[1];
 25708              		.loc 1 3773 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 562


 25709 00b0 B7F88C31 		ldrh	r3, [r7, #396]
 25710 00b4 9A1C     		adds	r2, r3, #2
 25711 00b6 07F5C373 		add	r3, r7, #390
 25712 00ba 0133     		adds	r3, r3, #1
 25713 00bc 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 25714 00be 3B46     		mov	r3, r7
 25715 00c0 9954     		strb	r1, [r3, r2]
3774:..\src/command_processing.c **** 
3775:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].accel_value[2];
 25716              		.loc 1 3775 0
 25717 00c2 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 25718 00c6 B849     		ldr	r1, .L1016+8
 25719 00c8 1346     		mov	r3, r2
 25720 00ca 9B00     		lsls	r3, r3, #2
 25721 00cc 1344     		add	r3, r3, r2
 25722 00ce DB00     		lsls	r3, r3, #3
 25723 00d0 0B44     		add	r3, r3, r1
 25724 00d2 0633     		adds	r3, r3, #6
 25725 00d4 B3F90030 		ldrsh	r3, [r3]
 25726 00d8 A7F88631 		strh	r3, [r7, #390]	@ movhi
3776:..\src/command_processing.c ****             single_packet[c + 5] = ((char*)(&aux_int16))[0];
 25727              		.loc 1 3776 0
 25728 00dc B7F88C31 		ldrh	r3, [r7, #396]
 25729 00e0 0533     		adds	r3, r3, #5
 25730 00e2 07F5C372 		add	r2, r7, #390
 25731 00e6 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 25732 00e8 3A46     		mov	r2, r7
 25733 00ea D154     		strb	r1, [r2, r3]
3777:..\src/command_processing.c ****             single_packet[c + 4] = ((char*)(&aux_int16))[1];
 25734              		.loc 1 3777 0
 25735 00ec B7F88C31 		ldrh	r3, [r7, #396]
 25736 00f0 1A1D     		adds	r2, r3, #4
 25737 00f2 07F5C373 		add	r3, r7, #390
 25738 00f6 0133     		adds	r3, r3, #1
 25739 00f8 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 25740 00fa 3B46     		mov	r3, r7
 25741 00fc 9954     		strb	r1, [r3, r2]
3778:..\src/command_processing.c **** 
3779:..\src/command_processing.c ****             c = c + 6;
 25742              		.loc 1 3779 0
 25743 00fe B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 25744 0102 0633     		adds	r3, r3, #6
 25745 0104 A7F88C31 		strh	r3, [r7, #396]	@ movhi
 25746              	.L1000:
3780:..\src/command_processing.c ****         }
3781:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][1]){
 25747              		.loc 1 3781 0
 25748 0108 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 25749 010c A44A     		ldr	r2, .L1016
 25750 010e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 25751 0110 1946     		mov	r1, r3
 25752 0112 A44A     		ldr	r2, .L1016+4
 25753 0114 0B46     		mov	r3, r1
 25754 0116 9B00     		lsls	r3, r3, #2
 25755 0118 0B44     		add	r3, r3, r1
 25756 011a 1344     		add	r3, r3, r2
 25757 011c 03F20323 		addw	r3, r3, #515
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 563


 25758 0120 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25759 0122 002B     		cmp	r3, #0
 25760 0124 5DD0     		beq	.L1001
3782:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].gyro_value[0];
 25761              		.loc 1 3782 0
 25762 0126 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 25763 012a 9F49     		ldr	r1, .L1016+8
 25764 012c 1346     		mov	r3, r2
 25765 012e 9B00     		lsls	r3, r3, #2
 25766 0130 1344     		add	r3, r3, r2
 25767 0132 DB00     		lsls	r3, r3, #3
 25768 0134 0B44     		add	r3, r3, r1
 25769 0136 0833     		adds	r3, r3, #8
 25770 0138 B3F90030 		ldrsh	r3, [r3]
 25771 013c A7F88631 		strh	r3, [r7, #390]	@ movhi
3783:..\src/command_processing.c ****             single_packet[c + 1] = ((char*)(&aux_int16))[0];
 25772              		.loc 1 3783 0
 25773 0140 B7F88C31 		ldrh	r3, [r7, #396]
 25774 0144 0133     		adds	r3, r3, #1
 25775 0146 07F5C372 		add	r2, r7, #390
 25776 014a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 25777 014c 3A46     		mov	r2, r7
 25778 014e D154     		strb	r1, [r2, r3]
3784:..\src/command_processing.c ****             single_packet[c] = ((char*)(&aux_int16))[1];
 25779              		.loc 1 3784 0
 25780 0150 B7F88C21 		ldrh	r2, [r7, #396]
 25781 0154 07F5C373 		add	r3, r7, #390
 25782 0158 0133     		adds	r3, r3, #1
 25783 015a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 25784 015c 3B46     		mov	r3, r7
 25785 015e 9954     		strb	r1, [r3, r2]
3785:..\src/command_processing.c **** 
3786:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].gyro_value[1];
 25786              		.loc 1 3786 0
 25787 0160 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 25788 0164 9049     		ldr	r1, .L1016+8
 25789 0166 1346     		mov	r3, r2
 25790 0168 9B00     		lsls	r3, r3, #2
 25791 016a 1344     		add	r3, r3, r2
 25792 016c DB00     		lsls	r3, r3, #3
 25793 016e 0B44     		add	r3, r3, r1
 25794 0170 0A33     		adds	r3, r3, #10
 25795 0172 B3F90030 		ldrsh	r3, [r3]
 25796 0176 A7F88631 		strh	r3, [r7, #390]	@ movhi
3787:..\src/command_processing.c ****             single_packet[c + 3] = ((char*)(&aux_int16))[0];
 25797              		.loc 1 3787 0
 25798 017a B7F88C31 		ldrh	r3, [r7, #396]
 25799 017e 0333     		adds	r3, r3, #3
 25800 0180 07F5C372 		add	r2, r7, #390
 25801 0184 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 25802 0186 3A46     		mov	r2, r7
 25803 0188 D154     		strb	r1, [r2, r3]
3788:..\src/command_processing.c ****             single_packet[c + 2] = ((char*)(&aux_int16))[1];
 25804              		.loc 1 3788 0
 25805 018a B7F88C31 		ldrh	r3, [r7, #396]
 25806 018e 9A1C     		adds	r2, r3, #2
 25807 0190 07F5C373 		add	r3, r7, #390
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 564


 25808 0194 0133     		adds	r3, r3, #1
 25809 0196 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 25810 0198 3B46     		mov	r3, r7
 25811 019a 9954     		strb	r1, [r3, r2]
3789:..\src/command_processing.c **** 
3790:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].gyro_value[2];
 25812              		.loc 1 3790 0
 25813 019c 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 25814 01a0 8149     		ldr	r1, .L1016+8
 25815 01a2 1346     		mov	r3, r2
 25816 01a4 9B00     		lsls	r3, r3, #2
 25817 01a6 1344     		add	r3, r3, r2
 25818 01a8 DB00     		lsls	r3, r3, #3
 25819 01aa 0B44     		add	r3, r3, r1
 25820 01ac 0C33     		adds	r3, r3, #12
 25821 01ae B3F90030 		ldrsh	r3, [r3]
 25822 01b2 A7F88631 		strh	r3, [r7, #390]	@ movhi
3791:..\src/command_processing.c ****             single_packet[c + 5] = ((char*)(&aux_int16))[0];
 25823              		.loc 1 3791 0
 25824 01b6 B7F88C31 		ldrh	r3, [r7, #396]
 25825 01ba 0533     		adds	r3, r3, #5
 25826 01bc 07F5C372 		add	r2, r7, #390
 25827 01c0 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 25828 01c2 3A46     		mov	r2, r7
 25829 01c4 D154     		strb	r1, [r2, r3]
3792:..\src/command_processing.c ****             single_packet[c + 4] = ((char*)(&aux_int16))[1];
 25830              		.loc 1 3792 0
 25831 01c6 B7F88C31 		ldrh	r3, [r7, #396]
 25832 01ca 1A1D     		adds	r2, r3, #4
 25833 01cc 07F5C373 		add	r3, r7, #390
 25834 01d0 0133     		adds	r3, r3, #1
 25835 01d2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 25836 01d4 3B46     		mov	r3, r7
 25837 01d6 9954     		strb	r1, [r3, r2]
3793:..\src/command_processing.c **** 
3794:..\src/command_processing.c ****             c = c + 6;
 25838              		.loc 1 3794 0
 25839 01d8 B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 25840 01dc 0633     		adds	r3, r3, #6
 25841 01de A7F88C31 		strh	r3, [r7, #396]	@ movhi
 25842              	.L1001:
3795:..\src/command_processing.c ****         }
3796:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][2]){
 25843              		.loc 1 3796 0
 25844 01e2 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 25845 01e6 6E4A     		ldr	r2, .L1016
 25846 01e8 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 25847 01ea 1946     		mov	r1, r3
 25848 01ec 6D4A     		ldr	r2, .L1016+4
 25849 01ee 0B46     		mov	r3, r1
 25850 01f0 9B00     		lsls	r3, r3, #2
 25851 01f2 0B44     		add	r3, r3, r1
 25852 01f4 1344     		add	r3, r3, r2
 25853 01f6 03F50173 		add	r3, r3, #516
 25854 01fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25855 01fc 002B     		cmp	r3, #0
 25856 01fe 5DD0     		beq	.L1002
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 565


3797:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].mag_value[0];
 25857              		.loc 1 3797 0
 25858 0200 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 25859 0204 6849     		ldr	r1, .L1016+8
 25860 0206 1346     		mov	r3, r2
 25861 0208 9B00     		lsls	r3, r3, #2
 25862 020a 1344     		add	r3, r3, r2
 25863 020c DB00     		lsls	r3, r3, #3
 25864 020e 0B44     		add	r3, r3, r1
 25865 0210 0E33     		adds	r3, r3, #14
 25866 0212 B3F90030 		ldrsh	r3, [r3]
 25867 0216 A7F88631 		strh	r3, [r7, #390]	@ movhi
3798:..\src/command_processing.c ****             single_packet[c + 1] = ((char*)(&aux_int16))[0];
 25868              		.loc 1 3798 0
 25869 021a B7F88C31 		ldrh	r3, [r7, #396]
 25870 021e 0133     		adds	r3, r3, #1
 25871 0220 07F5C372 		add	r2, r7, #390
 25872 0224 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 25873 0226 3A46     		mov	r2, r7
 25874 0228 D154     		strb	r1, [r2, r3]
3799:..\src/command_processing.c ****             single_packet[c] = ((char*)(&aux_int16))[1];
 25875              		.loc 1 3799 0
 25876 022a B7F88C21 		ldrh	r2, [r7, #396]
 25877 022e 07F5C373 		add	r3, r7, #390
 25878 0232 0133     		adds	r3, r3, #1
 25879 0234 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 25880 0236 3B46     		mov	r3, r7
 25881 0238 9954     		strb	r1, [r3, r2]
3800:..\src/command_processing.c **** 
3801:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].mag_value[1];
 25882              		.loc 1 3801 0
 25883 023a 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 25884 023e 5A49     		ldr	r1, .L1016+8
 25885 0240 1346     		mov	r3, r2
 25886 0242 9B00     		lsls	r3, r3, #2
 25887 0244 1344     		add	r3, r3, r2
 25888 0246 DB00     		lsls	r3, r3, #3
 25889 0248 0B44     		add	r3, r3, r1
 25890 024a 1033     		adds	r3, r3, #16
 25891 024c B3F90030 		ldrsh	r3, [r3]
 25892 0250 A7F88631 		strh	r3, [r7, #390]	@ movhi
3802:..\src/command_processing.c ****             single_packet[c + 3] = ((char*)(&aux_int16))[0];
 25893              		.loc 1 3802 0
 25894 0254 B7F88C31 		ldrh	r3, [r7, #396]
 25895 0258 0333     		adds	r3, r3, #3
 25896 025a 07F5C372 		add	r2, r7, #390
 25897 025e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 25898 0260 3A46     		mov	r2, r7
 25899 0262 D154     		strb	r1, [r2, r3]
3803:..\src/command_processing.c ****             single_packet[c + 2] = ((char*)(&aux_int16))[1];
 25900              		.loc 1 3803 0
 25901 0264 B7F88C31 		ldrh	r3, [r7, #396]
 25902 0268 9A1C     		adds	r2, r3, #2
 25903 026a 07F5C373 		add	r3, r7, #390
 25904 026e 0133     		adds	r3, r3, #1
 25905 0270 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 25906 0272 3B46     		mov	r3, r7
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 566


 25907 0274 9954     		strb	r1, [r3, r2]
3804:..\src/command_processing.c **** 
3805:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].mag_value[2];
 25908              		.loc 1 3805 0
 25909 0276 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 25910 027a 4B49     		ldr	r1, .L1016+8
 25911 027c 1346     		mov	r3, r2
 25912 027e 9B00     		lsls	r3, r3, #2
 25913 0280 1344     		add	r3, r3, r2
 25914 0282 DB00     		lsls	r3, r3, #3
 25915 0284 0B44     		add	r3, r3, r1
 25916 0286 1233     		adds	r3, r3, #18
 25917 0288 B3F90030 		ldrsh	r3, [r3]
 25918 028c A7F88631 		strh	r3, [r7, #390]	@ movhi
3806:..\src/command_processing.c ****             single_packet[c + 5] = ((char*)(&aux_int16))[0];
 25919              		.loc 1 3806 0
 25920 0290 B7F88C31 		ldrh	r3, [r7, #396]
 25921 0294 0533     		adds	r3, r3, #5
 25922 0296 07F5C372 		add	r2, r7, #390
 25923 029a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 25924 029c 3A46     		mov	r2, r7
 25925 029e D154     		strb	r1, [r2, r3]
3807:..\src/command_processing.c ****             single_packet[c + 4] = ((char*)(&aux_int16))[1];
 25926              		.loc 1 3807 0
 25927 02a0 B7F88C31 		ldrh	r3, [r7, #396]
 25928 02a4 1A1D     		adds	r2, r3, #4
 25929 02a6 07F5C373 		add	r3, r7, #390
 25930 02aa 0133     		adds	r3, r3, #1
 25931 02ac 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 25932 02ae 3B46     		mov	r3, r7
 25933 02b0 9954     		strb	r1, [r3, r2]
3808:..\src/command_processing.c **** 
3809:..\src/command_processing.c ****             c = c + 6;
 25934              		.loc 1 3809 0
 25935 02b2 B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 25936 02b6 0633     		adds	r3, r3, #6
 25937 02b8 A7F88C31 		strh	r3, [r7, #396]	@ movhi
 25938              	.L1002:
3810:..\src/command_processing.c ****         }
3811:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][3]){
 25939              		.loc 1 3811 0
 25940 02bc 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 25941 02c0 374A     		ldr	r2, .L1016
 25942 02c2 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 25943 02c4 1946     		mov	r1, r3
 25944 02c6 374A     		ldr	r2, .L1016+4
 25945 02c8 0B46     		mov	r3, r1
 25946 02ca 9B00     		lsls	r3, r3, #2
 25947 02cc 0B44     		add	r3, r3, r1
 25948 02ce 1344     		add	r3, r3, r2
 25949 02d0 03F20523 		addw	r3, r3, #517
 25950 02d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25951 02d6 002B     		cmp	r3, #0
 25952 02d8 00F0AF80 		beq	.L1003
3812:..\src/command_processing.c ****             aux_float = (float) g_imu[k_imu].quat_value[0];
 25953              		.loc 1 3812 0
 25954 02dc 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 567


 25955 02e0 3149     		ldr	r1, .L1016+8
 25956 02e2 1346     		mov	r3, r2
 25957 02e4 9B00     		lsls	r3, r3, #2
 25958 02e6 1344     		add	r3, r3, r2
 25959 02e8 DB00     		lsls	r3, r3, #3
 25960 02ea 0B44     		add	r3, r3, r1
 25961 02ec 1433     		adds	r3, r3, #20
 25962 02ee 1B68     		ldr	r3, [r3]	@ float
 25963 02f0 C7F88031 		str	r3, [r7, #384]	@ float
3813:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 25964              		.loc 1 3813 0
 25965 02f4 0023     		movs	r3, #0
 25966 02f6 87F88B31 		strb	r3, [r7, #395]
 25967 02fa 13E0     		b	.L1004
 25968              	.L1005:
3814:..\src/command_processing.c ****                 single_packet[c + 4 - k -1] = ((char*)(&aux_float))[k];
 25969              		.loc 1 3814 0 discriminator 3
 25970 02fc B7F88C31 		ldrh	r3, [r7, #396]
 25971 0300 1A1D     		adds	r2, r3, #4
 25972 0302 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 25973 0306 D31A     		subs	r3, r2, r3
 25974 0308 013B     		subs	r3, r3, #1
 25975 030a 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 25976 030e 07F5C071 		add	r1, r7, #384
 25977 0312 0A44     		add	r2, r2, r1
 25978 0314 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 25979 0316 3A46     		mov	r2, r7
 25980 0318 D154     		strb	r1, [r2, r3]
3813:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 25981              		.loc 1 3813 0 discriminator 3
 25982 031a 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 25983 031e 0133     		adds	r3, r3, #1
 25984 0320 87F88B31 		strb	r3, [r7, #395]
 25985              	.L1004:
3813:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 25986              		.loc 1 3813 0 is_stmt 0 discriminator 1
 25987 0324 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 25988 0328 032B     		cmp	r3, #3
 25989 032a E7D9     		bls	.L1005
3815:..\src/command_processing.c ****             }
3816:..\src/command_processing.c **** 
3817:..\src/command_processing.c ****             aux_float = (float) g_imu[k_imu].quat_value[1];
 25990              		.loc 1 3817 0 is_stmt 1
 25991 032c 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 25992 0330 1D49     		ldr	r1, .L1016+8
 25993 0332 1346     		mov	r3, r2
 25994 0334 9B00     		lsls	r3, r3, #2
 25995 0336 1344     		add	r3, r3, r2
 25996 0338 DB00     		lsls	r3, r3, #3
 25997 033a 0B44     		add	r3, r3, r1
 25998 033c 1833     		adds	r3, r3, #24
 25999 033e 1B68     		ldr	r3, [r3]	@ float
 26000 0340 C7F88031 		str	r3, [r7, #384]	@ float
3818:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 26001              		.loc 1 3818 0
 26002 0344 0023     		movs	r3, #0
 26003 0346 87F88B31 		strb	r3, [r7, #395]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 568


 26004 034a 14E0     		b	.L1006
 26005              	.L1007:
3819:..\src/command_processing.c ****                 single_packet[c + 8 - k -1] = ((char*)(&aux_float))[k];
 26006              		.loc 1 3819 0 discriminator 3
 26007 034c B7F88C31 		ldrh	r3, [r7, #396]
 26008 0350 03F10802 		add	r2, r3, #8
 26009 0354 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26010 0358 D31A     		subs	r3, r2, r3
 26011 035a 013B     		subs	r3, r3, #1
 26012 035c 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 26013 0360 07F5C071 		add	r1, r7, #384
 26014 0364 0A44     		add	r2, r2, r1
 26015 0366 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26016 0368 3A46     		mov	r2, r7
 26017 036a D154     		strb	r1, [r2, r3]
3818:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 26018              		.loc 1 3818 0 discriminator 3
 26019 036c 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26020 0370 0133     		adds	r3, r3, #1
 26021 0372 87F88B31 		strb	r3, [r7, #395]
 26022              	.L1006:
3818:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 26023              		.loc 1 3818 0 is_stmt 0 discriminator 1
 26024 0376 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26025 037a 032B     		cmp	r3, #3
 26026 037c E6D9     		bls	.L1007
3820:..\src/command_processing.c ****             }
3821:..\src/command_processing.c **** 
3822:..\src/command_processing.c ****             aux_float = (float) g_imu[k_imu].quat_value[2];
 26027              		.loc 1 3822 0 is_stmt 1
 26028 037e 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26029 0382 0949     		ldr	r1, .L1016+8
 26030 0384 1346     		mov	r3, r2
 26031 0386 9B00     		lsls	r3, r3, #2
 26032 0388 1344     		add	r3, r3, r2
 26033 038a DB00     		lsls	r3, r3, #3
 26034 038c 0B44     		add	r3, r3, r1
 26035 038e 1C33     		adds	r3, r3, #28
 26036 0390 1B68     		ldr	r3, [r3]	@ float
 26037 0392 C7F88031 		str	r3, [r7, #384]	@ float
3823:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 26038              		.loc 1 3823 0
 26039 0396 0023     		movs	r3, #0
 26040 0398 87F88B31 		strb	r3, [r7, #395]
 26041 039c 1BE0     		b	.L1008
 26042              	.L1017:
 26043 039e 00BF     		.align	2
 26044              	.L1016:
 26045 03a0 00000000 		.word	IMU_connected
 26046 03a4 00000000 		.word	c_mem
 26047 03a8 00000000 		.word	g_imu
 26048              	.L1009:
3824:..\src/command_processing.c ****                 single_packet[c + 12 - k -1] = ((char*)(&aux_float))[k];
 26049              		.loc 1 3824 0 discriminator 3
 26050 03ac B7F88C31 		ldrh	r3, [r7, #396]
 26051 03b0 03F10C02 		add	r2, r3, #12
 26052 03b4 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 569


 26053 03b8 D31A     		subs	r3, r2, r3
 26054 03ba 013B     		subs	r3, r3, #1
 26055 03bc 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 26056 03c0 07F5C071 		add	r1, r7, #384
 26057 03c4 0A44     		add	r2, r2, r1
 26058 03c6 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26059 03c8 3A46     		mov	r2, r7
 26060 03ca D154     		strb	r1, [r2, r3]
3823:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 26061              		.loc 1 3823 0 discriminator 3
 26062 03cc 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26063 03d0 0133     		adds	r3, r3, #1
 26064 03d2 87F88B31 		strb	r3, [r7, #395]
 26065              	.L1008:
3823:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 26066              		.loc 1 3823 0 is_stmt 0 discriminator 1
 26067 03d6 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26068 03da 032B     		cmp	r3, #3
 26069 03dc E6D9     		bls	.L1009
3825:..\src/command_processing.c ****             }
3826:..\src/command_processing.c **** 
3827:..\src/command_processing.c ****             aux_float = (float) g_imu[k_imu].quat_value[3];
 26070              		.loc 1 3827 0 is_stmt 1
 26071 03de 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26072 03e2 6749     		ldr	r1, .L1018
 26073 03e4 1346     		mov	r3, r2
 26074 03e6 9B00     		lsls	r3, r3, #2
 26075 03e8 1344     		add	r3, r3, r2
 26076 03ea DB00     		lsls	r3, r3, #3
 26077 03ec 0B44     		add	r3, r3, r1
 26078 03ee 2033     		adds	r3, r3, #32
 26079 03f0 1B68     		ldr	r3, [r3]	@ float
 26080 03f2 C7F88031 		str	r3, [r7, #384]	@ float
3828:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 26081              		.loc 1 3828 0
 26082 03f6 0023     		movs	r3, #0
 26083 03f8 87F88B31 		strb	r3, [r7, #395]
 26084 03fc 14E0     		b	.L1010
 26085              	.L1011:
3829:..\src/command_processing.c ****                 single_packet[c + 16 - k -1] = ((char*)(&aux_float))[k];
 26086              		.loc 1 3829 0 discriminator 3
 26087 03fe B7F88C31 		ldrh	r3, [r7, #396]
 26088 0402 03F11002 		add	r2, r3, #16
 26089 0406 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26090 040a D31A     		subs	r3, r2, r3
 26091 040c 013B     		subs	r3, r3, #1
 26092 040e 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 26093 0412 07F5C071 		add	r1, r7, #384
 26094 0416 0A44     		add	r2, r2, r1
 26095 0418 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26096 041a 3A46     		mov	r2, r7
 26097 041c D154     		strb	r1, [r2, r3]
3828:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 26098              		.loc 1 3828 0 discriminator 3
 26099 041e 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26100 0422 0133     		adds	r3, r3, #1
 26101 0424 87F88B31 		strb	r3, [r7, #395]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 570


 26102              	.L1010:
3828:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 26103              		.loc 1 3828 0 is_stmt 0 discriminator 1
 26104 0428 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26105 042c 032B     		cmp	r3, #3
 26106 042e E6D9     		bls	.L1011
3830:..\src/command_processing.c ****             }
3831:..\src/command_processing.c ****             c = c + 16;
 26107              		.loc 1 3831 0 is_stmt 1
 26108 0430 B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 26109 0434 1033     		adds	r3, r3, #16
 26110 0436 A7F88C31 		strh	r3, [r7, #396]	@ movhi
 26111              	.L1003:
3832:..\src/command_processing.c ****         }
3833:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][4]){
 26112              		.loc 1 3833 0
 26113 043a 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 26114 043e 514A     		ldr	r2, .L1018+4
 26115 0440 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 26116 0442 1946     		mov	r1, r3
 26117 0444 504A     		ldr	r2, .L1018+8
 26118 0446 0B46     		mov	r3, r1
 26119 0448 9B00     		lsls	r3, r3, #2
 26120 044a 0B44     		add	r3, r3, r1
 26121 044c 1344     		add	r3, r3, r2
 26122 044e 03F20623 		addw	r3, r3, #518
 26123 0452 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 26124 0454 002B     		cmp	r3, #0
 26125 0456 21D0     		beq	.L1012
3834:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].temp_value;
 26126              		.loc 1 3834 0
 26127 0458 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26128 045c 4849     		ldr	r1, .L1018
 26129 045e 1346     		mov	r3, r2
 26130 0460 9B00     		lsls	r3, r3, #2
 26131 0462 1344     		add	r3, r3, r2
 26132 0464 DB00     		lsls	r3, r3, #3
 26133 0466 0B44     		add	r3, r3, r1
 26134 0468 2433     		adds	r3, r3, #36
 26135 046a B3F90030 		ldrsh	r3, [r3]
 26136 046e A7F88631 		strh	r3, [r7, #390]	@ movhi
3835:..\src/command_processing.c ****             single_packet[c + 1] = ((char*)(&aux_int16))[0];
 26137              		.loc 1 3835 0
 26138 0472 B7F88C31 		ldrh	r3, [r7, #396]
 26139 0476 0133     		adds	r3, r3, #1
 26140 0478 07F5C372 		add	r2, r7, #390
 26141 047c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26142 047e 3A46     		mov	r2, r7
 26143 0480 D154     		strb	r1, [r2, r3]
3836:..\src/command_processing.c ****             single_packet[c] = ((char*)(&aux_int16))[1];
 26144              		.loc 1 3836 0
 26145 0482 B7F88C21 		ldrh	r2, [r7, #396]
 26146 0486 07F5C373 		add	r3, r7, #390
 26147 048a 0133     		adds	r3, r3, #1
 26148 048c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 26149 048e 3B46     		mov	r3, r7
 26150 0490 9954     		strb	r1, [r3, r2]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 571


3837:..\src/command_processing.c ****             c = c + 2;
 26151              		.loc 1 3837 0
 26152 0492 B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 26153 0496 0233     		adds	r3, r3, #2
 26154 0498 A7F88C31 		strh	r3, [r7, #396]	@ movhi
 26155              	.L1012:
3838:..\src/command_processing.c ****         }
3839:..\src/command_processing.c ****         single_packet[single_imu_size[IMU_connected[k_imu]] - 1] = (uint8) 0x3A; //':';
 26156              		.loc 1 3839 0
 26157 049c 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 26158 04a0 384A     		ldr	r2, .L1018+4
 26159 04a2 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 26160 04a4 1A46     		mov	r2, r3
 26161 04a6 394B     		ldr	r3, .L1018+12
 26162 04a8 53F82230 		ldr	r3, [r3, r2, lsl #2]
 26163 04ac 013B     		subs	r3, r3, #1
 26164 04ae 3A46     		mov	r2, r7
 26165 04b0 3A21     		movs	r1, #58
 26166 04b2 D154     		strb	r1, [r2, r3]
3840:..\src/command_processing.c ****         c = 1;
 26167              		.loc 1 3840 0
 26168 04b4 0123     		movs	r3, #1
 26169 04b6 A7F88C31 		strh	r3, [r7, #396]	@ movhi
3841:..\src/command_processing.c ****                
3842:..\src/command_processing.c ****         for(k=0; k < single_imu_size[IMU_connected[k_imu]]; k++) {
 26170              		.loc 1 3842 0
 26171 04ba 0023     		movs	r3, #0
 26172 04bc 87F88B31 		strb	r3, [r7, #395]
 26173 04c0 10E0     		b	.L1013
 26174              	.L1014:
3843:..\src/command_processing.c ****             packet_data[gl_c + k] = (uint8) single_packet[k]; 
 26175              		.loc 1 3843 0 discriminator 3
 26176 04c2 B7F88821 		ldrh	r2, [r7, #392]
 26177 04c6 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26178 04ca 1344     		add	r3, r3, r2
 26179 04cc 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 26180 04d0 3946     		mov	r1, r7
 26181 04d2 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 26182 04d4 07F12002 		add	r2, r7, #32
 26183 04d8 D154     		strb	r1, [r2, r3]
3842:..\src/command_processing.c ****             packet_data[gl_c + k] = (uint8) single_packet[k]; 
 26184              		.loc 1 3842 0 discriminator 3
 26185 04da 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26186 04de 0133     		adds	r3, r3, #1
 26187 04e0 87F88B31 		strb	r3, [r7, #395]
 26188              	.L1013:
3842:..\src/command_processing.c ****             packet_data[gl_c + k] = (uint8) single_packet[k]; 
 26189              		.loc 1 3842 0 is_stmt 0 discriminator 1
 26190 04e4 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 26191 04e8 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 26192 04ec 2549     		ldr	r1, .L1018+4
 26193 04ee CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 26194 04f0 1946     		mov	r1, r3
 26195 04f2 264B     		ldr	r3, .L1018+12
 26196 04f4 53F82130 		ldr	r3, [r3, r1, lsl #2]
 26197 04f8 9A42     		cmp	r2, r3
 26198 04fa E2DB     		blt	.L1014
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 572


3844:..\src/command_processing.c ****         }
3845:..\src/command_processing.c ****         gl_c = gl_c + single_imu_size[IMU_connected[k_imu]];  
 26199              		.loc 1 3845 0 is_stmt 1 discriminator 2
 26200 04fc 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 26201 0500 204A     		ldr	r2, .L1018+4
 26202 0502 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 26203 0504 1A46     		mov	r2, r3
 26204 0506 214B     		ldr	r3, .L1018+12
 26205 0508 53F82230 		ldr	r3, [r3, r2, lsl #2]
 26206 050c 9AB2     		uxth	r2, r3
 26207 050e B7F88831 		ldrh	r3, [r7, #392]	@ movhi
 26208 0512 1344     		add	r3, r3, r2
 26209 0514 A7F88831 		strh	r3, [r7, #392]	@ movhi
3846:..\src/command_processing.c ****         
3847:..\src/command_processing.c ****         memset(&single_packet, 0, sizeof(single_packet));     
 26210              		.loc 1 3847 0 discriminator 2
 26211 0518 3B46     		mov	r3, r7
 26212 051a 2022     		movs	r2, #32
 26213 051c 0021     		movs	r1, #0
 26214 051e 1846     		mov	r0, r3
 26215 0520 FFF7FEFF 		bl	memset
3762:..\src/command_processing.c ****     {	
 26216              		.loc 1 3762 0 discriminator 2
 26217 0524 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 26218 0528 0133     		adds	r3, r3, #1
 26219 052a 87F88F31 		strb	r3, [r7, #399]
 26220              	.L999:
3762:..\src/command_processing.c ****     {	
 26221              		.loc 1 3762 0 is_stmt 0 discriminator 1
 26222 052e 184B     		ldr	r3, .L1018+16
 26223 0530 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 26224 0532 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26225 0536 9A42     		cmp	r2, r3
 26226 0538 FFF476AD 		bcc	.L1015
3848:..\src/command_processing.c ****         
3849:..\src/command_processing.c ****     }
3850:..\src/command_processing.c **** 
3851:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3852:..\src/command_processing.c ****     packet_data[imus_data_size-1] = LCRChecksum (packet_data, imus_data_size-1);
 26227              		.loc 1 3852 0 is_stmt 1
 26228 053c 154B     		ldr	r3, .L1018+20
 26229 053e 1B68     		ldr	r3, [r3]
 26230 0540 5C1E     		subs	r4, r3, #1
 26231 0542 144B     		ldr	r3, .L1018+20
 26232 0544 1B68     		ldr	r3, [r3]
 26233 0546 DBB2     		uxtb	r3, r3
 26234 0548 013B     		subs	r3, r3, #1
 26235 054a DAB2     		uxtb	r2, r3
 26236 054c 07F12003 		add	r3, r7, #32
 26237 0550 1146     		mov	r1, r2
 26238 0552 1846     		mov	r0, r3
 26239 0554 FFF7FEFF 		bl	LCRChecksum
 26240 0558 0346     		mov	r3, r0
 26241 055a 1A46     		mov	r2, r3
 26242 055c 07F12003 		add	r3, r7, #32
 26243 0560 1A55     		strb	r2, [r3, r4]
3853:..\src/command_processing.c ****     commWrite(packet_data, imus_data_size);
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 573


 26244              		.loc 1 3853 0
 26245 0562 0C4B     		ldr	r3, .L1018+20
 26246 0564 1B68     		ldr	r3, [r3]
 26247 0566 9AB2     		uxth	r2, r3
 26248 0568 07F12003 		add	r3, r7, #32
 26249 056c 1146     		mov	r1, r2
 26250 056e 1846     		mov	r0, r3
 26251 0570 FFF7FEFF 		bl	commWrite
3854:..\src/command_processing.c **** }
 26252              		.loc 1 3854 0
 26253 0574 00BF     		nop
 26254 0576 07F5CA77 		add	r7, r7, #404
 26255              		.cfi_def_cfa_offset 12
 26256 057a BD46     		mov	sp, r7
 26257              		.cfi_def_cfa_register 13
 26258              		@ sp needed
 26259 057c 90BD     		pop	{r4, r7, pc}
 26260              	.L1019:
 26261 057e 00BF     		.align	2
 26262              	.L1018:
 26263 0580 00000000 		.word	g_imu
 26264 0584 00000000 		.word	IMU_connected
 26265 0588 00000000 		.word	c_mem
 26266 058c 00000000 		.word	single_imu_size
 26267 0590 00000000 		.word	N_IMU_Connected
 26268 0594 00000000 		.word	imus_data_size
 26269              		.cfi_endproc
 26270              	.LFE107:
 26271              		.size	cmd_get_imu_readings, .-cmd_get_imu_readings
 26272              		.section	.text.cmd_get_encoder_map,"ax",%progbits
 26273              		.align	2
 26274              		.global	cmd_get_encoder_map
 26275              		.thumb
 26276              		.thumb_func
 26277              		.type	cmd_get_encoder_map, %function
 26278              	cmd_get_encoder_map:
 26279              	.LFB108:
3855:..\src/command_processing.c **** 
3856:..\src/command_processing.c **** void cmd_get_encoder_map(){
 26280              		.loc 1 3856 0
 26281              		.cfi_startproc
 26282              		@ args = 0, pretend = 0, frame = 16
 26283              		@ frame_needed = 1, uses_anonymous_args = 0
 26284 0000 90B5     		push	{r4, r7, lr}
 26285              		.cfi_def_cfa_offset 12
 26286              		.cfi_offset 4, -12
 26287              		.cfi_offset 7, -8
 26288              		.cfi_offset 14, -4
 26289 0002 85B0     		sub	sp, sp, #20
 26290              		.cfi_def_cfa_offset 32
 26291 0004 00AF     		add	r7, sp, #0
 26292              		.cfi_def_cfa_register 7
3857:..\src/command_processing.c ****     //Retrieve Encoder map
3858:..\src/command_processing.c ****     
3859:..\src/command_processing.c ****     uint8 packet_data[4+N_ENCODER_LINE_MAX*N_ENCODERS_PER_LINE_MAX];
3860:..\src/command_processing.c ****     uint8 CYDATA i, j;
3861:..\src/command_processing.c ****     
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 574


3862:..\src/command_processing.c ****     // Header        
3863:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ENCODER_CONF;
 26293              		.loc 1 3863 0
 26294 0006 A323     		movs	r3, #163
 26295 0008 3B70     		strb	r3, [r7]
3864:..\src/command_processing.c ****     
3865:..\src/command_processing.c ****     // Fill payload
3866:..\src/command_processing.c ****     packet_data[1] = N_ENCODER_LINE_MAX;
 26296              		.loc 1 3866 0
 26297 000a 0223     		movs	r3, #2
 26298 000c 7B70     		strb	r3, [r7, #1]
3867:..\src/command_processing.c ****     packet_data[2] = N_ENCODERS_PER_LINE_MAX;
 26299              		.loc 1 3867 0
 26300 000e 0523     		movs	r3, #5
 26301 0010 BB70     		strb	r3, [r7, #2]
3868:..\src/command_processing.c ****     for (i=0; i<N_ENCODER_LINE_MAX; i++) {
 26302              		.loc 1 3868 0
 26303 0012 0023     		movs	r3, #0
 26304 0014 FB73     		strb	r3, [r7, #15]
 26305 0016 23E0     		b	.L1021
 26306              	.L1024:
3869:..\src/command_processing.c ****         for (j=0; j < N_ENCODERS_PER_LINE_MAX; j++) {
 26307              		.loc 1 3869 0
 26308 0018 0023     		movs	r3, #0
 26309 001a BB73     		strb	r3, [r7, #14]
 26310 001c 1AE0     		b	.L1022
 26311              	.L1023:
3870:..\src/command_processing.c ****             packet_data[3 + i*N_ENCODERS_PER_LINE_MAX + j] = c_mem.enc[i].Enc_raw_read_conf[j];
 26312              		.loc 1 3870 0 discriminator 3
 26313 001e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 26314 0020 1346     		mov	r3, r2
 26315 0022 9B00     		lsls	r3, r3, #2
 26316 0024 1344     		add	r3, r3, r2
 26317 0026 DA1C     		adds	r2, r3, #3
 26318 0028 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 26319 002a D118     		adds	r1, r2, r3
 26320 002c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 26321 002e B87B     		ldrb	r0, [r7, #14]	@ zero_extendqisi2
 26322 0030 154C     		ldr	r4, .L1025
 26323 0032 1346     		mov	r3, r2
 26324 0034 5B00     		lsls	r3, r3, #1
 26325 0036 1344     		add	r3, r3, r2
 26326 0038 1B01     		lsls	r3, r3, #4
 26327 003a 2344     		add	r3, r3, r4
 26328 003c 0344     		add	r3, r3, r0
 26329 003e 03F5C873 		add	r3, r3, #400
 26330 0042 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 26331 0044 07F11003 		add	r3, r7, #16
 26332 0048 0B44     		add	r3, r3, r1
 26333 004a 03F8102C 		strb	r2, [r3, #-16]
3869:..\src/command_processing.c ****         for (j=0; j < N_ENCODERS_PER_LINE_MAX; j++) {
 26334              		.loc 1 3869 0 discriminator 3
 26335 004e BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 26336 0050 0133     		adds	r3, r3, #1
 26337 0052 BB73     		strb	r3, [r7, #14]
 26338              	.L1022:
3869:..\src/command_processing.c ****         for (j=0; j < N_ENCODERS_PER_LINE_MAX; j++) {
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 575


 26339              		.loc 1 3869 0 is_stmt 0 discriminator 1
 26340 0054 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 26341 0056 042B     		cmp	r3, #4
 26342 0058 E1D9     		bls	.L1023
3868:..\src/command_processing.c ****     for (i=0; i<N_ENCODER_LINE_MAX; i++) {
 26343              		.loc 1 3868 0 is_stmt 1 discriminator 2
 26344 005a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 26345 005c 0133     		adds	r3, r3, #1
 26346 005e FB73     		strb	r3, [r7, #15]
 26347              	.L1021:
3868:..\src/command_processing.c ****     for (i=0; i<N_ENCODER_LINE_MAX; i++) {
 26348              		.loc 1 3868 0 is_stmt 0 discriminator 1
 26349 0060 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 26350 0062 012B     		cmp	r3, #1
 26351 0064 D8D9     		bls	.L1024
3871:..\src/command_processing.c ****         }
3872:..\src/command_processing.c ****     }
3873:..\src/command_processing.c ****     
3874:..\src/command_processing.c ****     // Calculate checksum
3875:..\src/command_processing.c ****     packet_data[3+N_ENCODER_LINE_MAX*N_ENCODERS_PER_LINE_MAX] = LCRChecksum(packet_data, 3+N_ENCODE
 26352              		.loc 1 3875 0 is_stmt 1
 26353 0066 3B46     		mov	r3, r7
 26354 0068 0D21     		movs	r1, #13
 26355 006a 1846     		mov	r0, r3
 26356 006c FFF7FEFF 		bl	LCRChecksum
 26357 0070 0346     		mov	r3, r0
 26358 0072 7B73     		strb	r3, [r7, #13]
3876:..\src/command_processing.c ****     
3877:..\src/command_processing.c ****     // Send package to UART
3878:..\src/command_processing.c ****     commWrite(packet_data, 4+N_ENCODER_LINE_MAX*N_ENCODERS_PER_LINE_MAX);
 26359              		.loc 1 3878 0
 26360 0074 3B46     		mov	r3, r7
 26361 0076 0E21     		movs	r1, #14
 26362 0078 1846     		mov	r0, r3
 26363 007a FFF7FEFF 		bl	commWrite
3879:..\src/command_processing.c **** }
 26364              		.loc 1 3879 0
 26365 007e 00BF     		nop
 26366 0080 1437     		adds	r7, r7, #20
 26367              		.cfi_def_cfa_offset 12
 26368 0082 BD46     		mov	sp, r7
 26369              		.cfi_def_cfa_register 13
 26370              		@ sp needed
 26371 0084 90BD     		pop	{r4, r7, pc}
 26372              	.L1026:
 26373 0086 00BF     		.align	2
 26374              	.L1025:
 26375 0088 00000000 		.word	c_mem
 26376              		.cfi_endproc
 26377              	.LFE108:
 26378              		.size	cmd_get_encoder_map, .-cmd_get_encoder_map
 26379              		.section	.text.cmd_get_encoder_raw,"ax",%progbits
 26380              		.align	2
 26381              		.global	cmd_get_encoder_raw
 26382              		.thumb
 26383              		.thumb_func
 26384              		.type	cmd_get_encoder_raw, %function
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 576


 26385              	cmd_get_encoder_raw:
 26386              	.LFB109:
3880:..\src/command_processing.c **** 
3881:..\src/command_processing.c **** void cmd_get_encoder_raw(){
 26387              		.loc 1 3881 0
 26388              		.cfi_startproc
 26389              		@ args = 0, pretend = 0, frame = 32
 26390              		@ frame_needed = 1, uses_anonymous_args = 0
 26391 0000 90B5     		push	{r4, r7, lr}
 26392              		.cfi_def_cfa_offset 12
 26393              		.cfi_offset 4, -12
 26394              		.cfi_offset 7, -8
 26395              		.cfi_offset 14, -4
 26396 0002 89B0     		sub	sp, sp, #36
 26397              		.cfi_def_cfa_offset 48
 26398 0004 00AF     		add	r7, sp, #0
 26399              		.cfi_def_cfa_register 7
3882:..\src/command_processing.c ****     //Retrieve all Encoders raw values
3883:..\src/command_processing.c ****     
3884:..\src/command_processing.c ****     uint8 packet_data[2+2*N_ENCODER_LINE_MAX*N_ENCODERS_PER_LINE_MAX];
3885:..\src/command_processing.c ****     uint8 i, j, idx;
3886:..\src/command_processing.c ****     uint16 aux_uint16;
3887:..\src/command_processing.c ****     
3888:..\src/command_processing.c ****     //Header package 
3889:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ENCODER_RAW;
 26400              		.loc 1 3889 0
 26401 0006 A423     		movs	r3, #164
 26402 0008 3B71     		strb	r3, [r7, #4]
3890:..\src/command_processing.c ****  
3891:..\src/command_processing.c ****     // Fill payload
3892:..\src/command_processing.c ****     idx = 0;
 26403              		.loc 1 3892 0
 26404 000a 0023     		movs	r3, #0
 26405 000c 7B77     		strb	r3, [r7, #29]
3893:..\src/command_processing.c ****     for (i=0; i<N_ENCODER_LINE_MAX; i++) {
 26406              		.loc 1 3893 0
 26407 000e 0023     		movs	r3, #0
 26408 0010 FB77     		strb	r3, [r7, #31]
 26409 0012 3FE0     		b	.L1028
 26410              	.L1032:
3894:..\src/command_processing.c ****         for (j=0; j < N_Encoder_Line_Connected[i]; j++) {
 26411              		.loc 1 3894 0
 26412 0014 0023     		movs	r3, #0
 26413 0016 BB77     		strb	r3, [r7, #30]
 26414 0018 33E0     		b	.L1029
 26415              	.L1031:
3895:..\src/command_processing.c ****             if (c_mem.enc[i].Enc_raw_read_conf[j] == 1) {
 26416              		.loc 1 3895 0
 26417 001a FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 26418 001c B97F     		ldrb	r1, [r7, #30]	@ zero_extendqisi2
 26419 001e 3048     		ldr	r0, .L1033
 26420 0020 1346     		mov	r3, r2
 26421 0022 5B00     		lsls	r3, r3, #1
 26422 0024 1344     		add	r3, r3, r2
 26423 0026 1B01     		lsls	r3, r3, #4
 26424 0028 0344     		add	r3, r3, r0
 26425 002a 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 577


 26426 002c 03F5C873 		add	r3, r3, #400
 26427 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 26428 0032 012B     		cmp	r3, #1
 26429 0034 22D1     		bne	.L1030
3896:..\src/command_processing.c ****                 aux_uint16 = (uint16)Encoder_Value[i][j];
 26430              		.loc 1 3896 0
 26431 0036 FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 26432 0038 B97F     		ldrb	r1, [r7, #30]	@ zero_extendqisi2
 26433 003a 2A48     		ldr	r0, .L1033+4
 26434 003c 1346     		mov	r3, r2
 26435 003e 9B00     		lsls	r3, r3, #2
 26436 0040 1344     		add	r3, r3, r2
 26437 0042 0B44     		add	r3, r3, r1
 26438 0044 30F81330 		ldrh	r3, [r0, r3, lsl #1]
 26439 0048 7B80     		strh	r3, [r7, #2]	@ movhi
3897:..\src/command_processing.c ****                 packet_data[(idx << 1) + 2] = ((char*)(&aux_uint16))[0];
 26440              		.loc 1 3897 0
 26441 004a 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 26442 004c 5B00     		lsls	r3, r3, #1
 26443 004e 0233     		adds	r3, r3, #2
 26444 0050 BA1C     		adds	r2, r7, #2
 26445 0052 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 26446 0054 07F12001 		add	r1, r7, #32
 26447 0058 0B44     		add	r3, r3, r1
 26448 005a 03F81C2C 		strb	r2, [r3, #-28]
3898:..\src/command_processing.c ****                 packet_data[(idx << 1) + 1] = ((char*)(&aux_uint16))[1];
 26449              		.loc 1 3898 0
 26450 005e 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 26451 0060 5B00     		lsls	r3, r3, #1
 26452 0062 5A1C     		adds	r2, r3, #1
 26453 0064 BB1C     		adds	r3, r7, #2
 26454 0066 0133     		adds	r3, r3, #1
 26455 0068 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 26456 006a 07F12003 		add	r3, r7, #32
 26457 006e 1344     		add	r3, r3, r2
 26458 0070 0A46     		mov	r2, r1
 26459 0072 03F81C2C 		strb	r2, [r3, #-28]
3899:..\src/command_processing.c ****                 idx++;
 26460              		.loc 1 3899 0
 26461 0076 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 26462 0078 0133     		adds	r3, r3, #1
 26463 007a 7B77     		strb	r3, [r7, #29]
 26464              	.L1030:
3894:..\src/command_processing.c ****             if (c_mem.enc[i].Enc_raw_read_conf[j] == 1) {
 26465              		.loc 1 3894 0 discriminator 2
 26466 007c BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 26467 007e 0133     		adds	r3, r3, #1
 26468 0080 BB77     		strb	r3, [r7, #30]
 26469              	.L1029:
3894:..\src/command_processing.c ****             if (c_mem.enc[i].Enc_raw_read_conf[j] == 1) {
 26470              		.loc 1 3894 0 is_stmt 0 discriminator 1
 26471 0082 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 26472 0084 184A     		ldr	r2, .L1033+8
 26473 0086 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 26474 0088 BA7F     		ldrb	r2, [r7, #30]	@ zero_extendqisi2
 26475 008a 9A42     		cmp	r2, r3
 26476 008c C5D3     		bcc	.L1031
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 578


3893:..\src/command_processing.c ****         for (j=0; j < N_Encoder_Line_Connected[i]; j++) {
 26477              		.loc 1 3893 0 is_stmt 1 discriminator 2
 26478 008e FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 26479 0090 0133     		adds	r3, r3, #1
 26480 0092 FB77     		strb	r3, [r7, #31]
 26481              	.L1028:
3893:..\src/command_processing.c ****         for (j=0; j < N_Encoder_Line_Connected[i]; j++) {
 26482              		.loc 1 3893 0 is_stmt 0 discriminator 1
 26483 0094 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 26484 0096 012B     		cmp	r3, #1
 26485 0098 BCD9     		bls	.L1032
3900:..\src/command_processing.c ****             }
3901:..\src/command_processing.c ****         }
3902:..\src/command_processing.c ****     }
3903:..\src/command_processing.c **** 
3904:..\src/command_processing.c ****     // Calculate checksum
3905:..\src/command_processing.c ****     packet_data[1+2*idx] = LCRChecksum(packet_data, 1+2*idx);
 26486              		.loc 1 3905 0 is_stmt 1
 26487 009a 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 26488 009c 5B00     		lsls	r3, r3, #1
 26489 009e 5C1C     		adds	r4, r3, #1
 26490 00a0 7B7F     		ldrb	r3, [r7, #29]
 26491 00a2 5B00     		lsls	r3, r3, #1
 26492 00a4 DBB2     		uxtb	r3, r3
 26493 00a6 0133     		adds	r3, r3, #1
 26494 00a8 DAB2     		uxtb	r2, r3
 26495 00aa 3B1D     		adds	r3, r7, #4
 26496 00ac 1146     		mov	r1, r2
 26497 00ae 1846     		mov	r0, r3
 26498 00b0 FFF7FEFF 		bl	LCRChecksum
 26499 00b4 0346     		mov	r3, r0
 26500 00b6 1A46     		mov	r2, r3
 26501 00b8 07F12003 		add	r3, r7, #32
 26502 00bc 2344     		add	r3, r3, r4
 26503 00be 03F81C2C 		strb	r2, [r3, #-28]
3906:..\src/command_processing.c ****     
3907:..\src/command_processing.c ****     // Send package to UART
3908:..\src/command_processing.c ****     commWrite(packet_data, 2+2*idx);
 26504              		.loc 1 3908 0
 26505 00c2 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 26506 00c4 0133     		adds	r3, r3, #1
 26507 00c6 9BB2     		uxth	r3, r3
 26508 00c8 5B00     		lsls	r3, r3, #1
 26509 00ca 9AB2     		uxth	r2, r3
 26510 00cc 3B1D     		adds	r3, r7, #4
 26511 00ce 1146     		mov	r1, r2
 26512 00d0 1846     		mov	r0, r3
 26513 00d2 FFF7FEFF 		bl	commWrite
3909:..\src/command_processing.c **** }
 26514              		.loc 1 3909 0
 26515 00d6 00BF     		nop
 26516 00d8 2437     		adds	r7, r7, #36
 26517              		.cfi_def_cfa_offset 12
 26518 00da BD46     		mov	sp, r7
 26519              		.cfi_def_cfa_register 13
 26520              		@ sp needed
 26521 00dc 90BD     		pop	{r4, r7, pc}
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 579


 26522              	.L1034:
 26523 00de 00BF     		.align	2
 26524              	.L1033:
 26525 00e0 00000000 		.word	c_mem
 26526 00e4 00000000 		.word	Encoder_Value
 26527 00e8 00000000 		.word	N_Encoder_Line_Connected
 26528              		.cfi_endproc
 26529              	.LFE109:
 26530              		.size	cmd_get_encoder_raw, .-cmd_get_encoder_raw
 26531              		.section	.text.cmd_get_ADC_map,"ax",%progbits
 26532              		.align	2
 26533              		.global	cmd_get_ADC_map
 26534              		.thumb
 26535              		.thumb_func
 26536              		.type	cmd_get_ADC_map, %function
 26537              	cmd_get_ADC_map:
 26538              	.LFB110:
3910:..\src/command_processing.c **** 
3911:..\src/command_processing.c **** void cmd_get_ADC_map(){
 26539              		.loc 1 3911 0
 26540              		.cfi_startproc
 26541              		@ args = 0, pretend = 0, frame = 16
 26542              		@ frame_needed = 1, uses_anonymous_args = 0
 26543 0000 80B5     		push	{r7, lr}
 26544              		.cfi_def_cfa_offset 8
 26545              		.cfi_offset 7, -8
 26546              		.cfi_offset 14, -4
 26547 0002 84B0     		sub	sp, sp, #16
 26548              		.cfi_def_cfa_offset 24
 26549 0004 00AF     		add	r7, sp, #0
 26550              		.cfi_def_cfa_register 7
3912:..\src/command_processing.c ****     //Retrieve Encoder map
3913:..\src/command_processing.c ****     
3914:..\src/command_processing.c ****     uint8 packet_data[3+NUM_OF_ADC_CHANNELS_MAX];
3915:..\src/command_processing.c ****     uint8 CYDATA i;
3916:..\src/command_processing.c ****     
3917:..\src/command_processing.c ****     // Header        
3918:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ADC_CONF;
 26551              		.loc 1 3918 0
 26552 0006 A523     		movs	r3, #165
 26553 0008 3B70     		strb	r3, [r7]
3919:..\src/command_processing.c ****     
3920:..\src/command_processing.c ****     // Fill payload
3921:..\src/command_processing.c ****     packet_data[1] = NUM_OF_ADC_CHANNELS_MAX;
 26554              		.loc 1 3921 0
 26555 000a 0C23     		movs	r3, #12
 26556 000c 7B70     		strb	r3, [r7, #1]
3922:..\src/command_processing.c ****     for (i=0; i<NUM_OF_ADC_CHANNELS_MAX; i++) {
 26557              		.loc 1 3922 0
 26558 000e 0023     		movs	r3, #0
 26559 0010 FB73     		strb	r3, [r7, #15]
 26560 0012 0EE0     		b	.L1036
 26561              	.L1037:
3923:..\src/command_processing.c ****         packet_data[2 + i] = c_mem.exp.ADC_conf[i];
 26562              		.loc 1 3923 0 discriminator 3
 26563 0014 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 26564 0016 0233     		adds	r3, r3, #2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 580


 26565 0018 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 26566 001a 0F49     		ldr	r1, .L1038
 26567 001c 0A44     		add	r2, r2, r1
 26568 001e 92F82822 		ldrb	r2, [r2, #552]	@ zero_extendqisi2
 26569 0022 07F11001 		add	r1, r7, #16
 26570 0026 0B44     		add	r3, r3, r1
 26571 0028 03F8102C 		strb	r2, [r3, #-16]
3922:..\src/command_processing.c ****     for (i=0; i<NUM_OF_ADC_CHANNELS_MAX; i++) {
 26572              		.loc 1 3922 0 discriminator 3
 26573 002c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 26574 002e 0133     		adds	r3, r3, #1
 26575 0030 FB73     		strb	r3, [r7, #15]
 26576              	.L1036:
3922:..\src/command_processing.c ****     for (i=0; i<NUM_OF_ADC_CHANNELS_MAX; i++) {
 26577              		.loc 1 3922 0 is_stmt 0 discriminator 1
 26578 0032 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 26579 0034 0B2B     		cmp	r3, #11
 26580 0036 EDD9     		bls	.L1037
3924:..\src/command_processing.c ****     }
3925:..\src/command_processing.c ****     
3926:..\src/command_processing.c ****     // Calculate checksum
3927:..\src/command_processing.c ****     packet_data[2+NUM_OF_ADC_CHANNELS_MAX] = LCRChecksum(packet_data, 2+NUM_OF_ADC_CHANNELS_MAX);
 26581              		.loc 1 3927 0 is_stmt 1
 26582 0038 3B46     		mov	r3, r7
 26583 003a 0E21     		movs	r1, #14
 26584 003c 1846     		mov	r0, r3
 26585 003e FFF7FEFF 		bl	LCRChecksum
 26586 0042 0346     		mov	r3, r0
 26587 0044 BB73     		strb	r3, [r7, #14]
3928:..\src/command_processing.c ****     
3929:..\src/command_processing.c ****     // Send package to UART
3930:..\src/command_processing.c ****     commWrite(packet_data, 3+NUM_OF_ADC_CHANNELS_MAX);
 26588              		.loc 1 3930 0
 26589 0046 3B46     		mov	r3, r7
 26590 0048 0F21     		movs	r1, #15
 26591 004a 1846     		mov	r0, r3
 26592 004c FFF7FEFF 		bl	commWrite
3931:..\src/command_processing.c ****     
3932:..\src/command_processing.c **** }
 26593              		.loc 1 3932 0
 26594 0050 00BF     		nop
 26595 0052 1037     		adds	r7, r7, #16
 26596              		.cfi_def_cfa_offset 8
 26597 0054 BD46     		mov	sp, r7
 26598              		.cfi_def_cfa_register 13
 26599              		@ sp needed
 26600 0056 80BD     		pop	{r7, pc}
 26601              	.L1039:
 26602              		.align	2
 26603              	.L1038:
 26604 0058 00000000 		.word	c_mem
 26605              		.cfi_endproc
 26606              	.LFE110:
 26607              		.size	cmd_get_ADC_map, .-cmd_get_ADC_map
 26608              		.section	.text.cmd_get_ADC_raw,"ax",%progbits
 26609              		.align	2
 26610              		.global	cmd_get_ADC_raw
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 581


 26611              		.thumb
 26612              		.thumb_func
 26613              		.type	cmd_get_ADC_raw, %function
 26614              	cmd_get_ADC_raw:
 26615              	.LFB111:
3933:..\src/command_processing.c **** 
3934:..\src/command_processing.c **** void cmd_get_ADC_raw(){
 26616              		.loc 1 3934 0
 26617              		.cfi_startproc
 26618              		@ args = 0, pretend = 0, frame = 32
 26619              		@ frame_needed = 1, uses_anonymous_args = 0
 26620 0000 90B5     		push	{r4, r7, lr}
 26621              		.cfi_def_cfa_offset 12
 26622              		.cfi_offset 4, -12
 26623              		.cfi_offset 7, -8
 26624              		.cfi_offset 14, -4
 26625 0002 89B0     		sub	sp, sp, #36
 26626              		.cfi_def_cfa_offset 48
 26627 0004 00AF     		add	r7, sp, #0
 26628              		.cfi_def_cfa_register 7
3935:..\src/command_processing.c ****     //Retrieve Additional EMG port raw values
3936:..\src/command_processing.c ****     
3937:..\src/command_processing.c ****     uint8 packet_data[2+2*NUM_OF_ADC_CHANNELS_MAX];
3938:..\src/command_processing.c ****     uint8 CYDATA i, idx = 0;
 26629              		.loc 1 3938 0
 26630 0006 0023     		movs	r3, #0
 26631 0008 BB77     		strb	r3, [r7, #30]
3939:..\src/command_processing.c ****     int16 aux_int16;
3940:..\src/command_processing.c ****     
3941:..\src/command_processing.c ****     // Header        
3942:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ADC_RAW;
 26632              		.loc 1 3942 0
 26633 000a A623     		movs	r3, #166
 26634 000c 3B71     		strb	r3, [r7, #4]
3943:..\src/command_processing.c ****     
3944:..\src/command_processing.c ****     // Fill payload
3945:..\src/command_processing.c ****     for (i = 0; i < NUM_OF_ANALOG_INPUTS; i++) {       
 26635              		.loc 1 3945 0
 26636 000e 0023     		movs	r3, #0
 26637 0010 FB77     		strb	r3, [r7, #31]
 26638 0012 27E0     		b	.L1041
 26639              	.L1043:
3946:..\src/command_processing.c ****         if (c_mem.exp.ADC_conf[i] == 1) {
 26640              		.loc 1 3946 0
 26641 0014 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 26642 0016 274A     		ldr	r2, .L1044
 26643 0018 1344     		add	r3, r3, r2
 26644 001a 93F82832 		ldrb	r3, [r3, #552]	@ zero_extendqisi2
 26645 001e 012B     		cmp	r3, #1
 26646 0020 1DD1     		bne	.L1042
3947:..\src/command_processing.c ****             aux_int16 = (int16) ADC_buf[i];
 26647              		.loc 1 3947 0
 26648 0022 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 26649 0024 244A     		ldr	r2, .L1044+4
 26650 0026 32F91330 		ldrsh	r3, [r2, r3, lsl #1]
 26651 002a 7B80     		strh	r3, [r7, #2]	@ movhi
3948:..\src/command_processing.c ****             packet_data[(idx << 1) + 2] = ((char*)(&aux_int16))[0];
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 582


 26652              		.loc 1 3948 0
 26653 002c BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 26654 002e 5B00     		lsls	r3, r3, #1
 26655 0030 0233     		adds	r3, r3, #2
 26656 0032 BA1C     		adds	r2, r7, #2
 26657 0034 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 26658 0036 07F12001 		add	r1, r7, #32
 26659 003a 0B44     		add	r3, r3, r1
 26660 003c 03F81C2C 		strb	r2, [r3, #-28]
3949:..\src/command_processing.c ****             packet_data[(idx << 1) + 1] = ((char*)(&aux_int16))[1];
 26661              		.loc 1 3949 0
 26662 0040 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 26663 0042 5B00     		lsls	r3, r3, #1
 26664 0044 5A1C     		adds	r2, r3, #1
 26665 0046 BB1C     		adds	r3, r7, #2
 26666 0048 0133     		adds	r3, r3, #1
 26667 004a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 26668 004c 07F12003 		add	r3, r7, #32
 26669 0050 1344     		add	r3, r3, r2
 26670 0052 0A46     		mov	r2, r1
 26671 0054 03F81C2C 		strb	r2, [r3, #-28]
3950:..\src/command_processing.c ****             idx++;
 26672              		.loc 1 3950 0
 26673 0058 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 26674 005a 0133     		adds	r3, r3, #1
 26675 005c BB77     		strb	r3, [r7, #30]
 26676              	.L1042:
3945:..\src/command_processing.c ****         if (c_mem.exp.ADC_conf[i] == 1) {
 26677              		.loc 1 3945 0 discriminator 2
 26678 005e FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 26679 0060 0133     		adds	r3, r3, #1
 26680 0062 FB77     		strb	r3, [r7, #31]
 26681              	.L1041:
3945:..\src/command_processing.c ****         if (c_mem.exp.ADC_conf[i] == 1) {
 26682              		.loc 1 3945 0 is_stmt 0 discriminator 1
 26683 0064 154B     		ldr	r3, .L1044+8
 26684 0066 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 26685 0068 FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 26686 006a 9A42     		cmp	r2, r3
 26687 006c D2D3     		bcc	.L1043
3951:..\src/command_processing.c ****         }
3952:..\src/command_processing.c ****     }
3953:..\src/command_processing.c **** 
3954:..\src/command_processing.c ****     // Calculate checksum
3955:..\src/command_processing.c ****     packet_data[1+2*idx] = LCRChecksum(packet_data, 1+2*idx);
 26688              		.loc 1 3955 0 is_stmt 1
 26689 006e BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 26690 0070 5B00     		lsls	r3, r3, #1
 26691 0072 5C1C     		adds	r4, r3, #1
 26692 0074 BB7F     		ldrb	r3, [r7, #30]
 26693 0076 5B00     		lsls	r3, r3, #1
 26694 0078 DBB2     		uxtb	r3, r3
 26695 007a 0133     		adds	r3, r3, #1
 26696 007c DAB2     		uxtb	r2, r3
 26697 007e 3B1D     		adds	r3, r7, #4
 26698 0080 1146     		mov	r1, r2
 26699 0082 1846     		mov	r0, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 583


 26700 0084 FFF7FEFF 		bl	LCRChecksum
 26701 0088 0346     		mov	r3, r0
 26702 008a 1A46     		mov	r2, r3
 26703 008c 07F12003 		add	r3, r7, #32
 26704 0090 2344     		add	r3, r3, r4
 26705 0092 03F81C2C 		strb	r2, [r3, #-28]
3956:..\src/command_processing.c ****     
3957:..\src/command_processing.c ****     // Send package to UART
3958:..\src/command_processing.c ****     commWrite(packet_data, 2+2*idx);
 26706              		.loc 1 3958 0
 26707 0096 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 26708 0098 0133     		adds	r3, r3, #1
 26709 009a 9BB2     		uxth	r3, r3
 26710 009c 5B00     		lsls	r3, r3, #1
 26711 009e 9AB2     		uxth	r2, r3
 26712 00a0 3B1D     		adds	r3, r7, #4
 26713 00a2 1146     		mov	r1, r2
 26714 00a4 1846     		mov	r0, r3
 26715 00a6 FFF7FEFF 		bl	commWrite
3959:..\src/command_processing.c **** }
 26716              		.loc 1 3959 0
 26717 00aa 00BF     		nop
 26718 00ac 2437     		adds	r7, r7, #36
 26719              		.cfi_def_cfa_offset 12
 26720 00ae BD46     		mov	sp, r7
 26721              		.cfi_def_cfa_register 13
 26722              		@ sp needed
 26723 00b0 90BD     		pop	{r4, r7, pc}
 26724              	.L1045:
 26725 00b2 00BF     		.align	2
 26726              	.L1044:
 26727 00b4 00000000 		.word	c_mem
 26728 00b8 00000000 		.word	ADC_buf
 26729 00bc 00000000 		.word	NUM_OF_ANALOG_INPUTS
 26730              		.cfi_endproc
 26731              	.LFE111:
 26732              		.size	cmd_get_ADC_raw, .-cmd_get_ADC_raw
 26733              		.section	.rodata
 26734 203b 00       		.align	2
 26735              	.LC308:
 26736 203c 00       		.ascii	"\000"
 26737              		.section	.text.cmd_get_SD_file,"ax",%progbits
 26738              		.align	2
 26739              		.global	cmd_get_SD_file
 26740              		.thumb
 26741              		.thumb_func
 26742              		.type	cmd_get_SD_file, %function
 26743              	cmd_get_SD_file:
 26744              	.LFB112:
3960:..\src/command_processing.c **** 
3961:..\src/command_processing.c **** void cmd_get_SD_file( uint16 filename_length ){
 26745              		.loc 1 3961 0
 26746              		.cfi_startproc
 26747              		@ args = 0, pretend = 0, frame = 20064
 26748              		@ frame_needed = 1, uses_anonymous_args = 0
 26749 0000 80B5     		push	{r7, lr}
 26750              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 584


 26751              		.cfi_offset 7, -8
 26752              		.cfi_offset 14, -4
 26753 0002 ADF59C4D 		sub	sp, sp, #19968
 26754              		.cfi_def_cfa_offset 19976
 26755 0006 98B0     		sub	sp, sp, #96
 26756              		.cfi_def_cfa_offset 20072
 26757 0008 00AF     		add	r7, sp, #0
 26758              		.cfi_def_cfa_register 7
 26759 000a 0246     		mov	r2, r0
 26760 000c 07F16003 		add	r3, r7, #96
 26761 0010 5A3B     		subs	r3, r3, #90
 26762 0012 1A80     		strh	r2, [r3]	@ movhi
3962:..\src/command_processing.c ****     
3963:..\src/command_processing.c ****     uint8 i = 0;
 26763              		.loc 1 3963 0
 26764 0014 0023     		movs	r3, #0
 26765 0016 07F59C42 		add	r2, r7, #19968
 26766 001a 02F15F02 		add	r2, r2, #95
 26767 001e 1370     		strb	r3, [r2]
3964:..\src/command_processing.c ****     char CYDATA filename[50] = "";
 26768              		.loc 1 3964 0
 26769 0020 0023     		movs	r3, #0
 26770 0022 07F59C42 		add	r2, r7, #19968
 26771 0026 02F12C02 		add	r2, r2, #44
 26772 002a 1360     		str	r3, [r2]
 26773 002c 07F59C43 		add	r3, r7, #19968
 26774 0030 03F13003 		add	r3, r3, #48
 26775 0034 2E22     		movs	r2, #46
 26776 0036 0021     		movs	r1, #0
 26777 0038 1846     		mov	r0, r3
 26778 003a FFF7FEFF 		bl	memset
3965:..\src/command_processing.c ****     char CYDATA str_sd_data[20000] = "";
 26779              		.loc 1 3965 0
 26780 003e 07F16003 		add	r3, r7, #96
 26781 0042 543B     		subs	r3, r3, #84
 26782 0044 0022     		movs	r2, #0
 26783 0046 1A60     		str	r2, [r3]
 26784 0048 0433     		adds	r3, r3, #4
 26785 004a 44F61C62 		movw	r2, #19996
 26786 004e 0021     		movs	r1, #0
 26787 0050 1846     		mov	r0, r3
 26788 0052 FFF7FEFF 		bl	memset
3966:..\src/command_processing.c ****     strcpy(filename, "");
 26789              		.loc 1 3966 0
 26790 0056 3C4B     		ldr	r3, .L1051
 26791 0058 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 26792 005a 07F59C42 		add	r2, r7, #19968
 26793 005e 02F12C02 		add	r2, r2, #44
 26794 0062 1370     		strb	r3, [r2]
3967:..\src/command_processing.c ****     strcpy(str_sd_data, "");
 26795              		.loc 1 3967 0
 26796 0064 384B     		ldr	r3, .L1051
 26797 0066 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 26798 0068 07F16003 		add	r3, r7, #96
 26799 006c 543B     		subs	r3, r3, #84
 26800 006e 1A70     		strb	r2, [r3]
3968:..\src/command_processing.c ****     
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 585


3969:..\src/command_processing.c ****     for (i=0; i<filename_length; i++){
 26801              		.loc 1 3969 0
 26802 0070 0023     		movs	r3, #0
 26803 0072 07F59C42 		add	r2, r7, #19968
 26804 0076 02F15F02 		add	r2, r2, #95
 26805 007a 1370     		strb	r3, [r2]
 26806 007c 1DE0     		b	.L1047
 26807              	.L1048:
3970:..\src/command_processing.c ****         *((uint8*)filename + i) = (char)g_rx.buffer[3+i];
 26808              		.loc 1 3970 0 discriminator 3
 26809 007e 07F59C43 		add	r3, r7, #19968
 26810 0082 03F15F03 		add	r3, r3, #95
 26811 0086 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 26812 0088 07F59C42 		add	r2, r7, #19968
 26813 008c 02F12C02 		add	r2, r2, #44
 26814 0090 1344     		add	r3, r3, r2
 26815 0092 07F59C42 		add	r2, r7, #19968
 26816 0096 02F15F02 		add	r2, r2, #95
 26817 009a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 26818 009c 0332     		adds	r2, r2, #3
 26819 009e 2B49     		ldr	r1, .L1051+4
 26820 00a0 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 26821 00a2 1A70     		strb	r2, [r3]
3969:..\src/command_processing.c ****         *((uint8*)filename + i) = (char)g_rx.buffer[3+i];
 26822              		.loc 1 3969 0 discriminator 3
 26823 00a4 07F59C43 		add	r3, r7, #19968
 26824 00a8 03F15F03 		add	r3, r3, #95
 26825 00ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 26826 00ae 0133     		adds	r3, r3, #1
 26827 00b0 07F59C42 		add	r2, r7, #19968
 26828 00b4 02F15F02 		add	r2, r2, #95
 26829 00b8 1370     		strb	r3, [r2]
 26830              	.L1047:
3969:..\src/command_processing.c ****         *((uint8*)filename + i) = (char)g_rx.buffer[3+i];
 26831              		.loc 1 3969 0 is_stmt 0 discriminator 1
 26832 00ba 07F59C43 		add	r3, r7, #19968
 26833 00be 03F15F03 		add	r3, r3, #95
 26834 00c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 26835 00c4 9AB2     		uxth	r2, r3
 26836 00c6 07F16003 		add	r3, r7, #96
 26837 00ca 5A3B     		subs	r3, r3, #90
 26838 00cc 1B88     		ldrh	r3, [r3]
 26839 00ce 9342     		cmp	r3, r2
 26840 00d0 D5D8     		bhi	.L1048
3971:..\src/command_processing.c ****     }
3972:..\src/command_processing.c ****     *((uint8*)filename + i) = '\0';
 26841              		.loc 1 3972 0 is_stmt 1
 26842 00d2 07F59C43 		add	r3, r7, #19968
 26843 00d6 03F15F03 		add	r3, r3, #95
 26844 00da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 26845 00dc 07F59C42 		add	r2, r7, #19968
 26846 00e0 02F12C02 		add	r2, r2, #44
 26847 00e4 1344     		add	r3, r3, r2
 26848 00e6 0022     		movs	r2, #0
 26849 00e8 1A70     		strb	r2, [r3]
3973:..\src/command_processing.c ****      
3974:..\src/command_processing.c ****     // Check if the file is the one currently opened or not
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 586


3975:..\src/command_processing.c ****     if (strcmp(filename, sdFile)){
 26850              		.loc 1 3975 0
 26851 00ea 07F59C43 		add	r3, r7, #19968
 26852 00ee 03F12C03 		add	r3, r3, #44
 26853 00f2 1749     		ldr	r1, .L1051+8
 26854 00f4 1846     		mov	r0, r3
 26855 00f6 FFF7FEFF 		bl	strcmp
 26856 00fa 0346     		mov	r3, r0
 26857 00fc 002B     		cmp	r3, #0
 26858 00fe 0CD0     		beq	.L1049
3976:..\src/command_processing.c ****         Read_SD_Closed_File(filename, str_sd_data, sizeof(str_sd_data));
 26859              		.loc 1 3976 0
 26860 0100 07F16003 		add	r3, r7, #96
 26861 0104 543B     		subs	r3, r3, #84
 26862 0106 07F59C40 		add	r0, r7, #19968
 26863 010a 00F12C00 		add	r0, r0, #44
 26864 010e 44F62062 		movw	r2, #20000
 26865 0112 1946     		mov	r1, r3
 26866 0114 FFF7FEFF 		bl	Read_SD_Closed_File
 26867 0118 07E0     		b	.L1050
 26868              	.L1049:
3977:..\src/command_processing.c ****     }
3978:..\src/command_processing.c ****     else {
3979:..\src/command_processing.c ****         //It is the currently open working file
3980:..\src/command_processing.c ****         Read_SD_Current_Data(str_sd_data, sizeof(str_sd_data));
 26869              		.loc 1 3980 0
 26870 011a 07F16003 		add	r3, r7, #96
 26871 011e 543B     		subs	r3, r3, #84
 26872 0120 44F62061 		movw	r1, #20000
 26873 0124 1846     		mov	r0, r3
 26874 0126 FFF7FEFF 		bl	Read_SD_Current_Data
 26875              	.L1050:
3981:..\src/command_processing.c ****     }
3982:..\src/command_processing.c **** 
3983:..\src/command_processing.c ****     //itoa(filename_length, filename, 10);
3984:..\src/command_processing.c ****     // Send the file to API that receives packet as a ping string
3985:..\src/command_processing.c ****     UART_RS485_ClearTxBuffer();
 26876              		.loc 1 3985 0
 26877 012a FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
3986:..\src/command_processing.c ****     UART_RS485_PutString(str_sd_data);
 26878              		.loc 1 3986 0
 26879 012e 07F16003 		add	r3, r7, #96
 26880 0132 543B     		subs	r3, r3, #84
 26881 0134 1846     		mov	r0, r3
 26882 0136 FFF7FEFF 		bl	UART_RS485_PutString
3987:..\src/command_processing.c **** }
 26883              		.loc 1 3987 0
 26884 013a 00BF     		nop
 26885 013c 07F59C47 		add	r7, r7, #19968
 26886 0140 6037     		adds	r7, r7, #96
 26887              		.cfi_def_cfa_offset 8
 26888 0142 BD46     		mov	sp, r7
 26889              		.cfi_def_cfa_register 13
 26890              		@ sp needed
 26891 0144 80BD     		pop	{r7, pc}
 26892              	.L1052:
 26893 0146 00BF     		.align	2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 587


 26894              	.L1051:
 26895 0148 3C200000 		.word	.LC308
 26896 014c 00000000 		.word	g_rx
 26897 0150 00000000 		.word	sdFile
 26898              		.cfi_endproc
 26899              	.LFE112:
 26900              		.size	cmd_get_SD_file, .-cmd_get_SD_file
 26901              		.section	.text.cmd_remove_SD_file,"ax",%progbits
 26902              		.align	2
 26903              		.global	cmd_remove_SD_file
 26904              		.thumb
 26905              		.thumb_func
 26906              		.type	cmd_remove_SD_file, %function
 26907              	cmd_remove_SD_file:
 26908              	.LFB113:
3988:..\src/command_processing.c **** 
3989:..\src/command_processing.c **** void cmd_remove_SD_file( uint16 filename_length ){
 26909              		.loc 1 3989 0
 26910              		.cfi_startproc
 26911              		@ args = 0, pretend = 0, frame = 64
 26912              		@ frame_needed = 1, uses_anonymous_args = 0
 26913 0000 80B5     		push	{r7, lr}
 26914              		.cfi_def_cfa_offset 8
 26915              		.cfi_offset 7, -8
 26916              		.cfi_offset 14, -4
 26917 0002 90B0     		sub	sp, sp, #64
 26918              		.cfi_def_cfa_offset 72
 26919 0004 00AF     		add	r7, sp, #0
 26920              		.cfi_def_cfa_register 7
 26921 0006 0346     		mov	r3, r0
 26922 0008 FB80     		strh	r3, [r7, #6]	@ movhi
3990:..\src/command_processing.c ****     
3991:..\src/command_processing.c ****     uint8 i = 0;
 26923              		.loc 1 3991 0
 26924 000a 0023     		movs	r3, #0
 26925 000c 87F83F30 		strb	r3, [r7, #63]
3992:..\src/command_processing.c ****     char CYDATA filename[50] = "";
 26926              		.loc 1 3992 0
 26927 0010 0023     		movs	r3, #0
 26928 0012 FB60     		str	r3, [r7, #12]
 26929 0014 07F11003 		add	r3, r7, #16
 26930 0018 2E22     		movs	r2, #46
 26931 001a 0021     		movs	r1, #0
 26932 001c 1846     		mov	r0, r3
 26933 001e FFF7FEFF 		bl	memset
3993:..\src/command_processing.c ****     strcpy(filename, "");
 26934              		.loc 1 3993 0
 26935 0022 214B     		ldr	r3, .L1056
 26936 0024 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 26937 0026 3B73     		strb	r3, [r7, #12]
3994:..\src/command_processing.c ****     
3995:..\src/command_processing.c ****     for (i=0; i<filename_length; i++){
 26938              		.loc 1 3995 0
 26939 0028 0023     		movs	r3, #0
 26940 002a 87F83F30 		strb	r3, [r7, #63]
 26941 002e 0FE0     		b	.L1054
 26942              	.L1055:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 588


3996:..\src/command_processing.c ****         *((uint8*)filename + i) = (char)g_rx.buffer[3+i];
 26943              		.loc 1 3996 0 discriminator 3
 26944 0030 97F83F30 		ldrb	r3, [r7, #63]	@ zero_extendqisi2
 26945 0034 07F10C02 		add	r2, r7, #12
 26946 0038 1344     		add	r3, r3, r2
 26947 003a 97F83F20 		ldrb	r2, [r7, #63]	@ zero_extendqisi2
 26948 003e 0332     		adds	r2, r2, #3
 26949 0040 1A49     		ldr	r1, .L1056+4
 26950 0042 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 26951 0044 1A70     		strb	r2, [r3]
3995:..\src/command_processing.c ****         *((uint8*)filename + i) = (char)g_rx.buffer[3+i];
 26952              		.loc 1 3995 0 discriminator 3
 26953 0046 97F83F30 		ldrb	r3, [r7, #63]	@ zero_extendqisi2
 26954 004a 0133     		adds	r3, r3, #1
 26955 004c 87F83F30 		strb	r3, [r7, #63]
 26956              	.L1054:
3995:..\src/command_processing.c ****         *((uint8*)filename + i) = (char)g_rx.buffer[3+i];
 26957              		.loc 1 3995 0 is_stmt 0 discriminator 1
 26958 0050 97F83F30 		ldrb	r3, [r7, #63]	@ zero_extendqisi2
 26959 0054 9BB2     		uxth	r3, r3
 26960 0056 FA88     		ldrh	r2, [r7, #6]
 26961 0058 9A42     		cmp	r2, r3
 26962 005a E9D8     		bhi	.L1055
3997:..\src/command_processing.c ****     }
3998:..\src/command_processing.c ****     *((uint8*)filename + i) = '\0';
 26963              		.loc 1 3998 0 is_stmt 1
 26964 005c 97F83F30 		ldrb	r3, [r7, #63]	@ zero_extendqisi2
 26965 0060 07F10C02 		add	r2, r7, #12
 26966 0064 1344     		add	r3, r3, r2
 26967 0066 0022     		movs	r2, #0
 26968 0068 1A70     		strb	r2, [r3]
3999:..\src/command_processing.c ****      
4000:..\src/command_processing.c ****     // Check if the file is the one currently opened or not
4001:..\src/command_processing.c ****     uint8 res = Remove_SD_File(filename);
 26969              		.loc 1 4001 0
 26970 006a 07F10C03 		add	r3, r7, #12
 26971 006e 1846     		mov	r0, r3
 26972 0070 FFF7FEFF 		bl	Remove_SD_File
 26973 0074 0346     		mov	r3, r0
 26974 0076 87F83E30 		strb	r3, [r7, #62]
4002:..\src/command_processing.c ****   
4003:..\src/command_processing.c ****     
4004:..\src/command_processing.c ****     uint8 packet_data[3]; 
4005:..\src/command_processing.c ****     
4006:..\src/command_processing.c ****     //Header package
4007:..\src/command_processing.c **** 
4008:..\src/command_processing.c ****     packet_data[0] = CMD_REMOVE_SD_SINGLE_FILE;
 26975              		.loc 1 4008 0
 26976 007a A823     		movs	r3, #168
 26977 007c 3B72     		strb	r3, [r7, #8]
4009:..\src/command_processing.c ****     packet_data[1] = res;
 26978              		.loc 1 4009 0
 26979 007e 97F83E30 		ldrb	r3, [r7, #62]
 26980 0082 7B72     		strb	r3, [r7, #9]
4010:..\src/command_processing.c **** 
4011:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
4012:..\src/command_processing.c ****     packet_data[2] = LCRChecksum (packet_data, 2);
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 589


 26981              		.loc 1 4012 0
 26982 0084 07F10803 		add	r3, r7, #8
 26983 0088 0221     		movs	r1, #2
 26984 008a 1846     		mov	r0, r3
 26985 008c FFF7FEFF 		bl	LCRChecksum
 26986 0090 0346     		mov	r3, r0
 26987 0092 BB72     		strb	r3, [r7, #10]
4013:..\src/command_processing.c ****     
4014:..\src/command_processing.c ****     commWrite(packet_data, 3);
 26988              		.loc 1 4014 0
 26989 0094 07F10803 		add	r3, r7, #8
 26990 0098 0321     		movs	r1, #3
 26991 009a 1846     		mov	r0, r3
 26992 009c FFF7FEFF 		bl	commWrite
4015:..\src/command_processing.c **** }
 26993              		.loc 1 4015 0
 26994 00a0 00BF     		nop
 26995 00a2 4037     		adds	r7, r7, #64
 26996              		.cfi_def_cfa_offset 8
 26997 00a4 BD46     		mov	sp, r7
 26998              		.cfi_def_cfa_register 13
 26999              		@ sp needed
 27000 00a6 80BD     		pop	{r7, pc}
 27001              	.L1057:
 27002              		.align	2
 27003              	.L1056:
 27004 00a8 3C200000 		.word	.LC308
 27005 00ac 00000000 		.word	g_rx
 27006              		.cfi_endproc
 27007              	.LFE113:
 27008              		.size	cmd_remove_SD_file, .-cmd_remove_SD_file
 27009              		.section	.text.air_chambers_control,"ax",%progbits
 27010              		.align	2
 27011              		.global	air_chambers_control
 27012              		.thumb
 27013              		.thumb_func
 27014              		.type	air_chambers_control, %function
 27015              	air_chambers_control:
 27016              	.LFB114:
4016:..\src/command_processing.c **** 
4017:..\src/command_processing.c **** //==============================================================================
4018:..\src/command_processing.c **** //                                                          AIR CHAMBERS CONTROL
4019:..\src/command_processing.c **** //==============================================================================
4020:..\src/command_processing.c **** /* It asks current difference to the SoftHand and sets force feedback device inputs proportionally 
4021:..\src/command_processing.c **** 
4022:..\src/command_processing.c **** void air_chambers_control(int slave_motor_idx) {
 27017              		.loc 1 4022 0
 27018              		.cfi_startproc
 27019              		@ args = 0, pretend = 0, frame = 8
 27020              		@ frame_needed = 1, uses_anonymous_args = 0
 27021              		@ link register save eliminated.
 27022 0000 80B4     		push	{r7}
 27023              		.cfi_def_cfa_offset 4
 27024              		.cfi_offset 7, -4
 27025 0002 83B0     		sub	sp, sp, #12
 27026              		.cfi_def_cfa_offset 16
 27027 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 590


 27028              		.cfi_def_cfa_register 7
 27029 0006 7860     		str	r0, [r7, #4]
4023:..\src/command_processing.c ****     
4024:..\src/command_processing.c **** #ifdef AIR_CHAMBERS_FB_FW
4025:..\src/command_processing.c ****     
4026:..\src/command_processing.c ****     int16 curr_diff;
4027:..\src/command_processing.c ****     int32 pressure_reference, err_pressure, pressure_value;
4028:..\src/command_processing.c ****     int32 valve_command;
4029:..\src/command_processing.c ****     int16 x_value;
4030:..\src/command_processing.c **** 
4031:..\src/command_processing.c ****     // Use pressure and residual current read from the SoftHand
4032:..\src/command_processing.c ****     
4033:..\src/command_processing.c ****     curr_diff = (int16)commReadResCurrFromSH();
4034:..\src/command_processing.c ****     
4035:..\src/command_processing.c ****     // Current difference saturation old mapping
4036:..\src/command_processing.c **** //    if(curr_diff > c_mem.FB.max_residual_current) {
4037:..\src/command_processing.c **** //        curr_diff = c_mem.FB.max_residual_current;
4038:..\src/command_processing.c **** //    }
4039:..\src/command_processing.c **** //    if(curr_diff < 0) {
4040:..\src/command_processing.c **** //        curr_diff = 0;
4041:..\src/command_processing.c **** //    }
4042:..\src/command_processing.c **** 
4043:..\src/command_processing.c ****     // Compute pressure reference
4044:..\src/command_processing.c **** 
4045:..\src/command_processing.c ****     x_value = curr_diff - 50.0;
4046:..\src/command_processing.c ****     if (x_value < 0)
4047:..\src/command_processing.c ****         x_value = 0;
4048:..\src/command_processing.c ****     
4049:..\src/command_processing.c ****     // old mapping --- linear mapping
4050:..\src/command_processing.c ****     //pressure_reference = (int32)(curr_diff * (c_mem.FB.maximum_pressure_kPa/c_mem.FB.max_residual
4051:..\src/command_processing.c ****     pressure_reference = (int32)((int32)(-30.0*x_value*x_value + 55.0*c_mem.FB.max_residual_current
4052:..\src/command_processing.c ****     if (pressure_reference < 0)
4053:..\src/command_processing.c ****         pressure_reference = 0;
4054:..\src/command_processing.c ****     if (pressure_reference > c_mem.FB.maximum_pressure_kPa)
4055:..\src/command_processing.c ****         pressure_reference = c_mem.FB.maximum_pressure_kPa;
4056:..\src/command_processing.c ****     
4057:..\src/command_processing.c ****     pressure_value = (int32)g_fb_meas.pressure;
4058:..\src/command_processing.c ****     err_pressure = pressure_reference - pressure_value;       // error in kPa
4059:..\src/command_processing.c **** //    if (err_pressure < 0){
4060:..\src/command_processing.c **** //        err_pressure = 0;
4061:..\src/command_processing.c **** //    }
4062:..\src/command_processing.c ****     
4063:..\src/command_processing.c ****     if (x_value <= 0){
4064:..\src/command_processing.c ****         //i.e the hand is opening
4065:..\src/command_processing.c ****         valve_command = 0;  //valve open: air passes
4066:..\src/command_processing.c ****     }
4067:..\src/command_processing.c ****     else {
4068:..\src/command_processing.c ****         //i.e the hand is closing, so valve should stay closed independently from the pressure erro
4069:..\src/command_processing.c ****         //if err_pressure greater than 0, it means pressure should increase, so valve should stay c
4070:..\src/command_processing.c ****         //if err_pressure==0, it means you reached the right pressure, so valve should stay closed
4071:..\src/command_processing.c ****         valve_command = 1;  //3.6V (5V - 2 diodes) - valve close: air doesn't pass
4072:..\src/command_processing.c ****     }
4073:..\src/command_processing.c ****     
4074:..\src/command_processing.c ****     // Pump control
4075:..\src/command_processing.c ****     g_refNew[0].pwm = (int32)(c_mem.FB.prop_err_fb_gain*err_pressure);
4076:..\src/command_processing.c ****     //c_mem.FB.prop_err_fb_gain default 1.0 gain since, max err_pressure is 25 and pwm range is app
4077:..\src/command_processing.c ****     
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 591


4078:..\src/command_processing.c ****     // Limit output voltage
4079:..\src/command_processing.c ****     if (g_refNew[0].pwm > 80) // 80 (3.5V) 80% of 4.3V (5V - 1 diode)
4080:..\src/command_processing.c ****         g_refNew[0].pwm = 80; // 80
4081:..\src/command_processing.c ****     if (g_refNew[0].pwm < 20)
4082:..\src/command_processing.c ****         g_refNew[0].pwm = 0;
4083:..\src/command_processing.c ****         
4084:..\src/command_processing.c ****     VALVE_Write(valve_command);
4085:..\src/command_processing.c ****     
4086:..\src/command_processing.c ****     
4087:..\src/command_processing.c ****     // Drive slave with reference generated on second motor index
4088:..\src/command_processing.c ****     // Use second motor structures and parameters, only to generate position reference not for PID 
4089:..\src/command_processing.c ****     // IMPORTANT: configure second motor parameters with proper slave parameters
4090:..\src/command_processing.c ****     motor_control_generic(slave_motor_idx);
4091:..\src/command_processing.c **** #endif
4092:..\src/command_processing.c **** }
 27030              		.loc 1 4092 0
 27031 0008 00BF     		nop
 27032 000a 0C37     		adds	r7, r7, #12
 27033              		.cfi_def_cfa_offset 4
 27034 000c BD46     		mov	sp, r7
 27035              		.cfi_def_cfa_register 13
 27036              		@ sp needed
 27037 000e 80BC     		pop	{r7}
 27038              		.cfi_restore 7
 27039              		.cfi_def_cfa_offset 0
 27040 0010 7047     		bx	lr
 27041              		.cfi_endproc
 27042              	.LFE114:
 27043              		.size	air_chambers_control, .-air_chambers_control
 27044 0012 00BF     		.section	.text.emg_activation_velocity_fsm,"ax",%progbits
 27045              		.align	2
 27046              		.global	emg_activation_velocity_fsm
 27047              		.thumb
 27048              		.thumb_func
 27049              		.type	emg_activation_velocity_fsm, %function
 27050              	emg_activation_velocity_fsm:
 27051              	.LFB115:
4093:..\src/command_processing.c **** 
4094:..\src/command_processing.c **** 
4095:..\src/command_processing.c **** //==============================================================================
4096:..\src/command_processing.c **** //                                                   EMG ACTIVATION VELOCITY FSM
4097:..\src/command_processing.c **** //==============================================================================
4098:..\src/command_processing.c **** /* It decides which is the current emg activation velocity.*/
4099:..\src/command_processing.c **** 
4100:..\src/command_processing.c **** uint8 emg_activation_velocity_fsm() {
 27052              		.loc 1 4100 0
 27053              		.cfi_startproc
 27054              		@ args = 0, pretend = 0, frame = 16
 27055              		@ frame_needed = 1, uses_anonymous_args = 0
 27056              		@ link register save eliminated.
 27057 0000 80B4     		push	{r7}
 27058              		.cfi_def_cfa_offset 4
 27059              		.cfi_offset 7, -4
 27060 0002 85B0     		sub	sp, sp, #20
 27061              		.cfi_def_cfa_offset 24
 27062 0004 00AF     		add	r7, sp, #0
 27063              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 592


4101:..\src/command_processing.c ****       
4102:..\src/command_processing.c ****     static uint8 fsm_state = RELAX_STATE;     // Wrist FSM state
4103:..\src/command_processing.c ****     static int32 cnt = 0;
4104:..\src/command_processing.c ****     int32 CYDATA err_emg_1, err_emg_2; 
4105:..\src/command_processing.c ****     int32 CYDATA f_err_emg_1, f_err_emg_2; 
4106:..\src/command_processing.c ****     
4107:..\src/command_processing.c ****     err_emg_1 = g_adc_meas.emg[0] - c_mem.emg.emg_threshold[0];
 27064              		.loc 1 4107 0
 27065 0006 534B     		ldr	r3, .L1088
 27066 0008 1B68     		ldr	r3, [r3]
 27067 000a 534A     		ldr	r2, .L1088+4
 27068 000c B2F8F021 		ldrh	r2, [r2, #496]
 27069 0010 9B1A     		subs	r3, r3, r2
 27070 0012 FB60     		str	r3, [r7, #12]
4108:..\src/command_processing.c ****     err_emg_2 = g_adc_meas.emg[1] - c_mem.emg.emg_threshold[1];
 27071              		.loc 1 4108 0
 27072 0014 4F4B     		ldr	r3, .L1088
 27073 0016 5B68     		ldr	r3, [r3, #4]
 27074 0018 4F4A     		ldr	r2, .L1088+4
 27075 001a B2F8F221 		ldrh	r2, [r2, #498]
 27076 001e 9B1A     		subs	r3, r3, r2
 27077 0020 BB60     		str	r3, [r7, #8]
4109:..\src/command_processing.c ****     f_err_emg_1 = g_adc_meas.emg[0] - c_mem.WR.fast_act_threshold[0];
 27078              		.loc 1 4109 0
 27079 0022 4C4B     		ldr	r3, .L1088
 27080 0024 1B68     		ldr	r3, [r3]
 27081 0026 4C4A     		ldr	r2, .L1088+4
 27082 0028 B2F8E222 		ldrh	r2, [r2, #738]
 27083 002c 9B1A     		subs	r3, r3, r2
 27084 002e 7B60     		str	r3, [r7, #4]
4110:..\src/command_processing.c ****     f_err_emg_2 = g_adc_meas.emg[1] - c_mem.WR.fast_act_threshold[1];
 27085              		.loc 1 4110 0
 27086 0030 484B     		ldr	r3, .L1088
 27087 0032 5B68     		ldr	r3, [r3, #4]
 27088 0034 484A     		ldr	r2, .L1088+4
 27089 0036 B2F8E422 		ldrh	r2, [r2, #740]
 27090 003a 9B1A     		subs	r3, r3, r2
 27091 003c 3B60     		str	r3, [r7]
4111:..\src/command_processing.c ****     
4112:..\src/command_processing.c **** 
4113:..\src/command_processing.c ****     // State machine - Evaluate emg activation status
4114:..\src/command_processing.c ****     // Note: in this way, diff_emg_1 and diff_emg_2 are for sure differences between two consecutiv
4115:..\src/command_processing.c ****     switch (fsm_state){
 27092              		.loc 1 4115 0
 27093 003e 474B     		ldr	r3, .L1088+8
 27094 0040 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 27095 0042 032B     		cmp	r3, #3
 27096 0044 7FD8     		bhi	.L1060
 27097 0046 01A2     		adr	r2, .L1062
 27098 0048 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 27099              		.p2align 2
 27100              	.L1062:
 27101 004c 5D000000 		.word	.L1061+1
 27102 0050 71000000 		.word	.L1063+1
 27103 0054 11010000 		.word	.L1064+1
 27104 0058 25010000 		.word	.L1065+1
 27105              		.p2align 1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 593


 27106              	.L1061:
4116:..\src/command_processing.c ****         case RELAX_STATE:
4117:..\src/command_processing.c ****             if (err_emg_1 > 0 || err_emg_2 > 0){
 27107              		.loc 1 4117 0
 27108 005c FB68     		ldr	r3, [r7, #12]
 27109 005e 002B     		cmp	r3, #0
 27110 0060 02DC     		bgt	.L1066
 27111              		.loc 1 4117 0 is_stmt 0 discriminator 1
 27112 0062 BB68     		ldr	r3, [r7, #8]
 27113 0064 002B     		cmp	r3, #0
 27114 0066 67DD     		ble	.L1084
 27115              	.L1066:
4118:..\src/command_processing.c ****                 fsm_state = TIMER_STATE;
 27116              		.loc 1 4118 0 is_stmt 1
 27117 0068 3C4B     		ldr	r3, .L1088+8
 27118 006a 0122     		movs	r2, #1
 27119 006c 1A70     		strb	r2, [r3]
4119:..\src/command_processing.c ****             }
4120:..\src/command_processing.c ****             
4121:..\src/command_processing.c ****             break;
 27120              		.loc 1 4121 0
 27121 006e 63E0     		b	.L1084
 27122              	.L1063:
4122:..\src/command_processing.c ****         case TIMER_STATE:     // Timer
4123:..\src/command_processing.c ****             if (err_emg_1 > 0 || err_emg_2 > 0){
 27123              		.loc 1 4123 0
 27124 0070 FB68     		ldr	r3, [r7, #12]
 27125 0072 002B     		cmp	r3, #0
 27126 0074 02DC     		bgt	.L1068
 27127              		.loc 1 4123 0 is_stmt 0 discriminator 1
 27128 0076 BB68     		ldr	r3, [r7, #8]
 27129 0078 002B     		cmp	r3, #0
 27130 007a 05DD     		ble	.L1069
 27131              	.L1068:
4124:..\src/command_processing.c ****                 cnt = cnt +1;
 27132              		.loc 1 4124 0 is_stmt 1
 27133 007c 384B     		ldr	r3, .L1088+12
 27134 007e 1B68     		ldr	r3, [r3]
 27135 0080 0133     		adds	r3, r3, #1
 27136 0082 374A     		ldr	r2, .L1088+12
 27137 0084 1360     		str	r3, [r2]
 27138 0086 02E0     		b	.L1070
 27139              	.L1069:
4125:..\src/command_processing.c ****             }
4126:..\src/command_processing.c ****             else {
4127:..\src/command_processing.c ****                 fsm_state = RELAX_STATE;
 27140              		.loc 1 4127 0
 27141 0088 344B     		ldr	r3, .L1088+8
 27142 008a 0022     		movs	r2, #0
 27143 008c 1A70     		strb	r2, [r3]
 27144              	.L1070:
4128:..\src/command_processing.c ****             }
4129:..\src/command_processing.c ****             
4130:..\src/command_processing.c ****             if (cnt > 100){
 27145              		.loc 1 4130 0
 27146 008e 344B     		ldr	r3, .L1088+12
 27147 0090 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 594


 27148 0092 642B     		cmp	r3, #100
 27149 0094 52DD     		ble	.L1085
4131:..\src/command_processing.c ****                 if ((err_emg_1 > 0 && f_err_emg_1 > 0) || (err_emg_2 > 0 && f_err_emg_2 > 0)){
 27150              		.loc 1 4131 0
 27151 0096 FB68     		ldr	r3, [r7, #12]
 27152 0098 002B     		cmp	r3, #0
 27153 009a 02DD     		ble	.L1072
 27154              		.loc 1 4131 0 is_stmt 0 discriminator 1
 27155 009c 7B68     		ldr	r3, [r7, #4]
 27156 009e 002B     		cmp	r3, #0
 27157 00a0 05DC     		bgt	.L1073
 27158              	.L1072:
 27159              		.loc 1 4131 0 discriminator 3
 27160 00a2 BB68     		ldr	r3, [r7, #8]
 27161 00a4 002B     		cmp	r3, #0
 27162 00a6 0EDD     		ble	.L1074
 27163              		.loc 1 4131 0 discriminator 4
 27164 00a8 3B68     		ldr	r3, [r7]
 27165 00aa 002B     		cmp	r3, #0
 27166 00ac 0BDD     		ble	.L1074
 27167              	.L1073:
4132:..\src/command_processing.c ****                     // Fast activation
4133:..\src/command_processing.c ****                     if (c_mem.WR.activation_mode == 0){
 27168              		.loc 1 4133 0 is_stmt 1
 27169 00ae 2A4B     		ldr	r3, .L1088+4
 27170 00b0 93F8E032 		ldrb	r3, [r3, #736]	@ zero_extendqisi2
 27171 00b4 002B     		cmp	r3, #0
 27172 00b6 03D1     		bne	.L1075
4134:..\src/command_processing.c ****                         fsm_state = MOVE_FAST_ACT;
 27173              		.loc 1 4134 0
 27174 00b8 284B     		ldr	r3, .L1088+8
 27175 00ba 0222     		movs	r2, #2
 27176 00bc 1A70     		strb	r2, [r3]
 27177 00be 02E0     		b	.L1074
 27178              	.L1075:
4135:..\src/command_processing.c ****                     }
4136:..\src/command_processing.c ****                     else{
4137:..\src/command_processing.c ****                         fsm_state = MOVE_SLOW_ACT;
 27179              		.loc 1 4137 0
 27180 00c0 264B     		ldr	r3, .L1088+8
 27181 00c2 0322     		movs	r2, #3
 27182 00c4 1A70     		strb	r2, [r3]
 27183              	.L1074:
4138:..\src/command_processing.c ****                     }
4139:..\src/command_processing.c ****                 }
4140:..\src/command_processing.c ****                 if ((err_emg_1 > 0 && f_err_emg_1 < 0) || (err_emg_2 > 0 && f_err_emg_2 < 0)){
 27184              		.loc 1 4140 0
 27185 00c6 FB68     		ldr	r3, [r7, #12]
 27186 00c8 002B     		cmp	r3, #0
 27187 00ca 02DD     		ble	.L1076
 27188              		.loc 1 4140 0 is_stmt 0 discriminator 1
 27189 00cc 7B68     		ldr	r3, [r7, #4]
 27190 00ce 002B     		cmp	r3, #0
 27191 00d0 05DB     		blt	.L1077
 27192              	.L1076:
 27193              		.loc 1 4140 0 discriminator 3
 27194 00d2 BB68     		ldr	r3, [r7, #8]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 595


 27195 00d4 002B     		cmp	r3, #0
 27196 00d6 0EDD     		ble	.L1078
 27197              		.loc 1 4140 0 discriminator 4
 27198 00d8 3B68     		ldr	r3, [r7]
 27199 00da 002B     		cmp	r3, #0
 27200 00dc 0BDA     		bge	.L1078
 27201              	.L1077:
4141:..\src/command_processing.c ****                     // Slow activation
4142:..\src/command_processing.c ****                     if (c_mem.WR.activation_mode == 0){
 27202              		.loc 1 4142 0 is_stmt 1
 27203 00de 1E4B     		ldr	r3, .L1088+4
 27204 00e0 93F8E032 		ldrb	r3, [r3, #736]	@ zero_extendqisi2
 27205 00e4 002B     		cmp	r3, #0
 27206 00e6 03D1     		bne	.L1079
4143:..\src/command_processing.c ****                         fsm_state = MOVE_SLOW_ACT;
 27207              		.loc 1 4143 0
 27208 00e8 1C4B     		ldr	r3, .L1088+8
 27209 00ea 0322     		movs	r2, #3
 27210 00ec 1A70     		strb	r2, [r3]
 27211 00ee 02E0     		b	.L1078
 27212              	.L1079:
4144:..\src/command_processing.c ****                     }
4145:..\src/command_processing.c ****                     else{
4146:..\src/command_processing.c ****                         fsm_state = MOVE_FAST_ACT;
 27213              		.loc 1 4146 0
 27214 00f0 1A4B     		ldr	r3, .L1088+8
 27215 00f2 0222     		movs	r2, #2
 27216 00f4 1A70     		strb	r2, [r3]
 27217              	.L1078:
4147:..\src/command_processing.c ****                     }
4148:..\src/command_processing.c ****                 }
4149:..\src/command_processing.c ****                 if (err_emg_1 < 0 && err_emg_2 < 0){
 27218              		.loc 1 4149 0
 27219 00f6 FB68     		ldr	r3, [r7, #12]
 27220 00f8 002B     		cmp	r3, #0
 27221 00fa 05DA     		bge	.L1080
 27222              		.loc 1 4149 0 is_stmt 0 discriminator 1
 27223 00fc BB68     		ldr	r3, [r7, #8]
 27224 00fe 002B     		cmp	r3, #0
 27225 0100 02DA     		bge	.L1080
4150:..\src/command_processing.c ****                     // Involuntary activation
4151:..\src/command_processing.c ****                     fsm_state = RELAX_STATE;
 27226              		.loc 1 4151 0 is_stmt 1
 27227 0102 164B     		ldr	r3, .L1088+8
 27228 0104 0022     		movs	r2, #0
 27229 0106 1A70     		strb	r2, [r3]
 27230              	.L1080:
4152:..\src/command_processing.c ****                 }
4153:..\src/command_processing.c ****                 cnt = 0;
 27231              		.loc 1 4153 0
 27232 0108 154B     		ldr	r3, .L1088+12
 27233 010a 0022     		movs	r2, #0
 27234 010c 1A60     		str	r2, [r3]
4154:..\src/command_processing.c ****             }
4155:..\src/command_processing.c ****     
4156:..\src/command_processing.c ****             break;
 27235              		.loc 1 4156 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 596


 27236 010e 15E0     		b	.L1085
 27237              	.L1064:
4157:..\src/command_processing.c ****         case MOVE_FAST_ACT:
4158:..\src/command_processing.c ****             
4159:..\src/command_processing.c ****             if (err_emg_1 < 0 && err_emg_2 < 0){
 27238              		.loc 1 4159 0
 27239 0110 FB68     		ldr	r3, [r7, #12]
 27240 0112 002B     		cmp	r3, #0
 27241 0114 14DA     		bge	.L1086
 27242              		.loc 1 4159 0 is_stmt 0 discriminator 1
 27243 0116 BB68     		ldr	r3, [r7, #8]
 27244 0118 002B     		cmp	r3, #0
 27245 011a 11DA     		bge	.L1086
4160:..\src/command_processing.c ****                 fsm_state = RELAX_STATE;
 27246              		.loc 1 4160 0 is_stmt 1
 27247 011c 0F4B     		ldr	r3, .L1088+8
 27248 011e 0022     		movs	r2, #0
 27249 0120 1A70     		strb	r2, [r3]
4161:..\src/command_processing.c ****             }
4162:..\src/command_processing.c ****         
4163:..\src/command_processing.c ****             break;
 27250              		.loc 1 4163 0
 27251 0122 0DE0     		b	.L1086
 27252              	.L1065:
4164:..\src/command_processing.c ****         case MOVE_SLOW_ACT:
4165:..\src/command_processing.c ****           
4166:..\src/command_processing.c ****             if (err_emg_1 < 0 && err_emg_2 < 0){
 27253              		.loc 1 4166 0
 27254 0124 FB68     		ldr	r3, [r7, #12]
 27255 0126 002B     		cmp	r3, #0
 27256 0128 0CDA     		bge	.L1087
 27257              		.loc 1 4166 0 is_stmt 0 discriminator 1
 27258 012a BB68     		ldr	r3, [r7, #8]
 27259 012c 002B     		cmp	r3, #0
 27260 012e 09DA     		bge	.L1087
4167:..\src/command_processing.c ****                 fsm_state = RELAX_STATE;
 27261              		.loc 1 4167 0 is_stmt 1
 27262 0130 0A4B     		ldr	r3, .L1088+8
 27263 0132 0022     		movs	r2, #0
 27264 0134 1A70     		strb	r2, [r3]
4168:..\src/command_processing.c ****             }
4169:..\src/command_processing.c ****             
4170:..\src/command_processing.c ****             break;
 27265              		.loc 1 4170 0
 27266 0136 05E0     		b	.L1087
 27267              	.L1084:
4121:..\src/command_processing.c ****         case TIMER_STATE:     // Timer
 27268              		.loc 1 4121 0
 27269 0138 00BF     		nop
 27270 013a 04E0     		b	.L1060
 27271              	.L1085:
4156:..\src/command_processing.c ****         case MOVE_FAST_ACT:
 27272              		.loc 1 4156 0
 27273 013c 00BF     		nop
 27274 013e 02E0     		b	.L1060
 27275              	.L1086:
4163:..\src/command_processing.c ****         case MOVE_SLOW_ACT:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 597


 27276              		.loc 1 4163 0
 27277 0140 00BF     		nop
 27278 0142 00E0     		b	.L1060
 27279              	.L1087:
 27280              		.loc 1 4170 0
 27281 0144 00BF     		nop
 27282              	.L1060:
4171:..\src/command_processing.c ****     }
4172:..\src/command_processing.c ****     
4173:..\src/command_processing.c ****     return fsm_state;
 27283              		.loc 1 4173 0
 27284 0146 054B     		ldr	r3, .L1088+8
 27285 0148 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
4174:..\src/command_processing.c **** 
4175:..\src/command_processing.c **** }
 27286              		.loc 1 4175 0
 27287 014a 1846     		mov	r0, r3
 27288 014c 1437     		adds	r7, r7, #20
 27289              		.cfi_def_cfa_offset 4
 27290 014e BD46     		mov	sp, r7
 27291              		.cfi_def_cfa_register 13
 27292              		@ sp needed
 27293 0150 80BC     		pop	{r7}
 27294              		.cfi_restore 7
 27295              		.cfi_def_cfa_offset 0
 27296 0152 7047     		bx	lr
 27297              	.L1089:
 27298              		.align	2
 27299              	.L1088:
 27300 0154 00000000 		.word	g_adc_meas
 27301 0158 00000000 		.word	c_mem
 27302 015c 06000000 		.word	fsm_state.11526
 27303 0160 08000000 		.word	cnt.11527
 27304              		.cfi_endproc
 27305              	.LFE115:
 27306              		.size	emg_activation_velocity_fsm, .-emg_activation_velocity_fsm
 27307              		.section	.text.otbk_act_wrist_control,"ax",%progbits
 27308              		.align	2
 27309              		.global	otbk_act_wrist_control
 27310              		.thumb
 27311              		.thumb_func
 27312              		.type	otbk_act_wrist_control, %function
 27313              	otbk_act_wrist_control:
 27314              	.LFB116:
4176:..\src/command_processing.c **** 
4177:..\src/command_processing.c **** //==============================================================================
4178:..\src/command_processing.c **** //                                          OTTOBOCK ACTIVE WRIST MASTER CONTROL
4179:..\src/command_processing.c **** //==============================================================================
4180:..\src/command_processing.c **** /* It moves Ottobock active wrist (as master) and connected SoftHand slave according to emg activat
4181:..\src/command_processing.c **** 
4182:..\src/command_processing.c **** void otbk_act_wrist_control(int slave_motor_idx) {
 27315              		.loc 1 4182 0
 27316              		.cfi_startproc
 27317              		@ args = 0, pretend = 0, frame = 8
 27318              		@ frame_needed = 1, uses_anonymous_args = 0
 27319              		@ link register save eliminated.
 27320 0000 80B4     		push	{r7}
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 598


 27321              		.cfi_def_cfa_offset 4
 27322              		.cfi_offset 7, -4
 27323 0002 83B0     		sub	sp, sp, #12
 27324              		.cfi_def_cfa_offset 16
 27325 0004 00AF     		add	r7, sp, #0
 27326              		.cfi_def_cfa_register 7
 27327 0006 7860     		str	r0, [r7, #4]
4183:..\src/command_processing.c ****     
4184:..\src/command_processing.c **** #ifdef OTBK_ACT_WRIST_MS_FW
4185:..\src/command_processing.c ****     
4186:..\src/command_processing.c ****     uint8 fsm_state = emg_activation_velocity_fsm();
4187:..\src/command_processing.c ****         
4188:..\src/command_processing.c ****     // State machine - Evaluate emg activation status
4189:..\src/command_processing.c ****     // Note: in this way, diff_emg_1 and diff_emg_2 are for sure differences between two consecutiv
4190:..\src/command_processing.c ****     switch (fsm_state){
4191:..\src/command_processing.c ****         case RELAX_STATE:
4192:..\src/command_processing.c ****             
4193:..\src/command_processing.c ****             // Wrist stop
4194:..\src/command_processing.c ****             g_refNew[0].pwm = 0;
4195:..\src/command_processing.c ****             
4196:..\src/command_processing.c ****             // Softhand stop
4197:..\src/command_processing.c ****             // Do not update the motor reference, so the SoftHand stays still
4198:..\src/command_processing.c ****             g_ref[slave_motor_idx].pos = g_refOld[slave_motor_idx].pos;
4199:..\src/command_processing.c ****             g_refNew[slave_motor_idx].pos = g_ref[slave_motor_idx].pos;
4200:..\src/command_processing.c ****             
4201:..\src/command_processing.c ****             break;
4202:..\src/command_processing.c ****         case TIMER_STATE:     // Timer
4203:..\src/command_processing.c ****                 
4204:..\src/command_processing.c ****             break;
4205:..\src/command_processing.c ****         case MOVE_FAST_ACT: // Wrist movement
4206:..\src/command_processing.c ****             
4207:..\src/command_processing.c ****             // Wrist movement
4208:..\src/command_processing.c ****             if (g_adc_meas.emg[0] > g_adc_meas.emg[1]){
4209:..\src/command_processing.c ****                 if (c_mem.WR.wrist_direction_association == 0){
4210:..\src/command_processing.c ****                     g_refNew[0].pwm = 60;       //Rotate CW
4211:..\src/command_processing.c ****                 }
4212:..\src/command_processing.c ****                 else {
4213:..\src/command_processing.c ****                     g_refNew[0].pwm = -60;   // Rotate CCW
4214:..\src/command_processing.c ****                 }
4215:..\src/command_processing.c ****             }
4216:..\src/command_processing.c ****             else {
4217:..\src/command_processing.c ****                 if (c_mem.WR.wrist_direction_association == 0){
4218:..\src/command_processing.c ****                     g_refNew[0].pwm = -60;   // Rotate CCW
4219:..\src/command_processing.c ****                 }
4220:..\src/command_processing.c ****                 else {
4221:..\src/command_processing.c ****                     g_refNew[0].pwm = 60;       //Rotate CW
4222:..\src/command_processing.c ****                 }
4223:..\src/command_processing.c ****             }
4224:..\src/command_processing.c ****             
4225:..\src/command_processing.c ****             // Softhand stop
4226:..\src/command_processing.c ****             // Do not update the motor reference, so the SoftHand stays still
4227:..\src/command_processing.c ****             g_ref[slave_motor_idx].pos = g_refOld[slave_motor_idx].pos;
4228:..\src/command_processing.c ****             g_refNew[slave_motor_idx].pos = g_ref[slave_motor_idx].pos;
4229:..\src/command_processing.c ****             
4230:..\src/command_processing.c ****             break;
4231:..\src/command_processing.c ****         case MOVE_SLOW_ACT: // Hand movement
4232:..\src/command_processing.c ****             
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 599


4233:..\src/command_processing.c ****             // Wrist stop
4234:..\src/command_processing.c ****             g_refNew[0].pwm = 0;
4235:..\src/command_processing.c ****             
4236:..\src/command_processing.c ****             // SoftHand movement
4237:..\src/command_processing.c ****             // Drive slave with reference generated on second motor index
4238:..\src/command_processing.c ****             // Use second motor structures and parameters, only to generate position reference not 
4239:..\src/command_processing.c ****             // IMPORTANT: configure second motor parameters with proper slave parameters
4240:..\src/command_processing.c ****             motor_control_generic(slave_motor_idx);
4241:..\src/command_processing.c ****             
4242:..\src/command_processing.c ****             break;
4243:..\src/command_processing.c ****     }
4244:..\src/command_processing.c ****         
4245:..\src/command_processing.c ****     // Limit output voltage
4246:..\src/command_processing.c ****     if (g_refNew[0].pwm > 67) // 67 (8.4V max of 2S ottobock battery) 66.6% of 12.6V
4247:..\src/command_processing.c ****         g_refNew[0].pwm = 67; // 67
4248:..\src/command_processing.c ****     if (g_refNew[0].pwm < -67)
4249:..\src/command_processing.c ****         g_refNew[0].pwm = -67;
4250:..\src/command_processing.c ****     
4251:..\src/command_processing.c **** #endif
4252:..\src/command_processing.c **** }
 27328              		.loc 1 4252 0
 27329 0008 00BF     		nop
 27330 000a 0C37     		adds	r7, r7, #12
 27331              		.cfi_def_cfa_offset 4
 27332 000c BD46     		mov	sp, r7
 27333              		.cfi_def_cfa_register 13
 27334              		@ sp needed
 27335 000e 80BC     		pop	{r7}
 27336              		.cfi_restore 7
 27337              		.cfi_def_cfa_offset 0
 27338 0010 7047     		bx	lr
 27339              		.cfi_endproc
 27340              	.LFE116:
 27341              		.size	otbk_act_wrist_control, .-otbk_act_wrist_control
 27342 0012 00BF     		.section	.text.drive_slave,"ax",%progbits
 27343              		.align	2
 27344              		.global	drive_slave
 27345              		.thumb
 27346              		.thumb_func
 27347              		.type	drive_slave, %function
 27348              	drive_slave:
 27349              	.LFB117:
4253:..\src/command_processing.c **** 
4254:..\src/command_processing.c **** //==============================================================================
4255:..\src/command_processing.c **** //                                                                   DRIVE SLAVE
4256:..\src/command_processing.c **** //==============================================================================
4257:..\src/command_processing.c ****  
4258:..\src/command_processing.c **** void drive_slave(uint8 motor_idx, uint8 slave_ID) {
 27350              		.loc 1 4258 0
 27351              		.cfi_startproc
 27352              		@ args = 0, pretend = 0, frame = 8
 27353              		@ frame_needed = 1, uses_anonymous_args = 0
 27354              		@ link register save eliminated.
 27355 0000 80B4     		push	{r7}
 27356              		.cfi_def_cfa_offset 4
 27357              		.cfi_offset 7, -4
 27358 0002 83B0     		sub	sp, sp, #12
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 600


 27359              		.cfi_def_cfa_offset 16
 27360 0004 00AF     		add	r7, sp, #0
 27361              		.cfi_def_cfa_register 7
 27362 0006 0346     		mov	r3, r0
 27363 0008 0A46     		mov	r2, r1
 27364 000a FB71     		strb	r3, [r7, #7]
 27365 000c 1346     		mov	r3, r2
 27366 000e BB71     		strb	r3, [r7, #6]
4259:..\src/command_processing.c **** 
4260:..\src/command_processing.c **** #ifdef MASTER_FW
4261:..\src/command_processing.c ****     uint8 packet_data[6];
4262:..\src/command_processing.c ****     uint8 packet_lenght;
4263:..\src/command_processing.c ****     int16 aux_int16;
4264:..\src/command_processing.c **** 
4265:..\src/command_processing.c ****     // If not the use of handle or an emg input mode is set, exit from master_mode
4266:..\src/command_processing.c ****     if( c_mem.motor[motor_idx].input_mode != INPUT_MODE_ENCODER3          &&
4267:..\src/command_processing.c ****         c_mem.motor[motor_idx].input_mode != INPUT_MODE_EMG_PROPORTIONAL  &&
4268:..\src/command_processing.c ****         c_mem.motor[motor_idx].input_mode != INPUT_MODE_EMG_INTEGRAL      &&
4269:..\src/command_processing.c ****         c_mem.motor[motor_idx].input_mode != INPUT_MODE_EMG_FCFS          &&
4270:..\src/command_processing.c ****         c_mem.motor[motor_idx].input_mode != INPUT_MODE_EMG_FCFS_ADV          &&
4271:..\src/command_processing.c ****         c_mem.motor[motor_idx].input_mode != INPUT_MODE_EMG_PROPORTIONAL_NC     ){
4272:..\src/command_processing.c ****         master_mode = 0;
4273:..\src/command_processing.c ****         return;
4274:..\src/command_processing.c ****     }
4275:..\src/command_processing.c ****         
4276:..\src/command_processing.c ****     if (dev_tension[0] >= 5000 && dev_tension[0] < 7000){
4277:..\src/command_processing.c ****         master_mode = 0;
4278:..\src/command_processing.c ****         return;
4279:..\src/command_processing.c ****     }
4280:..\src/command_processing.c ****     
4281:..\src/command_processing.c ****        
4282:..\src/command_processing.c ****     //Sends a Set inputs command to a second board
4283:..\src/command_processing.c ****     packet_data[0] = CMD_SET_INPUTS;
4284:..\src/command_processing.c ****     aux_int16 = (int16) (g_ref[motor_idx].pos >> g_mem.enc[g_mem.motor[motor_idx].encoder_line].res
4285:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
4286:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
4287:..\src/command_processing.c ****     *((int16 *) &packet_data[3]) = 0;
4288:..\src/command_processing.c ****     
4289:..\src/command_processing.c ****     packet_lenght = 6;
4290:..\src/command_processing.c ****     packet_data[packet_lenght - 1] = LCRChecksum(packet_data,packet_lenght - 1);
4291:..\src/command_processing.c ****     commWriteID(packet_data, packet_lenght, slave_ID);
4292:..\src/command_processing.c **** 
4293:..\src/command_processing.c **** #endif
4294:..\src/command_processing.c **** }
 27367              		.loc 1 4294 0
 27368 0010 00BF     		nop
 27369 0012 0C37     		adds	r7, r7, #12
 27370              		.cfi_def_cfa_offset 4
 27371 0014 BD46     		mov	sp, r7
 27372              		.cfi_def_cfa_register 13
 27373              		@ sp needed
 27374 0016 80BC     		pop	{r7}
 27375              		.cfi_restore 7
 27376              		.cfi_def_cfa_offset 0
 27377 0018 7047     		bx	lr
 27378              		.cfi_endproc
 27379              	.LFE117:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 601


 27380              		.size	drive_slave, .-drive_slave
 27381 001a 00BF     		.section	.text.stop_master_device,"ax",%progbits
 27382              		.align	2
 27383              		.global	stop_master_device
 27384              		.thumb
 27385              		.thumb_func
 27386              		.type	stop_master_device, %function
 27387              	stop_master_device:
 27388              	.LFB118:
4295:..\src/command_processing.c **** 
4296:..\src/command_processing.c **** //==============================================================================
4297:..\src/command_processing.c **** //                                                            STOP MASTER DEVICE
4298:..\src/command_processing.c **** //==============================================================================
4299:..\src/command_processing.c ****  
4300:..\src/command_processing.c **** void stop_master_device() {
 27389              		.loc 1 4300 0
 27390              		.cfi_startproc
 27391              		@ args = 0, pretend = 0, frame = 0
 27392              		@ frame_needed = 1, uses_anonymous_args = 0
 27393              		@ link register save eliminated.
 27394 0000 80B4     		push	{r7}
 27395              		.cfi_def_cfa_offset 4
 27396              		.cfi_offset 7, -4
 27397 0002 00AF     		add	r7, sp, #0
 27398              		.cfi_def_cfa_register 7
4301:..\src/command_processing.c ****     
4302:..\src/command_processing.c **** #ifdef AIR_CHAMBERS_FB_FW
4303:..\src/command_processing.c ****     if (c_mem.dev.dev_type == AIR_CHAMBERS_FB){
4304:..\src/command_processing.c ****         // Stop pump and open valve
4305:..\src/command_processing.c ****         g_refNew[0].pwm = 0;    
4306:..\src/command_processing.c ****         VALVE_Write(0);
4307:..\src/command_processing.c ****     }
4308:..\src/command_processing.c **** #endif
4309:..\src/command_processing.c **** 
4310:..\src/command_processing.c **** #ifdef OTBK_ACT_WRIST_MS_FW
4311:..\src/command_processing.c ****     if (c_mem.dev.dev_type == OTBK_ACT_WRIST_MS){
4312:..\src/command_processing.c ****         //Stop wrist motor
4313:..\src/command_processing.c ****         g_refNew[0].pwm = 0;
4314:..\src/command_processing.c ****     }
4315:..\src/command_processing.c **** #endif    
4316:..\src/command_processing.c **** }
 27399              		.loc 1 4316 0
 27400 0004 00BF     		nop
 27401 0006 BD46     		mov	sp, r7
 27402              		.cfi_def_cfa_register 13
 27403              		@ sp needed
 27404 0008 80BC     		pop	{r7}
 27405              		.cfi_restore 7
 27406              		.cfi_def_cfa_offset 0
 27407 000a 7047     		bx	lr
 27408              		.cfi_endproc
 27409              	.LFE118:
 27410              		.size	stop_master_device, .-stop_master_device
 27411              		.section	.text.deactivate_slaves,"ax",%progbits
 27412              		.align	2
 27413              		.global	deactivate_slaves
 27414              		.thumb
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 602


 27415              		.thumb_func
 27416              		.type	deactivate_slaves, %function
 27417              	deactivate_slaves:
 27418              	.LFB119:
4317:..\src/command_processing.c **** 
4318:..\src/command_processing.c **** //==============================================================================
4319:..\src/command_processing.c **** //                                                             DEACTIVATE SLAVES
4320:..\src/command_processing.c **** //==============================================================================
4321:..\src/command_processing.c ****  
4322:..\src/command_processing.c **** void deactivate_slaves() {
 27419              		.loc 1 4322 0
 27420              		.cfi_startproc
 27421              		@ args = 0, pretend = 0, frame = 0
 27422              		@ frame_needed = 1, uses_anonymous_args = 0
 27423              		@ link register save eliminated.
 27424 0000 80B4     		push	{r7}
 27425              		.cfi_def_cfa_offset 4
 27426              		.cfi_offset 7, -4
 27427 0002 00AF     		add	r7, sp, #0
 27428              		.cfi_def_cfa_register 7
4323:..\src/command_processing.c ****     
4324:..\src/command_processing.c **** #ifdef MASTER_FW
4325:..\src/command_processing.c ****     
4326:..\src/command_processing.c ****     uint8 packet_data[10];
4327:..\src/command_processing.c ****     uint8 packet_lenght;
4328:..\src/command_processing.c ****     
4329:..\src/command_processing.c ****     // If not a emg input mode is set, exit from master_mode
4330:..\src/command_processing.c ****     if(c_mem.motor[0].input_mode != INPUT_MODE_EMG_PROPORTIONAL  &&
4331:..\src/command_processing.c ****         c_mem.motor[0].input_mode != INPUT_MODE_EMG_INTEGRAL     &&
4332:..\src/command_processing.c ****         c_mem.motor[0].input_mode != INPUT_MODE_EMG_FCFS         &&
4333:..\src/command_processing.c ****         c_mem.motor[0].input_mode != INPUT_MODE_EMG_FCFS_ADV     &&
4334:..\src/command_processing.c ****         c_mem.motor[0].input_mode != INPUT_MODE_EMG_PROPORTIONAL_NC     ){
4335:..\src/command_processing.c ****         master_mode = 0;
4336:..\src/command_processing.c ****         return;
4337:..\src/command_processing.c ****     }
4338:..\src/command_processing.c ****    
4339:..\src/command_processing.c ****     //Sends a Set inputs command to a second board
4340:..\src/command_processing.c ****     packet_data[0] = CMD_ACTIVATE;
4341:..\src/command_processing.c **** 
4342:..\src/command_processing.c ****     *((int16 *) &packet_data[1]) = 0;   //3 to activate, 0 to deactivate
4343:..\src/command_processing.c ****     packet_lenght = 3;
4344:..\src/command_processing.c ****     packet_data[packet_lenght - 1] = LCRChecksum(packet_data,packet_lenght - 1);
4345:..\src/command_processing.c ****     
4346:..\src/command_processing.c ****     commWrite(packet_data, packet_lenght);
4347:..\src/command_processing.c ****     
4348:..\src/command_processing.c **** #endif    
4349:..\src/command_processing.c **** }
 27429              		.loc 1 4349 0
 27430 0004 00BF     		nop
 27431 0006 BD46     		mov	sp, r7
 27432              		.cfi_def_cfa_register 13
 27433              		@ sp needed
 27434 0008 80BC     		pop	{r7}
 27435              		.cfi_restore 7
 27436              		.cfi_def_cfa_offset 0
 27437 000a 7047     		bx	lr
 27438              		.cfi_endproc
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 603


 27439              	.LFE119:
 27440              		.size	deactivate_slaves, .-deactivate_slaves
 27441              		.bss
 27442              		.align	2
 27443              	h_time.11211:
 27444 0000 00000000 		.space	4
 27445              		.align	1
 27446              	i.11252:
 27447 0004 0000     		.space	2
 27448              	fsm_state.11526:
 27449 0006 00       		.space	1
 27450 0007 00       		.align	2
 27451              	cnt.11527:
 27452 0008 00000000 		.space	4
 27453              		.text
 27454              	.Letext0:
 27455              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 27456              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 27457              		.file 5 "Generated_Source\\PSoC5/cytypes.h"
 27458              		.file 6 "..\\src\\commands.h"
 27459              		.file 7 "..\\src\\emFile_V322c\\Code\\Include\\PSoC5/FS_Types.h"
 27460              		.file 8 "..\\src\\globals.h"
 27461              		.file 9 "Generated_Source\\PSoC5/core_cm3.h"
 27462              		.section	.debug_info,"",%progbits
 27463              	.Ldebug_info0:
 27464 0000 B2260000 		.4byte	0x26b2
 27465 0004 0400     		.2byte	0x4
 27466 0006 00000000 		.4byte	.Ldebug_abbrev0
 27467 000a 04       		.byte	0x4
 27468 000b 01       		.uleb128 0x1
 27469 000c A4090000 		.4byte	.LASF403
 27470 0010 0C       		.byte	0xc
 27471 0011 76150000 		.4byte	.LASF404
 27472 0015 5B0B0000 		.4byte	.LASF405
 27473 0019 00000000 		.4byte	.Ldebug_ranges0+0
 27474 001d 00000000 		.4byte	0
 27475 0021 00000000 		.4byte	.Ldebug_line0
 27476 0025 02       		.uleb128 0x2
 27477 0026 01       		.byte	0x1
 27478 0027 06       		.byte	0x6
 27479 0028 77040000 		.4byte	.LASF0
 27480 002c 02       		.uleb128 0x2
 27481 002d 01       		.byte	0x1
 27482 002e 08       		.byte	0x8
 27483 002f F1040000 		.4byte	.LASF1
 27484 0033 02       		.uleb128 0x2
 27485 0034 02       		.byte	0x2
 27486 0035 05       		.byte	0x5
 27487 0036 F5110000 		.4byte	.LASF2
 27488 003a 02       		.uleb128 0x2
 27489 003b 02       		.byte	0x2
 27490 003c 07       		.byte	0x7
 27491 003d 68140000 		.4byte	.LASF3
 27492 0041 03       		.uleb128 0x3
 27493 0042 34150000 		.4byte	.LASF5
 27494 0046 03       		.byte	0x3
 27495 0047 3F       		.byte	0x3f
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 604


 27496 0048 4C000000 		.4byte	0x4c
 27497 004c 02       		.uleb128 0x2
 27498 004d 04       		.byte	0x4
 27499 004e 05       		.byte	0x5
 27500 004f 4D030000 		.4byte	.LASF4
 27501 0053 03       		.uleb128 0x3
 27502 0054 6F0A0000 		.4byte	.LASF6
 27503 0058 03       		.byte	0x3
 27504 0059 41       		.byte	0x41
 27505 005a 5E000000 		.4byte	0x5e
 27506 005e 02       		.uleb128 0x2
 27507 005f 04       		.byte	0x4
 27508 0060 07       		.byte	0x7
 27509 0061 5E080000 		.4byte	.LASF7
 27510 0065 02       		.uleb128 0x2
 27511 0066 08       		.byte	0x8
 27512 0067 05       		.byte	0x5
 27513 0068 7A0A0000 		.4byte	.LASF8
 27514 006c 02       		.uleb128 0x2
 27515 006d 08       		.byte	0x8
 27516 006e 07       		.byte	0x7
 27517 006f 010F0000 		.4byte	.LASF9
 27518 0073 04       		.uleb128 0x4
 27519 0074 04       		.byte	0x4
 27520 0075 05       		.byte	0x5
 27521 0076 696E7400 		.ascii	"int\000"
 27522 007a 02       		.uleb128 0x2
 27523 007b 04       		.byte	0x4
 27524 007c 07       		.byte	0x7
 27525 007d 220C0000 		.4byte	.LASF10
 27526 0081 03       		.uleb128 0x3
 27527 0082 D2000000 		.4byte	.LASF11
 27528 0086 04       		.byte	0x4
 27529 0087 2C       		.byte	0x2c
 27530 0088 41000000 		.4byte	0x41
 27531 008c 03       		.uleb128 0x3
 27532 008d D6130000 		.4byte	.LASF12
 27533 0091 04       		.byte	0x4
 27534 0092 30       		.byte	0x30
 27535 0093 53000000 		.4byte	0x53
 27536 0097 05       		.uleb128 0x5
 27537 0098 D7110000 		.4byte	.LASF13
 27538 009c 05       		.byte	0x5
 27539 009d E401     		.2byte	0x1e4
 27540 009f 2C000000 		.4byte	0x2c
 27541 00a3 05       		.uleb128 0x5
 27542 00a4 D9150000 		.4byte	.LASF14
 27543 00a8 05       		.byte	0x5
 27544 00a9 E501     		.2byte	0x1e5
 27545 00ab 3A000000 		.4byte	0x3a
 27546 00af 05       		.uleb128 0x5
 27547 00b0 08010000 		.4byte	.LASF15
 27548 00b4 05       		.byte	0x5
 27549 00b5 E601     		.2byte	0x1e6
 27550 00b7 5E000000 		.4byte	0x5e
 27551 00bb 05       		.uleb128 0x5
 27552 00bc 16020000 		.4byte	.LASF16
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 605


 27553 00c0 05       		.byte	0x5
 27554 00c1 E701     		.2byte	0x1e7
 27555 00c3 25000000 		.4byte	0x25
 27556 00c7 05       		.uleb128 0x5
 27557 00c8 36130000 		.4byte	.LASF17
 27558 00cc 05       		.byte	0x5
 27559 00cd E801     		.2byte	0x1e8
 27560 00cf 33000000 		.4byte	0x33
 27561 00d3 05       		.uleb128 0x5
 27562 00d4 C2140000 		.4byte	.LASF18
 27563 00d8 05       		.byte	0x5
 27564 00d9 E901     		.2byte	0x1e9
 27565 00db 4C000000 		.4byte	0x4c
 27566 00df 05       		.uleb128 0x5
 27567 00e0 D4030000 		.4byte	.LASF19
 27568 00e4 05       		.byte	0x5
 27569 00e5 EA01     		.2byte	0x1ea
 27570 00e7 EB000000 		.4byte	0xeb
 27571 00eb 02       		.uleb128 0x2
 27572 00ec 04       		.byte	0x4
 27573 00ed 04       		.byte	0x4
 27574 00ee 4C0B0000 		.4byte	.LASF20
 27575 00f2 02       		.uleb128 0x2
 27576 00f3 08       		.byte	0x8
 27577 00f4 04       		.byte	0x4
 27578 00f5 BE0A0000 		.4byte	.LASF21
 27579 00f9 02       		.uleb128 0x2
 27580 00fa 01       		.byte	0x1
 27581 00fb 08       		.byte	0x8
 27582 00fc 95050000 		.4byte	.LASF22
 27583 0100 05       		.uleb128 0x5
 27584 0101 E40F0000 		.4byte	.LASF23
 27585 0105 05       		.byte	0x5
 27586 0106 8E02     		.2byte	0x28e
 27587 0108 0C010000 		.4byte	0x10c
 27588 010c 06       		.uleb128 0x6
 27589 010d 97000000 		.4byte	0x97
 27590 0111 02       		.uleb128 0x2
 27591 0112 08       		.byte	0x8
 27592 0113 04       		.byte	0x4
 27593 0114 ED0D0000 		.4byte	.LASF24
 27594 0118 02       		.uleb128 0x2
 27595 0119 04       		.byte	0x4
 27596 011a 07       		.byte	0x7
 27597 011b 39000000 		.4byte	.LASF25
 27598 011f 07       		.uleb128 0x7
 27599 0120 04       		.byte	0x4
 27600 0121 F9000000 		.4byte	0xf9
 27601 0125 07       		.uleb128 0x7
 27602 0126 04       		.byte	0x4
 27603 0127 2B010000 		.4byte	0x12b
 27604 012b 08       		.uleb128 0x8
 27605 012c F9000000 		.4byte	0xf9
 27606 0130 09       		.uleb128 0x9
 27607 0131 F9000000 		.4byte	0xf9
 27608 0135 40010000 		.4byte	0x140
 27609 0139 0A       		.uleb128 0xa
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 606


 27610 013a 18010000 		.4byte	0x118
 27611 013e 19       		.byte	0x19
 27612 013f 00       		.byte	0
 27613 0140 09       		.uleb128 0x9
 27614 0141 F9000000 		.4byte	0xf9
 27615 0145 50010000 		.4byte	0x150
 27616 0149 0A       		.uleb128 0xa
 27617 014a 18010000 		.4byte	0x118
 27618 014e 07       		.byte	0x7
 27619 014f 00       		.byte	0
 27620 0150 0B       		.uleb128 0xb
 27621 0151 730C0000 		.4byte	.LASF58
 27622 0155 01       		.byte	0x1
 27623 0156 2C000000 		.4byte	0x2c
 27624 015a 06       		.byte	0x6
 27625 015b 42       		.byte	0x42
 27626 015c 21020000 		.4byte	0x221
 27627 0160 0C       		.uleb128 0xc
 27628 0161 F3150000 		.4byte	.LASF26
 27629 0165 00       		.byte	0
 27630 0166 0C       		.uleb128 0xc
 27631 0167 70120000 		.4byte	.LASF27
 27632 016b 01       		.byte	0x1
 27633 016c 0C       		.uleb128 0xc
 27634 016d 3A080000 		.4byte	.LASF28
 27635 0171 03       		.byte	0x3
 27636 0172 0C       		.uleb128 0xc
 27637 0173 29050000 		.4byte	.LASF29
 27638 0177 04       		.byte	0x4
 27639 0178 0C       		.uleb128 0xc
 27640 0179 1D100000 		.4byte	.LASF30
 27641 017d 05       		.byte	0x5
 27642 017e 0C       		.uleb128 0xc
 27643 017f 4C090000 		.4byte	.LASF31
 27644 0183 06       		.byte	0x6
 27645 0184 0C       		.uleb128 0xc
 27646 0185 70080000 		.4byte	.LASF32
 27647 0189 09       		.byte	0x9
 27648 018a 0C       		.uleb128 0xc
 27649 018b 4F000000 		.4byte	.LASF33
 27650 018f 0A       		.byte	0xa
 27651 0190 0C       		.uleb128 0xc
 27652 0191 18130000 		.4byte	.LASF34
 27653 0195 0C       		.byte	0xc
 27654 0196 0C       		.uleb128 0xc
 27655 0197 4D0E0000 		.4byte	.LASF35
 27656 019b 0D       		.byte	0xd
 27657 019c 0C       		.uleb128 0xc
 27658 019d 95000000 		.4byte	.LASF36
 27659 01a1 80       		.byte	0x80
 27660 01a2 0C       		.uleb128 0xc
 27661 01a3 84050000 		.4byte	.LASF37
 27662 01a7 81       		.byte	0x81
 27663 01a8 0C       		.uleb128 0xc
 27664 01a9 C3060000 		.4byte	.LASF38
 27665 01ad 82       		.byte	0x82
 27666 01ae 0C       		.uleb128 0xc
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 607


 27667 01af 3A120000 		.4byte	.LASF39
 27668 01b3 83       		.byte	0x83
 27669 01b4 0C       		.uleb128 0xc
 27670 01b5 A0110000 		.4byte	.LASF40
 27671 01b9 84       		.byte	0x84
 27672 01ba 0C       		.uleb128 0xc
 27673 01bb EC030000 		.4byte	.LASF41
 27674 01bf 85       		.byte	0x85
 27675 01c0 0C       		.uleb128 0xc
 27676 01c1 8E090000 		.4byte	.LASF42
 27677 01c5 86       		.byte	0x86
 27678 01c6 0C       		.uleb128 0xc
 27679 01c7 2C090000 		.4byte	.LASF43
 27680 01cb 88       		.byte	0x88
 27681 01cc 0C       		.uleb128 0xc
 27682 01cd F9120000 		.4byte	.LASF44
 27683 01d1 89       		.byte	0x89
 27684 01d2 0C       		.uleb128 0xc
 27685 01d3 5F0F0000 		.4byte	.LASF45
 27686 01d7 8B       		.byte	0x8b
 27687 01d8 0C       		.uleb128 0xc
 27688 01d9 AB0D0000 		.4byte	.LASF46
 27689 01dd 8C       		.byte	0x8c
 27690 01de 0C       		.uleb128 0xc
 27691 01df 4A0A0000 		.4byte	.LASF47
 27692 01e3 8E       		.byte	0x8e
 27693 01e4 0C       		.uleb128 0xc
 27694 01e5 970F0000 		.4byte	.LASF48
 27695 01e9 90       		.byte	0x90
 27696 01ea 0C       		.uleb128 0xc
 27697 01eb B8020000 		.4byte	.LASF49
 27698 01ef 92       		.byte	0x92
 27699 01f0 0C       		.uleb128 0xc
 27700 01f1 37140000 		.4byte	.LASF50
 27701 01f5 A1       		.byte	0xa1
 27702 01f6 0C       		.uleb128 0xc
 27703 01f7 59110000 		.4byte	.LASF51
 27704 01fb A2       		.byte	0xa2
 27705 01fc 0C       		.uleb128 0xc
 27706 01fd D10C0000 		.4byte	.LASF52
 27707 0201 A3       		.byte	0xa3
 27708 0202 0C       		.uleb128 0xc
 27709 0203 75110000 		.4byte	.LASF53
 27710 0207 A4       		.byte	0xa4
 27711 0208 0C       		.uleb128 0xc
 27712 0209 5F120000 		.4byte	.LASF54
 27713 020d A5       		.byte	0xa5
 27714 020e 0C       		.uleb128 0xc
 27715 020f 0D110000 		.4byte	.LASF55
 27716 0213 A6       		.byte	0xa6
 27717 0214 0C       		.uleb128 0xc
 27718 0215 C50A0000 		.4byte	.LASF56
 27719 0219 A7       		.byte	0xa7
 27720 021a 0C       		.uleb128 0xc
 27721 021b DA0B0000 		.4byte	.LASF57
 27722 021f A8       		.byte	0xa8
 27723 0220 00       		.byte	0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 608


 27724 0221 0B       		.uleb128 0xb
 27725 0222 A0150000 		.4byte	.LASF59
 27726 0226 01       		.byte	0x1
 27727 0227 2C000000 		.4byte	0x2c
 27728 022b 06       		.byte	0x6
 27729 022c 8F       		.byte	0x8f
 27730 022d 62020000 		.4byte	0x262
 27731 0231 0C       		.uleb128 0xc
 27732 0232 42070000 		.4byte	.LASF60
 27733 0236 00       		.byte	0
 27734 0237 0C       		.uleb128 0xc
 27735 0238 B10C0000 		.4byte	.LASF61
 27736 023c 01       		.byte	0x1
 27737 023d 0C       		.uleb128 0xc
 27738 023e C9020000 		.4byte	.LASF62
 27739 0242 02       		.byte	0x2
 27740 0243 0C       		.uleb128 0xc
 27741 0244 F2010000 		.4byte	.LASF63
 27742 0248 03       		.byte	0x3
 27743 0249 0C       		.uleb128 0xc
 27744 024a 96010000 		.4byte	.LASF64
 27745 024e 04       		.byte	0x4
 27746 024f 0C       		.uleb128 0xc
 27747 0250 7D000000 		.4byte	.LASF65
 27748 0254 05       		.byte	0x5
 27749 0255 0C       		.uleb128 0xc
 27750 0256 98080000 		.4byte	.LASF66
 27751 025a 06       		.byte	0x6
 27752 025b 0C       		.uleb128 0xc
 27753 025c 3A110000 		.4byte	.LASF67
 27754 0260 07       		.byte	0x7
 27755 0261 00       		.byte	0
 27756 0262 0B       		.uleb128 0xb
 27757 0263 880A0000 		.4byte	.LASF68
 27758 0267 01       		.byte	0x1
 27759 0268 2C000000 		.4byte	0x2c
 27760 026c 06       		.byte	0x6
 27761 026d A3       		.byte	0xa3
 27762 026e 8B020000 		.4byte	0x28b
 27763 0272 0C       		.uleb128 0xc
 27764 0273 19150000 		.4byte	.LASF69
 27765 0277 00       		.byte	0
 27766 0278 0C       		.uleb128 0xc
 27767 0279 20090000 		.4byte	.LASF70
 27768 027d 01       		.byte	0x1
 27769 027e 0C       		.uleb128 0xc
 27770 027f DD0D0000 		.4byte	.LASF71
 27771 0283 02       		.byte	0x2
 27772 0284 0C       		.uleb128 0xc
 27773 0285 25080000 		.4byte	.LASF72
 27774 0289 03       		.byte	0x3
 27775 028a 00       		.byte	0
 27776 028b 0B       		.uleb128 0xb
 27777 028c B9040000 		.4byte	.LASF73
 27778 0290 01       		.byte	0x1
 27779 0291 2C000000 		.4byte	0x2c
 27780 0295 06       		.byte	0x6
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 609


 27781 0296 AD       		.byte	0xad
 27782 0297 A8020000 		.4byte	0x2a8
 27783 029b 0C       		.uleb128 0xc
 27784 029c 30110000 		.4byte	.LASF74
 27785 02a0 00       		.byte	0
 27786 02a1 0C       		.uleb128 0xc
 27787 02a2 B40A0000 		.4byte	.LASF75
 27788 02a6 01       		.byte	0x1
 27789 02a7 00       		.byte	0
 27790 02a8 0B       		.uleb128 0xb
 27791 02a9 A60E0000 		.4byte	.LASF76
 27792 02ad 01       		.byte	0x1
 27793 02ae 2C000000 		.4byte	0x2c
 27794 02b2 06       		.byte	0x6
 27795 02b3 B2       		.byte	0xb2
 27796 02b4 C5020000 		.4byte	0x2c5
 27797 02b8 0C       		.uleb128 0xc
 27798 02b9 27070000 		.4byte	.LASF77
 27799 02bd 00       		.byte	0
 27800 02be 0C       		.uleb128 0xc
 27801 02bf DD080000 		.4byte	.LASF78
 27802 02c3 01       		.byte	0x1
 27803 02c4 00       		.byte	0
 27804 02c5 0B       		.uleb128 0xb
 27805 02c6 2B130000 		.4byte	.LASF79
 27806 02ca 01       		.byte	0x1
 27807 02cb 2C000000 		.4byte	0x2c
 27808 02cf 06       		.byte	0x6
 27809 02d0 BA       		.byte	0xba
 27810 02d1 12030000 		.4byte	0x312
 27811 02d5 0C       		.uleb128 0xc
 27812 02d6 E4080000 		.4byte	.LASF80
 27813 02da 00       		.byte	0
 27814 02db 0C       		.uleb128 0xc
 27815 02dc AE150000 		.4byte	.LASF81
 27816 02e0 01       		.byte	0x1
 27817 02e1 0C       		.uleb128 0xc
 27818 02e2 980A0000 		.4byte	.LASF82
 27819 02e6 02       		.byte	0x2
 27820 02e7 0C       		.uleb128 0xc
 27821 02e8 870D0000 		.4byte	.LASF83
 27822 02ec 03       		.byte	0x3
 27823 02ed 0C       		.uleb128 0xc
 27824 02ee 7E0C0000 		.4byte	.LASF84
 27825 02f2 04       		.byte	0x4
 27826 02f3 0C       		.uleb128 0xc
 27827 02f4 180F0000 		.4byte	.LASF85
 27828 02f8 05       		.byte	0x5
 27829 02f9 0C       		.uleb128 0xc
 27830 02fa F90D0000 		.4byte	.LASF86
 27831 02fe 06       		.byte	0x6
 27832 02ff 0C       		.uleb128 0xc
 27833 0300 280D0000 		.4byte	.LASF87
 27834 0304 07       		.byte	0x7
 27835 0305 0C       		.uleb128 0xc
 27836 0306 04070000 		.4byte	.LASF88
 27837 030a 08       		.byte	0x8
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 610


 27838 030b 0C       		.uleb128 0xc
 27839 030c 19080000 		.4byte	.LASF89
 27840 0310 09       		.byte	0x9
 27841 0311 00       		.byte	0
 27842 0312 03       		.uleb128 0x3
 27843 0313 FA140000 		.4byte	.LASF90
 27844 0317 07       		.byte	0x7
 27845 0318 7E       		.byte	0x7e
 27846 0319 1D030000 		.4byte	0x31d
 27847 031d 0D       		.uleb128 0xd
 27848 031e FA140000 		.4byte	.LASF90
 27849 0322 07       		.uleb128 0x7
 27850 0323 04       		.byte	0x4
 27851 0324 12030000 		.4byte	0x312
 27852 0328 0E       		.uleb128 0xe
 27853 0329 320A0000 		.4byte	.LASF93
 27854 032d 10       		.byte	0x10
 27855 032e 08       		.byte	0x8
 27856 032f E6       		.byte	0xe6
 27857 0330 65030000 		.4byte	0x365
 27858 0334 0F       		.uleb128 0xf
 27859 0335 706F7300 		.ascii	"pos\000"
 27860 0339 08       		.byte	0x8
 27861 033a E7       		.byte	0xe7
 27862 033b D3000000 		.4byte	0xd3
 27863 033f 00       		.byte	0
 27864 0340 10       		.uleb128 0x10
 27865 0341 10090000 		.4byte	.LASF91
 27866 0345 08       		.byte	0x8
 27867 0346 E8       		.byte	0xe8
 27868 0347 D3000000 		.4byte	0xd3
 27869 034b 04       		.byte	0x4
 27870 034c 0F       		.uleb128 0xf
 27871 034d 70776D00 		.ascii	"pwm\000"
 27872 0351 08       		.byte	0x8
 27873 0352 E9       		.byte	0xe9
 27874 0353 D3000000 		.4byte	0xd3
 27875 0357 08       		.byte	0x8
 27876 0358 10       		.uleb128 0x10
 27877 0359 590F0000 		.4byte	.LASF92
 27878 035d 08       		.byte	0x8
 27879 035e EA       		.byte	0xea
 27880 035f 97000000 		.4byte	0x97
 27881 0363 0C       		.byte	0xc
 27882 0364 00       		.byte	0
 27883 0365 0E       		.uleb128 0xe
 27884 0366 05110000 		.4byte	.LASF94
 27885 036a 34       		.byte	0x34
 27886 036b 08       		.byte	0x8
 27887 036c F1       		.byte	0xf1
 27888 036d C6030000 		.4byte	0x3c6
 27889 0371 0F       		.uleb128 0xf
 27890 0372 706F7300 		.ascii	"pos\000"
 27891 0376 08       		.byte	0x8
 27892 0377 F2       		.byte	0xf2
 27893 0378 C6030000 		.4byte	0x3c6
 27894 037c 00       		.byte	0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 611


 27895 037d 10       		.uleb128 0x10
 27896 037e 10090000 		.4byte	.LASF91
 27897 0382 08       		.byte	0x8
 27898 0383 F3       		.byte	0xf3
 27899 0384 D3000000 		.4byte	0xd3
 27900 0388 0C       		.byte	0xc
 27901 0389 10       		.uleb128 0x10
 27902 038a 78130000 		.4byte	.LASF95
 27903 038e 08       		.byte	0x8
 27904 038f F4       		.byte	0xf4
 27905 0390 D3000000 		.4byte	0xd3
 27906 0394 10       		.byte	0x10
 27907 0395 10       		.uleb128 0x10
 27908 0396 8E080000 		.4byte	.LASF96
 27909 039a 08       		.byte	0x8
 27910 039b F5       		.byte	0xf5
 27911 039c D3000000 		.4byte	0xd3
 27912 03a0 14       		.byte	0x14
 27913 03a1 0F       		.uleb128 0xf
 27914 03a2 726F7400 		.ascii	"rot\000"
 27915 03a6 08       		.byte	0x8
 27916 03a7 F6       		.byte	0xf6
 27917 03a8 D6030000 		.4byte	0x3d6
 27918 03ac 18       		.byte	0x18
 27919 03ad 0F       		.uleb128 0xf
 27920 03ae 76656C00 		.ascii	"vel\000"
 27921 03b2 08       		.byte	0x8
 27922 03b3 F7       		.byte	0xf7
 27923 03b4 C6030000 		.4byte	0x3c6
 27924 03b8 1C       		.byte	0x1c
 27925 03b9 0F       		.uleb128 0xf
 27926 03ba 61636300 		.ascii	"acc\000"
 27927 03be 08       		.byte	0x8
 27928 03bf F8       		.byte	0xf8
 27929 03c0 C6030000 		.4byte	0x3c6
 27930 03c4 28       		.byte	0x28
 27931 03c5 00       		.byte	0
 27932 03c6 09       		.uleb128 0x9
 27933 03c7 D3000000 		.4byte	0xd3
 27934 03cb D6030000 		.4byte	0x3d6
 27935 03cf 0A       		.uleb128 0xa
 27936 03d0 18010000 		.4byte	0x118
 27937 03d4 02       		.byte	0x2
 27938 03d5 00       		.byte	0
 27939 03d6 09       		.uleb128 0x9
 27940 03d7 BB000000 		.4byte	0xbb
 27941 03db E6030000 		.4byte	0x3e6
 27942 03df 0A       		.uleb128 0xa
 27943 03e0 18010000 		.4byte	0x118
 27944 03e4 02       		.byte	0x2
 27945 03e5 00       		.byte	0
 27946 03e6 0E       		.uleb128 0xe
 27947 03e7 FE0B0000 		.4byte	.LASF97
 27948 03eb 28       		.byte	0x28
 27949 03ec 08       		.byte	0x8
 27950 03ed FB       		.byte	0xfb
 27951 03ee 17040000 		.4byte	0x417
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 612


 27952 03f2 0F       		.uleb128 0xf
 27953 03f3 656D6700 		.ascii	"emg\000"
 27954 03f7 08       		.byte	0x8
 27955 03f8 FC       		.byte	0xfc
 27956 03f9 17040000 		.4byte	0x417
 27957 03fd 00       		.byte	0
 27958 03fe 10       		.uleb128 0x10
 27959 03ff 7F0D0000 		.4byte	.LASF98
 27960 0403 08       		.byte	0x8
 27961 0404 FD       		.byte	0xfd
 27962 0405 27040000 		.4byte	0x427
 27963 0409 08       		.byte	0x8
 27964 040a 10       		.uleb128 0x10
 27965 040b 1B120000 		.4byte	.LASF99
 27966 040f 08       		.byte	0x8
 27967 0410 FE       		.byte	0xfe
 27968 0411 17040000 		.4byte	0x417
 27969 0415 20       		.byte	0x20
 27970 0416 00       		.byte	0
 27971 0417 09       		.uleb128 0x9
 27972 0418 D3000000 		.4byte	0xd3
 27973 041c 27040000 		.4byte	0x427
 27974 0420 0A       		.uleb128 0xa
 27975 0421 18010000 		.4byte	0x118
 27976 0425 01       		.byte	0x1
 27977 0426 00       		.byte	0
 27978 0427 09       		.uleb128 0x9
 27979 0428 D3000000 		.4byte	0xd3
 27980 042c 37040000 		.4byte	0x437
 27981 0430 0A       		.uleb128 0xa
 27982 0431 18010000 		.4byte	0x118
 27983 0435 05       		.byte	0x5
 27984 0436 00       		.byte	0
 27985 0437 11       		.uleb128 0x11
 27986 0438 F3050000 		.4byte	.LASF100
 27987 043c 04       		.byte	0x4
 27988 043d 08       		.byte	0x8
 27989 043e 0101     		.2byte	0x101
 27990 0440 52040000 		.4byte	0x452
 27991 0444 12       		.uleb128 0x12
 27992 0445 7B050000 		.4byte	.LASF101
 27993 0449 08       		.byte	0x8
 27994 044a 0201     		.2byte	0x102
 27995 044c EB000000 		.4byte	0xeb
 27996 0450 00       		.byte	0
 27997 0451 00       		.byte	0
 27998 0452 11       		.uleb128 0x11
 27999 0453 DF000000 		.4byte	.LASF102
 28000 0457 86       		.byte	0x86
 28001 0458 08       		.byte	0x8
 28002 0459 0901     		.2byte	0x109
 28003 045b 94040000 		.4byte	0x494
 28004 045f 12       		.uleb128 0x12
 28005 0460 D2060000 		.4byte	.LASF103
 28006 0464 08       		.byte	0x8
 28007 0465 0A01     		.2byte	0x10a
 28008 0467 94040000 		.4byte	0x494
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 613


 28009 046b 00       		.byte	0
 28010 046c 12       		.uleb128 0x12
 28011 046d 2E0F0000 		.4byte	.LASF104
 28012 0471 08       		.byte	0x8
 28013 0472 0B01     		.2byte	0x10b
 28014 0474 C7000000 		.4byte	0xc7
 28015 0478 80       		.byte	0x80
 28016 0479 13       		.uleb128 0x13
 28017 047a 696E6400 		.ascii	"ind\000"
 28018 047e 08       		.byte	0x8
 28019 047f 0C01     		.2byte	0x10c
 28020 0481 C7000000 		.4byte	0xc7
 28021 0485 82       		.byte	0x82
 28022 0486 12       		.uleb128 0x12
 28023 0487 9A020000 		.4byte	.LASF105
 28024 048b 08       		.byte	0x8
 28025 048c 0D01     		.2byte	0x10d
 28026 048e 97000000 		.4byte	0x97
 28027 0492 84       		.byte	0x84
 28028 0493 00       		.byte	0
 28029 0494 09       		.uleb128 0x9
 28030 0495 97000000 		.4byte	0x97
 28031 0499 A4040000 		.4byte	0x4a4
 28032 049d 0A       		.uleb128 0xa
 28033 049e 18010000 		.4byte	0x118
 28034 04a2 7F       		.byte	0x7f
 28035 04a3 00       		.byte	0
 28036 04a4 11       		.uleb128 0x11
 28037 04a5 C2030000 		.4byte	.LASF106
 28038 04a9 70       		.byte	0x70
 28039 04aa 08       		.byte	0x8
 28040 04ab 1601     		.2byte	0x116
 28041 04ad 41050000 		.4byte	0x541
 28042 04b1 12       		.uleb128 0x12
 28043 04b2 09000000 		.4byte	.LASF107
 28044 04b6 08       		.byte	0x8
 28045 04b7 1701     		.2byte	0x117
 28046 04b9 41050000 		.4byte	0x541
 28047 04bd 00       		.byte	0
 28048 04be 12       		.uleb128 0x12
 28049 04bf 53020000 		.4byte	.LASF108
 28050 04c3 08       		.byte	0x8
 28051 04c4 1801     		.2byte	0x118
 28052 04c6 51050000 		.4byte	0x551
 28053 04ca 08       		.byte	0x8
 28054 04cb 12       		.uleb128 0x12
 28055 04cc D00D0000 		.4byte	.LASF109
 28056 04d0 08       		.byte	0x8
 28057 04d1 1901     		.2byte	0x119
 28058 04d3 61050000 		.4byte	0x561
 28059 04d7 30       		.byte	0x30
 28060 04d8 12       		.uleb128 0x12
 28061 04d9 B6010000 		.4byte	.LASF110
 28062 04dd 08       		.byte	0x8
 28063 04de 1A01     		.2byte	0x11a
 28064 04e0 AF000000 		.4byte	0xaf
 28065 04e4 40       		.byte	0x40
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 614


 28066 04e5 12       		.uleb128 0x12
 28067 04e6 4D150000 		.4byte	.LASF111
 28068 04ea 08       		.byte	0x8
 28069 04eb 1B01     		.2byte	0x11b
 28070 04ed AF000000 		.4byte	0xaf
 28071 04f1 44       		.byte	0x44
 28072 04f2 12       		.uleb128 0x12
 28073 04f3 FA000000 		.4byte	.LASF112
 28074 04f7 08       		.byte	0x8
 28075 04f8 1C01     		.2byte	0x11c
 28076 04fa AF000000 		.4byte	0xaf
 28077 04fe 48       		.byte	0x48
 28078 04ff 12       		.uleb128 0x12
 28079 0500 AC080000 		.4byte	.LASF113
 28080 0504 08       		.byte	0x8
 28081 0505 1D01     		.2byte	0x11d
 28082 0507 AF000000 		.4byte	0xaf
 28083 050b 4C       		.byte	0x4c
 28084 050c 12       		.uleb128 0x12
 28085 050d 42000000 		.4byte	.LASF114
 28086 0511 08       		.byte	0x8
 28087 0512 1E01     		.2byte	0x11e
 28088 0514 AF000000 		.4byte	0xaf
 28089 0518 50       		.byte	0x50
 28090 0519 12       		.uleb128 0x12
 28091 051a 00030000 		.4byte	.LASF115
 28092 051e 08       		.byte	0x8
 28093 051f 1F01     		.2byte	0x11f
 28094 0521 41050000 		.4byte	0x541
 28095 0525 54       		.byte	0x54
 28096 0526 12       		.uleb128 0x12
 28097 0527 2C0E0000 		.4byte	.LASF116
 28098 052b 08       		.byte	0x8
 28099 052c 2001     		.2byte	0x120
 28100 052e 41050000 		.4byte	0x541
 28101 0532 5C       		.byte	0x5c
 28102 0533 12       		.uleb128 0x12
 28103 0534 9F030000 		.4byte	.LASF117
 28104 0538 08       		.byte	0x8
 28105 0539 2101     		.2byte	0x121
 28106 053b 71050000 		.4byte	0x571
 28107 053f 64       		.byte	0x64
 28108 0540 00       		.byte	0
 28109 0541 09       		.uleb128 0x9
 28110 0542 AF000000 		.4byte	0xaf
 28111 0546 51050000 		.4byte	0x551
 28112 054a 0A       		.uleb128 0xa
 28113 054b 18010000 		.4byte	0x118
 28114 054f 01       		.byte	0x1
 28115 0550 00       		.byte	0
 28116 0551 09       		.uleb128 0x9
 28117 0552 AF000000 		.4byte	0xaf
 28118 0556 61050000 		.4byte	0x561
 28119 055a 0A       		.uleb128 0xa
 28120 055b 18010000 		.4byte	0x118
 28121 055f 09       		.byte	0x9
 28122 0560 00       		.byte	0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 615


 28123 0561 09       		.uleb128 0x9
 28124 0562 AF000000 		.4byte	0xaf
 28125 0566 71050000 		.4byte	0x571
 28126 056a 0A       		.uleb128 0xa
 28127 056b 18010000 		.4byte	0x118
 28128 056f 03       		.byte	0x3
 28129 0570 00       		.byte	0
 28130 0571 09       		.uleb128 0x9
 28131 0572 97000000 		.4byte	0x97
 28132 0576 81050000 		.4byte	0x581
 28133 057a 0A       		.uleb128 0xa
 28134 057b 18010000 		.4byte	0x118
 28135 057f 0B       		.byte	0xb
 28136 0580 00       		.byte	0
 28137 0581 11       		.uleb128 0x11
 28138 0582 79060000 		.4byte	.LASF118
 28139 0586 10       		.byte	0x10
 28140 0587 08       		.byte	0x8
 28141 0588 2801     		.2byte	0x128
 28142 058a 10060000 		.4byte	0x610
 28143 058e 13       		.uleb128 0x13
 28144 058f 696400   		.ascii	"id\000"
 28145 0592 08       		.byte	0x8
 28146 0593 2901     		.2byte	0x129
 28147 0595 97000000 		.4byte	0x97
 28148 0599 00       		.byte	0
 28149 059a 12       		.uleb128 0x12
 28150 059b 49120000 		.4byte	.LASF119
 28151 059f 08       		.byte	0x8
 28152 05a0 2A01     		.2byte	0x12a
 28153 05a2 10060000 		.4byte	0x610
 28154 05a6 01       		.byte	0x1
 28155 05a7 12       		.uleb128 0x12
 28156 05a8 C5120000 		.4byte	.LASF120
 28157 05ac 08       		.byte	0x8
 28158 05ad 2B01     		.2byte	0x12b
 28159 05af 10060000 		.4byte	0x610
 28160 05b3 04       		.byte	0x4
 28161 05b4 12       		.uleb128 0x12
 28162 05b5 1E050000 		.4byte	.LASF121
 28163 05b9 08       		.byte	0x8
 28164 05ba 2C01     		.2byte	0x12c
 28165 05bc 97000000 		.4byte	0x97
 28166 05c0 07       		.byte	0x7
 28167 05c1 12       		.uleb128 0x12
 28168 05c2 6E030000 		.4byte	.LASF122
 28169 05c6 08       		.byte	0x8
 28170 05c7 2D01     		.2byte	0x12d
 28171 05c9 97000000 		.4byte	0x97
 28172 05cd 08       		.byte	0x8
 28173 05ce 12       		.uleb128 0x12
 28174 05cf E5020000 		.4byte	.LASF123
 28175 05d3 08       		.byte	0x8
 28176 05d4 2E01     		.2byte	0x12e
 28177 05d6 97000000 		.4byte	0x97
 28178 05da 09       		.byte	0x9
 28179 05db 12       		.uleb128 0x12
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 616


 28180 05dc 0A140000 		.4byte	.LASF124
 28181 05e0 08       		.byte	0x8
 28182 05e1 2F01     		.2byte	0x12f
 28183 05e3 97000000 		.4byte	0x97
 28184 05e7 0A       		.byte	0xa
 28185 05e8 12       		.uleb128 0x12
 28186 05e9 CE130000 		.4byte	.LASF125
 28187 05ed 08       		.byte	0x8
 28188 05ee 3001     		.2byte	0x130
 28189 05f0 97000000 		.4byte	0x97
 28190 05f4 0B       		.byte	0xb
 28191 05f5 12       		.uleb128 0x12
 28192 05f6 AF100000 		.4byte	.LASF126
 28193 05fa 08       		.byte	0x8
 28194 05fb 3101     		.2byte	0x131
 28195 05fd 97000000 		.4byte	0x97
 28196 0601 0C       		.byte	0xc
 28197 0602 12       		.uleb128 0x12
 28198 0603 9F030000 		.4byte	.LASF117
 28199 0607 08       		.byte	0x8
 28200 0608 3201     		.2byte	0x132
 28201 060a 10060000 		.4byte	0x610
 28202 060e 0D       		.byte	0xd
 28203 060f 00       		.byte	0
 28204 0610 09       		.uleb128 0x9
 28205 0611 97000000 		.4byte	0x97
 28206 0615 20060000 		.4byte	0x620
 28207 0619 0A       		.uleb128 0xa
 28208 061a 18010000 		.4byte	0x118
 28209 061e 02       		.byte	0x2
 28210 061f 00       		.byte	0
 28211 0620 11       		.uleb128 0x11
 28212 0621 E5140000 		.4byte	.LASF127
 28213 0625 70       		.byte	0x70
 28214 0626 08       		.byte	0x8
 28215 0627 3901     		.2byte	0x139
 28216 0629 9A070000 		.4byte	0x79a
 28217 062d 13       		.uleb128 0x13
 28218 062e 6B5F7000 		.ascii	"k_p\000"
 28219 0632 08       		.byte	0x8
 28220 0633 3A01     		.2byte	0x13a
 28221 0635 D3000000 		.4byte	0xd3
 28222 0639 00       		.byte	0
 28223 063a 13       		.uleb128 0x13
 28224 063b 6B5F6900 		.ascii	"k_i\000"
 28225 063f 08       		.byte	0x8
 28226 0640 3B01     		.2byte	0x13b
 28227 0642 D3000000 		.4byte	0xd3
 28228 0646 04       		.byte	0x4
 28229 0647 13       		.uleb128 0x13
 28230 0648 6B5F6400 		.ascii	"k_d\000"
 28231 064c 08       		.byte	0x8
 28232 064d 3C01     		.2byte	0x13c
 28233 064f D3000000 		.4byte	0xd3
 28234 0653 08       		.byte	0x8
 28235 0654 12       		.uleb128 0x12
 28236 0655 A80F0000 		.4byte	.LASF128
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 617


 28237 0659 08       		.byte	0x8
 28238 065a 3D01     		.2byte	0x13d
 28239 065c D3000000 		.4byte	0xd3
 28240 0660 0C       		.byte	0xc
 28241 0661 12       		.uleb128 0x12
 28242 0662 13060000 		.4byte	.LASF129
 28243 0666 08       		.byte	0x8
 28244 0667 3E01     		.2byte	0x13e
 28245 0669 D3000000 		.4byte	0xd3
 28246 066d 10       		.byte	0x10
 28247 066e 12       		.uleb128 0x12
 28248 066f ED050000 		.4byte	.LASF130
 28249 0673 08       		.byte	0x8
 28250 0674 3F01     		.2byte	0x13f
 28251 0676 D3000000 		.4byte	0xd3
 28252 067a 14       		.byte	0x14
 28253 067b 12       		.uleb128 0x12
 28254 067c 71130000 		.4byte	.LASF131
 28255 0680 08       		.byte	0x8
 28256 0681 4001     		.2byte	0x140
 28257 0683 D3000000 		.4byte	0xd3
 28258 0687 18       		.byte	0x18
 28259 0688 12       		.uleb128 0x12
 28260 0689 BC060000 		.4byte	.LASF132
 28261 068d 08       		.byte	0x8
 28262 068e 4101     		.2byte	0x141
 28263 0690 D3000000 		.4byte	0xd3
 28264 0694 1C       		.byte	0x1c
 28265 0695 12       		.uleb128 0x12
 28266 0696 0B120000 		.4byte	.LASF133
 28267 069a 08       		.byte	0x8
 28268 069b 4201     		.2byte	0x142
 28269 069d D3000000 		.4byte	0xd3
 28270 06a1 20       		.byte	0x20
 28271 06a2 12       		.uleb128 0x12
 28272 06a3 D9060000 		.4byte	.LASF134
 28273 06a7 08       		.byte	0x8
 28274 06a8 4301     		.2byte	0x143
 28275 06aa D3000000 		.4byte	0xd3
 28276 06ae 24       		.byte	0x24
 28277 06af 12       		.uleb128 0x12
 28278 06b0 AB070000 		.4byte	.LASF135
 28279 06b4 08       		.byte	0x8
 28280 06b5 4401     		.2byte	0x144
 28281 06b7 D3000000 		.4byte	0xd3
 28282 06bb 28       		.byte	0x28
 28283 06bc 12       		.uleb128 0x12
 28284 06bd FC150000 		.4byte	.LASF136
 28285 06c1 08       		.byte	0x8
 28286 06c2 4501     		.2byte	0x145
 28287 06c4 D3000000 		.4byte	0xd3
 28288 06c8 2C       		.byte	0x2c
 28289 06c9 12       		.uleb128 0x12
 28290 06ca C8080000 		.4byte	.LASF137
 28291 06ce 08       		.byte	0x8
 28292 06cf 4601     		.2byte	0x146
 28293 06d1 97000000 		.4byte	0x97
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 618


 28294 06d5 30       		.byte	0x30
 28295 06d6 12       		.uleb128 0x12
 28296 06d7 5A130000 		.4byte	.LASF138
 28297 06db 08       		.byte	0x8
 28298 06dc 4701     		.2byte	0x147
 28299 06de 97000000 		.4byte	0x97
 28300 06e2 31       		.byte	0x31
 28301 06e3 12       		.uleb128 0x12
 28302 06e4 19060000 		.4byte	.LASF139
 28303 06e8 08       		.byte	0x8
 28304 06e9 4801     		.2byte	0x148
 28305 06eb 97000000 		.4byte	0x97
 28306 06ef 32       		.byte	0x32
 28307 06f0 12       		.uleb128 0x12
 28308 06f1 02150000 		.4byte	.LASF140
 28309 06f5 08       		.byte	0x8
 28310 06f6 4901     		.2byte	0x149
 28311 06f8 97000000 		.4byte	0x97
 28312 06fc 33       		.byte	0x33
 28313 06fd 12       		.uleb128 0x12
 28314 06fe 6A010000 		.4byte	.LASF141
 28315 0702 08       		.byte	0x8
 28316 0703 4A01     		.2byte	0x14a
 28317 0705 D3000000 		.4byte	0xd3
 28318 0709 34       		.byte	0x34
 28319 070a 12       		.uleb128 0x12
 28320 070b 46060000 		.4byte	.LASF142
 28321 070f 08       		.byte	0x8
 28322 0710 4B01     		.2byte	0x14b
 28323 0712 D3000000 		.4byte	0xd3
 28324 0716 38       		.byte	0x38
 28325 0717 12       		.uleb128 0x12
 28326 0718 FA0A0000 		.4byte	.LASF143
 28327 071c 08       		.byte	0x8
 28328 071d 4C01     		.2byte	0x14c
 28329 071f D3000000 		.4byte	0xd3
 28330 0723 3C       		.byte	0x3c
 28331 0724 12       		.uleb128 0x12
 28332 0725 9A050000 		.4byte	.LASF144
 28333 0729 08       		.byte	0x8
 28334 072a 4D01     		.2byte	0x14d
 28335 072c D3000000 		.4byte	0xd3
 28336 0730 40       		.byte	0x40
 28337 0731 12       		.uleb128 0x12
 28338 0732 AA010000 		.4byte	.LASF145
 28339 0736 08       		.byte	0x8
 28340 0737 4E01     		.2byte	0x14e
 28341 0739 9A070000 		.4byte	0x79a
 28342 073d 44       		.byte	0x44
 28343 073e 12       		.uleb128 0x12
 28344 073f 92150000 		.4byte	.LASF146
 28345 0743 08       		.byte	0x8
 28346 0744 4F01     		.2byte	0x14f
 28347 0746 C7000000 		.4byte	0xc7
 28348 074a 5C       		.byte	0x5c
 28349 074b 12       		.uleb128 0x12
 28350 074c 15090000 		.4byte	.LASF147
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 619


 28351 0750 08       		.byte	0x8
 28352 0751 5001     		.2byte	0x150
 28353 0753 97000000 		.4byte	0x97
 28354 0757 5E       		.byte	0x5e
 28355 0758 12       		.uleb128 0x12
 28356 0759 9E0C0000 		.4byte	.LASF148
 28357 075d 08       		.byte	0x8
 28358 075e 5101     		.2byte	0x151
 28359 0760 97000000 		.4byte	0x97
 28360 0764 5F       		.byte	0x5f
 28361 0765 12       		.uleb128 0x12
 28362 0766 42050000 		.4byte	.LASF149
 28363 076a 08       		.byte	0x8
 28364 076b 5201     		.2byte	0x152
 28365 076d 97000000 		.4byte	0x97
 28366 0771 60       		.byte	0x60
 28367 0772 12       		.uleb128 0x12
 28368 0773 DC050000 		.4byte	.LASF150
 28369 0777 08       		.byte	0x8
 28370 0778 5301     		.2byte	0x153
 28371 077a 97000000 		.4byte	0x97
 28372 077e 61       		.byte	0x61
 28373 077f 12       		.uleb128 0x12
 28374 0780 FF040000 		.4byte	.LASF151
 28375 0784 08       		.byte	0x8
 28376 0785 5401     		.2byte	0x154
 28377 0787 97000000 		.4byte	0x97
 28378 078b 62       		.byte	0x62
 28379 078c 12       		.uleb128 0x12
 28380 078d 9F030000 		.4byte	.LASF117
 28381 0791 08       		.byte	0x8
 28382 0792 5501     		.2byte	0x155
 28383 0794 AA070000 		.4byte	0x7aa
 28384 0798 63       		.byte	0x63
 28385 0799 00       		.byte	0
 28386 079a 09       		.uleb128 0x9
 28387 079b EB000000 		.4byte	0xeb
 28388 079f AA070000 		.4byte	0x7aa
 28389 07a3 0A       		.uleb128 0xa
 28390 07a4 18010000 		.4byte	0x118
 28391 07a8 05       		.byte	0x5
 28392 07a9 00       		.byte	0
 28393 07aa 09       		.uleb128 0x9
 28394 07ab 97000000 		.4byte	0x97
 28395 07af BA070000 		.4byte	0x7ba
 28396 07b3 0A       		.uleb128 0xa
 28397 07b4 18010000 		.4byte	0x118
 28398 07b8 0C       		.byte	0xc
 28399 07b9 00       		.byte	0
 28400 07ba 11       		.uleb128 0x11
 28401 07bb 7B140000 		.4byte	.LASF152
 28402 07bf 30       		.byte	0x30
 28403 07c0 08       		.byte	0x8
 28404 07c1 5C01     		.2byte	0x15c
 28405 07c3 3D080000 		.4byte	0x83d
 28406 07c7 12       		.uleb128 0x12
 28407 07c8 DC0A0000 		.4byte	.LASF153
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 620


 28408 07cc 08       		.byte	0x8
 28409 07cd 5D01     		.2byte	0x15d
 28410 07cf 3D080000 		.4byte	0x83d
 28411 07d3 00       		.byte	0
 28412 07d4 13       		.uleb128 0x13
 28413 07d5 72657300 		.ascii	"res\000"
 28414 07d9 08       		.byte	0x8
 28415 07da 5E01     		.2byte	0x15e
 28416 07dc 10060000 		.4byte	0x610
 28417 07e0 05       		.byte	0x5
 28418 07e1 12       		.uleb128 0x12
 28419 07e2 D7080000 		.4byte	.LASF154
 28420 07e6 08       		.byte	0x8
 28421 07e7 5F01     		.2byte	0x15f
 28422 07e9 C6030000 		.4byte	0x3c6
 28423 07ed 08       		.byte	0x8
 28424 07ee 12       		.uleb128 0x12
 28425 07ef 0C060000 		.4byte	.LASF155
 28426 07f3 08       		.byte	0x8
 28427 07f4 6001     		.2byte	0x160
 28428 07f6 4D080000 		.4byte	0x84d
 28429 07fa 14       		.byte	0x14
 28430 07fb 12       		.uleb128 0x12
 28431 07fc 750E0000 		.4byte	.LASF156
 28432 0800 08       		.byte	0x8
 28433 0801 6101     		.2byte	0x161
 28434 0803 97000000 		.4byte	0x97
 28435 0807 20       		.byte	0x20
 28436 0808 12       		.uleb128 0x12
 28437 0809 A0020000 		.4byte	.LASF157
 28438 080d 08       		.byte	0x8
 28439 080e 6201     		.2byte	0x162
 28440 0810 10060000 		.4byte	0x610
 28441 0814 21       		.byte	0x21
 28442 0815 12       		.uleb128 0x12
 28443 0816 BD0D0000 		.4byte	.LASF158
 28444 081a 08       		.byte	0x8
 28445 081b 6301     		.2byte	0x163
 28446 081d BB000000 		.4byte	0xbb
 28447 0821 24       		.byte	0x24
 28448 0822 12       		.uleb128 0x12
 28449 0823 D6100000 		.4byte	.LASF159
 28450 0827 08       		.byte	0x8
 28451 0828 6401     		.2byte	0x164
 28452 082a D6030000 		.4byte	0x3d6
 28453 082e 25       		.byte	0x25
 28454 082f 12       		.uleb128 0x12
 28455 0830 9F030000 		.4byte	.LASF117
 28456 0834 08       		.byte	0x8
 28457 0835 6501     		.2byte	0x165
 28458 0837 5D080000 		.4byte	0x85d
 28459 083b 28       		.byte	0x28
 28460 083c 00       		.byte	0
 28461 083d 09       		.uleb128 0x9
 28462 083e 97000000 		.4byte	0x97
 28463 0842 4D080000 		.4byte	0x84d
 28464 0846 0A       		.uleb128 0xa
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 621


 28465 0847 18010000 		.4byte	0x118
 28466 084b 04       		.byte	0x4
 28467 084c 00       		.byte	0
 28468 084d 09       		.uleb128 0x9
 28469 084e DF000000 		.4byte	0xdf
 28470 0852 5D080000 		.4byte	0x85d
 28471 0856 0A       		.uleb128 0xa
 28472 0857 18010000 		.4byte	0x118
 28473 085b 02       		.byte	0x2
 28474 085c 00       		.byte	0
 28475 085d 09       		.uleb128 0x9
 28476 085e 97000000 		.4byte	0x97
 28477 0862 6D080000 		.4byte	0x86d
 28478 0866 0A       		.uleb128 0xa
 28479 0867 18010000 		.4byte	0x118
 28480 086b 07       		.byte	0x7
 28481 086c 00       		.byte	0
 28482 086d 11       		.uleb128 0x11
 28483 086e 4C020000 		.4byte	.LASF160
 28484 0872 10       		.byte	0x10
 28485 0873 08       		.byte	0x8
 28486 0874 6C01     		.2byte	0x16c
 28487 0876 BC080000 		.4byte	0x8bc
 28488 087a 12       		.uleb128 0x12
 28489 087b 9D0D0000 		.4byte	.LASF161
 28490 087f 08       		.byte	0x8
 28491 0880 6D01     		.2byte	0x16d
 28492 0882 BC080000 		.4byte	0x8bc
 28493 0886 00       		.byte	0
 28494 0887 12       		.uleb128 0x12
 28495 0888 57150000 		.4byte	.LASF162
 28496 088c 08       		.byte	0x8
 28497 088d 6E01     		.2byte	0x16e
 28498 088f 41050000 		.4byte	0x541
 28499 0893 04       		.byte	0x4
 28500 0894 12       		.uleb128 0x12
 28501 0895 5A060000 		.4byte	.LASF163
 28502 0899 08       		.byte	0x8
 28503 089a 6F01     		.2byte	0x16f
 28504 089c CC080000 		.4byte	0x8cc
 28505 08a0 0C       		.byte	0xc
 28506 08a1 12       		.uleb128 0x12
 28507 08a2 F0100000 		.4byte	.LASF164
 28508 08a6 08       		.byte	0x8
 28509 08a7 7001     		.2byte	0x170
 28510 08a9 97000000 		.4byte	0x97
 28511 08ad 0E       		.byte	0xe
 28512 08ae 12       		.uleb128 0x12
 28513 08af 4F130000 		.4byte	.LASF165
 28514 08b3 08       		.byte	0x8
 28515 08b4 7101     		.2byte	0x171
 28516 08b6 97000000 		.4byte	0x97
 28517 08ba 0F       		.byte	0xf
 28518 08bb 00       		.byte	0
 28519 08bc 09       		.uleb128 0x9
 28520 08bd A3000000 		.4byte	0xa3
 28521 08c1 CC080000 		.4byte	0x8cc
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 622


 28522 08c5 0A       		.uleb128 0xa
 28523 08c6 18010000 		.4byte	0x118
 28524 08ca 01       		.byte	0x1
 28525 08cb 00       		.byte	0
 28526 08cc 09       		.uleb128 0x9
 28527 08cd 97000000 		.4byte	0x97
 28528 08d1 DC080000 		.4byte	0x8dc
 28529 08d5 0A       		.uleb128 0xa
 28530 08d6 18010000 		.4byte	0x118
 28531 08da 01       		.byte	0x1
 28532 08db 00       		.byte	0
 28533 08dc 11       		.uleb128 0x11
 28534 08dd E60C0000 		.4byte	.LASF166
 28535 08e1 20       		.byte	0x20
 28536 08e2 08       		.byte	0x8
 28537 08e3 7801     		.2byte	0x178
 28538 08e5 1E090000 		.4byte	0x91e
 28539 08e9 12       		.uleb128 0x12
 28540 08ea 1A030000 		.4byte	.LASF167
 28541 08ee 08       		.byte	0x8
 28542 08ef 7901     		.2byte	0x179
 28543 08f1 97000000 		.4byte	0x97
 28544 08f5 00       		.byte	0
 28545 08f6 12       		.uleb128 0x12
 28546 08f7 970E0000 		.4byte	.LASF168
 28547 08fb 08       		.byte	0x8
 28548 08fc 7A01     		.2byte	0x17a
 28549 08fe 97000000 		.4byte	0x97
 28550 0902 01       		.byte	0x1
 28551 0903 12       		.uleb128 0x12
 28552 0904 520B0000 		.4byte	.LASF169
 28553 0908 08       		.byte	0x8
 28554 0909 7B01     		.2byte	0x17b
 28555 090b 1E090000 		.4byte	0x91e
 28556 090f 02       		.byte	0x2
 28557 0910 12       		.uleb128 0x12
 28558 0911 9F030000 		.4byte	.LASF117
 28559 0915 08       		.byte	0x8
 28560 0916 7C01     		.2byte	0x17c
 28561 0918 3D080000 		.4byte	0x83d
 28562 091c 1B       		.byte	0x1b
 28563 091d 00       		.byte	0
 28564 091e 09       		.uleb128 0x9
 28565 091f 97000000 		.4byte	0x97
 28566 0923 34090000 		.4byte	0x934
 28567 0927 0A       		.uleb128 0xa
 28568 0928 18010000 		.4byte	0x118
 28569 092c 04       		.byte	0x4
 28570 092d 0A       		.uleb128 0xa
 28571 092e 18010000 		.4byte	0x118
 28572 0932 04       		.byte	0x4
 28573 0933 00       		.byte	0
 28574 0934 11       		.uleb128 0x11
 28575 0935 E3100000 		.4byte	.LASF170
 28576 0939 20       		.byte	0x20
 28577 093a 08       		.byte	0x8
 28578 093b 8301     		.2byte	0x183
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 623


 28579 093d 90090000 		.4byte	0x990
 28580 0941 12       		.uleb128 0x12
 28581 0942 6B0E0000 		.4byte	.LASF171
 28582 0946 08       		.byte	0x8
 28583 0947 8401     		.2byte	0x184
 28584 0949 90090000 		.4byte	0x990
 28585 094d 00       		.byte	0
 28586 094e 12       		.uleb128 0x12
 28587 094f 3C130000 		.4byte	.LASF172
 28588 0953 08       		.byte	0x8
 28589 0954 8501     		.2byte	0x185
 28590 0956 97000000 		.4byte	0x97
 28591 095a 06       		.byte	0x6
 28592 095b 12       		.uleb128 0x12
 28593 095c 91130000 		.4byte	.LASF173
 28594 0960 08       		.byte	0x8
 28595 0961 8601     		.2byte	0x186
 28596 0963 97000000 		.4byte	0x97
 28597 0967 07       		.byte	0x7
 28598 0968 12       		.uleb128 0x12
 28599 0969 89060000 		.4byte	.LASF174
 28600 096d 08       		.byte	0x8
 28601 096e 8701     		.2byte	0x187
 28602 0970 71050000 		.4byte	0x571
 28603 0974 08       		.byte	0x8
 28604 0975 12       		.uleb128 0x12
 28605 0976 28030000 		.4byte	.LASF175
 28606 097a 08       		.byte	0x8
 28607 097b 8801     		.2byte	0x188
 28608 097d 97000000 		.4byte	0x97
 28609 0981 14       		.byte	0x14
 28610 0982 12       		.uleb128 0x12
 28611 0983 9F030000 		.4byte	.LASF117
 28612 0987 08       		.byte	0x8
 28613 0988 8901     		.2byte	0x189
 28614 098a A0090000 		.4byte	0x9a0
 28615 098e 15       		.byte	0x15
 28616 098f 00       		.byte	0
 28617 0990 09       		.uleb128 0x9
 28618 0991 97000000 		.4byte	0x97
 28619 0995 A0090000 		.4byte	0x9a0
 28620 0999 0A       		.uleb128 0xa
 28621 099a 18010000 		.4byte	0x118
 28622 099e 05       		.byte	0x5
 28623 099f 00       		.byte	0
 28624 09a0 09       		.uleb128 0x9
 28625 09a1 97000000 		.4byte	0x97
 28626 09a5 B0090000 		.4byte	0x9b0
 28627 09a9 0A       		.uleb128 0xa
 28628 09aa 18010000 		.4byte	0x118
 28629 09ae 0A       		.byte	0xa
 28630 09af 00       		.byte	0
 28631 09b0 11       		.uleb128 0x11
 28632 09b1 B8100000 		.4byte	.LASF176
 28633 09b5 20       		.byte	0x20
 28634 09b6 08       		.byte	0x8
 28635 09b7 9001     		.2byte	0x190
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 624


 28636 09b9 E5090000 		.4byte	0x9e5
 28637 09bd 12       		.uleb128 0x12
 28638 09be 83040000 		.4byte	.LASF177
 28639 09c2 08       		.byte	0x8
 28640 09c3 9101     		.2byte	0x191
 28641 09c5 40010000 		.4byte	0x140
 28642 09c9 00       		.byte	0
 28643 09ca 12       		.uleb128 0x12
 28644 09cb 7D030000 		.4byte	.LASF178
 28645 09cf 08       		.byte	0x8
 28646 09d0 9201     		.2byte	0x192
 28647 09d2 6D080000 		.4byte	0x86d
 28648 09d6 08       		.byte	0x8
 28649 09d7 12       		.uleb128 0x12
 28650 09d8 9F030000 		.4byte	.LASF117
 28651 09dc 08       		.byte	0x8
 28652 09dd 9301     		.2byte	0x193
 28653 09df 5D080000 		.4byte	0x85d
 28654 09e3 18       		.byte	0x18
 28655 09e4 00       		.byte	0
 28656 09e5 11       		.uleb128 0x11
 28657 09e6 5E0A0000 		.4byte	.LASF179
 28658 09ea 10       		.byte	0x10
 28659 09eb 08       		.byte	0x8
 28660 09ec 9A01     		.2byte	0x19a
 28661 09ee 340A0000 		.4byte	0xa34
 28662 09f2 12       		.uleb128 0x12
 28663 09f3 07090000 		.4byte	.LASF180
 28664 09f7 08       		.byte	0x8
 28665 09f8 9B01     		.2byte	0x19b
 28666 09fa D3000000 		.4byte	0xd3
 28667 09fe 00       		.byte	0
 28668 09ff 12       		.uleb128 0x12
 28669 0a00 E0150000 		.4byte	.LASF181
 28670 0a04 08       		.byte	0x8
 28671 0a05 9C01     		.2byte	0x19c
 28672 0a07 D3000000 		.4byte	0xd3
 28673 0a0b 04       		.byte	0x4
 28674 0a0c 12       		.uleb128 0x12
 28675 0a0d 64060000 		.4byte	.LASF182
 28676 0a11 08       		.byte	0x8
 28677 0a12 9D01     		.2byte	0x19d
 28678 0a14 D3000000 		.4byte	0xd3
 28679 0a18 08       		.byte	0x8
 28680 0a19 12       		.uleb128 0x12
 28681 0a1a 71070000 		.4byte	.LASF183
 28682 0a1e 08       		.byte	0x8
 28683 0a1f 9E01     		.2byte	0x19e
 28684 0a21 97000000 		.4byte	0x97
 28685 0a25 0C       		.byte	0xc
 28686 0a26 12       		.uleb128 0x12
 28687 0a27 9F030000 		.4byte	.LASF117
 28688 0a2b 08       		.byte	0x8
 28689 0a2c 9F01     		.2byte	0x19f
 28690 0a2e 10060000 		.4byte	0x610
 28691 0a32 0D       		.byte	0xd
 28692 0a33 00       		.byte	0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 625


 28693 0a34 11       		.uleb128 0x11
 28694 0a35 E9110000 		.4byte	.LASF184
 28695 0a39 10       		.byte	0x10
 28696 0a3a 08       		.byte	0x8
 28697 0a3b A601     		.2byte	0x1a6
 28698 0a3d 760A0000 		.4byte	0xa76
 28699 0a41 12       		.uleb128 0x12
 28700 0a42 84070000 		.4byte	.LASF185
 28701 0a46 08       		.byte	0x8
 28702 0a47 A701     		.2byte	0x1a7
 28703 0a49 A3000000 		.4byte	0xa3
 28704 0a4d 00       		.byte	0
 28705 0a4e 12       		.uleb128 0x12
 28706 0a4f 1D110000 		.4byte	.LASF186
 28707 0a53 08       		.byte	0x8
 28708 0a54 A801     		.2byte	0x1a8
 28709 0a56 C7000000 		.4byte	0xc7
 28710 0a5a 02       		.byte	0x2
 28711 0a5b 12       		.uleb128 0x12
 28712 0a5c 7F080000 		.4byte	.LASF187
 28713 0a60 08       		.byte	0x8
 28714 0a61 A901     		.2byte	0x1a9
 28715 0a63 BC080000 		.4byte	0x8bc
 28716 0a67 04       		.byte	0x4
 28717 0a68 12       		.uleb128 0x12
 28718 0a69 9F030000 		.4byte	.LASF117
 28719 0a6d 08       		.byte	0x8
 28720 0a6e AA01     		.2byte	0x1aa
 28721 0a70 5D080000 		.4byte	0x85d
 28722 0a74 08       		.byte	0x8
 28723 0a75 00       		.byte	0
 28724 0a76 11       		.uleb128 0x11
 28725 0a77 D8010000 		.4byte	.LASF188
 28726 0a7b 10       		.byte	0x10
 28727 0a7c 08       		.byte	0x8
 28728 0a7d B101     		.2byte	0x1b1
 28729 0a7f AB0A0000 		.4byte	0xaab
 28730 0a83 12       		.uleb128 0x12
 28731 0a84 57100000 		.4byte	.LASF189
 28732 0a88 08       		.byte	0x8
 28733 0a89 B201     		.2byte	0x1b2
 28734 0a8b 97000000 		.4byte	0x97
 28735 0a8f 00       		.byte	0
 28736 0a90 12       		.uleb128 0x12
 28737 0a91 1C0B0000 		.4byte	.LASF190
 28738 0a95 08       		.byte	0x8
 28739 0a96 B301     		.2byte	0x1b3
 28740 0a98 97000000 		.4byte	0x97
 28741 0a9c 01       		.byte	0x1
 28742 0a9d 12       		.uleb128 0x12
 28743 0a9e 9F030000 		.4byte	.LASF117
 28744 0aa2 08       		.byte	0x8
 28745 0aa3 B401     		.2byte	0x1b4
 28746 0aa5 AB0A0000 		.4byte	0xaab
 28747 0aa9 02       		.byte	0x2
 28748 0aaa 00       		.byte	0
 28749 0aab 09       		.uleb128 0x9
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 626


 28750 0aac 97000000 		.4byte	0x97
 28751 0ab0 BB0A0000 		.4byte	0xabb
 28752 0ab4 0A       		.uleb128 0xa
 28753 0ab5 18010000 		.4byte	0x118
 28754 0ab9 0D       		.byte	0xd
 28755 0aba 00       		.byte	0
 28756 0abb 11       		.uleb128 0x11
 28757 0abc 050E0000 		.4byte	.LASF191
 28758 0ac0 10       		.byte	0x10
 28759 0ac1 08       		.byte	0x8
 28760 0ac2 BB01     		.2byte	0x1bb
 28761 0ac4 FD0A0000 		.4byte	0xafd
 28762 0ac8 12       		.uleb128 0x12
 28763 0ac9 91140000 		.4byte	.LASF192
 28764 0acd 08       		.byte	0x8
 28765 0ace BC01     		.2byte	0x1bc
 28766 0ad0 D3000000 		.4byte	0xd3
 28767 0ad4 00       		.byte	0
 28768 0ad5 12       		.uleb128 0x12
 28769 0ad6 5C070000 		.4byte	.LASF193
 28770 0ada 08       		.byte	0x8
 28771 0adb BD01     		.2byte	0x1bd
 28772 0add EB000000 		.4byte	0xeb
 28773 0ae1 04       		.byte	0x4
 28774 0ae2 12       		.uleb128 0x12
 28775 0ae3 E90F0000 		.4byte	.LASF194
 28776 0ae7 08       		.byte	0x8
 28777 0ae8 BE01     		.2byte	0x1be
 28778 0aea EB000000 		.4byte	0xeb
 28779 0aee 08       		.byte	0x8
 28780 0aef 12       		.uleb128 0x12
 28781 0af0 9F030000 		.4byte	.LASF117
 28782 0af4 08       		.byte	0x8
 28783 0af5 BF01     		.2byte	0x1bf
 28784 0af7 FD0A0000 		.4byte	0xafd
 28785 0afb 0C       		.byte	0xc
 28786 0afc 00       		.byte	0
 28787 0afd 09       		.uleb128 0x9
 28788 0afe 97000000 		.4byte	0x97
 28789 0b02 0D0B0000 		.4byte	0xb0d
 28790 0b06 0A       		.uleb128 0xa
 28791 0b07 18010000 		.4byte	0x118
 28792 0b0b 03       		.byte	0x3
 28793 0b0c 00       		.byte	0
 28794 0b0d 11       		.uleb128 0x11
 28795 0b0e 8F020000 		.4byte	.LASF195
 28796 0b12 12       		.byte	0x12
 28797 0b13 08       		.byte	0x8
 28798 0b14 C601     		.2byte	0x1c6
 28799 0b16 4F0B0000 		.4byte	0xb4f
 28800 0b1a 12       		.uleb128 0x12
 28801 0b1b B8150000 		.4byte	.LASF196
 28802 0b1f 08       		.byte	0x8
 28803 0b20 C701     		.2byte	0x1c7
 28804 0b22 97000000 		.4byte	0x97
 28805 0b26 00       		.byte	0
 28806 0b27 12       		.uleb128 0x12
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 627


 28807 0b28 1A140000 		.4byte	.LASF197
 28808 0b2c 08       		.byte	0x8
 28809 0b2d C801     		.2byte	0x1c8
 28810 0b2f BC080000 		.4byte	0x8bc
 28811 0b33 02       		.byte	0x2
 28812 0b34 12       		.uleb128 0x12
 28813 0b35 61000000 		.4byte	.LASF198
 28814 0b39 08       		.byte	0x8
 28815 0b3a C901     		.2byte	0x1c9
 28816 0b3c 97000000 		.4byte	0x97
 28817 0b40 06       		.byte	0x6
 28818 0b41 12       		.uleb128 0x12
 28819 0b42 9F030000 		.4byte	.LASF117
 28820 0b46 08       		.byte	0x8
 28821 0b47 CA01     		.2byte	0x1ca
 28822 0b49 4F0B0000 		.4byte	0xb4f
 28823 0b4d 07       		.byte	0x7
 28824 0b4e 00       		.byte	0
 28825 0b4f 09       		.uleb128 0x9
 28826 0b50 97000000 		.4byte	0x97
 28827 0b54 5F0B0000 		.4byte	0xb5f
 28828 0b58 0A       		.uleb128 0xa
 28829 0b59 18010000 		.4byte	0x118
 28830 0b5d 09       		.byte	0x9
 28831 0b5e 00       		.byte	0
 28832 0b5f 14       		.uleb128 0x14
 28833 0b60 AC140000 		.4byte	.LASF199
 28834 0b64 F402     		.2byte	0x2f4
 28835 0b66 08       		.byte	0x8
 28836 0b67 D301     		.2byte	0x1d3
 28837 0b69 440C0000 		.4byte	0xc44
 28838 0b6d 12       		.uleb128 0x12
 28839 0b6e 8A0C0000 		.4byte	.LASF200
 28840 0b72 08       		.byte	0x8
 28841 0b73 D501     		.2byte	0x1d5
 28842 0b75 97000000 		.4byte	0x97
 28843 0b79 00       		.byte	0
 28844 0b7a 12       		.uleb128 0x12
 28845 0b7b 9F030000 		.4byte	.LASF117
 28846 0b7f 08       		.byte	0x8
 28847 0b80 D601     		.2byte	0x1d6
 28848 0b82 440C0000 		.4byte	0xc44
 28849 0b86 01       		.byte	0x1
 28850 0b87 13       		.uleb128 0x13
 28851 0b88 636E7400 		.ascii	"cnt\000"
 28852 0b8c 08       		.byte	0x8
 28853 0b8d D701     		.2byte	0x1d7
 28854 0b8f A4040000 		.4byte	0x4a4
 28855 0b93 10       		.byte	0x10
 28856 0b94 12       		.uleb128 0x12
 28857 0b95 56030000 		.4byte	.LASF201
 28858 0b99 08       		.byte	0x8
 28859 0b9a D801     		.2byte	0x1d8
 28860 0b9c 540C0000 		.4byte	0xc54
 28861 0ba0 80       		.byte	0x80
 28862 0ba1 13       		.uleb128 0x13
 28863 0ba2 64657600 		.ascii	"dev\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 628


 28864 0ba6 08       		.byte	0x8
 28865 0ba7 D901     		.2byte	0x1d9
 28866 0ba9 81050000 		.4byte	0x581
 28867 0bad A0       		.byte	0xa0
 28868 0bae 12       		.uleb128 0x12
 28869 0baf 24120000 		.4byte	.LASF202
 28870 0bb3 08       		.byte	0x8
 28871 0bb4 DA01     		.2byte	0x1da
 28872 0bb6 640C0000 		.4byte	0xc64
 28873 0bba B0       		.byte	0xb0
 28874 0bbb 15       		.uleb128 0x15
 28875 0bbc 656E6300 		.ascii	"enc\000"
 28876 0bc0 08       		.byte	0x8
 28877 0bc1 DB01     		.2byte	0x1db
 28878 0bc3 740C0000 		.4byte	0xc74
 28879 0bc7 9001     		.2byte	0x190
 28880 0bc9 15       		.uleb128 0x15
 28881 0bca 656D6700 		.ascii	"emg\000"
 28882 0bce 08       		.byte	0x8
 28883 0bcf DC01     		.2byte	0x1dc
 28884 0bd1 6D080000 		.4byte	0x86d
 28885 0bd5 F001     		.2byte	0x1f0
 28886 0bd7 15       		.uleb128 0x15
 28887 0bd8 696D7500 		.ascii	"imu\000"
 28888 0bdc 08       		.byte	0x8
 28889 0bdd DD01     		.2byte	0x1dd
 28890 0bdf DC080000 		.4byte	0x8dc
 28891 0be3 0002     		.2byte	0x200
 28892 0be5 15       		.uleb128 0x15
 28893 0be6 65787000 		.ascii	"exp\000"
 28894 0bea 08       		.byte	0x8
 28895 0beb DE01     		.2byte	0x1de
 28896 0bed 34090000 		.4byte	0x934
 28897 0bf1 2002     		.2byte	0x220
 28898 0bf3 16       		.uleb128 0x16
 28899 0bf4 A2000000 		.4byte	.LASF203
 28900 0bf8 08       		.byte	0x8
 28901 0bf9 DF01     		.2byte	0x1df
 28902 0bfb 840C0000 		.4byte	0xc84
 28903 0bff 4002     		.2byte	0x240
 28904 0c01 15       		.uleb128 0x15
 28905 0c02 534800   		.ascii	"SH\000"
 28906 0c05 08       		.byte	0x8
 28907 0c06 E101     		.2byte	0x1e1
 28908 0c08 E5090000 		.4byte	0x9e5
 28909 0c0c A002     		.2byte	0x2a0
 28910 0c0e 16       		.uleb128 0x16
 28911 0c0f 4C010000 		.4byte	.LASF204
 28912 0c13 08       		.byte	0x8
 28913 0c14 E201     		.2byte	0x1e2
 28914 0c16 340A0000 		.4byte	0xa34
 28915 0c1a B002     		.2byte	0x2b0
 28916 0c1c 15       		.uleb128 0x15
 28917 0c1d 4D5300   		.ascii	"MS\000"
 28918 0c20 08       		.byte	0x8
 28919 0c21 E301     		.2byte	0x1e3
 28920 0c23 760A0000 		.4byte	0xa76
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 629


 28921 0c27 C002     		.2byte	0x2c0
 28922 0c29 15       		.uleb128 0x15
 28923 0c2a 464200   		.ascii	"FB\000"
 28924 0c2d 08       		.byte	0x8
 28925 0c2e E401     		.2byte	0x1e4
 28926 0c30 BB0A0000 		.4byte	0xabb
 28927 0c34 D002     		.2byte	0x2d0
 28928 0c36 15       		.uleb128 0x15
 28929 0c37 575200   		.ascii	"WR\000"
 28930 0c3a 08       		.byte	0x8
 28931 0c3b E501     		.2byte	0x1e5
 28932 0c3d 0D0B0000 		.4byte	0xb0d
 28933 0c41 E002     		.2byte	0x2e0
 28934 0c43 00       		.byte	0
 28935 0c44 09       		.uleb128 0x9
 28936 0c45 97000000 		.4byte	0x97
 28937 0c49 540C0000 		.4byte	0xc54
 28938 0c4d 0A       		.uleb128 0xa
 28939 0c4e 18010000 		.4byte	0x118
 28940 0c52 0E       		.byte	0xe
 28941 0c53 00       		.byte	0
 28942 0c54 09       		.uleb128 0x9
 28943 0c55 97000000 		.4byte	0x97
 28944 0c59 640C0000 		.4byte	0xc64
 28945 0c5d 0A       		.uleb128 0xa
 28946 0c5e 18010000 		.4byte	0x118
 28947 0c62 1F       		.byte	0x1f
 28948 0c63 00       		.byte	0
 28949 0c64 09       		.uleb128 0x9
 28950 0c65 20060000 		.4byte	0x620
 28951 0c69 740C0000 		.4byte	0xc74
 28952 0c6d 0A       		.uleb128 0xa
 28953 0c6e 18010000 		.4byte	0x118
 28954 0c72 01       		.byte	0x1
 28955 0c73 00       		.byte	0
 28956 0c74 09       		.uleb128 0x9
 28957 0c75 BA070000 		.4byte	0x7ba
 28958 0c79 840C0000 		.4byte	0xc84
 28959 0c7d 0A       		.uleb128 0xa
 28960 0c7e 18010000 		.4byte	0x118
 28961 0c82 01       		.byte	0x1
 28962 0c83 00       		.byte	0
 28963 0c84 09       		.uleb128 0x9
 28964 0c85 B0090000 		.4byte	0x9b0
 28965 0c89 940C0000 		.4byte	0xc94
 28966 0c8d 0A       		.uleb128 0xa
 28967 0c8e 18010000 		.4byte	0x118
 28968 0c92 02       		.byte	0x2
 28969 0c93 00       		.byte	0
 28970 0c94 11       		.uleb128 0x11
 28971 0c95 430F0000 		.4byte	.LASF205
 28972 0c99 28       		.byte	0x28
 28973 0c9a 08       		.byte	0x8
 28974 0c9b ED01     		.2byte	0x1ed
 28975 0c9d F00C0000 		.4byte	0xcf0
 28976 0ca1 12       		.uleb128 0x12
 28977 0ca2 75050000 		.4byte	.LASF206
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 630


 28978 0ca6 08       		.byte	0x8
 28979 0ca7 EE01     		.2byte	0x1ee
 28980 0ca9 97000000 		.4byte	0x97
 28981 0cad 00       		.byte	0
 28982 0cae 12       		.uleb128 0x12
 28983 0caf AC030000 		.4byte	.LASF207
 28984 0cb3 08       		.byte	0x8
 28985 0cb4 EF01     		.2byte	0x1ef
 28986 0cb6 F00C0000 		.4byte	0xcf0
 28987 0cba 02       		.byte	0x2
 28988 0cbb 12       		.uleb128 0x12
 28989 0cbc 600E0000 		.4byte	.LASF208
 28990 0cc0 08       		.byte	0x8
 28991 0cc1 F001     		.2byte	0x1f0
 28992 0cc3 F00C0000 		.4byte	0xcf0
 28993 0cc7 08       		.byte	0x8
 28994 0cc8 12       		.uleb128 0x12
 28995 0cc9 4F0F0000 		.4byte	.LASF209
 28996 0ccd 08       		.byte	0x8
 28997 0cce F101     		.2byte	0x1f1
 28998 0cd0 F00C0000 		.4byte	0xcf0
 28999 0cd4 0E       		.byte	0xe
 29000 0cd5 12       		.uleb128 0x12
 29001 0cd6 EE080000 		.4byte	.LASF210
 29002 0cda 08       		.byte	0x8
 29003 0cdb F201     		.2byte	0x1f2
 29004 0cdd 000D0000 		.4byte	0xd00
 29005 0ce1 14       		.byte	0x14
 29006 0ce2 12       		.uleb128 0x12
 29007 0ce3 61020000 		.4byte	.LASF211
 29008 0ce7 08       		.byte	0x8
 29009 0ce8 F301     		.2byte	0x1f3
 29010 0cea C7000000 		.4byte	0xc7
 29011 0cee 24       		.byte	0x24
 29012 0cef 00       		.byte	0
 29013 0cf0 09       		.uleb128 0x9
 29014 0cf1 C7000000 		.4byte	0xc7
 29015 0cf5 000D0000 		.4byte	0xd00
 29016 0cf9 0A       		.uleb128 0xa
 29017 0cfa 18010000 		.4byte	0x118
 29018 0cfe 02       		.byte	0x2
 29019 0cff 00       		.byte	0
 29020 0d00 09       		.uleb128 0x9
 29021 0d01 EB000000 		.4byte	0xeb
 29022 0d05 100D0000 		.4byte	0xd10
 29023 0d09 0A       		.uleb128 0xa
 29024 0d0a 18010000 		.4byte	0x118
 29025 0d0e 03       		.byte	0x3
 29026 0d0f 00       		.byte	0
 29027 0d10 11       		.uleb128 0x11
 29028 0d11 94040000 		.4byte	.LASF212
 29029 0d15 06       		.byte	0x6
 29030 0d16 08       		.byte	0x8
 29031 0d17 0302     		.2byte	0x203
 29032 0d19 520D0000 		.4byte	0xd52
 29033 0d1d 12       		.uleb128 0x12
 29034 0d1e 56080000 		.4byte	.LASF213
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 631


 29035 0d22 08       		.byte	0x8
 29036 0d23 0402     		.2byte	0x204
 29037 0d25 97000000 		.4byte	0x97
 29038 0d29 00       		.byte	0
 29039 0d2a 12       		.uleb128 0x12
 29040 0d2b 05160000 		.4byte	.LASF214
 29041 0d2f 08       		.byte	0x8
 29042 0d30 0502     		.2byte	0x205
 29043 0d32 97000000 		.4byte	0x97
 29044 0d36 01       		.byte	0x1
 29045 0d37 12       		.uleb128 0x12
 29046 0d38 F7060000 		.4byte	.LASF215
 29047 0d3c 08       		.byte	0x8
 29048 0d3d 0602     		.2byte	0x206
 29049 0d3f C7000000 		.4byte	0xc7
 29050 0d43 02       		.byte	0x2
 29051 0d44 12       		.uleb128 0x12
 29052 0d45 EE0A0000 		.4byte	.LASF216
 29053 0d49 08       		.byte	0x8
 29054 0d4a 0702     		.2byte	0x207
 29055 0d4c C7000000 		.4byte	0xc7
 29056 0d50 04       		.byte	0x4
 29057 0d51 00       		.byte	0
 29058 0d52 17       		.uleb128 0x17
 29059 0d53 8E100000 		.4byte	.LASF406
 29060 0d57 02       		.byte	0x2
 29061 0d58 1403     		.2byte	0x314
 29062 0d5a 8C000000 		.4byte	0x8c
 29063 0d5e 03       		.byte	0x3
 29064 0d5f 7C0D0000 		.4byte	0xd7c
 29065 0d63 18       		.uleb128 0x18
 29066 0d64 6F050000 		.4byte	.LASF304
 29067 0d68 02       		.byte	0x2
 29068 0d69 1403     		.2byte	0x314
 29069 0d6b 8C000000 		.4byte	0x8c
 29070 0d6f 19       		.uleb128 0x19
 29071 0d70 75020000 		.4byte	.LASF407
 29072 0d74 02       		.byte	0x2
 29073 0d75 1603     		.2byte	0x316
 29074 0d77 8C000000 		.4byte	0x8c
 29075 0d7b 00       		.byte	0
 29076 0d7c 1A       		.uleb128 0x1a
 29077 0d7d DD110000 		.4byte	.LASF217
 29078 0d81 01       		.byte	0x1
 29079 0d82 3D       		.byte	0x3d
 29080 0d83 00000000 		.4byte	.LFB64
 29081 0d87 1C050000 		.4byte	.LFE64-.LFB64
 29082 0d8b 01       		.uleb128 0x1
 29083 0d8c 9C       		.byte	0x9c
 29084 0d8d 850E0000 		.4byte	0xe85
 29085 0d91 1B       		.uleb128 0x1b
 29086 0d92 FD060000 		.4byte	.LASF219
 29087 0d96 01       		.byte	0x1
 29088 0d97 3F       		.byte	0x3f
 29089 0d98 97000000 		.4byte	0x97
 29090 0d9c 02       		.uleb128 0x2
 29091 0d9d 91       		.byte	0x91
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 632


 29092 0d9e 77       		.sleb128 -9
 29093 0d9f 1C       		.uleb128 0x1c
 29094 0da0 520D0000 		.4byte	0xd52
 29095 0da4 48030000 		.4byte	.LBB12
 29096 0da8 08000000 		.4byte	.LBE12-.LBB12
 29097 0dac 01       		.byte	0x1
 29098 0dad 9C       		.byte	0x9c
 29099 0dae CD0D0000 		.4byte	0xdcd
 29100 0db2 1D       		.uleb128 0x1d
 29101 0db3 630D0000 		.4byte	0xd63
 29102 0db7 02       		.uleb128 0x2
 29103 0db8 91       		.byte	0x91
 29104 0db9 60       		.sleb128 -32
 29105 0dba 1E       		.uleb128 0x1e
 29106 0dbb 48030000 		.4byte	.LBB13
 29107 0dbf 08000000 		.4byte	.LBE13-.LBB13
 29108 0dc3 1F       		.uleb128 0x1f
 29109 0dc4 6F0D0000 		.4byte	0xd6f
 29110 0dc8 02       		.uleb128 0x2
 29111 0dc9 91       		.byte	0x91
 29112 0dca 5C       		.sleb128 -36
 29113 0dcb 00       		.byte	0
 29114 0dcc 00       		.byte	0
 29115 0dcd 1C       		.uleb128 0x1c
 29116 0dce 520D0000 		.4byte	0xd52
 29117 0dd2 66030000 		.4byte	.LBB14
 29118 0dd6 08000000 		.4byte	.LBE14-.LBB14
 29119 0dda 01       		.byte	0x1
 29120 0ddb A8       		.byte	0xa8
 29121 0ddc FB0D0000 		.4byte	0xdfb
 29122 0de0 1D       		.uleb128 0x1d
 29123 0de1 630D0000 		.4byte	0xd63
 29124 0de5 02       		.uleb128 0x2
 29125 0de6 91       		.byte	0x91
 29126 0de7 70       		.sleb128 -16
 29127 0de8 1E       		.uleb128 0x1e
 29128 0de9 66030000 		.4byte	.LBB15
 29129 0ded 08000000 		.4byte	.LBE15-.LBB15
 29130 0df1 1F       		.uleb128 0x1f
 29131 0df2 6F0D0000 		.4byte	0xd6f
 29132 0df6 02       		.uleb128 0x2
 29133 0df7 91       		.byte	0x91
 29134 0df8 58       		.sleb128 -40
 29135 0df9 00       		.byte	0
 29136 0dfa 00       		.byte	0
 29137 0dfb 20       		.uleb128 0x20
 29138 0dfc 520D0000 		.4byte	0xd52
 29139 0e00 A8040000 		.4byte	.LBB16
 29140 0e04 08000000 		.4byte	.LBE16-.LBB16
 29141 0e08 01       		.byte	0x1
 29142 0e09 0401     		.2byte	0x104
 29143 0e0b 2A0E0000 		.4byte	0xe2a
 29144 0e0f 1D       		.uleb128 0x1d
 29145 0e10 630D0000 		.4byte	0xd63
 29146 0e14 02       		.uleb128 0x2
 29147 0e15 91       		.byte	0x91
 29148 0e16 6C       		.sleb128 -20
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 633


 29149 0e17 1E       		.uleb128 0x1e
 29150 0e18 A8040000 		.4byte	.LBB17
 29151 0e1c 08000000 		.4byte	.LBE17-.LBB17
 29152 0e20 1F       		.uleb128 0x1f
 29153 0e21 6F0D0000 		.4byte	0xd6f
 29154 0e25 02       		.uleb128 0x2
 29155 0e26 91       		.byte	0x91
 29156 0e27 54       		.sleb128 -44
 29157 0e28 00       		.byte	0
 29158 0e29 00       		.byte	0
 29159 0e2a 20       		.uleb128 0x20
 29160 0e2b 520D0000 		.4byte	0xd52
 29161 0e2f D8040000 		.4byte	.LBB18
 29162 0e33 08000000 		.4byte	.LBE18-.LBB18
 29163 0e37 01       		.byte	0x1
 29164 0e38 2201     		.2byte	0x122
 29165 0e3a 590E0000 		.4byte	0xe59
 29166 0e3e 1D       		.uleb128 0x1d
 29167 0e3f 630D0000 		.4byte	0xd63
 29168 0e43 02       		.uleb128 0x2
 29169 0e44 91       		.byte	0x91
 29170 0e45 68       		.sleb128 -24
 29171 0e46 1E       		.uleb128 0x1e
 29172 0e47 D8040000 		.4byte	.LBB19
 29173 0e4b 08000000 		.4byte	.LBE19-.LBB19
 29174 0e4f 1F       		.uleb128 0x1f
 29175 0e50 6F0D0000 		.4byte	0xd6f
 29176 0e54 02       		.uleb128 0x2
 29177 0e55 91       		.byte	0x91
 29178 0e56 50       		.sleb128 -48
 29179 0e57 00       		.byte	0
 29180 0e58 00       		.byte	0
 29181 0e59 21       		.uleb128 0x21
 29182 0e5a 520D0000 		.4byte	0xd52
 29183 0e5e F0040000 		.4byte	.LBB20
 29184 0e62 08000000 		.4byte	.LBE20-.LBB20
 29185 0e66 01       		.byte	0x1
 29186 0e67 2801     		.2byte	0x128
 29187 0e69 1D       		.uleb128 0x1d
 29188 0e6a 630D0000 		.4byte	0xd63
 29189 0e6e 02       		.uleb128 0x2
 29190 0e6f 91       		.byte	0x91
 29191 0e70 64       		.sleb128 -28
 29192 0e71 1E       		.uleb128 0x1e
 29193 0e72 F0040000 		.4byte	.LBB21
 29194 0e76 08000000 		.4byte	.LBE21-.LBB21
 29195 0e7a 1F       		.uleb128 0x1f
 29196 0e7b 6F0D0000 		.4byte	0xd6f
 29197 0e7f 02       		.uleb128 0x2
 29198 0e80 91       		.byte	0x91
 29199 0e81 4C       		.sleb128 -52
 29200 0e82 00       		.byte	0
 29201 0e83 00       		.byte	0
 29202 0e84 00       		.byte	0
 29203 0e85 22       		.uleb128 0x22
 29204 0e86 00000000 		.4byte	.LASF218
 29205 0e8a 01       		.byte	0x1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 634


 29206 0e8b 3601     		.2byte	0x136
 29207 0e8d 00000000 		.4byte	.LFB65
 29208 0e91 22000000 		.4byte	.LFE65-.LFB65
 29209 0e95 01       		.uleb128 0x1
 29210 0e96 9C       		.byte	0x9c
 29211 0e97 AC0E0000 		.4byte	0xeac
 29212 0e9b 23       		.uleb128 0x23
 29213 0e9c FE050000 		.4byte	.LASF220
 29214 0ea0 01       		.byte	0x1
 29215 0ea1 3701     		.2byte	0x137
 29216 0ea3 AC0E0000 		.4byte	0xeac
 29217 0ea7 03       		.uleb128 0x3
 29218 0ea8 91       		.byte	0x91
 29219 0ea9 9C74     		.sleb128 -1508
 29220 0eab 00       		.byte	0
 29221 0eac 09       		.uleb128 0x9
 29222 0ead F9000000 		.4byte	0xf9
 29223 0eb1 BD0E0000 		.4byte	0xebd
 29224 0eb5 24       		.uleb128 0x24
 29225 0eb6 18010000 		.4byte	0x118
 29226 0eba DB05     		.2byte	0x5db
 29227 0ebc 00       		.byte	0
 29228 0ebd 22       		.uleb128 0x22
 29229 0ebe DD140000 		.4byte	.LASF221
 29230 0ec2 01       		.byte	0x1
 29231 0ec3 4201     		.2byte	0x142
 29232 0ec5 00000000 		.4byte	.LFB66
 29233 0ec9 64010000 		.4byte	.LFE66-.LFB66
 29234 0ecd 01       		.uleb128 0x1
 29235 0ece 9C       		.byte	0x9c
 29236 0ecf 060F0000 		.4byte	0xf06
 29237 0ed3 25       		.uleb128 0x25
 29238 0ed4 2D140000 		.4byte	.LASF224
 29239 0ed8 01       		.byte	0x1
 29240 0ed9 4201     		.2byte	0x142
 29241 0edb A3000000 		.4byte	0xa3
 29242 0edf 04       		.uleb128 0x4
 29243 0ee0 91       		.byte	0x91
 29244 0ee1 B6C47E   		.sleb128 -24010
 29245 0ee4 23       		.uleb128 0x23
 29246 0ee5 FE050000 		.4byte	.LASF220
 29247 0ee9 01       		.byte	0x1
 29248 0eea 4301     		.2byte	0x143
 29249 0eec 060F0000 		.4byte	0xf06
 29250 0ef0 03       		.uleb128 0x3
 29251 0ef1 91       		.byte	0x91
 29252 0ef2 D860     		.sleb128 -4008
 29253 0ef4 23       		.uleb128 0x23
 29254 0ef5 BC080000 		.4byte	.LASF222
 29255 0ef9 01       		.byte	0x1
 29256 0efa 4401     		.2byte	0x144
 29257 0efc 170F0000 		.4byte	0xf17
 29258 0f00 04       		.uleb128 0x4
 29259 0f01 91       		.byte	0x91
 29260 0f02 B8C47E   		.sleb128 -24008
 29261 0f05 00       		.byte	0
 29262 0f06 09       		.uleb128 0x9
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 635


 29263 0f07 F9000000 		.4byte	0xf9
 29264 0f0b 170F0000 		.4byte	0xf17
 29265 0f0f 24       		.uleb128 0x24
 29266 0f10 18010000 		.4byte	0x118
 29267 0f14 9F0F     		.2byte	0xf9f
 29268 0f16 00       		.byte	0
 29269 0f17 09       		.uleb128 0x9
 29270 0f18 F9000000 		.4byte	0xf9
 29271 0f1c 280F0000 		.4byte	0xf28
 29272 0f20 24       		.uleb128 0x24
 29273 0f21 18010000 		.4byte	0x118
 29274 0f25 1F4E     		.2byte	0x4e1f
 29275 0f27 00       		.byte	0
 29276 0f28 22       		.uleb128 0x22
 29277 0f29 1B020000 		.4byte	.LASF223
 29278 0f2d 01       		.byte	0x1
 29279 0f2e 7401     		.2byte	0x174
 29280 0f30 00000000 		.4byte	.LFB67
 29281 0f34 D6320000 		.4byte	.LFE67-.LFB67
 29282 0f38 01       		.uleb128 0x1
 29283 0f39 9C       		.byte	0x9c
 29284 0f3a CC100000 		.4byte	0x10cc
 29285 0f3e 25       		.uleb128 0x25
 29286 0f3f 100E0000 		.4byte	.LASF225
 29287 0f43 01       		.byte	0x1
 29288 0f44 7401     		.2byte	0x174
 29289 0f46 CC100000 		.4byte	0x10cc
 29290 0f4a 03       		.uleb128 0x3
 29291 0f4b 91       		.byte	0x91
 29292 0f4c CC59     		.sleb128 -4916
 29293 0f4e 25       		.uleb128 0x25
 29294 0f4f B6140000 		.4byte	.LASF226
 29295 0f53 01       		.byte	0x1
 29296 0f54 7401     		.2byte	0x174
 29297 0f56 D2100000 		.4byte	0x10d2
 29298 0f5a 03       		.uleb128 0x3
 29299 0f5b 91       		.byte	0x91
 29300 0f5c C859     		.sleb128 -4920
 29301 0f5e 25       		.uleb128 0x25
 29302 0f5f B8030000 		.4byte	.LASF227
 29303 0f63 01       		.byte	0x1
 29304 0f64 7501     		.2byte	0x175
 29305 0f66 D2100000 		.4byte	0x10d2
 29306 0f6a 03       		.uleb128 0x3
 29307 0f6b 91       		.byte	0x91
 29308 0f6c C459     		.sleb128 -4924
 29309 0f6e 25       		.uleb128 0x25
 29310 0f6f 490D0000 		.4byte	.LASF228
 29311 0f73 01       		.byte	0x1
 29312 0f74 7501     		.2byte	0x175
 29313 0f76 D2100000 		.4byte	0x10d2
 29314 0f7a 03       		.uleb128 0x3
 29315 0f7b 91       		.byte	0x91
 29316 0f7c C059     		.sleb128 -4928
 29317 0f7e 25       		.uleb128 0x25
 29318 0f7f F7130000 		.4byte	.LASF229
 29319 0f83 01       		.byte	0x1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 636


 29320 0f84 7601     		.2byte	0x176
 29321 0f86 D2100000 		.4byte	0x10d2
 29322 0f8a 02       		.uleb128 0x2
 29323 0f8b 91       		.byte	0x91
 29324 0f8c 00       		.sleb128 0
 29325 0f8d 25       		.uleb128 0x25
 29326 0f8e 4B080000 		.4byte	.LASF230
 29327 0f92 01       		.byte	0x1
 29328 0f93 7601     		.2byte	0x176
 29329 0f95 D8100000 		.4byte	0x10d8
 29330 0f99 02       		.uleb128 0x2
 29331 0f9a 91       		.byte	0x91
 29332 0f9b 04       		.sleb128 4
 29333 0f9c 25       		.uleb128 0x25
 29334 0f9d 3B0B0000 		.4byte	.LASF231
 29335 0fa1 01       		.byte	0x1
 29336 0fa2 7701     		.2byte	0x177
 29337 0fa4 D2100000 		.4byte	0x10d2
 29338 0fa8 02       		.uleb128 0x2
 29339 0fa9 91       		.byte	0x91
 29340 0faa 08       		.sleb128 8
 29341 0fab 25       		.uleb128 0x25
 29342 0fac CE080000 		.4byte	.LASF232
 29343 0fb0 01       		.byte	0x1
 29344 0fb1 7701     		.2byte	0x177
 29345 0fb3 D8100000 		.4byte	0x10d8
 29346 0fb7 02       		.uleb128 0x2
 29347 0fb8 91       		.byte	0x91
 29348 0fb9 0C       		.sleb128 12
 29349 0fba 23       		.uleb128 0x23
 29350 0fbb 6D060000 		.4byte	.LASF233
 29351 0fbf 01       		.byte	0x1
 29352 0fc0 7A01     		.2byte	0x17a
 29353 0fc2 DE100000 		.4byte	0x10de
 29354 0fc6 03       		.uleb128 0x3
 29355 0fc7 91       		.byte	0x91
 29356 0fc8 945A     		.sleb128 -4844
 29357 0fca 23       		.uleb128 0x23
 29358 0fcb 390C0000 		.4byte	.LASF234
 29359 0fcf 01       		.byte	0x1
 29360 0fd0 7B01     		.2byte	0x17b
 29361 0fd2 A3000000 		.4byte	0xa3
 29362 0fd6 02       		.uleb128 0x2
 29363 0fd7 91       		.byte	0x91
 29364 0fd8 60       		.sleb128 -32
 29365 0fd9 26       		.uleb128 0x26
 29366 0fda 6900     		.ascii	"i\000"
 29367 0fdc 01       		.byte	0x1
 29368 0fdd 7E01     		.2byte	0x17e
 29369 0fdf 97000000 		.4byte	0x97
 29370 0fe3 02       		.uleb128 0x2
 29371 0fe4 91       		.byte	0x91
 29372 0fe5 67       		.sleb128 -25
 29373 0fe6 26       		.uleb128 0x26
 29374 0fe7 6A00     		.ascii	"j\000"
 29375 0fe9 01       		.byte	0x1
 29376 0fea 7E01     		.2byte	0x17e
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 637


 29377 0fec 97000000 		.4byte	0x97
 29378 0ff0 02       		.uleb128 0x2
 29379 0ff1 91       		.byte	0x91
 29380 0ff2 66       		.sleb128 -26
 29381 0ff3 26       		.uleb128 0x26
 29382 0ff4 69647800 		.ascii	"idx\000"
 29383 0ff8 01       		.byte	0x1
 29384 0ff9 7F01     		.2byte	0x17f
 29385 0ffb 97000000 		.4byte	0x97
 29386 0fff 02       		.uleb128 0x2
 29387 1000 91       		.byte	0x91
 29388 1001 65       		.sleb128 -27
 29389 1002 23       		.uleb128 0x23
 29390 1003 12120000 		.4byte	.LASF235
 29391 1007 01       		.byte	0x1
 29392 1008 8001     		.2byte	0x180
 29393 100a 97000000 		.4byte	0x97
 29394 100e 02       		.uleb128 0x2
 29395 100f 91       		.byte	0x91
 29396 1010 64       		.sleb128 -28
 29397 1011 26       		.uleb128 0x26
 29398 1012 736F6400 		.ascii	"sod\000"
 29399 1016 01       		.byte	0x1
 29400 1017 8101     		.2byte	0x181
 29401 1019 97000000 		.4byte	0x97
 29402 101d 02       		.uleb128 0x2
 29403 101e 91       		.byte	0x91
 29404 101f 63       		.sleb128 -29
 29405 1020 23       		.uleb128 0x23
 29406 1021 1A0D0000 		.4byte	.LASF236
 29407 1025 01       		.byte	0x1
 29408 1026 8201     		.2byte	0x182
 29409 1028 97000000 		.4byte	0x97
 29410 102c 02       		.uleb128 0x2
 29411 102d 91       		.byte	0x91
 29412 102e 62       		.sleb128 -30
 29413 102f 23       		.uleb128 0x23
 29414 1030 EB150000 		.4byte	.LASF237
 29415 1034 01       		.byte	0x1
 29416 1035 8301     		.2byte	0x183
 29417 1037 EF100000 		.4byte	0x10ef
 29418 103b 03       		.uleb128 0x3
 29419 103c 91       		.byte	0x91
 29420 103d E059     		.sleb128 -4896
 29421 103f 23       		.uleb128 0x23
 29422 1040 DF130000 		.4byte	.LASF238
 29423 1044 01       		.byte	0x1
 29424 1045 8401     		.2byte	0x184
 29425 1047 EB000000 		.4byte	0xeb
 29426 104b 03       		.uleb128 0x3
 29427 104c 91       		.byte	0x91
 29428 104d DC59     		.sleb128 -4900
 29429 104f 23       		.uleb128 0x23
 29430 1050 A3120000 		.4byte	.LASF239
 29431 1054 01       		.byte	0x1
 29432 1055 8501     		.2byte	0x185
 29433 1057 C7000000 		.4byte	0xc7
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 638


 29434 105b 03       		.uleb128 0x3
 29435 105c 91       		.byte	0x91
 29436 105d DA59     		.sleb128 -4902
 29437 105f 23       		.uleb128 0x23
 29438 1060 920D0000 		.4byte	.LASF240
 29439 1064 01       		.byte	0x1
 29440 1065 8601     		.2byte	0x186
 29441 1067 A3000000 		.4byte	0xa3
 29442 106b 03       		.uleb128 0x3
 29443 106c 91       		.byte	0x91
 29444 106d D859     		.sleb128 -4904
 29445 106f 23       		.uleb128 0x23
 29446 1070 00140000 		.4byte	.LASF241
 29447 1074 01       		.byte	0x1
 29448 1075 8701     		.2byte	0x187
 29449 1077 D3000000 		.4byte	0xd3
 29450 107b 03       		.uleb128 0x3
 29451 107c 91       		.byte	0x91
 29452 107d D459     		.sleb128 -4908
 29453 107f 23       		.uleb128 0x23
 29454 1080 230F0000 		.4byte	.LASF242
 29455 1084 01       		.byte	0x1
 29456 1085 8801     		.2byte	0x188
 29457 1087 AF000000 		.4byte	0xaf
 29458 108b 03       		.uleb128 0x3
 29459 108c 91       		.byte	0x91
 29460 108d D059     		.sleb128 -4912
 29461 108f 23       		.uleb128 0x23
 29462 1090 BC0E0000 		.4byte	.LASF243
 29463 1094 01       		.byte	0x1
 29464 1095 8A01     		.2byte	0x18a
 29465 1097 97000000 		.4byte	0x97
 29466 109b 02       		.uleb128 0x2
 29467 109c 91       		.byte	0x91
 29468 109d 5F       		.sleb128 -33
 29469 109e 23       		.uleb128 0x23
 29470 109f 76010000 		.4byte	.LASF244
 29471 10a3 01       		.byte	0x1
 29472 10a4 8B01     		.2byte	0x18b
 29473 10a6 97000000 		.4byte	0x97
 29474 10aa 02       		.uleb128 0x2
 29475 10ab 91       		.byte	0x91
 29476 10ac 5E       		.sleb128 -34
 29477 10ad 23       		.uleb128 0x23
 29478 10ae 0A0C0000 		.4byte	.LASF245
 29479 10b2 01       		.byte	0x1
 29480 10b3 8D01     		.2byte	0x18d
 29481 10b5 D2100000 		.4byte	0x10d2
 29482 10b9 02       		.uleb128 0x2
 29483 10ba 91       		.byte	0x91
 29484 10bb 58       		.sleb128 -40
 29485 10bc 23       		.uleb128 0x23
 29486 10bd 0A020000 		.4byte	.LASF246
 29487 10c1 01       		.byte	0x1
 29488 10c2 8E01     		.2byte	0x18e
 29489 10c4 D2100000 		.4byte	0x10d2
 29490 10c8 02       		.uleb128 0x2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 639


 29491 10c9 91       		.byte	0x91
 29492 10ca 54       		.sleb128 -44
 29493 10cb 00       		.byte	0
 29494 10cc 07       		.uleb128 0x7
 29495 10cd 04       		.byte	0x4
 29496 10ce D2100000 		.4byte	0x10d2
 29497 10d2 07       		.uleb128 0x7
 29498 10d3 04       		.byte	0x4
 29499 10d4 97000000 		.4byte	0x97
 29500 10d8 07       		.uleb128 0x7
 29501 10d9 04       		.byte	0x4
 29502 10da 25010000 		.4byte	0x125
 29503 10de 09       		.uleb128 0x9
 29504 10df 97000000 		.4byte	0x97
 29505 10e3 EF100000 		.4byte	0x10ef
 29506 10e7 24       		.uleb128 0x24
 29507 10e8 18010000 		.4byte	0x118
 29508 10ec BF12     		.2byte	0x12bf
 29509 10ee 00       		.byte	0
 29510 10ef 09       		.uleb128 0x9
 29511 10f0 F9000000 		.4byte	0xf9
 29512 10f4 FF100000 		.4byte	0x10ff
 29513 10f8 0A       		.uleb128 0xa
 29514 10f9 18010000 		.4byte	0x118
 29515 10fd 31       		.byte	0x31
 29516 10fe 00       		.byte	0
 29517 10ff 22       		.uleb128 0x22
 29518 1100 0B100000 		.4byte	.LASF247
 29519 1104 01       		.byte	0x1
 29520 1105 8203     		.2byte	0x382
 29521 1107 00000000 		.4byte	.LFB68
 29522 110b 3C190000 		.4byte	.LFE68-.LFB68
 29523 110f 01       		.uleb128 0x1
 29524 1110 9C       		.byte	0x9c
 29525 1111 DD120000 		.4byte	0x12dd
 29526 1115 25       		.uleb128 0x25
 29527 1116 56070000 		.4byte	.LASF248
 29528 111a 01       		.byte	0x1
 29529 111b 8203     		.2byte	0x382
 29530 111d A3000000 		.4byte	0xa3
 29531 1121 03       		.uleb128 0x3
 29532 1122 91       		.byte	0x91
 29533 1123 EE74     		.sleb128 -1426
 29534 1125 26       		.uleb128 0x26
 29535 1126 6900     		.ascii	"i\000"
 29536 1128 01       		.byte	0x1
 29537 1129 8303     		.2byte	0x383
 29538 112b 97000000 		.4byte	0x97
 29539 112f 02       		.uleb128 0x2
 29540 1130 91       		.byte	0x91
 29541 1131 6F       		.sleb128 -17
 29542 1132 26       		.uleb128 0x26
 29543 1133 6A00     		.ascii	"j\000"
 29544 1135 01       		.byte	0x1
 29545 1136 8303     		.2byte	0x383
 29546 1138 97000000 		.4byte	0x97
 29547 113c 02       		.uleb128 0x2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 640


 29548 113d 91       		.byte	0x91
 29549 113e 6E       		.sleb128 -18
 29550 113f 26       		.uleb128 0x26
 29551 1140 736F6400 		.ascii	"sod\000"
 29552 1144 01       		.byte	0x1
 29553 1145 8403     		.2byte	0x384
 29554 1147 97000000 		.4byte	0x97
 29555 114b 02       		.uleb128 0x2
 29556 114c 91       		.byte	0x91
 29557 114d 6D       		.sleb128 -19
 29558 114e 23       		.uleb128 0x23
 29559 114f F40B0000 		.4byte	.LASF249
 29560 1153 01       		.byte	0x1
 29561 1154 8503     		.2byte	0x385
 29562 1156 97000000 		.4byte	0x97
 29563 115a 02       		.uleb128 0x2
 29564 115b 91       		.byte	0x91
 29565 115c 62       		.sleb128 -30
 29566 115d 23       		.uleb128 0x23
 29567 115e A3120000 		.4byte	.LASF239
 29568 1162 01       		.byte	0x1
 29569 1163 8603     		.2byte	0x386
 29570 1165 C7000000 		.4byte	0xc7
 29571 1169 02       		.uleb128 0x2
 29572 116a 91       		.byte	0x91
 29573 116b 60       		.sleb128 -32
 29574 116c 23       		.uleb128 0x23
 29575 116d 920D0000 		.4byte	.LASF240
 29576 1171 01       		.byte	0x1
 29577 1172 8703     		.2byte	0x387
 29578 1174 A3000000 		.4byte	0xa3
 29579 1178 02       		.uleb128 0x2
 29580 1179 91       		.byte	0x91
 29581 117a 5E       		.sleb128 -34
 29582 117b 23       		.uleb128 0x23
 29583 117c 00140000 		.4byte	.LASF241
 29584 1180 01       		.byte	0x1
 29585 1181 8803     		.2byte	0x388
 29586 1183 D3000000 		.4byte	0xd3
 29587 1187 02       		.uleb128 0x2
 29588 1188 91       		.byte	0x91
 29589 1189 58       		.sleb128 -40
 29590 118a 23       		.uleb128 0x23
 29591 118b 230F0000 		.4byte	.LASF242
 29592 118f 01       		.byte	0x1
 29593 1190 8903     		.2byte	0x389
 29594 1192 AF000000 		.4byte	0xaf
 29595 1196 02       		.uleb128 0x2
 29596 1197 91       		.byte	0x91
 29597 1198 54       		.sleb128 -44
 29598 1199 23       		.uleb128 0x23
 29599 119a DF130000 		.4byte	.LASF238
 29600 119e 01       		.byte	0x1
 29601 119f 8A03     		.2byte	0x38a
 29602 11a1 EB000000 		.4byte	0xeb
 29603 11a5 02       		.uleb128 0x2
 29604 11a6 91       		.byte	0x91
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 641


 29605 11a7 50       		.sleb128 -48
 29606 11a8 23       		.uleb128 0x23
 29607 11a9 BC0E0000 		.4byte	.LASF243
 29608 11ad 01       		.byte	0x1
 29609 11ae 8C03     		.2byte	0x38c
 29610 11b0 97000000 		.4byte	0x97
 29611 11b4 02       		.uleb128 0x2
 29612 11b5 91       		.byte	0x91
 29613 11b6 65       		.sleb128 -27
 29614 11b7 23       		.uleb128 0x23
 29615 11b8 76010000 		.4byte	.LASF244
 29616 11bc 01       		.byte	0x1
 29617 11bd 8D03     		.2byte	0x38d
 29618 11bf 97000000 		.4byte	0x97
 29619 11c3 02       		.uleb128 0x2
 29620 11c4 91       		.byte	0x91
 29621 11c5 64       		.sleb128 -28
 29622 11c6 23       		.uleb128 0x23
 29623 11c7 CE030000 		.4byte	.LASF250
 29624 11cb 01       		.byte	0x1
 29625 11cc 9003     		.2byte	0x390
 29626 11ce DD120000 		.4byte	0x12dd
 29627 11d2 02       		.uleb128 0x2
 29628 11d3 91       		.byte	0x91
 29629 11d4 68       		.sleb128 -24
 29630 11d5 23       		.uleb128 0x23
 29631 11d6 100E0000 		.4byte	.LASF225
 29632 11da 01       		.byte	0x1
 29633 11db 9803     		.2byte	0x398
 29634 11dd E3120000 		.4byte	0x12e3
 29635 11e1 03       		.uleb128 0x3
 29636 11e2 91       		.byte	0x91
 29637 11e3 847D     		.sleb128 -380
 29638 11e5 23       		.uleb128 0x23
 29639 11e6 B6140000 		.4byte	.LASF226
 29640 11ea 01       		.byte	0x1
 29641 11eb F603     		.2byte	0x3f6
 29642 11ed F3120000 		.4byte	0x12f3
 29643 11f1 03       		.uleb128 0x3
 29644 11f2 91       		.byte	0x91
 29645 11f3 B07C     		.sleb128 -464
 29646 11f5 23       		.uleb128 0x23
 29647 11f6 B8030000 		.4byte	.LASF227
 29648 11fa 01       		.byte	0x1
 29649 11fb 1204     		.2byte	0x412
 29650 11fd F3120000 		.4byte	0x12f3
 29651 1201 03       		.uleb128 0x3
 29652 1202 91       		.byte	0x91
 29653 1203 DC7B     		.sleb128 -548
 29654 1205 23       		.uleb128 0x23
 29655 1206 490D0000 		.4byte	.LASF228
 29656 120a 01       		.byte	0x1
 29657 120b 2E04     		.2byte	0x42e
 29658 120d F3120000 		.4byte	0x12f3
 29659 1211 03       		.uleb128 0x3
 29660 1212 91       		.byte	0x91
 29661 1213 887B     		.sleb128 -632
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 642


 29662 1215 23       		.uleb128 0x23
 29663 1216 4B080000 		.4byte	.LASF230
 29664 121a 01       		.byte	0x1
 29665 121b 4B04     		.2byte	0x44b
 29666 121d 03130000 		.4byte	0x1303
 29667 1221 03       		.uleb128 0x3
 29668 1222 91       		.byte	0x91
 29669 1223 BC78     		.sleb128 -964
 29670 1225 23       		.uleb128 0x23
 29671 1226 3E150000 		.4byte	.LASF251
 29672 122a 01       		.byte	0x1
 29673 122b 6804     		.2byte	0x468
 29674 122d 13130000 		.4byte	0x1313
 29675 1231 03       		.uleb128 0x3
 29676 1232 91       		.byte	0x91
 29677 1233 C477     		.sleb128 -1084
 29678 1235 23       		.uleb128 0x23
 29679 1236 20000000 		.4byte	.LASF252
 29680 123a 01       		.byte	0x1
 29681 123b 6B04     		.2byte	0x46b
 29682 123d 23130000 		.4byte	0x1323
 29683 1241 03       		.uleb128 0x3
 29684 1242 91       		.byte	0x91
 29685 1243 8C77     		.sleb128 -1140
 29686 1245 23       		.uleb128 0x23
 29687 1246 CE080000 		.4byte	.LASF232
 29688 124a 01       		.byte	0x1
 29689 124b 7304     		.2byte	0x473
 29690 124d 33130000 		.4byte	0x1333
 29691 1251 03       		.uleb128 0x3
 29692 1252 91       		.byte	0x91
 29693 1253 DC76     		.sleb128 -1188
 29694 1255 23       		.uleb128 0x23
 29695 1256 F7130000 		.4byte	.LASF229
 29696 125a 01       		.byte	0x1
 29697 125b 8204     		.2byte	0x482
 29698 125d 540C0000 		.4byte	0xc54
 29699 1261 03       		.uleb128 0x3
 29700 1262 91       		.byte	0x91
 29701 1263 BC76     		.sleb128 -1220
 29702 1265 23       		.uleb128 0x23
 29703 1266 160E0000 		.4byte	.LASF253
 29704 126a 01       		.byte	0x1
 29705 126b 8304     		.2byte	0x483
 29706 126d 43130000 		.4byte	0x1343
 29707 1271 03       		.uleb128 0x3
 29708 1272 91       		.byte	0x91
 29709 1273 B076     		.sleb128 -1232
 29710 1275 23       		.uleb128 0x23
 29711 1276 330D0000 		.4byte	.LASF254
 29712 127a 01       		.byte	0x1
 29713 127b 8404     		.2byte	0x484
 29714 127d 53130000 		.4byte	0x1353
 29715 1281 03       		.uleb128 0x3
 29716 1282 91       		.byte	0x91
 29717 1283 9C76     		.sleb128 -1252
 29718 1285 23       		.uleb128 0x23
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 643


 29719 1286 350F0000 		.4byte	.LASF255
 29720 128a 01       		.byte	0x1
 29721 128b 8504     		.2byte	0x485
 29722 128d 97000000 		.4byte	0x97
 29723 1291 02       		.uleb128 0x2
 29724 1292 91       		.byte	0x91
 29725 1293 63       		.sleb128 -29
 29726 1294 23       		.uleb128 0x23
 29727 1295 3B0B0000 		.4byte	.LASF231
 29728 1299 01       		.byte	0x1
 29729 129a 8E04     		.2byte	0x48e
 29730 129c F3120000 		.4byte	0x12f3
 29731 12a0 03       		.uleb128 0x3
 29732 12a1 91       		.byte	0x91
 29733 12a2 C875     		.sleb128 -1336
 29734 12a4 23       		.uleb128 0x23
 29735 12a5 65150000 		.4byte	.LASF256
 29736 12a9 01       		.byte	0x1
 29737 12aa 9904     		.2byte	0x499
 29738 12ac F3120000 		.4byte	0x12f3
 29739 12b0 03       		.uleb128 0x3
 29740 12b1 91       		.byte	0x91
 29741 12b2 F474     		.sleb128 -1420
 29742 12b4 1E       		.uleb128 0x1e
 29743 12b5 A6180000 		.4byte	.LBB22
 29744 12b9 86000000 		.4byte	.LBE22-.LBB22
 29745 12bd 26       		.uleb128 0x26
 29746 12be 69647800 		.ascii	"idx\000"
 29747 12c2 01       		.byte	0x1
 29748 12c3 0205     		.2byte	0x502
 29749 12c5 97000000 		.4byte	0x97
 29750 12c9 02       		.uleb128 0x2
 29751 12ca 91       		.byte	0x91
 29752 12cb 67       		.sleb128 -25
 29753 12cc 23       		.uleb128 0x23
 29754 12cd B5050000 		.4byte	.LASF257
 29755 12d1 01       		.byte	0x1
 29756 12d2 0205     		.2byte	0x502
 29757 12d4 97000000 		.4byte	0x97
 29758 12d8 02       		.uleb128 0x2
 29759 12d9 91       		.byte	0x91
 29760 12da 66       		.sleb128 -26
 29761 12db 00       		.byte	0
 29762 12dc 00       		.byte	0
 29763 12dd 07       		.uleb128 0x7
 29764 12de 04       		.byte	0x4
 29765 12df 5F0B0000 		.4byte	0xb5f
 29766 12e3 09       		.uleb128 0x9
 29767 12e4 D2100000 		.4byte	0x10d2
 29768 12e8 F3120000 		.4byte	0x12f3
 29769 12ec 0A       		.uleb128 0xa
 29770 12ed 18010000 		.4byte	0x118
 29771 12f1 52       		.byte	0x52
 29772 12f2 00       		.byte	0
 29773 12f3 09       		.uleb128 0x9
 29774 12f4 97000000 		.4byte	0x97
 29775 12f8 03130000 		.4byte	0x1303
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 644


 29776 12fc 0A       		.uleb128 0xa
 29777 12fd 18010000 		.4byte	0x118
 29778 1301 52       		.byte	0x52
 29779 1302 00       		.byte	0
 29780 1303 09       		.uleb128 0x9
 29781 1304 25010000 		.4byte	0x125
 29782 1308 13130000 		.4byte	0x1313
 29783 130c 0A       		.uleb128 0xa
 29784 130d 18010000 		.4byte	0x118
 29785 1311 52       		.byte	0x52
 29786 1312 00       		.byte	0
 29787 1313 09       		.uleb128 0x9
 29788 1314 F9000000 		.4byte	0xf9
 29789 1318 23130000 		.4byte	0x1323
 29790 131c 0A       		.uleb128 0xa
 29791 131d 18010000 		.4byte	0x118
 29792 1321 75       		.byte	0x75
 29793 1322 00       		.byte	0
 29794 1323 09       		.uleb128 0x9
 29795 1324 F9000000 		.4byte	0xf9
 29796 1328 33130000 		.4byte	0x1333
 29797 132c 0A       		.uleb128 0xa
 29798 132d 18010000 		.4byte	0x118
 29799 1331 37       		.byte	0x37
 29800 1332 00       		.byte	0
 29801 1333 09       		.uleb128 0x9
 29802 1334 25010000 		.4byte	0x125
 29803 1338 43130000 		.4byte	0x1343
 29804 133c 0A       		.uleb128 0xa
 29805 133d 18010000 		.4byte	0x118
 29806 1341 0B       		.byte	0xb
 29807 1342 00       		.byte	0
 29808 1343 09       		.uleb128 0x9
 29809 1344 97000000 		.4byte	0x97
 29810 1348 53130000 		.4byte	0x1353
 29811 134c 0A       		.uleb128 0xa
 29812 134d 18010000 		.4byte	0x118
 29813 1351 08       		.byte	0x8
 29814 1352 00       		.byte	0
 29815 1353 09       		.uleb128 0x9
 29816 1354 97000000 		.4byte	0x97
 29817 1358 63130000 		.4byte	0x1363
 29818 135c 0A       		.uleb128 0xa
 29819 135d 18010000 		.4byte	0x118
 29820 1361 11       		.byte	0x11
 29821 1362 00       		.byte	0
 29822 1363 22       		.uleb128 0x22
 29823 1364 53040000 		.4byte	.LASF258
 29824 1368 01       		.byte	0x1
 29825 1369 1305     		.2byte	0x513
 29826 136b 00000000 		.4byte	.LFB69
 29827 136f DC140000 		.4byte	.LFE69-.LFB69
 29828 1373 01       		.uleb128 0x1
 29829 1374 9C       		.byte	0x9c
 29830 1375 05140000 		.4byte	0x1405
 29831 1379 25       		.uleb128 0x25
 29832 137a 56070000 		.4byte	.LASF248
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 645


 29833 137e 01       		.byte	0x1
 29834 137f 1305     		.2byte	0x513
 29835 1381 A3000000 		.4byte	0xa3
 29836 1385 02       		.uleb128 0x2
 29837 1386 91       		.byte	0x91
 29838 1387 56       		.sleb128 -42
 29839 1388 26       		.uleb128 0x26
 29840 1389 6900     		.ascii	"i\000"
 29841 138b 01       		.byte	0x1
 29842 138c 1505     		.2byte	0x515
 29843 138e 97000000 		.4byte	0x97
 29844 1392 02       		.uleb128 0x2
 29845 1393 91       		.byte	0x91
 29846 1394 67       		.sleb128 -25
 29847 1395 26       		.uleb128 0x26
 29848 1396 6A00     		.ascii	"j\000"
 29849 1398 01       		.byte	0x1
 29850 1399 1505     		.2byte	0x515
 29851 139b 97000000 		.4byte	0x97
 29852 139f 02       		.uleb128 0x2
 29853 13a0 91       		.byte	0x91
 29854 13a1 66       		.sleb128 -26
 29855 13a2 23       		.uleb128 0x23
 29856 13a3 640D0000 		.4byte	.LASF259
 29857 13a7 01       		.byte	0x1
 29858 13a8 1605     		.2byte	0x516
 29859 13aa 97000000 		.4byte	0x97
 29860 13ae 02       		.uleb128 0x2
 29861 13af 91       		.byte	0x91
 29862 13b0 62       		.sleb128 -30
 29863 13b1 23       		.uleb128 0x23
 29864 13b2 DF130000 		.4byte	.LASF238
 29865 13b6 01       		.byte	0x1
 29866 13b7 1705     		.2byte	0x517
 29867 13b9 EB000000 		.4byte	0xeb
 29868 13bd 02       		.uleb128 0x2
 29869 13be 91       		.byte	0x91
 29870 13bf 5C       		.sleb128 -36
 29871 13c0 23       		.uleb128 0x23
 29872 13c1 2C040000 		.4byte	.LASF260
 29873 13c5 01       		.byte	0x1
 29874 13c6 1705     		.2byte	0x517
 29875 13c8 EB000000 		.4byte	0xeb
 29876 13cc 02       		.uleb128 0x2
 29877 13cd 91       		.byte	0x91
 29878 13ce 58       		.sleb128 -40
 29879 13cf 23       		.uleb128 0x23
 29880 13d0 BC0E0000 		.4byte	.LASF243
 29881 13d4 01       		.byte	0x1
 29882 13d5 1905     		.2byte	0x519
 29883 13d7 97000000 		.4byte	0x97
 29884 13db 02       		.uleb128 0x2
 29885 13dc 91       		.byte	0x91
 29886 13dd 64       		.sleb128 -28
 29887 13de 23       		.uleb128 0x23
 29888 13df 76010000 		.4byte	.LASF244
 29889 13e3 01       		.byte	0x1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 646


 29890 13e4 1A05     		.2byte	0x51a
 29891 13e6 97000000 		.4byte	0x97
 29892 13ea 02       		.uleb128 0x2
 29893 13eb 91       		.byte	0x91
 29894 13ec 63       		.sleb128 -29
 29895 13ed 1E       		.uleb128 0x1e
 29896 13ee 080B0000 		.4byte	.LBB23
 29897 13f2 26000000 		.4byte	.LBE23-.LBB23
 29898 13f6 26       		.uleb128 0x26
 29899 13f7 6900     		.ascii	"i\000"
 29900 13f9 01       		.byte	0x1
 29901 13fa C105     		.2byte	0x5c1
 29902 13fc 97000000 		.4byte	0x97
 29903 1400 02       		.uleb128 0x2
 29904 1401 91       		.byte	0x91
 29905 1402 65       		.sleb128 -27
 29906 1403 00       		.byte	0
 29907 1404 00       		.byte	0
 29908 1405 22       		.uleb128 0x22
 29909 1406 59090000 		.4byte	.LASF261
 29910 140a 01       		.byte	0x1
 29911 140b 6D06     		.2byte	0x66d
 29912 140d 00000000 		.4byte	.LFB70
 29913 1411 F40D0000 		.4byte	.LFE70-.LFB70
 29914 1415 01       		.uleb128 0x1
 29915 1416 9C       		.byte	0x9c
 29916 1417 94150000 		.4byte	0x1594
 29917 141b 25       		.uleb128 0x25
 29918 141c 56070000 		.4byte	.LASF248
 29919 1420 01       		.byte	0x1
 29920 1421 6D06     		.2byte	0x66d
 29921 1423 A3000000 		.4byte	0xa3
 29922 1427 03       		.uleb128 0x3
 29923 1428 91       		.byte	0x91
 29924 1429 CE72     		.sleb128 -1714
 29925 142b 23       		.uleb128 0x23
 29926 142c 6D060000 		.4byte	.LASF233
 29927 1430 01       		.byte	0x1
 29928 1431 7006     		.2byte	0x670
 29929 1433 94150000 		.4byte	0x1594
 29930 1437 03       		.uleb128 0x3
 29931 1438 91       		.byte	0x91
 29932 1439 DC74     		.sleb128 -1444
 29933 143b 23       		.uleb128 0x23
 29934 143c 90120000 		.4byte	.LASF262
 29935 1440 01       		.byte	0x1
 29936 1441 7706     		.2byte	0x677
 29937 1443 A3000000 		.4byte	0xa3
 29938 1447 02       		.uleb128 0x2
 29939 1448 91       		.byte	0x91
 29940 1449 62       		.sleb128 -30
 29941 144a 23       		.uleb128 0x23
 29942 144b C9050000 		.4byte	.LASF263
 29943 144f 01       		.byte	0x1
 29944 1450 7806     		.2byte	0x678
 29945 1452 A3000000 		.4byte	0xa3
 29946 1456 02       		.uleb128 0x2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 647


 29947 1457 91       		.byte	0x91
 29948 1458 6E       		.sleb128 -18
 29949 1459 23       		.uleb128 0x23
 29950 145a 7A090000 		.4byte	.LASF264
 29951 145e 01       		.byte	0x1
 29952 145f 7906     		.2byte	0x679
 29953 1461 A3000000 		.4byte	0xa3
 29954 1465 02       		.uleb128 0x2
 29955 1466 91       		.byte	0x91
 29956 1467 60       		.sleb128 -32
 29957 1468 23       		.uleb128 0x23
 29958 1469 F9080000 		.4byte	.LASF265
 29959 146d 01       		.byte	0x1
 29960 146e 7A06     		.2byte	0x67a
 29961 1470 A3000000 		.4byte	0xa3
 29962 1474 02       		.uleb128 0x2
 29963 1475 91       		.byte	0x91
 29964 1476 5E       		.sleb128 -34
 29965 1477 26       		.uleb128 0x26
 29966 1478 6900     		.ascii	"i\000"
 29967 147a 01       		.byte	0x1
 29968 147b 8206     		.2byte	0x682
 29969 147d A3000000 		.4byte	0xa3
 29970 1481 02       		.uleb128 0x2
 29971 1482 91       		.byte	0x91
 29972 1483 6C       		.sleb128 -20
 29973 1484 26       		.uleb128 0x26
 29974 1485 6A00     		.ascii	"j\000"
 29975 1487 01       		.byte	0x1
 29976 1488 8206     		.2byte	0x682
 29977 148a A3000000 		.4byte	0xa3
 29978 148e 02       		.uleb128 0x2
 29979 148f 91       		.byte	0x91
 29980 1490 6A       		.sleb128 -22
 29981 1491 26       		.uleb128 0x26
 29982 1492 6B00     		.ascii	"k\000"
 29983 1494 01       		.byte	0x1
 29984 1495 8206     		.2byte	0x682
 29985 1497 A3000000 		.4byte	0xa3
 29986 149b 02       		.uleb128 0x2
 29987 149c 91       		.byte	0x91
 29988 149d 68       		.sleb128 -24
 29989 149e 26       		.uleb128 0x26
 29990 149f 6800     		.ascii	"h\000"
 29991 14a1 01       		.byte	0x1
 29992 14a2 8206     		.2byte	0x682
 29993 14a4 A3000000 		.4byte	0xa3
 29994 14a8 02       		.uleb128 0x2
 29995 14a9 91       		.byte	0x91
 29996 14aa 66       		.sleb128 -26
 29997 14ab 23       		.uleb128 0x23
 29998 14ac BE050000 		.4byte	.LASF266
 29999 14b0 01       		.byte	0x1
 30000 14b1 8306     		.2byte	0x683
 30001 14b3 A3000000 		.4byte	0xa3
 30002 14b7 02       		.uleb128 0x2
 30003 14b8 91       		.byte	0x91
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 648


 30004 14b9 5C       		.sleb128 -36
 30005 14ba 23       		.uleb128 0x23
 30006 14bb D10E0000 		.4byte	.LASF267
 30007 14bf 01       		.byte	0x1
 30008 14c0 8606     		.2byte	0x686
 30009 14c2 30010000 		.4byte	0x130
 30010 14c6 03       		.uleb128 0x3
 30011 14c7 91       		.byte	0x91
 30012 14c8 C074     		.sleb128 -1472
 30013 14ca 23       		.uleb128 0x23
 30014 14cb 57120000 		.4byte	.LASF268
 30015 14cf 01       		.byte	0x1
 30016 14d0 8706     		.2byte	0x687
 30017 14d2 A5150000 		.4byte	0x15a5
 30018 14d6 03       		.uleb128 0x3
 30019 14d7 91       		.byte	0x91
 30020 14d8 B474     		.sleb128 -1484
 30021 14da 23       		.uleb128 0x23
 30022 14db E4070000 		.4byte	.LASF269
 30023 14df 01       		.byte	0x1
 30024 14e0 8806     		.2byte	0x688
 30025 14e2 B5150000 		.4byte	0x15b5
 30026 14e6 03       		.uleb128 0x3
 30027 14e7 91       		.byte	0x91
 30028 14e8 A074     		.sleb128 -1504
 30029 14ea 23       		.uleb128 0x23
 30030 14eb 19000000 		.4byte	.LASF270
 30031 14ef 01       		.byte	0x1
 30032 14f0 8906     		.2byte	0x689
 30033 14f2 C5150000 		.4byte	0x15c5
 30034 14f6 03       		.uleb128 0x3
 30035 14f7 91       		.byte	0x91
 30036 14f8 9074     		.sleb128 -1520
 30037 14fa 23       		.uleb128 0x23
 30038 14fb AE0F0000 		.4byte	.LASF271
 30039 14ff 01       		.byte	0x1
 30040 1500 8A06     		.2byte	0x68a
 30041 1502 D5150000 		.4byte	0x15d5
 30042 1506 03       		.uleb128 0x3
 30043 1507 91       		.byte	0x91
 30044 1508 E473     		.sleb128 -1564
 30045 150a 23       		.uleb128 0x23
 30046 150b 7C020000 		.4byte	.LASF272
 30047 150f 01       		.byte	0x1
 30048 1510 8B06     		.2byte	0x68b
 30049 1512 30010000 		.4byte	0x130
 30050 1516 03       		.uleb128 0x3
 30051 1517 91       		.byte	0x91
 30052 1518 C873     		.sleb128 -1592
 30053 151a 23       		.uleb128 0x23
 30054 151b E7010000 		.4byte	.LASF273
 30055 151f 01       		.byte	0x1
 30056 1520 8E06     		.2byte	0x68e
 30057 1522 97000000 		.4byte	0x97
 30058 1526 02       		.uleb128 0x2
 30059 1527 91       		.byte	0x91
 30060 1528 5B       		.sleb128 -37
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 649


 30061 1529 23       		.uleb128 0x23
 30062 152a 4F050000 		.4byte	.LASF274
 30063 152e 01       		.byte	0x1
 30064 152f 8F06     		.2byte	0x68f
 30065 1531 97000000 		.4byte	0x97
 30066 1535 02       		.uleb128 0x2
 30067 1536 91       		.byte	0x91
 30068 1537 5A       		.sleb128 -38
 30069 1538 23       		.uleb128 0x23
 30070 1539 FF110000 		.4byte	.LASF275
 30071 153d 01       		.byte	0x1
 30072 153e 9006     		.2byte	0x690
 30073 1540 97000000 		.4byte	0x97
 30074 1544 02       		.uleb128 0x2
 30075 1545 91       		.byte	0x91
 30076 1546 59       		.sleb128 -39
 30077 1547 23       		.uleb128 0x23
 30078 1548 7E120000 		.4byte	.LASF276
 30079 154c 01       		.byte	0x1
 30080 154d 9106     		.2byte	0x691
 30081 154f 97000000 		.4byte	0x97
 30082 1553 02       		.uleb128 0x2
 30083 1554 91       		.byte	0x91
 30084 1555 58       		.sleb128 -40
 30085 1556 23       		.uleb128 0x23
 30086 1557 5D050000 		.4byte	.LASF277
 30087 155b 01       		.byte	0x1
 30088 155c 9206     		.2byte	0x692
 30089 155e 97000000 		.4byte	0x97
 30090 1562 02       		.uleb128 0x2
 30091 1563 91       		.byte	0x91
 30092 1564 57       		.sleb128 -41
 30093 1565 23       		.uleb128 0x23
 30094 1566 35010000 		.4byte	.LASF278
 30095 156a 01       		.byte	0x1
 30096 156b 9306     		.2byte	0x693
 30097 156d 97000000 		.4byte	0x97
 30098 1571 02       		.uleb128 0x2
 30099 1572 91       		.byte	0x91
 30100 1573 65       		.sleb128 -27
 30101 1574 23       		.uleb128 0x23
 30102 1575 3E150000 		.4byte	.LASF251
 30103 1579 01       		.byte	0x1
 30104 157a 9506     		.2byte	0x695
 30105 157c 13130000 		.4byte	0x1313
 30106 1580 03       		.uleb128 0x3
 30107 1581 91       		.byte	0x91
 30108 1582 D072     		.sleb128 -1712
 30109 1584 23       		.uleb128 0x23
 30110 1585 40040000 		.4byte	.LASF279
 30111 1589 01       		.byte	0x1
 30112 158a 9606     		.2byte	0x696
 30113 158c 97000000 		.4byte	0x97
 30114 1590 02       		.uleb128 0x2
 30115 1591 91       		.byte	0x91
 30116 1592 56       		.sleb128 -42
 30117 1593 00       		.byte	0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 650


 30118 1594 09       		.uleb128 0x9
 30119 1595 97000000 		.4byte	0x97
 30120 1599 A5150000 		.4byte	0x15a5
 30121 159d 24       		.uleb128 0x24
 30122 159e 18010000 		.4byte	0x118
 30123 15a2 7805     		.2byte	0x578
 30124 15a4 00       		.byte	0
 30125 15a5 09       		.uleb128 0x9
 30126 15a6 F9000000 		.4byte	0xf9
 30127 15aa B5150000 		.4byte	0x15b5
 30128 15ae 0A       		.uleb128 0xa
 30129 15af 18010000 		.4byte	0x118
 30130 15b3 0A       		.byte	0xa
 30131 15b4 00       		.byte	0
 30132 15b5 09       		.uleb128 0x9
 30133 15b6 F9000000 		.4byte	0xf9
 30134 15ba C5150000 		.4byte	0x15c5
 30135 15be 0A       		.uleb128 0xa
 30136 15bf 18010000 		.4byte	0x118
 30137 15c3 13       		.byte	0x13
 30138 15c4 00       		.byte	0
 30139 15c5 09       		.uleb128 0x9
 30140 15c6 F9000000 		.4byte	0xf9
 30141 15ca D5150000 		.4byte	0x15d5
 30142 15ce 0A       		.uleb128 0xa
 30143 15cf 18010000 		.4byte	0x118
 30144 15d3 0F       		.byte	0xf
 30145 15d4 00       		.byte	0
 30146 15d5 09       		.uleb128 0x9
 30147 15d6 F9000000 		.4byte	0xf9
 30148 15da E5150000 		.4byte	0x15e5
 30149 15de 0A       		.uleb128 0xa
 30150 15df 18010000 		.4byte	0x118
 30151 15e3 29       		.byte	0x29
 30152 15e4 00       		.byte	0
 30153 15e5 27       		.uleb128 0x27
 30154 15e6 96030000 		.4byte	.LASF315
 30155 15ea 01       		.byte	0x1
 30156 15eb 5C07     		.2byte	0x75c
 30157 15ed 00000000 		.4byte	.LFB71
 30158 15f1 90000000 		.4byte	.LFE71-.LFB71
 30159 15f5 01       		.uleb128 0x1
 30160 15f6 9C       		.byte	0x9c
 30161 15f7 16160000 		.4byte	0x1616
 30162 15fb 26       		.uleb128 0x26
 30163 15fc 6900     		.ascii	"i\000"
 30164 15fe 01       		.byte	0x1
 30165 15ff 5E07     		.2byte	0x75e
 30166 1601 97000000 		.4byte	0x97
 30167 1605 02       		.uleb128 0x2
 30168 1606 91       		.byte	0x91
 30169 1607 6F       		.sleb128 -17
 30170 1608 26       		.uleb128 0x26
 30171 1609 6A00     		.ascii	"j\000"
 30172 160b 01       		.byte	0x1
 30173 160c 5E07     		.2byte	0x75e
 30174 160e 97000000 		.4byte	0x97
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 651


 30175 1612 02       		.uleb128 0x2
 30176 1613 91       		.byte	0x91
 30177 1614 6E       		.sleb128 -18
 30178 1615 00       		.byte	0
 30179 1616 22       		.uleb128 0x22
 30180 1617 55010000 		.4byte	.LASF280
 30181 161b 01       		.byte	0x1
 30182 161c 6F07     		.2byte	0x76f
 30183 161e 00000000 		.4byte	.LFB72
 30184 1622 281D0000 		.4byte	.LFE72-.LFB72
 30185 1626 01       		.uleb128 0x1
 30186 1627 9C       		.byte	0x9c
 30187 1628 C1160000 		.4byte	0x16c1
 30188 162c 25       		.uleb128 0x25
 30189 162d DB0E0000 		.4byte	.LASF281
 30190 1631 01       		.byte	0x1
 30191 1632 6F07     		.2byte	0x76f
 30192 1634 1F010000 		.4byte	0x11f
 30193 1638 03       		.uleb128 0x3
 30194 1639 91       		.byte	0x91
 30195 163a D47E     		.sleb128 -172
 30196 163c 26       		.uleb128 0x26
 30197 163d 6900     		.ascii	"i\000"
 30198 163f 01       		.byte	0x1
 30199 1640 7107     		.2byte	0x771
 30200 1642 73000000 		.4byte	0x73
 30201 1646 02       		.uleb128 0x2
 30202 1647 91       		.byte	0x91
 30203 1648 54       		.sleb128 -44
 30204 1649 23       		.uleb128 0x23
 30205 164a CE030000 		.4byte	.LASF250
 30206 164e 01       		.byte	0x1
 30207 164f 7307     		.2byte	0x773
 30208 1651 DD120000 		.4byte	0x12dd
 30209 1655 02       		.uleb128 0x2
 30210 1656 91       		.byte	0x91
 30211 1657 4C       		.sleb128 -52
 30212 1658 1E       		.uleb128 0x1e
 30213 1659 1C000000 		.4byte	.LBB24
 30214 165d CC1C0000 		.4byte	.LBE24-.LBB24
 30215 1661 26       		.uleb128 0x26
 30216 1662 73747200 		.ascii	"str\000"
 30217 1666 01       		.byte	0x1
 30218 1667 7607     		.2byte	0x776
 30219 1669 C1160000 		.4byte	0x16c1
 30220 166d 03       		.uleb128 0x3
 30221 166e 91       		.byte	0x91
 30222 166f DC7E     		.sleb128 -164
 30223 1671 1E       		.uleb128 0x1e
 30224 1672 1C030000 		.4byte	.LBB25
 30225 1676 26140000 		.4byte	.LBE25-.LBB25
 30226 167a 26       		.uleb128 0x26
 30227 167b 6B00     		.ascii	"k\000"
 30228 167d 01       		.byte	0x1
 30229 167e AA07     		.2byte	0x7aa
 30230 1680 97000000 		.4byte	0x97
 30231 1684 02       		.uleb128 0x2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 652


 30232 1685 91       		.byte	0x91
 30233 1686 53       		.sleb128 -45
 30234 1687 1E       		.uleb128 0x1e
 30235 1688 6C030000 		.4byte	.LBB26
 30236 168c BA130000 		.4byte	.LBE26-.LBB26
 30237 1690 23       		.uleb128 0x23
 30238 1691 BC0E0000 		.4byte	.LASF243
 30239 1695 01       		.byte	0x1
 30240 1696 AC07     		.2byte	0x7ac
 30241 1698 97000000 		.4byte	0x97
 30242 169c 02       		.uleb128 0x2
 30243 169d 91       		.byte	0x91
 30244 169e 4B       		.sleb128 -53
 30245 169f 26       		.uleb128 0x26
 30246 16a0 4D4F5400 		.ascii	"MOT\000"
 30247 16a4 01       		.byte	0x1
 30248 16a5 AD07     		.2byte	0x7ad
 30249 16a7 D1160000 		.4byte	0x16d1
 30250 16ab 02       		.uleb128 0x2
 30251 16ac 91       		.byte	0x91
 30252 16ad 44       		.sleb128 -60
 30253 16ae 23       		.uleb128 0x23
 30254 16af A6140000 		.4byte	.LASF282
 30255 16b3 01       		.byte	0x1
 30256 16b4 AE07     		.2byte	0x7ae
 30257 16b6 97000000 		.4byte	0x97
 30258 16ba 02       		.uleb128 0x2
 30259 16bb 91       		.byte	0x91
 30260 16bc 43       		.sleb128 -61
 30261 16bd 00       		.byte	0
 30262 16be 00       		.byte	0
 30263 16bf 00       		.byte	0
 30264 16c0 00       		.byte	0
 30265 16c1 09       		.uleb128 0x9
 30266 16c2 F9000000 		.4byte	0xf9
 30267 16c6 D1160000 		.4byte	0x16d1
 30268 16ca 0A       		.uleb128 0xa
 30269 16cb 18010000 		.4byte	0x118
 30270 16cf 63       		.byte	0x63
 30271 16d0 00       		.byte	0
 30272 16d1 07       		.uleb128 0x7
 30273 16d2 04       		.byte	0x4
 30274 16d3 20060000 		.4byte	0x620
 30275 16d7 22       		.uleb128 0x22
 30276 16d8 CF0F0000 		.4byte	.LASF283
 30277 16dc 01       		.byte	0x1
 30278 16dd 1309     		.2byte	0x913
 30279 16df 00000000 		.4byte	.LFB73
 30280 16e3 90040000 		.4byte	.LFE73-.LFB73
 30281 16e7 01       		.uleb128 0x1
 30282 16e8 9C       		.byte	0x9c
 30283 16e9 67170000 		.4byte	0x1767
 30284 16ed 25       		.uleb128 0x25
 30285 16ee DB0E0000 		.4byte	.LASF281
 30286 16f2 01       		.byte	0x1
 30287 16f3 1309     		.2byte	0x913
 30288 16f5 1F010000 		.4byte	0x11f
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 653


 30289 16f9 03       		.uleb128 0x3
 30290 16fa 91       		.byte	0x91
 30291 16fb BC7C     		.sleb128 -452
 30292 16fd 26       		.uleb128 0x26
 30293 16fe 73747200 		.ascii	"str\000"
 30294 1702 01       		.byte	0x1
 30295 1703 1509     		.2byte	0x915
 30296 1705 C1160000 		.4byte	0x16c1
 30297 1709 03       		.uleb128 0x3
 30298 170a 91       		.byte	0x91
 30299 170b F07E     		.sleb128 -144
 30300 170d 26       		.uleb128 0x26
 30301 170e 6900     		.ascii	"i\000"
 30302 1710 01       		.byte	0x1
 30303 1711 1609     		.2byte	0x916
 30304 1713 73000000 		.4byte	0x73
 30305 1717 02       		.uleb128 0x2
 30306 1718 91       		.byte	0x91
 30307 1719 64       		.sleb128 -28
 30308 171a 23       		.uleb128 0x23
 30309 171b EC040000 		.4byte	.LASF284
 30310 171f 01       		.byte	0x1
 30311 1720 1709     		.2byte	0x917
 30312 1722 73000000 		.4byte	0x73
 30313 1726 02       		.uleb128 0x2
 30314 1727 91       		.byte	0x91
 30315 1728 54       		.sleb128 -44
 30316 1729 23       		.uleb128 0x23
 30317 172a CE030000 		.4byte	.LASF250
 30318 172e 01       		.byte	0x1
 30319 172f 1909     		.2byte	0x919
 30320 1731 DD120000 		.4byte	0x12dd
 30321 1735 02       		.uleb128 0x2
 30322 1736 91       		.byte	0x91
 30323 1737 60       		.sleb128 -32
 30324 1738 26       		.uleb128 0x26
 30325 1739 4D4F5400 		.ascii	"MOT\000"
 30326 173d 01       		.byte	0x1
 30327 173e 1A09     		.2byte	0x91a
 30328 1740 D1160000 		.4byte	0x16d1
 30329 1744 02       		.uleb128 0x2
 30330 1745 91       		.byte	0x91
 30331 1746 5C       		.sleb128 -36
 30332 1747 23       		.uleb128 0x23
 30333 1748 A6140000 		.4byte	.LASF282
 30334 174c 01       		.byte	0x1
 30335 174d 1B09     		.2byte	0x91b
 30336 174f 97000000 		.4byte	0x97
 30337 1753 02       		.uleb128 0x2
 30338 1754 91       		.byte	0x91
 30339 1755 5B       		.sleb128 -37
 30340 1756 23       		.uleb128 0x23
 30341 1757 52060000 		.4byte	.LASF285
 30342 175b 01       		.byte	0x1
 30343 175c 5309     		.2byte	0x953
 30344 175e 67170000 		.4byte	0x1767
 30345 1762 03       		.uleb128 0x3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 654


 30346 1763 91       		.byte	0x91
 30347 1764 C47C     		.sleb128 -444
 30348 1766 00       		.byte	0
 30349 1767 09       		.uleb128 0x9
 30350 1768 F9000000 		.4byte	0xf9
 30351 176c 78170000 		.4byte	0x1778
 30352 1770 24       		.uleb128 0x24
 30353 1771 18010000 		.4byte	0x118
 30354 1775 2B01     		.2byte	0x12b
 30355 1777 00       		.byte	0
 30356 1778 22       		.uleb128 0x22
 30357 1779 6E0D0000 		.4byte	.LASF286
 30358 177d 01       		.byte	0x1
 30359 177e 5D09     		.2byte	0x95d
 30360 1780 00000000 		.4byte	.LFB74
 30361 1784 5C020000 		.4byte	.LFE74-.LFB74
 30362 1788 01       		.uleb128 0x1
 30363 1789 9C       		.byte	0x9c
 30364 178a BE170000 		.4byte	0x17be
 30365 178e 25       		.uleb128 0x25
 30366 178f DB0E0000 		.4byte	.LASF281
 30367 1793 01       		.byte	0x1
 30368 1794 5D09     		.2byte	0x95d
 30369 1796 1F010000 		.4byte	0x11f
 30370 179a 03       		.uleb128 0x3
 30371 179b 91       		.byte	0x91
 30372 179c CC7E     		.sleb128 -180
 30373 179e 26       		.uleb128 0x26
 30374 179f 73747200 		.ascii	"str\000"
 30375 17a3 01       		.byte	0x1
 30376 17a4 5F09     		.2byte	0x95f
 30377 17a6 BE170000 		.4byte	0x17be
 30378 17aa 03       		.uleb128 0x3
 30379 17ab 91       		.byte	0x91
 30380 17ac D47E     		.sleb128 -172
 30381 17ae 23       		.uleb128 0x23
 30382 17af CE030000 		.4byte	.LASF250
 30383 17b3 01       		.byte	0x1
 30384 17b4 6109     		.2byte	0x961
 30385 17b6 DD120000 		.4byte	0x12dd
 30386 17ba 02       		.uleb128 0x2
 30387 17bb 91       		.byte	0x91
 30388 17bc 6C       		.sleb128 -20
 30389 17bd 00       		.byte	0
 30390 17be 09       		.uleb128 0x9
 30391 17bf F9000000 		.4byte	0xf9
 30392 17c3 CE170000 		.4byte	0x17ce
 30393 17c7 0A       		.uleb128 0xa
 30394 17c8 18010000 		.4byte	0x118
 30395 17cc 95       		.byte	0x95
 30396 17cd 00       		.byte	0
 30397 17ce 22       		.uleb128 0x22
 30398 17cf 37100000 		.4byte	.LASF287
 30399 17d3 01       		.byte	0x1
 30400 17d4 8A09     		.2byte	0x98a
 30401 17d6 00000000 		.4byte	.LFB75
 30402 17da 80120000 		.4byte	.LFE75-.LFB75
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 655


 30403 17de 01       		.uleb128 0x1
 30404 17df 9C       		.byte	0x9c
 30405 17e0 6F180000 		.4byte	0x186f
 30406 17e4 25       		.uleb128 0x25
 30407 17e5 DB0E0000 		.4byte	.LASF281
 30408 17e9 01       		.byte	0x1
 30409 17ea 8A09     		.2byte	0x98a
 30410 17ec 1F010000 		.4byte	0x11f
 30411 17f0 03       		.uleb128 0x3
 30412 17f1 91       		.byte	0x91
 30413 17f2 D47E     		.sleb128 -172
 30414 17f4 26       		.uleb128 0x26
 30415 17f5 73747200 		.ascii	"str\000"
 30416 17f9 01       		.byte	0x1
 30417 17fa 8C09     		.2byte	0x98c
 30418 17fc C1160000 		.4byte	0x16c1
 30419 1800 03       		.uleb128 0x3
 30420 1801 91       		.byte	0x91
 30421 1802 DC7E     		.sleb128 -164
 30422 1804 26       		.uleb128 0x26
 30423 1805 6900     		.ascii	"i\000"
 30424 1807 01       		.byte	0x1
 30425 1808 8D09     		.2byte	0x98d
 30426 180a 73000000 		.4byte	0x73
 30427 180e 02       		.uleb128 0x2
 30428 180f 91       		.byte	0x91
 30429 1810 54       		.sleb128 -44
 30430 1811 23       		.uleb128 0x23
 30431 1812 CE030000 		.4byte	.LASF250
 30432 1816 01       		.byte	0x1
 30433 1817 9109     		.2byte	0x991
 30434 1819 DD120000 		.4byte	0x12dd
 30435 181d 02       		.uleb128 0x2
 30436 181e 91       		.byte	0x91
 30437 181f 4C       		.sleb128 -52
 30438 1820 1E       		.uleb128 0x1e
 30439 1821 08010000 		.4byte	.LBB27
 30440 1825 D80C0000 		.4byte	.LBE27-.LBB27
 30441 1829 26       		.uleb128 0x26
 30442 182a 6B00     		.ascii	"k\000"
 30443 182c 01       		.byte	0x1
 30444 182d A609     		.2byte	0x9a6
 30445 182f 97000000 		.4byte	0x97
 30446 1833 02       		.uleb128 0x2
 30447 1834 91       		.byte	0x91
 30448 1835 53       		.sleb128 -45
 30449 1836 1E       		.uleb128 0x1e
 30450 1837 12010000 		.4byte	.LBB28
 30451 183b B20C0000 		.4byte	.LBE28-.LBB28
 30452 183f 23       		.uleb128 0x23
 30453 1840 BC0E0000 		.4byte	.LASF243
 30454 1844 01       		.byte	0x1
 30455 1845 A809     		.2byte	0x9a8
 30456 1847 97000000 		.4byte	0x97
 30457 184b 02       		.uleb128 0x2
 30458 184c 91       		.byte	0x91
 30459 184d 4B       		.sleb128 -53
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 656


 30460 184e 26       		.uleb128 0x26
 30461 184f 4D4F5400 		.ascii	"MOT\000"
 30462 1853 01       		.byte	0x1
 30463 1854 A909     		.2byte	0x9a9
 30464 1856 D1160000 		.4byte	0x16d1
 30465 185a 02       		.uleb128 0x2
 30466 185b 91       		.byte	0x91
 30467 185c 44       		.sleb128 -60
 30468 185d 23       		.uleb128 0x23
 30469 185e A6140000 		.4byte	.LASF282
 30470 1862 01       		.byte	0x1
 30471 1863 AA09     		.2byte	0x9aa
 30472 1865 97000000 		.4byte	0x97
 30473 1869 02       		.uleb128 0x2
 30474 186a 91       		.byte	0x91
 30475 186b 43       		.sleb128 -61
 30476 186c 00       		.byte	0
 30477 186d 00       		.byte	0
 30478 186e 00       		.byte	0
 30479 186f 22       		.uleb128 0x22
 30480 1870 5A0C0000 		.4byte	.LASF288
 30481 1874 01       		.byte	0x1
 30482 1875 920A     		.2byte	0xa92
 30483 1877 00000000 		.4byte	.LFB76
 30484 187b DC000000 		.4byte	.LFE76-.LFB76
 30485 187f 01       		.uleb128 0x1
 30486 1880 9C       		.byte	0x9c
 30487 1881 B3180000 		.4byte	0x18b3
 30488 1885 25       		.uleb128 0x25
 30489 1886 DB0E0000 		.4byte	.LASF281
 30490 188a 01       		.byte	0x1
 30491 188b 920A     		.2byte	0xa92
 30492 188d 1F010000 		.4byte	0x11f
 30493 1891 03       		.uleb128 0x3
 30494 1892 91       		.byte	0x91
 30495 1893 DC7E     		.sleb128 -164
 30496 1895 26       		.uleb128 0x26
 30497 1896 73747200 		.ascii	"str\000"
 30498 189a 01       		.byte	0x1
 30499 189b 940A     		.2byte	0xa94
 30500 189d B3180000 		.4byte	0x18b3
 30501 18a1 03       		.uleb128 0x3
 30502 18a2 91       		.byte	0x91
 30503 18a3 E07E     		.sleb128 -160
 30504 18a5 26       		.uleb128 0x26
 30505 18a6 6900     		.ascii	"i\000"
 30506 18a8 01       		.byte	0x1
 30507 18a9 950A     		.2byte	0xa95
 30508 18ab 73000000 		.4byte	0x73
 30509 18af 02       		.uleb128 0x2
 30510 18b0 91       		.byte	0x91
 30511 18b1 6C       		.sleb128 -20
 30512 18b2 00       		.byte	0
 30513 18b3 09       		.uleb128 0x9
 30514 18b4 F9000000 		.4byte	0xf9
 30515 18b8 C3180000 		.4byte	0x18c3
 30516 18bc 0A       		.uleb128 0xa
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 657


 30517 18bd 18010000 		.4byte	0x118
 30518 18c1 8B       		.byte	0x8b
 30519 18c2 00       		.byte	0
 30520 18c3 22       		.uleb128 0x22
 30521 18c4 E70E0000 		.4byte	.LASF289
 30522 18c8 01       		.byte	0x1
 30523 18c9 AA0A     		.2byte	0xaaa
 30524 18cb 00000000 		.4byte	.LFB77
 30525 18cf 80010000 		.4byte	.LFE77-.LFB77
 30526 18d3 01       		.uleb128 0x1
 30527 18d4 9C       		.byte	0x9c
 30528 18d5 07190000 		.4byte	0x1907
 30529 18d9 25       		.uleb128 0x25
 30530 18da DB0E0000 		.4byte	.LASF281
 30531 18de 01       		.byte	0x1
 30532 18df AA0A     		.2byte	0xaaa
 30533 18e1 1F010000 		.4byte	0x11f
 30534 18e5 03       		.uleb128 0x3
 30535 18e6 91       		.byte	0x91
 30536 18e7 E47E     		.sleb128 -156
 30537 18e9 26       		.uleb128 0x26
 30538 18ea 73747200 		.ascii	"str\000"
 30539 18ee 01       		.byte	0x1
 30540 18ef AC0A     		.2byte	0xaac
 30541 18f1 07190000 		.4byte	0x1907
 30542 18f5 03       		.uleb128 0x3
 30543 18f6 91       		.byte	0x91
 30544 18f7 EC7E     		.sleb128 -148
 30545 18f9 26       		.uleb128 0x26
 30546 18fa 6900     		.ascii	"i\000"
 30547 18fc 01       		.byte	0x1
 30548 18fd AD0A     		.2byte	0xaad
 30549 18ff 73000000 		.4byte	0x73
 30550 1903 02       		.uleb128 0x2
 30551 1904 91       		.byte	0x91
 30552 1905 64       		.sleb128 -28
 30553 1906 00       		.byte	0
 30554 1907 09       		.uleb128 0x9
 30555 1908 F9000000 		.4byte	0xf9
 30556 190c 17190000 		.4byte	0x1917
 30557 1910 0A       		.uleb128 0xa
 30558 1911 18010000 		.4byte	0x118
 30559 1915 77       		.byte	0x77
 30560 1916 00       		.byte	0
 30561 1917 28       		.uleb128 0x28
 30562 1918 69100000 		.4byte	.LASF290
 30563 191c 01       		.byte	0x1
 30564 191d D60A     		.2byte	0xad6
 30565 191f 00000000 		.4byte	.LFB78
 30566 1923 28000000 		.4byte	.LFE78-.LFB78
 30567 1927 01       		.uleb128 0x1
 30568 1928 9C       		.byte	0x9c
 30569 1929 3D190000 		.4byte	0x193d
 30570 192d 25       		.uleb128 0x25
 30571 192e DB0E0000 		.4byte	.LASF281
 30572 1932 01       		.byte	0x1
 30573 1933 D60A     		.2byte	0xad6
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 658


 30574 1935 1F010000 		.4byte	0x11f
 30575 1939 02       		.uleb128 0x2
 30576 193a 91       		.byte	0x91
 30577 193b 6C       		.sleb128 -20
 30578 193c 00       		.byte	0
 30579 193d 22       		.uleb128 0x22
 30580 193e FD030000 		.4byte	.LASF291
 30581 1942 01       		.byte	0x1
 30582 1943 E10A     		.2byte	0xae1
 30583 1945 00000000 		.4byte	.LFB79
 30584 1949 F0000000 		.4byte	.LFE79-.LFB79
 30585 194d 01       		.uleb128 0x1
 30586 194e 9C       		.byte	0x9c
 30587 194f AC190000 		.4byte	0x19ac
 30588 1953 25       		.uleb128 0x25
 30589 1954 DB0E0000 		.4byte	.LASF281
 30590 1958 01       		.byte	0x1
 30591 1959 E10A     		.2byte	0xae1
 30592 195b 1F010000 		.4byte	0x11f
 30593 195f 03       		.uleb128 0x3
 30594 1960 91       		.byte	0x91
 30595 1961 FC7E     		.sleb128 -132
 30596 1963 23       		.uleb128 0x23
 30597 1964 6C020000 		.4byte	.LASF292
 30598 1968 01       		.byte	0x1
 30599 1969 E30A     		.2byte	0xae3
 30600 196b C1160000 		.4byte	0x16c1
 30601 196f 03       		.uleb128 0x3
 30602 1970 91       		.byte	0x91
 30603 1971 847F     		.sleb128 -124
 30604 1973 23       		.uleb128 0x23
 30605 1974 10020000 		.4byte	.LASF293
 30606 1978 01       		.byte	0x1
 30607 1979 E40A     		.2byte	0xae4
 30608 197b A3000000 		.4byte	0xa3
 30609 197f 02       		.uleb128 0x2
 30610 1980 91       		.byte	0x91
 30611 1981 6E       		.sleb128 -18
 30612 1982 23       		.uleb128 0x23
 30613 1983 E7000000 		.4byte	.LASF294
 30614 1987 01       		.byte	0x1
 30615 1988 E50A     		.2byte	0xae5
 30616 198a EB000000 		.4byte	0xeb
 30617 198e 05       		.uleb128 0x5
 30618 198f 03       		.byte	0x3
 30619 1990 00000000 		.4byte	h_time.11211
 30620 1994 1E       		.uleb128 0x1e
 30621 1995 26000000 		.4byte	.LBB29
 30622 1999 A4000000 		.4byte	.LBE29-.LBB29
 30623 199d 26       		.uleb128 0x26
 30624 199e 6900     		.ascii	"i\000"
 30625 19a0 01       		.byte	0x1
 30626 19a1 EA0A     		.2byte	0xaea
 30627 19a3 73000000 		.4byte	0x73
 30628 19a7 02       		.uleb128 0x2
 30629 19a8 91       		.byte	0x91
 30630 19a9 68       		.sleb128 -24
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 659


 30631 19aa 00       		.byte	0
 30632 19ab 00       		.byte	0
 30633 19ac 22       		.uleb128 0x22
 30634 19ad C8150000 		.4byte	.LASF295
 30635 19b1 01       		.byte	0x1
 30636 19b2 020B     		.2byte	0xb02
 30637 19b4 00000000 		.4byte	.LFB80
 30638 19b8 74030000 		.4byte	.LFE80-.LFB80
 30639 19bc 01       		.uleb128 0x1
 30640 19bd 9C       		.byte	0x9c
 30641 19be F0190000 		.4byte	0x19f0
 30642 19c2 25       		.uleb128 0x25
 30643 19c3 DB0E0000 		.4byte	.LASF281
 30644 19c7 01       		.byte	0x1
 30645 19c8 020B     		.2byte	0xb02
 30646 19ca 1F010000 		.4byte	0x11f
 30647 19ce 03       		.uleb128 0x3
 30648 19cf 91       		.byte	0x91
 30649 19d0 AC7D     		.sleb128 -340
 30650 19d2 26       		.uleb128 0x26
 30651 19d3 73747200 		.ascii	"str\000"
 30652 19d7 01       		.byte	0x1
 30653 19d8 040B     		.2byte	0xb04
 30654 19da 67170000 		.4byte	0x1767
 30655 19de 03       		.uleb128 0x3
 30656 19df 91       		.byte	0x91
 30657 19e0 B07D     		.sleb128 -336
 30658 19e2 26       		.uleb128 0x26
 30659 19e3 6900     		.ascii	"i\000"
 30660 19e5 01       		.byte	0x1
 30661 19e6 050B     		.2byte	0xb05
 30662 19e8 73000000 		.4byte	0x73
 30663 19ec 02       		.uleb128 0x2
 30664 19ed 91       		.byte	0x91
 30665 19ee 5C       		.sleb128 -36
 30666 19ef 00       		.byte	0
 30667 19f0 22       		.uleb128 0x22
 30668 19f1 FA0F0000 		.4byte	.LASF296
 30669 19f5 01       		.byte	0x1
 30670 19f6 2D0B     		.2byte	0xb2d
 30671 19f8 00000000 		.4byte	.LFB81
 30672 19fc 84000000 		.4byte	.LFE81-.LFB81
 30673 1a00 01       		.uleb128 0x1
 30674 1a01 9C       		.byte	0x9c
 30675 1a02 431A0000 		.4byte	0x1a43
 30676 1a06 25       		.uleb128 0x25
 30677 1a07 6D060000 		.4byte	.LASF233
 30678 1a0b 01       		.byte	0x1
 30679 1a0c 2D0B     		.2byte	0xb2d
 30680 1a0e D2100000 		.4byte	0x10d2
 30681 1a12 02       		.uleb128 0x2
 30682 1a13 91       		.byte	0x91
 30683 1a14 6C       		.sleb128 -20
 30684 1a15 25       		.uleb128 0x25
 30685 1a16 390C0000 		.4byte	.LASF234
 30686 1a1a 01       		.byte	0x1
 30687 1a1b 2D0B     		.2byte	0xb2d
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 660


 30688 1a1d A3000000 		.4byte	0xa3
 30689 1a21 02       		.uleb128 0x2
 30690 1a22 91       		.byte	0x91
 30691 1a23 6A       		.sleb128 -22
 30692 1a24 25       		.uleb128 0x25
 30693 1a25 87100000 		.4byte	.LASF297
 30694 1a29 01       		.byte	0x1
 30695 1a2a 2D0B     		.2byte	0xb2d
 30696 1a2c 97000000 		.4byte	0x97
 30697 1a30 02       		.uleb128 0x2
 30698 1a31 91       		.byte	0x91
 30699 1a32 69       		.sleb128 -23
 30700 1a33 23       		.uleb128 0x23
 30701 1a34 56070000 		.4byte	.LASF248
 30702 1a38 01       		.byte	0x1
 30703 1a39 2F0B     		.2byte	0xb2f
 30704 1a3b A3000000 		.4byte	0xa3
 30705 1a3f 02       		.uleb128 0x2
 30706 1a40 91       		.byte	0x91
 30707 1a41 76       		.sleb128 -10
 30708 1a42 00       		.byte	0
 30709 1a43 22       		.uleb128 0x22
 30710 1a44 92060000 		.4byte	.LASF298
 30711 1a48 01       		.byte	0x1
 30712 1a49 490B     		.2byte	0xb49
 30713 1a4b 00000000 		.4byte	.LFB82
 30714 1a4f 88000000 		.4byte	.LFE82-.LFB82
 30715 1a53 01       		.uleb128 0x1
 30716 1a54 9C       		.byte	0x9c
 30717 1a55 871A0000 		.4byte	0x1a87
 30718 1a59 25       		.uleb128 0x25
 30719 1a5a 6D060000 		.4byte	.LASF233
 30720 1a5e 01       		.byte	0x1
 30721 1a5f 490B     		.2byte	0xb49
 30722 1a61 D2100000 		.4byte	0x10d2
 30723 1a65 02       		.uleb128 0x2
 30724 1a66 91       		.byte	0x91
 30725 1a67 6C       		.sleb128 -20
 30726 1a68 25       		.uleb128 0x25
 30727 1a69 390C0000 		.4byte	.LASF234
 30728 1a6d 01       		.byte	0x1
 30729 1a6e 490B     		.2byte	0xb49
 30730 1a70 A3000000 		.4byte	0xa3
 30731 1a74 02       		.uleb128 0x2
 30732 1a75 91       		.byte	0x91
 30733 1a76 6A       		.sleb128 -22
 30734 1a77 23       		.uleb128 0x23
 30735 1a78 56070000 		.4byte	.LASF248
 30736 1a7c 01       		.byte	0x1
 30737 1a7d 4B0B     		.2byte	0xb4b
 30738 1a7f A3000000 		.4byte	0xa3
 30739 1a83 02       		.uleb128 0x2
 30740 1a84 91       		.byte	0x91
 30741 1a85 76       		.sleb128 -10
 30742 1a86 00       		.byte	0
 30743 1a87 22       		.uleb128 0x22
 30744 1a88 C50C0000 		.4byte	.LASF299
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 661


 30745 1a8c 01       		.byte	0x1
 30746 1a8d 650B     		.2byte	0xb65
 30747 1a8f 00000000 		.4byte	.LFB83
 30748 1a93 A0000000 		.4byte	.LFE83-.LFB83
 30749 1a97 01       		.uleb128 0x1
 30750 1a98 9C       		.byte	0x9c
 30751 1a99 DA1A0000 		.4byte	0x1ada
 30752 1a9d 25       		.uleb128 0x25
 30753 1a9e 6D060000 		.4byte	.LASF233
 30754 1aa2 01       		.byte	0x1
 30755 1aa3 650B     		.2byte	0xb65
 30756 1aa5 D2100000 		.4byte	0x10d2
 30757 1aa9 02       		.uleb128 0x2
 30758 1aaa 91       		.byte	0x91
 30759 1aab 74       		.sleb128 -12
 30760 1aac 25       		.uleb128 0x25
 30761 1aad 390C0000 		.4byte	.LASF234
 30762 1ab1 01       		.byte	0x1
 30763 1ab2 650B     		.2byte	0xb65
 30764 1ab4 A3000000 		.4byte	0xa3
 30765 1ab8 02       		.uleb128 0x2
 30766 1ab9 91       		.byte	0x91
 30767 1aba 72       		.sleb128 -14
 30768 1abb 29       		.uleb128 0x29
 30769 1abc 696400   		.ascii	"id\000"
 30770 1abf 01       		.byte	0x1
 30771 1ac0 650B     		.2byte	0xb65
 30772 1ac2 97000000 		.4byte	0x97
 30773 1ac6 02       		.uleb128 0x2
 30774 1ac7 91       		.byte	0x91
 30775 1ac8 71       		.sleb128 -15
 30776 1ac9 26       		.uleb128 0x26
 30777 1aca 6900     		.ascii	"i\000"
 30778 1acc 01       		.byte	0x1
 30779 1acd 670B     		.2byte	0xb67
 30780 1acf A3000000 		.4byte	0xa3
 30781 1ad3 05       		.uleb128 0x5
 30782 1ad4 03       		.byte	0x3
 30783 1ad5 04000000 		.4byte	i.11252
 30784 1ad9 00       		.byte	0
 30785 1ada 2A       		.uleb128 0x2a
 30786 1adb 56140000 		.4byte	.LASF305
 30787 1adf 01       		.byte	0x1
 30788 1ae0 830B     		.2byte	0xb83
 30789 1ae2 97000000 		.4byte	0x97
 30790 1ae6 00000000 		.4byte	.LFB84
 30791 1aea 3E000000 		.4byte	.LFE84-.LFB84
 30792 1aee 01       		.uleb128 0x1
 30793 1aef 9C       		.byte	0x9c
 30794 1af0 2F1B0000 		.4byte	0x1b2f
 30795 1af4 25       		.uleb128 0x25
 30796 1af5 170C0000 		.4byte	.LASF300
 30797 1af9 01       		.byte	0x1
 30798 1afa 830B     		.2byte	0xb83
 30799 1afc D2100000 		.4byte	0x10d2
 30800 1b00 02       		.uleb128 0x2
 30801 1b01 91       		.byte	0x91
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 662


 30802 1b02 6C       		.sleb128 -20
 30803 1b03 25       		.uleb128 0x25
 30804 1b04 3A060000 		.4byte	.LASF301
 30805 1b08 01       		.byte	0x1
 30806 1b09 830B     		.2byte	0xb83
 30807 1b0b 97000000 		.4byte	0x97
 30808 1b0f 02       		.uleb128 0x2
 30809 1b10 91       		.byte	0x91
 30810 1b11 6B       		.sleb128 -21
 30811 1b12 26       		.uleb128 0x26
 30812 1b13 6900     		.ascii	"i\000"
 30813 1b15 01       		.byte	0x1
 30814 1b16 850B     		.2byte	0xb85
 30815 1b18 97000000 		.4byte	0x97
 30816 1b1c 02       		.uleb128 0x2
 30817 1b1d 91       		.byte	0x91
 30818 1b1e 77       		.sleb128 -9
 30819 1b1f 23       		.uleb128 0x23
 30820 1b20 3B0E0000 		.4byte	.LASF302
 30821 1b24 01       		.byte	0x1
 30822 1b25 860B     		.2byte	0xb86
 30823 1b27 97000000 		.4byte	0x97
 30824 1b2b 02       		.uleb128 0x2
 30825 1b2c 91       		.byte	0x91
 30826 1b2d 76       		.sleb128 -10
 30827 1b2e 00       		.byte	0
 30828 1b2f 22       		.uleb128 0x22
 30829 1b30 470C0000 		.4byte	.LASF303
 30830 1b34 01       		.byte	0x1
 30831 1b35 930B     		.2byte	0xb93
 30832 1b37 00000000 		.4byte	.LFB85
 30833 1b3b 2E000000 		.4byte	.LFE85-.LFB85
 30834 1b3f 01       		.uleb128 0x1
 30835 1b40 9C       		.byte	0x9c
 30836 1b41 731B0000 		.4byte	0x1b73
 30837 1b45 25       		.uleb128 0x25
 30838 1b46 6F050000 		.4byte	.LASF304
 30839 1b4a 01       		.byte	0x1
 30840 1b4b 930B     		.2byte	0xb93
 30841 1b4d 97000000 		.4byte	0x97
 30842 1b51 02       		.uleb128 0x2
 30843 1b52 91       		.byte	0x91
 30844 1b53 6F       		.sleb128 -17
 30845 1b54 23       		.uleb128 0x23
 30846 1b55 390C0000 		.4byte	.LASF234
 30847 1b59 01       		.byte	0x1
 30848 1b5a 940B     		.2byte	0xb94
 30849 1b5c 73000000 		.4byte	0x73
 30850 1b60 02       		.uleb128 0x2
 30851 1b61 91       		.byte	0x91
 30852 1b62 74       		.sleb128 -12
 30853 1b63 23       		.uleb128 0x23
 30854 1b64 6D060000 		.4byte	.LASF233
 30855 1b68 01       		.byte	0x1
 30856 1b69 950B     		.2byte	0xb95
 30857 1b6b CC080000 		.4byte	0x8cc
 30858 1b6f 02       		.uleb128 0x2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 663


 30859 1b70 91       		.byte	0x91
 30860 1b71 70       		.sleb128 -16
 30861 1b72 00       		.byte	0
 30862 1b73 2B       		.uleb128 0x2b
 30863 1b74 A7040000 		.4byte	.LASF306
 30864 1b78 01       		.byte	0x1
 30865 1b79 A20B     		.2byte	0xba2
 30866 1b7b 97000000 		.4byte	0x97
 30867 1b7f 00000000 		.4byte	.LFB86
 30868 1b83 98000000 		.4byte	.LFE86-.LFB86
 30869 1b87 01       		.uleb128 0x1
 30870 1b88 9C       		.byte	0x9c
 30871 1b89 D71B0000 		.4byte	0x1bd7
 30872 1b8d 25       		.uleb128 0x25
 30873 1b8e 2D060000 		.4byte	.LASF307
 30874 1b92 01       		.byte	0x1
 30875 1b93 A20B     		.2byte	0xba2
 30876 1b95 73000000 		.4byte	0x73
 30877 1b99 02       		.uleb128 0x2
 30878 1b9a 91       		.byte	0x91
 30879 1b9b 64       		.sleb128 -28
 30880 1b9c 26       		.uleb128 0x26
 30881 1b9d 6900     		.ascii	"i\000"
 30882 1b9f 01       		.byte	0x1
 30883 1ba0 A40B     		.2byte	0xba4
 30884 1ba2 73000000 		.4byte	0x73
 30885 1ba6 02       		.uleb128 0x2
 30886 1ba7 91       		.byte	0x91
 30887 1ba8 74       		.sleb128 -12
 30888 1ba9 23       		.uleb128 0x23
 30889 1baa EE000000 		.4byte	.LASF308
 30890 1bae 01       		.byte	0x1
 30891 1baf A50B     		.2byte	0xba5
 30892 1bb1 97000000 		.4byte	0x97
 30893 1bb5 02       		.uleb128 0x2
 30894 1bb6 91       		.byte	0x91
 30895 1bb7 6B       		.sleb128 -21
 30896 1bb8 23       		.uleb128 0x23
 30897 1bb9 AE060000 		.4byte	.LASF309
 30898 1bbd 01       		.byte	0x1
 30899 1bbe A60B     		.2byte	0xba6
 30900 1bc0 73000000 		.4byte	0x73
 30901 1bc4 02       		.uleb128 0x2
 30902 1bc5 91       		.byte	0x91
 30903 1bc6 6C       		.sleb128 -20
 30904 1bc7 23       		.uleb128 0x23
 30905 1bc8 AD050000 		.4byte	.LASF310
 30906 1bcc 01       		.byte	0x1
 30907 1bcd A70B     		.2byte	0xba7
 30908 1bcf 97000000 		.4byte	0x97
 30909 1bd3 02       		.uleb128 0x2
 30910 1bd4 91       		.byte	0x91
 30911 1bd5 73       		.sleb128 -13
 30912 1bd6 00       		.byte	0
 30913 1bd7 22       		.uleb128 0x22
 30914 1bd8 800F0000 		.4byte	.LASF311
 30915 1bdc 01       		.byte	0x1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 664


 30916 1bdd CC0B     		.2byte	0xbcc
 30917 1bdf 00000000 		.4byte	.LFB87
 30918 1be3 80000000 		.4byte	.LFE87-.LFB87
 30919 1be7 01       		.uleb128 0x1
 30920 1be8 9C       		.byte	0x9c
 30921 1be9 FB1B0000 		.4byte	0x1bfb
 30922 1bed 26       		.uleb128 0x26
 30923 1bee 6900     		.ascii	"i\000"
 30924 1bf0 01       		.byte	0x1
 30925 1bf1 CE0B     		.2byte	0xbce
 30926 1bf3 A3000000 		.4byte	0xa3
 30927 1bf7 02       		.uleb128 0x2
 30928 1bf8 91       		.byte	0x91
 30929 1bf9 76       		.sleb128 -10
 30930 1bfa 00       		.byte	0
 30931 1bfb 2B       		.uleb128 0x2b
 30932 1bfc C60E0000 		.4byte	.LASF312
 30933 1c00 01       		.byte	0x1
 30934 1c01 E50B     		.2byte	0xbe5
 30935 1c03 97000000 		.4byte	0x97
 30936 1c07 00000000 		.4byte	.LFB88
 30937 1c0b 5C000000 		.4byte	.LFE88-.LFB88
 30938 1c0f 01       		.uleb128 0x1
 30939 1c10 9C       		.byte	0x9c
 30940 1c11 231C0000 		.4byte	0x1c23
 30941 1c15 26       		.uleb128 0x26
 30942 1c16 6900     		.ascii	"i\000"
 30943 1c18 01       		.byte	0x1
 30944 1c19 E60B     		.2byte	0xbe6
 30945 1c1b A3000000 		.4byte	0xa3
 30946 1c1f 02       		.uleb128 0x2
 30947 1c20 91       		.byte	0x91
 30948 1c21 76       		.sleb128 -10
 30949 1c22 00       		.byte	0
 30950 1c23 2B       		.uleb128 0x2b
 30951 1c24 B4060000 		.4byte	.LASF313
 30952 1c28 01       		.byte	0x1
 30953 1c29 F80B     		.2byte	0xbf8
 30954 1c2b 97000000 		.4byte	0x97
 30955 1c2f 00000000 		.4byte	.LFB89
 30956 1c33 18060000 		.4byte	.LFE89-.LFB89
 30957 1c37 01       		.uleb128 0x1
 30958 1c38 9C       		.byte	0x9c
 30959 1c39 581C0000 		.4byte	0x1c58
 30960 1c3d 26       		.uleb128 0x26
 30961 1c3e 6900     		.ascii	"i\000"
 30962 1c40 01       		.byte	0x1
 30963 1c41 FA0B     		.2byte	0xbfa
 30964 1c43 97000000 		.4byte	0x97
 30965 1c47 02       		.uleb128 0x2
 30966 1c48 91       		.byte	0x91
 30967 1c49 77       		.sleb128 -9
 30968 1c4a 26       		.uleb128 0x26
 30969 1c4b 6A00     		.ascii	"j\000"
 30970 1c4d 01       		.byte	0x1
 30971 1c4e FA0B     		.2byte	0xbfa
 30972 1c50 97000000 		.4byte	0x97
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 665


 30973 1c54 02       		.uleb128 0x2
 30974 1c55 91       		.byte	0x91
 30975 1c56 76       		.sleb128 -10
 30976 1c57 00       		.byte	0
 30977 1c58 28       		.uleb128 0x28
 30978 1c59 38090000 		.4byte	.LASF314
 30979 1c5d 01       		.byte	0x1
 30980 1c5e 890C     		.2byte	0xc89
 30981 1c60 00000000 		.4byte	.LFB90
 30982 1c64 40020000 		.4byte	.LFE90-.LFB90
 30983 1c68 01       		.uleb128 0x1
 30984 1c69 9C       		.byte	0x9c
 30985 1c6a 951C0000 		.4byte	0x1c95
 30986 1c6e 23       		.uleb128 0x23
 30987 1c6f BC0E0000 		.4byte	.LASF243
 30988 1c73 01       		.byte	0x1
 30989 1c74 8B0C     		.2byte	0xc8b
 30990 1c76 97000000 		.4byte	0x97
 30991 1c7a 02       		.uleb128 0x2
 30992 1c7b 91       		.byte	0x91
 30993 1c7c 73       		.sleb128 -13
 30994 1c7d 1E       		.uleb128 0x1e
 30995 1c7e FA000000 		.4byte	.LBB30
 30996 1c82 6A000000 		.4byte	.LBE30-.LBB30
 30997 1c86 26       		.uleb128 0x26
 30998 1c87 6900     		.ascii	"i\000"
 30999 1c89 01       		.byte	0x1
 31000 1c8a 9C0C     		.2byte	0xc9c
 31001 1c8c 73000000 		.4byte	0x73
 31002 1c90 02       		.uleb128 0x2
 31003 1c91 91       		.byte	0x91
 31004 1c92 74       		.sleb128 -12
 31005 1c93 00       		.byte	0
 31006 1c94 00       		.byte	0
 31007 1c95 27       		.uleb128 0x27
 31008 1c96 E2060000 		.4byte	.LASF316
 31009 1c9a 01       		.byte	0x1
 31010 1c9b C10C     		.2byte	0xcc1
 31011 1c9d 00000000 		.4byte	.LFB91
 31012 1ca1 28010000 		.4byte	.LFE91-.LFB91
 31013 1ca5 01       		.uleb128 0x1
 31014 1ca6 9C       		.byte	0x9c
 31015 1ca7 D91C0000 		.4byte	0x1cd9
 31016 1cab 23       		.uleb128 0x23
 31017 1cac 56070000 		.4byte	.LASF248
 31018 1cb0 01       		.byte	0x1
 31019 1cb1 C30C     		.2byte	0xcc3
 31020 1cb3 97000000 		.4byte	0x97
 31021 1cb7 02       		.uleb128 0x2
 31022 1cb8 91       		.byte	0x91
 31023 1cb9 6F       		.sleb128 -17
 31024 1cba 23       		.uleb128 0x23
 31025 1cbb A3120000 		.4byte	.LASF239
 31026 1cbf 01       		.byte	0x1
 31027 1cc0 C40C     		.2byte	0xcc4
 31028 1cc2 C7000000 		.4byte	0xc7
 31029 1cc6 02       		.uleb128 0x2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 666


 31030 1cc7 91       		.byte	0x91
 31031 1cc8 6C       		.sleb128 -20
 31032 1cc9 23       		.uleb128 0x23
 31033 1cca 6D060000 		.4byte	.LASF233
 31034 1cce 01       		.byte	0x1
 31035 1ccf C70C     		.2byte	0xcc7
 31036 1cd1 5D080000 		.4byte	0x85d
 31037 1cd5 02       		.uleb128 0x2
 31038 1cd6 91       		.byte	0x91
 31039 1cd7 64       		.sleb128 -28
 31040 1cd8 00       		.byte	0
 31041 1cd9 27       		.uleb128 0x27
 31042 1cda 6D0F0000 		.4byte	.LASF317
 31043 1cde 01       		.byte	0x1
 31044 1cdf E20C     		.2byte	0xce2
 31045 1ce1 00000000 		.4byte	.LFB92
 31046 1ce5 B8000000 		.4byte	.LFE92-.LFB92
 31047 1ce9 01       		.uleb128 0x1
 31048 1cea 9C       		.byte	0x9c
 31049 1ceb 1D1D0000 		.4byte	0x1d1d
 31050 1cef 23       		.uleb128 0x23
 31051 1cf0 56070000 		.4byte	.LASF248
 31052 1cf4 01       		.byte	0x1
 31053 1cf5 E40C     		.2byte	0xce4
 31054 1cf7 97000000 		.4byte	0x97
 31055 1cfb 02       		.uleb128 0x2
 31056 1cfc 91       		.byte	0x91
 31057 1cfd 6F       		.sleb128 -17
 31058 1cfe 23       		.uleb128 0x23
 31059 1cff A3120000 		.4byte	.LASF239
 31060 1d03 01       		.byte	0x1
 31061 1d04 E50C     		.2byte	0xce5
 31062 1d06 C7000000 		.4byte	0xc7
 31063 1d0a 02       		.uleb128 0x2
 31064 1d0b 91       		.byte	0x91
 31065 1d0c 6C       		.sleb128 -20
 31066 1d0d 23       		.uleb128 0x23
 31067 1d0e 6D060000 		.4byte	.LASF233
 31068 1d12 01       		.byte	0x1
 31069 1d13 E90C     		.2byte	0xce9
 31070 1d15 5D080000 		.4byte	0x85d
 31071 1d19 02       		.uleb128 0x2
 31072 1d1a 91       		.byte	0x91
 31073 1d1b 64       		.sleb128 -28
 31074 1d1c 00       		.byte	0
 31075 1d1d 27       		.uleb128 0x27
 31076 1d1e 2A020000 		.4byte	.LASF318
 31077 1d22 01       		.byte	0x1
 31078 1d23 FB0C     		.2byte	0xcfb
 31079 1d25 00000000 		.4byte	.LFB93
 31080 1d29 B8000000 		.4byte	.LFE93-.LFB93
 31081 1d2d 01       		.uleb128 0x1
 31082 1d2e 9C       		.byte	0x9c
 31083 1d2f 611D0000 		.4byte	0x1d61
 31084 1d33 23       		.uleb128 0x23
 31085 1d34 56070000 		.4byte	.LASF248
 31086 1d38 01       		.byte	0x1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 667


 31087 1d39 FD0C     		.2byte	0xcfd
 31088 1d3b 97000000 		.4byte	0x97
 31089 1d3f 02       		.uleb128 0x2
 31090 1d40 91       		.byte	0x91
 31091 1d41 6F       		.sleb128 -17
 31092 1d42 23       		.uleb128 0x23
 31093 1d43 A3120000 		.4byte	.LASF239
 31094 1d47 01       		.byte	0x1
 31095 1d48 FE0C     		.2byte	0xcfe
 31096 1d4a C7000000 		.4byte	0xc7
 31097 1d4e 02       		.uleb128 0x2
 31098 1d4f 91       		.byte	0x91
 31099 1d50 6C       		.sleb128 -20
 31100 1d51 23       		.uleb128 0x23
 31101 1d52 6D060000 		.4byte	.LASF233
 31102 1d56 01       		.byte	0x1
 31103 1d57 020D     		.2byte	0xd02
 31104 1d59 5D080000 		.4byte	0x85d
 31105 1d5d 02       		.uleb128 0x2
 31106 1d5e 91       		.byte	0x91
 31107 1d5f 64       		.sleb128 -28
 31108 1d60 00       		.byte	0
 31109 1d61 27       		.uleb128 0x27
 31110 1d62 390A0000 		.4byte	.LASF319
 31111 1d66 01       		.byte	0x1
 31112 1d67 140D     		.2byte	0xd14
 31113 1d69 00000000 		.4byte	.LFB94
 31114 1d6d 5C000000 		.4byte	.LFE94-.LFB94
 31115 1d71 01       		.uleb128 0x1
 31116 1d72 9C       		.byte	0x9c
 31117 1d73 961D0000 		.4byte	0x1d96
 31118 1d77 23       		.uleb128 0x23
 31119 1d78 A3120000 		.4byte	.LASF239
 31120 1d7c 01       		.byte	0x1
 31121 1d7d 160D     		.2byte	0xd16
 31122 1d7f C7000000 		.4byte	0xc7
 31123 1d83 02       		.uleb128 0x2
 31124 1d84 91       		.byte	0x91
 31125 1d85 76       		.sleb128 -10
 31126 1d86 23       		.uleb128 0x23
 31127 1d87 6D060000 		.4byte	.LASF233
 31128 1d8b 01       		.byte	0x1
 31129 1d8c 1A0D     		.2byte	0xd1a
 31130 1d8e 90090000 		.4byte	0x990
 31131 1d92 02       		.uleb128 0x2
 31132 1d93 91       		.byte	0x91
 31133 1d94 70       		.sleb128 -16
 31134 1d95 00       		.byte	0
 31135 1d96 2C       		.uleb128 0x2c
 31136 1d97 8F0C0000 		.4byte	.LASF320
 31137 1d9b 01       		.byte	0x1
 31138 1d9c 2C0D     		.2byte	0xd2c
 31139 1d9e 00000000 		.4byte	.LFB95
 31140 1da2 E0010000 		.4byte	.LFE95-.LFB95
 31141 1da6 01       		.uleb128 0x1
 31142 1da7 9C       		.byte	0x9c
 31143 1da8 D31D0000 		.4byte	0x1dd3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 668


 31144 1dac 23       		.uleb128 0x23
 31145 1dad A3120000 		.4byte	.LASF239
 31146 1db1 01       		.byte	0x1
 31147 1db2 2F0D     		.2byte	0xd2f
 31148 1db4 D31D0000 		.4byte	0x1dd3
 31149 1db8 02       		.uleb128 0x2
 31150 1db9 91       		.byte	0x91
 31151 1dba 70       		.sleb128 -16
 31152 1dbb 1E       		.uleb128 0x1e
 31153 1dbc 2E000000 		.4byte	.LBB31
 31154 1dc0 98010000 		.4byte	.LBE31-.LBB31
 31155 1dc4 26       		.uleb128 0x26
 31156 1dc5 6900     		.ascii	"i\000"
 31157 1dc7 01       		.byte	0x1
 31158 1dc8 350D     		.2byte	0xd35
 31159 1dca 97000000 		.4byte	0x97
 31160 1dce 02       		.uleb128 0x2
 31161 1dcf 91       		.byte	0x91
 31162 1dd0 77       		.sleb128 -9
 31163 1dd1 00       		.byte	0
 31164 1dd2 00       		.byte	0
 31165 1dd3 09       		.uleb128 0x9
 31166 1dd4 C7000000 		.4byte	0xc7
 31167 1dd8 E31D0000 		.4byte	0x1de3
 31168 1ddc 0A       		.uleb128 0xa
 31169 1ddd 18010000 		.4byte	0x118
 31170 1de1 01       		.byte	0x1
 31171 1de2 00       		.byte	0
 31172 1de3 27       		.uleb128 0x27
 31173 1de4 27150000 		.4byte	.LASF321
 31174 1de8 01       		.byte	0x1
 31175 1de9 4F0D     		.2byte	0xd4f
 31176 1deb 00000000 		.4byte	.LFB96
 31177 1def BC000000 		.4byte	.LFE96-.LFB96
 31178 1df3 01       		.uleb128 0x1
 31179 1df4 9C       		.byte	0x9c
 31180 1df5 091E0000 		.4byte	0x1e09
 31181 1df9 26       		.uleb128 0x26
 31182 1dfa 61757800 		.ascii	"aux\000"
 31183 1dfe 01       		.byte	0x1
 31184 1dff 520D     		.2byte	0xd52
 31185 1e01 97000000 		.4byte	0x97
 31186 1e05 02       		.uleb128 0x2
 31187 1e06 91       		.byte	0x91
 31188 1e07 77       		.sleb128 -9
 31189 1e08 00       		.byte	0
 31190 1e09 27       		.uleb128 0x27
 31191 1e0a ED0C0000 		.4byte	.LASF322
 31192 1e0e 01       		.byte	0x1
 31193 1e0f 740D     		.2byte	0xd74
 31194 1e11 00000000 		.4byte	.LFB97
 31195 1e15 5C000000 		.4byte	.LFE97-.LFB97
 31196 1e19 01       		.uleb128 0x1
 31197 1e1a 9C       		.byte	0x9c
 31198 1e1b 2F1E0000 		.4byte	0x1e2f
 31199 1e1f 23       		.uleb128 0x23
 31200 1e20 6D060000 		.4byte	.LASF233
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 669


 31201 1e24 01       		.byte	0x1
 31202 1e25 760D     		.2byte	0xd76
 31203 1e27 10060000 		.4byte	0x610
 31204 1e2b 02       		.uleb128 0x2
 31205 1e2c 91       		.byte	0x91
 31206 1e2d 74       		.sleb128 -12
 31207 1e2e 00       		.byte	0
 31208 1e2f 27       		.uleb128 0x27
 31209 1e30 C0100000 		.4byte	.LASF323
 31210 1e34 01       		.byte	0x1
 31211 1e35 8B0D     		.2byte	0xd8b
 31212 1e37 00000000 		.4byte	.LFB98
 31213 1e3b 38010000 		.4byte	.LFE98-.LFB98
 31214 1e3f 01       		.uleb128 0x1
 31215 1e40 9C       		.byte	0x9c
 31216 1e41 731E0000 		.4byte	0x1e73
 31217 1e45 23       		.uleb128 0x23
 31218 1e46 56070000 		.4byte	.LASF248
 31219 1e4a 01       		.byte	0x1
 31220 1e4b 8D0D     		.2byte	0xd8d
 31221 1e4d 97000000 		.4byte	0x97
 31222 1e51 02       		.uleb128 0x2
 31223 1e52 91       		.byte	0x91
 31224 1e53 6F       		.sleb128 -17
 31225 1e54 23       		.uleb128 0x23
 31226 1e55 A3120000 		.4byte	.LASF239
 31227 1e59 01       		.byte	0x1
 31228 1e5a 8E0D     		.2byte	0xd8e
 31229 1e5c C7000000 		.4byte	0xc7
 31230 1e60 02       		.uleb128 0x2
 31231 1e61 91       		.byte	0x91
 31232 1e62 6C       		.sleb128 -20
 31233 1e63 23       		.uleb128 0x23
 31234 1e64 6D060000 		.4byte	.LASF233
 31235 1e68 01       		.byte	0x1
 31236 1e69 920D     		.2byte	0xd92
 31237 1e6b 71050000 		.4byte	0x571
 31238 1e6f 02       		.uleb128 0x2
 31239 1e70 91       		.byte	0x91
 31240 1e71 60       		.sleb128 -32
 31241 1e72 00       		.byte	0
 31242 1e73 27       		.uleb128 0x27
 31243 1e74 A30A0000 		.4byte	.LASF324
 31244 1e78 01       		.byte	0x1
 31245 1e79 B20D     		.2byte	0xdb2
 31246 1e7b 00000000 		.4byte	.LFB99
 31247 1e7f EC000000 		.4byte	.LFE99-.LFB99
 31248 1e83 01       		.uleb128 0x1
 31249 1e84 9C       		.byte	0x9c
 31250 1e85 A81E0000 		.4byte	0x1ea8
 31251 1e89 23       		.uleb128 0x23
 31252 1e8a 6D060000 		.4byte	.LASF233
 31253 1e8e 01       		.byte	0x1
 31254 1e8f B60D     		.2byte	0xdb6
 31255 1e91 90090000 		.4byte	0x990
 31256 1e95 02       		.uleb128 0x2
 31257 1e96 91       		.byte	0x91
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 670


 31258 1e97 68       		.sleb128 -24
 31259 1e98 23       		.uleb128 0x23
 31260 1e99 A3120000 		.4byte	.LASF239
 31261 1e9d 01       		.byte	0x1
 31262 1e9e B70D     		.2byte	0xdb7
 31263 1ea0 C7000000 		.4byte	0xc7
 31264 1ea4 02       		.uleb128 0x2
 31265 1ea5 91       		.byte	0x91
 31266 1ea6 66       		.sleb128 -26
 31267 1ea7 00       		.byte	0
 31268 1ea8 27       		.uleb128 0x27
 31269 1ea9 CA070000 		.4byte	.LASF325
 31270 1ead 01       		.byte	0x1
 31271 1eae D80D     		.2byte	0xdd8
 31272 1eb0 00000000 		.4byte	.LFB100
 31273 1eb4 64000000 		.4byte	.LFE100-.LFB100
 31274 1eb8 01       		.uleb128 0x1
 31275 1eb9 9C       		.byte	0x9c
 31276 1eba DD1E0000 		.4byte	0x1edd
 31277 1ebe 23       		.uleb128 0x23
 31278 1ebf 6D060000 		.4byte	.LASF233
 31279 1ec3 01       		.byte	0x1
 31280 1ec4 DC0D     		.2byte	0xddc
 31281 1ec6 FD0A0000 		.4byte	0xafd
 31282 1eca 02       		.uleb128 0x2
 31283 1ecb 91       		.byte	0x91
 31284 1ecc 74       		.sleb128 -12
 31285 1ecd 23       		.uleb128 0x23
 31286 1ece A3120000 		.4byte	.LASF239
 31287 1ed2 01       		.byte	0x1
 31288 1ed3 DD0D     		.2byte	0xddd
 31289 1ed5 C7000000 		.4byte	0xc7
 31290 1ed9 02       		.uleb128 0x2
 31291 1eda 91       		.byte	0x91
 31292 1edb 72       		.sleb128 -14
 31293 1edc 00       		.byte	0
 31294 1edd 2D       		.uleb128 0x2d
 31295 1ede B4070000 		.4byte	.LASF326
 31296 1ee2 01       		.byte	0x1
 31297 1ee3 F20D     		.2byte	0xdf2
 31298 1ee5 C7000000 		.4byte	0xc7
 31299 1ee9 00000000 		.4byte	.LFB101
 31300 1eed A8000000 		.4byte	.LFE101-.LFB101
 31301 1ef1 01       		.uleb128 0x1
 31302 1ef2 9C       		.byte	0x9c
 31303 1ef3 521F0000 		.4byte	0x1f52
 31304 1ef7 23       		.uleb128 0x23
 31305 1ef8 6D060000 		.4byte	.LASF233
 31306 1efc 01       		.byte	0x1
 31307 1efd F40D     		.2byte	0xdf4
 31308 1eff 521F0000 		.4byte	0x1f52
 31309 1f03 02       		.uleb128 0x2
 31310 1f04 91       		.byte	0x91
 31311 1f05 5C       		.sleb128 -36
 31312 1f06 23       		.uleb128 0x23
 31313 1f07 390C0000 		.4byte	.LASF234
 31314 1f0b 01       		.byte	0x1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 671


 31315 1f0c F50D     		.2byte	0xdf5
 31316 1f0e 97000000 		.4byte	0x97
 31317 1f12 02       		.uleb128 0x2
 31318 1f13 91       		.byte	0x91
 31319 1f14 74       		.sleb128 -12
 31320 1f15 23       		.uleb128 0x23
 31321 1f16 4D100000 		.4byte	.LASF327
 31322 1f1a 01       		.byte	0x1
 31323 1f1b F60D     		.2byte	0xdf6
 31324 1f1d C7000000 		.4byte	0xc7
 31325 1f21 02       		.uleb128 0x2
 31326 1f22 91       		.byte	0x91
 31327 1f23 76       		.sleb128 -10
 31328 1f24 23       		.uleb128 0x23
 31329 1f25 F8020000 		.4byte	.LASF328
 31330 1f29 01       		.byte	0x1
 31331 1f2a F70D     		.2byte	0xdf7
 31332 1f2c AF000000 		.4byte	0xaf
 31333 1f30 02       		.uleb128 0x2
 31334 1f31 91       		.byte	0x91
 31335 1f32 70       		.sleb128 -16
 31336 1f33 23       		.uleb128 0x23
 31337 1f34 14140000 		.4byte	.LASF329
 31338 1f38 01       		.byte	0x1
 31339 1f39 F70D     		.2byte	0xdf7
 31340 1f3b AF000000 		.4byte	0xaf
 31341 1f3f 02       		.uleb128 0x2
 31342 1f40 91       		.byte	0x91
 31343 1f41 6C       		.sleb128 -20
 31344 1f42 23       		.uleb128 0x23
 31345 1f43 CB040000 		.4byte	.LASF330
 31346 1f47 01       		.byte	0x1
 31347 1f48 F80D     		.2byte	0xdf8
 31348 1f4a 97000000 		.4byte	0x97
 31349 1f4e 02       		.uleb128 0x2
 31350 1f4f 91       		.byte	0x91
 31351 1f50 75       		.sleb128 -11
 31352 1f51 00       		.byte	0
 31353 1f52 09       		.uleb128 0x9
 31354 1f53 97000000 		.4byte	0x97
 31355 1f57 621F0000 		.4byte	0x1f62
 31356 1f5b 0A       		.uleb128 0xa
 31357 1f5c 18010000 		.4byte	0x118
 31358 1f60 0F       		.byte	0xf
 31359 1f61 00       		.byte	0
 31360 1f62 2E       		.uleb128 0x2e
 31361 1f63 0F010000 		.4byte	.LASF360
 31362 1f67 01       		.byte	0x1
 31363 1f68 150E     		.2byte	0xe15
 31364 1f6a 00000000 		.4byte	.LFB102
 31365 1f6e 34000000 		.4byte	.LFE102-.LFB102
 31366 1f72 01       		.uleb128 0x1
 31367 1f73 9C       		.byte	0x9c
 31368 1f74 27       		.uleb128 0x27
 31369 1f75 37040000 		.4byte	.LASF331
 31370 1f79 01       		.byte	0x1
 31371 1f7a 230E     		.2byte	0xe23
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 672


 31372 1f7c 00000000 		.4byte	.LFB103
 31373 1f80 20000000 		.4byte	.LFE103-.LFB103
 31374 1f84 01       		.uleb128 0x1
 31375 1f85 9C       		.byte	0x9c
 31376 1f86 9A1F0000 		.4byte	0x1f9a
 31377 1f8a 23       		.uleb128 0x23
 31378 1f8b 6D060000 		.4byte	.LASF233
 31379 1f8f 01       		.byte	0x1
 31380 1f90 250E     		.2byte	0xe25
 31381 1f92 CC080000 		.4byte	0x8cc
 31382 1f96 02       		.uleb128 0x2
 31383 1f97 91       		.byte	0x91
 31384 1f98 74       		.sleb128 -12
 31385 1f99 00       		.byte	0
 31386 1f9a 27       		.uleb128 0x27
 31387 1f9b 87010000 		.4byte	.LASF332
 31388 1f9f 01       		.byte	0x1
 31389 1fa0 310E     		.2byte	0xe31
 31390 1fa2 00000000 		.4byte	.LFB104
 31391 1fa6 A0000000 		.4byte	.LFE104-.LFB104
 31392 1faa 01       		.uleb128 0x1
 31393 1fab 9C       		.byte	0x9c
 31394 1fac CF1F0000 		.4byte	0x1fcf
 31395 1fb0 23       		.uleb128 0x23
 31396 1fb1 6D060000 		.4byte	.LASF233
 31397 1fb5 01       		.byte	0x1
 31398 1fb6 350E     		.2byte	0xe35
 31399 1fb8 90090000 		.4byte	0x990
 31400 1fbc 02       		.uleb128 0x2
 31401 1fbd 91       		.byte	0x91
 31402 1fbe 70       		.sleb128 -16
 31403 1fbf 23       		.uleb128 0x23
 31404 1fc0 A3120000 		.4byte	.LASF239
 31405 1fc4 01       		.byte	0x1
 31406 1fc5 360E     		.2byte	0xe36
 31407 1fc7 C7000000 		.4byte	0xc7
 31408 1fcb 02       		.uleb128 0x2
 31409 1fcc 91       		.byte	0x91
 31410 1fcd 6E       		.sleb128 -18
 31411 1fce 00       		.byte	0
 31412 1fcf 27       		.uleb128 0x27
 31413 1fd0 89110000 		.4byte	.LASF333
 31414 1fd4 01       		.byte	0x1
 31415 1fd5 4A0E     		.2byte	0xe4a
 31416 1fd7 00000000 		.4byte	.LFB105
 31417 1fdb BC010000 		.4byte	.LFE105-.LFB105
 31418 1fdf 01       		.uleb128 0x1
 31419 1fe0 9C       		.byte	0x9c
 31420 1fe1 31200000 		.4byte	0x2031
 31421 1fe5 23       		.uleb128 0x23
 31422 1fe6 AB0C0000 		.4byte	.LASF334
 31423 1fea 01       		.byte	0x1
 31424 1feb 4D0E     		.2byte	0xe4d
 31425 1fed AF000000 		.4byte	0xaf
 31426 1ff1 02       		.uleb128 0x2
 31427 1ff2 91       		.byte	0x91
 31428 1ff3 70       		.sleb128 -16
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 673


 31429 1ff4 23       		.uleb128 0x23
 31430 1ff5 C80F0000 		.4byte	.LASF335
 31431 1ff9 01       		.byte	0x1
 31432 1ffa 4E0E     		.2byte	0xe4e
 31433 1ffc EB000000 		.4byte	0xeb
 31434 2000 02       		.uleb128 0x2
 31435 2001 91       		.byte	0x91
 31436 2002 6C       		.sleb128 -20
 31437 2003 23       		.uleb128 0x23
 31438 2004 390C0000 		.4byte	.LASF234
 31439 2008 01       		.byte	0x1
 31440 2009 4F0E     		.2byte	0xe4f
 31441 200b 97000000 		.4byte	0x97
 31442 200f 02       		.uleb128 0x2
 31443 2010 91       		.byte	0x91
 31444 2011 77       		.sleb128 -9
 31445 2012 23       		.uleb128 0x23
 31446 2013 6D060000 		.4byte	.LASF233
 31447 2017 01       		.byte	0x1
 31448 2018 500E     		.2byte	0xe50
 31449 201a CC080000 		.4byte	0x8cc
 31450 201e 02       		.uleb128 0x2
 31451 201f 91       		.byte	0x91
 31452 2020 68       		.sleb128 -24
 31453 2021 23       		.uleb128 0x23
 31454 2022 87100000 		.4byte	.LASF297
 31455 2026 01       		.byte	0x1
 31456 2027 510E     		.2byte	0xe51
 31457 2029 97000000 		.4byte	0x97
 31458 202d 02       		.uleb128 0x2
 31459 202e 91       		.byte	0x91
 31460 202f 6B       		.sleb128 -21
 31461 2030 00       		.byte	0
 31462 2031 27       		.uleb128 0x27
 31463 2032 40020000 		.4byte	.LASF336
 31464 2036 01       		.byte	0x1
 31465 2037 8B0E     		.2byte	0xe8b
 31466 2039 00000000 		.4byte	.LFB106
 31467 203d 60000000 		.4byte	.LFE106-.LFB106
 31468 2041 01       		.uleb128 0x1
 31469 2042 9C       		.byte	0x9c
 31470 2043 66200000 		.4byte	0x2066
 31471 2047 23       		.uleb128 0x23
 31472 2048 6D060000 		.4byte	.LASF233
 31473 204c 01       		.byte	0x1
 31474 204d 8D0E     		.2byte	0xe8d
 31475 204f 90090000 		.4byte	0x990
 31476 2053 02       		.uleb128 0x2
 31477 2054 91       		.byte	0x91
 31478 2055 70       		.sleb128 -16
 31479 2056 23       		.uleb128 0x23
 31480 2057 A3120000 		.4byte	.LASF239
 31481 205b 01       		.byte	0x1
 31482 205c 8E0E     		.2byte	0xe8e
 31483 205e C7000000 		.4byte	0xc7
 31484 2062 02       		.uleb128 0x2
 31485 2063 91       		.byte	0x91
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 674


 31486 2064 6E       		.sleb128 -18
 31487 2065 00       		.byte	0
 31488 2066 27       		.uleb128 0x27
 31489 2067 C3010000 		.4byte	.LASF337
 31490 206b 01       		.byte	0x1
 31491 206c A10E     		.2byte	0xea1
 31492 206e 00000000 		.4byte	.LFB107
 31493 2072 98050000 		.4byte	.LFE107-.LFB107
 31494 2076 01       		.uleb128 0x1
 31495 2077 9C       		.byte	0x9c
 31496 2078 F3200000 		.4byte	0x20f3
 31497 207c 23       		.uleb128 0x23
 31498 207d 62140000 		.4byte	.LASF338
 31499 2081 01       		.byte	0x1
 31500 2082 A40E     		.2byte	0xea4
 31501 2084 97000000 		.4byte	0x97
 31502 2088 02       		.uleb128 0x2
 31503 2089 91       		.byte	0x91
 31504 208a 6F       		.sleb128 -17
 31505 208b 26       		.uleb128 0x26
 31506 208c 6300     		.ascii	"c\000"
 31507 208e 01       		.byte	0x1
 31508 208f A50E     		.2byte	0xea5
 31509 2091 A3000000 		.4byte	0xa3
 31510 2095 02       		.uleb128 0x2
 31511 2096 91       		.byte	0x91
 31512 2097 6C       		.sleb128 -20
 31513 2098 26       		.uleb128 0x26
 31514 2099 6B00     		.ascii	"k\000"
 31515 209b 01       		.byte	0x1
 31516 209c A60E     		.2byte	0xea6
 31517 209e 97000000 		.4byte	0x97
 31518 20a2 02       		.uleb128 0x2
 31519 20a3 91       		.byte	0x91
 31520 20a4 6B       		.sleb128 -21
 31521 20a5 23       		.uleb128 0x23
 31522 20a6 5C000000 		.4byte	.LASF339
 31523 20aa 01       		.byte	0x1
 31524 20ab A70E     		.2byte	0xea7
 31525 20ad A3000000 		.4byte	0xa3
 31526 20b1 02       		.uleb128 0x2
 31527 20b2 91       		.byte	0x91
 31528 20b3 68       		.sleb128 -24
 31529 20b4 23       		.uleb128 0x23
 31530 20b5 A3120000 		.4byte	.LASF239
 31531 20b9 01       		.byte	0x1
 31532 20ba A80E     		.2byte	0xea8
 31533 20bc C7000000 		.4byte	0xc7
 31534 20c0 02       		.uleb128 0x2
 31535 20c1 91       		.byte	0x91
 31536 20c2 66       		.sleb128 -26
 31537 20c3 23       		.uleb128 0x23
 31538 20c4 DF130000 		.4byte	.LASF238
 31539 20c8 01       		.byte	0x1
 31540 20c9 A90E     		.2byte	0xea9
 31541 20cb EB000000 		.4byte	0xeb
 31542 20cf 02       		.uleb128 0x2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 675


 31543 20d0 91       		.byte	0x91
 31544 20d1 60       		.sleb128 -32
 31545 20d2 23       		.uleb128 0x23
 31546 20d3 6D060000 		.4byte	.LASF233
 31547 20d7 01       		.byte	0x1
 31548 20d8 AC0E     		.2byte	0xeac
 31549 20da F3200000 		.4byte	0x20f3
 31550 20de 03       		.uleb128 0x3
 31551 20df 91       		.byte	0x91
 31552 20e0 807D     		.sleb128 -384
 31553 20e2 23       		.uleb128 0x23
 31554 20e3 6C090000 		.4byte	.LASF340
 31555 20e7 01       		.byte	0x1
 31556 20e8 AD0E     		.2byte	0xead
 31557 20ea 540C0000 		.4byte	0xc54
 31558 20ee 03       		.uleb128 0x3
 31559 20ef 91       		.byte	0x91
 31560 20f0 E07C     		.sleb128 -416
 31561 20f2 00       		.byte	0
 31562 20f3 09       		.uleb128 0x9
 31563 20f4 97000000 		.4byte	0x97
 31564 20f8 04210000 		.4byte	0x2104
 31565 20fc 24       		.uleb128 0x24
 31566 20fd 18010000 		.4byte	0x118
 31567 2101 5D01     		.2byte	0x15d
 31568 2103 00       		.byte	0
 31569 2104 27       		.uleb128 0x27
 31570 2105 BA130000 		.4byte	.LASF341
 31571 2109 01       		.byte	0x1
 31572 210a 100F     		.2byte	0xf10
 31573 210c 00000000 		.4byte	.LFB108
 31574 2110 8C000000 		.4byte	.LFE108-.LFB108
 31575 2114 01       		.uleb128 0x1
 31576 2115 9C       		.byte	0x9c
 31577 2116 44210000 		.4byte	0x2144
 31578 211a 23       		.uleb128 0x23
 31579 211b 6D060000 		.4byte	.LASF233
 31580 211f 01       		.byte	0x1
 31581 2120 130F     		.2byte	0xf13
 31582 2122 AB0A0000 		.4byte	0xaab
 31583 2126 02       		.uleb128 0x2
 31584 2127 91       		.byte	0x91
 31585 2128 60       		.sleb128 -32
 31586 2129 26       		.uleb128 0x26
 31587 212a 6900     		.ascii	"i\000"
 31588 212c 01       		.byte	0x1
 31589 212d 140F     		.2byte	0xf14
 31590 212f 97000000 		.4byte	0x97
 31591 2133 02       		.uleb128 0x2
 31592 2134 91       		.byte	0x91
 31593 2135 6F       		.sleb128 -17
 31594 2136 26       		.uleb128 0x26
 31595 2137 6A00     		.ascii	"j\000"
 31596 2139 01       		.byte	0x1
 31597 213a 140F     		.2byte	0xf14
 31598 213c 97000000 		.4byte	0x97
 31599 2140 02       		.uleb128 0x2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 676


 31600 2141 91       		.byte	0x91
 31601 2142 6E       		.sleb128 -18
 31602 2143 00       		.byte	0
 31603 2144 27       		.uleb128 0x27
 31604 2145 C3110000 		.4byte	.LASF342
 31605 2149 01       		.byte	0x1
 31606 214a 290F     		.2byte	0xf29
 31607 214c 00000000 		.4byte	.LFB109
 31608 2150 EC000000 		.4byte	.LFE109-.LFB109
 31609 2154 01       		.uleb128 0x1
 31610 2155 9C       		.byte	0x9c
 31611 2156 A2210000 		.4byte	0x21a2
 31612 215a 23       		.uleb128 0x23
 31613 215b 6D060000 		.4byte	.LASF233
 31614 215f 01       		.byte	0x1
 31615 2160 2C0F     		.2byte	0xf2c
 31616 2162 A2210000 		.4byte	0x21a2
 31617 2166 02       		.uleb128 0x2
 31618 2167 91       		.byte	0x91
 31619 2168 54       		.sleb128 -44
 31620 2169 26       		.uleb128 0x26
 31621 216a 6900     		.ascii	"i\000"
 31622 216c 01       		.byte	0x1
 31623 216d 2D0F     		.2byte	0xf2d
 31624 216f 97000000 		.4byte	0x97
 31625 2173 02       		.uleb128 0x2
 31626 2174 91       		.byte	0x91
 31627 2175 6F       		.sleb128 -17
 31628 2176 26       		.uleb128 0x26
 31629 2177 6A00     		.ascii	"j\000"
 31630 2179 01       		.byte	0x1
 31631 217a 2D0F     		.2byte	0xf2d
 31632 217c 97000000 		.4byte	0x97
 31633 2180 02       		.uleb128 0x2
 31634 2181 91       		.byte	0x91
 31635 2182 6E       		.sleb128 -18
 31636 2183 26       		.uleb128 0x26
 31637 2184 69647800 		.ascii	"idx\000"
 31638 2188 01       		.byte	0x1
 31639 2189 2D0F     		.2byte	0xf2d
 31640 218b 97000000 		.4byte	0x97
 31641 218f 02       		.uleb128 0x2
 31642 2190 91       		.byte	0x91
 31643 2191 6D       		.sleb128 -19
 31644 2192 23       		.uleb128 0x23
 31645 2193 920D0000 		.4byte	.LASF240
 31646 2197 01       		.byte	0x1
 31647 2198 2E0F     		.2byte	0xf2e
 31648 219a A3000000 		.4byte	0xa3
 31649 219e 02       		.uleb128 0x2
 31650 219f 91       		.byte	0x91
 31651 21a0 52       		.sleb128 -46
 31652 21a1 00       		.byte	0
 31653 21a2 09       		.uleb128 0x9
 31654 21a3 97000000 		.4byte	0x97
 31655 21a7 B2210000 		.4byte	0x21b2
 31656 21ab 0A       		.uleb128 0xa
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 677


 31657 21ac 18010000 		.4byte	0x118
 31658 21b0 15       		.byte	0x15
 31659 21b1 00       		.byte	0
 31660 21b2 27       		.uleb128 0x27
 31661 21b3 DC030000 		.4byte	.LASF343
 31662 21b7 01       		.byte	0x1
 31663 21b8 470F     		.2byte	0xf47
 31664 21ba 00000000 		.4byte	.LFB110
 31665 21be 5C000000 		.4byte	.LFE110-.LFB110
 31666 21c2 01       		.uleb128 0x1
 31667 21c3 9C       		.byte	0x9c
 31668 21c4 E5210000 		.4byte	0x21e5
 31669 21c8 23       		.uleb128 0x23
 31670 21c9 6D060000 		.4byte	.LASF233
 31671 21cd 01       		.byte	0x1
 31672 21ce 4A0F     		.2byte	0xf4a
 31673 21d0 440C0000 		.4byte	0xc44
 31674 21d4 02       		.uleb128 0x2
 31675 21d5 91       		.byte	0x91
 31676 21d6 68       		.sleb128 -24
 31677 21d7 26       		.uleb128 0x26
 31678 21d8 6900     		.ascii	"i\000"
 31679 21da 01       		.byte	0x1
 31680 21db 4B0F     		.2byte	0xf4b
 31681 21dd 97000000 		.4byte	0x97
 31682 21e1 02       		.uleb128 0x2
 31683 21e2 91       		.byte	0x91
 31684 21e3 77       		.sleb128 -9
 31685 21e4 00       		.byte	0
 31686 21e5 27       		.uleb128 0x27
 31687 21e6 14040000 		.4byte	.LASF344
 31688 21ea 01       		.byte	0x1
 31689 21eb 5E0F     		.2byte	0xf5e
 31690 21ed 00000000 		.4byte	.LFB111
 31691 21f1 C0000000 		.4byte	.LFE111-.LFB111
 31692 21f5 01       		.uleb128 0x1
 31693 21f6 9C       		.byte	0x9c
 31694 21f7 36220000 		.4byte	0x2236
 31695 21fb 23       		.uleb128 0x23
 31696 21fc 6D060000 		.4byte	.LASF233
 31697 2200 01       		.byte	0x1
 31698 2201 610F     		.2byte	0xf61
 31699 2203 36220000 		.4byte	0x2236
 31700 2207 02       		.uleb128 0x2
 31701 2208 91       		.byte	0x91
 31702 2209 54       		.sleb128 -44
 31703 220a 26       		.uleb128 0x26
 31704 220b 6900     		.ascii	"i\000"
 31705 220d 01       		.byte	0x1
 31706 220e 620F     		.2byte	0xf62
 31707 2210 97000000 		.4byte	0x97
 31708 2214 02       		.uleb128 0x2
 31709 2215 91       		.byte	0x91
 31710 2216 6F       		.sleb128 -17
 31711 2217 26       		.uleb128 0x26
 31712 2218 69647800 		.ascii	"idx\000"
 31713 221c 01       		.byte	0x1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 678


 31714 221d 620F     		.2byte	0xf62
 31715 221f 97000000 		.4byte	0x97
 31716 2223 02       		.uleb128 0x2
 31717 2224 91       		.byte	0x91
 31718 2225 6E       		.sleb128 -18
 31719 2226 23       		.uleb128 0x23
 31720 2227 A3120000 		.4byte	.LASF239
 31721 222b 01       		.byte	0x1
 31722 222c 630F     		.2byte	0xf63
 31723 222e C7000000 		.4byte	0xc7
 31724 2232 02       		.uleb128 0x2
 31725 2233 91       		.byte	0x91
 31726 2234 52       		.sleb128 -46
 31727 2235 00       		.byte	0
 31728 2236 09       		.uleb128 0x9
 31729 2237 97000000 		.4byte	0x97
 31730 223b 46220000 		.4byte	0x2246
 31731 223f 0A       		.uleb128 0xa
 31732 2240 18010000 		.4byte	0x118
 31733 2244 19       		.byte	0x19
 31734 2245 00       		.byte	0
 31735 2246 22       		.uleb128 0x22
 31736 2247 86030000 		.4byte	.LASF345
 31737 224b 01       		.byte	0x1
 31738 224c 790F     		.2byte	0xf79
 31739 224e 00000000 		.4byte	.LFB112
 31740 2252 54010000 		.4byte	.LFE112-.LFB112
 31741 2256 01       		.uleb128 0x1
 31742 2257 9C       		.byte	0x9c
 31743 2258 9B220000 		.4byte	0x229b
 31744 225c 25       		.uleb128 0x25
 31745 225d 9B070000 		.4byte	.LASF346
 31746 2261 01       		.byte	0x1
 31747 2262 790F     		.2byte	0xf79
 31748 2264 A3000000 		.4byte	0xa3
 31749 2268 04       		.uleb128 0x4
 31750 2269 91       		.byte	0x91
 31751 226a 9EE37E   		.sleb128 -20066
 31752 226d 26       		.uleb128 0x26
 31753 226e 6900     		.ascii	"i\000"
 31754 2270 01       		.byte	0x1
 31755 2271 7B0F     		.2byte	0xf7b
 31756 2273 97000000 		.4byte	0x97
 31757 2277 02       		.uleb128 0x2
 31758 2278 91       		.byte	0x91
 31759 2279 77       		.sleb128 -9
 31760 227a 23       		.uleb128 0x23
 31761 227b B0040000 		.4byte	.LASF347
 31762 227f 01       		.byte	0x1
 31763 2280 7C0F     		.2byte	0xf7c
 31764 2282 EF100000 		.4byte	0x10ef
 31765 2286 02       		.uleb128 0x2
 31766 2287 91       		.byte	0x91
 31767 2288 44       		.sleb128 -60
 31768 2289 23       		.uleb128 0x23
 31769 228a BC080000 		.4byte	.LASF222
 31770 228e 01       		.byte	0x1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 679


 31771 228f 7D0F     		.2byte	0xf7d
 31772 2291 170F0000 		.4byte	0xf17
 31773 2295 04       		.uleb128 0x4
 31774 2296 91       		.byte	0x91
 31775 2297 A4E37E   		.sleb128 -20060
 31776 229a 00       		.byte	0
 31777 229b 22       		.uleb128 0x22
 31778 229c 64040000 		.4byte	.LASF348
 31779 22a0 01       		.byte	0x1
 31780 22a1 950F     		.2byte	0xf95
 31781 22a3 00000000 		.4byte	.LFB113
 31782 22a7 B0000000 		.4byte	.LFE113-.LFB113
 31783 22ab 01       		.uleb128 0x1
 31784 22ac 9C       		.byte	0x9c
 31785 22ad FC220000 		.4byte	0x22fc
 31786 22b1 25       		.uleb128 0x25
 31787 22b2 9B070000 		.4byte	.LASF346
 31788 22b6 01       		.byte	0x1
 31789 22b7 950F     		.2byte	0xf95
 31790 22b9 A3000000 		.4byte	0xa3
 31791 22bd 03       		.uleb128 0x3
 31792 22be 91       		.byte	0x91
 31793 22bf BE7F     		.sleb128 -66
 31794 22c1 26       		.uleb128 0x26
 31795 22c2 6900     		.ascii	"i\000"
 31796 22c4 01       		.byte	0x1
 31797 22c5 970F     		.2byte	0xf97
 31798 22c7 97000000 		.4byte	0x97
 31799 22cb 02       		.uleb128 0x2
 31800 22cc 91       		.byte	0x91
 31801 22cd 77       		.sleb128 -9
 31802 22ce 23       		.uleb128 0x23
 31803 22cf B0040000 		.4byte	.LASF347
 31804 22d3 01       		.byte	0x1
 31805 22d4 980F     		.2byte	0xf98
 31806 22d6 EF100000 		.4byte	0x10ef
 31807 22da 02       		.uleb128 0x2
 31808 22db 91       		.byte	0x91
 31809 22dc 44       		.sleb128 -60
 31810 22dd 26       		.uleb128 0x26
 31811 22de 72657300 		.ascii	"res\000"
 31812 22e2 01       		.byte	0x1
 31813 22e3 A10F     		.2byte	0xfa1
 31814 22e5 97000000 		.4byte	0x97
 31815 22e9 02       		.uleb128 0x2
 31816 22ea 91       		.byte	0x91
 31817 22eb 76       		.sleb128 -10
 31818 22ec 23       		.uleb128 0x23
 31819 22ed 6D060000 		.4byte	.LASF233
 31820 22f1 01       		.byte	0x1
 31821 22f2 A40F     		.2byte	0xfa4
 31822 22f4 10060000 		.4byte	0x610
 31823 22f8 02       		.uleb128 0x2
 31824 22f9 91       		.byte	0x91
 31825 22fa 40       		.sleb128 -64
 31826 22fb 00       		.byte	0
 31827 22fc 28       		.uleb128 0x28
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 680


 31828 22fd 20010000 		.4byte	.LASF349
 31829 2301 01       		.byte	0x1
 31830 2302 B60F     		.2byte	0xfb6
 31831 2304 00000000 		.4byte	.LFB114
 31832 2308 12000000 		.4byte	.LFE114-.LFB114
 31833 230c 01       		.uleb128 0x1
 31834 230d 9C       		.byte	0x9c
 31835 230e 22230000 		.4byte	0x2322
 31836 2312 25       		.uleb128 0x25
 31837 2313 10070000 		.4byte	.LASF350
 31838 2317 01       		.byte	0x1
 31839 2318 B60F     		.2byte	0xfb6
 31840 231a 73000000 		.4byte	0x73
 31841 231e 02       		.uleb128 0x2
 31842 231f 91       		.byte	0x91
 31843 2320 74       		.sleb128 -12
 31844 2321 00       		.byte	0
 31845 2322 2F       		.uleb128 0x2f
 31846 2323 FE0C0000 		.4byte	.LASF351
 31847 2327 01       		.byte	0x1
 31848 2328 0410     		.2byte	0x1004
 31849 232a 97000000 		.4byte	0x97
 31850 232e 00000000 		.4byte	.LFB115
 31851 2332 64010000 		.4byte	.LFE115-.LFB115
 31852 2336 01       		.uleb128 0x1
 31853 2337 9C       		.byte	0x9c
 31854 2338 9D230000 		.4byte	0x239d
 31855 233c 23       		.uleb128 0x23
 31856 233d F70E0000 		.4byte	.LASF352
 31857 2341 01       		.byte	0x1
 31858 2342 0610     		.2byte	0x1006
 31859 2344 97000000 		.4byte	0x97
 31860 2348 05       		.uleb128 0x5
 31861 2349 03       		.byte	0x3
 31862 234a 06000000 		.4byte	fsm_state.11526
 31863 234e 26       		.uleb128 0x26
 31864 234f 636E7400 		.ascii	"cnt\000"
 31865 2353 01       		.byte	0x1
 31866 2354 0710     		.2byte	0x1007
 31867 2356 D3000000 		.4byte	0xd3
 31868 235a 05       		.uleb128 0x5
 31869 235b 03       		.byte	0x3
 31870 235c 08000000 		.4byte	cnt.11527
 31871 2360 23       		.uleb128 0x23
 31872 2361 9D040000 		.4byte	.LASF353
 31873 2365 01       		.byte	0x1
 31874 2366 0810     		.2byte	0x1008
 31875 2368 D3000000 		.4byte	0xd3
 31876 236c 02       		.uleb128 0x2
 31877 236d 91       		.byte	0x91
 31878 236e 74       		.sleb128 -12
 31879 236f 23       		.uleb128 0x23
 31880 2370 2F0C0000 		.4byte	.LASF354
 31881 2374 01       		.byte	0x1
 31882 2375 0810     		.2byte	0x1008
 31883 2377 D3000000 		.4byte	0xd3
 31884 237b 02       		.uleb128 0x2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 681


 31885 237c 91       		.byte	0x91
 31886 237d 70       		.sleb128 -16
 31887 237e 23       		.uleb128 0x23
 31888 237f A7000000 		.4byte	.LASF355
 31889 2383 01       		.byte	0x1
 31890 2384 0910     		.2byte	0x1009
 31891 2386 D3000000 		.4byte	0xd3
 31892 238a 02       		.uleb128 0x2
 31893 238b 91       		.byte	0x91
 31894 238c 6C       		.sleb128 -20
 31895 238d 23       		.uleb128 0x23
 31896 238e B3000000 		.4byte	.LASF356
 31897 2392 01       		.byte	0x1
 31898 2393 0910     		.2byte	0x1009
 31899 2395 D3000000 		.4byte	0xd3
 31900 2399 02       		.uleb128 0x2
 31901 239a 91       		.byte	0x91
 31902 239b 68       		.sleb128 -24
 31903 239c 00       		.byte	0
 31904 239d 28       		.uleb128 0x28
 31905 239e 02080000 		.4byte	.LASF357
 31906 23a2 01       		.byte	0x1
 31907 23a3 5610     		.2byte	0x1056
 31908 23a5 00000000 		.4byte	.LFB116
 31909 23a9 12000000 		.4byte	.LFE116-.LFB116
 31910 23ad 01       		.uleb128 0x1
 31911 23ae 9C       		.byte	0x9c
 31912 23af C3230000 		.4byte	0x23c3
 31913 23b3 25       		.uleb128 0x25
 31914 23b4 10070000 		.4byte	.LASF350
 31915 23b8 01       		.byte	0x1
 31916 23b9 5610     		.2byte	0x1056
 31917 23bb 73000000 		.4byte	0x73
 31918 23bf 02       		.uleb128 0x2
 31919 23c0 91       		.byte	0x91
 31920 23c1 74       		.sleb128 -12
 31921 23c2 00       		.byte	0
 31922 23c3 28       		.uleb128 0x28
 31923 23c4 8B0E0000 		.4byte	.LASF358
 31924 23c8 01       		.byte	0x1
 31925 23c9 A210     		.2byte	0x10a2
 31926 23cb 00000000 		.4byte	.LFB117
 31927 23cf 1A000000 		.4byte	.LFE117-.LFB117
 31928 23d3 01       		.uleb128 0x1
 31929 23d4 9C       		.byte	0x9c
 31930 23d5 F8230000 		.4byte	0x23f8
 31931 23d9 25       		.uleb128 0x25
 31932 23da 64030000 		.4byte	.LASF359
 31933 23de 01       		.byte	0x1
 31934 23df A210     		.2byte	0x10a2
 31935 23e1 97000000 		.4byte	0x97
 31936 23e5 02       		.uleb128 0x2
 31937 23e6 91       		.byte	0x91
 31938 23e7 77       		.sleb128 -9
 31939 23e8 25       		.uleb128 0x25
 31940 23e9 1C0B0000 		.4byte	.LASF190
 31941 23ed 01       		.byte	0x1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 682


 31942 23ee A210     		.2byte	0x10a2
 31943 23f0 97000000 		.4byte	0x97
 31944 23f4 02       		.uleb128 0x2
 31945 23f5 91       		.byte	0x91
 31946 23f6 76       		.sleb128 -10
 31947 23f7 00       		.byte	0
 31948 23f8 30       		.uleb128 0x30
 31949 23f9 BF000000 		.4byte	.LASF361
 31950 23fd 01       		.byte	0x1
 31951 23fe CC10     		.2byte	0x10cc
 31952 2400 00000000 		.4byte	.LFB118
 31953 2404 0C000000 		.4byte	.LFE118-.LFB118
 31954 2408 01       		.uleb128 0x1
 31955 2409 9C       		.byte	0x9c
 31956 240a 30       		.uleb128 0x30
 31957 240b 9C060000 		.4byte	.LASF362
 31958 240f 01       		.byte	0x1
 31959 2410 E210     		.2byte	0x10e2
 31960 2412 00000000 		.4byte	.LFB119
 31961 2416 0C000000 		.4byte	.LFE119-.LFB119
 31962 241a 01       		.uleb128 0x1
 31963 241b 9C       		.byte	0x9c
 31964 241c 31       		.uleb128 0x31
 31965 241d EC120000 		.4byte	.LASF363
 31966 2421 09       		.byte	0x9
 31967 2422 1207     		.2byte	0x712
 31968 2424 28240000 		.4byte	0x2428
 31969 2428 06       		.uleb128 0x6
 31970 2429 81000000 		.4byte	0x81
 31971 242d 09       		.uleb128 0x9
 31972 242e 28030000 		.4byte	0x328
 31973 2432 3D240000 		.4byte	0x243d
 31974 2436 0A       		.uleb128 0xa
 31975 2437 18010000 		.4byte	0x118
 31976 243b 01       		.byte	0x1
 31977 243c 00       		.byte	0
 31978 243d 31       		.uleb128 0x31
 31979 243e BC140000 		.4byte	.LASF364
 31980 2442 08       		.byte	0x8
 31981 2443 2002     		.2byte	0x220
 31982 2445 2D240000 		.4byte	0x242d
 31983 2449 31       		.uleb128 0x31
 31984 244a 15050000 		.4byte	.LASF365
 31985 244e 08       		.byte	0x8
 31986 244f 2002     		.2byte	0x220
 31987 2451 2D240000 		.4byte	0x242d
 31988 2455 31       		.uleb128 0x31
 31989 2456 440E0000 		.4byte	.LASF366
 31990 245a 08       		.byte	0x8
 31991 245b 2002     		.2byte	0x220
 31992 245d 2D240000 		.4byte	0x242d
 31993 2461 09       		.uleb128 0x9
 31994 2462 65030000 		.4byte	0x365
 31995 2466 71240000 		.4byte	0x2471
 31996 246a 0A       		.uleb128 0xa
 31997 246b 18010000 		.4byte	0x118
 31998 246f 01       		.byte	0x1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 683


 31999 2470 00       		.byte	0
 32000 2471 31       		.uleb128 0x31
 32001 2472 20070000 		.4byte	.LASF367
 32002 2476 08       		.byte	0x8
 32003 2477 2102     		.2byte	0x221
 32004 2479 61240000 		.4byte	0x2461
 32005 247d 31       		.uleb128 0x31
 32006 247e 0F150000 		.4byte	.LASF368
 32007 2482 08       		.byte	0x8
 32008 2483 2102     		.2byte	0x221
 32009 2485 61240000 		.4byte	0x2461
 32010 2489 31       		.uleb128 0x31
 32011 248a 86140000 		.4byte	.LASF369
 32012 248e 08       		.byte	0x8
 32013 248f 2202     		.2byte	0x222
 32014 2491 E6030000 		.4byte	0x3e6
 32015 2495 31       		.uleb128 0x31
 32016 2496 B5110000 		.4byte	.LASF370
 32017 249a 08       		.byte	0x8
 32018 249b 2202     		.2byte	0x222
 32019 249d E6030000 		.4byte	0x3e6
 32020 24a1 31       		.uleb128 0x31
 32021 24a2 6B110000 		.4byte	.LASF371
 32022 24a6 08       		.byte	0x8
 32023 24a7 2302     		.2byte	0x223
 32024 24a9 37040000 		.4byte	0x437
 32025 24ad 31       		.uleb128 0x31
 32026 24ae DA000000 		.4byte	.LASF372
 32027 24b2 08       		.byte	0x8
 32028 24b3 2402     		.2byte	0x224
 32029 24b5 52040000 		.4byte	0x452
 32030 24b9 31       		.uleb128 0x31
 32031 24ba 9A110000 		.4byte	.LASF373
 32032 24be 08       		.byte	0x8
 32033 24bf 2502     		.2byte	0x225
 32034 24c1 5F0B0000 		.4byte	0xb5f
 32035 24c5 31       		.uleb128 0x31
 32036 24c6 110C0000 		.4byte	.LASF374
 32037 24ca 08       		.byte	0x8
 32038 24cb 2502     		.2byte	0x225
 32039 24cd 5F0B0000 		.4byte	0xb5f
 32040 24d1 31       		.uleb128 0x31
 32041 24d2 690A0000 		.4byte	.LASF375
 32042 24d6 08       		.byte	0x8
 32043 24d7 2602     		.2byte	0x226
 32044 24d9 100D0000 		.4byte	0xd10
 32045 24dd 31       		.uleb128 0x31
 32046 24de 41030000 		.4byte	.LASF376
 32047 24e2 08       		.byte	0x8
 32048 24e3 2C02     		.2byte	0x22c
 32049 24e5 A3000000 		.4byte	0xa3
 32050 24e9 31       		.uleb128 0x31
 32051 24ea 8A0F0000 		.4byte	.LASF377
 32052 24ee 08       		.byte	0x8
 32053 24ef 2D02     		.2byte	0x22d
 32054 24f1 A3000000 		.4byte	0xa3
 32055 24f5 31       		.uleb128 0x31
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 684


 32056 24f6 BC0F0000 		.4byte	.LASF378
 32057 24fa 08       		.byte	0x8
 32058 24fb 3002     		.2byte	0x230
 32059 24fd 17040000 		.4byte	0x417
 32060 2501 31       		.uleb128 0x31
 32061 2502 83130000 		.4byte	.LASF379
 32062 2506 08       		.byte	0x8
 32063 2507 3102     		.2byte	0x231
 32064 2509 BC080000 		.4byte	0x8bc
 32065 250d 31       		.uleb128 0x31
 32066 250e 0C130000 		.4byte	.LASF380
 32067 2512 08       		.byte	0x8
 32068 2513 3402     		.2byte	0x234
 32069 2515 17040000 		.4byte	0x417
 32070 2519 31       		.uleb128 0x31
 32071 251a 250B0000 		.4byte	.LASF381
 32072 251e 08       		.byte	0x8
 32073 251f 3E02     		.2byte	0x23e
 32074 2521 CC080000 		.4byte	0x8cc
 32075 2525 31       		.uleb128 0x31
 32076 2526 DD040000 		.4byte	.LASF382
 32077 252a 08       		.byte	0x8
 32078 252b 4002     		.2byte	0x240
 32079 252d 97000000 		.4byte	0x97
 32080 2531 31       		.uleb128 0x31
 32081 2532 F2070000 		.4byte	.LASF383
 32082 2536 08       		.byte	0x8
 32083 2537 4702     		.2byte	0x247
 32084 2539 97000000 		.4byte	0x97
 32085 253d 09       		.uleb128 0x9
 32086 253e C7000000 		.4byte	0xc7
 32087 2542 4D250000 		.4byte	0x254d
 32088 2546 0A       		.uleb128 0xa
 32089 2547 18010000 		.4byte	0x118
 32090 254b 0B       		.byte	0xb
 32091 254c 00       		.byte	0
 32092 254d 31       		.uleb128 0x31
 32093 254e D5040000 		.4byte	.LASF384
 32094 2552 08       		.byte	0x8
 32095 2553 4A02     		.2byte	0x24a
 32096 2555 3D250000 		.4byte	0x253d
 32097 2559 31       		.uleb128 0x31
 32098 255a C8140000 		.4byte	.LASF385
 32099 255e 08       		.byte	0x8
 32100 255f 4B02     		.2byte	0x24b
 32101 2561 97000000 		.4byte	0x97
 32102 2565 09       		.uleb128 0x9
 32103 2566 AF000000 		.4byte	0xaf
 32104 256a 7B250000 		.4byte	0x257b
 32105 256e 0A       		.uleb128 0xa
 32106 256f 18010000 		.4byte	0x118
 32107 2573 01       		.byte	0x1
 32108 2574 0A       		.uleb128 0xa
 32109 2575 18010000 		.4byte	0x118
 32110 2579 04       		.byte	0x4
 32111 257a 00       		.byte	0
 32112 257b 31       		.uleb128 0x31
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 685


 32113 257c 31070000 		.4byte	.LASF386
 32114 2580 08       		.byte	0x8
 32115 2581 5102     		.2byte	0x251
 32116 2583 65250000 		.4byte	0x2565
 32117 2587 31       		.uleb128 0x31
 32118 2588 96100000 		.4byte	.LASF387
 32119 258c 08       		.byte	0x8
 32120 258d 5202     		.2byte	0x252
 32121 258f CC080000 		.4byte	0x8cc
 32122 2593 09       		.uleb128 0x9
 32123 2594 A3000000 		.4byte	0xa3
 32124 2598 A9250000 		.4byte	0x25a9
 32125 259c 0A       		.uleb128 0xa
 32126 259d 18010000 		.4byte	0x118
 32127 25a1 01       		.byte	0x1
 32128 25a2 0A       		.uleb128 0xa
 32129 25a3 18010000 		.4byte	0x118
 32130 25a7 04       		.byte	0x4
 32131 25a8 00       		.byte	0
 32132 25a9 31       		.uleb128 0x31
 32133 25aa AC130000 		.4byte	.LASF388
 32134 25ae 08       		.byte	0x8
 32135 25af 5302     		.2byte	0x253
 32136 25b1 93250000 		.4byte	0x2593
 32137 25b5 31       		.uleb128 0x31
 32138 25b6 83060000 		.4byte	.LASF389
 32139 25ba 08       		.byte	0x8
 32140 25bb 5B02     		.2byte	0x25b
 32141 25bd 22030000 		.4byte	0x322
 32142 25c1 31       		.uleb128 0x31
 32143 25c2 30100000 		.4byte	.LASF390
 32144 25c6 08       		.byte	0x8
 32145 25c7 5C02     		.2byte	0x25c
 32146 25c9 C1160000 		.4byte	0x16c1
 32147 25cd 31       		.uleb128 0x31
 32148 25ce 24040000 		.4byte	.LASF391
 32149 25d2 08       		.byte	0x8
 32150 25d3 5D02     		.2byte	0x25d
 32151 25d5 C1160000 		.4byte	0x16c1
 32152 25d9 31       		.uleb128 0x31
 32153 25da 4C140000 		.4byte	.LASF392
 32154 25de 08       		.byte	0x8
 32155 25df 6002     		.2byte	0x260
 32156 25e1 C1160000 		.4byte	0x16c1
 32157 25e5 31       		.uleb128 0x31
 32158 25e6 2A120000 		.4byte	.LASF393
 32159 25ea 08       		.byte	0x8
 32160 25eb 6302     		.2byte	0x263
 32161 25ed 97000000 		.4byte	0x97
 32162 25f1 31       		.uleb128 0x31
 32163 25f2 E9130000 		.4byte	.LASF394
 32164 25f6 08       		.byte	0x8
 32165 25f7 6402     		.2byte	0x264
 32166 25f9 3D080000 		.4byte	0x83d
 32167 25fd 31       		.uleb128 0x31
 32168 25fe DD120000 		.4byte	.LASF395
 32169 2602 08       		.byte	0x8
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 686


 32170 2603 6502     		.2byte	0x265
 32171 2605 73000000 		.4byte	0x73
 32172 2609 09       		.uleb128 0x9
 32173 260a 73000000 		.4byte	0x73
 32174 260e 19260000 		.4byte	0x2619
 32175 2612 0A       		.uleb128 0xa
 32176 2613 18010000 		.4byte	0x118
 32177 2617 04       		.byte	0x4
 32178 2618 00       		.byte	0
 32179 2619 31       		.uleb128 0x31
 32180 261a 540D0000 		.4byte	.LASF396
 32181 261e 08       		.byte	0x8
 32182 261f 6602     		.2byte	0x266
 32183 2621 09260000 		.4byte	0x2609
 32184 2625 09       		.uleb128 0x9
 32185 2626 940C0000 		.4byte	0xc94
 32186 262a 35260000 		.4byte	0x2635
 32187 262e 0A       		.uleb128 0xa
 32188 262f 18010000 		.4byte	0x118
 32189 2633 04       		.byte	0x4
 32190 2634 00       		.byte	0
 32191 2635 31       		.uleb128 0x31
 32192 2636 A7050000 		.4byte	.LASF397
 32193 263a 08       		.byte	0x8
 32194 263b 6702     		.2byte	0x267
 32195 263d 25260000 		.4byte	0x2625
 32196 2641 09       		.uleb128 0x9
 32197 2642 97000000 		.4byte	0x97
 32198 2646 57260000 		.4byte	0x2657
 32199 264a 0A       		.uleb128 0xa
 32200 264b 18010000 		.4byte	0x118
 32201 264f 04       		.byte	0x4
 32202 2650 0A       		.uleb128 0xa
 32203 2651 18010000 		.4byte	0x118
 32204 2655 02       		.byte	0x2
 32205 2656 00       		.byte	0
 32206 2657 31       		.uleb128 0x31
 32207 2658 6C0C0000 		.4byte	.LASF398
 32208 265c 08       		.byte	0x8
 32209 265d 6B02     		.2byte	0x26b
 32210 265f 41260000 		.4byte	0x2641
 32211 2663 31       		.uleb128 0x31
 32212 2664 EE140000 		.4byte	.LASF399
 32213 2668 08       		.byte	0x8
 32214 2669 7002     		.2byte	0x270
 32215 266b 97000000 		.4byte	0x97
 32216 266f 09       		.uleb128 0x9
 32217 2670 A3000000 		.4byte	0xa3
 32218 2674 86260000 		.4byte	0x2686
 32219 2678 24       		.uleb128 0x24
 32220 2679 18010000 		.4byte	0x118
 32221 267d 5702     		.2byte	0x257
 32222 267f 0A       		.uleb128 0xa
 32223 2680 18010000 		.4byte	0x118
 32224 2684 01       		.byte	0x1
 32225 2685 00       		.byte	0
 32226 2686 31       		.uleb128 0x31
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 687


 32227 2687 AD120000 		.4byte	.LASF400
 32228 268b 08       		.byte	0x8
 32229 268c 7302     		.2byte	0x273
 32230 268e 6F260000 		.4byte	0x266f
 32231 2692 31       		.uleb128 0x31
 32232 2693 070B0000 		.4byte	.LASF401
 32233 2697 08       		.byte	0x8
 32234 2698 7402     		.2byte	0x274
 32235 269a AF000000 		.4byte	0xaf
 32236 269e 32       		.uleb128 0x32
 32237 269f B9120000 		.4byte	.LASF402
 32238 26a3 01       		.byte	0x1
 32239 26a4 33       		.byte	0x33
 32240 26a5 AF260000 		.4byte	0x26af
 32241 26a9 05       		.uleb128 0x5
 32242 26aa 03       		.byte	0x3
 32243 26ab 00000000 		.4byte	EEPROM_ADDR
 32244 26af 07       		.uleb128 0x7
 32245 26b0 04       		.byte	0x4
 32246 26b1 00010000 		.4byte	0x100
 32247 26b5 00       		.byte	0
 32248              		.section	.debug_abbrev,"",%progbits
 32249              	.Ldebug_abbrev0:
 32250 0000 01       		.uleb128 0x1
 32251 0001 11       		.uleb128 0x11
 32252 0002 01       		.byte	0x1
 32253 0003 25       		.uleb128 0x25
 32254 0004 0E       		.uleb128 0xe
 32255 0005 13       		.uleb128 0x13
 32256 0006 0B       		.uleb128 0xb
 32257 0007 03       		.uleb128 0x3
 32258 0008 0E       		.uleb128 0xe
 32259 0009 1B       		.uleb128 0x1b
 32260 000a 0E       		.uleb128 0xe
 32261 000b 55       		.uleb128 0x55
 32262 000c 17       		.uleb128 0x17
 32263 000d 11       		.uleb128 0x11
 32264 000e 01       		.uleb128 0x1
 32265 000f 10       		.uleb128 0x10
 32266 0010 17       		.uleb128 0x17
 32267 0011 00       		.byte	0
 32268 0012 00       		.byte	0
 32269 0013 02       		.uleb128 0x2
 32270 0014 24       		.uleb128 0x24
 32271 0015 00       		.byte	0
 32272 0016 0B       		.uleb128 0xb
 32273 0017 0B       		.uleb128 0xb
 32274 0018 3E       		.uleb128 0x3e
 32275 0019 0B       		.uleb128 0xb
 32276 001a 03       		.uleb128 0x3
 32277 001b 0E       		.uleb128 0xe
 32278 001c 00       		.byte	0
 32279 001d 00       		.byte	0
 32280 001e 03       		.uleb128 0x3
 32281 001f 16       		.uleb128 0x16
 32282 0020 00       		.byte	0
 32283 0021 03       		.uleb128 0x3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 688


 32284 0022 0E       		.uleb128 0xe
 32285 0023 3A       		.uleb128 0x3a
 32286 0024 0B       		.uleb128 0xb
 32287 0025 3B       		.uleb128 0x3b
 32288 0026 0B       		.uleb128 0xb
 32289 0027 49       		.uleb128 0x49
 32290 0028 13       		.uleb128 0x13
 32291 0029 00       		.byte	0
 32292 002a 00       		.byte	0
 32293 002b 04       		.uleb128 0x4
 32294 002c 24       		.uleb128 0x24
 32295 002d 00       		.byte	0
 32296 002e 0B       		.uleb128 0xb
 32297 002f 0B       		.uleb128 0xb
 32298 0030 3E       		.uleb128 0x3e
 32299 0031 0B       		.uleb128 0xb
 32300 0032 03       		.uleb128 0x3
 32301 0033 08       		.uleb128 0x8
 32302 0034 00       		.byte	0
 32303 0035 00       		.byte	0
 32304 0036 05       		.uleb128 0x5
 32305 0037 16       		.uleb128 0x16
 32306 0038 00       		.byte	0
 32307 0039 03       		.uleb128 0x3
 32308 003a 0E       		.uleb128 0xe
 32309 003b 3A       		.uleb128 0x3a
 32310 003c 0B       		.uleb128 0xb
 32311 003d 3B       		.uleb128 0x3b
 32312 003e 05       		.uleb128 0x5
 32313 003f 49       		.uleb128 0x49
 32314 0040 13       		.uleb128 0x13
 32315 0041 00       		.byte	0
 32316 0042 00       		.byte	0
 32317 0043 06       		.uleb128 0x6
 32318 0044 35       		.uleb128 0x35
 32319 0045 00       		.byte	0
 32320 0046 49       		.uleb128 0x49
 32321 0047 13       		.uleb128 0x13
 32322 0048 00       		.byte	0
 32323 0049 00       		.byte	0
 32324 004a 07       		.uleb128 0x7
 32325 004b 0F       		.uleb128 0xf
 32326 004c 00       		.byte	0
 32327 004d 0B       		.uleb128 0xb
 32328 004e 0B       		.uleb128 0xb
 32329 004f 49       		.uleb128 0x49
 32330 0050 13       		.uleb128 0x13
 32331 0051 00       		.byte	0
 32332 0052 00       		.byte	0
 32333 0053 08       		.uleb128 0x8
 32334 0054 26       		.uleb128 0x26
 32335 0055 00       		.byte	0
 32336 0056 49       		.uleb128 0x49
 32337 0057 13       		.uleb128 0x13
 32338 0058 00       		.byte	0
 32339 0059 00       		.byte	0
 32340 005a 09       		.uleb128 0x9
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 689


 32341 005b 01       		.uleb128 0x1
 32342 005c 01       		.byte	0x1
 32343 005d 49       		.uleb128 0x49
 32344 005e 13       		.uleb128 0x13
 32345 005f 01       		.uleb128 0x1
 32346 0060 13       		.uleb128 0x13
 32347 0061 00       		.byte	0
 32348 0062 00       		.byte	0
 32349 0063 0A       		.uleb128 0xa
 32350 0064 21       		.uleb128 0x21
 32351 0065 00       		.byte	0
 32352 0066 49       		.uleb128 0x49
 32353 0067 13       		.uleb128 0x13
 32354 0068 2F       		.uleb128 0x2f
 32355 0069 0B       		.uleb128 0xb
 32356 006a 00       		.byte	0
 32357 006b 00       		.byte	0
 32358 006c 0B       		.uleb128 0xb
 32359 006d 04       		.uleb128 0x4
 32360 006e 01       		.byte	0x1
 32361 006f 03       		.uleb128 0x3
 32362 0070 0E       		.uleb128 0xe
 32363 0071 0B       		.uleb128 0xb
 32364 0072 0B       		.uleb128 0xb
 32365 0073 49       		.uleb128 0x49
 32366 0074 13       		.uleb128 0x13
 32367 0075 3A       		.uleb128 0x3a
 32368 0076 0B       		.uleb128 0xb
 32369 0077 3B       		.uleb128 0x3b
 32370 0078 0B       		.uleb128 0xb
 32371 0079 01       		.uleb128 0x1
 32372 007a 13       		.uleb128 0x13
 32373 007b 00       		.byte	0
 32374 007c 00       		.byte	0
 32375 007d 0C       		.uleb128 0xc
 32376 007e 28       		.uleb128 0x28
 32377 007f 00       		.byte	0
 32378 0080 03       		.uleb128 0x3
 32379 0081 0E       		.uleb128 0xe
 32380 0082 1C       		.uleb128 0x1c
 32381 0083 0B       		.uleb128 0xb
 32382 0084 00       		.byte	0
 32383 0085 00       		.byte	0
 32384 0086 0D       		.uleb128 0xd
 32385 0087 13       		.uleb128 0x13
 32386 0088 00       		.byte	0
 32387 0089 03       		.uleb128 0x3
 32388 008a 0E       		.uleb128 0xe
 32389 008b 3C       		.uleb128 0x3c
 32390 008c 19       		.uleb128 0x19
 32391 008d 00       		.byte	0
 32392 008e 00       		.byte	0
 32393 008f 0E       		.uleb128 0xe
 32394 0090 13       		.uleb128 0x13
 32395 0091 01       		.byte	0x1
 32396 0092 03       		.uleb128 0x3
 32397 0093 0E       		.uleb128 0xe
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 690


 32398 0094 0B       		.uleb128 0xb
 32399 0095 0B       		.uleb128 0xb
 32400 0096 3A       		.uleb128 0x3a
 32401 0097 0B       		.uleb128 0xb
 32402 0098 3B       		.uleb128 0x3b
 32403 0099 0B       		.uleb128 0xb
 32404 009a 01       		.uleb128 0x1
 32405 009b 13       		.uleb128 0x13
 32406 009c 00       		.byte	0
 32407 009d 00       		.byte	0
 32408 009e 0F       		.uleb128 0xf
 32409 009f 0D       		.uleb128 0xd
 32410 00a0 00       		.byte	0
 32411 00a1 03       		.uleb128 0x3
 32412 00a2 08       		.uleb128 0x8
 32413 00a3 3A       		.uleb128 0x3a
 32414 00a4 0B       		.uleb128 0xb
 32415 00a5 3B       		.uleb128 0x3b
 32416 00a6 0B       		.uleb128 0xb
 32417 00a7 49       		.uleb128 0x49
 32418 00a8 13       		.uleb128 0x13
 32419 00a9 38       		.uleb128 0x38
 32420 00aa 0B       		.uleb128 0xb
 32421 00ab 00       		.byte	0
 32422 00ac 00       		.byte	0
 32423 00ad 10       		.uleb128 0x10
 32424 00ae 0D       		.uleb128 0xd
 32425 00af 00       		.byte	0
 32426 00b0 03       		.uleb128 0x3
 32427 00b1 0E       		.uleb128 0xe
 32428 00b2 3A       		.uleb128 0x3a
 32429 00b3 0B       		.uleb128 0xb
 32430 00b4 3B       		.uleb128 0x3b
 32431 00b5 0B       		.uleb128 0xb
 32432 00b6 49       		.uleb128 0x49
 32433 00b7 13       		.uleb128 0x13
 32434 00b8 38       		.uleb128 0x38
 32435 00b9 0B       		.uleb128 0xb
 32436 00ba 00       		.byte	0
 32437 00bb 00       		.byte	0
 32438 00bc 11       		.uleb128 0x11
 32439 00bd 13       		.uleb128 0x13
 32440 00be 01       		.byte	0x1
 32441 00bf 03       		.uleb128 0x3
 32442 00c0 0E       		.uleb128 0xe
 32443 00c1 0B       		.uleb128 0xb
 32444 00c2 0B       		.uleb128 0xb
 32445 00c3 3A       		.uleb128 0x3a
 32446 00c4 0B       		.uleb128 0xb
 32447 00c5 3B       		.uleb128 0x3b
 32448 00c6 05       		.uleb128 0x5
 32449 00c7 01       		.uleb128 0x1
 32450 00c8 13       		.uleb128 0x13
 32451 00c9 00       		.byte	0
 32452 00ca 00       		.byte	0
 32453 00cb 12       		.uleb128 0x12
 32454 00cc 0D       		.uleb128 0xd
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 691


 32455 00cd 00       		.byte	0
 32456 00ce 03       		.uleb128 0x3
 32457 00cf 0E       		.uleb128 0xe
 32458 00d0 3A       		.uleb128 0x3a
 32459 00d1 0B       		.uleb128 0xb
 32460 00d2 3B       		.uleb128 0x3b
 32461 00d3 05       		.uleb128 0x5
 32462 00d4 49       		.uleb128 0x49
 32463 00d5 13       		.uleb128 0x13
 32464 00d6 38       		.uleb128 0x38
 32465 00d7 0B       		.uleb128 0xb
 32466 00d8 00       		.byte	0
 32467 00d9 00       		.byte	0
 32468 00da 13       		.uleb128 0x13
 32469 00db 0D       		.uleb128 0xd
 32470 00dc 00       		.byte	0
 32471 00dd 03       		.uleb128 0x3
 32472 00de 08       		.uleb128 0x8
 32473 00df 3A       		.uleb128 0x3a
 32474 00e0 0B       		.uleb128 0xb
 32475 00e1 3B       		.uleb128 0x3b
 32476 00e2 05       		.uleb128 0x5
 32477 00e3 49       		.uleb128 0x49
 32478 00e4 13       		.uleb128 0x13
 32479 00e5 38       		.uleb128 0x38
 32480 00e6 0B       		.uleb128 0xb
 32481 00e7 00       		.byte	0
 32482 00e8 00       		.byte	0
 32483 00e9 14       		.uleb128 0x14
 32484 00ea 13       		.uleb128 0x13
 32485 00eb 01       		.byte	0x1
 32486 00ec 03       		.uleb128 0x3
 32487 00ed 0E       		.uleb128 0xe
 32488 00ee 0B       		.uleb128 0xb
 32489 00ef 05       		.uleb128 0x5
 32490 00f0 3A       		.uleb128 0x3a
 32491 00f1 0B       		.uleb128 0xb
 32492 00f2 3B       		.uleb128 0x3b
 32493 00f3 05       		.uleb128 0x5
 32494 00f4 01       		.uleb128 0x1
 32495 00f5 13       		.uleb128 0x13
 32496 00f6 00       		.byte	0
 32497 00f7 00       		.byte	0
 32498 00f8 15       		.uleb128 0x15
 32499 00f9 0D       		.uleb128 0xd
 32500 00fa 00       		.byte	0
 32501 00fb 03       		.uleb128 0x3
 32502 00fc 08       		.uleb128 0x8
 32503 00fd 3A       		.uleb128 0x3a
 32504 00fe 0B       		.uleb128 0xb
 32505 00ff 3B       		.uleb128 0x3b
 32506 0100 05       		.uleb128 0x5
 32507 0101 49       		.uleb128 0x49
 32508 0102 13       		.uleb128 0x13
 32509 0103 38       		.uleb128 0x38
 32510 0104 05       		.uleb128 0x5
 32511 0105 00       		.byte	0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 692


 32512 0106 00       		.byte	0
 32513 0107 16       		.uleb128 0x16
 32514 0108 0D       		.uleb128 0xd
 32515 0109 00       		.byte	0
 32516 010a 03       		.uleb128 0x3
 32517 010b 0E       		.uleb128 0xe
 32518 010c 3A       		.uleb128 0x3a
 32519 010d 0B       		.uleb128 0xb
 32520 010e 3B       		.uleb128 0x3b
 32521 010f 05       		.uleb128 0x5
 32522 0110 49       		.uleb128 0x49
 32523 0111 13       		.uleb128 0x13
 32524 0112 38       		.uleb128 0x38
 32525 0113 05       		.uleb128 0x5
 32526 0114 00       		.byte	0
 32527 0115 00       		.byte	0
 32528 0116 17       		.uleb128 0x17
 32529 0117 2E       		.uleb128 0x2e
 32530 0118 01       		.byte	0x1
 32531 0119 03       		.uleb128 0x3
 32532 011a 0E       		.uleb128 0xe
 32533 011b 3A       		.uleb128 0x3a
 32534 011c 0B       		.uleb128 0xb
 32535 011d 3B       		.uleb128 0x3b
 32536 011e 05       		.uleb128 0x5
 32537 011f 27       		.uleb128 0x27
 32538 0120 19       		.uleb128 0x19
 32539 0121 49       		.uleb128 0x49
 32540 0122 13       		.uleb128 0x13
 32541 0123 20       		.uleb128 0x20
 32542 0124 0B       		.uleb128 0xb
 32543 0125 01       		.uleb128 0x1
 32544 0126 13       		.uleb128 0x13
 32545 0127 00       		.byte	0
 32546 0128 00       		.byte	0
 32547 0129 18       		.uleb128 0x18
 32548 012a 05       		.uleb128 0x5
 32549 012b 00       		.byte	0
 32550 012c 03       		.uleb128 0x3
 32551 012d 0E       		.uleb128 0xe
 32552 012e 3A       		.uleb128 0x3a
 32553 012f 0B       		.uleb128 0xb
 32554 0130 3B       		.uleb128 0x3b
 32555 0131 05       		.uleb128 0x5
 32556 0132 49       		.uleb128 0x49
 32557 0133 13       		.uleb128 0x13
 32558 0134 00       		.byte	0
 32559 0135 00       		.byte	0
 32560 0136 19       		.uleb128 0x19
 32561 0137 34       		.uleb128 0x34
 32562 0138 00       		.byte	0
 32563 0139 03       		.uleb128 0x3
 32564 013a 0E       		.uleb128 0xe
 32565 013b 3A       		.uleb128 0x3a
 32566 013c 0B       		.uleb128 0xb
 32567 013d 3B       		.uleb128 0x3b
 32568 013e 05       		.uleb128 0x5
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 693


 32569 013f 49       		.uleb128 0x49
 32570 0140 13       		.uleb128 0x13
 32571 0141 00       		.byte	0
 32572 0142 00       		.byte	0
 32573 0143 1A       		.uleb128 0x1a
 32574 0144 2E       		.uleb128 0x2e
 32575 0145 01       		.byte	0x1
 32576 0146 3F       		.uleb128 0x3f
 32577 0147 19       		.uleb128 0x19
 32578 0148 03       		.uleb128 0x3
 32579 0149 0E       		.uleb128 0xe
 32580 014a 3A       		.uleb128 0x3a
 32581 014b 0B       		.uleb128 0xb
 32582 014c 3B       		.uleb128 0x3b
 32583 014d 0B       		.uleb128 0xb
 32584 014e 27       		.uleb128 0x27
 32585 014f 19       		.uleb128 0x19
 32586 0150 11       		.uleb128 0x11
 32587 0151 01       		.uleb128 0x1
 32588 0152 12       		.uleb128 0x12
 32589 0153 06       		.uleb128 0x6
 32590 0154 40       		.uleb128 0x40
 32591 0155 18       		.uleb128 0x18
 32592 0156 9642     		.uleb128 0x2116
 32593 0158 19       		.uleb128 0x19
 32594 0159 01       		.uleb128 0x1
 32595 015a 13       		.uleb128 0x13
 32596 015b 00       		.byte	0
 32597 015c 00       		.byte	0
 32598 015d 1B       		.uleb128 0x1b
 32599 015e 34       		.uleb128 0x34
 32600 015f 00       		.byte	0
 32601 0160 03       		.uleb128 0x3
 32602 0161 0E       		.uleb128 0xe
 32603 0162 3A       		.uleb128 0x3a
 32604 0163 0B       		.uleb128 0xb
 32605 0164 3B       		.uleb128 0x3b
 32606 0165 0B       		.uleb128 0xb
 32607 0166 49       		.uleb128 0x49
 32608 0167 13       		.uleb128 0x13
 32609 0168 02       		.uleb128 0x2
 32610 0169 18       		.uleb128 0x18
 32611 016a 00       		.byte	0
 32612 016b 00       		.byte	0
 32613 016c 1C       		.uleb128 0x1c
 32614 016d 1D       		.uleb128 0x1d
 32615 016e 01       		.byte	0x1
 32616 016f 31       		.uleb128 0x31
 32617 0170 13       		.uleb128 0x13
 32618 0171 11       		.uleb128 0x11
 32619 0172 01       		.uleb128 0x1
 32620 0173 12       		.uleb128 0x12
 32621 0174 06       		.uleb128 0x6
 32622 0175 58       		.uleb128 0x58
 32623 0176 0B       		.uleb128 0xb
 32624 0177 59       		.uleb128 0x59
 32625 0178 0B       		.uleb128 0xb
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 694


 32626 0179 01       		.uleb128 0x1
 32627 017a 13       		.uleb128 0x13
 32628 017b 00       		.byte	0
 32629 017c 00       		.byte	0
 32630 017d 1D       		.uleb128 0x1d
 32631 017e 05       		.uleb128 0x5
 32632 017f 00       		.byte	0
 32633 0180 31       		.uleb128 0x31
 32634 0181 13       		.uleb128 0x13
 32635 0182 02       		.uleb128 0x2
 32636 0183 18       		.uleb128 0x18
 32637 0184 00       		.byte	0
 32638 0185 00       		.byte	0
 32639 0186 1E       		.uleb128 0x1e
 32640 0187 0B       		.uleb128 0xb
 32641 0188 01       		.byte	0x1
 32642 0189 11       		.uleb128 0x11
 32643 018a 01       		.uleb128 0x1
 32644 018b 12       		.uleb128 0x12
 32645 018c 06       		.uleb128 0x6
 32646 018d 00       		.byte	0
 32647 018e 00       		.byte	0
 32648 018f 1F       		.uleb128 0x1f
 32649 0190 34       		.uleb128 0x34
 32650 0191 00       		.byte	0
 32651 0192 31       		.uleb128 0x31
 32652 0193 13       		.uleb128 0x13
 32653 0194 02       		.uleb128 0x2
 32654 0195 18       		.uleb128 0x18
 32655 0196 00       		.byte	0
 32656 0197 00       		.byte	0
 32657 0198 20       		.uleb128 0x20
 32658 0199 1D       		.uleb128 0x1d
 32659 019a 01       		.byte	0x1
 32660 019b 31       		.uleb128 0x31
 32661 019c 13       		.uleb128 0x13
 32662 019d 11       		.uleb128 0x11
 32663 019e 01       		.uleb128 0x1
 32664 019f 12       		.uleb128 0x12
 32665 01a0 06       		.uleb128 0x6
 32666 01a1 58       		.uleb128 0x58
 32667 01a2 0B       		.uleb128 0xb
 32668 01a3 59       		.uleb128 0x59
 32669 01a4 05       		.uleb128 0x5
 32670 01a5 01       		.uleb128 0x1
 32671 01a6 13       		.uleb128 0x13
 32672 01a7 00       		.byte	0
 32673 01a8 00       		.byte	0
 32674 01a9 21       		.uleb128 0x21
 32675 01aa 1D       		.uleb128 0x1d
 32676 01ab 01       		.byte	0x1
 32677 01ac 31       		.uleb128 0x31
 32678 01ad 13       		.uleb128 0x13
 32679 01ae 11       		.uleb128 0x11
 32680 01af 01       		.uleb128 0x1
 32681 01b0 12       		.uleb128 0x12
 32682 01b1 06       		.uleb128 0x6
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 695


 32683 01b2 58       		.uleb128 0x58
 32684 01b3 0B       		.uleb128 0xb
 32685 01b4 59       		.uleb128 0x59
 32686 01b5 05       		.uleb128 0x5
 32687 01b6 00       		.byte	0
 32688 01b7 00       		.byte	0
 32689 01b8 22       		.uleb128 0x22
 32690 01b9 2E       		.uleb128 0x2e
 32691 01ba 01       		.byte	0x1
 32692 01bb 3F       		.uleb128 0x3f
 32693 01bc 19       		.uleb128 0x19
 32694 01bd 03       		.uleb128 0x3
 32695 01be 0E       		.uleb128 0xe
 32696 01bf 3A       		.uleb128 0x3a
 32697 01c0 0B       		.uleb128 0xb
 32698 01c1 3B       		.uleb128 0x3b
 32699 01c2 05       		.uleb128 0x5
 32700 01c3 27       		.uleb128 0x27
 32701 01c4 19       		.uleb128 0x19
 32702 01c5 11       		.uleb128 0x11
 32703 01c6 01       		.uleb128 0x1
 32704 01c7 12       		.uleb128 0x12
 32705 01c8 06       		.uleb128 0x6
 32706 01c9 40       		.uleb128 0x40
 32707 01ca 18       		.uleb128 0x18
 32708 01cb 9642     		.uleb128 0x2116
 32709 01cd 19       		.uleb128 0x19
 32710 01ce 01       		.uleb128 0x1
 32711 01cf 13       		.uleb128 0x13
 32712 01d0 00       		.byte	0
 32713 01d1 00       		.byte	0
 32714 01d2 23       		.uleb128 0x23
 32715 01d3 34       		.uleb128 0x34
 32716 01d4 00       		.byte	0
 32717 01d5 03       		.uleb128 0x3
 32718 01d6 0E       		.uleb128 0xe
 32719 01d7 3A       		.uleb128 0x3a
 32720 01d8 0B       		.uleb128 0xb
 32721 01d9 3B       		.uleb128 0x3b
 32722 01da 05       		.uleb128 0x5
 32723 01db 49       		.uleb128 0x49
 32724 01dc 13       		.uleb128 0x13
 32725 01dd 02       		.uleb128 0x2
 32726 01de 18       		.uleb128 0x18
 32727 01df 00       		.byte	0
 32728 01e0 00       		.byte	0
 32729 01e1 24       		.uleb128 0x24
 32730 01e2 21       		.uleb128 0x21
 32731 01e3 00       		.byte	0
 32732 01e4 49       		.uleb128 0x49
 32733 01e5 13       		.uleb128 0x13
 32734 01e6 2F       		.uleb128 0x2f
 32735 01e7 05       		.uleb128 0x5
 32736 01e8 00       		.byte	0
 32737 01e9 00       		.byte	0
 32738 01ea 25       		.uleb128 0x25
 32739 01eb 05       		.uleb128 0x5
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 696


 32740 01ec 00       		.byte	0
 32741 01ed 03       		.uleb128 0x3
 32742 01ee 0E       		.uleb128 0xe
 32743 01ef 3A       		.uleb128 0x3a
 32744 01f0 0B       		.uleb128 0xb
 32745 01f1 3B       		.uleb128 0x3b
 32746 01f2 05       		.uleb128 0x5
 32747 01f3 49       		.uleb128 0x49
 32748 01f4 13       		.uleb128 0x13
 32749 01f5 02       		.uleb128 0x2
 32750 01f6 18       		.uleb128 0x18
 32751 01f7 00       		.byte	0
 32752 01f8 00       		.byte	0
 32753 01f9 26       		.uleb128 0x26
 32754 01fa 34       		.uleb128 0x34
 32755 01fb 00       		.byte	0
 32756 01fc 03       		.uleb128 0x3
 32757 01fd 08       		.uleb128 0x8
 32758 01fe 3A       		.uleb128 0x3a
 32759 01ff 0B       		.uleb128 0xb
 32760 0200 3B       		.uleb128 0x3b
 32761 0201 05       		.uleb128 0x5
 32762 0202 49       		.uleb128 0x49
 32763 0203 13       		.uleb128 0x13
 32764 0204 02       		.uleb128 0x2
 32765 0205 18       		.uleb128 0x18
 32766 0206 00       		.byte	0
 32767 0207 00       		.byte	0
 32768 0208 27       		.uleb128 0x27
 32769 0209 2E       		.uleb128 0x2e
 32770 020a 01       		.byte	0x1
 32771 020b 3F       		.uleb128 0x3f
 32772 020c 19       		.uleb128 0x19
 32773 020d 03       		.uleb128 0x3
 32774 020e 0E       		.uleb128 0xe
 32775 020f 3A       		.uleb128 0x3a
 32776 0210 0B       		.uleb128 0xb
 32777 0211 3B       		.uleb128 0x3b
 32778 0212 05       		.uleb128 0x5
 32779 0213 11       		.uleb128 0x11
 32780 0214 01       		.uleb128 0x1
 32781 0215 12       		.uleb128 0x12
 32782 0216 06       		.uleb128 0x6
 32783 0217 40       		.uleb128 0x40
 32784 0218 18       		.uleb128 0x18
 32785 0219 9642     		.uleb128 0x2116
 32786 021b 19       		.uleb128 0x19
 32787 021c 01       		.uleb128 0x1
 32788 021d 13       		.uleb128 0x13
 32789 021e 00       		.byte	0
 32790 021f 00       		.byte	0
 32791 0220 28       		.uleb128 0x28
 32792 0221 2E       		.uleb128 0x2e
 32793 0222 01       		.byte	0x1
 32794 0223 3F       		.uleb128 0x3f
 32795 0224 19       		.uleb128 0x19
 32796 0225 03       		.uleb128 0x3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 697


 32797 0226 0E       		.uleb128 0xe
 32798 0227 3A       		.uleb128 0x3a
 32799 0228 0B       		.uleb128 0xb
 32800 0229 3B       		.uleb128 0x3b
 32801 022a 05       		.uleb128 0x5
 32802 022b 27       		.uleb128 0x27
 32803 022c 19       		.uleb128 0x19
 32804 022d 11       		.uleb128 0x11
 32805 022e 01       		.uleb128 0x1
 32806 022f 12       		.uleb128 0x12
 32807 0230 06       		.uleb128 0x6
 32808 0231 40       		.uleb128 0x40
 32809 0232 18       		.uleb128 0x18
 32810 0233 9742     		.uleb128 0x2117
 32811 0235 19       		.uleb128 0x19
 32812 0236 01       		.uleb128 0x1
 32813 0237 13       		.uleb128 0x13
 32814 0238 00       		.byte	0
 32815 0239 00       		.byte	0
 32816 023a 29       		.uleb128 0x29
 32817 023b 05       		.uleb128 0x5
 32818 023c 00       		.byte	0
 32819 023d 03       		.uleb128 0x3
 32820 023e 08       		.uleb128 0x8
 32821 023f 3A       		.uleb128 0x3a
 32822 0240 0B       		.uleb128 0xb
 32823 0241 3B       		.uleb128 0x3b
 32824 0242 05       		.uleb128 0x5
 32825 0243 49       		.uleb128 0x49
 32826 0244 13       		.uleb128 0x13
 32827 0245 02       		.uleb128 0x2
 32828 0246 18       		.uleb128 0x18
 32829 0247 00       		.byte	0
 32830 0248 00       		.byte	0
 32831 0249 2A       		.uleb128 0x2a
 32832 024a 2E       		.uleb128 0x2e
 32833 024b 01       		.byte	0x1
 32834 024c 3F       		.uleb128 0x3f
 32835 024d 19       		.uleb128 0x19
 32836 024e 03       		.uleb128 0x3
 32837 024f 0E       		.uleb128 0xe
 32838 0250 3A       		.uleb128 0x3a
 32839 0251 0B       		.uleb128 0xb
 32840 0252 3B       		.uleb128 0x3b
 32841 0253 05       		.uleb128 0x5
 32842 0254 27       		.uleb128 0x27
 32843 0255 19       		.uleb128 0x19
 32844 0256 49       		.uleb128 0x49
 32845 0257 13       		.uleb128 0x13
 32846 0258 11       		.uleb128 0x11
 32847 0259 01       		.uleb128 0x1
 32848 025a 12       		.uleb128 0x12
 32849 025b 06       		.uleb128 0x6
 32850 025c 40       		.uleb128 0x40
 32851 025d 18       		.uleb128 0x18
 32852 025e 9742     		.uleb128 0x2117
 32853 0260 19       		.uleb128 0x19
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 698


 32854 0261 01       		.uleb128 0x1
 32855 0262 13       		.uleb128 0x13
 32856 0263 00       		.byte	0
 32857 0264 00       		.byte	0
 32858 0265 2B       		.uleb128 0x2b
 32859 0266 2E       		.uleb128 0x2e
 32860 0267 01       		.byte	0x1
 32861 0268 3F       		.uleb128 0x3f
 32862 0269 19       		.uleb128 0x19
 32863 026a 03       		.uleb128 0x3
 32864 026b 0E       		.uleb128 0xe
 32865 026c 3A       		.uleb128 0x3a
 32866 026d 0B       		.uleb128 0xb
 32867 026e 3B       		.uleb128 0x3b
 32868 026f 05       		.uleb128 0x5
 32869 0270 27       		.uleb128 0x27
 32870 0271 19       		.uleb128 0x19
 32871 0272 49       		.uleb128 0x49
 32872 0273 13       		.uleb128 0x13
 32873 0274 11       		.uleb128 0x11
 32874 0275 01       		.uleb128 0x1
 32875 0276 12       		.uleb128 0x12
 32876 0277 06       		.uleb128 0x6
 32877 0278 40       		.uleb128 0x40
 32878 0279 18       		.uleb128 0x18
 32879 027a 9642     		.uleb128 0x2116
 32880 027c 19       		.uleb128 0x19
 32881 027d 01       		.uleb128 0x1
 32882 027e 13       		.uleb128 0x13
 32883 027f 00       		.byte	0
 32884 0280 00       		.byte	0
 32885 0281 2C       		.uleb128 0x2c
 32886 0282 2E       		.uleb128 0x2e
 32887 0283 01       		.byte	0x1
 32888 0284 3F       		.uleb128 0x3f
 32889 0285 19       		.uleb128 0x19
 32890 0286 03       		.uleb128 0x3
 32891 0287 0E       		.uleb128 0xe
 32892 0288 3A       		.uleb128 0x3a
 32893 0289 0B       		.uleb128 0xb
 32894 028a 3B       		.uleb128 0x3b
 32895 028b 05       		.uleb128 0x5
 32896 028c 11       		.uleb128 0x11
 32897 028d 01       		.uleb128 0x1
 32898 028e 12       		.uleb128 0x12
 32899 028f 06       		.uleb128 0x6
 32900 0290 40       		.uleb128 0x40
 32901 0291 18       		.uleb128 0x18
 32902 0292 9742     		.uleb128 0x2117
 32903 0294 19       		.uleb128 0x19
 32904 0295 01       		.uleb128 0x1
 32905 0296 13       		.uleb128 0x13
 32906 0297 00       		.byte	0
 32907 0298 00       		.byte	0
 32908 0299 2D       		.uleb128 0x2d
 32909 029a 2E       		.uleb128 0x2e
 32910 029b 01       		.byte	0x1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 699


 32911 029c 3F       		.uleb128 0x3f
 32912 029d 19       		.uleb128 0x19
 32913 029e 03       		.uleb128 0x3
 32914 029f 0E       		.uleb128 0xe
 32915 02a0 3A       		.uleb128 0x3a
 32916 02a1 0B       		.uleb128 0xb
 32917 02a2 3B       		.uleb128 0x3b
 32918 02a3 05       		.uleb128 0x5
 32919 02a4 49       		.uleb128 0x49
 32920 02a5 13       		.uleb128 0x13
 32921 02a6 11       		.uleb128 0x11
 32922 02a7 01       		.uleb128 0x1
 32923 02a8 12       		.uleb128 0x12
 32924 02a9 06       		.uleb128 0x6
 32925 02aa 40       		.uleb128 0x40
 32926 02ab 18       		.uleb128 0x18
 32927 02ac 9642     		.uleb128 0x2116
 32928 02ae 19       		.uleb128 0x19
 32929 02af 01       		.uleb128 0x1
 32930 02b0 13       		.uleb128 0x13
 32931 02b1 00       		.byte	0
 32932 02b2 00       		.byte	0
 32933 02b3 2E       		.uleb128 0x2e
 32934 02b4 2E       		.uleb128 0x2e
 32935 02b5 00       		.byte	0
 32936 02b6 3F       		.uleb128 0x3f
 32937 02b7 19       		.uleb128 0x19
 32938 02b8 03       		.uleb128 0x3
 32939 02b9 0E       		.uleb128 0xe
 32940 02ba 3A       		.uleb128 0x3a
 32941 02bb 0B       		.uleb128 0xb
 32942 02bc 3B       		.uleb128 0x3b
 32943 02bd 05       		.uleb128 0x5
 32944 02be 11       		.uleb128 0x11
 32945 02bf 01       		.uleb128 0x1
 32946 02c0 12       		.uleb128 0x12
 32947 02c1 06       		.uleb128 0x6
 32948 02c2 40       		.uleb128 0x40
 32949 02c3 18       		.uleb128 0x18
 32950 02c4 9642     		.uleb128 0x2116
 32951 02c6 19       		.uleb128 0x19
 32952 02c7 00       		.byte	0
 32953 02c8 00       		.byte	0
 32954 02c9 2F       		.uleb128 0x2f
 32955 02ca 2E       		.uleb128 0x2e
 32956 02cb 01       		.byte	0x1
 32957 02cc 3F       		.uleb128 0x3f
 32958 02cd 19       		.uleb128 0x19
 32959 02ce 03       		.uleb128 0x3
 32960 02cf 0E       		.uleb128 0xe
 32961 02d0 3A       		.uleb128 0x3a
 32962 02d1 0B       		.uleb128 0xb
 32963 02d2 3B       		.uleb128 0x3b
 32964 02d3 05       		.uleb128 0x5
 32965 02d4 49       		.uleb128 0x49
 32966 02d5 13       		.uleb128 0x13
 32967 02d6 11       		.uleb128 0x11
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 700


 32968 02d7 01       		.uleb128 0x1
 32969 02d8 12       		.uleb128 0x12
 32970 02d9 06       		.uleb128 0x6
 32971 02da 40       		.uleb128 0x40
 32972 02db 18       		.uleb128 0x18
 32973 02dc 9742     		.uleb128 0x2117
 32974 02de 19       		.uleb128 0x19
 32975 02df 01       		.uleb128 0x1
 32976 02e0 13       		.uleb128 0x13
 32977 02e1 00       		.byte	0
 32978 02e2 00       		.byte	0
 32979 02e3 30       		.uleb128 0x30
 32980 02e4 2E       		.uleb128 0x2e
 32981 02e5 00       		.byte	0
 32982 02e6 3F       		.uleb128 0x3f
 32983 02e7 19       		.uleb128 0x19
 32984 02e8 03       		.uleb128 0x3
 32985 02e9 0E       		.uleb128 0xe
 32986 02ea 3A       		.uleb128 0x3a
 32987 02eb 0B       		.uleb128 0xb
 32988 02ec 3B       		.uleb128 0x3b
 32989 02ed 05       		.uleb128 0x5
 32990 02ee 11       		.uleb128 0x11
 32991 02ef 01       		.uleb128 0x1
 32992 02f0 12       		.uleb128 0x12
 32993 02f1 06       		.uleb128 0x6
 32994 02f2 40       		.uleb128 0x40
 32995 02f3 18       		.uleb128 0x18
 32996 02f4 9742     		.uleb128 0x2117
 32997 02f6 19       		.uleb128 0x19
 32998 02f7 00       		.byte	0
 32999 02f8 00       		.byte	0
 33000 02f9 31       		.uleb128 0x31
 33001 02fa 34       		.uleb128 0x34
 33002 02fb 00       		.byte	0
 33003 02fc 03       		.uleb128 0x3
 33004 02fd 0E       		.uleb128 0xe
 33005 02fe 3A       		.uleb128 0x3a
 33006 02ff 0B       		.uleb128 0xb
 33007 0300 3B       		.uleb128 0x3b
 33008 0301 05       		.uleb128 0x5
 33009 0302 49       		.uleb128 0x49
 33010 0303 13       		.uleb128 0x13
 33011 0304 3F       		.uleb128 0x3f
 33012 0305 19       		.uleb128 0x19
 33013 0306 3C       		.uleb128 0x3c
 33014 0307 19       		.uleb128 0x19
 33015 0308 00       		.byte	0
 33016 0309 00       		.byte	0
 33017 030a 32       		.uleb128 0x32
 33018 030b 34       		.uleb128 0x34
 33019 030c 00       		.byte	0
 33020 030d 03       		.uleb128 0x3
 33021 030e 0E       		.uleb128 0xe
 33022 030f 3A       		.uleb128 0x3a
 33023 0310 0B       		.uleb128 0xb
 33024 0311 3B       		.uleb128 0x3b
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 701


 33025 0312 0B       		.uleb128 0xb
 33026 0313 49       		.uleb128 0x49
 33027 0314 13       		.uleb128 0x13
 33028 0315 3F       		.uleb128 0x3f
 33029 0316 19       		.uleb128 0x19
 33030 0317 02       		.uleb128 0x2
 33031 0318 18       		.uleb128 0x18
 33032 0319 00       		.byte	0
 33033 031a 00       		.byte	0
 33034 031b 00       		.byte	0
 33035              		.section	.debug_aranges,"",%progbits
 33036 0000 D4010000 		.4byte	0x1d4
 33037 0004 0200     		.2byte	0x2
 33038 0006 00000000 		.4byte	.Ldebug_info0
 33039 000a 04       		.byte	0x4
 33040 000b 00       		.byte	0
 33041 000c 0000     		.2byte	0
 33042 000e 0000     		.2byte	0
 33043 0010 00000000 		.4byte	.LFB64
 33044 0014 1C050000 		.4byte	.LFE64-.LFB64
 33045 0018 00000000 		.4byte	.LFB65
 33046 001c 22000000 		.4byte	.LFE65-.LFB65
 33047 0020 00000000 		.4byte	.LFB66
 33048 0024 64010000 		.4byte	.LFE66-.LFB66
 33049 0028 00000000 		.4byte	.LFB67
 33050 002c D6320000 		.4byte	.LFE67-.LFB67
 33051 0030 00000000 		.4byte	.LFB68
 33052 0034 3C190000 		.4byte	.LFE68-.LFB68
 33053 0038 00000000 		.4byte	.LFB69
 33054 003c DC140000 		.4byte	.LFE69-.LFB69
 33055 0040 00000000 		.4byte	.LFB70
 33056 0044 F40D0000 		.4byte	.LFE70-.LFB70
 33057 0048 00000000 		.4byte	.LFB71
 33058 004c 90000000 		.4byte	.LFE71-.LFB71
 33059 0050 00000000 		.4byte	.LFB72
 33060 0054 281D0000 		.4byte	.LFE72-.LFB72
 33061 0058 00000000 		.4byte	.LFB73
 33062 005c 90040000 		.4byte	.LFE73-.LFB73
 33063 0060 00000000 		.4byte	.LFB74
 33064 0064 5C020000 		.4byte	.LFE74-.LFB74
 33065 0068 00000000 		.4byte	.LFB75
 33066 006c 80120000 		.4byte	.LFE75-.LFB75
 33067 0070 00000000 		.4byte	.LFB76
 33068 0074 DC000000 		.4byte	.LFE76-.LFB76
 33069 0078 00000000 		.4byte	.LFB77
 33070 007c 80010000 		.4byte	.LFE77-.LFB77
 33071 0080 00000000 		.4byte	.LFB78
 33072 0084 28000000 		.4byte	.LFE78-.LFB78
 33073 0088 00000000 		.4byte	.LFB79
 33074 008c F0000000 		.4byte	.LFE79-.LFB79
 33075 0090 00000000 		.4byte	.LFB80
 33076 0094 74030000 		.4byte	.LFE80-.LFB80
 33077 0098 00000000 		.4byte	.LFB81
 33078 009c 84000000 		.4byte	.LFE81-.LFB81
 33079 00a0 00000000 		.4byte	.LFB82
 33080 00a4 88000000 		.4byte	.LFE82-.LFB82
 33081 00a8 00000000 		.4byte	.LFB83
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 702


 33082 00ac A0000000 		.4byte	.LFE83-.LFB83
 33083 00b0 00000000 		.4byte	.LFB84
 33084 00b4 3E000000 		.4byte	.LFE84-.LFB84
 33085 00b8 00000000 		.4byte	.LFB85
 33086 00bc 2E000000 		.4byte	.LFE85-.LFB85
 33087 00c0 00000000 		.4byte	.LFB86
 33088 00c4 98000000 		.4byte	.LFE86-.LFB86
 33089 00c8 00000000 		.4byte	.LFB87
 33090 00cc 80000000 		.4byte	.LFE87-.LFB87
 33091 00d0 00000000 		.4byte	.LFB88
 33092 00d4 5C000000 		.4byte	.LFE88-.LFB88
 33093 00d8 00000000 		.4byte	.LFB89
 33094 00dc 18060000 		.4byte	.LFE89-.LFB89
 33095 00e0 00000000 		.4byte	.LFB90
 33096 00e4 40020000 		.4byte	.LFE90-.LFB90
 33097 00e8 00000000 		.4byte	.LFB91
 33098 00ec 28010000 		.4byte	.LFE91-.LFB91
 33099 00f0 00000000 		.4byte	.LFB92
 33100 00f4 B8000000 		.4byte	.LFE92-.LFB92
 33101 00f8 00000000 		.4byte	.LFB93
 33102 00fc B8000000 		.4byte	.LFE93-.LFB93
 33103 0100 00000000 		.4byte	.LFB94
 33104 0104 5C000000 		.4byte	.LFE94-.LFB94
 33105 0108 00000000 		.4byte	.LFB95
 33106 010c E0010000 		.4byte	.LFE95-.LFB95
 33107 0110 00000000 		.4byte	.LFB96
 33108 0114 BC000000 		.4byte	.LFE96-.LFB96
 33109 0118 00000000 		.4byte	.LFB97
 33110 011c 5C000000 		.4byte	.LFE97-.LFB97
 33111 0120 00000000 		.4byte	.LFB98
 33112 0124 38010000 		.4byte	.LFE98-.LFB98
 33113 0128 00000000 		.4byte	.LFB99
 33114 012c EC000000 		.4byte	.LFE99-.LFB99
 33115 0130 00000000 		.4byte	.LFB100
 33116 0134 64000000 		.4byte	.LFE100-.LFB100
 33117 0138 00000000 		.4byte	.LFB101
 33118 013c A8000000 		.4byte	.LFE101-.LFB101
 33119 0140 00000000 		.4byte	.LFB102
 33120 0144 34000000 		.4byte	.LFE102-.LFB102
 33121 0148 00000000 		.4byte	.LFB103
 33122 014c 20000000 		.4byte	.LFE103-.LFB103
 33123 0150 00000000 		.4byte	.LFB104
 33124 0154 A0000000 		.4byte	.LFE104-.LFB104
 33125 0158 00000000 		.4byte	.LFB105
 33126 015c BC010000 		.4byte	.LFE105-.LFB105
 33127 0160 00000000 		.4byte	.LFB106
 33128 0164 60000000 		.4byte	.LFE106-.LFB106
 33129 0168 00000000 		.4byte	.LFB107
 33130 016c 98050000 		.4byte	.LFE107-.LFB107
 33131 0170 00000000 		.4byte	.LFB108
 33132 0174 8C000000 		.4byte	.LFE108-.LFB108
 33133 0178 00000000 		.4byte	.LFB109
 33134 017c EC000000 		.4byte	.LFE109-.LFB109
 33135 0180 00000000 		.4byte	.LFB110
 33136 0184 5C000000 		.4byte	.LFE110-.LFB110
 33137 0188 00000000 		.4byte	.LFB111
 33138 018c C0000000 		.4byte	.LFE111-.LFB111
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 703


 33139 0190 00000000 		.4byte	.LFB112
 33140 0194 54010000 		.4byte	.LFE112-.LFB112
 33141 0198 00000000 		.4byte	.LFB113
 33142 019c B0000000 		.4byte	.LFE113-.LFB113
 33143 01a0 00000000 		.4byte	.LFB114
 33144 01a4 12000000 		.4byte	.LFE114-.LFB114
 33145 01a8 00000000 		.4byte	.LFB115
 33146 01ac 64010000 		.4byte	.LFE115-.LFB115
 33147 01b0 00000000 		.4byte	.LFB116
 33148 01b4 12000000 		.4byte	.LFE116-.LFB116
 33149 01b8 00000000 		.4byte	.LFB117
 33150 01bc 1A000000 		.4byte	.LFE117-.LFB117
 33151 01c0 00000000 		.4byte	.LFB118
 33152 01c4 0C000000 		.4byte	.LFE118-.LFB118
 33153 01c8 00000000 		.4byte	.LFB119
 33154 01cc 0C000000 		.4byte	.LFE119-.LFB119
 33155 01d0 00000000 		.4byte	0
 33156 01d4 00000000 		.4byte	0
 33157              		.section	.debug_ranges,"",%progbits
 33158              	.Ldebug_ranges0:
 33159 0000 00000000 		.4byte	.LFB64
 33160 0004 1C050000 		.4byte	.LFE64
 33161 0008 00000000 		.4byte	.LFB65
 33162 000c 22000000 		.4byte	.LFE65
 33163 0010 00000000 		.4byte	.LFB66
 33164 0014 64010000 		.4byte	.LFE66
 33165 0018 00000000 		.4byte	.LFB67
 33166 001c D6320000 		.4byte	.LFE67
 33167 0020 00000000 		.4byte	.LFB68
 33168 0024 3C190000 		.4byte	.LFE68
 33169 0028 00000000 		.4byte	.LFB69
 33170 002c DC140000 		.4byte	.LFE69
 33171 0030 00000000 		.4byte	.LFB70
 33172 0034 F40D0000 		.4byte	.LFE70
 33173 0038 00000000 		.4byte	.LFB71
 33174 003c 90000000 		.4byte	.LFE71
 33175 0040 00000000 		.4byte	.LFB72
 33176 0044 281D0000 		.4byte	.LFE72
 33177 0048 00000000 		.4byte	.LFB73
 33178 004c 90040000 		.4byte	.LFE73
 33179 0050 00000000 		.4byte	.LFB74
 33180 0054 5C020000 		.4byte	.LFE74
 33181 0058 00000000 		.4byte	.LFB75
 33182 005c 80120000 		.4byte	.LFE75
 33183 0060 00000000 		.4byte	.LFB76
 33184 0064 DC000000 		.4byte	.LFE76
 33185 0068 00000000 		.4byte	.LFB77
 33186 006c 80010000 		.4byte	.LFE77
 33187 0070 00000000 		.4byte	.LFB78
 33188 0074 28000000 		.4byte	.LFE78
 33189 0078 00000000 		.4byte	.LFB79
 33190 007c F0000000 		.4byte	.LFE79
 33191 0080 00000000 		.4byte	.LFB80
 33192 0084 74030000 		.4byte	.LFE80
 33193 0088 00000000 		.4byte	.LFB81
 33194 008c 84000000 		.4byte	.LFE81
 33195 0090 00000000 		.4byte	.LFB82
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 704


 33196 0094 88000000 		.4byte	.LFE82
 33197 0098 00000000 		.4byte	.LFB83
 33198 009c A0000000 		.4byte	.LFE83
 33199 00a0 00000000 		.4byte	.LFB84
 33200 00a4 3E000000 		.4byte	.LFE84
 33201 00a8 00000000 		.4byte	.LFB85
 33202 00ac 2E000000 		.4byte	.LFE85
 33203 00b0 00000000 		.4byte	.LFB86
 33204 00b4 98000000 		.4byte	.LFE86
 33205 00b8 00000000 		.4byte	.LFB87
 33206 00bc 80000000 		.4byte	.LFE87
 33207 00c0 00000000 		.4byte	.LFB88
 33208 00c4 5C000000 		.4byte	.LFE88
 33209 00c8 00000000 		.4byte	.LFB89
 33210 00cc 18060000 		.4byte	.LFE89
 33211 00d0 00000000 		.4byte	.LFB90
 33212 00d4 40020000 		.4byte	.LFE90
 33213 00d8 00000000 		.4byte	.LFB91
 33214 00dc 28010000 		.4byte	.LFE91
 33215 00e0 00000000 		.4byte	.LFB92
 33216 00e4 B8000000 		.4byte	.LFE92
 33217 00e8 00000000 		.4byte	.LFB93
 33218 00ec B8000000 		.4byte	.LFE93
 33219 00f0 00000000 		.4byte	.LFB94
 33220 00f4 5C000000 		.4byte	.LFE94
 33221 00f8 00000000 		.4byte	.LFB95
 33222 00fc E0010000 		.4byte	.LFE95
 33223 0100 00000000 		.4byte	.LFB96
 33224 0104 BC000000 		.4byte	.LFE96
 33225 0108 00000000 		.4byte	.LFB97
 33226 010c 5C000000 		.4byte	.LFE97
 33227 0110 00000000 		.4byte	.LFB98
 33228 0114 38010000 		.4byte	.LFE98
 33229 0118 00000000 		.4byte	.LFB99
 33230 011c EC000000 		.4byte	.LFE99
 33231 0120 00000000 		.4byte	.LFB100
 33232 0124 64000000 		.4byte	.LFE100
 33233 0128 00000000 		.4byte	.LFB101
 33234 012c A8000000 		.4byte	.LFE101
 33235 0130 00000000 		.4byte	.LFB102
 33236 0134 34000000 		.4byte	.LFE102
 33237 0138 00000000 		.4byte	.LFB103
 33238 013c 20000000 		.4byte	.LFE103
 33239 0140 00000000 		.4byte	.LFB104
 33240 0144 A0000000 		.4byte	.LFE104
 33241 0148 00000000 		.4byte	.LFB105
 33242 014c BC010000 		.4byte	.LFE105
 33243 0150 00000000 		.4byte	.LFB106
 33244 0154 60000000 		.4byte	.LFE106
 33245 0158 00000000 		.4byte	.LFB107
 33246 015c 98050000 		.4byte	.LFE107
 33247 0160 00000000 		.4byte	.LFB108
 33248 0164 8C000000 		.4byte	.LFE108
 33249 0168 00000000 		.4byte	.LFB109
 33250 016c EC000000 		.4byte	.LFE109
 33251 0170 00000000 		.4byte	.LFB110
 33252 0174 5C000000 		.4byte	.LFE110
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 705


 33253 0178 00000000 		.4byte	.LFB111
 33254 017c C0000000 		.4byte	.LFE111
 33255 0180 00000000 		.4byte	.LFB112
 33256 0184 54010000 		.4byte	.LFE112
 33257 0188 00000000 		.4byte	.LFB113
 33258 018c B0000000 		.4byte	.LFE113
 33259 0190 00000000 		.4byte	.LFB114
 33260 0194 12000000 		.4byte	.LFE114
 33261 0198 00000000 		.4byte	.LFB115
 33262 019c 64010000 		.4byte	.LFE115
 33263 01a0 00000000 		.4byte	.LFB116
 33264 01a4 12000000 		.4byte	.LFE116
 33265 01a8 00000000 		.4byte	.LFB117
 33266 01ac 1A000000 		.4byte	.LFE117
 33267 01b0 00000000 		.4byte	.LFB118
 33268 01b4 0C000000 		.4byte	.LFE118
 33269 01b8 00000000 		.4byte	.LFB119
 33270 01bc 0C000000 		.4byte	.LFE119
 33271 01c0 00000000 		.4byte	0
 33272 01c4 00000000 		.4byte	0
 33273              		.section	.debug_line,"",%progbits
 33274              	.Ldebug_line0:
 33275 0000 331E0000 		.section	.debug_str,"MS",%progbits,1
 33275      0200C001 
 33275      00000201 
 33275      FB0E0D00 
 33275      01010101 
 33276              	.LASF218:
 33277 0000 696E666F 		.ascii	"infoSend\000"
 33277      53656E64 
 33277      00
 33278              	.LASF107:
 33279 0009 656D675F 		.ascii	"emg_act_counter\000"
 33279      6163745F 
 33279      636F756E 
 33279      74657200 
 33280              	.LASF270:
 33281 0019 69645F73 		.ascii	"id_str\000"
 33281      747200
 33282              	.LASF252:
 33283 0020 66736D5F 		.ascii	"fsm_activation_mode_menu\000"
 33283      61637469 
 33283      76617469 
 33283      6F6E5F6D 
 33283      6F64655F 
 33284              	.LASF25:
 33285 0039 73697A65 		.ascii	"sizetype\000"
 33285      74797065 
 33285      00
 33286              	.LASF114:
 33287 0042 706F7765 		.ascii	"power_cycles\000"
 33287      725F6379 
 33287      636C6573 
 33287      00
 33288              	.LASF33:
 33289 004f 434D445F 		.ascii	"CMD_INIT_MEM\000"
 33289      494E4954 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 706


 33289      5F4D454D 
 33289      00
 33290              	.LASF339:
 33291 005c 676C5F63 		.ascii	"gl_c\000"
 33291      00
 33292              	.LASF198:
 33293 0061 77726973 		.ascii	"wrist_direction_association\000"
 33293      745F6469 
 33293      72656374 
 33293      696F6E5F 
 33293      6173736F 
 33294              	.LASF65:
 33295 007d 494E5055 		.ascii	"INPUT_MODE_EMG_FCFS_ADV\000"
 33295      545F4D4F 
 33295      44455F45 
 33295      4D475F46 
 33295      4346535F 
 33296              	.LASF36:
 33297 0095 434D445F 		.ascii	"CMD_ACTIVATE\000"
 33297      41435449 
 33297      56415445 
 33297      00
 33298              	.LASF203:
 33299 00a2 75736572 		.ascii	"user\000"
 33299      00
 33300              	.LASF355:
 33301 00a7 665F6572 		.ascii	"f_err_emg_1\000"
 33301      725F656D 
 33301      675F3100 
 33302              	.LASF356:
 33303 00b3 665F6572 		.ascii	"f_err_emg_2\000"
 33303      725F656D 
 33303      675F3200 
 33304              	.LASF361:
 33305 00bf 73746F70 		.ascii	"stop_master_device\000"
 33305      5F6D6173 
 33305      7465725F 
 33305      64657669 
 33305      636500
 33306              	.LASF11:
 33307 00d2 696E7433 		.ascii	"int32_t\000"
 33307      325F7400 
 33308              	.LASF372:
 33309 00da 675F7278 		.ascii	"g_rx\000"
 33309      00
 33310              	.LASF102:
 33311 00df 73745F64 		.ascii	"st_data\000"
 33311      61746100 
 33312              	.LASF294:
 33313 00e7 685F7469 		.ascii	"h_time\000"
 33313      6D6500
 33314              	.LASF308:
 33315 00ee 77726974 		.ascii	"writeStatus\000"
 33315      65537461 
 33315      74757300 
 33316              	.LASF112:
 33317 00fa 746F7461 		.ascii	"total_runtime\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 707


 33317      6C5F7275 
 33317      6E74696D 
 33317      6500
 33318              	.LASF15:
 33319 0108 75696E74 		.ascii	"uint32\000"
 33319      333200
 33320              	.LASF360:
 33321 010f 636D645F 		.ascii	"cmd_set_baudrate\000"
 33321      7365745F 
 33321      62617564 
 33321      72617465 
 33321      00
 33322              	.LASF349:
 33323 0120 6169725F 		.ascii	"air_chambers_control\000"
 33323      6368616D 
 33323      62657273 
 33323      5F636F6E 
 33323      74726F6C 
 33324              	.LASF278:
 33325 0135 7370695F 		.ascii	"spi_read_delay_str_len\000"
 33325      72656164 
 33325      5F64656C 
 33325      61795F73 
 33325      74725F6C 
 33326              	.LASF204:
 33327 014c 4A4F595F 		.ascii	"JOY_spec\000"
 33327      73706563 
 33327      00
 33328              	.LASF280:
 33329 0155 70726570 		.ascii	"prepare_generic_info\000"
 33329      6172655F 
 33329      67656E65 
 33329      7269635F 
 33329      696E666F 
 33330              	.LASF141:
 33331 016a 706F735F 		.ascii	"pos_lim_inf\000"
 33331      6C696D5F 
 33331      696E6600 
 33332              	.LASF244:
 33333 0176 5345434F 		.ascii	"SECOND_MOTOR_IDX\000"
 33333      4E445F4D 
 33333      4F544F52 
 33333      5F494458 
 33333      00
 33334              	.LASF332:
 33335 0187 636D645F 		.ascii	"cmd_get_inputs\000"
 33335      6765745F 
 33335      696E7075 
 33335      747300
 33336              	.LASF64:
 33337 0196 494E5055 		.ascii	"INPUT_MODE_EMG_FCFS\000"
 33337      545F4D4F 
 33337      44455F45 
 33337      4D475F46 
 33337      43465300 
 33338              	.LASF145:
 33339 01aa 63757272 		.ascii	"curr_lookup\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 708


 33339      5F6C6F6F 
 33339      6B757000 
 33340              	.LASF110:
 33341 01b6 72657374 		.ascii	"rest_counter\000"
 33341      5F636F75 
 33341      6E746572 
 33341      00
 33342              	.LASF337:
 33343 01c3 636D645F 		.ascii	"cmd_get_imu_readings\000"
 33343      6765745F 
 33343      696D755F 
 33343      72656164 
 33343      696E6773 
 33344              	.LASF188:
 33345 01d8 73745F4D 		.ascii	"st_MASTER_spec\000"
 33345      41535445 
 33345      525F7370 
 33345      656300
 33346              	.LASF273:
 33347 01e7 69645F73 		.ascii	"id_str_len\000"
 33347      74725F6C 
 33347      656E00
 33348              	.LASF63:
 33349 01f2 494E5055 		.ascii	"INPUT_MODE_EMG_INTEGRAL\000"
 33349      545F4D4F 
 33349      44455F45 
 33349      4D475F49 
 33349      4E544547 
 33350              	.LASF246:
 33351 020a 6D5F746D 		.ascii	"m_tmp\000"
 33351      7000
 33352              	.LASF293:
 33353 0210 765F6964 		.ascii	"v_idx\000"
 33353      7800
 33354              	.LASF16:
 33355 0216 696E7438 		.ascii	"int8\000"
 33355      00
 33356              	.LASF223:
 33357 021b 6765745F 		.ascii	"get_param_list\000"
 33357      70617261 
 33357      6D5F6C69 
 33357      737400
 33358              	.LASF318:
 33359 022a 636D645F 		.ascii	"cmd_get_accelerations\000"
 33359      6765745F 
 33359      61636365 
 33359      6C657261 
 33359      74696F6E 
 33360              	.LASF336:
 33361 0240 636D645F 		.ascii	"cmd_get_emg\000"
 33361      6765745F 
 33361      656D6700 
 33362              	.LASF160:
 33363 024c 73745F65 		.ascii	"st_emg\000"
 33363      6D6700
 33364              	.LASF108:
 33365 0253 706F7369 		.ascii	"position_hist\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 709


 33365      74696F6E 
 33365      5F686973 
 33365      7400
 33366              	.LASF211:
 33367 0261 74656D70 		.ascii	"temp_value\000"
 33367      5F76616C 
 33367      756500
 33368              	.LASF292:
 33369 026c 7374725F 		.ascii	"str_data\000"
 33369      64617461 
 33369      00
 33370              	.LASF407:
 33371 0275 72657375 		.ascii	"result\000"
 33371      6C7400
 33372              	.LASF272:
 33373 027c 7370695F 		.ascii	"spi_read_delay_str\000"
 33373      72656164 
 33373      5F64656C 
 33373      61795F73 
 33373      747200
 33374              	.LASF195:
 33375 028f 73745F57 		.ascii	"st_WR_spec\000"
 33375      525F7370 
 33375      656300
 33376              	.LASF105:
 33377 029a 72656164 		.ascii	"ready\000"
 33377      7900
 33378              	.LASF157:
 33379 02a0 456E635F 		.ascii	"Enc_idx_use_for_control\000"
 33379      6964785F 
 33379      7573655F 
 33379      666F725F 
 33379      636F6E74 
 33380              	.LASF49:
 33381 02b8 434D445F 		.ascii	"CMD_GET_JOYSTICK\000"
 33381      4745545F 
 33381      4A4F5953 
 33381      5449434B 
 33381      00
 33382              	.LASF62:
 33383 02c9 494E5055 		.ascii	"INPUT_MODE_EMG_PROPORTIONAL\000"
 33383      545F4D4F 
 33383      44455F45 
 33383      4D475F50 
 33383      524F504F 
 33384              	.LASF123:
 33385 02e5 7573655F 		.ascii	"use_2nd_motor_flag\000"
 33385      326E645F 
 33385      6D6F746F 
 33385      725F666C 
 33385      616700
 33386              	.LASF328:
 33387 02f8 745F7374 		.ascii	"t_start\000"
 33387      61727400 
 33388              	.LASF115:
 33389 0300 65786365 		.ascii	"excessive_signal_activity\000"
 33389      73736976 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 710


 33389      655F7369 
 33389      676E616C 
 33389      5F616374 
 33390              	.LASF167:
 33391 031a 72656164 		.ascii	"read_imu_flag\000"
 33391      5F696D75 
 33391      5F666C61 
 33391      6700
 33392              	.LASF175:
 33393 0328 7265636F 		.ascii	"record_EMG_history_on_SD\000"
 33393      72645F45 
 33393      4D475F68 
 33393      6973746F 
 33393      72795F6F 
 33394              	.LASF376:
 33395 0341 74696D65 		.ascii	"timer_value\000"
 33395      725F7661 
 33395      6C756500 
 33396              	.LASF4:
 33397 034d 6C6F6E67 		.ascii	"long int\000"
 33397      20696E74 
 33397      00
 33398              	.LASF201:
 33399 0356 756E7573 		.ascii	"unused_bytes1\000"
 33399      65645F62 
 33399      79746573 
 33399      3100
 33400              	.LASF359:
 33401 0364 6D6F746F 		.ascii	"motor_idx\000"
 33401      725F6964 
 33401      7800
 33402              	.LASF122:
 33403 036e 72657365 		.ascii	"reset_counters\000"
 33403      745F636F 
 33403      756E7465 
 33403      727300
 33404              	.LASF178:
 33405 037d 75736572 		.ascii	"user_emg\000"
 33405      5F656D67 
 33405      00
 33406              	.LASF345:
 33407 0386 636D645F 		.ascii	"cmd_get_SD_file\000"
 33407      6765745F 
 33407      53445F66 
 33407      696C6500 
 33408              	.LASF315:
 33409 0396 7365745A 		.ascii	"setZeros\000"
 33409      65726F73 
 33409      00
 33410              	.LASF117:
 33411 039f 756E7573 		.ascii	"unused_bytes\000"
 33411      65645F62 
 33411      79746573 
 33411      00
 33412              	.LASF207:
 33413 03ac 61636365 		.ascii	"accel_value\000"
 33413      6C5F7661 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 711


 33413      6C756500 
 33414              	.LASF227:
 33415 03b8 4E554D5F 		.ascii	"NUM_ITEMS\000"
 33415      4954454D 
 33415      5300
 33416              	.LASF106:
 33417 03c2 73745F63 		.ascii	"st_counters\000"
 33417      6F756E74 
 33417      65727300 
 33418              	.LASF250:
 33419 03ce 4D454D5F 		.ascii	"MEM_P\000"
 33419      5000
 33420              	.LASF19:
 33421 03d4 666C6F61 		.ascii	"float32\000"
 33421      74333200 
 33422              	.LASF343:
 33423 03dc 636D645F 		.ascii	"cmd_get_ADC_map\000"
 33423      6765745F 
 33423      4144435F 
 33423      6D617000 
 33424              	.LASF41:
 33425 03ec 434D445F 		.ascii	"CMD_GET_CURRENTS\000"
 33425      4745545F 
 33425      43555252 
 33425      454E5453 
 33425      00
 33426              	.LASF291:
 33427 03fd 70726570 		.ascii	"prepare_SD_EMG_history\000"
 33427      6172655F 
 33427      53445F45 
 33427      4D475F68 
 33427      6973746F 
 33428              	.LASF344:
 33429 0414 636D645F 		.ascii	"cmd_get_ADC_raw\000"
 33429      6765745F 
 33429      4144435F 
 33429      72617700 
 33430              	.LASF391:
 33431 0424 73645061 		.ascii	"sdParam\000"
 33431      72616D00 
 33432              	.LASF260:
 33433 042c 6175785F 		.ascii	"aux_float2\000"
 33433      666C6F61 
 33433      743200
 33434              	.LASF331:
 33435 0437 636D645F 		.ascii	"cmd_ping\000"
 33435      70696E67 
 33435      00
 33436              	.LASF279:
 33437 0440 7370695F 		.ascii	"spi_delay_menu_len\000"
 33437      64656C61 
 33437      795F6D65 
 33437      6E755F6C 
 33437      656E00
 33438              	.LASF258:
 33439 0453 7365745F 		.ascii	"set_custom_param\000"
 33439      63757374 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 712


 33439      6F6D5F70 
 33439      6172616D 
 33439      00
 33440              	.LASF348:
 33441 0464 636D645F 		.ascii	"cmd_remove_SD_file\000"
 33441      72656D6F 
 33441      76655F53 
 33441      445F6669 
 33441      6C6500
 33442              	.LASF0:
 33443 0477 7369676E 		.ascii	"signed char\000"
 33443      65642063 
 33443      68617200 
 33444              	.LASF177:
 33445 0483 75736572 		.ascii	"user_code_string\000"
 33445      5F636F64 
 33445      655F7374 
 33445      72696E67 
 33445      00
 33446              	.LASF212:
 33447 0494 73745F63 		.ascii	"st_calib\000"
 33447      616C6962 
 33447      00
 33448              	.LASF353:
 33449 049d 6572725F 		.ascii	"err_emg_1\000"
 33449      656D675F 
 33449      3100
 33450              	.LASF306:
 33451 04a7 6D656D53 		.ascii	"memStore\000"
 33451      746F7265 
 33451      00
 33452              	.LASF347:
 33453 04b0 66696C65 		.ascii	"filename\000"
 33453      6E616D65 
 33453      00
 33454              	.LASF73:
 33455 04b9 6D6F746F 		.ascii	"motor_supply_type\000"
 33455      725F7375 
 33455      70706C79 
 33455      5F747970 
 33455      6500
 33456              	.LASF330:
 33457 04cb 72656164 		.ascii	"read_flag\000"
 33457      5F666C61 
 33457      6700
 33458              	.LASF384:
 33459 04d5 4144435F 		.ascii	"ADC_buf\000"
 33459      62756600 
 33460              	.LASF382:
 33461 04dd 696E7465 		.ascii	"interrupt_flag\000"
 33461      72727570 
 33461      745F666C 
 33461      616700
 33462              	.LASF284:
 33463 04ec 73746570 		.ascii	"step\000"
 33463      00
 33464              	.LASF1:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 713


 33465 04f1 756E7369 		.ascii	"unsigned char\000"
 33465      676E6564 
 33465      20636861 
 33465      7200
 33466              	.LASF151:
 33467 04ff 6E6F745F 		.ascii	"not_revers_motor_flag\000"
 33467      72657665 
 33467      72735F6D 
 33467      6F746F72 
 33467      5F666C61 
 33468              	.LASF365:
 33469 0515 675F7265 		.ascii	"g_refNew\000"
 33469      664E6577 
 33469      00
 33470              	.LASF121:
 33471 051e 72696768 		.ascii	"right_left\000"
 33471      745F6C65 
 33471      667400
 33472              	.LASF29:
 33473 0529 434D445F 		.ascii	"CMD_STORE_DEFAULT_PARAMS\000"
 33473      53544F52 
 33473      455F4445 
 33473      4641554C 
 33473      545F5041 
 33474              	.LASF149:
 33475 0542 656E636F 		.ascii	"encoder_line\000"
 33475      6465725F 
 33475      6C696E65 
 33475      00
 33476              	.LASF274:
 33477 054f 6E5F696D 		.ascii	"n_imu_str_len\000"
 33477      755F7374 
 33477      725F6C65 
 33477      6E00
 33478              	.LASF277:
 33479 055d 696D755F 		.ascii	"imu_table_str_len\000"
 33479      7461626C 
 33479      655F7374 
 33479      725F6C65 
 33479      6E00
 33480              	.LASF304:
 33481 056f 76616C75 		.ascii	"value\000"
 33481      6500
 33482              	.LASF206:
 33483 0575 666C6167 		.ascii	"flags\000"
 33483      7300
 33484              	.LASF101:
 33485 057b 70726573 		.ascii	"pressure\000"
 33485      73757265 
 33485      00
 33486              	.LASF37:
 33487 0584 434D445F 		.ascii	"CMD_GET_ACTIVATE\000"
 33487      4745545F 
 33487      41435449 
 33487      56415445 
 33487      00
 33488              	.LASF22:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 714


 33489 0595 63686172 		.ascii	"char\000"
 33489      00
 33490              	.LASF144:
 33491 059a 6D61785F 		.ascii	"max_step_pos\000"
 33491      73746570 
 33491      5F706F73 
 33491      00
 33492              	.LASF397:
 33493 05a7 675F696D 		.ascii	"g_imu\000"
 33493      7500
 33494              	.LASF310:
 33495 05ad 7265745F 		.ascii	"ret_val\000"
 33495      76616C00 
 33496              	.LASF257:
 33497 05b5 6D656E75 		.ascii	"menu_idx\000"
 33497      5F696478 
 33497      00
 33498              	.LASF266:
 33499 05be 73746172 		.ascii	"start_byte\000"
 33499      745F6279 
 33499      746500
 33500              	.LASF263:
 33501 05c9 6E756D5F 		.ascii	"num_mag_cal_params\000"
 33501      6D61675F 
 33501      63616C5F 
 33501      70617261 
 33501      6D7300
 33502              	.LASF150:
 33503 05dc 70776D5F 		.ascii	"pwm_rate_limiter\000"
 33503      72617465 
 33503      5F6C696D 
 33503      69746572 
 33503      00
 33504              	.LASF130:
 33505 05ed 6B5F645F 		.ascii	"k_d_c\000"
 33505      6300
 33506              	.LASF100:
 33507 05f3 73745F66 		.ascii	"st_fb_meas\000"
 33507      625F6D65 
 33507      617300
 33508              	.LASF220:
 33509 05fe 7061636B 		.ascii	"packet_string\000"
 33509      65745F73 
 33509      7472696E 
 33509      6700
 33510              	.LASF155:
 33511 060c 6D5F6D75 		.ascii	"m_mult\000"
 33511      6C7400
 33512              	.LASF129:
 33513 0613 6B5F695F 		.ascii	"k_i_c\000"
 33513      6300
 33514              	.LASF139:
 33515 0619 6D6F746F 		.ascii	"motor_pwm_frequency\000"
 33515      725F7077 
 33515      6D5F6672 
 33515      65717565 
 33515      6E637900 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 715


 33516              	.LASF307:
 33517 062d 64697370 		.ascii	"displacement\000"
 33517      6C616365 
 33517      6D656E74 
 33517      00
 33518              	.LASF301:
 33519 063a 64617461 		.ascii	"data_length\000"
 33519      5F6C656E 
 33519      67746800 
 33520              	.LASF142:
 33521 0646 706F735F 		.ascii	"pos_lim_sup\000"
 33521      6C696D5F 
 33521      73757000 
 33522              	.LASF285:
 33523 0652 5230315F 		.ascii	"R01_str\000"
 33523      73747200 
 33524              	.LASF163:
 33525 065a 656D675F 		.ascii	"emg_speed\000"
 33525      73706565 
 33525      6400
 33526              	.LASF182:
 33527 0664 72657374 		.ascii	"rest_vel\000"
 33527      5F76656C 
 33527      00
 33528              	.LASF233:
 33529 066d 7061636B 		.ascii	"packet_data\000"
 33529      65745F64 
 33529      61746100 
 33530              	.LASF118:
 33531 0679 73745F64 		.ascii	"st_device\000"
 33531      65766963 
 33531      6500
 33532              	.LASF389:
 33533 0683 7046696C 		.ascii	"pFile\000"
 33533      6500
 33534              	.LASF174:
 33535 0689 4144435F 		.ascii	"ADC_conf\000"
 33535      636F6E66 
 33535      00
 33536              	.LASF298:
 33537 0692 636F6D6D 		.ascii	"commWrite\000"
 33537      57726974 
 33537      6500
 33538              	.LASF362:
 33539 069c 64656163 		.ascii	"deactivate_slaves\000"
 33539      74697661 
 33539      74655F73 
 33539      6C617665 
 33539      7300
 33540              	.LASF309:
 33541 06ae 70616765 		.ascii	"pages\000"
 33541      7300
 33542              	.LASF313:
 33543 06b4 6D656D49 		.ascii	"memInit\000"
 33543      6E697400 
 33544              	.LASF132:
 33545 06bc 6B5F695F 		.ascii	"k_i_dl\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 716


 33545      646C00
 33546              	.LASF38:
 33547 06c3 434D445F 		.ascii	"CMD_SET_INPUTS\000"
 33547      5345545F 
 33547      494E5055 
 33547      545300
 33548              	.LASF103:
 33549 06d2 62756666 		.ascii	"buffer\000"
 33549      657200
 33550              	.LASF134:
 33551 06d9 6B5F705F 		.ascii	"k_p_c_dl\000"
 33551      635F646C 
 33551      00
 33552              	.LASF316:
 33553 06e2 636D645F 		.ascii	"cmd_get_measurements\000"
 33553      6765745F 
 33553      6D656173 
 33553      7572656D 
 33553      656E7473 
 33554              	.LASF215:
 33555 06f7 73706565 		.ascii	"speed\000"
 33555      6400
 33556              	.LASF219:
 33557 06fd 72785F63 		.ascii	"rx_cmd\000"
 33557      6D6400
 33558              	.LASF88:
 33559 0704 54595045 		.ascii	"TYPE_DOUBLE\000"
 33559      5F444F55 
 33559      424C4500 
 33560              	.LASF350:
 33561 0710 736C6176 		.ascii	"slave_motor_idx\000"
 33561      655F6D6F 
 33561      746F725F 
 33561      69647800 
 33562              	.LASF367:
 33563 0720 675F6D65 		.ascii	"g_meas\000"
 33563      617300
 33564              	.LASF77:
 33565 0727 41434B5F 		.ascii	"ACK_ERROR\000"
 33565      4552524F 
 33565      5200
 33566              	.LASF386:
 33567 0731 64617461 		.ascii	"data_encoder_raw\000"
 33567      5F656E63 
 33567      6F646572 
 33567      5F726177 
 33567      00
 33568              	.LASF60:
 33569 0742 494E5055 		.ascii	"INPUT_MODE_EXTERNAL\000"
 33569      545F4D4F 
 33569      44455F45 
 33569      58544552 
 33569      4E414C00 
 33570              	.LASF248:
 33571 0756 696E6465 		.ascii	"index\000"
 33571      7800
 33572              	.LASF193:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 717


 33573 075c 6D617869 		.ascii	"maximum_pressure_kPa\000"
 33573      6D756D5F 
 33573      70726573 
 33573      73757265 
 33573      5F6B5061 
 33574              	.LASF183:
 33575 0771 72657374 		.ascii	"rest_position_flag\000"
 33575      5F706F73 
 33575      6974696F 
 33575      6E5F666C 
 33575      616700
 33576              	.LASF185:
 33577 0784 6A6F7973 		.ascii	"joystick_closure_speed\000"
 33577      7469636B 
 33577      5F636C6F 
 33577      73757265 
 33577      5F737065 
 33578              	.LASF346:
 33579 079b 66696C65 		.ascii	"filename_length\000"
 33579      6E616D65 
 33579      5F6C656E 
 33579      67746800 
 33580              	.LASF135:
 33581 07ab 6B5F695F 		.ascii	"k_i_c_dl\000"
 33581      635F646C 
 33581      00
 33582              	.LASF326:
 33583 07b4 636F6D6D 		.ascii	"commReadResCurrFromSH\000"
 33583      52656164 
 33583      52657343 
 33583      75727246 
 33583      726F6D53 
 33584              	.LASF325:
 33585 07ca 636D645F 		.ascii	"cmd_get_currents_for_cuff\000"
 33585      6765745F 
 33585      63757272 
 33585      656E7473 
 33585      5F666F72 
 33586              	.LASF269:
 33587 07e4 6D61675F 		.ascii	"mag_param_str\000"
 33587      70617261 
 33587      6D5F7374 
 33587      7200
 33588              	.LASF383:
 33589 07f2 72657365 		.ascii	"reset_PSoC_flag\000"
 33589      745F5053 
 33589      6F435F66 
 33589      6C616700 
 33590              	.LASF357:
 33591 0802 6F74626B 		.ascii	"otbk_act_wrist_control\000"
 33591      5F616374 
 33591      5F777269 
 33591      73745F63 
 33591      6F6E7472 
 33592              	.LASF89:
 33593 0819 54595045 		.ascii	"TYPE_STRING\000"
 33593      5F535452 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 718


 33593      494E4700 
 33594              	.LASF72:
 33595 0825 43555252 		.ascii	"CURR_AND_POS_CONTROL\000"
 33595      5F414E44 
 33595      5F504F53 
 33595      5F434F4E 
 33595      54524F4C 
 33596              	.LASF28:
 33597 083a 434D445F 		.ascii	"CMD_STORE_PARAMS\000"
 33597      53544F52 
 33597      455F5041 
 33597      52414D53 
 33597      00
 33598              	.LASF230:
 33599 084b 50415241 		.ascii	"PARAMS_STR\000"
 33599      4D535F53 
 33599      545200
 33600              	.LASF213:
 33601 0856 656E6162 		.ascii	"enabled\000"
 33601      6C656400 
 33602              	.LASF7:
 33603 085e 6C6F6E67 		.ascii	"long unsigned int\000"
 33603      20756E73 
 33603      69676E65 
 33603      6420696E 
 33603      7400
 33604              	.LASF32:
 33605 0870 434D445F 		.ascii	"CMD_BOOTLOADER\000"
 33605      424F4F54 
 33605      4C4F4144 
 33605      455200
 33606              	.LASF187:
 33607 087f 6A6F7973 		.ascii	"joystick_gains\000"
 33607      7469636B 
 33607      5F676169 
 33607      6E7300
 33608              	.LASF96:
 33609 088e 686F6C64 		.ascii	"hold_curr\000"
 33609      5F637572 
 33609      7200
 33610              	.LASF66:
 33611 0898 494E5055 		.ascii	"INPUT_MODE_JOYSTICK\000"
 33611      545F4D4F 
 33611      44455F4A 
 33611      4F595354 
 33611      49434B00 
 33612              	.LASF113:
 33613 08ac 746F7461 		.ascii	"total_time_rest\000"
 33613      6C5F7469 
 33613      6D655F72 
 33613      65737400 
 33614              	.LASF222:
 33615 08bc 7374725F 		.ascii	"str_sd_data\000"
 33615      73645F64 
 33615      61746100 
 33616              	.LASF137:
 33617 08c8 61637469 		.ascii	"activ\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 719


 33617      7600
 33618              	.LASF232:
 33619 08ce 4D454E55 		.ascii	"MENU_STR\000"
 33619      5F535452 
 33619      00
 33620              	.LASF154:
 33621 08d7 6D5F6F66 		.ascii	"m_off\000"
 33621      6600
 33622              	.LASF78:
 33623 08dd 41434B5F 		.ascii	"ACK_OK\000"
 33623      4F4B00
 33624              	.LASF80:
 33625 08e4 54595045 		.ascii	"TYPE_FLAG\000"
 33625      5F464C41 
 33625      4700
 33626              	.LASF210:
 33627 08ee 71756174 		.ascii	"quat_value\000"
 33627      5F76616C 
 33627      756500
 33628              	.LASF265:
 33629 08f9 7061636B 		.ascii	"packet_length\000"
 33629      65745F6C 
 33629      656E6774 
 33629      6800
 33630              	.LASF180:
 33631 0907 72657374 		.ascii	"rest_pos\000"
 33631      5F706F73 
 33631      00
 33632              	.LASF91:
 33633 0910 63757272 		.ascii	"curr\000"
 33633      00
 33634              	.LASF147:
 33635 0915 696E7075 		.ascii	"input_mode\000"
 33635      745F6D6F 
 33635      646500
 33636              	.LASF70:
 33637 0920 434F4E54 		.ascii	"CONTROL_PWM\000"
 33637      524F4C5F 
 33637      50574D00 
 33638              	.LASF43:
 33639 092c 434D445F 		.ascii	"CMD_GET_EMG\000"
 33639      4745545F 
 33639      454D4700 
 33640              	.LASF314:
 33641 0938 6D656D49 		.ascii	"memInit_SoftHandPro\000"
 33641      6E69745F 
 33641      536F6674 
 33641      48616E64 
 33641      50726F00 
 33642              	.LASF31:
 33643 094c 434D445F 		.ascii	"CMD_GET_INFO\000"
 33643      4745545F 
 33643      494E464F 
 33643      00
 33644              	.LASF261:
 33645 0959 6765745F 		.ascii	"get_IMU_param_list\000"
 33645      494D555F 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 720


 33645      70617261 
 33645      6D5F6C69 
 33645      737400
 33646              	.LASF340:
 33647 096c 73696E67 		.ascii	"single_packet\000"
 33647      6C655F70 
 33647      61636B65 
 33647      7400
 33648              	.LASF264:
 33649 097a 66697273 		.ascii	"first_imu_parameter\000"
 33649      745F696D 
 33649      755F7061 
 33649      72616D65 
 33649      74657200 
 33650              	.LASF42:
 33651 098e 434D445F 		.ascii	"CMD_GET_CURR_AND_MEAS\000"
 33651      4745545F 
 33651      43555252 
 33651      5F414E44 
 33651      5F4D4541 
 33652              	.LASF403:
 33653 09a4 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 33653      43313120 
 33653      352E342E 
 33653      31203230 
 33653      31363036 
 33654 09d7 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 33654      20726576 
 33654      6973696F 
 33654      6E203233 
 33654      37373135 
 33655 0a0a 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 33655      66756E63 
 33655      74696F6E 
 33655      2D736563 
 33655      74696F6E 
 33656              	.LASF93:
 33657 0a32 73745F72 		.ascii	"st_ref\000"
 33657      656600
 33658              	.LASF319:
 33659 0a39 636D645F 		.ascii	"cmd_get_joystick\000"
 33659      6765745F 
 33659      6A6F7973 
 33659      7469636B 
 33659      00
 33660              	.LASF47:
 33661 0a4a 434D445F 		.ascii	"CMD_SET_CUFF_INPUTS\000"
 33661      5345545F 
 33661      43554646 
 33661      5F494E50 
 33661      55545300 
 33662              	.LASF179:
 33663 0a5e 73745F53 		.ascii	"st_SH_spec\000"
 33663      485F7370 
 33663      656300
 33664              	.LASF375:
 33665 0a69 63616C69 		.ascii	"calib\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 721


 33665      6200
 33666              	.LASF6:
 33667 0a6f 5F5F7569 		.ascii	"__uint32_t\000"
 33667      6E743332 
 33667      5F7400
 33668              	.LASF8:
 33669 0a7a 6C6F6E67 		.ascii	"long long int\000"
 33669      206C6F6E 
 33669      6720696E 
 33669      7400
 33670              	.LASF68:
 33671 0a88 53485F63 		.ascii	"SH_control_mode\000"
 33671      6F6E7472 
 33671      6F6C5F6D 
 33671      6F646500 
 33672              	.LASF82:
 33673 0a98 54595045 		.ascii	"TYPE_UINT8\000"
 33673      5F55494E 
 33673      543800
 33674              	.LASF324:
 33675 0aa3 636D645F 		.ascii	"cmd_get_currents\000"
 33675      6765745F 
 33675      63757272 
 33675      656E7473 
 33675      00
 33676              	.LASF75:
 33677 0ab4 4D41584F 		.ascii	"MAXON_12V\000"
 33677      4E5F3132 
 33677      5600
 33678              	.LASF21:
 33679 0abe 646F7562 		.ascii	"double\000"
 33679      6C6500
 33680              	.LASF56:
 33681 0ac5 434D445F 		.ascii	"CMD_GET_SD_SINGLE_FILE\000"
 33681      4745545F 
 33681      53445F53 
 33681      494E474C 
 33681      455F4649 
 33682              	.LASF153:
 33683 0adc 456E635F 		.ascii	"Enc_raw_read_conf\000"
 33683      7261775F 
 33683      72656164 
 33683      5F636F6E 
 33683      6600
 33684              	.LASF216:
 33685 0aee 72657065 		.ascii	"repetitions\000"
 33685      74697469 
 33685      6F6E7300 
 33686              	.LASF143:
 33687 0afa 6D61785F 		.ascii	"max_step_neg\000"
 33687      73746570 
 33687      5F6E6567 
 33687      00
 33688              	.LASF401:
 33689 0b07 656D675F 		.ascii	"emg_history_next_idx\000"
 33689      68697374 
 33689      6F72795F 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 722


 33689      6E657874 
 33689      5F696478 
 33690              	.LASF190:
 33691 0b1c 736C6176 		.ascii	"slave_ID\000"
 33691      655F4944 
 33691      00
 33692              	.LASF381:
 33693 0b25 72657365 		.ascii	"reset_last_value_flag\000"
 33693      745F6C61 
 33693      73745F76 
 33693      616C7565 
 33693      5F666C61 
 33694              	.LASF231:
 33695 0b3b 43555354 		.ascii	"CUSTOM_PARAM_GET\000"
 33695      4F4D5F50 
 33695      4152414D 
 33695      5F474554 
 33695      00
 33696              	.LASF20:
 33697 0b4c 666C6F61 		.ascii	"float\000"
 33697      7400
 33698              	.LASF169:
 33699 0b52 494D555F 		.ascii	"IMU_conf\000"
 33699      636F6E66 
 33699      00
 33700              	.LASF405:
 33701 0b5b 433A5C55 		.ascii	"C:\\Users\\mgnocco\\OneDrive - Fondazione Istituto "
 33701      73657273 
 33701      5C6D676E 
 33701      6F63636F 
 33701      5C4F6E65 
 33702 0b8b 4974616C 		.ascii	"Italiano Tecnologia\\Firmware\\Psoc5\\Electrostimul"
 33702      69616E6F 
 33702      20546563 
 33702      6E6F6C6F 
 33702      6769615C 
 33703 0bbb 6174696F 		.ascii	"ation\\Electrostimulation.cydsn\000"
 33703      6E5C456C 
 33703      65637472 
 33703      6F737469 
 33703      6D756C61 
 33704              	.LASF57:
 33705 0bda 434D445F 		.ascii	"CMD_REMOVE_SD_SINGLE_FILE\000"
 33705      52454D4F 
 33705      56455F53 
 33705      445F5349 
 33705      4E474C45 
 33706              	.LASF249:
 33707 0bf4 50415241 		.ascii	"PARAM_IDX\000"
 33707      4D5F4944 
 33707      5800
 33708              	.LASF97:
 33709 0bfe 73745F61 		.ascii	"st_adc_meas\000"
 33709      64635F6D 
 33709      65617300 
 33710              	.LASF245:
 33711 0c0a 6D5F6164 		.ascii	"m_addr\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 723


 33711      647200
 33712              	.LASF374:
 33713 0c11 635F6D65 		.ascii	"c_mem\000"
 33713      6D00
 33714              	.LASF300:
 33715 0c17 64617461 		.ascii	"data_array\000"
 33715      5F617272 
 33715      617900
 33716              	.LASF10:
 33717 0c22 756E7369 		.ascii	"unsigned int\000"
 33717      676E6564 
 33717      20696E74 
 33717      00
 33718              	.LASF354:
 33719 0c2f 6572725F 		.ascii	"err_emg_2\000"
 33719      656D675F 
 33719      3200
 33720              	.LASF234:
 33721 0c39 7061636B 		.ascii	"packet_lenght\000"
 33721      65745F6C 
 33721      656E6768 
 33721      7400
 33722              	.LASF303:
 33723 0c47 73656E64 		.ascii	"sendAcknowledgment\000"
 33723      41636B6E 
 33723      6F776C65 
 33723      64676D65 
 33723      6E7400
 33724              	.LASF288:
 33725 0c5a 70726570 		.ascii	"prepare_SD_legend\000"
 33725      6172655F 
 33725      53445F6C 
 33725      6567656E 
 33725      6400
 33726              	.LASF398:
 33727 0c6c 4D616743 		.ascii	"MagCal\000"
 33727      616C00
 33728              	.LASF58:
 33729 0c73 53485F63 		.ascii	"SH_command\000"
 33729      6F6D6D61 
 33729      6E6400
 33730              	.LASF84:
 33731 0c7e 54595045 		.ascii	"TYPE_UINT16\000"
 33731      5F55494E 
 33731      54313600 
 33732              	.LASF200:
 33733 0c8a 666C6167 		.ascii	"flag\000"
 33733      00
 33734              	.LASF320:
 33735 0c8f 636D645F 		.ascii	"cmd_set_inputs\000"
 33735      7365745F 
 33735      696E7075 
 33735      747300
 33736              	.LASF148:
 33737 0c9e 636F6E74 		.ascii	"control_mode\000"
 33737      726F6C5F 
 33737      6D6F6465 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 724


 33737      00
 33738              	.LASF334:
 33739 0cab 6F66665F 		.ascii	"off_1\000"
 33739      3100
 33740              	.LASF61:
 33741 0cb1 494E5055 		.ascii	"INPUT_MODE_ENCODER3\000"
 33741      545F4D4F 
 33741      44455F45 
 33741      4E434F44 
 33741      45523300 
 33742              	.LASF299:
 33743 0cc5 636F6D6D 		.ascii	"commWriteID\000"
 33743      57726974 
 33743      65494400 
 33744              	.LASF52:
 33745 0cd1 434D445F 		.ascii	"CMD_GET_ENCODER_CONF\000"
 33745      4745545F 
 33745      454E434F 
 33745      4445525F 
 33745      434F4E46 
 33746              	.LASF166:
 33747 0ce6 73745F69 		.ascii	"st_imu\000"
 33747      6D7500
 33748              	.LASF322:
 33749 0ced 636D645F 		.ascii	"cmd_get_activate\000"
 33749      6765745F 
 33749      61637469 
 33749      76617465 
 33749      00
 33750              	.LASF351:
 33751 0cfe 656D675F 		.ascii	"emg_activation_velocity_fsm\000"
 33751      61637469 
 33751      76617469 
 33751      6F6E5F76 
 33751      656C6F63 
 33752              	.LASF236:
 33753 0d1a 73747269 		.ascii	"string_lenght\000"
 33753      6E675F6C 
 33753      656E6768 
 33753      7400
 33754              	.LASF87:
 33755 0d28 54595045 		.ascii	"TYPE_FLOAT\000"
 33755      5F464C4F 
 33755      415400
 33756              	.LASF254:
 33757 0d33 43555354 		.ascii	"CUSTOM_PARAM_SET_LIST\000"
 33757      4F4D5F50 
 33757      4152414D 
 33757      5F534554 
 33757      5F4C4953 
 33758              	.LASF228:
 33759 0d49 4E554D5F 		.ascii	"NUM_STRUCT\000"
 33759      53545255 
 33759      435400
 33760              	.LASF396:
 33761 0d54 73696E67 		.ascii	"single_imu_size\000"
 33761      6C655F69 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 725


 33761      6D755F73 
 33761      697A6500 
 33762              	.LASF259:
 33763 0d64 6175785F 		.ascii	"aux_uchar\000"
 33763      75636861 
 33763      7200
 33764              	.LASF286:
 33765 0d6e 70726570 		.ascii	"prepare_R01_info\000"
 33765      6172655F 
 33765      5230315F 
 33765      696E666F 
 33765      00
 33766              	.LASF98:
 33767 0d7f 6164645F 		.ascii	"add_emg\000"
 33767      656D6700 
 33768              	.LASF83:
 33769 0d87 54595045 		.ascii	"TYPE_INT16\000"
 33769      5F494E54 
 33769      313600
 33770              	.LASF240:
 33771 0d92 6175785F 		.ascii	"aux_uint16\000"
 33771      75696E74 
 33771      313600
 33772              	.LASF161:
 33773 0d9d 656D675F 		.ascii	"emg_threshold\000"
 33773      74687265 
 33773      73686F6C 
 33773      6400
 33774              	.LASF46:
 33775 0dab 434D445F 		.ascii	"CMD_GET_CURR_DIFF\000"
 33775      4745545F 
 33775      43555252 
 33775      5F444946 
 33775      4600
 33776              	.LASF158:
 33777 0dbd 6D6F746F 		.ascii	"motor_handle_ratio\000"
 33777      725F6861 
 33777      6E646C65 
 33777      5F726174 
 33777      696F00
 33778              	.LASF109:
 33779 0dd0 63757272 		.ascii	"current_hist\000"
 33779      656E745F 
 33779      68697374 
 33779      00
 33780              	.LASF71:
 33781 0ddd 434F4E54 		.ascii	"CONTROL_CURRENT\000"
 33781      524F4C5F 
 33781      43555252 
 33781      454E5400 
 33782              	.LASF24:
 33783 0ded 6C6F6E67 		.ascii	"long double\000"
 33783      20646F75 
 33783      626C6500 
 33784              	.LASF86:
 33785 0df9 54595045 		.ascii	"TYPE_UINT32\000"
 33785      5F55494E 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 726


 33785      54333200 
 33786              	.LASF191:
 33787 0e05 73745F46 		.ascii	"st_FB_spec\000"
 33787      425F7370 
 33787      656300
 33788              	.LASF225:
 33789 0e10 5641525F 		.ascii	"VAR_P\000"
 33789      5000
 33790              	.LASF253:
 33791 0e16 43555354 		.ascii	"CUSTOM_PARAM_GET_LIST\000"
 33791      4F4D5F50 
 33791      4152414D 
 33791      5F474554 
 33791      5F4C4953 
 33792              	.LASF116:
 33793 0e2c 6D6F7469 		.ascii	"motion_counter\000"
 33793      6F6E5F63 
 33793      6F756E74 
 33793      657200
 33794              	.LASF302:
 33795 0e3b 63686563 		.ascii	"checksum\000"
 33795      6B73756D 
 33795      00
 33796              	.LASF366:
 33797 0e44 675F7265 		.ascii	"g_refOld\000"
 33797      664F6C64 
 33797      00
 33798              	.LASF35:
 33799 0e4d 434D445F 		.ascii	"CMD_HAND_CALIBRATE\000"
 33799      48414E44 
 33799      5F43414C 
 33799      49425241 
 33799      544500
 33800              	.LASF208:
 33801 0e60 6779726F 		.ascii	"gyro_value\000"
 33801      5F76616C 
 33801      756500
 33802              	.LASF171:
 33803 0e6b 63757272 		.ascii	"curr_time\000"
 33803      5F74696D 
 33803      6500
 33804              	.LASF156:
 33805 0e75 646F7562 		.ascii	"double_encoder_on_off\000"
 33805      6C655F65 
 33805      6E636F64 
 33805      65725F6F 
 33805      6E5F6F66 
 33806              	.LASF358:
 33807 0e8b 64726976 		.ascii	"drive_slave\000"
 33807      655F736C 
 33807      61766500 
 33808              	.LASF168:
 33809 0e97 5350495F 		.ascii	"SPI_read_delay\000"
 33809      72656164 
 33809      5F64656C 
 33809      617900
 33810              	.LASF76:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 727


 33811 0ea6 61636B6E 		.ascii	"acknowledgment_values\000"
 33811      6F776C65 
 33811      64676D65 
 33811      6E745F76 
 33811      616C7565 
 33812              	.LASF243:
 33813 0ebc 4D4F544F 		.ascii	"MOTOR_IDX\000"
 33813      525F4944 
 33813      5800
 33814              	.LASF312:
 33815 0ec6 6D656D52 		.ascii	"memRestore\000"
 33815      6573746F 
 33815      726500
 33816              	.LASF267:
 33817 0ed1 6E5F696D 		.ascii	"n_imu_str\000"
 33817      755F7374 
 33817      7200
 33818              	.LASF281:
 33819 0edb 696E666F 		.ascii	"info_string\000"
 33819      5F737472 
 33819      696E6700 
 33820              	.LASF289:
 33821 0ee7 70726570 		.ascii	"prepare_SD_info\000"
 33821      6172655F 
 33821      53445F69 
 33821      6E666F00 
 33822              	.LASF352:
 33823 0ef7 66736D5F 		.ascii	"fsm_state\000"
 33823      73746174 
 33823      6500
 33824              	.LASF9:
 33825 0f01 6C6F6E67 		.ascii	"long long unsigned int\000"
 33825      206C6F6E 
 33825      6720756E 
 33825      7369676E 
 33825      65642069 
 33826              	.LASF85:
 33827 0f18 54595045 		.ascii	"TYPE_INT32\000"
 33827      5F494E54 
 33827      333200
 33828              	.LASF242:
 33829 0f23 6175785F 		.ascii	"aux_uint32\000"
 33829      75696E74 
 33829      333200
 33830              	.LASF104:
 33831 0f2e 6C656E67 		.ascii	"length\000"
 33831      746800
 33832              	.LASF255:
 33833 0f35 55534552 		.ascii	"USER_ID_PARAM\000"
 33833      5F49445F 
 33833      50415241 
 33833      4D00
 33834              	.LASF205:
 33835 0f43 73745F69 		.ascii	"st_imu_data\000"
 33835      6D755F64 
 33835      61746100 
 33836              	.LASF209:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 728


 33837 0f4f 6D61675F 		.ascii	"mag_value\000"
 33837      76616C75 
 33837      6500
 33838              	.LASF92:
 33839 0f59 6F6E6F66 		.ascii	"onoff\000"
 33839      6600
 33840              	.LASF45:
 33841 0f5f 434D445F 		.ascii	"CMD_GET_ACCEL\000"
 33841      4745545F 
 33841      41434345 
 33841      4C00
 33842              	.LASF317:
 33843 0f6d 636D645F 		.ascii	"cmd_get_velocities\000"
 33843      6765745F 
 33843      76656C6F 
 33843      63697469 
 33843      657300
 33844              	.LASF311:
 33845 0f80 6D656D52 		.ascii	"memRecall\000"
 33845      6563616C 
 33845      6C00
 33846              	.LASF377:
 33847 0f8a 74696D65 		.ascii	"timer_value0\000"
 33847      725F7661 
 33847      6C756530 
 33847      00
 33848              	.LASF48:
 33849 0f97 434D445F 		.ascii	"CMD_SET_BAUDRATE\000"
 33849      5345545F 
 33849      42415544 
 33849      52415445 
 33849      00
 33850              	.LASF128:
 33851 0fa8 6B5F705F 		.ascii	"k_p_c\000"
 33851      6300
 33852              	.LASF271:
 33853 0fae 696D755F 		.ascii	"imu_table_str\000"
 33853      7461626C 
 33853      655F7374 
 33853      7200
 33854              	.LASF378:
 33855 0fbc 6465765F 		.ascii	"dev_tension\000"
 33855      74656E73 
 33855      696F6E00 
 33856              	.LASF335:
 33857 0fc8 6D756C74 		.ascii	"mult_1\000"
 33857      5F3100
 33858              	.LASF283:
 33859 0fcf 70726570 		.ascii	"prepare_counter_info\000"
 33859      6172655F 
 33859      636F756E 
 33859      7465725F 
 33859      696E666F 
 33860              	.LASF23:
 33861 0fe4 72656738 		.ascii	"reg8\000"
 33861      00
 33862              	.LASF194:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 729


 33863 0fe9 70726F70 		.ascii	"prop_err_fb_gain\000"
 33863      5F657272 
 33863      5F66625F 
 33863      6761696E 
 33863      00
 33864              	.LASF296:
 33865 0ffa 636F6D6D 		.ascii	"commWrite_old_id\000"
 33865      57726974 
 33865      655F6F6C 
 33865      645F6964 
 33865      00
 33866              	.LASF247:
 33867 100b 6D616E61 		.ascii	"manage_param_list\000"
 33867      67655F70 
 33867      6172616D 
 33867      5F6C6973 
 33867      7400
 33868              	.LASF30:
 33869 101d 434D445F 		.ascii	"CMD_RESTORE_PARAMS\000"
 33869      52455354 
 33869      4F52455F 
 33869      50415241 
 33869      4D5300
 33870              	.LASF390:
 33871 1030 73644669 		.ascii	"sdFile\000"
 33871      6C6500
 33872              	.LASF287:
 33873 1037 70726570 		.ascii	"prepare_SD_param_info\000"
 33873      6172655F 
 33873      53445F70 
 33873      6172616D 
 33873      5F696E66 
 33874              	.LASF327:
 33875 104d 63757272 		.ascii	"curr_diff\000"
 33875      5F646966 
 33875      6600
 33876              	.LASF189:
 33877 1057 736C6176 		.ascii	"slave_comm_active\000"
 33877      655F636F 
 33877      6D6D5F61 
 33877      63746976 
 33877      6500
 33878              	.LASF290:
 33879 1069 70726570 		.ascii	"prepare_SD_EMG_History_legend\000"
 33879      6172655F 
 33879      53445F45 
 33879      4D475F48 
 33879      6973746F 
 33880              	.LASF297:
 33881 1087 6F6C645F 		.ascii	"old_id\000"
 33881      696400
 33882              	.LASF406:
 33883 108e 5F5F5245 		.ascii	"__REV16\000"
 33883      56313600 
 33884              	.LASF387:
 33885 1096 4E5F456E 		.ascii	"N_Encoder_Line_Connected\000"
 33885      636F6465 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 730


 33885      725F4C69 
 33885      6E655F43 
 33885      6F6E6E65 
 33886              	.LASF126:
 33887 10af 6465765F 		.ascii	"dev_type\000"
 33887      74797065 
 33887      00
 33888              	.LASF176:
 33889 10b8 73745F75 		.ascii	"st_user\000"
 33889      73657200 
 33890              	.LASF323:
 33891 10c0 636D645F 		.ascii	"cmd_get_curr_and_meas\000"
 33891      6765745F 
 33891      63757272 
 33891      5F616E64 
 33891      5F6D6561 
 33892              	.LASF159:
 33893 10d6 67656172 		.ascii	"gears_params\000"
 33893      735F7061 
 33893      72616D73 
 33893      00
 33894              	.LASF170:
 33895 10e3 73745F65 		.ascii	"st_expansion\000"
 33895      7870616E 
 33895      73696F6E 
 33895      00
 33896              	.LASF164:
 33897 10f0 656D675F 		.ascii	"emg_calibration_flag\000"
 33897      63616C69 
 33897      62726174 
 33897      696F6E5F 
 33897      666C6167 
 33898              	.LASF94:
 33899 1105 73745F6D 		.ascii	"st_meas\000"
 33899      65617300 
 33900              	.LASF55:
 33901 110d 434D445F 		.ascii	"CMD_GET_ADC_RAW\000"
 33901      4745545F 
 33901      4144435F 
 33901      52415700 
 33902              	.LASF186:
 33903 111d 6A6F7973 		.ascii	"joystick_threshold\000"
 33903      7469636B 
 33903      5F746872 
 33903      6573686F 
 33903      6C6400
 33904              	.LASF74:
 33905 1130 4D41584F 		.ascii	"MAXON_24V\000"
 33905      4E5F3234 
 33905      5600
 33906              	.LASF67:
 33907 113a 494E5055 		.ascii	"INPUT_MODE_EMG_PROPORTIONAL_NC\000"
 33907      545F4D4F 
 33907      44455F45 
 33907      4D475F50 
 33907      524F504F 
 33908              	.LASF51:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 731


 33909 1159 434D445F 		.ascii	"CMD_GET_IMU_PARAM\000"
 33909      4745545F 
 33909      494D555F 
 33909      50415241 
 33909      4D00
 33910              	.LASF371:
 33911 116b 675F6662 		.ascii	"g_fb_meas\000"
 33911      5F6D6561 
 33911      7300
 33912              	.LASF53:
 33913 1175 434D445F 		.ascii	"CMD_GET_ENCODER_RAW\000"
 33913      4745545F 
 33913      454E434F 
 33913      4445525F 
 33913      52415700 
 33914              	.LASF333:
 33915 1189 636D645F 		.ascii	"cmd_store_params\000"
 33915      73746F72 
 33915      655F7061 
 33915      72616D73 
 33915      00
 33916              	.LASF373:
 33917 119a 675F6D65 		.ascii	"g_mem\000"
 33917      6D00
 33918              	.LASF40:
 33919 11a0 434D445F 		.ascii	"CMD_GET_MEASUREMENTS\000"
 33919      4745545F 
 33919      4D454153 
 33919      5552454D 
 33919      454E5453 
 33920              	.LASF370:
 33921 11b5 675F6164 		.ascii	"g_adc_measOld\000"
 33921      635F6D65 
 33921      61734F6C 
 33921      6400
 33922              	.LASF342:
 33923 11c3 636D645F 		.ascii	"cmd_get_encoder_raw\000"
 33923      6765745F 
 33923      656E636F 
 33923      6465725F 
 33923      72617700 
 33924              	.LASF13:
 33925 11d7 75696E74 		.ascii	"uint8\000"
 33925      3800
 33926              	.LASF217:
 33927 11dd 636F6D6D 		.ascii	"commProcess\000"
 33927      50726F63 
 33927      65737300 
 33928              	.LASF184:
 33929 11e9 73745F4A 		.ascii	"st_JOY_spec\000"
 33929      4F595F73 
 33929      70656300 
 33930              	.LASF2:
 33931 11f5 73686F72 		.ascii	"short int\000"
 33931      7420696E 
 33931      7400
 33932              	.LASF275:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 732


 33933 11ff 6964735F 		.ascii	"ids_str_len\000"
 33933      7374725F 
 33933      6C656E00 
 33934              	.LASF133:
 33935 120b 6B5F645F 		.ascii	"k_d_dl\000"
 33935      646C00
 33936              	.LASF235:
 33937 1212 6964785F 		.ascii	"idx_menu\000"
 33937      6D656E75 
 33937      00
 33938              	.LASF99:
 33939 121b 6A6F7973 		.ascii	"joystick\000"
 33939      7469636B 
 33939      00
 33940              	.LASF202:
 33941 1224 6D6F746F 		.ascii	"motor\000"
 33941      7200
 33942              	.LASF393:
 33943 122a 4E5F494D 		.ascii	"N_IMU_Connected\000"
 33943      555F436F 
 33943      6E6E6563 
 33943      74656400 
 33944              	.LASF39:
 33945 123a 434D445F 		.ascii	"CMD_GET_INPUTS\000"
 33945      4745545F 
 33945      494E5055 
 33945      545300
 33946              	.LASF119:
 33947 1249 68775F6D 		.ascii	"hw_maint_date\000"
 33947      61696E74 
 33947      5F646174 
 33947      6500
 33948              	.LASF268:
 33949 1257 6964735F 		.ascii	"ids_str\000"
 33949      73747200 
 33950              	.LASF54:
 33951 125f 434D445F 		.ascii	"CMD_GET_ADC_CONF\000"
 33951      4745545F 
 33951      4144435F 
 33951      434F4E46 
 33951      00
 33952              	.LASF27:
 33953 1270 434D445F 		.ascii	"CMD_SET_ZEROS\000"
 33953      5345545F 
 33953      5A45524F 
 33953      5300
 33954              	.LASF276:
 33955 127e 6D61675F 		.ascii	"mag_param_str_len\000"
 33955      70617261 
 33955      6D5F7374 
 33955      725F6C65 
 33955      6E00
 33956              	.LASF262:
 33957 1290 6E756D5F 		.ascii	"num_imus_id_params\000"
 33957      696D7573 
 33957      5F69645F 
 33957      70617261 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 733


 33957      6D7300
 33958              	.LASF239:
 33959 12a3 6175785F 		.ascii	"aux_int16\000"
 33959      696E7431 
 33959      3600
 33960              	.LASF400:
 33961 12ad 656D675F 		.ascii	"emg_history\000"
 33961      68697374 
 33961      6F727900 
 33962              	.LASF402:
 33963 12b9 45455052 		.ascii	"EEPROM_ADDR\000"
 33963      4F4D5F41 
 33963      44445200 
 33964              	.LASF120:
 33965 12c5 73746174 		.ascii	"stats_period_begin_date\000"
 33965      735F7065 
 33965      72696F64 
 33965      5F626567 
 33965      696E5F64 
 33966              	.LASF395:
 33967 12dd 696D7573 		.ascii	"imus_data_size\000"
 33967      5F646174 
 33967      615F7369 
 33967      7A6500
 33968              	.LASF363:
 33969 12ec 49544D5F 		.ascii	"ITM_RxBuffer\000"
 33969      52784275 
 33969      66666572 
 33969      00
 33970              	.LASF44:
 33971 12f9 434D445F 		.ascii	"CMD_GET_VELOCITIES\000"
 33971      4745545F 
 33971      56454C4F 
 33971      43495449 
 33971      455300
 33972              	.LASF380:
 33973 130c 706F775F 		.ascii	"pow_tension\000"
 33973      74656E73 
 33973      696F6E00 
 33974              	.LASF34:
 33975 1318 434D445F 		.ascii	"CMD_GET_PARAM_LIST\000"
 33975      4745545F 
 33975      50415241 
 33975      4D5F4C49 
 33975      535400
 33976              	.LASF79:
 33977 132b 64617461 		.ascii	"data_types\000"
 33977      5F747970 
 33977      657300
 33978              	.LASF17:
 33979 1336 696E7431 		.ascii	"int16\000"
 33979      3600
 33980              	.LASF172:
 33981 133c 72656164 		.ascii	"read_exp_port_flag\000"
 33981      5F657870 
 33981      5F706F72 
 33981      745F666C 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 734


 33981      616700
 33982              	.LASF165:
 33983 134f 73776974 		.ascii	"switch_emg\000"
 33983      63685F65 
 33983      6D6700
 33984              	.LASF138:
 33985 135a 61637469 		.ascii	"activate_pwm_rescaling\000"
 33985      76617465 
 33985      5F70776D 
 33985      5F726573 
 33985      63616C69 
 33986              	.LASF131:
 33987 1371 6B5F705F 		.ascii	"k_p_dl\000"
 33987      646C00
 33988              	.LASF95:
 33989 1378 65737469 		.ascii	"estim_curr\000"
 33989      6D5F6375 
 33989      727200
 33990              	.LASF379:
 33991 1383 6465765F 		.ascii	"dev_pwm_limit\000"
 33991      70776D5F 
 33991      6C696D69 
 33991      7400
 33992              	.LASF173:
 33993 1391 72656164 		.ascii	"read_ADC_sensors_port_flag\000"
 33993      5F414443 
 33993      5F73656E 
 33993      736F7273 
 33993      5F706F72 
 33994              	.LASF388:
 33995 13ac 456E636F 		.ascii	"Encoder_Value\000"
 33995      6465725F 
 33995      56616C75 
 33995      6500
 33996              	.LASF341:
 33997 13ba 636D645F 		.ascii	"cmd_get_encoder_map\000"
 33997      6765745F 
 33997      656E636F 
 33997      6465725F 
 33997      6D617000 
 33998              	.LASF125:
 33999 13ce 75736572 		.ascii	"user_id\000"
 33999      5F696400 
 34000              	.LASF12:
 34001 13d6 75696E74 		.ascii	"uint32_t\000"
 34001      33325F74 
 34001      00
 34002              	.LASF238:
 34003 13df 6175785F 		.ascii	"aux_float\000"
 34003      666C6F61 
 34003      7400
 34004              	.LASF394:
 34005 13e9 494D555F 		.ascii	"IMU_connected\000"
 34005      636F6E6E 
 34005      65637465 
 34005      6400
 34006              	.LASF229:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 735


 34007 13f7 4E554D5F 		.ascii	"NUM_MENU\000"
 34007      4D454E55 
 34007      00
 34008              	.LASF241:
 34009 1400 6175785F 		.ascii	"aux_int32\000"
 34009      696E7433 
 34009      3200
 34010              	.LASF124:
 34011 140a 62617564 		.ascii	"baud_rate\000"
 34011      5F726174 
 34011      6500
 34012              	.LASF329:
 34013 1414 745F656E 		.ascii	"t_end\000"
 34013      6400
 34014              	.LASF197:
 34015 141a 66617374 		.ascii	"fast_act_threshold\000"
 34015      5F616374 
 34015      5F746872 
 34015      6573686F 
 34015      6C6400
 34016              	.LASF224:
 34017 142d 696E666F 		.ascii	"info_type\000"
 34017      5F747970 
 34017      6500
 34018              	.LASF50:
 34019 1437 434D445F 		.ascii	"CMD_GET_IMU_READINGS\000"
 34019      4745545F 
 34019      494D555F 
 34019      52454144 
 34019      494E4753 
 34020              	.LASF392:
 34021 144c 73645230 		.ascii	"sdR01File\000"
 34021      3146696C 
 34021      6500
 34022              	.LASF305:
 34023 1456 4C435243 		.ascii	"LCRChecksum\000"
 34023      6865636B 
 34023      73756D00 
 34024              	.LASF338:
 34025 1462 6B5F696D 		.ascii	"k_imu\000"
 34025      7500
 34026              	.LASF3:
 34027 1468 73686F72 		.ascii	"short unsigned int\000"
 34027      7420756E 
 34027      7369676E 
 34027      65642069 
 34027      6E7400
 34028              	.LASF152:
 34029 147b 73745F65 		.ascii	"st_encoder\000"
 34029      6E636F64 
 34029      657200
 34030              	.LASF369:
 34031 1486 675F6164 		.ascii	"g_adc_meas\000"
 34031      635F6D65 
 34031      617300
 34032              	.LASF192:
 34033 1491 6D61785F 		.ascii	"max_residual_current\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 736


 34033      72657369 
 34033      6475616C 
 34033      5F637572 
 34033      72656E74 
 34034              	.LASF282:
 34035 14a6 454E435F 		.ascii	"ENC_L\000"
 34035      4C00
 34036              	.LASF199:
 34037 14ac 73745F65 		.ascii	"st_eeprom\000"
 34037      6570726F 
 34037      6D00
 34038              	.LASF226:
 34039 14b6 54595045 		.ascii	"TYPES\000"
 34039      5300
 34040              	.LASF364:
 34041 14bc 675F7265 		.ascii	"g_ref\000"
 34041      6600
 34042              	.LASF18:
 34043 14c2 696E7433 		.ascii	"int32\000"
 34043      3200
 34044              	.LASF385:
 34045 14c8 4E554D5F 		.ascii	"NUM_OF_ANALOG_INPUTS\000"
 34045      4F465F41 
 34045      4E414C4F 
 34045      475F494E 
 34045      50555453 
 34046              	.LASF221:
 34047 14dd 696E666F 		.ascii	"infoGet\000"
 34047      47657400 
 34048              	.LASF127:
 34049 14e5 73745F6D 		.ascii	"st_motor\000"
 34049      6F746F72 
 34049      00
 34050              	.LASF399:
 34051 14ee 6D617374 		.ascii	"master_mode\000"
 34051      65725F6D 
 34051      6F646500 
 34052              	.LASF90:
 34053 14fa 46535F46 		.ascii	"FS_FILE\000"
 34053      494C4500 
 34054              	.LASF140:
 34055 1502 706F735F 		.ascii	"pos_lim_flag\000"
 34055      6C696D5F 
 34055      666C6167 
 34055      00
 34056              	.LASF368:
 34057 150f 675F6D65 		.ascii	"g_measOld\000"
 34057      61734F6C 
 34057      6400
 34058              	.LASF69:
 34059 1519 434F4E54 		.ascii	"CONTROL_ANGLE\000"
 34059      524F4C5F 
 34059      414E474C 
 34059      4500
 34060              	.LASF321:
 34061 1527 636D645F 		.ascii	"cmd_activate\000"
 34061      61637469 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 737


 34061      76617465 
 34061      00
 34062              	.LASF5:
 34063 1534 5F5F696E 		.ascii	"__int32_t\000"
 34063      7433325F 
 34063      7400
 34064              	.LASF251:
 34065 153e 7370695F 		.ascii	"spi_delay_menu\000"
 34065      64656C61 
 34065      795F6D65 
 34065      6E7500
 34066              	.LASF111:
 34067 154d 77697265 		.ascii	"wire_disp\000"
 34067      5F646973 
 34067      7000
 34068              	.LASF162:
 34069 1557 656D675F 		.ascii	"emg_max_value\000"
 34069      6D61785F 
 34069      76616C75 
 34069      6500
 34070              	.LASF256:
 34071 1565 43555354 		.ascii	"CUSTOM_PARAM_SET\000"
 34071      4F4D5F50 
 34071      4152414D 
 34071      5F534554 
 34071      00
 34072              	.LASF404:
 34073 1576 2E2E5C73 		.ascii	"..\\src\\command_processing.c\000"
 34073      72635C63 
 34073      6F6D6D61 
 34073      6E645F70 
 34073      726F6365 
 34074              	.LASF146:
 34075 1592 63757272 		.ascii	"current_limit\000"
 34075      656E745F 
 34075      6C696D69 
 34075      7400
 34076              	.LASF59:
 34077 15a0 53485F69 		.ascii	"SH_input_mode\000"
 34077      6E707574 
 34077      5F6D6F64 
 34077      6500
 34078              	.LASF81:
 34079 15ae 54595045 		.ascii	"TYPE_INT8\000"
 34079      5F494E54 
 34079      3800
 34080              	.LASF196:
 34081 15b8 61637469 		.ascii	"activation_mode\000"
 34081      76617469 
 34081      6F6E5F6D 
 34081      6F646500 
 34082              	.LASF295:
 34083 15c8 494D555F 		.ascii	"IMU_reading_info\000"
 34083      72656164 
 34083      696E675F 
 34083      696E666F 
 34083      00
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccHAm0bt.s 			page 738


 34084              	.LASF14:
 34085 15d9 75696E74 		.ascii	"uint16\000"
 34085      313600
 34086              	.LASF181:
 34087 15e0 72657374 		.ascii	"rest_delay\000"
 34087      5F64656C 
 34087      617900
 34088              	.LASF237:
 34089 15eb 6175785F 		.ascii	"aux_str\000"
 34089      73747200 
 34090              	.LASF26:
 34091 15f3 434D445F 		.ascii	"CMD_PING\000"
 34091      50494E47 
 34091      00
 34092              	.LASF136:
 34093 15fc 6B5F645F 		.ascii	"k_d_c_dl\000"
 34093      635F646C 
 34093      00
 34094              	.LASF214:
 34095 1605 64697265 		.ascii	"direction\000"
 34095      6374696F 
 34095      6E00
 34096              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
