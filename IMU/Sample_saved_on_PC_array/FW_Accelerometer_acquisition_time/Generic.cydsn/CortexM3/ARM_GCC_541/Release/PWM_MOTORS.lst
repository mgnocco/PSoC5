ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc2YA5ie.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"PWM_MOTORS.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	PWM_MOTORS_initVar
  20              		.bss
  21              		.type	PWM_MOTORS_initVar, %object
  22              		.size	PWM_MOTORS_initVar, 1
  23              	PWM_MOTORS_initVar:
  24 0000 00       		.space	1
  25              		.section	.text.PWM_MOTORS_Start,"ax",%progbits
  26              		.align	2
  27              		.global	PWM_MOTORS_Start
  28              		.thumb
  29              		.thumb_func
  30              		.type	PWM_MOTORS_Start, %function
  31              	PWM_MOTORS_Start:
  32              	.LFB0:
  33              		.file 1 "Generated_Source\\PSoC5\\PWM_MOTORS.c"
   1:Generated_Source\PSoC5/PWM_MOTORS.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/PWM_MOTORS.c **** * File Name: PWM_MOTORS.c
   3:Generated_Source\PSoC5/PWM_MOTORS.c **** * Version 3.30
   4:Generated_Source\PSoC5/PWM_MOTORS.c **** *
   5:Generated_Source\PSoC5/PWM_MOTORS.c **** * Description:
   6:Generated_Source\PSoC5/PWM_MOTORS.c **** *  The PWM User Module consist of an 8 or 16-bit counter with two 8 or 16-bit
   7:Generated_Source\PSoC5/PWM_MOTORS.c **** *  comparitors. Each instance of this user module is capable of generating
   8:Generated_Source\PSoC5/PWM_MOTORS.c **** *  two PWM outputs with the same period. The pulse width is selectable between
   9:Generated_Source\PSoC5/PWM_MOTORS.c **** *  1 and 255/65535. The period is selectable between 2 and 255/65536 clocks.
  10:Generated_Source\PSoC5/PWM_MOTORS.c **** *  The compare value output may be configured to be active when the present
  11:Generated_Source\PSoC5/PWM_MOTORS.c **** *  counter is less than or less than/equal to the compare value.
  12:Generated_Source\PSoC5/PWM_MOTORS.c **** *  A terminal count output is also provided. It generates a pulse one clock
  13:Generated_Source\PSoC5/PWM_MOTORS.c **** *  width wide when the counter is equal to zero.
  14:Generated_Source\PSoC5/PWM_MOTORS.c **** *
  15:Generated_Source\PSoC5/PWM_MOTORS.c **** * Note:
  16:Generated_Source\PSoC5/PWM_MOTORS.c **** *
  17:Generated_Source\PSoC5/PWM_MOTORS.c **** *******************************************************************************
  18:Generated_Source\PSoC5/PWM_MOTORS.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  19:Generated_Source\PSoC5/PWM_MOTORS.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:Generated_Source\PSoC5/PWM_MOTORS.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:Generated_Source\PSoC5/PWM_MOTORS.c **** * the software package with which this file was provided.
  22:Generated_Source\PSoC5/PWM_MOTORS.c **** ********************************************************************************/
  23:Generated_Source\PSoC5/PWM_MOTORS.c **** 
  24:Generated_Source\PSoC5/PWM_MOTORS.c **** #include "PWM_MOTORS.h"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc2YA5ie.s 			page 2


  25:Generated_Source\PSoC5/PWM_MOTORS.c **** 
  26:Generated_Source\PSoC5/PWM_MOTORS.c **** /* Error message for removed <resource> through optimization */
  27:Generated_Source\PSoC5/PWM_MOTORS.c **** #ifdef PWM_MOTORS_PWMUDB_genblk1_ctrlreg__REMOVED
  28:Generated_Source\PSoC5/PWM_MOTORS.c ****     #error PWM_v3_30 detected with a constant 0 for the enable or \
  29:Generated_Source\PSoC5/PWM_MOTORS.c ****          constant 1 for reset. This will prevent the component from operating.
  30:Generated_Source\PSoC5/PWM_MOTORS.c **** #endif /* PWM_MOTORS_PWMUDB_genblk1_ctrlreg__REMOVED */
  31:Generated_Source\PSoC5/PWM_MOTORS.c **** 
  32:Generated_Source\PSoC5/PWM_MOTORS.c **** uint8 PWM_MOTORS_initVar = 0u;
  33:Generated_Source\PSoC5/PWM_MOTORS.c **** 
  34:Generated_Source\PSoC5/PWM_MOTORS.c **** 
  35:Generated_Source\PSoC5/PWM_MOTORS.c **** /*******************************************************************************
  36:Generated_Source\PSoC5/PWM_MOTORS.c **** * Function Name: PWM_MOTORS_Start
  37:Generated_Source\PSoC5/PWM_MOTORS.c **** ********************************************************************************
  38:Generated_Source\PSoC5/PWM_MOTORS.c **** *
  39:Generated_Source\PSoC5/PWM_MOTORS.c **** * Summary:
  40:Generated_Source\PSoC5/PWM_MOTORS.c **** *  The start function initializes the pwm with the default values, the
  41:Generated_Source\PSoC5/PWM_MOTORS.c **** *  enables the counter to begin counting.  It does not enable interrupts,
  42:Generated_Source\PSoC5/PWM_MOTORS.c **** *  the EnableInt command should be called if interrupt generation is required.
  43:Generated_Source\PSoC5/PWM_MOTORS.c **** *
  44:Generated_Source\PSoC5/PWM_MOTORS.c **** * Parameters:
  45:Generated_Source\PSoC5/PWM_MOTORS.c **** *  None
  46:Generated_Source\PSoC5/PWM_MOTORS.c **** *
  47:Generated_Source\PSoC5/PWM_MOTORS.c **** * Return:
  48:Generated_Source\PSoC5/PWM_MOTORS.c **** *  None
  49:Generated_Source\PSoC5/PWM_MOTORS.c **** *
  50:Generated_Source\PSoC5/PWM_MOTORS.c **** * Global variables:
  51:Generated_Source\PSoC5/PWM_MOTORS.c **** *  PWM_MOTORS_initVar: Is modified when this function is called for the
  52:Generated_Source\PSoC5/PWM_MOTORS.c **** *   first time. Is used to ensure that initialization happens only once.
  53:Generated_Source\PSoC5/PWM_MOTORS.c **** *
  54:Generated_Source\PSoC5/PWM_MOTORS.c **** *******************************************************************************/
  55:Generated_Source\PSoC5/PWM_MOTORS.c **** void PWM_MOTORS_Start(void) 
  56:Generated_Source\PSoC5/PWM_MOTORS.c **** {
  34              		.loc 1 56 0
  35              		.cfi_startproc
  36              		@ args = 0, pretend = 0, frame = 0
  37              		@ frame_needed = 1, uses_anonymous_args = 0
  38 0000 80B5     		push	{r7, lr}
  39              		.cfi_def_cfa_offset 8
  40              		.cfi_offset 7, -8
  41              		.cfi_offset 14, -4
  42 0002 00AF     		add	r7, sp, #0
  43              		.cfi_def_cfa_register 7
  57:Generated_Source\PSoC5/PWM_MOTORS.c ****     /* If not Initialized then initialize all required hardware and software */
  58:Generated_Source\PSoC5/PWM_MOTORS.c ****     if(PWM_MOTORS_initVar == 0u)
  44              		.loc 1 58 0
  45 0004 064B     		ldr	r3, .L3
  46 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  47 0008 002B     		cmp	r3, #0
  48 000a 04D1     		bne	.L2
  59:Generated_Source\PSoC5/PWM_MOTORS.c ****     {
  60:Generated_Source\PSoC5/PWM_MOTORS.c ****         PWM_MOTORS_Init();
  49              		.loc 1 60 0
  50 000c FFF7FEFF 		bl	PWM_MOTORS_Init
  61:Generated_Source\PSoC5/PWM_MOTORS.c ****         PWM_MOTORS_initVar = 1u;
  51              		.loc 1 61 0
  52 0010 034B     		ldr	r3, .L3
  53 0012 0122     		movs	r2, #1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc2YA5ie.s 			page 3


  54 0014 1A70     		strb	r2, [r3]
  55              	.L2:
  62:Generated_Source\PSoC5/PWM_MOTORS.c ****     }
  63:Generated_Source\PSoC5/PWM_MOTORS.c ****     PWM_MOTORS_Enable();
  56              		.loc 1 63 0
  57 0016 FFF7FEFF 		bl	PWM_MOTORS_Enable
  64:Generated_Source\PSoC5/PWM_MOTORS.c **** 
  65:Generated_Source\PSoC5/PWM_MOTORS.c **** }
  58              		.loc 1 65 0
  59 001a 00BF     		nop
  60 001c 80BD     		pop	{r7, pc}
  61              	.L4:
  62 001e 00BF     		.align	2
  63              	.L3:
  64 0020 00000000 		.word	PWM_MOTORS_initVar
  65              		.cfi_endproc
  66              	.LFE0:
  67              		.size	PWM_MOTORS_Start, .-PWM_MOTORS_Start
  68              		.section	.text.PWM_MOTORS_Init,"ax",%progbits
  69              		.align	2
  70              		.global	PWM_MOTORS_Init
  71              		.thumb
  72              		.thumb_func
  73              		.type	PWM_MOTORS_Init, %function
  74              	PWM_MOTORS_Init:
  75              	.LFB1:
  66:Generated_Source\PSoC5/PWM_MOTORS.c **** 
  67:Generated_Source\PSoC5/PWM_MOTORS.c **** 
  68:Generated_Source\PSoC5/PWM_MOTORS.c **** /*******************************************************************************
  69:Generated_Source\PSoC5/PWM_MOTORS.c **** * Function Name: PWM_MOTORS_Init
  70:Generated_Source\PSoC5/PWM_MOTORS.c **** ********************************************************************************
  71:Generated_Source\PSoC5/PWM_MOTORS.c **** *
  72:Generated_Source\PSoC5/PWM_MOTORS.c **** * Summary:
  73:Generated_Source\PSoC5/PWM_MOTORS.c **** *  Initialize component's parameters to the parameters set by user in the
  74:Generated_Source\PSoC5/PWM_MOTORS.c **** *  customizer of the component placed onto schematic. Usually called in
  75:Generated_Source\PSoC5/PWM_MOTORS.c **** *  PWM_MOTORS_Start().
  76:Generated_Source\PSoC5/PWM_MOTORS.c **** *
  77:Generated_Source\PSoC5/PWM_MOTORS.c **** * Parameters:
  78:Generated_Source\PSoC5/PWM_MOTORS.c **** *  None
  79:Generated_Source\PSoC5/PWM_MOTORS.c **** *
  80:Generated_Source\PSoC5/PWM_MOTORS.c **** * Return:
  81:Generated_Source\PSoC5/PWM_MOTORS.c **** *  None
  82:Generated_Source\PSoC5/PWM_MOTORS.c **** *
  83:Generated_Source\PSoC5/PWM_MOTORS.c **** *******************************************************************************/
  84:Generated_Source\PSoC5/PWM_MOTORS.c **** void PWM_MOTORS_Init(void) 
  85:Generated_Source\PSoC5/PWM_MOTORS.c **** {
  76              		.loc 1 85 0
  77              		.cfi_startproc
  78              		@ args = 0, pretend = 0, frame = 8
  79              		@ frame_needed = 1, uses_anonymous_args = 0
  80 0000 80B5     		push	{r7, lr}
  81              		.cfi_def_cfa_offset 8
  82              		.cfi_offset 7, -8
  83              		.cfi_offset 14, -4
  84 0002 82B0     		sub	sp, sp, #8
  85              		.cfi_def_cfa_offset 16
  86 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc2YA5ie.s 			page 4


  87              		.cfi_def_cfa_register 7
  86:Generated_Source\PSoC5/PWM_MOTORS.c ****     #if (PWM_MOTORS_UsingFixedFunction || PWM_MOTORS_UseControl)
  87:Generated_Source\PSoC5/PWM_MOTORS.c ****         uint8 ctrl;
  88:Generated_Source\PSoC5/PWM_MOTORS.c ****     #endif /* (PWM_MOTORS_UsingFixedFunction || PWM_MOTORS_UseControl) */
  89:Generated_Source\PSoC5/PWM_MOTORS.c **** 
  90:Generated_Source\PSoC5/PWM_MOTORS.c ****     #if(!PWM_MOTORS_UsingFixedFunction)
  91:Generated_Source\PSoC5/PWM_MOTORS.c ****         #if(PWM_MOTORS_UseStatus)
  92:Generated_Source\PSoC5/PWM_MOTORS.c ****             /* Interrupt State Backup for Critical Region*/
  93:Generated_Source\PSoC5/PWM_MOTORS.c ****             uint8 PWM_MOTORS_interruptState;
  94:Generated_Source\PSoC5/PWM_MOTORS.c ****         #endif /* (PWM_MOTORS_UseStatus) */
  95:Generated_Source\PSoC5/PWM_MOTORS.c ****     #endif /* (!PWM_MOTORS_UsingFixedFunction) */
  96:Generated_Source\PSoC5/PWM_MOTORS.c **** 
  97:Generated_Source\PSoC5/PWM_MOTORS.c ****     #if (PWM_MOTORS_UsingFixedFunction)
  98:Generated_Source\PSoC5/PWM_MOTORS.c ****         /* You are allowed to write the compare value (FF only) */
  99:Generated_Source\PSoC5/PWM_MOTORS.c ****         PWM_MOTORS_CONTROL |= PWM_MOTORS_CFG0_MODE;
 100:Generated_Source\PSoC5/PWM_MOTORS.c ****         #if (PWM_MOTORS_DeadBand2_4)
 101:Generated_Source\PSoC5/PWM_MOTORS.c ****             PWM_MOTORS_CONTROL |= PWM_MOTORS_CFG0_DB;
 102:Generated_Source\PSoC5/PWM_MOTORS.c ****         #endif /* (PWM_MOTORS_DeadBand2_4) */
 103:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 104:Generated_Source\PSoC5/PWM_MOTORS.c ****         ctrl = PWM_MOTORS_CONTROL3 & ((uint8 )(~PWM_MOTORS_CTRL_CMPMODE1_MASK));
 105:Generated_Source\PSoC5/PWM_MOTORS.c ****         PWM_MOTORS_CONTROL3 = ctrl | PWM_MOTORS_DEFAULT_COMPARE1_MODE;
 106:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 107:Generated_Source\PSoC5/PWM_MOTORS.c ****          /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 108:Generated_Source\PSoC5/PWM_MOTORS.c ****         PWM_MOTORS_RT1 &= ((uint8)(~PWM_MOTORS_RT1_MASK));
 109:Generated_Source\PSoC5/PWM_MOTORS.c ****         PWM_MOTORS_RT1 |= PWM_MOTORS_SYNC;
 110:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 111:Generated_Source\PSoC5/PWM_MOTORS.c ****         /*Enable DSI Sync all all inputs of the PWM*/
 112:Generated_Source\PSoC5/PWM_MOTORS.c ****         PWM_MOTORS_RT1 &= ((uint8)(~PWM_MOTORS_SYNCDSI_MASK));
 113:Generated_Source\PSoC5/PWM_MOTORS.c ****         PWM_MOTORS_RT1 |= PWM_MOTORS_SYNCDSI_EN;
 114:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 115:Generated_Source\PSoC5/PWM_MOTORS.c ****     #elif (PWM_MOTORS_UseControl)
 116:Generated_Source\PSoC5/PWM_MOTORS.c ****         /* Set the default compare mode defined in the parameter */
 117:Generated_Source\PSoC5/PWM_MOTORS.c ****         ctrl = PWM_MOTORS_CONTROL & ((uint8)(~PWM_MOTORS_CTRL_CMPMODE2_MASK)) &
  88              		.loc 1 117 0
  89 0006 164B     		ldr	r3, .L6
  90 0008 1B78     		ldrb	r3, [r3]
  91 000a DBB2     		uxtb	r3, r3
  92 000c 23F03F03 		bic	r3, r3, #63
  93 0010 FB71     		strb	r3, [r7, #7]
 118:Generated_Source\PSoC5/PWM_MOTORS.c ****                 ((uint8)(~PWM_MOTORS_CTRL_CMPMODE1_MASK));
 119:Generated_Source\PSoC5/PWM_MOTORS.c ****         PWM_MOTORS_CONTROL = ctrl | PWM_MOTORS_DEFAULT_COMPARE2_MODE |
  94              		.loc 1 119 0
  95 0012 134A     		ldr	r2, .L6
  96 0014 FB79     		ldrb	r3, [r7, #7]
  97 0016 43F01203 		orr	r3, r3, #18
  98 001a DBB2     		uxtb	r3, r3
  99 001c 1370     		strb	r3, [r2]
 120:Generated_Source\PSoC5/PWM_MOTORS.c ****                                    PWM_MOTORS_DEFAULT_COMPARE1_MODE;
 121:Generated_Source\PSoC5/PWM_MOTORS.c ****     #endif /* (PWM_MOTORS_UsingFixedFunction) */
 122:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 123:Generated_Source\PSoC5/PWM_MOTORS.c ****     #if (!PWM_MOTORS_UsingFixedFunction)
 124:Generated_Source\PSoC5/PWM_MOTORS.c ****         #if (PWM_MOTORS_Resolution == 8)
 125:Generated_Source\PSoC5/PWM_MOTORS.c ****             /* Set FIFO 0 to 1 byte register for period*/
 126:Generated_Source\PSoC5/PWM_MOTORS.c ****             PWM_MOTORS_AUX_CONTROLDP0 |= (PWM_MOTORS_AUX_CTRL_FIFO0_CLR);
 127:Generated_Source\PSoC5/PWM_MOTORS.c ****         #else /* (PWM_MOTORS_Resolution == 16)*/
 128:Generated_Source\PSoC5/PWM_MOTORS.c ****             /* Set FIFO 0 to 1 byte register for period */
 129:Generated_Source\PSoC5/PWM_MOTORS.c ****             PWM_MOTORS_AUX_CONTROLDP0 |= (PWM_MOTORS_AUX_CTRL_FIFO0_CLR);
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc2YA5ie.s 			page 5


 100              		.loc 1 129 0
 101 001e 114A     		ldr	r2, .L6+4
 102 0020 104B     		ldr	r3, .L6+4
 103 0022 1B78     		ldrb	r3, [r3]
 104 0024 DBB2     		uxtb	r3, r3
 105 0026 43F00103 		orr	r3, r3, #1
 106 002a DBB2     		uxtb	r3, r3
 107 002c 1370     		strb	r3, [r2]
 130:Generated_Source\PSoC5/PWM_MOTORS.c ****             PWM_MOTORS_AUX_CONTROLDP1 |= (PWM_MOTORS_AUX_CTRL_FIFO0_CLR);
 108              		.loc 1 130 0
 109 002e 0E4A     		ldr	r2, .L6+8
 110 0030 0D4B     		ldr	r3, .L6+8
 111 0032 1B78     		ldrb	r3, [r3]
 112 0034 DBB2     		uxtb	r3, r3
 113 0036 43F00103 		orr	r3, r3, #1
 114 003a DBB2     		uxtb	r3, r3
 115 003c 1370     		strb	r3, [r2]
 131:Generated_Source\PSoC5/PWM_MOTORS.c ****         #endif /* (PWM_MOTORS_Resolution == 8) */
 132:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 133:Generated_Source\PSoC5/PWM_MOTORS.c ****         PWM_MOTORS_WriteCounter(PWM_MOTORS_INIT_PERIOD_VALUE);
 116              		.loc 1 133 0
 117 003e 6420     		movs	r0, #100
 118 0040 FFF7FEFF 		bl	PWM_MOTORS_WriteCounter
 134:Generated_Source\PSoC5/PWM_MOTORS.c ****     #endif /* (!PWM_MOTORS_UsingFixedFunction) */
 135:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 136:Generated_Source\PSoC5/PWM_MOTORS.c ****     PWM_MOTORS_WritePeriod(PWM_MOTORS_INIT_PERIOD_VALUE);
 119              		.loc 1 136 0
 120 0044 6420     		movs	r0, #100
 121 0046 FFF7FEFF 		bl	PWM_MOTORS_WritePeriod
 137:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 138:Generated_Source\PSoC5/PWM_MOTORS.c ****         #if (PWM_MOTORS_UseOneCompareMode)
 139:Generated_Source\PSoC5/PWM_MOTORS.c ****             PWM_MOTORS_WriteCompare(PWM_MOTORS_INIT_COMPARE_VALUE1);
 140:Generated_Source\PSoC5/PWM_MOTORS.c ****         #else
 141:Generated_Source\PSoC5/PWM_MOTORS.c ****             PWM_MOTORS_WriteCompare1(PWM_MOTORS_INIT_COMPARE_VALUE1);
 122              		.loc 1 141 0
 123 004a 0020     		movs	r0, #0
 124 004c FFF7FEFF 		bl	PWM_MOTORS_WriteCompare1
 142:Generated_Source\PSoC5/PWM_MOTORS.c ****             PWM_MOTORS_WriteCompare2(PWM_MOTORS_INIT_COMPARE_VALUE2);
 125              		.loc 1 142 0
 126 0050 0020     		movs	r0, #0
 127 0052 FFF7FEFF 		bl	PWM_MOTORS_WriteCompare2
 143:Generated_Source\PSoC5/PWM_MOTORS.c ****         #endif /* (PWM_MOTORS_UseOneCompareMode) */
 144:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 145:Generated_Source\PSoC5/PWM_MOTORS.c ****         #if (PWM_MOTORS_KillModeMinTime)
 146:Generated_Source\PSoC5/PWM_MOTORS.c ****             PWM_MOTORS_WriteKillTime(PWM_MOTORS_MinimumKillTime);
 147:Generated_Source\PSoC5/PWM_MOTORS.c ****         #endif /* (PWM_MOTORS_KillModeMinTime) */
 148:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 149:Generated_Source\PSoC5/PWM_MOTORS.c ****         #if (PWM_MOTORS_DeadBandUsed)
 150:Generated_Source\PSoC5/PWM_MOTORS.c ****             PWM_MOTORS_WriteDeadTime(PWM_MOTORS_INIT_DEAD_TIME);
 151:Generated_Source\PSoC5/PWM_MOTORS.c ****         #endif /* (PWM_MOTORS_DeadBandUsed) */
 152:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 153:Generated_Source\PSoC5/PWM_MOTORS.c ****     #if (PWM_MOTORS_UseStatus || PWM_MOTORS_UsingFixedFunction)
 154:Generated_Source\PSoC5/PWM_MOTORS.c ****         PWM_MOTORS_SetInterruptMode(PWM_MOTORS_INIT_INTERRUPTS_MODE);
 155:Generated_Source\PSoC5/PWM_MOTORS.c ****     #endif /* (PWM_MOTORS_UseStatus || PWM_MOTORS_UsingFixedFunction) */
 156:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 157:Generated_Source\PSoC5/PWM_MOTORS.c ****     #if (PWM_MOTORS_UsingFixedFunction)
 158:Generated_Source\PSoC5/PWM_MOTORS.c ****         /* Globally Enable the Fixed Function Block chosen */
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc2YA5ie.s 			page 6


 159:Generated_Source\PSoC5/PWM_MOTORS.c ****         PWM_MOTORS_GLOBAL_ENABLE |= PWM_MOTORS_BLOCK_EN_MASK;
 160:Generated_Source\PSoC5/PWM_MOTORS.c ****         /* Set the Interrupt source to come from the status register */
 161:Generated_Source\PSoC5/PWM_MOTORS.c ****         PWM_MOTORS_CONTROL2 |= PWM_MOTORS_CTRL2_IRQ_SEL;
 162:Generated_Source\PSoC5/PWM_MOTORS.c ****     #else
 163:Generated_Source\PSoC5/PWM_MOTORS.c ****         #if(PWM_MOTORS_UseStatus)
 164:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 165:Generated_Source\PSoC5/PWM_MOTORS.c ****             /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region cri
 166:Generated_Source\PSoC5/PWM_MOTORS.c ****             /* Enter Critical Region*/
 167:Generated_Source\PSoC5/PWM_MOTORS.c ****             PWM_MOTORS_interruptState = CyEnterCriticalSection();
 168:Generated_Source\PSoC5/PWM_MOTORS.c ****             /* Use the interrupt output of the status register for IRQ output */
 169:Generated_Source\PSoC5/PWM_MOTORS.c ****             PWM_MOTORS_STATUS_AUX_CTRL |= PWM_MOTORS_STATUS_ACTL_INT_EN_MASK;
 170:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 171:Generated_Source\PSoC5/PWM_MOTORS.c ****              /* Exit Critical Region*/
 172:Generated_Source\PSoC5/PWM_MOTORS.c ****             CyExitCriticalSection(PWM_MOTORS_interruptState);
 173:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 174:Generated_Source\PSoC5/PWM_MOTORS.c ****             /* Clear the FIFO to enable the PWM_MOTORS_STATUS_FIFOFULL
 175:Generated_Source\PSoC5/PWM_MOTORS.c ****                    bit to be set on FIFO full. */
 176:Generated_Source\PSoC5/PWM_MOTORS.c ****             PWM_MOTORS_ClearFIFO();
 177:Generated_Source\PSoC5/PWM_MOTORS.c ****         #endif /* (PWM_MOTORS_UseStatus) */
 178:Generated_Source\PSoC5/PWM_MOTORS.c ****     #endif /* (PWM_MOTORS_UsingFixedFunction) */
 179:Generated_Source\PSoC5/PWM_MOTORS.c **** }
 128              		.loc 1 179 0
 129 0056 00BF     		nop
 130 0058 0837     		adds	r7, r7, #8
 131              		.cfi_def_cfa_offset 8
 132 005a BD46     		mov	sp, r7
 133              		.cfi_def_cfa_register 13
 134              		@ sp needed
 135 005c 80BD     		pop	{r7, pc}
 136              	.L7:
 137 005e 00BF     		.align	2
 138              	.L6:
 139 0060 73640040 		.word	1073767539
 140 0064 94640040 		.word	1073767572
 141 0068 95640040 		.word	1073767573
 142              		.cfi_endproc
 143              	.LFE1:
 144              		.size	PWM_MOTORS_Init, .-PWM_MOTORS_Init
 145              		.section	.text.PWM_MOTORS_Enable,"ax",%progbits
 146              		.align	2
 147              		.global	PWM_MOTORS_Enable
 148              		.thumb
 149              		.thumb_func
 150              		.type	PWM_MOTORS_Enable, %function
 151              	PWM_MOTORS_Enable:
 152              	.LFB2:
 180:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 181:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 182:Generated_Source\PSoC5/PWM_MOTORS.c **** /*******************************************************************************
 183:Generated_Source\PSoC5/PWM_MOTORS.c **** * Function Name: PWM_MOTORS_Enable
 184:Generated_Source\PSoC5/PWM_MOTORS.c **** ********************************************************************************
 185:Generated_Source\PSoC5/PWM_MOTORS.c **** *
 186:Generated_Source\PSoC5/PWM_MOTORS.c **** * Summary:
 187:Generated_Source\PSoC5/PWM_MOTORS.c **** *  Enables the PWM block operation
 188:Generated_Source\PSoC5/PWM_MOTORS.c **** *
 189:Generated_Source\PSoC5/PWM_MOTORS.c **** * Parameters:
 190:Generated_Source\PSoC5/PWM_MOTORS.c **** *  None
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc2YA5ie.s 			page 7


 191:Generated_Source\PSoC5/PWM_MOTORS.c **** *
 192:Generated_Source\PSoC5/PWM_MOTORS.c **** * Return:
 193:Generated_Source\PSoC5/PWM_MOTORS.c **** *  None
 194:Generated_Source\PSoC5/PWM_MOTORS.c **** *
 195:Generated_Source\PSoC5/PWM_MOTORS.c **** * Side Effects:
 196:Generated_Source\PSoC5/PWM_MOTORS.c **** *  This works only if software enable mode is chosen
 197:Generated_Source\PSoC5/PWM_MOTORS.c **** *
 198:Generated_Source\PSoC5/PWM_MOTORS.c **** *******************************************************************************/
 199:Generated_Source\PSoC5/PWM_MOTORS.c **** void PWM_MOTORS_Enable(void) 
 200:Generated_Source\PSoC5/PWM_MOTORS.c **** {
 153              		.loc 1 200 0
 154              		.cfi_startproc
 155              		@ args = 0, pretend = 0, frame = 0
 156              		@ frame_needed = 1, uses_anonymous_args = 0
 157              		@ link register save eliminated.
 158 0000 80B4     		push	{r7}
 159              		.cfi_def_cfa_offset 4
 160              		.cfi_offset 7, -4
 161 0002 00AF     		add	r7, sp, #0
 162              		.cfi_def_cfa_register 7
 201:Generated_Source\PSoC5/PWM_MOTORS.c ****     /* Globally Enable the Fixed Function Block chosen */
 202:Generated_Source\PSoC5/PWM_MOTORS.c ****     #if (PWM_MOTORS_UsingFixedFunction)
 203:Generated_Source\PSoC5/PWM_MOTORS.c ****         PWM_MOTORS_GLOBAL_ENABLE |= PWM_MOTORS_BLOCK_EN_MASK;
 204:Generated_Source\PSoC5/PWM_MOTORS.c ****         PWM_MOTORS_GLOBAL_STBY_ENABLE |= PWM_MOTORS_BLOCK_STBY_EN_MASK;
 205:Generated_Source\PSoC5/PWM_MOTORS.c ****     #endif /* (PWM_MOTORS_UsingFixedFunction) */
 206:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 207:Generated_Source\PSoC5/PWM_MOTORS.c ****     /* Enable the PWM from the control register  */
 208:Generated_Source\PSoC5/PWM_MOTORS.c ****     #if (PWM_MOTORS_UseControl || PWM_MOTORS_UsingFixedFunction)
 209:Generated_Source\PSoC5/PWM_MOTORS.c ****         PWM_MOTORS_CONTROL |= PWM_MOTORS_CTRL_ENABLE;
 163              		.loc 1 209 0
 164 0004 054A     		ldr	r2, .L9
 165 0006 054B     		ldr	r3, .L9
 166 0008 1B78     		ldrb	r3, [r3]
 167 000a DBB2     		uxtb	r3, r3
 168 000c 63F07F03 		orn	r3, r3, #127
 169 0010 DBB2     		uxtb	r3, r3
 170 0012 1370     		strb	r3, [r2]
 210:Generated_Source\PSoC5/PWM_MOTORS.c ****     #endif /* (PWM_MOTORS_UseControl || PWM_MOTORS_UsingFixedFunction) */
 211:Generated_Source\PSoC5/PWM_MOTORS.c **** }
 171              		.loc 1 211 0
 172 0014 00BF     		nop
 173 0016 BD46     		mov	sp, r7
 174              		.cfi_def_cfa_register 13
 175              		@ sp needed
 176 0018 80BC     		pop	{r7}
 177              		.cfi_restore 7
 178              		.cfi_def_cfa_offset 0
 179 001a 7047     		bx	lr
 180              	.L10:
 181              		.align	2
 182              	.L9:
 183 001c 73640040 		.word	1073767539
 184              		.cfi_endproc
 185              	.LFE2:
 186              		.size	PWM_MOTORS_Enable, .-PWM_MOTORS_Enable
 187              		.section	.text.PWM_MOTORS_Stop,"ax",%progbits
 188              		.align	2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc2YA5ie.s 			page 8


 189              		.global	PWM_MOTORS_Stop
 190              		.thumb
 191              		.thumb_func
 192              		.type	PWM_MOTORS_Stop, %function
 193              	PWM_MOTORS_Stop:
 194              	.LFB3:
 212:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 213:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 214:Generated_Source\PSoC5/PWM_MOTORS.c **** /*******************************************************************************
 215:Generated_Source\PSoC5/PWM_MOTORS.c **** * Function Name: PWM_MOTORS_Stop
 216:Generated_Source\PSoC5/PWM_MOTORS.c **** ********************************************************************************
 217:Generated_Source\PSoC5/PWM_MOTORS.c **** *
 218:Generated_Source\PSoC5/PWM_MOTORS.c **** * Summary:
 219:Generated_Source\PSoC5/PWM_MOTORS.c **** *  The stop function halts the PWM, but does not change any modes or disable
 220:Generated_Source\PSoC5/PWM_MOTORS.c **** *  interrupts.
 221:Generated_Source\PSoC5/PWM_MOTORS.c **** *
 222:Generated_Source\PSoC5/PWM_MOTORS.c **** * Parameters:
 223:Generated_Source\PSoC5/PWM_MOTORS.c **** *  None
 224:Generated_Source\PSoC5/PWM_MOTORS.c **** *
 225:Generated_Source\PSoC5/PWM_MOTORS.c **** * Return:
 226:Generated_Source\PSoC5/PWM_MOTORS.c **** *  None
 227:Generated_Source\PSoC5/PWM_MOTORS.c **** *
 228:Generated_Source\PSoC5/PWM_MOTORS.c **** * Side Effects:
 229:Generated_Source\PSoC5/PWM_MOTORS.c **** *  If the Enable mode is set to Hardware only then this function
 230:Generated_Source\PSoC5/PWM_MOTORS.c **** *  has no effect on the operation of the PWM
 231:Generated_Source\PSoC5/PWM_MOTORS.c **** *
 232:Generated_Source\PSoC5/PWM_MOTORS.c **** *******************************************************************************/
 233:Generated_Source\PSoC5/PWM_MOTORS.c **** void PWM_MOTORS_Stop(void) 
 234:Generated_Source\PSoC5/PWM_MOTORS.c **** {
 195              		.loc 1 234 0
 196              		.cfi_startproc
 197              		@ args = 0, pretend = 0, frame = 0
 198              		@ frame_needed = 1, uses_anonymous_args = 0
 199              		@ link register save eliminated.
 200 0000 80B4     		push	{r7}
 201              		.cfi_def_cfa_offset 4
 202              		.cfi_offset 7, -4
 203 0002 00AF     		add	r7, sp, #0
 204              		.cfi_def_cfa_register 7
 235:Generated_Source\PSoC5/PWM_MOTORS.c ****     #if (PWM_MOTORS_UseControl || PWM_MOTORS_UsingFixedFunction)
 236:Generated_Source\PSoC5/PWM_MOTORS.c ****         PWM_MOTORS_CONTROL &= ((uint8)(~PWM_MOTORS_CTRL_ENABLE));
 205              		.loc 1 236 0
 206 0004 054A     		ldr	r2, .L12
 207 0006 054B     		ldr	r3, .L12
 208 0008 1B78     		ldrb	r3, [r3]
 209 000a DBB2     		uxtb	r3, r3
 210 000c 03F07F03 		and	r3, r3, #127
 211 0010 DBB2     		uxtb	r3, r3
 212 0012 1370     		strb	r3, [r2]
 237:Generated_Source\PSoC5/PWM_MOTORS.c ****     #endif /* (PWM_MOTORS_UseControl || PWM_MOTORS_UsingFixedFunction) */
 238:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 239:Generated_Source\PSoC5/PWM_MOTORS.c ****     /* Globally disable the Fixed Function Block chosen */
 240:Generated_Source\PSoC5/PWM_MOTORS.c ****     #if (PWM_MOTORS_UsingFixedFunction)
 241:Generated_Source\PSoC5/PWM_MOTORS.c ****         PWM_MOTORS_GLOBAL_ENABLE &= ((uint8)(~PWM_MOTORS_BLOCK_EN_MASK));
 242:Generated_Source\PSoC5/PWM_MOTORS.c ****         PWM_MOTORS_GLOBAL_STBY_ENABLE &= ((uint8)(~PWM_MOTORS_BLOCK_STBY_EN_MASK));
 243:Generated_Source\PSoC5/PWM_MOTORS.c ****     #endif /* (PWM_MOTORS_UsingFixedFunction) */
 244:Generated_Source\PSoC5/PWM_MOTORS.c **** }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc2YA5ie.s 			page 9


 213              		.loc 1 244 0
 214 0014 00BF     		nop
 215 0016 BD46     		mov	sp, r7
 216              		.cfi_def_cfa_register 13
 217              		@ sp needed
 218 0018 80BC     		pop	{r7}
 219              		.cfi_restore 7
 220              		.cfi_def_cfa_offset 0
 221 001a 7047     		bx	lr
 222              	.L13:
 223              		.align	2
 224              	.L12:
 225 001c 73640040 		.word	1073767539
 226              		.cfi_endproc
 227              	.LFE3:
 228              		.size	PWM_MOTORS_Stop, .-PWM_MOTORS_Stop
 229              		.section	.text.PWM_MOTORS_WriteCounter,"ax",%progbits
 230              		.align	2
 231              		.global	PWM_MOTORS_WriteCounter
 232              		.thumb
 233              		.thumb_func
 234              		.type	PWM_MOTORS_WriteCounter, %function
 235              	PWM_MOTORS_WriteCounter:
 236              	.LFB4:
 245:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 246:Generated_Source\PSoC5/PWM_MOTORS.c **** #if (PWM_MOTORS_UseOneCompareMode)
 247:Generated_Source\PSoC5/PWM_MOTORS.c ****     #if (PWM_MOTORS_CompareMode1SW)
 248:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 249:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 250:Generated_Source\PSoC5/PWM_MOTORS.c ****         /*******************************************************************************
 251:Generated_Source\PSoC5/PWM_MOTORS.c ****         * Function Name: PWM_MOTORS_SetCompareMode
 252:Generated_Source\PSoC5/PWM_MOTORS.c ****         ********************************************************************************
 253:Generated_Source\PSoC5/PWM_MOTORS.c ****         *
 254:Generated_Source\PSoC5/PWM_MOTORS.c ****         * Summary:
 255:Generated_Source\PSoC5/PWM_MOTORS.c ****         *  This function writes the Compare Mode for the pwm output when in Dither mode,
 256:Generated_Source\PSoC5/PWM_MOTORS.c ****         *  Center Align Mode or One Output Mode.
 257:Generated_Source\PSoC5/PWM_MOTORS.c ****         *
 258:Generated_Source\PSoC5/PWM_MOTORS.c ****         * Parameters:
 259:Generated_Source\PSoC5/PWM_MOTORS.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 260:Generated_Source\PSoC5/PWM_MOTORS.c ****         *                defined in the H file as input arguments.
 261:Generated_Source\PSoC5/PWM_MOTORS.c ****         *
 262:Generated_Source\PSoC5/PWM_MOTORS.c ****         * Return:
 263:Generated_Source\PSoC5/PWM_MOTORS.c ****         *  None
 264:Generated_Source\PSoC5/PWM_MOTORS.c ****         *
 265:Generated_Source\PSoC5/PWM_MOTORS.c ****         *******************************************************************************/
 266:Generated_Source\PSoC5/PWM_MOTORS.c ****         void PWM_MOTORS_SetCompareMode(uint8 comparemode) 
 267:Generated_Source\PSoC5/PWM_MOTORS.c ****         {
 268:Generated_Source\PSoC5/PWM_MOTORS.c ****             #if(PWM_MOTORS_UsingFixedFunction)
 269:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 270:Generated_Source\PSoC5/PWM_MOTORS.c ****                 #if(0 != PWM_MOTORS_CTRL_CMPMODE1_SHIFT)
 271:Generated_Source\PSoC5/PWM_MOTORS.c ****                     uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_MOTORS_CTRL_CMPMOD
 272:Generated_Source\PSoC5/PWM_MOTORS.c ****                 #else
 273:Generated_Source\PSoC5/PWM_MOTORS.c ****                     uint8 comparemodemasked = comparemode;
 274:Generated_Source\PSoC5/PWM_MOTORS.c ****                 #endif /* (0 != PWM_MOTORS_CTRL_CMPMODE1_SHIFT) */
 275:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 276:Generated_Source\PSoC5/PWM_MOTORS.c ****                 PWM_MOTORS_CONTROL3 &= ((uint8)(~PWM_MOTORS_CTRL_CMPMODE1_MASK)); /*Clear Existing 
 277:Generated_Source\PSoC5/PWM_MOTORS.c ****                 PWM_MOTORS_CONTROL3 |= comparemodemasked;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc2YA5ie.s 			page 10


 278:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 279:Generated_Source\PSoC5/PWM_MOTORS.c ****             #elif (PWM_MOTORS_UseControl)
 280:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 281:Generated_Source\PSoC5/PWM_MOTORS.c ****                 #if(0 != PWM_MOTORS_CTRL_CMPMODE1_SHIFT)
 282:Generated_Source\PSoC5/PWM_MOTORS.c ****                     uint8 comparemode1masked = ((uint8)((uint8)comparemode << PWM_MOTORS_CTRL_CMPMO
 283:Generated_Source\PSoC5/PWM_MOTORS.c ****                                                 PWM_MOTORS_CTRL_CMPMODE1_MASK;
 284:Generated_Source\PSoC5/PWM_MOTORS.c ****                 #else
 285:Generated_Source\PSoC5/PWM_MOTORS.c ****                     uint8 comparemode1masked = comparemode & PWM_MOTORS_CTRL_CMPMODE1_MASK;
 286:Generated_Source\PSoC5/PWM_MOTORS.c ****                 #endif /* (0 != PWM_MOTORS_CTRL_CMPMODE1_SHIFT) */
 287:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 288:Generated_Source\PSoC5/PWM_MOTORS.c ****                 #if(0 != PWM_MOTORS_CTRL_CMPMODE2_SHIFT)
 289:Generated_Source\PSoC5/PWM_MOTORS.c ****                     uint8 comparemode2masked = ((uint8)((uint8)comparemode << PWM_MOTORS_CTRL_CMPMO
 290:Generated_Source\PSoC5/PWM_MOTORS.c ****                                                PWM_MOTORS_CTRL_CMPMODE2_MASK;
 291:Generated_Source\PSoC5/PWM_MOTORS.c ****                 #else
 292:Generated_Source\PSoC5/PWM_MOTORS.c ****                     uint8 comparemode2masked = comparemode & PWM_MOTORS_CTRL_CMPMODE2_MASK;
 293:Generated_Source\PSoC5/PWM_MOTORS.c ****                 #endif /* (0 != PWM_MOTORS_CTRL_CMPMODE2_SHIFT) */
 294:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 295:Generated_Source\PSoC5/PWM_MOTORS.c ****                 /*Clear existing mode */
 296:Generated_Source\PSoC5/PWM_MOTORS.c ****                 PWM_MOTORS_CONTROL &= ((uint8)(~(PWM_MOTORS_CTRL_CMPMODE1_MASK |
 297:Generated_Source\PSoC5/PWM_MOTORS.c ****                                             PWM_MOTORS_CTRL_CMPMODE2_MASK)));
 298:Generated_Source\PSoC5/PWM_MOTORS.c ****                 PWM_MOTORS_CONTROL |= (comparemode1masked | comparemode2masked);
 299:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 300:Generated_Source\PSoC5/PWM_MOTORS.c ****             #else
 301:Generated_Source\PSoC5/PWM_MOTORS.c ****                 uint8 temp = comparemode;
 302:Generated_Source\PSoC5/PWM_MOTORS.c ****             #endif /* (PWM_MOTORS_UsingFixedFunction) */
 303:Generated_Source\PSoC5/PWM_MOTORS.c ****         }
 304:Generated_Source\PSoC5/PWM_MOTORS.c ****     #endif /* PWM_MOTORS_CompareMode1SW */
 305:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 306:Generated_Source\PSoC5/PWM_MOTORS.c **** #else /* UseOneCompareMode */
 307:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 308:Generated_Source\PSoC5/PWM_MOTORS.c ****     #if (PWM_MOTORS_CompareMode1SW)
 309:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 310:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 311:Generated_Source\PSoC5/PWM_MOTORS.c ****         /*******************************************************************************
 312:Generated_Source\PSoC5/PWM_MOTORS.c ****         * Function Name: PWM_MOTORS_SetCompareMode1
 313:Generated_Source\PSoC5/PWM_MOTORS.c ****         ********************************************************************************
 314:Generated_Source\PSoC5/PWM_MOTORS.c ****         *
 315:Generated_Source\PSoC5/PWM_MOTORS.c ****         * Summary:
 316:Generated_Source\PSoC5/PWM_MOTORS.c ****         *  This function writes the Compare Mode for the pwm or pwm1 output
 317:Generated_Source\PSoC5/PWM_MOTORS.c ****         *
 318:Generated_Source\PSoC5/PWM_MOTORS.c ****         * Parameters:
 319:Generated_Source\PSoC5/PWM_MOTORS.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 320:Generated_Source\PSoC5/PWM_MOTORS.c ****         *                defined in the H file as input arguments.
 321:Generated_Source\PSoC5/PWM_MOTORS.c ****         *
 322:Generated_Source\PSoC5/PWM_MOTORS.c ****         * Return:
 323:Generated_Source\PSoC5/PWM_MOTORS.c ****         *  None
 324:Generated_Source\PSoC5/PWM_MOTORS.c ****         *
 325:Generated_Source\PSoC5/PWM_MOTORS.c ****         *******************************************************************************/
 326:Generated_Source\PSoC5/PWM_MOTORS.c ****         void PWM_MOTORS_SetCompareMode1(uint8 comparemode) 
 327:Generated_Source\PSoC5/PWM_MOTORS.c ****         {
 328:Generated_Source\PSoC5/PWM_MOTORS.c ****             #if(0 != PWM_MOTORS_CTRL_CMPMODE1_SHIFT)
 329:Generated_Source\PSoC5/PWM_MOTORS.c ****                 uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_MOTORS_CTRL_CMPMODE1_S
 330:Generated_Source\PSoC5/PWM_MOTORS.c ****                                            PWM_MOTORS_CTRL_CMPMODE1_MASK;
 331:Generated_Source\PSoC5/PWM_MOTORS.c ****             #else
 332:Generated_Source\PSoC5/PWM_MOTORS.c ****                 uint8 comparemodemasked = comparemode & PWM_MOTORS_CTRL_CMPMODE1_MASK;
 333:Generated_Source\PSoC5/PWM_MOTORS.c ****             #endif /* (0 != PWM_MOTORS_CTRL_CMPMODE1_SHIFT) */
 334:Generated_Source\PSoC5/PWM_MOTORS.c **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc2YA5ie.s 			page 11


 335:Generated_Source\PSoC5/PWM_MOTORS.c ****             #if (PWM_MOTORS_UseControl)
 336:Generated_Source\PSoC5/PWM_MOTORS.c ****                 PWM_MOTORS_CONTROL &= ((uint8)(~PWM_MOTORS_CTRL_CMPMODE1_MASK)); /*Clear existing m
 337:Generated_Source\PSoC5/PWM_MOTORS.c ****                 PWM_MOTORS_CONTROL |= comparemodemasked;
 338:Generated_Source\PSoC5/PWM_MOTORS.c ****             #endif /* (PWM_MOTORS_UseControl) */
 339:Generated_Source\PSoC5/PWM_MOTORS.c ****         }
 340:Generated_Source\PSoC5/PWM_MOTORS.c ****     #endif /* PWM_MOTORS_CompareMode1SW */
 341:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 342:Generated_Source\PSoC5/PWM_MOTORS.c **** #if (PWM_MOTORS_CompareMode2SW)
 343:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 344:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 345:Generated_Source\PSoC5/PWM_MOTORS.c ****     /*******************************************************************************
 346:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Function Name: PWM_MOTORS_SetCompareMode2
 347:Generated_Source\PSoC5/PWM_MOTORS.c ****     ********************************************************************************
 348:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 349:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Summary:
 350:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  This function writes the Compare Mode for the pwm or pwm2 output
 351:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 352:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Parameters:
 353:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  comparemode:  The new compare mode for the PWM output. Use the compare types
 354:Generated_Source\PSoC5/PWM_MOTORS.c ****     *                defined in the H file as input arguments.
 355:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 356:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Return:
 357:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  None
 358:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 359:Generated_Source\PSoC5/PWM_MOTORS.c ****     *******************************************************************************/
 360:Generated_Source\PSoC5/PWM_MOTORS.c ****     void PWM_MOTORS_SetCompareMode2(uint8 comparemode) 
 361:Generated_Source\PSoC5/PWM_MOTORS.c ****     {
 362:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 363:Generated_Source\PSoC5/PWM_MOTORS.c ****         #if(0 != PWM_MOTORS_CTRL_CMPMODE2_SHIFT)
 364:Generated_Source\PSoC5/PWM_MOTORS.c ****             uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_MOTORS_CTRL_CMPMODE2_SHIFT
 365:Generated_Source\PSoC5/PWM_MOTORS.c ****                                                  PWM_MOTORS_CTRL_CMPMODE2_MASK;
 366:Generated_Source\PSoC5/PWM_MOTORS.c ****         #else
 367:Generated_Source\PSoC5/PWM_MOTORS.c ****             uint8 comparemodemasked = comparemode & PWM_MOTORS_CTRL_CMPMODE2_MASK;
 368:Generated_Source\PSoC5/PWM_MOTORS.c ****         #endif /* (0 != PWM_MOTORS_CTRL_CMPMODE2_SHIFT) */
 369:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 370:Generated_Source\PSoC5/PWM_MOTORS.c ****         #if (PWM_MOTORS_UseControl)
 371:Generated_Source\PSoC5/PWM_MOTORS.c ****             PWM_MOTORS_CONTROL &= ((uint8)(~PWM_MOTORS_CTRL_CMPMODE2_MASK)); /*Clear existing mode 
 372:Generated_Source\PSoC5/PWM_MOTORS.c ****             PWM_MOTORS_CONTROL |= comparemodemasked;
 373:Generated_Source\PSoC5/PWM_MOTORS.c ****         #endif /* (PWM_MOTORS_UseControl) */
 374:Generated_Source\PSoC5/PWM_MOTORS.c ****     }
 375:Generated_Source\PSoC5/PWM_MOTORS.c ****     #endif /*PWM_MOTORS_CompareMode2SW */
 376:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 377:Generated_Source\PSoC5/PWM_MOTORS.c **** #endif /* UseOneCompareMode */
 378:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 379:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 380:Generated_Source\PSoC5/PWM_MOTORS.c **** #if (!PWM_MOTORS_UsingFixedFunction)
 381:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 382:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 383:Generated_Source\PSoC5/PWM_MOTORS.c ****     /*******************************************************************************
 384:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Function Name: PWM_MOTORS_WriteCounter
 385:Generated_Source\PSoC5/PWM_MOTORS.c ****     ********************************************************************************
 386:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 387:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Summary:
 388:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  Writes a new counter value directly to the counter register. This will be
 389:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  implemented for that currently running period and only that period. This API
 390:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  is valid only for UDB implementation and not available for fixed function
 391:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  PWM implementation.
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc2YA5ie.s 			page 12


 392:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 393:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Parameters:
 394:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  counter:  The period new period counter value.
 395:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 396:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Return:
 397:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  None
 398:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 399:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Side Effects:
 400:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  The PWM Period will be reloaded when a counter value will be a zero
 401:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 402:Generated_Source\PSoC5/PWM_MOTORS.c ****     *******************************************************************************/
 403:Generated_Source\PSoC5/PWM_MOTORS.c ****     void PWM_MOTORS_WriteCounter(uint16 counter) \
 404:Generated_Source\PSoC5/PWM_MOTORS.c ****                                        
 405:Generated_Source\PSoC5/PWM_MOTORS.c ****     {
 237              		.loc 1 405 0
 238              		.cfi_startproc
 239              		@ args = 0, pretend = 0, frame = 8
 240              		@ frame_needed = 1, uses_anonymous_args = 0
 241              		@ link register save eliminated.
 242 0000 80B4     		push	{r7}
 243              		.cfi_def_cfa_offset 4
 244              		.cfi_offset 7, -4
 245 0002 83B0     		sub	sp, sp, #12
 246              		.cfi_def_cfa_offset 16
 247 0004 00AF     		add	r7, sp, #0
 248              		.cfi_def_cfa_register 7
 249 0006 0346     		mov	r3, r0
 250 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 406:Generated_Source\PSoC5/PWM_MOTORS.c ****         CY_SET_REG16(PWM_MOTORS_COUNTER_LSB_PTR, counter);
 251              		.loc 1 406 0
 252 000a 044A     		ldr	r2, .L15
 253 000c FB88     		ldrh	r3, [r7, #6]	@ movhi
 254 000e 1380     		strh	r3, [r2]	@ movhi
 407:Generated_Source\PSoC5/PWM_MOTORS.c ****     }
 255              		.loc 1 407 0
 256 0010 00BF     		nop
 257 0012 0C37     		adds	r7, r7, #12
 258              		.cfi_def_cfa_offset 4
 259 0014 BD46     		mov	sp, r7
 260              		.cfi_def_cfa_register 13
 261              		@ sp needed
 262 0016 80BC     		pop	{r7}
 263              		.cfi_restore 7
 264              		.cfi_def_cfa_offset 0
 265 0018 7047     		bx	lr
 266              	.L16:
 267 001a 00BF     		.align	2
 268              	.L15:
 269 001c 08680040 		.word	1073768456
 270              		.cfi_endproc
 271              	.LFE4:
 272              		.size	PWM_MOTORS_WriteCounter, .-PWM_MOTORS_WriteCounter
 273              		.section	.text.PWM_MOTORS_ReadCounter,"ax",%progbits
 274              		.align	2
 275              		.global	PWM_MOTORS_ReadCounter
 276              		.thumb
 277              		.thumb_func
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc2YA5ie.s 			page 13


 278              		.type	PWM_MOTORS_ReadCounter, %function
 279              	PWM_MOTORS_ReadCounter:
 280              	.LFB5:
 408:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 409:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 410:Generated_Source\PSoC5/PWM_MOTORS.c ****     /*******************************************************************************
 411:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Function Name: PWM_MOTORS_ReadCounter
 412:Generated_Source\PSoC5/PWM_MOTORS.c ****     ********************************************************************************
 413:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 414:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Summary:
 415:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  This function returns the current value of the counter.  It doesn't matter
 416:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  if the counter is enabled or running.
 417:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 418:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Parameters:
 419:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  None
 420:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 421:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Return:
 422:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  The current value of the counter.
 423:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 424:Generated_Source\PSoC5/PWM_MOTORS.c ****     *******************************************************************************/
 425:Generated_Source\PSoC5/PWM_MOTORS.c ****     uint16 PWM_MOTORS_ReadCounter(void) 
 426:Generated_Source\PSoC5/PWM_MOTORS.c ****     {
 281              		.loc 1 426 0
 282              		.cfi_startproc
 283              		@ args = 0, pretend = 0, frame = 0
 284              		@ frame_needed = 1, uses_anonymous_args = 0
 285              		@ link register save eliminated.
 286 0000 80B4     		push	{r7}
 287              		.cfi_def_cfa_offset 4
 288              		.cfi_offset 7, -4
 289 0002 00AF     		add	r7, sp, #0
 290              		.cfi_def_cfa_register 7
 427:Generated_Source\PSoC5/PWM_MOTORS.c ****         /* Force capture by reading Accumulator */
 428:Generated_Source\PSoC5/PWM_MOTORS.c ****         /* Must first do a software capture to be able to read the counter */
 429:Generated_Source\PSoC5/PWM_MOTORS.c ****         /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 430:Generated_Source\PSoC5/PWM_MOTORS.c ****           (void)CY_GET_REG8(PWM_MOTORS_COUNTERCAP_LSB_PTR_8BIT);
 291              		.loc 1 430 0
 292 0004 044B     		ldr	r3, .L19
 293 0006 1B78     		ldrb	r3, [r3]
 431:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 432:Generated_Source\PSoC5/PWM_MOTORS.c ****         /* Read the data from the FIFO */
 433:Generated_Source\PSoC5/PWM_MOTORS.c ****         return (CY_GET_REG16(PWM_MOTORS_CAPTURE_LSB_PTR));
 294              		.loc 1 433 0
 295 0008 044B     		ldr	r3, .L19+4
 296 000a 1B88     		ldrh	r3, [r3]	@ movhi
 297 000c 9BB2     		uxth	r3, r3
 434:Generated_Source\PSoC5/PWM_MOTORS.c ****     }
 298              		.loc 1 434 0
 299 000e 1846     		mov	r0, r3
 300 0010 BD46     		mov	sp, r7
 301              		.cfi_def_cfa_register 13
 302              		@ sp needed
 303 0012 80BC     		pop	{r7}
 304              		.cfi_restore 7
 305              		.cfi_def_cfa_offset 0
 306 0014 7047     		bx	lr
 307              	.L20:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc2YA5ie.s 			page 14


 308 0016 00BF     		.align	2
 309              	.L19:
 310 0018 14640040 		.word	1073767444
 311 001c A8680040 		.word	1073768616
 312              		.cfi_endproc
 313              	.LFE5:
 314              		.size	PWM_MOTORS_ReadCounter, .-PWM_MOTORS_ReadCounter
 315              		.section	.text.PWM_MOTORS_WritePeriod,"ax",%progbits
 316              		.align	2
 317              		.global	PWM_MOTORS_WritePeriod
 318              		.thumb
 319              		.thumb_func
 320              		.type	PWM_MOTORS_WritePeriod, %function
 321              	PWM_MOTORS_WritePeriod:
 322              	.LFB6:
 435:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 436:Generated_Source\PSoC5/PWM_MOTORS.c ****     #if (PWM_MOTORS_UseStatus)
 437:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 438:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 439:Generated_Source\PSoC5/PWM_MOTORS.c ****         /*******************************************************************************
 440:Generated_Source\PSoC5/PWM_MOTORS.c ****         * Function Name: PWM_MOTORS_ClearFIFO
 441:Generated_Source\PSoC5/PWM_MOTORS.c ****         ********************************************************************************
 442:Generated_Source\PSoC5/PWM_MOTORS.c ****         *
 443:Generated_Source\PSoC5/PWM_MOTORS.c ****         * Summary:
 444:Generated_Source\PSoC5/PWM_MOTORS.c ****         *  This function clears all capture data from the capture FIFO
 445:Generated_Source\PSoC5/PWM_MOTORS.c ****         *
 446:Generated_Source\PSoC5/PWM_MOTORS.c ****         * Parameters:
 447:Generated_Source\PSoC5/PWM_MOTORS.c ****         *  None
 448:Generated_Source\PSoC5/PWM_MOTORS.c ****         *
 449:Generated_Source\PSoC5/PWM_MOTORS.c ****         * Return:
 450:Generated_Source\PSoC5/PWM_MOTORS.c ****         *  None
 451:Generated_Source\PSoC5/PWM_MOTORS.c ****         *
 452:Generated_Source\PSoC5/PWM_MOTORS.c ****         *******************************************************************************/
 453:Generated_Source\PSoC5/PWM_MOTORS.c ****         void PWM_MOTORS_ClearFIFO(void) 
 454:Generated_Source\PSoC5/PWM_MOTORS.c ****         {
 455:Generated_Source\PSoC5/PWM_MOTORS.c ****             while(0u != (PWM_MOTORS_ReadStatusRegister() & PWM_MOTORS_STATUS_FIFONEMPTY))
 456:Generated_Source\PSoC5/PWM_MOTORS.c ****             {
 457:Generated_Source\PSoC5/PWM_MOTORS.c ****                 (void)PWM_MOTORS_ReadCapture();
 458:Generated_Source\PSoC5/PWM_MOTORS.c ****             }
 459:Generated_Source\PSoC5/PWM_MOTORS.c ****         }
 460:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 461:Generated_Source\PSoC5/PWM_MOTORS.c ****     #endif /* PWM_MOTORS_UseStatus */
 462:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 463:Generated_Source\PSoC5/PWM_MOTORS.c **** #endif /* !PWM_MOTORS_UsingFixedFunction */
 464:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 465:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 466:Generated_Source\PSoC5/PWM_MOTORS.c **** /*******************************************************************************
 467:Generated_Source\PSoC5/PWM_MOTORS.c **** * Function Name: PWM_MOTORS_WritePeriod
 468:Generated_Source\PSoC5/PWM_MOTORS.c **** ********************************************************************************
 469:Generated_Source\PSoC5/PWM_MOTORS.c **** *
 470:Generated_Source\PSoC5/PWM_MOTORS.c **** * Summary:
 471:Generated_Source\PSoC5/PWM_MOTORS.c **** *  This function is used to change the period of the counter.  The new period
 472:Generated_Source\PSoC5/PWM_MOTORS.c **** *  will be loaded the next time terminal count is detected.
 473:Generated_Source\PSoC5/PWM_MOTORS.c **** *
 474:Generated_Source\PSoC5/PWM_MOTORS.c **** * Parameters:
 475:Generated_Source\PSoC5/PWM_MOTORS.c **** *  period:  Period value. May be between 1 and (2^Resolution)-1.  A value of 0
 476:Generated_Source\PSoC5/PWM_MOTORS.c **** *           will result in the counter remaining at zero.
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc2YA5ie.s 			page 15


 477:Generated_Source\PSoC5/PWM_MOTORS.c **** *
 478:Generated_Source\PSoC5/PWM_MOTORS.c **** * Return:
 479:Generated_Source\PSoC5/PWM_MOTORS.c **** *  None
 480:Generated_Source\PSoC5/PWM_MOTORS.c **** *
 481:Generated_Source\PSoC5/PWM_MOTORS.c **** *******************************************************************************/
 482:Generated_Source\PSoC5/PWM_MOTORS.c **** void PWM_MOTORS_WritePeriod(uint16 period) 
 483:Generated_Source\PSoC5/PWM_MOTORS.c **** {
 323              		.loc 1 483 0
 324              		.cfi_startproc
 325              		@ args = 0, pretend = 0, frame = 8
 326              		@ frame_needed = 1, uses_anonymous_args = 0
 327              		@ link register save eliminated.
 328 0000 80B4     		push	{r7}
 329              		.cfi_def_cfa_offset 4
 330              		.cfi_offset 7, -4
 331 0002 83B0     		sub	sp, sp, #12
 332              		.cfi_def_cfa_offset 16
 333 0004 00AF     		add	r7, sp, #0
 334              		.cfi_def_cfa_register 7
 335 0006 0346     		mov	r3, r0
 336 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 484:Generated_Source\PSoC5/PWM_MOTORS.c ****     #if(PWM_MOTORS_UsingFixedFunction)
 485:Generated_Source\PSoC5/PWM_MOTORS.c ****         CY_SET_REG16(PWM_MOTORS_PERIOD_LSB_PTR, (uint16)period);
 486:Generated_Source\PSoC5/PWM_MOTORS.c ****     #else
 487:Generated_Source\PSoC5/PWM_MOTORS.c ****         CY_SET_REG16(PWM_MOTORS_PERIOD_LSB_PTR, period);
 337              		.loc 1 487 0
 338 000a 044A     		ldr	r2, .L22
 339 000c FB88     		ldrh	r3, [r7, #6]	@ movhi
 340 000e 1380     		strh	r3, [r2]	@ movhi
 488:Generated_Source\PSoC5/PWM_MOTORS.c ****     #endif /* (PWM_MOTORS_UsingFixedFunction) */
 489:Generated_Source\PSoC5/PWM_MOTORS.c **** }
 341              		.loc 1 489 0
 342 0010 00BF     		nop
 343 0012 0C37     		adds	r7, r7, #12
 344              		.cfi_def_cfa_offset 4
 345 0014 BD46     		mov	sp, r7
 346              		.cfi_def_cfa_register 13
 347              		@ sp needed
 348 0016 80BC     		pop	{r7}
 349              		.cfi_restore 7
 350              		.cfi_def_cfa_offset 0
 351 0018 7047     		bx	lr
 352              	.L23:
 353 001a 00BF     		.align	2
 354              	.L22:
 355 001c 88680040 		.word	1073768584
 356              		.cfi_endproc
 357              	.LFE6:
 358              		.size	PWM_MOTORS_WritePeriod, .-PWM_MOTORS_WritePeriod
 359              		.section	.text.PWM_MOTORS_WriteCompare1,"ax",%progbits
 360              		.align	2
 361              		.global	PWM_MOTORS_WriteCompare1
 362              		.thumb
 363              		.thumb_func
 364              		.type	PWM_MOTORS_WriteCompare1, %function
 365              	PWM_MOTORS_WriteCompare1:
 366              	.LFB7:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc2YA5ie.s 			page 16


 490:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 491:Generated_Source\PSoC5/PWM_MOTORS.c **** #if (PWM_MOTORS_UseOneCompareMode)
 492:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 493:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 494:Generated_Source\PSoC5/PWM_MOTORS.c ****     /*******************************************************************************
 495:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Function Name: PWM_MOTORS_WriteCompare
 496:Generated_Source\PSoC5/PWM_MOTORS.c ****     ********************************************************************************
 497:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 498:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Summary:
 499:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  This funtion is used to change the compare1 value when the PWM is in Dither
 500:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  mode. The compare output will reflect the new value on the next UDB clock.
 501:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  The compare output will be driven high when the present counter value is
 502:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  compared to the compare value based on the compare mode defined in
 503:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  Dither Mode.
 504:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 505:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Parameters:
 506:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  compare:  New compare value.
 507:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 508:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Return:
 509:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  None
 510:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 511:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Side Effects:
 512:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  This function is only available if the PWM mode parameter is set to
 513:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  Dither Mode, Center Aligned Mode or One Output Mode
 514:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 515:Generated_Source\PSoC5/PWM_MOTORS.c ****     *******************************************************************************/
 516:Generated_Source\PSoC5/PWM_MOTORS.c ****     void PWM_MOTORS_WriteCompare(uint16 compare) \
 517:Generated_Source\PSoC5/PWM_MOTORS.c ****                                        
 518:Generated_Source\PSoC5/PWM_MOTORS.c ****     {
 519:Generated_Source\PSoC5/PWM_MOTORS.c ****         #if(PWM_MOTORS_UsingFixedFunction)
 520:Generated_Source\PSoC5/PWM_MOTORS.c ****             CY_SET_REG16(PWM_MOTORS_COMPARE1_LSB_PTR, (uint16)compare);
 521:Generated_Source\PSoC5/PWM_MOTORS.c ****         #else
 522:Generated_Source\PSoC5/PWM_MOTORS.c ****             CY_SET_REG16(PWM_MOTORS_COMPARE1_LSB_PTR, compare);
 523:Generated_Source\PSoC5/PWM_MOTORS.c ****         #endif /* (PWM_MOTORS_UsingFixedFunction) */
 524:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 525:Generated_Source\PSoC5/PWM_MOTORS.c ****         #if (PWM_MOTORS_PWMMode == PWM_MOTORS__B_PWM__DITHER)
 526:Generated_Source\PSoC5/PWM_MOTORS.c ****             #if(PWM_MOTORS_UsingFixedFunction)
 527:Generated_Source\PSoC5/PWM_MOTORS.c ****                 CY_SET_REG16(PWM_MOTORS_COMPARE2_LSB_PTR, (uint16)(compare + 1u));
 528:Generated_Source\PSoC5/PWM_MOTORS.c ****             #else
 529:Generated_Source\PSoC5/PWM_MOTORS.c ****                 CY_SET_REG16(PWM_MOTORS_COMPARE2_LSB_PTR, (compare + 1u));
 530:Generated_Source\PSoC5/PWM_MOTORS.c ****             #endif /* (PWM_MOTORS_UsingFixedFunction) */
 531:Generated_Source\PSoC5/PWM_MOTORS.c ****         #endif /* (PWM_MOTORS_PWMMode == PWM_MOTORS__B_PWM__DITHER) */
 532:Generated_Source\PSoC5/PWM_MOTORS.c ****     }
 533:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 534:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 535:Generated_Source\PSoC5/PWM_MOTORS.c **** #else
 536:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 537:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 538:Generated_Source\PSoC5/PWM_MOTORS.c ****     /*******************************************************************************
 539:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Function Name: PWM_MOTORS_WriteCompare1
 540:Generated_Source\PSoC5/PWM_MOTORS.c ****     ********************************************************************************
 541:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 542:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Summary:
 543:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  This funtion is used to change the compare1 value.  The compare output will
 544:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  reflect the new value on the next UDB clock.  The compare output will be
 545:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  driven high when the present counter value is less than or less than or
 546:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  equal to the compare register, depending on the mode.
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc2YA5ie.s 			page 17


 547:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 548:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Parameters:
 549:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  compare:  New compare value.
 550:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 551:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Return:
 552:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  None
 553:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 554:Generated_Source\PSoC5/PWM_MOTORS.c ****     *******************************************************************************/
 555:Generated_Source\PSoC5/PWM_MOTORS.c ****     void PWM_MOTORS_WriteCompare1(uint16 compare) \
 556:Generated_Source\PSoC5/PWM_MOTORS.c ****                                         
 557:Generated_Source\PSoC5/PWM_MOTORS.c ****     {
 367              		.loc 1 557 0
 368              		.cfi_startproc
 369              		@ args = 0, pretend = 0, frame = 8
 370              		@ frame_needed = 1, uses_anonymous_args = 0
 371              		@ link register save eliminated.
 372 0000 80B4     		push	{r7}
 373              		.cfi_def_cfa_offset 4
 374              		.cfi_offset 7, -4
 375 0002 83B0     		sub	sp, sp, #12
 376              		.cfi_def_cfa_offset 16
 377 0004 00AF     		add	r7, sp, #0
 378              		.cfi_def_cfa_register 7
 379 0006 0346     		mov	r3, r0
 380 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 558:Generated_Source\PSoC5/PWM_MOTORS.c ****         #if(PWM_MOTORS_UsingFixedFunction)
 559:Generated_Source\PSoC5/PWM_MOTORS.c ****             CY_SET_REG16(PWM_MOTORS_COMPARE1_LSB_PTR, (uint16)compare);
 560:Generated_Source\PSoC5/PWM_MOTORS.c ****         #else
 561:Generated_Source\PSoC5/PWM_MOTORS.c ****             CY_SET_REG16(PWM_MOTORS_COMPARE1_LSB_PTR, compare);
 381              		.loc 1 561 0
 382 000a 044A     		ldr	r2, .L25
 383 000c FB88     		ldrh	r3, [r7, #6]	@ movhi
 384 000e 1380     		strh	r3, [r2]	@ movhi
 562:Generated_Source\PSoC5/PWM_MOTORS.c ****         #endif /* (PWM_MOTORS_UsingFixedFunction) */
 563:Generated_Source\PSoC5/PWM_MOTORS.c ****     }
 385              		.loc 1 563 0
 386 0010 00BF     		nop
 387 0012 0C37     		adds	r7, r7, #12
 388              		.cfi_def_cfa_offset 4
 389 0014 BD46     		mov	sp, r7
 390              		.cfi_def_cfa_register 13
 391              		@ sp needed
 392 0016 80BC     		pop	{r7}
 393              		.cfi_restore 7
 394              		.cfi_def_cfa_offset 0
 395 0018 7047     		bx	lr
 396              	.L26:
 397 001a 00BF     		.align	2
 398              	.L25:
 399 001c 48680040 		.word	1073768520
 400              		.cfi_endproc
 401              	.LFE7:
 402              		.size	PWM_MOTORS_WriteCompare1, .-PWM_MOTORS_WriteCompare1
 403              		.section	.text.PWM_MOTORS_WriteCompare2,"ax",%progbits
 404              		.align	2
 405              		.global	PWM_MOTORS_WriteCompare2
 406              		.thumb
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc2YA5ie.s 			page 18


 407              		.thumb_func
 408              		.type	PWM_MOTORS_WriteCompare2, %function
 409              	PWM_MOTORS_WriteCompare2:
 410              	.LFB8:
 564:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 565:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 566:Generated_Source\PSoC5/PWM_MOTORS.c ****     /*******************************************************************************
 567:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Function Name: PWM_MOTORS_WriteCompare2
 568:Generated_Source\PSoC5/PWM_MOTORS.c ****     ********************************************************************************
 569:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 570:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Summary:
 571:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  This funtion is used to change the compare value, for compare1 output.
 572:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  The compare output will reflect the new value on the next UDB clock.
 573:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  The compare output will be driven high when the present counter value is
 574:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  less than or less than or equal to the compare register, depending on the
 575:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  mode.
 576:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 577:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Parameters:
 578:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  compare:  New compare value.
 579:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 580:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Return:
 581:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  None
 582:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 583:Generated_Source\PSoC5/PWM_MOTORS.c ****     *******************************************************************************/
 584:Generated_Source\PSoC5/PWM_MOTORS.c ****     void PWM_MOTORS_WriteCompare2(uint16 compare) \
 585:Generated_Source\PSoC5/PWM_MOTORS.c ****                                         
 586:Generated_Source\PSoC5/PWM_MOTORS.c ****     {
 411              		.loc 1 586 0
 412              		.cfi_startproc
 413              		@ args = 0, pretend = 0, frame = 8
 414              		@ frame_needed = 1, uses_anonymous_args = 0
 415              		@ link register save eliminated.
 416 0000 80B4     		push	{r7}
 417              		.cfi_def_cfa_offset 4
 418              		.cfi_offset 7, -4
 419 0002 83B0     		sub	sp, sp, #12
 420              		.cfi_def_cfa_offset 16
 421 0004 00AF     		add	r7, sp, #0
 422              		.cfi_def_cfa_register 7
 423 0006 0346     		mov	r3, r0
 424 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 587:Generated_Source\PSoC5/PWM_MOTORS.c ****         #if(PWM_MOTORS_UsingFixedFunction)
 588:Generated_Source\PSoC5/PWM_MOTORS.c ****             CY_SET_REG16(PWM_MOTORS_COMPARE2_LSB_PTR, compare);
 589:Generated_Source\PSoC5/PWM_MOTORS.c ****         #else
 590:Generated_Source\PSoC5/PWM_MOTORS.c ****             CY_SET_REG16(PWM_MOTORS_COMPARE2_LSB_PTR, compare);
 425              		.loc 1 590 0
 426 000a 044A     		ldr	r2, .L28
 427 000c FB88     		ldrh	r3, [r7, #6]	@ movhi
 428 000e 1380     		strh	r3, [r2]	@ movhi
 591:Generated_Source\PSoC5/PWM_MOTORS.c ****         #endif /* (PWM_MOTORS_UsingFixedFunction) */
 592:Generated_Source\PSoC5/PWM_MOTORS.c ****     }
 429              		.loc 1 592 0
 430 0010 00BF     		nop
 431 0012 0C37     		adds	r7, r7, #12
 432              		.cfi_def_cfa_offset 4
 433 0014 BD46     		mov	sp, r7
 434              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc2YA5ie.s 			page 19


 435              		@ sp needed
 436 0016 80BC     		pop	{r7}
 437              		.cfi_restore 7
 438              		.cfi_def_cfa_offset 0
 439 0018 7047     		bx	lr
 440              	.L29:
 441 001a 00BF     		.align	2
 442              	.L28:
 443 001c 68680040 		.word	1073768552
 444              		.cfi_endproc
 445              	.LFE8:
 446              		.size	PWM_MOTORS_WriteCompare2, .-PWM_MOTORS_WriteCompare2
 447              		.section	.text.PWM_MOTORS_ReadControlRegister,"ax",%progbits
 448              		.align	2
 449              		.global	PWM_MOTORS_ReadControlRegister
 450              		.thumb
 451              		.thumb_func
 452              		.type	PWM_MOTORS_ReadControlRegister, %function
 453              	PWM_MOTORS_ReadControlRegister:
 454              	.LFB9:
 593:Generated_Source\PSoC5/PWM_MOTORS.c **** #endif /* UseOneCompareMode */
 594:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 595:Generated_Source\PSoC5/PWM_MOTORS.c **** #if (PWM_MOTORS_DeadBandUsed)
 596:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 597:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 598:Generated_Source\PSoC5/PWM_MOTORS.c ****     /*******************************************************************************
 599:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Function Name: PWM_MOTORS_WriteDeadTime
 600:Generated_Source\PSoC5/PWM_MOTORS.c ****     ********************************************************************************
 601:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 602:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Summary:
 603:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  This function writes the dead-band counts to the corresponding register
 604:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 605:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Parameters:
 606:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  deadtime:  Number of counts for dead time
 607:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 608:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Return:
 609:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  None
 610:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 611:Generated_Source\PSoC5/PWM_MOTORS.c ****     *******************************************************************************/
 612:Generated_Source\PSoC5/PWM_MOTORS.c ****     void PWM_MOTORS_WriteDeadTime(uint8 deadtime) 
 613:Generated_Source\PSoC5/PWM_MOTORS.c ****     {
 614:Generated_Source\PSoC5/PWM_MOTORS.c ****         /* If using the Dead Band 1-255 mode then just write the register */
 615:Generated_Source\PSoC5/PWM_MOTORS.c ****         #if(!PWM_MOTORS_DeadBand2_4)
 616:Generated_Source\PSoC5/PWM_MOTORS.c ****             CY_SET_REG8(PWM_MOTORS_DEADBAND_COUNT_PTR, deadtime);
 617:Generated_Source\PSoC5/PWM_MOTORS.c ****         #else
 618:Generated_Source\PSoC5/PWM_MOTORS.c ****             /* Otherwise the data has to be masked and offset */
 619:Generated_Source\PSoC5/PWM_MOTORS.c ****             /* Clear existing data */
 620:Generated_Source\PSoC5/PWM_MOTORS.c ****             PWM_MOTORS_DEADBAND_COUNT &= ((uint8)(~PWM_MOTORS_DEADBAND_COUNT_MASK));
 621:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 622:Generated_Source\PSoC5/PWM_MOTORS.c ****             /* Set new dead time */
 623:Generated_Source\PSoC5/PWM_MOTORS.c ****             #if(PWM_MOTORS_DEADBAND_COUNT_SHIFT)
 624:Generated_Source\PSoC5/PWM_MOTORS.c ****                 PWM_MOTORS_DEADBAND_COUNT |= ((uint8)((uint8)deadtime << PWM_MOTORS_DEADBAND_COUNT_
 625:Generated_Source\PSoC5/PWM_MOTORS.c ****                                                     PWM_MOTORS_DEADBAND_COUNT_MASK;
 626:Generated_Source\PSoC5/PWM_MOTORS.c ****             #else
 627:Generated_Source\PSoC5/PWM_MOTORS.c ****                 PWM_MOTORS_DEADBAND_COUNT |= deadtime & PWM_MOTORS_DEADBAND_COUNT_MASK;
 628:Generated_Source\PSoC5/PWM_MOTORS.c ****             #endif /* (PWM_MOTORS_DEADBAND_COUNT_SHIFT) */
 629:Generated_Source\PSoC5/PWM_MOTORS.c **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc2YA5ie.s 			page 20


 630:Generated_Source\PSoC5/PWM_MOTORS.c ****         #endif /* (!PWM_MOTORS_DeadBand2_4) */
 631:Generated_Source\PSoC5/PWM_MOTORS.c ****     }
 632:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 633:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 634:Generated_Source\PSoC5/PWM_MOTORS.c ****     /*******************************************************************************
 635:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Function Name: PWM_MOTORS_ReadDeadTime
 636:Generated_Source\PSoC5/PWM_MOTORS.c ****     ********************************************************************************
 637:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 638:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Summary:
 639:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  This function reads the dead-band counts from the corresponding register
 640:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 641:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Parameters:
 642:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  None
 643:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 644:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Return:
 645:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  Dead Band Counts
 646:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 647:Generated_Source\PSoC5/PWM_MOTORS.c ****     *******************************************************************************/
 648:Generated_Source\PSoC5/PWM_MOTORS.c ****     uint8 PWM_MOTORS_ReadDeadTime(void) 
 649:Generated_Source\PSoC5/PWM_MOTORS.c ****     {
 650:Generated_Source\PSoC5/PWM_MOTORS.c ****         /* If using the Dead Band 1-255 mode then just read the register */
 651:Generated_Source\PSoC5/PWM_MOTORS.c ****         #if(!PWM_MOTORS_DeadBand2_4)
 652:Generated_Source\PSoC5/PWM_MOTORS.c ****             return (CY_GET_REG8(PWM_MOTORS_DEADBAND_COUNT_PTR));
 653:Generated_Source\PSoC5/PWM_MOTORS.c ****         #else
 654:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 655:Generated_Source\PSoC5/PWM_MOTORS.c ****             /* Otherwise the data has to be masked and offset */
 656:Generated_Source\PSoC5/PWM_MOTORS.c ****             #if(PWM_MOTORS_DEADBAND_COUNT_SHIFT)
 657:Generated_Source\PSoC5/PWM_MOTORS.c ****                 return ((uint8)(((uint8)(PWM_MOTORS_DEADBAND_COUNT & PWM_MOTORS_DEADBAND_COUNT_MASK
 658:Generated_Source\PSoC5/PWM_MOTORS.c ****                                                                            PWM_MOTORS_DEADBAND_COUN
 659:Generated_Source\PSoC5/PWM_MOTORS.c ****             #else
 660:Generated_Source\PSoC5/PWM_MOTORS.c ****                 return (PWM_MOTORS_DEADBAND_COUNT & PWM_MOTORS_DEADBAND_COUNT_MASK);
 661:Generated_Source\PSoC5/PWM_MOTORS.c ****             #endif /* (PWM_MOTORS_DEADBAND_COUNT_SHIFT) */
 662:Generated_Source\PSoC5/PWM_MOTORS.c ****         #endif /* (!PWM_MOTORS_DeadBand2_4) */
 663:Generated_Source\PSoC5/PWM_MOTORS.c ****     }
 664:Generated_Source\PSoC5/PWM_MOTORS.c **** #endif /* DeadBandUsed */
 665:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 666:Generated_Source\PSoC5/PWM_MOTORS.c **** #if (PWM_MOTORS_UseStatus || PWM_MOTORS_UsingFixedFunction)
 667:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 668:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 669:Generated_Source\PSoC5/PWM_MOTORS.c ****     /*******************************************************************************
 670:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Function Name: PWM_MOTORS_SetInterruptMode
 671:Generated_Source\PSoC5/PWM_MOTORS.c ****     ********************************************************************************
 672:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 673:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Summary:
 674:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  This function configures the interrupts mask control of theinterrupt
 675:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  source status register.
 676:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 677:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Parameters:
 678:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  uint8 interruptMode: Bit field containing the interrupt sources enabled
 679:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 680:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Return:
 681:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  None
 682:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 683:Generated_Source\PSoC5/PWM_MOTORS.c ****     *******************************************************************************/
 684:Generated_Source\PSoC5/PWM_MOTORS.c ****     void PWM_MOTORS_SetInterruptMode(uint8 interruptMode) 
 685:Generated_Source\PSoC5/PWM_MOTORS.c ****     {
 686:Generated_Source\PSoC5/PWM_MOTORS.c ****         CY_SET_REG8(PWM_MOTORS_STATUS_MASK_PTR, interruptMode);
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc2YA5ie.s 			page 21


 687:Generated_Source\PSoC5/PWM_MOTORS.c ****     }
 688:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 689:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 690:Generated_Source\PSoC5/PWM_MOTORS.c ****     /*******************************************************************************
 691:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Function Name: PWM_MOTORS_ReadStatusRegister
 692:Generated_Source\PSoC5/PWM_MOTORS.c ****     ********************************************************************************
 693:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 694:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Summary:
 695:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  This function returns the current state of the status register.
 696:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 697:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Parameters:
 698:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  None
 699:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 700:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Return:
 701:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  uint8 : Current status register value. The status register bits are:
 702:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  [7:6] : Unused(0)
 703:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  [5]   : Kill event output
 704:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  [4]   : FIFO not empty
 705:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  [3]   : FIFO full
 706:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  [2]   : Terminal count
 707:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  [1]   : Compare output 2
 708:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  [0]   : Compare output 1
 709:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 710:Generated_Source\PSoC5/PWM_MOTORS.c ****     *******************************************************************************/
 711:Generated_Source\PSoC5/PWM_MOTORS.c ****     uint8 PWM_MOTORS_ReadStatusRegister(void) 
 712:Generated_Source\PSoC5/PWM_MOTORS.c ****     {
 713:Generated_Source\PSoC5/PWM_MOTORS.c ****         return (CY_GET_REG8(PWM_MOTORS_STATUS_PTR));
 714:Generated_Source\PSoC5/PWM_MOTORS.c ****     }
 715:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 716:Generated_Source\PSoC5/PWM_MOTORS.c **** #endif /* (PWM_MOTORS_UseStatus || PWM_MOTORS_UsingFixedFunction) */
 717:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 718:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 719:Generated_Source\PSoC5/PWM_MOTORS.c **** #if (PWM_MOTORS_UseControl)
 720:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 721:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 722:Generated_Source\PSoC5/PWM_MOTORS.c ****     /*******************************************************************************
 723:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Function Name: PWM_MOTORS_ReadControlRegister
 724:Generated_Source\PSoC5/PWM_MOTORS.c ****     ********************************************************************************
 725:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 726:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Summary:
 727:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  Returns the current state of the control register. This API is available
 728:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  only if the control register is not removed.
 729:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 730:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Parameters:
 731:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  None
 732:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 733:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Return:
 734:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  uint8 : Current control register value
 735:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 736:Generated_Source\PSoC5/PWM_MOTORS.c ****     *******************************************************************************/
 737:Generated_Source\PSoC5/PWM_MOTORS.c ****     uint8 PWM_MOTORS_ReadControlRegister(void) 
 738:Generated_Source\PSoC5/PWM_MOTORS.c ****     {
 455              		.loc 1 738 0
 456              		.cfi_startproc
 457              		@ args = 0, pretend = 0, frame = 8
 458              		@ frame_needed = 1, uses_anonymous_args = 0
 459              		@ link register save eliminated.
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc2YA5ie.s 			page 22


 460 0000 80B4     		push	{r7}
 461              		.cfi_def_cfa_offset 4
 462              		.cfi_offset 7, -4
 463 0002 83B0     		sub	sp, sp, #12
 464              		.cfi_def_cfa_offset 16
 465 0004 00AF     		add	r7, sp, #0
 466              		.cfi_def_cfa_register 7
 739:Generated_Source\PSoC5/PWM_MOTORS.c ****         uint8 result;
 740:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 741:Generated_Source\PSoC5/PWM_MOTORS.c ****         result = CY_GET_REG8(PWM_MOTORS_CONTROL_PTR);
 467              		.loc 1 741 0
 468 0006 044B     		ldr	r3, .L32
 469 0008 1B78     		ldrb	r3, [r3]
 470 000a FB71     		strb	r3, [r7, #7]
 742:Generated_Source\PSoC5/PWM_MOTORS.c ****         return (result);
 471              		.loc 1 742 0
 472 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 743:Generated_Source\PSoC5/PWM_MOTORS.c ****     }
 473              		.loc 1 743 0
 474 000e 1846     		mov	r0, r3
 475 0010 0C37     		adds	r7, r7, #12
 476              		.cfi_def_cfa_offset 4
 477 0012 BD46     		mov	sp, r7
 478              		.cfi_def_cfa_register 13
 479              		@ sp needed
 480 0014 80BC     		pop	{r7}
 481              		.cfi_restore 7
 482              		.cfi_def_cfa_offset 0
 483 0016 7047     		bx	lr
 484              	.L33:
 485              		.align	2
 486              	.L32:
 487 0018 73640040 		.word	1073767539
 488              		.cfi_endproc
 489              	.LFE9:
 490              		.size	PWM_MOTORS_ReadControlRegister, .-PWM_MOTORS_ReadControlRegister
 491              		.section	.text.PWM_MOTORS_WriteControlRegister,"ax",%progbits
 492              		.align	2
 493              		.global	PWM_MOTORS_WriteControlRegister
 494              		.thumb
 495              		.thumb_func
 496              		.type	PWM_MOTORS_WriteControlRegister, %function
 497              	PWM_MOTORS_WriteControlRegister:
 498              	.LFB10:
 744:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 745:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 746:Generated_Source\PSoC5/PWM_MOTORS.c ****     /*******************************************************************************
 747:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Function Name: PWM_MOTORS_WriteControlRegister
 748:Generated_Source\PSoC5/PWM_MOTORS.c ****     ********************************************************************************
 749:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 750:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Summary:
 751:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  Sets the bit field of the control register. This API is available only if
 752:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  the control register is not removed.
 753:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 754:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Parameters:
 755:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  uint8 control: Control register bit field, The status register bits are:
 756:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  [7]   : PWM Enable
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc2YA5ie.s 			page 23


 757:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  [6]   : Reset
 758:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  [5:3] : Compare Mode2
 759:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  [2:0] : Compare Mode2
 760:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 761:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Return:
 762:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  None
 763:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 764:Generated_Source\PSoC5/PWM_MOTORS.c ****     *******************************************************************************/
 765:Generated_Source\PSoC5/PWM_MOTORS.c ****     void PWM_MOTORS_WriteControlRegister(uint8 control) 
 766:Generated_Source\PSoC5/PWM_MOTORS.c ****     {
 499              		.loc 1 766 0
 500              		.cfi_startproc
 501              		@ args = 0, pretend = 0, frame = 8
 502              		@ frame_needed = 1, uses_anonymous_args = 0
 503              		@ link register save eliminated.
 504 0000 80B4     		push	{r7}
 505              		.cfi_def_cfa_offset 4
 506              		.cfi_offset 7, -4
 507 0002 83B0     		sub	sp, sp, #12
 508              		.cfi_def_cfa_offset 16
 509 0004 00AF     		add	r7, sp, #0
 510              		.cfi_def_cfa_register 7
 511 0006 0346     		mov	r3, r0
 512 0008 FB71     		strb	r3, [r7, #7]
 767:Generated_Source\PSoC5/PWM_MOTORS.c ****         CY_SET_REG8(PWM_MOTORS_CONTROL_PTR, control);
 513              		.loc 1 767 0
 514 000a 044A     		ldr	r2, .L35
 515 000c FB79     		ldrb	r3, [r7, #7]
 516 000e 1370     		strb	r3, [r2]
 768:Generated_Source\PSoC5/PWM_MOTORS.c ****     }
 517              		.loc 1 768 0
 518 0010 00BF     		nop
 519 0012 0C37     		adds	r7, r7, #12
 520              		.cfi_def_cfa_offset 4
 521 0014 BD46     		mov	sp, r7
 522              		.cfi_def_cfa_register 13
 523              		@ sp needed
 524 0016 80BC     		pop	{r7}
 525              		.cfi_restore 7
 526              		.cfi_def_cfa_offset 0
 527 0018 7047     		bx	lr
 528              	.L36:
 529 001a 00BF     		.align	2
 530              	.L35:
 531 001c 73640040 		.word	1073767539
 532              		.cfi_endproc
 533              	.LFE10:
 534              		.size	PWM_MOTORS_WriteControlRegister, .-PWM_MOTORS_WriteControlRegister
 535              		.section	.text.PWM_MOTORS_ReadCapture,"ax",%progbits
 536              		.align	2
 537              		.global	PWM_MOTORS_ReadCapture
 538              		.thumb
 539              		.thumb_func
 540              		.type	PWM_MOTORS_ReadCapture, %function
 541              	PWM_MOTORS_ReadCapture:
 542              	.LFB11:
 769:Generated_Source\PSoC5/PWM_MOTORS.c **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc2YA5ie.s 			page 24


 770:Generated_Source\PSoC5/PWM_MOTORS.c **** #endif /* (PWM_MOTORS_UseControl) */
 771:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 772:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 773:Generated_Source\PSoC5/PWM_MOTORS.c **** #if (!PWM_MOTORS_UsingFixedFunction)
 774:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 775:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 776:Generated_Source\PSoC5/PWM_MOTORS.c ****     /*******************************************************************************
 777:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Function Name: PWM_MOTORS_ReadCapture
 778:Generated_Source\PSoC5/PWM_MOTORS.c ****     ********************************************************************************
 779:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 780:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Summary:
 781:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  Reads the capture value from the capture FIFO.
 782:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 783:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Parameters:
 784:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  None
 785:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 786:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Return:
 787:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  uint8/uint16: The current capture value
 788:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 789:Generated_Source\PSoC5/PWM_MOTORS.c ****     *******************************************************************************/
 790:Generated_Source\PSoC5/PWM_MOTORS.c ****     uint16 PWM_MOTORS_ReadCapture(void) 
 791:Generated_Source\PSoC5/PWM_MOTORS.c ****     {
 543              		.loc 1 791 0
 544              		.cfi_startproc
 545              		@ args = 0, pretend = 0, frame = 0
 546              		@ frame_needed = 1, uses_anonymous_args = 0
 547              		@ link register save eliminated.
 548 0000 80B4     		push	{r7}
 549              		.cfi_def_cfa_offset 4
 550              		.cfi_offset 7, -4
 551 0002 00AF     		add	r7, sp, #0
 552              		.cfi_def_cfa_register 7
 792:Generated_Source\PSoC5/PWM_MOTORS.c ****         return (CY_GET_REG16(PWM_MOTORS_CAPTURE_LSB_PTR));
 553              		.loc 1 792 0
 554 0004 034B     		ldr	r3, .L39
 555 0006 1B88     		ldrh	r3, [r3]	@ movhi
 556 0008 9BB2     		uxth	r3, r3
 793:Generated_Source\PSoC5/PWM_MOTORS.c ****     }
 557              		.loc 1 793 0
 558 000a 1846     		mov	r0, r3
 559 000c BD46     		mov	sp, r7
 560              		.cfi_def_cfa_register 13
 561              		@ sp needed
 562 000e 80BC     		pop	{r7}
 563              		.cfi_restore 7
 564              		.cfi_def_cfa_offset 0
 565 0010 7047     		bx	lr
 566              	.L40:
 567 0012 00BF     		.align	2
 568              	.L39:
 569 0014 A8680040 		.word	1073768616
 570              		.cfi_endproc
 571              	.LFE11:
 572              		.size	PWM_MOTORS_ReadCapture, .-PWM_MOTORS_ReadCapture
 573              		.section	.text.PWM_MOTORS_ReadCompare1,"ax",%progbits
 574              		.align	2
 575              		.global	PWM_MOTORS_ReadCompare1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc2YA5ie.s 			page 25


 576              		.thumb
 577              		.thumb_func
 578              		.type	PWM_MOTORS_ReadCompare1, %function
 579              	PWM_MOTORS_ReadCompare1:
 580              	.LFB12:
 794:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 795:Generated_Source\PSoC5/PWM_MOTORS.c **** #endif /* (!PWM_MOTORS_UsingFixedFunction) */
 796:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 797:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 798:Generated_Source\PSoC5/PWM_MOTORS.c **** #if (PWM_MOTORS_UseOneCompareMode)
 799:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 800:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 801:Generated_Source\PSoC5/PWM_MOTORS.c ****     /*******************************************************************************
 802:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Function Name: PWM_MOTORS_ReadCompare
 803:Generated_Source\PSoC5/PWM_MOTORS.c ****     ********************************************************************************
 804:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 805:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Summary:
 806:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  Reads the compare value for the compare output when the PWM Mode parameter is
 807:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  set to Dither mode, Center Aligned mode, or One Output mode.
 808:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 809:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Parameters:
 810:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  None
 811:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 812:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Return:
 813:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  uint8/uint16: Current compare value
 814:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 815:Generated_Source\PSoC5/PWM_MOTORS.c ****     *******************************************************************************/
 816:Generated_Source\PSoC5/PWM_MOTORS.c ****     uint16 PWM_MOTORS_ReadCompare(void) 
 817:Generated_Source\PSoC5/PWM_MOTORS.c ****     {
 818:Generated_Source\PSoC5/PWM_MOTORS.c ****         #if(PWM_MOTORS_UsingFixedFunction)
 819:Generated_Source\PSoC5/PWM_MOTORS.c ****             return ((uint16)CY_GET_REG16(PWM_MOTORS_COMPARE1_LSB_PTR));
 820:Generated_Source\PSoC5/PWM_MOTORS.c ****         #else
 821:Generated_Source\PSoC5/PWM_MOTORS.c ****             return (CY_GET_REG16(PWM_MOTORS_COMPARE1_LSB_PTR));
 822:Generated_Source\PSoC5/PWM_MOTORS.c ****         #endif /* (PWM_MOTORS_UsingFixedFunction) */
 823:Generated_Source\PSoC5/PWM_MOTORS.c ****     }
 824:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 825:Generated_Source\PSoC5/PWM_MOTORS.c **** #else
 826:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 827:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 828:Generated_Source\PSoC5/PWM_MOTORS.c ****     /*******************************************************************************
 829:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Function Name: PWM_MOTORS_ReadCompare1
 830:Generated_Source\PSoC5/PWM_MOTORS.c ****     ********************************************************************************
 831:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 832:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Summary:
 833:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  Reads the compare value for the compare1 output.
 834:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 835:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Parameters:
 836:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  None
 837:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 838:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Return:
 839:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  uint8/uint16: Current compare value.
 840:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 841:Generated_Source\PSoC5/PWM_MOTORS.c ****     *******************************************************************************/
 842:Generated_Source\PSoC5/PWM_MOTORS.c ****     uint16 PWM_MOTORS_ReadCompare1(void) 
 843:Generated_Source\PSoC5/PWM_MOTORS.c ****     {
 581              		.loc 1 843 0
 582              		.cfi_startproc
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc2YA5ie.s 			page 26


 583              		@ args = 0, pretend = 0, frame = 0
 584              		@ frame_needed = 1, uses_anonymous_args = 0
 585              		@ link register save eliminated.
 586 0000 80B4     		push	{r7}
 587              		.cfi_def_cfa_offset 4
 588              		.cfi_offset 7, -4
 589 0002 00AF     		add	r7, sp, #0
 590              		.cfi_def_cfa_register 7
 844:Generated_Source\PSoC5/PWM_MOTORS.c ****         return (CY_GET_REG16(PWM_MOTORS_COMPARE1_LSB_PTR));
 591              		.loc 1 844 0
 592 0004 034B     		ldr	r3, .L43
 593 0006 1B88     		ldrh	r3, [r3]	@ movhi
 594 0008 9BB2     		uxth	r3, r3
 845:Generated_Source\PSoC5/PWM_MOTORS.c ****     }
 595              		.loc 1 845 0
 596 000a 1846     		mov	r0, r3
 597 000c BD46     		mov	sp, r7
 598              		.cfi_def_cfa_register 13
 599              		@ sp needed
 600 000e 80BC     		pop	{r7}
 601              		.cfi_restore 7
 602              		.cfi_def_cfa_offset 0
 603 0010 7047     		bx	lr
 604              	.L44:
 605 0012 00BF     		.align	2
 606              	.L43:
 607 0014 48680040 		.word	1073768520
 608              		.cfi_endproc
 609              	.LFE12:
 610              		.size	PWM_MOTORS_ReadCompare1, .-PWM_MOTORS_ReadCompare1
 611              		.section	.text.PWM_MOTORS_ReadCompare2,"ax",%progbits
 612              		.align	2
 613              		.global	PWM_MOTORS_ReadCompare2
 614              		.thumb
 615              		.thumb_func
 616              		.type	PWM_MOTORS_ReadCompare2, %function
 617              	PWM_MOTORS_ReadCompare2:
 618              	.LFB13:
 846:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 847:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 848:Generated_Source\PSoC5/PWM_MOTORS.c ****     /*******************************************************************************
 849:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Function Name: PWM_MOTORS_ReadCompare2
 850:Generated_Source\PSoC5/PWM_MOTORS.c ****     ********************************************************************************
 851:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 852:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Summary:
 853:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  Reads the compare value for the compare2 output.
 854:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 855:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Parameters:
 856:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  None
 857:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 858:Generated_Source\PSoC5/PWM_MOTORS.c ****     * Return:
 859:Generated_Source\PSoC5/PWM_MOTORS.c ****     *  uint8/uint16: Current compare value.
 860:Generated_Source\PSoC5/PWM_MOTORS.c ****     *
 861:Generated_Source\PSoC5/PWM_MOTORS.c ****     *******************************************************************************/
 862:Generated_Source\PSoC5/PWM_MOTORS.c ****     uint16 PWM_MOTORS_ReadCompare2(void) 
 863:Generated_Source\PSoC5/PWM_MOTORS.c ****     {
 619              		.loc 1 863 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc2YA5ie.s 			page 27


 620              		.cfi_startproc
 621              		@ args = 0, pretend = 0, frame = 0
 622              		@ frame_needed = 1, uses_anonymous_args = 0
 623              		@ link register save eliminated.
 624 0000 80B4     		push	{r7}
 625              		.cfi_def_cfa_offset 4
 626              		.cfi_offset 7, -4
 627 0002 00AF     		add	r7, sp, #0
 628              		.cfi_def_cfa_register 7
 864:Generated_Source\PSoC5/PWM_MOTORS.c ****         return (CY_GET_REG16(PWM_MOTORS_COMPARE2_LSB_PTR));
 629              		.loc 1 864 0
 630 0004 034B     		ldr	r3, .L47
 631 0006 1B88     		ldrh	r3, [r3]	@ movhi
 632 0008 9BB2     		uxth	r3, r3
 865:Generated_Source\PSoC5/PWM_MOTORS.c ****     }
 633              		.loc 1 865 0
 634 000a 1846     		mov	r0, r3
 635 000c BD46     		mov	sp, r7
 636              		.cfi_def_cfa_register 13
 637              		@ sp needed
 638 000e 80BC     		pop	{r7}
 639              		.cfi_restore 7
 640              		.cfi_def_cfa_offset 0
 641 0010 7047     		bx	lr
 642              	.L48:
 643 0012 00BF     		.align	2
 644              	.L47:
 645 0014 68680040 		.word	1073768552
 646              		.cfi_endproc
 647              	.LFE13:
 648              		.size	PWM_MOTORS_ReadCompare2, .-PWM_MOTORS_ReadCompare2
 649              		.section	.text.PWM_MOTORS_ReadPeriod,"ax",%progbits
 650              		.align	2
 651              		.global	PWM_MOTORS_ReadPeriod
 652              		.thumb
 653              		.thumb_func
 654              		.type	PWM_MOTORS_ReadPeriod, %function
 655              	PWM_MOTORS_ReadPeriod:
 656              	.LFB14:
 866:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 867:Generated_Source\PSoC5/PWM_MOTORS.c **** #endif /* (PWM_MOTORS_UseOneCompareMode) */
 868:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 869:Generated_Source\PSoC5/PWM_MOTORS.c **** 
 870:Generated_Source\PSoC5/PWM_MOTORS.c **** /*******************************************************************************
 871:Generated_Source\PSoC5/PWM_MOTORS.c **** * Function Name: PWM_MOTORS_ReadPeriod
 872:Generated_Source\PSoC5/PWM_MOTORS.c **** ********************************************************************************
 873:Generated_Source\PSoC5/PWM_MOTORS.c **** *
 874:Generated_Source\PSoC5/PWM_MOTORS.c **** * Summary:
 875:Generated_Source\PSoC5/PWM_MOTORS.c **** *  Reads the period value used by the PWM hardware.
 876:Generated_Source\PSoC5/PWM_MOTORS.c **** *
 877:Generated_Source\PSoC5/PWM_MOTORS.c **** * Parameters:
 878:Generated_Source\PSoC5/PWM_MOTORS.c **** *  None
 879:Generated_Source\PSoC5/PWM_MOTORS.c **** *
 880:Generated_Source\PSoC5/PWM_MOTORS.c **** * Return:
 881:Generated_Source\PSoC5/PWM_MOTORS.c **** *  uint8/16: Period value
 882:Generated_Source\PSoC5/PWM_MOTORS.c **** *
 883:Generated_Source\PSoC5/PWM_MOTORS.c **** *******************************************************************************/
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc2YA5ie.s 			page 28


 884:Generated_Source\PSoC5/PWM_MOTORS.c **** uint16 PWM_MOTORS_ReadPeriod(void) 
 885:Generated_Source\PSoC5/PWM_MOTORS.c **** {
 657              		.loc 1 885 0
 658              		.cfi_startproc
 659              		@ args = 0, pretend = 0, frame = 0
 660              		@ frame_needed = 1, uses_anonymous_args = 0
 661              		@ link register save eliminated.
 662 0000 80B4     		push	{r7}
 663              		.cfi_def_cfa_offset 4
 664              		.cfi_offset 7, -4
 665 0002 00AF     		add	r7, sp, #0
 666              		.cfi_def_cfa_register 7
 886:Generated_Source\PSoC5/PWM_MOTORS.c ****     #if(PWM_MOTORS_UsingFixedFunction)
 887:Generated_Source\PSoC5/PWM_MOTORS.c ****         return ((uint16)CY_GET_REG16(PWM_MOTORS_PERIOD_LSB_PTR));
 888:Generated_Source\PSoC5/PWM_MOTORS.c ****     #else
 889:Generated_Source\PSoC5/PWM_MOTORS.c ****         return (CY_GET_REG16(PWM_MOTORS_PERIOD_LSB_PTR));
 667              		.loc 1 889 0
 668 0004 034B     		ldr	r3, .L51
 669 0006 1B88     		ldrh	r3, [r3]	@ movhi
 670 0008 9BB2     		uxth	r3, r3
 890:Generated_Source\PSoC5/PWM_MOTORS.c ****     #endif /* (PWM_MOTORS_UsingFixedFunction) */
 891:Generated_Source\PSoC5/PWM_MOTORS.c **** }
 671              		.loc 1 891 0
 672 000a 1846     		mov	r0, r3
 673 000c BD46     		mov	sp, r7
 674              		.cfi_def_cfa_register 13
 675              		@ sp needed
 676 000e 80BC     		pop	{r7}
 677              		.cfi_restore 7
 678              		.cfi_def_cfa_offset 0
 679 0010 7047     		bx	lr
 680              	.L52:
 681 0012 00BF     		.align	2
 682              	.L51:
 683 0014 88680040 		.word	1073768584
 684              		.cfi_endproc
 685              	.LFE14:
 686              		.size	PWM_MOTORS_ReadPeriod, .-PWM_MOTORS_ReadPeriod
 687              		.text
 688              	.Letext0:
 689              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 690              		.section	.debug_info,"",%progbits
 691              	.Ldebug_info0:
 692 0000 83020000 		.4byte	0x283
 693 0004 0400     		.2byte	0x4
 694 0006 00000000 		.4byte	.Ldebug_abbrev0
 695 000a 04       		.byte	0x4
 696 000b 01       		.uleb128 0x1
 697 000c 19000000 		.4byte	.LASF38
 698 0010 0C       		.byte	0xc
 699 0011 C5020000 		.4byte	.LASF39
 700 0015 94010000 		.4byte	.LASF40
 701 0019 00000000 		.4byte	.Ldebug_ranges0+0
 702 001d 00000000 		.4byte	0
 703 0021 00000000 		.4byte	.Ldebug_line0
 704 0025 02       		.uleb128 0x2
 705 0026 01       		.byte	0x1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc2YA5ie.s 			page 29


 706 0027 06       		.byte	0x6
 707 0028 6F030000 		.4byte	.LASF0
 708 002c 02       		.uleb128 0x2
 709 002d 01       		.byte	0x1
 710 002e 08       		.byte	0x8
 711 002f 1E020000 		.4byte	.LASF1
 712 0033 02       		.uleb128 0x2
 713 0034 02       		.byte	0x2
 714 0035 05       		.byte	0x5
 715 0036 1B030000 		.4byte	.LASF2
 716 003a 02       		.uleb128 0x2
 717 003b 02       		.byte	0x2
 718 003c 07       		.byte	0x7
 719 003d 03010000 		.4byte	.LASF3
 720 0041 02       		.uleb128 0x2
 721 0042 04       		.byte	0x4
 722 0043 05       		.byte	0x5
 723 0044 55030000 		.4byte	.LASF4
 724 0048 02       		.uleb128 0x2
 725 0049 04       		.byte	0x4
 726 004a 07       		.byte	0x7
 727 004b 39010000 		.4byte	.LASF5
 728 004f 02       		.uleb128 0x2
 729 0050 08       		.byte	0x8
 730 0051 05       		.byte	0x5
 731 0052 97020000 		.4byte	.LASF6
 732 0056 02       		.uleb128 0x2
 733 0057 08       		.byte	0x8
 734 0058 07       		.byte	0x7
 735 0059 4B020000 		.4byte	.LASF7
 736 005d 03       		.uleb128 0x3
 737 005e 04       		.byte	0x4
 738 005f 05       		.byte	0x5
 739 0060 696E7400 		.ascii	"int\000"
 740 0064 02       		.uleb128 0x2
 741 0065 04       		.byte	0x4
 742 0066 07       		.byte	0x7
 743 0067 2C020000 		.4byte	.LASF8
 744 006b 04       		.uleb128 0x4
 745 006c 4B010000 		.4byte	.LASF9
 746 0070 02       		.byte	0x2
 747 0071 E401     		.2byte	0x1e4
 748 0073 2C000000 		.4byte	0x2c
 749 0077 04       		.uleb128 0x4
 750 0078 8D010000 		.4byte	.LASF10
 751 007c 02       		.byte	0x2
 752 007d E501     		.2byte	0x1e5
 753 007f 3A000000 		.4byte	0x3a
 754 0083 02       		.uleb128 0x2
 755 0084 04       		.byte	0x4
 756 0085 04       		.byte	0x4
 757 0086 16010000 		.4byte	.LASF11
 758 008a 02       		.uleb128 0x2
 759 008b 08       		.byte	0x8
 760 008c 04       		.byte	0x4
 761 008d 86010000 		.4byte	.LASF12
 762 0091 02       		.uleb128 0x2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc2YA5ie.s 			page 30


 763 0092 01       		.byte	0x1
 764 0093 08       		.byte	0x8
 765 0094 5E030000 		.4byte	.LASF13
 766 0098 04       		.uleb128 0x4
 767 0099 34010000 		.4byte	.LASF14
 768 009d 02       		.byte	0x2
 769 009e 8E02     		.2byte	0x28e
 770 00a0 A4000000 		.4byte	0xa4
 771 00a4 05       		.uleb128 0x5
 772 00a5 6B000000 		.4byte	0x6b
 773 00a9 04       		.uleb128 0x4
 774 00aa 00000000 		.4byte	.LASF15
 775 00ae 02       		.byte	0x2
 776 00af 8F02     		.2byte	0x28f
 777 00b1 B5000000 		.4byte	0xb5
 778 00b5 05       		.uleb128 0x5
 779 00b6 77000000 		.4byte	0x77
 780 00ba 02       		.uleb128 0x2
 781 00bb 08       		.byte	0x8
 782 00bc 04       		.byte	0x4
 783 00bd 63030000 		.4byte	.LASF16
 784 00c1 02       		.uleb128 0x2
 785 00c2 04       		.byte	0x4
 786 00c3 07       		.byte	0x7
 787 00c4 8E020000 		.4byte	.LASF17
 788 00c8 06       		.uleb128 0x6
 789 00c9 83030000 		.4byte	.LASF18
 790 00cd 01       		.byte	0x1
 791 00ce 37       		.byte	0x37
 792 00cf 00000000 		.4byte	.LFB0
 793 00d3 24000000 		.4byte	.LFE0-.LFB0
 794 00d7 01       		.uleb128 0x1
 795 00d8 9C       		.byte	0x9c
 796 00d9 07       		.uleb128 0x7
 797 00da 24010000 		.4byte	.LASF21
 798 00de 01       		.byte	0x1
 799 00df 54       		.byte	0x54
 800 00e0 00000000 		.4byte	.LFB1
 801 00e4 6C000000 		.4byte	.LFE1-.LFB1
 802 00e8 01       		.uleb128 0x1
 803 00e9 9C       		.byte	0x9c
 804 00ea FD000000 		.4byte	0xfd
 805 00ee 08       		.uleb128 0x8
 806 00ef 89020000 		.4byte	.LASF29
 807 00f3 01       		.byte	0x1
 808 00f4 57       		.byte	0x57
 809 00f5 6B000000 		.4byte	0x6b
 810 00f9 02       		.uleb128 0x2
 811 00fa 91       		.byte	0x91
 812 00fb 77       		.sleb128 -9
 813 00fc 00       		.byte	0
 814 00fd 09       		.uleb128 0x9
 815 00fe 39020000 		.4byte	.LASF19
 816 0102 01       		.byte	0x1
 817 0103 C7       		.byte	0xc7
 818 0104 00000000 		.4byte	.LFB2
 819 0108 20000000 		.4byte	.LFE2-.LFB2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc2YA5ie.s 			page 31


 820 010c 01       		.uleb128 0x1
 821 010d 9C       		.byte	0x9c
 822 010e 09       		.uleb128 0x9
 823 010f 79020000 		.4byte	.LASF20
 824 0113 01       		.byte	0x1
 825 0114 E9       		.byte	0xe9
 826 0115 00000000 		.4byte	.LFB3
 827 0119 20000000 		.4byte	.LFE3-.LFB3
 828 011d 01       		.uleb128 0x1
 829 011e 9C       		.byte	0x9c
 830 011f 0A       		.uleb128 0xa
 831 0120 AE000000 		.4byte	.LASF22
 832 0124 01       		.byte	0x1
 833 0125 9301     		.2byte	0x193
 834 0127 00000000 		.4byte	.LFB4
 835 012b 20000000 		.4byte	.LFE4-.LFB4
 836 012f 01       		.uleb128 0x1
 837 0130 9C       		.byte	0x9c
 838 0131 45010000 		.4byte	0x145
 839 0135 0B       		.uleb128 0xb
 840 0136 1C010000 		.4byte	.LASF24
 841 013a 01       		.byte	0x1
 842 013b 9301     		.2byte	0x193
 843 013d 77000000 		.4byte	0x77
 844 0141 02       		.uleb128 0x2
 845 0142 91       		.byte	0x91
 846 0143 76       		.sleb128 -10
 847 0144 00       		.byte	0
 848 0145 0C       		.uleb128 0xc
 849 0146 6F010000 		.4byte	.LASF33
 850 014a 01       		.byte	0x1
 851 014b A901     		.2byte	0x1a9
 852 014d 77000000 		.4byte	0x77
 853 0151 00000000 		.4byte	.LFB5
 854 0155 20000000 		.4byte	.LFE5-.LFB5
 855 0159 01       		.uleb128 0x1
 856 015a 9C       		.byte	0x9c
 857 015b 0A       		.uleb128 0xa
 858 015c 62020000 		.4byte	.LASF23
 859 0160 01       		.byte	0x1
 860 0161 E201     		.2byte	0x1e2
 861 0163 00000000 		.4byte	.LFB6
 862 0167 20000000 		.4byte	.LFE6-.LFB6
 863 016b 01       		.uleb128 0x1
 864 016c 9C       		.byte	0x9c
 865 016d 81010000 		.4byte	0x181
 866 0171 0B       		.uleb128 0xb
 867 0172 E5000000 		.4byte	.LASF25
 868 0176 01       		.byte	0x1
 869 0177 E201     		.2byte	0x1e2
 870 0179 77000000 		.4byte	0x77
 871 017d 02       		.uleb128 0x2
 872 017e 91       		.byte	0x91
 873 017f 76       		.sleb128 -10
 874 0180 00       		.byte	0
 875 0181 0A       		.uleb128 0xa
 876 0182 E9020000 		.4byte	.LASF26
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc2YA5ie.s 			page 32


 877 0186 01       		.byte	0x1
 878 0187 2B02     		.2byte	0x22b
 879 0189 00000000 		.4byte	.LFB7
 880 018d 20000000 		.4byte	.LFE7-.LFB7
 881 0191 01       		.uleb128 0x1
 882 0192 9C       		.byte	0x9c
 883 0193 A7010000 		.4byte	0x1a7
 884 0197 0B       		.uleb128 0xb
 885 0198 7B030000 		.4byte	.LASF27
 886 019c 01       		.byte	0x1
 887 019d 2B02     		.2byte	0x22b
 888 019f 77000000 		.4byte	0x77
 889 01a3 02       		.uleb128 0x2
 890 01a4 91       		.byte	0x91
 891 01a5 76       		.sleb128 -10
 892 01a6 00       		.byte	0
 893 01a7 0A       		.uleb128 0xa
 894 01a8 02030000 		.4byte	.LASF28
 895 01ac 01       		.byte	0x1
 896 01ad 4802     		.2byte	0x248
 897 01af 00000000 		.4byte	.LFB8
 898 01b3 20000000 		.4byte	.LFE8-.LFB8
 899 01b7 01       		.uleb128 0x1
 900 01b8 9C       		.byte	0x9c
 901 01b9 CD010000 		.4byte	0x1cd
 902 01bd 0B       		.uleb128 0xb
 903 01be 7B030000 		.4byte	.LASF27
 904 01c2 01       		.byte	0x1
 905 01c3 4802     		.2byte	0x248
 906 01c5 77000000 		.4byte	0x77
 907 01c9 02       		.uleb128 0x2
 908 01ca 91       		.byte	0x91
 909 01cb 76       		.sleb128 -10
 910 01cc 00       		.byte	0
 911 01cd 0D       		.uleb128 0xd
 912 01ce C6000000 		.4byte	.LASF41
 913 01d2 01       		.byte	0x1
 914 01d3 E102     		.2byte	0x2e1
 915 01d5 6B000000 		.4byte	0x6b
 916 01d9 00000000 		.4byte	.LFB9
 917 01dd 1C000000 		.4byte	.LFE9-.LFB9
 918 01e1 01       		.uleb128 0x1
 919 01e2 9C       		.byte	0x9c
 920 01e3 F7010000 		.4byte	0x1f7
 921 01e7 0E       		.uleb128 0xe
 922 01e8 A7000000 		.4byte	.LASF30
 923 01ec 01       		.byte	0x1
 924 01ed E302     		.2byte	0x2e3
 925 01ef 6B000000 		.4byte	0x6b
 926 01f3 02       		.uleb128 0x2
 927 01f4 91       		.byte	0x91
 928 01f5 77       		.sleb128 -9
 929 01f6 00       		.byte	0
 930 01f7 0A       		.uleb128 0xa
 931 01f8 A5020000 		.4byte	.LASF31
 932 01fc 01       		.byte	0x1
 933 01fd FD02     		.2byte	0x2fd
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc2YA5ie.s 			page 33


 934 01ff 00000000 		.4byte	.LFB10
 935 0203 20000000 		.4byte	.LFE10-.LFB10
 936 0207 01       		.uleb128 0x1
 937 0208 9C       		.byte	0x9c
 938 0209 1D020000 		.4byte	0x21d
 939 020d 0B       		.uleb128 0xb
 940 020e 51010000 		.4byte	.LASF32
 941 0212 01       		.byte	0x1
 942 0213 FD02     		.2byte	0x2fd
 943 0215 6B000000 		.4byte	0x6b
 944 0219 02       		.uleb128 0x2
 945 021a 91       		.byte	0x91
 946 021b 77       		.sleb128 -9
 947 021c 00       		.byte	0
 948 021d 0C       		.uleb128 0xc
 949 021e EC000000 		.4byte	.LASF34
 950 0222 01       		.byte	0x1
 951 0223 1603     		.2byte	0x316
 952 0225 77000000 		.4byte	0x77
 953 0229 00000000 		.4byte	.LFB11
 954 022d 18000000 		.4byte	.LFE11-.LFB11
 955 0231 01       		.uleb128 0x1
 956 0232 9C       		.byte	0x9c
 957 0233 0C       		.uleb128 0xc
 958 0234 25030000 		.4byte	.LASF35
 959 0238 01       		.byte	0x1
 960 0239 4A03     		.2byte	0x34a
 961 023b 77000000 		.4byte	0x77
 962 023f 00000000 		.4byte	.LFB12
 963 0243 18000000 		.4byte	.LFE12-.LFB12
 964 0247 01       		.uleb128 0x1
 965 0248 9C       		.byte	0x9c
 966 0249 0C       		.uleb128 0xc
 967 024a 3D030000 		.4byte	.LASF36
 968 024e 01       		.byte	0x1
 969 024f 5E03     		.2byte	0x35e
 970 0251 77000000 		.4byte	0x77
 971 0255 00000000 		.4byte	.LFB13
 972 0259 18000000 		.4byte	.LFE13-.LFB13
 973 025d 01       		.uleb128 0x1
 974 025e 9C       		.byte	0x9c
 975 025f 0C       		.uleb128 0xc
 976 0260 59010000 		.4byte	.LASF37
 977 0264 01       		.byte	0x1
 978 0265 7403     		.2byte	0x374
 979 0267 77000000 		.4byte	0x77
 980 026b 00000000 		.4byte	.LFB14
 981 026f 18000000 		.4byte	.LFE14-.LFB14
 982 0273 01       		.uleb128 0x1
 983 0274 9C       		.byte	0x9c
 984 0275 0F       		.uleb128 0xf
 985 0276 06000000 		.4byte	.LASF42
 986 027a 01       		.byte	0x1
 987 027b 20       		.byte	0x20
 988 027c 6B000000 		.4byte	0x6b
 989 0280 05       		.uleb128 0x5
 990 0281 03       		.byte	0x3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc2YA5ie.s 			page 34


 991 0282 00000000 		.4byte	PWM_MOTORS_initVar
 992 0286 00       		.byte	0
 993              		.section	.debug_abbrev,"",%progbits
 994              	.Ldebug_abbrev0:
 995 0000 01       		.uleb128 0x1
 996 0001 11       		.uleb128 0x11
 997 0002 01       		.byte	0x1
 998 0003 25       		.uleb128 0x25
 999 0004 0E       		.uleb128 0xe
 1000 0005 13       		.uleb128 0x13
 1001 0006 0B       		.uleb128 0xb
 1002 0007 03       		.uleb128 0x3
 1003 0008 0E       		.uleb128 0xe
 1004 0009 1B       		.uleb128 0x1b
 1005 000a 0E       		.uleb128 0xe
 1006 000b 55       		.uleb128 0x55
 1007 000c 17       		.uleb128 0x17
 1008 000d 11       		.uleb128 0x11
 1009 000e 01       		.uleb128 0x1
 1010 000f 10       		.uleb128 0x10
 1011 0010 17       		.uleb128 0x17
 1012 0011 00       		.byte	0
 1013 0012 00       		.byte	0
 1014 0013 02       		.uleb128 0x2
 1015 0014 24       		.uleb128 0x24
 1016 0015 00       		.byte	0
 1017 0016 0B       		.uleb128 0xb
 1018 0017 0B       		.uleb128 0xb
 1019 0018 3E       		.uleb128 0x3e
 1020 0019 0B       		.uleb128 0xb
 1021 001a 03       		.uleb128 0x3
 1022 001b 0E       		.uleb128 0xe
 1023 001c 00       		.byte	0
 1024 001d 00       		.byte	0
 1025 001e 03       		.uleb128 0x3
 1026 001f 24       		.uleb128 0x24
 1027 0020 00       		.byte	0
 1028 0021 0B       		.uleb128 0xb
 1029 0022 0B       		.uleb128 0xb
 1030 0023 3E       		.uleb128 0x3e
 1031 0024 0B       		.uleb128 0xb
 1032 0025 03       		.uleb128 0x3
 1033 0026 08       		.uleb128 0x8
 1034 0027 00       		.byte	0
 1035 0028 00       		.byte	0
 1036 0029 04       		.uleb128 0x4
 1037 002a 16       		.uleb128 0x16
 1038 002b 00       		.byte	0
 1039 002c 03       		.uleb128 0x3
 1040 002d 0E       		.uleb128 0xe
 1041 002e 3A       		.uleb128 0x3a
 1042 002f 0B       		.uleb128 0xb
 1043 0030 3B       		.uleb128 0x3b
 1044 0031 05       		.uleb128 0x5
 1045 0032 49       		.uleb128 0x49
 1046 0033 13       		.uleb128 0x13
 1047 0034 00       		.byte	0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc2YA5ie.s 			page 35


 1048 0035 00       		.byte	0
 1049 0036 05       		.uleb128 0x5
 1050 0037 35       		.uleb128 0x35
 1051 0038 00       		.byte	0
 1052 0039 49       		.uleb128 0x49
 1053 003a 13       		.uleb128 0x13
 1054 003b 00       		.byte	0
 1055 003c 00       		.byte	0
 1056 003d 06       		.uleb128 0x6
 1057 003e 2E       		.uleb128 0x2e
 1058 003f 00       		.byte	0
 1059 0040 3F       		.uleb128 0x3f
 1060 0041 19       		.uleb128 0x19
 1061 0042 03       		.uleb128 0x3
 1062 0043 0E       		.uleb128 0xe
 1063 0044 3A       		.uleb128 0x3a
 1064 0045 0B       		.uleb128 0xb
 1065 0046 3B       		.uleb128 0x3b
 1066 0047 0B       		.uleb128 0xb
 1067 0048 27       		.uleb128 0x27
 1068 0049 19       		.uleb128 0x19
 1069 004a 11       		.uleb128 0x11
 1070 004b 01       		.uleb128 0x1
 1071 004c 12       		.uleb128 0x12
 1072 004d 06       		.uleb128 0x6
 1073 004e 40       		.uleb128 0x40
 1074 004f 18       		.uleb128 0x18
 1075 0050 9642     		.uleb128 0x2116
 1076 0052 19       		.uleb128 0x19
 1077 0053 00       		.byte	0
 1078 0054 00       		.byte	0
 1079 0055 07       		.uleb128 0x7
 1080 0056 2E       		.uleb128 0x2e
 1081 0057 01       		.byte	0x1
 1082 0058 3F       		.uleb128 0x3f
 1083 0059 19       		.uleb128 0x19
 1084 005a 03       		.uleb128 0x3
 1085 005b 0E       		.uleb128 0xe
 1086 005c 3A       		.uleb128 0x3a
 1087 005d 0B       		.uleb128 0xb
 1088 005e 3B       		.uleb128 0x3b
 1089 005f 0B       		.uleb128 0xb
 1090 0060 27       		.uleb128 0x27
 1091 0061 19       		.uleb128 0x19
 1092 0062 11       		.uleb128 0x11
 1093 0063 01       		.uleb128 0x1
 1094 0064 12       		.uleb128 0x12
 1095 0065 06       		.uleb128 0x6
 1096 0066 40       		.uleb128 0x40
 1097 0067 18       		.uleb128 0x18
 1098 0068 9642     		.uleb128 0x2116
 1099 006a 19       		.uleb128 0x19
 1100 006b 01       		.uleb128 0x1
 1101 006c 13       		.uleb128 0x13
 1102 006d 00       		.byte	0
 1103 006e 00       		.byte	0
 1104 006f 08       		.uleb128 0x8
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc2YA5ie.s 			page 36


 1105 0070 34       		.uleb128 0x34
 1106 0071 00       		.byte	0
 1107 0072 03       		.uleb128 0x3
 1108 0073 0E       		.uleb128 0xe
 1109 0074 3A       		.uleb128 0x3a
 1110 0075 0B       		.uleb128 0xb
 1111 0076 3B       		.uleb128 0x3b
 1112 0077 0B       		.uleb128 0xb
 1113 0078 49       		.uleb128 0x49
 1114 0079 13       		.uleb128 0x13
 1115 007a 02       		.uleb128 0x2
 1116 007b 18       		.uleb128 0x18
 1117 007c 00       		.byte	0
 1118 007d 00       		.byte	0
 1119 007e 09       		.uleb128 0x9
 1120 007f 2E       		.uleb128 0x2e
 1121 0080 00       		.byte	0
 1122 0081 3F       		.uleb128 0x3f
 1123 0082 19       		.uleb128 0x19
 1124 0083 03       		.uleb128 0x3
 1125 0084 0E       		.uleb128 0xe
 1126 0085 3A       		.uleb128 0x3a
 1127 0086 0B       		.uleb128 0xb
 1128 0087 3B       		.uleb128 0x3b
 1129 0088 0B       		.uleb128 0xb
 1130 0089 27       		.uleb128 0x27
 1131 008a 19       		.uleb128 0x19
 1132 008b 11       		.uleb128 0x11
 1133 008c 01       		.uleb128 0x1
 1134 008d 12       		.uleb128 0x12
 1135 008e 06       		.uleb128 0x6
 1136 008f 40       		.uleb128 0x40
 1137 0090 18       		.uleb128 0x18
 1138 0091 9742     		.uleb128 0x2117
 1139 0093 19       		.uleb128 0x19
 1140 0094 00       		.byte	0
 1141 0095 00       		.byte	0
 1142 0096 0A       		.uleb128 0xa
 1143 0097 2E       		.uleb128 0x2e
 1144 0098 01       		.byte	0x1
 1145 0099 3F       		.uleb128 0x3f
 1146 009a 19       		.uleb128 0x19
 1147 009b 03       		.uleb128 0x3
 1148 009c 0E       		.uleb128 0xe
 1149 009d 3A       		.uleb128 0x3a
 1150 009e 0B       		.uleb128 0xb
 1151 009f 3B       		.uleb128 0x3b
 1152 00a0 05       		.uleb128 0x5
 1153 00a1 27       		.uleb128 0x27
 1154 00a2 19       		.uleb128 0x19
 1155 00a3 11       		.uleb128 0x11
 1156 00a4 01       		.uleb128 0x1
 1157 00a5 12       		.uleb128 0x12
 1158 00a6 06       		.uleb128 0x6
 1159 00a7 40       		.uleb128 0x40
 1160 00a8 18       		.uleb128 0x18
 1161 00a9 9742     		.uleb128 0x2117
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc2YA5ie.s 			page 37


 1162 00ab 19       		.uleb128 0x19
 1163 00ac 01       		.uleb128 0x1
 1164 00ad 13       		.uleb128 0x13
 1165 00ae 00       		.byte	0
 1166 00af 00       		.byte	0
 1167 00b0 0B       		.uleb128 0xb
 1168 00b1 05       		.uleb128 0x5
 1169 00b2 00       		.byte	0
 1170 00b3 03       		.uleb128 0x3
 1171 00b4 0E       		.uleb128 0xe
 1172 00b5 3A       		.uleb128 0x3a
 1173 00b6 0B       		.uleb128 0xb
 1174 00b7 3B       		.uleb128 0x3b
 1175 00b8 05       		.uleb128 0x5
 1176 00b9 49       		.uleb128 0x49
 1177 00ba 13       		.uleb128 0x13
 1178 00bb 02       		.uleb128 0x2
 1179 00bc 18       		.uleb128 0x18
 1180 00bd 00       		.byte	0
 1181 00be 00       		.byte	0
 1182 00bf 0C       		.uleb128 0xc
 1183 00c0 2E       		.uleb128 0x2e
 1184 00c1 00       		.byte	0
 1185 00c2 3F       		.uleb128 0x3f
 1186 00c3 19       		.uleb128 0x19
 1187 00c4 03       		.uleb128 0x3
 1188 00c5 0E       		.uleb128 0xe
 1189 00c6 3A       		.uleb128 0x3a
 1190 00c7 0B       		.uleb128 0xb
 1191 00c8 3B       		.uleb128 0x3b
 1192 00c9 05       		.uleb128 0x5
 1193 00ca 27       		.uleb128 0x27
 1194 00cb 19       		.uleb128 0x19
 1195 00cc 49       		.uleb128 0x49
 1196 00cd 13       		.uleb128 0x13
 1197 00ce 11       		.uleb128 0x11
 1198 00cf 01       		.uleb128 0x1
 1199 00d0 12       		.uleb128 0x12
 1200 00d1 06       		.uleb128 0x6
 1201 00d2 40       		.uleb128 0x40
 1202 00d3 18       		.uleb128 0x18
 1203 00d4 9742     		.uleb128 0x2117
 1204 00d6 19       		.uleb128 0x19
 1205 00d7 00       		.byte	0
 1206 00d8 00       		.byte	0
 1207 00d9 0D       		.uleb128 0xd
 1208 00da 2E       		.uleb128 0x2e
 1209 00db 01       		.byte	0x1
 1210 00dc 3F       		.uleb128 0x3f
 1211 00dd 19       		.uleb128 0x19
 1212 00de 03       		.uleb128 0x3
 1213 00df 0E       		.uleb128 0xe
 1214 00e0 3A       		.uleb128 0x3a
 1215 00e1 0B       		.uleb128 0xb
 1216 00e2 3B       		.uleb128 0x3b
 1217 00e3 05       		.uleb128 0x5
 1218 00e4 27       		.uleb128 0x27
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc2YA5ie.s 			page 38


 1219 00e5 19       		.uleb128 0x19
 1220 00e6 49       		.uleb128 0x49
 1221 00e7 13       		.uleb128 0x13
 1222 00e8 11       		.uleb128 0x11
 1223 00e9 01       		.uleb128 0x1
 1224 00ea 12       		.uleb128 0x12
 1225 00eb 06       		.uleb128 0x6
 1226 00ec 40       		.uleb128 0x40
 1227 00ed 18       		.uleb128 0x18
 1228 00ee 9742     		.uleb128 0x2117
 1229 00f0 19       		.uleb128 0x19
 1230 00f1 01       		.uleb128 0x1
 1231 00f2 13       		.uleb128 0x13
 1232 00f3 00       		.byte	0
 1233 00f4 00       		.byte	0
 1234 00f5 0E       		.uleb128 0xe
 1235 00f6 34       		.uleb128 0x34
 1236 00f7 00       		.byte	0
 1237 00f8 03       		.uleb128 0x3
 1238 00f9 0E       		.uleb128 0xe
 1239 00fa 3A       		.uleb128 0x3a
 1240 00fb 0B       		.uleb128 0xb
 1241 00fc 3B       		.uleb128 0x3b
 1242 00fd 05       		.uleb128 0x5
 1243 00fe 49       		.uleb128 0x49
 1244 00ff 13       		.uleb128 0x13
 1245 0100 02       		.uleb128 0x2
 1246 0101 18       		.uleb128 0x18
 1247 0102 00       		.byte	0
 1248 0103 00       		.byte	0
 1249 0104 0F       		.uleb128 0xf
 1250 0105 34       		.uleb128 0x34
 1251 0106 00       		.byte	0
 1252 0107 03       		.uleb128 0x3
 1253 0108 0E       		.uleb128 0xe
 1254 0109 3A       		.uleb128 0x3a
 1255 010a 0B       		.uleb128 0xb
 1256 010b 3B       		.uleb128 0x3b
 1257 010c 0B       		.uleb128 0xb
 1258 010d 49       		.uleb128 0x49
 1259 010e 13       		.uleb128 0x13
 1260 010f 3F       		.uleb128 0x3f
 1261 0110 19       		.uleb128 0x19
 1262 0111 02       		.uleb128 0x2
 1263 0112 18       		.uleb128 0x18
 1264 0113 00       		.byte	0
 1265 0114 00       		.byte	0
 1266 0115 00       		.byte	0
 1267              		.section	.debug_aranges,"",%progbits
 1268 0000 8C000000 		.4byte	0x8c
 1269 0004 0200     		.2byte	0x2
 1270 0006 00000000 		.4byte	.Ldebug_info0
 1271 000a 04       		.byte	0x4
 1272 000b 00       		.byte	0
 1273 000c 0000     		.2byte	0
 1274 000e 0000     		.2byte	0
 1275 0010 00000000 		.4byte	.LFB0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc2YA5ie.s 			page 39


 1276 0014 24000000 		.4byte	.LFE0-.LFB0
 1277 0018 00000000 		.4byte	.LFB1
 1278 001c 6C000000 		.4byte	.LFE1-.LFB1
 1279 0020 00000000 		.4byte	.LFB2
 1280 0024 20000000 		.4byte	.LFE2-.LFB2
 1281 0028 00000000 		.4byte	.LFB3
 1282 002c 20000000 		.4byte	.LFE3-.LFB3
 1283 0030 00000000 		.4byte	.LFB4
 1284 0034 20000000 		.4byte	.LFE4-.LFB4
 1285 0038 00000000 		.4byte	.LFB5
 1286 003c 20000000 		.4byte	.LFE5-.LFB5
 1287 0040 00000000 		.4byte	.LFB6
 1288 0044 20000000 		.4byte	.LFE6-.LFB6
 1289 0048 00000000 		.4byte	.LFB7
 1290 004c 20000000 		.4byte	.LFE7-.LFB7
 1291 0050 00000000 		.4byte	.LFB8
 1292 0054 20000000 		.4byte	.LFE8-.LFB8
 1293 0058 00000000 		.4byte	.LFB9
 1294 005c 1C000000 		.4byte	.LFE9-.LFB9
 1295 0060 00000000 		.4byte	.LFB10
 1296 0064 20000000 		.4byte	.LFE10-.LFB10
 1297 0068 00000000 		.4byte	.LFB11
 1298 006c 18000000 		.4byte	.LFE11-.LFB11
 1299 0070 00000000 		.4byte	.LFB12
 1300 0074 18000000 		.4byte	.LFE12-.LFB12
 1301 0078 00000000 		.4byte	.LFB13
 1302 007c 18000000 		.4byte	.LFE13-.LFB13
 1303 0080 00000000 		.4byte	.LFB14
 1304 0084 18000000 		.4byte	.LFE14-.LFB14
 1305 0088 00000000 		.4byte	0
 1306 008c 00000000 		.4byte	0
 1307              		.section	.debug_ranges,"",%progbits
 1308              	.Ldebug_ranges0:
 1309 0000 00000000 		.4byte	.LFB0
 1310 0004 24000000 		.4byte	.LFE0
 1311 0008 00000000 		.4byte	.LFB1
 1312 000c 6C000000 		.4byte	.LFE1
 1313 0010 00000000 		.4byte	.LFB2
 1314 0014 20000000 		.4byte	.LFE2
 1315 0018 00000000 		.4byte	.LFB3
 1316 001c 20000000 		.4byte	.LFE3
 1317 0020 00000000 		.4byte	.LFB4
 1318 0024 20000000 		.4byte	.LFE4
 1319 0028 00000000 		.4byte	.LFB5
 1320 002c 20000000 		.4byte	.LFE5
 1321 0030 00000000 		.4byte	.LFB6
 1322 0034 20000000 		.4byte	.LFE6
 1323 0038 00000000 		.4byte	.LFB7
 1324 003c 20000000 		.4byte	.LFE7
 1325 0040 00000000 		.4byte	.LFB8
 1326 0044 20000000 		.4byte	.LFE8
 1327 0048 00000000 		.4byte	.LFB9
 1328 004c 1C000000 		.4byte	.LFE9
 1329 0050 00000000 		.4byte	.LFB10
 1330 0054 20000000 		.4byte	.LFE10
 1331 0058 00000000 		.4byte	.LFB11
 1332 005c 18000000 		.4byte	.LFE11
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc2YA5ie.s 			page 40


 1333 0060 00000000 		.4byte	.LFB12
 1334 0064 18000000 		.4byte	.LFE12
 1335 0068 00000000 		.4byte	.LFB13
 1336 006c 18000000 		.4byte	.LFE13
 1337 0070 00000000 		.4byte	.LFB14
 1338 0074 18000000 		.4byte	.LFE14
 1339 0078 00000000 		.4byte	0
 1340 007c 00000000 		.4byte	0
 1341              		.section	.debug_line,"",%progbits
 1342              	.Ldebug_line0:
 1343 0000 6E010000 		.section	.debug_str,"MS",%progbits,1
 1343      02004700 
 1343      00000201 
 1343      FB0E0D00 
 1343      01010101 
 1344              	.LASF15:
 1345 0000 72656731 		.ascii	"reg16\000"
 1345      3600
 1346              	.LASF42:
 1347 0006 50574D5F 		.ascii	"PWM_MOTORS_initVar\000"
 1347      4D4F544F 
 1347      52535F69 
 1347      6E697456 
 1347      617200
 1348              	.LASF38:
 1349 0019 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1349      43313120 
 1349      352E342E 
 1349      31203230 
 1349      31363036 
 1350 004c 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1350      20726576 
 1350      6973696F 
 1350      6E203233 
 1350      37373135 
 1351 007f 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1351      66756E63 
 1351      74696F6E 
 1351      2D736563 
 1351      74696F6E 
 1352              	.LASF30:
 1353 00a7 72657375 		.ascii	"result\000"
 1353      6C7400
 1354              	.LASF22:
 1355 00ae 50574D5F 		.ascii	"PWM_MOTORS_WriteCounter\000"
 1355      4D4F544F 
 1355      52535F57 
 1355      72697465 
 1355      436F756E 
 1356              	.LASF41:
 1357 00c6 50574D5F 		.ascii	"PWM_MOTORS_ReadControlRegister\000"
 1357      4D4F544F 
 1357      52535F52 
 1357      65616443 
 1357      6F6E7472 
 1358              	.LASF25:
 1359 00e5 70657269 		.ascii	"period\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc2YA5ie.s 			page 41


 1359      6F6400
 1360              	.LASF34:
 1361 00ec 50574D5F 		.ascii	"PWM_MOTORS_ReadCapture\000"
 1361      4D4F544F 
 1361      52535F52 
 1361      65616443 
 1361      61707475 
 1362              	.LASF3:
 1363 0103 73686F72 		.ascii	"short unsigned int\000"
 1363      7420756E 
 1363      7369676E 
 1363      65642069 
 1363      6E7400
 1364              	.LASF11:
 1365 0116 666C6F61 		.ascii	"float\000"
 1365      7400
 1366              	.LASF24:
 1367 011c 636F756E 		.ascii	"counter\000"
 1367      74657200 
 1368              	.LASF21:
 1369 0124 50574D5F 		.ascii	"PWM_MOTORS_Init\000"
 1369      4D4F544F 
 1369      52535F49 
 1369      6E697400 
 1370              	.LASF14:
 1371 0134 72656738 		.ascii	"reg8\000"
 1371      00
 1372              	.LASF5:
 1373 0139 6C6F6E67 		.ascii	"long unsigned int\000"
 1373      20756E73 
 1373      69676E65 
 1373      6420696E 
 1373      7400
 1374              	.LASF9:
 1375 014b 75696E74 		.ascii	"uint8\000"
 1375      3800
 1376              	.LASF32:
 1377 0151 636F6E74 		.ascii	"control\000"
 1377      726F6C00 
 1378              	.LASF37:
 1379 0159 50574D5F 		.ascii	"PWM_MOTORS_ReadPeriod\000"
 1379      4D4F544F 
 1379      52535F52 
 1379      65616450 
 1379      6572696F 
 1380              	.LASF33:
 1381 016f 50574D5F 		.ascii	"PWM_MOTORS_ReadCounter\000"
 1381      4D4F544F 
 1381      52535F52 
 1381      65616443 
 1381      6F756E74 
 1382              	.LASF12:
 1383 0186 646F7562 		.ascii	"double\000"
 1383      6C6500
 1384              	.LASF10:
 1385 018d 75696E74 		.ascii	"uint16\000"
 1385      313600
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc2YA5ie.s 			page 42


 1386              	.LASF40:
 1387 0194 433A5C55 		.ascii	"C:\\Users\\mgnocco\\OneDrive - Fondazione Istituto "
 1387      73657273 
 1387      5C6D676E 
 1387      6F63636F 
 1387      5C4F6E65 
 1388 01c4 4974616C 		.ascii	"Italiano Tecnologia\\Firmware\\TestSPI\\SoftHandPRO"
 1388      69616E6F 
 1388      20546563 
 1388      6E6F6C6F 
 1388      6769615C 
 1389 01f4 2D616E64 		.ascii	"-and-Generic-FW-PSoC5 - IMU\\Generic.cydsn\000"
 1389      2D47656E 
 1389      65726963 
 1389      2D46572D 
 1389      50536F43 
 1390              	.LASF1:
 1391 021e 756E7369 		.ascii	"unsigned char\000"
 1391      676E6564 
 1391      20636861 
 1391      7200
 1392              	.LASF8:
 1393 022c 756E7369 		.ascii	"unsigned int\000"
 1393      676E6564 
 1393      20696E74 
 1393      00
 1394              	.LASF19:
 1395 0239 50574D5F 		.ascii	"PWM_MOTORS_Enable\000"
 1395      4D4F544F 
 1395      52535F45 
 1395      6E61626C 
 1395      6500
 1396              	.LASF7:
 1397 024b 6C6F6E67 		.ascii	"long long unsigned int\000"
 1397      206C6F6E 
 1397      6720756E 
 1397      7369676E 
 1397      65642069 
 1398              	.LASF23:
 1399 0262 50574D5F 		.ascii	"PWM_MOTORS_WritePeriod\000"
 1399      4D4F544F 
 1399      52535F57 
 1399      72697465 
 1399      50657269 
 1400              	.LASF20:
 1401 0279 50574D5F 		.ascii	"PWM_MOTORS_Stop\000"
 1401      4D4F544F 
 1401      52535F53 
 1401      746F7000 
 1402              	.LASF29:
 1403 0289 6374726C 		.ascii	"ctrl\000"
 1403      00
 1404              	.LASF17:
 1405 028e 73697A65 		.ascii	"sizetype\000"
 1405      74797065 
 1405      00
 1406              	.LASF6:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc2YA5ie.s 			page 43


 1407 0297 6C6F6E67 		.ascii	"long long int\000"
 1407      206C6F6E 
 1407      6720696E 
 1407      7400
 1408              	.LASF31:
 1409 02a5 50574D5F 		.ascii	"PWM_MOTORS_WriteControlRegister\000"
 1409      4D4F544F 
 1409      52535F57 
 1409      72697465 
 1409      436F6E74 
 1410              	.LASF39:
 1411 02c5 47656E65 		.ascii	"Generated_Source\\PSoC5\\PWM_MOTORS.c\000"
 1411      72617465 
 1411      645F536F 
 1411      75726365 
 1411      5C50536F 
 1412              	.LASF26:
 1413 02e9 50574D5F 		.ascii	"PWM_MOTORS_WriteCompare1\000"
 1413      4D4F544F 
 1413      52535F57 
 1413      72697465 
 1413      436F6D70 
 1414              	.LASF28:
 1415 0302 50574D5F 		.ascii	"PWM_MOTORS_WriteCompare2\000"
 1415      4D4F544F 
 1415      52535F57 
 1415      72697465 
 1415      436F6D70 
 1416              	.LASF2:
 1417 031b 73686F72 		.ascii	"short int\000"
 1417      7420696E 
 1417      7400
 1418              	.LASF35:
 1419 0325 50574D5F 		.ascii	"PWM_MOTORS_ReadCompare1\000"
 1419      4D4F544F 
 1419      52535F52 
 1419      65616443 
 1419      6F6D7061 
 1420              	.LASF36:
 1421 033d 50574D5F 		.ascii	"PWM_MOTORS_ReadCompare2\000"
 1421      4D4F544F 
 1421      52535F52 
 1421      65616443 
 1421      6F6D7061 
 1422              	.LASF4:
 1423 0355 6C6F6E67 		.ascii	"long int\000"
 1423      20696E74 
 1423      00
 1424              	.LASF13:
 1425 035e 63686172 		.ascii	"char\000"
 1425      00
 1426              	.LASF16:
 1427 0363 6C6F6E67 		.ascii	"long double\000"
 1427      20646F75 
 1427      626C6500 
 1428              	.LASF0:
 1429 036f 7369676E 		.ascii	"signed char\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc2YA5ie.s 			page 44


 1429      65642063 
 1429      68617200 
 1430              	.LASF27:
 1431 037b 636F6D70 		.ascii	"compare\000"
 1431      61726500 
 1432              	.LASF18:
 1433 0383 50574D5F 		.ascii	"PWM_MOTORS_Start\000"
 1433      4D4F544F 
 1433      52535F53 
 1433      74617274 
 1433      00
 1434              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
