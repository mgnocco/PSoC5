ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cccSVp0l.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"ADC.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	ADC_convDone
  20              		.bss
  21              		.type	ADC_convDone, %object
  22              		.size	ADC_convDone, 1
  23              	ADC_convDone:
  24 0000 00       		.space	1
  25              		.global	ADC_stopConversion
  26              		.type	ADC_stopConversion, %object
  27              		.size	ADC_stopConversion, 1
  28              	ADC_stopConversion:
  29 0001 00       		.space	1
  30              		.global	ADC_initVar
  31              		.type	ADC_initVar, %object
  32              		.size	ADC_initVar, 1
  33              	ADC_initVar:
  34 0002 00       		.space	1
  35              		.global	ADC_started
  36              		.type	ADC_started, %object
  37              		.size	ADC_started, 1
  38              	ADC_started:
  39 0003 00       		.space	1
  40              		.global	ADC_Config
  41              		.data
  42              		.type	ADC_Config, %object
  43              		.size	ADC_Config, 1
  44              	ADC_Config:
  45 0000 01       		.byte	1
  46              		.comm	ADC_Offset,4,4
  47              		.comm	ADC_CountsPerVolt,4,4
  48              		.bss
  49              		.align	2
  50              	ADC_gcor:
  51 0004 00000000 		.space	4
  52              		.section	.text.ADC_Init,"ax",%progbits
  53              		.align	2
  54              		.global	ADC_Init
  55              		.thumb
  56              		.thumb_func
  57              		.type	ADC_Init, %function
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cccSVp0l.s 			page 2


  58              	ADC_Init:
  59              	.LFB0:
  60              		.file 1 "Generated_Source\\PSoC5\\ADC.c"
   1:Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/ADC.c **** * File Name: ADC.c
   3:Generated_Source\PSoC5/ADC.c **** * Version 3.20
   4:Generated_Source\PSoC5/ADC.c **** *
   5:Generated_Source\PSoC5/ADC.c **** * Description:
   6:Generated_Source\PSoC5/ADC.c **** *  This file provides the source code to the API for the Delta-Sigma ADC
   7:Generated_Source\PSoC5/ADC.c **** *  Component.
   8:Generated_Source\PSoC5/ADC.c **** *
   9:Generated_Source\PSoC5/ADC.c **** * Note:
  10:Generated_Source\PSoC5/ADC.c **** *
  11:Generated_Source\PSoC5/ADC.c **** ********************************************************************************
  12:Generated_Source\PSoC5/ADC.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC5/ADC.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC5/ADC.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC5/ADC.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
  17:Generated_Source\PSoC5/ADC.c **** 
  18:Generated_Source\PSoC5/ADC.c **** #include "ADC.h"
  19:Generated_Source\PSoC5/ADC.c **** 
  20:Generated_Source\PSoC5/ADC.c **** #if(ADC_DEFAULT_INTERNAL_CLK)
  21:Generated_Source\PSoC5/ADC.c ****     #include "ADC_theACLK.h"
  22:Generated_Source\PSoC5/ADC.c **** #endif /* ADC_DEFAULT_INTERNAL_CLK */
  23:Generated_Source\PSoC5/ADC.c **** 
  24:Generated_Source\PSoC5/ADC.c **** #include "ADC_Ext_CP_Clk.h"
  25:Generated_Source\PSoC5/ADC.c **** 
  26:Generated_Source\PSoC5/ADC.c **** #if(ADC_DEFAULT_INPUT_MODE)
  27:Generated_Source\PSoC5/ADC.c ****     #include "ADC_AMux.h"
  28:Generated_Source\PSoC5/ADC.c **** #endif /* ADC_DEFAULT_INPUT_MODE */
  29:Generated_Source\PSoC5/ADC.c **** 
  30:Generated_Source\PSoC5/ADC.c **** 
  31:Generated_Source\PSoC5/ADC.c **** /***************************************
  32:Generated_Source\PSoC5/ADC.c **** * Global data allocation
  33:Generated_Source\PSoC5/ADC.c **** ***************************************/
  34:Generated_Source\PSoC5/ADC.c **** 
  35:Generated_Source\PSoC5/ADC.c **** /* Software flag for checking conversion completed or not */
  36:Generated_Source\PSoC5/ADC.c **** volatile uint8 ADC_convDone = 0u;
  37:Generated_Source\PSoC5/ADC.c **** 
  38:Generated_Source\PSoC5/ADC.c **** /* Software flag to stop conversion for single sample conversion mode
  39:Generated_Source\PSoC5/ADC.c **** *   with resolution above 16 bits 
  40:Generated_Source\PSoC5/ADC.c **** */
  41:Generated_Source\PSoC5/ADC.c **** volatile uint8 ADC_stopConversion = 0u;
  42:Generated_Source\PSoC5/ADC.c **** 
  43:Generated_Source\PSoC5/ADC.c **** /* To run the initialization block only at the start up */
  44:Generated_Source\PSoC5/ADC.c **** uint8 ADC_initVar = 0u;
  45:Generated_Source\PSoC5/ADC.c **** 
  46:Generated_Source\PSoC5/ADC.c **** /* To check whether ADC started or not before switching the configuration */
  47:Generated_Source\PSoC5/ADC.c **** volatile uint8 ADC_started = 0u;
  48:Generated_Source\PSoC5/ADC.c **** 
  49:Generated_Source\PSoC5/ADC.c **** /* Flag to hold ADC config number. By default active config is 1. */
  50:Generated_Source\PSoC5/ADC.c **** volatile uint8 ADC_Config = 1u;
  51:Generated_Source\PSoC5/ADC.c **** 
  52:Generated_Source\PSoC5/ADC.c **** volatile int32 ADC_Offset;
  53:Generated_Source\PSoC5/ADC.c **** volatile int32 ADC_CountsPerVolt;
  54:Generated_Source\PSoC5/ADC.c **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cccSVp0l.s 			page 3


  55:Generated_Source\PSoC5/ADC.c **** 
  56:Generated_Source\PSoC5/ADC.c **** /***************************************
  57:Generated_Source\PSoC5/ADC.c **** * Local data allocation
  58:Generated_Source\PSoC5/ADC.c **** ***************************************/
  59:Generated_Source\PSoC5/ADC.c **** 
  60:Generated_Source\PSoC5/ADC.c **** /* The array with precalculated gain compensation coefficients */
  61:Generated_Source\PSoC5/ADC.c **** static ADC_GCOR_STRUCT ADC_gcor[ADC_DEFAULT_NUM_CONFIGS];
  62:Generated_Source\PSoC5/ADC.c **** 
  63:Generated_Source\PSoC5/ADC.c **** 
  64:Generated_Source\PSoC5/ADC.c **** 
  65:Generated_Source\PSoC5/ADC.c **** /***************************************
  66:Generated_Source\PSoC5/ADC.c **** * Forward function references
  67:Generated_Source\PSoC5/ADC.c **** ***************************************/
  68:Generated_Source\PSoC5/ADC.c **** static void ADC_InitConfig(uint8 config) ;
  69:Generated_Source\PSoC5/ADC.c **** static void ADC_GainCompensation(uint8 inputRange, uint16 idealDecGain, uint16 idealOddDecGain, 
  70:Generated_Source\PSoC5/ADC.c ****                             uint8 resolution, uint8 config) ;
  71:Generated_Source\PSoC5/ADC.c **** static void ADC_SetDSMRef0Reg(uint8 value) ;
  72:Generated_Source\PSoC5/ADC.c **** 
  73:Generated_Source\PSoC5/ADC.c **** 
  74:Generated_Source\PSoC5/ADC.c **** /******************************************************************************
  75:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_Init
  76:Generated_Source\PSoC5/ADC.c **** *******************************************************************************
  77:Generated_Source\PSoC5/ADC.c **** *
  78:Generated_Source\PSoC5/ADC.c **** * Summary:
  79:Generated_Source\PSoC5/ADC.c **** *  Initialize component's parameters to the parameters set by user in the
  80:Generated_Source\PSoC5/ADC.c **** *  customizer of the component placed onto schematic. Usually called in
  81:Generated_Source\PSoC5/ADC.c **** * ADC_Start().
  82:Generated_Source\PSoC5/ADC.c **** *
  83:Generated_Source\PSoC5/ADC.c **** *
  84:Generated_Source\PSoC5/ADC.c **** * Parameters:
  85:Generated_Source\PSoC5/ADC.c **** *  None
  86:Generated_Source\PSoC5/ADC.c **** *
  87:Generated_Source\PSoC5/ADC.c **** * Return:
  88:Generated_Source\PSoC5/ADC.c **** *  None
  89:Generated_Source\PSoC5/ADC.c **** *
  90:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
  91:Generated_Source\PSoC5/ADC.c **** void ADC_Init(void) 
  92:Generated_Source\PSoC5/ADC.c **** {
  61              		.loc 1 92 0
  62              		.cfi_startproc
  63              		@ args = 0, pretend = 0, frame = 0
  64              		@ frame_needed = 1, uses_anonymous_args = 0
  65 0000 80B5     		push	{r7, lr}
  66              		.cfi_def_cfa_offset 8
  67              		.cfi_offset 7, -8
  68              		.cfi_offset 14, -4
  69 0002 82B0     		sub	sp, sp, #8
  70              		.cfi_def_cfa_offset 16
  71 0004 02AF     		add	r7, sp, #8
  72              		.cfi_def_cfa 7, 8
  93:Generated_Source\PSoC5/ADC.c **** 
  94:Generated_Source\PSoC5/ADC.c ****     ADC_Config = 1u;
  73              		.loc 1 94 0
  74 0006 324B     		ldr	r3, .L2
  75 0008 0122     		movs	r2, #1
  76 000a 1A70     		strb	r2, [r3]
  95:Generated_Source\PSoC5/ADC.c ****     ADC_convDone = 0u;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cccSVp0l.s 			page 4


  77              		.loc 1 95 0
  78 000c 314B     		ldr	r3, .L2+4
  79 000e 0022     		movs	r2, #0
  80 0010 1A70     		strb	r2, [r3]
  96:Generated_Source\PSoC5/ADC.c **** 
  97:Generated_Source\PSoC5/ADC.c ****     ADC_Ext_CP_Clk_SetMode(CYCLK_DUTY);
  81              		.loc 1 97 0
  82 0012 1020     		movs	r0, #16
  83 0014 FFF7FEFF 		bl	ADC_Ext_CP_Clk_SetModeRegister
  98:Generated_Source\PSoC5/ADC.c **** 
  99:Generated_Source\PSoC5/ADC.c ****     /* This is only valid if there is an internal clock */
 100:Generated_Source\PSoC5/ADC.c ****     #if(ADC_DEFAULT_INTERNAL_CLK)
 101:Generated_Source\PSoC5/ADC.c ****         ADC_theACLK_SetMode(CYCLK_DUTY);
  84              		.loc 1 101 0
  85 0018 1020     		movs	r0, #16
  86 001a FFF7FEFF 		bl	ADC_theACLK_SetModeRegister
 102:Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_DEFAULT_INTERNAL_CLK */
 103:Generated_Source\PSoC5/ADC.c **** 
 104:Generated_Source\PSoC5/ADC.c ****     #if(ADC_IRQ_REMOVE == 0u)
 105:Generated_Source\PSoC5/ADC.c ****         /* Set interrupt priority */
 106:Generated_Source\PSoC5/ADC.c ****         CyIntSetPriority(ADC_INTC_NUMBER, ADC_INTC_PRIOR_NUMBER);
  87              		.loc 1 106 0
  88 001e 0721     		movs	r1, #7
  89 0020 1D20     		movs	r0, #29
  90 0022 FFF7FEFF 		bl	CyIntSetPriority
 107:Generated_Source\PSoC5/ADC.c ****     #endif   /* End ADC_IRQ_REMOVE */
 108:Generated_Source\PSoC5/ADC.c **** 
 109:Generated_Source\PSoC5/ADC.c ****     /* Init static registers with common configuration */
 110:Generated_Source\PSoC5/ADC.c ****     ADC_DSM_DEM0_REG    = ADC_CFG1_DSM_DEM0;
  91              		.loc 1 110 0
  92 0026 2C4B     		ldr	r3, .L2+8
  93 0028 0422     		movs	r2, #4
  94 002a 1A70     		strb	r2, [r3]
 111:Generated_Source\PSoC5/ADC.c ****     ADC_DSM_DEM1_REG    = ADC_CFG1_DSM_DEM1;
  95              		.loc 1 111 0
  96 002c 2B4B     		ldr	r3, .L2+12
  97 002e 0022     		movs	r2, #0
  98 0030 1A70     		strb	r2, [r3]
 112:Generated_Source\PSoC5/ADC.c ****     ADC_DSM_MISC_REG    = ADC_CFG1_DSM_MISC;
  99              		.loc 1 112 0
 100 0032 2B4B     		ldr	r3, .L2+16
 101 0034 0022     		movs	r2, #0
 102 0036 1A70     		strb	r2, [r3]
 113:Generated_Source\PSoC5/ADC.c ****     ADC_DSM_CLK_REG    |= ADC_CFG1_DSM_CLK;
 103              		.loc 1 113 0
 104 0038 2A4A     		ldr	r2, .L2+20
 105 003a 2A4B     		ldr	r3, .L2+20
 106 003c 1B78     		ldrb	r3, [r3]
 107 003e DBB2     		uxtb	r3, r3
 108 0040 43F01803 		orr	r3, r3, #24
 109 0044 DBB2     		uxtb	r3, r3
 110 0046 1370     		strb	r3, [r2]
 114:Generated_Source\PSoC5/ADC.c ****     ADC_DSM_REF1_REG    = ADC_CFG1_DSM_REF1;
 111              		.loc 1 114 0
 112 0048 274B     		ldr	r3, .L2+24
 113 004a 0022     		movs	r2, #0
 114 004c 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cccSVp0l.s 			page 5


 115:Generated_Source\PSoC5/ADC.c **** 
 116:Generated_Source\PSoC5/ADC.c ****     ADC_DSM_OUT0_REG    = ADC_CFG1_DSM_OUT0;
 115              		.loc 1 116 0
 116 004e 274B     		ldr	r3, .L2+28
 117 0050 0022     		movs	r2, #0
 118 0052 1A70     		strb	r2, [r3]
 117:Generated_Source\PSoC5/ADC.c ****     ADC_DSM_OUT1_REG    = ADC_CFG1_DSM_OUT1;
 119              		.loc 1 117 0
 120 0054 264B     		ldr	r3, .L2+32
 121 0056 0022     		movs	r2, #0
 122 0058 1A70     		strb	r2, [r3]
 118:Generated_Source\PSoC5/ADC.c **** 
 119:Generated_Source\PSoC5/ADC.c ****     ADC_DSM_CR0_REG     = ADC_CFG1_DSM_CR0;
 123              		.loc 1 119 0
 124 005a 264B     		ldr	r3, .L2+36
 125 005c 0A22     		movs	r2, #10
 126 005e 1A70     		strb	r2, [r3]
 120:Generated_Source\PSoC5/ADC.c ****     ADC_DSM_CR1_REG     = ADC_CFG1_DSM_CR1;
 127              		.loc 1 120 0
 128 0060 254B     		ldr	r3, .L2+40
 129 0062 0022     		movs	r2, #0
 130 0064 1A70     		strb	r2, [r3]
 121:Generated_Source\PSoC5/ADC.c **** #if(ADC_MI_ENABLE != 0u) /* Enable Modulator Input */
 122:Generated_Source\PSoC5/ADC.c ****     ADC_DSM_CR3_REG     |= ADC_DSM_MODBIT_EN;
 123:Generated_Source\PSoC5/ADC.c **** #else
 124:Generated_Source\PSoC5/ADC.c ****     ADC_DSM_CR3_REG     = ADC_CFG1_DSM_CR3;
 131              		.loc 1 124 0
 132 0066 254B     		ldr	r3, .L2+44
 133 0068 0022     		movs	r2, #0
 134 006a 1A70     		strb	r2, [r3]
 125:Generated_Source\PSoC5/ADC.c **** #endif /* ADC_MI_ENABLE != 0u*/    
 126:Generated_Source\PSoC5/ADC.c ****     ADC_DSM_CR8_REG     = ADC_CFG1_DSM_CR8;
 135              		.loc 1 126 0
 136 006c 244B     		ldr	r3, .L2+48
 137 006e 1222     		movs	r2, #18
 138 0070 1A70     		strb	r2, [r3]
 127:Generated_Source\PSoC5/ADC.c ****     ADC_DSM_CR9_REG     = ADC_CFG1_DSM_CR9;
 139              		.loc 1 127 0
 140 0072 244B     		ldr	r3, .L2+52
 141 0074 1322     		movs	r2, #19
 142 0076 1A70     		strb	r2, [r3]
 128:Generated_Source\PSoC5/ADC.c ****     ADC_DSM_CR13_REG    = ADC_CFG1_DSM_CR13;
 143              		.loc 1 128 0
 144 0078 234B     		ldr	r3, .L2+56
 145 007a 0022     		movs	r2, #0
 146 007c 1A70     		strb	r2, [r3]
 129:Generated_Source\PSoC5/ADC.c **** 
 130:Generated_Source\PSoC5/ADC.c ****     ADC_DEC_SR_REG      = ADC_CFG1_DEC_SR;
 147              		.loc 1 130 0
 148 007e 234B     		ldr	r3, .L2+60
 149 0080 1422     		movs	r2, #20
 150 0082 1A70     		strb	r2, [r3]
 131:Generated_Source\PSoC5/ADC.c **** 
 132:Generated_Source\PSoC5/ADC.c ****     /* Calculate Gain compensation coefficients for all configurations */
 133:Generated_Source\PSoC5/ADC.c ****     ADC_GainCompensation(ADC_CFG1_INPUT_RANGE,
 151              		.loc 1 133 0
 152 0084 0123     		movs	r3, #1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cccSVp0l.s 			page 6


 153 0086 0093     		str	r3, [sp]
 154 0088 0C23     		movs	r3, #12
 155 008a 4FF40042 		mov	r2, #32768
 156 008e 48F66B51 		movw	r1, #36203
 157 0092 0220     		movs	r0, #2
 158 0094 FFF7FEFF 		bl	ADC_GainCompensation
 134:Generated_Source\PSoC5/ADC.c ****                                       ADC_CFG1_IDEAL_DEC_GAIN,
 135:Generated_Source\PSoC5/ADC.c ****                                       ADC_CFG1_IDEAL_ODDDEC_GAIN,
 136:Generated_Source\PSoC5/ADC.c ****                                       ADC_CFG1_RESOLUTION,
 137:Generated_Source\PSoC5/ADC.c ****                                       ADC_CFG1);
 138:Generated_Source\PSoC5/ADC.c ****     #if(ADC_DEFAULT_NUM_CONFIGS > 1)
 139:Generated_Source\PSoC5/ADC.c ****         ADC_GainCompensation(ADC_CFG2_INPUT_RANGE,
 140:Generated_Source\PSoC5/ADC.c ****                                           ADC_CFG2_IDEAL_DEC_GAIN,
 141:Generated_Source\PSoC5/ADC.c ****                                           ADC_CFG2_IDEAL_ODDDEC_GAIN,
 142:Generated_Source\PSoC5/ADC.c ****                                           ADC_CFG2_RESOLUTION,
 143:Generated_Source\PSoC5/ADC.c ****                                           ADC_CFG2);
 144:Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_DEFAULT_NUM_CONFIGS > 1 */
 145:Generated_Source\PSoC5/ADC.c ****     #if(ADC_DEFAULT_NUM_CONFIGS > 2)
 146:Generated_Source\PSoC5/ADC.c ****         ADC_GainCompensation(ADC_CFG3_INPUT_RANGE,
 147:Generated_Source\PSoC5/ADC.c ****                                           ADC_CFG3_IDEAL_DEC_GAIN,
 148:Generated_Source\PSoC5/ADC.c ****                                           ADC_CFG3_IDEAL_ODDDEC_GAIN,
 149:Generated_Source\PSoC5/ADC.c ****                                           ADC_CFG3_RESOLUTION,
 150:Generated_Source\PSoC5/ADC.c ****                                           ADC_CFG3);
 151:Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_DEFAULT_NUM_CONFIGS > 2 */
 152:Generated_Source\PSoC5/ADC.c ****     #if(ADC_DEFAULT_NUM_CONFIGS > 3)
 153:Generated_Source\PSoC5/ADC.c ****         ADC_GainCompensation(ADC_CFG4_INPUT_RANGE,
 154:Generated_Source\PSoC5/ADC.c ****                                           ADC_CFG4_IDEAL_DEC_GAIN,
 155:Generated_Source\PSoC5/ADC.c ****                                           ADC_CFG4_IDEAL_ODDDEC_GAIN,
 156:Generated_Source\PSoC5/ADC.c ****                                           ADC_CFG4_RESOLUTION,
 157:Generated_Source\PSoC5/ADC.c ****                                           ADC_CFG4);
 158:Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_DEFAULT_NUM_CONFIGS > 3 */
 159:Generated_Source\PSoC5/ADC.c **** 
 160:Generated_Source\PSoC5/ADC.c ****     /* Set GCOR register for config1 */
 161:Generated_Source\PSoC5/ADC.c ****     ADC_DEC_GVAL_REG = ADC_gcor[ADC_Config - 1u].gval;
 159              		.loc 1 161 0
 160 0098 1D4A     		ldr	r2, .L2+64
 161 009a 0D4B     		ldr	r3, .L2
 162 009c 1B78     		ldrb	r3, [r3]
 163 009e DBB2     		uxtb	r3, r3
 164 00a0 013B     		subs	r3, r3, #1
 165 00a2 1C49     		ldr	r1, .L2+68
 166 00a4 9B00     		lsls	r3, r3, #2
 167 00a6 0B44     		add	r3, r3, r1
 168 00a8 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 169 00aa 1370     		strb	r3, [r2]
 162:Generated_Source\PSoC5/ADC.c ****     CY_SET_REG16(ADC_DEC_GCOR_16B_PTR, ADC_gcor[ADC_Config - 1u].gcor);
 170              		.loc 1 162 0
 171 00ac 1A4A     		ldr	r2, .L2+72
 172 00ae 084B     		ldr	r3, .L2
 173 00b0 1B78     		ldrb	r3, [r3]
 174 00b2 DBB2     		uxtb	r3, r3
 175 00b4 013B     		subs	r3, r3, #1
 176 00b6 1749     		ldr	r1, .L2+68
 177 00b8 31F82330 		ldrh	r3, [r1, r3, lsl #2]
 178 00bc 1380     		strh	r3, [r2]	@ movhi
 163:Generated_Source\PSoC5/ADC.c **** 
 164:Generated_Source\PSoC5/ADC.c ****     /* Initialize the registers with default customizer settings for config1 */
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cccSVp0l.s 			page 7


 165:Generated_Source\PSoC5/ADC.c ****     ADC_InitConfig(ADC_Config);
 179              		.loc 1 165 0
 180 00be 044B     		ldr	r3, .L2
 181 00c0 1B78     		ldrb	r3, [r3]
 182 00c2 DBB2     		uxtb	r3, r3
 183 00c4 1846     		mov	r0, r3
 184 00c6 FFF7FEFF 		bl	ADC_InitConfig
 166:Generated_Source\PSoC5/ADC.c **** }
 185              		.loc 1 166 0
 186 00ca 00BF     		nop
 187 00cc BD46     		mov	sp, r7
 188              		.cfi_def_cfa_register 13
 189              		@ sp needed
 190 00ce 80BD     		pop	{r7, pc}
 191              	.L3:
 192              		.align	2
 193              	.L2:
 194 00d0 00000000 		.word	ADC_Config
 195 00d4 00000000 		.word	ADC_convDone
 196 00d8 96580040 		.word	1073764502
 197 00dc 97580040 		.word	1073764503
 198 00e0 9E580040 		.word	1073764510
 199 00e4 075B0040 		.word	1073765127
 200 00e8 93580040 		.word	1073764499
 201 00ec 885B0040 		.word	1073765256
 202 00f0 895B0040 		.word	1073765257
 203 00f4 80580040 		.word	1073764480
 204 00f8 81580040 		.word	1073764481
 205 00fc 83580040 		.word	1073764483
 206 0100 88580040 		.word	1073764488
 207 0104 89580040 		.word	1073764489
 208 0108 8D580040 		.word	1073764493
 209 010c 014E0040 		.word	1073761793
 210 0110 0E4E0040 		.word	1073761806
 211 0114 04000000 		.word	ADC_gcor
 212 0118 0C4E0040 		.word	1073761804
 213              		.cfi_endproc
 214              	.LFE0:
 215              		.size	ADC_Init, .-ADC_Init
 216              		.section	.text.ADC_Enable,"ax",%progbits
 217              		.align	2
 218              		.global	ADC_Enable
 219              		.thumb
 220              		.thumb_func
 221              		.type	ADC_Enable, %function
 222              	ADC_Enable:
 223              	.LFB1:
 167:Generated_Source\PSoC5/ADC.c **** 
 168:Generated_Source\PSoC5/ADC.c **** 
 169:Generated_Source\PSoC5/ADC.c **** /******************************************************************************
 170:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_Enable
 171:Generated_Source\PSoC5/ADC.c **** *******************************************************************************
 172:Generated_Source\PSoC5/ADC.c **** *
 173:Generated_Source\PSoC5/ADC.c **** * Summary:
 174:Generated_Source\PSoC5/ADC.c **** *  Enables the ADC DelSig block operation.
 175:Generated_Source\PSoC5/ADC.c **** *
 176:Generated_Source\PSoC5/ADC.c **** *
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cccSVp0l.s 			page 8


 177:Generated_Source\PSoC5/ADC.c **** * Parameters:
 178:Generated_Source\PSoC5/ADC.c **** *  None
 179:Generated_Source\PSoC5/ADC.c **** *
 180:Generated_Source\PSoC5/ADC.c **** * Return:
 181:Generated_Source\PSoC5/ADC.c **** *  None
 182:Generated_Source\PSoC5/ADC.c **** *
 183:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 184:Generated_Source\PSoC5/ADC.c **** void ADC_Enable(void) 
 185:Generated_Source\PSoC5/ADC.c **** {
 224              		.loc 1 185 0
 225              		.cfi_startproc
 226              		@ args = 0, pretend = 0, frame = 8
 227              		@ frame_needed = 1, uses_anonymous_args = 0
 228 0000 80B5     		push	{r7, lr}
 229              		.cfi_def_cfa_offset 8
 230              		.cfi_offset 7, -8
 231              		.cfi_offset 14, -4
 232 0002 82B0     		sub	sp, sp, #8
 233              		.cfi_def_cfa_offset 16
 234 0004 00AF     		add	r7, sp, #0
 235              		.cfi_def_cfa_register 7
 186:Generated_Source\PSoC5/ADC.c **** 	uint8 config;
 187:Generated_Source\PSoC5/ADC.c ****     uint8 enableInterrupts;
 188:Generated_Source\PSoC5/ADC.c ****     enableInterrupts = CyEnterCriticalSection();
 236              		.loc 1 188 0
 237 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 238 000a 0346     		mov	r3, r0
 239 000c FB71     		strb	r3, [r7, #7]
 189:Generated_Source\PSoC5/ADC.c **** 
 190:Generated_Source\PSoC5/ADC.c ****     /* Read volatile variable to the local variable */
 191:Generated_Source\PSoC5/ADC.c ****     config = ADC_Config;
 240              		.loc 1 191 0
 241 000e 444B     		ldr	r3, .L5
 242 0010 1B78     		ldrb	r3, [r3]
 243 0012 BB71     		strb	r3, [r7, #6]
 192:Generated_Source\PSoC5/ADC.c ****     
 193:Generated_Source\PSoC5/ADC.c ****     /* Enable active mode power for ADC */
 194:Generated_Source\PSoC5/ADC.c ****     ADC_PWRMGR_DEC_REG |= ADC_ACT_PWR_DEC_EN;
 244              		.loc 1 194 0
 245 0014 434A     		ldr	r2, .L5+4
 246 0016 434B     		ldr	r3, .L5+4
 247 0018 1B78     		ldrb	r3, [r3]
 248 001a DBB2     		uxtb	r3, r3
 249 001c 43F00103 		orr	r3, r3, #1
 250 0020 DBB2     		uxtb	r3, r3
 251 0022 1370     		strb	r3, [r2]
 195:Generated_Source\PSoC5/ADC.c ****     ADC_PWRMGR_DSM_REG |= ADC_ACT_PWR_DSM_EN;
 252              		.loc 1 195 0
 253 0024 3F4A     		ldr	r2, .L5+4
 254 0026 3F4B     		ldr	r3, .L5+4
 255 0028 1B78     		ldrb	r3, [r3]
 256 002a DBB2     		uxtb	r3, r3
 257 002c 43F01003 		orr	r3, r3, #16
 258 0030 DBB2     		uxtb	r3, r3
 259 0032 1370     		strb	r3, [r2]
 196:Generated_Source\PSoC5/ADC.c **** 
 197:Generated_Source\PSoC5/ADC.c ****      /* Enable alternative active mode power for ADC */
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cccSVp0l.s 			page 9


 198:Generated_Source\PSoC5/ADC.c ****     ADC_STBY_PWRMGR_DEC_REG |= ADC_STBY_PWR_DEC_EN;
 260              		.loc 1 198 0
 261 0034 3C4A     		ldr	r2, .L5+8
 262 0036 3C4B     		ldr	r3, .L5+8
 263 0038 1B78     		ldrb	r3, [r3]
 264 003a DBB2     		uxtb	r3, r3
 265 003c 43F00103 		orr	r3, r3, #1
 266 0040 DBB2     		uxtb	r3, r3
 267 0042 1370     		strb	r3, [r2]
 199:Generated_Source\PSoC5/ADC.c ****     ADC_STBY_PWRMGR_DSM_REG |= ADC_STBY_PWR_DSM_EN;
 268              		.loc 1 199 0
 269 0044 384A     		ldr	r2, .L5+8
 270 0046 384B     		ldr	r3, .L5+8
 271 0048 1B78     		ldrb	r3, [r3]
 272 004a DBB2     		uxtb	r3, r3
 273 004c 43F01003 		orr	r3, r3, #16
 274 0050 DBB2     		uxtb	r3, r3
 275 0052 1370     		strb	r3, [r2]
 200:Generated_Source\PSoC5/ADC.c **** 
 201:Generated_Source\PSoC5/ADC.c ****     /* Disable PRES, Enable power to VCMBUF0, REFBUF0 and REFBUF1, enable PRES */
 202:Generated_Source\PSoC5/ADC.c ****     ADC_RESET_CR4_REG |= ADC_IGNORE_PRESA1;
 276              		.loc 1 202 0
 277 0054 354A     		ldr	r2, .L5+12
 278 0056 354B     		ldr	r3, .L5+12
 279 0058 1B78     		ldrb	r3, [r3]
 280 005a DBB2     		uxtb	r3, r3
 281 005c 43F00203 		orr	r3, r3, #2
 282 0060 DBB2     		uxtb	r3, r3
 283 0062 1370     		strb	r3, [r2]
 203:Generated_Source\PSoC5/ADC.c ****     ADC_RESET_CR5_REG |= ADC_IGNORE_PRESA2;
 284              		.loc 1 203 0
 285 0064 324A     		ldr	r2, .L5+16
 286 0066 324B     		ldr	r3, .L5+16
 287 0068 1B78     		ldrb	r3, [r3]
 288 006a DBB2     		uxtb	r3, r3
 289 006c 43F00203 		orr	r3, r3, #2
 290 0070 DBB2     		uxtb	r3, r3
 291 0072 1370     		strb	r3, [r2]
 204:Generated_Source\PSoC5/ADC.c **** 
 205:Generated_Source\PSoC5/ADC.c ****     ADC_DSM_CR17_REG |= (ADC_DSM_EN_BUF_VREF | ADC_DSM_EN_BUF_VCM);
 292              		.loc 1 205 0
 293 0074 2F4A     		ldr	r2, .L5+20
 294 0076 2F4B     		ldr	r3, .L5+20
 295 0078 1B78     		ldrb	r3, [r3]
 296 007a DBB2     		uxtb	r3, r3
 297 007c 43F00303 		orr	r3, r3, #3
 298 0080 DBB2     		uxtb	r3, r3
 299 0082 1370     		strb	r3, [r2]
 206:Generated_Source\PSoC5/ADC.c **** 
 207:Generated_Source\PSoC5/ADC.c ****     /* Code to disable the REFBUF0 if reference chosen is External ref */
 208:Generated_Source\PSoC5/ADC.c ****     #if (((ADC_CFG1_REFERENCE == ADC_EXT_REF_ON_P03) || \
 209:Generated_Source\PSoC5/ADC.c ****           (ADC_CFG1_REFERENCE == ADC_EXT_REF_ON_P32)) || \
 210:Generated_Source\PSoC5/ADC.c ****          ((ADC_DEFAULT_NUM_CONFIGS > 1) && \
 211:Generated_Source\PSoC5/ADC.c ****           ((ADC_CFG2_REFERENCE == ADC_EXT_REF_ON_P03) ||  \
 212:Generated_Source\PSoC5/ADC.c ****            (ADC_CFG2_REFERENCE == ADC_EXT_REF_ON_P32))) || \
 213:Generated_Source\PSoC5/ADC.c ****          ((ADC_DEFAULT_NUM_CONFIGS > 2) && \
 214:Generated_Source\PSoC5/ADC.c ****           ((ADC_CFG3_REFERENCE == ADC_EXT_REF_ON_P03) ||  \
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cccSVp0l.s 			page 10


 215:Generated_Source\PSoC5/ADC.c ****            (ADC_CFG3_REFERENCE == ADC_EXT_REF_ON_P32))) || \
 216:Generated_Source\PSoC5/ADC.c ****          ((ADC_DEFAULT_NUM_CONFIGS > 3) && \
 217:Generated_Source\PSoC5/ADC.c ****           ((ADC_CFG4_REFERENCE == ADC_EXT_REF_ON_P03) || \
 218:Generated_Source\PSoC5/ADC.c ****            (ADC_CFG4_REFERENCE == ADC_EXT_REF_ON_P32))))
 219:Generated_Source\PSoC5/ADC.c ****         if (((config == 1u) &&
 220:Generated_Source\PSoC5/ADC.c ****             ((ADC_CFG1_REFERENCE == ADC_EXT_REF_ON_P03) ||
 221:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG1_REFERENCE == ADC_EXT_REF_ON_P32))) ||
 222:Generated_Source\PSoC5/ADC.c ****             ((config == 2u) &&
 223:Generated_Source\PSoC5/ADC.c ****             ((ADC_CFG2_REFERENCE == ADC_EXT_REF_ON_P03) ||
 224:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG2_REFERENCE == ADC_EXT_REF_ON_P32))) ||
 225:Generated_Source\PSoC5/ADC.c ****             ((config == 3u) &&
 226:Generated_Source\PSoC5/ADC.c ****             ((ADC_CFG3_REFERENCE == ADC_EXT_REF_ON_P03) ||
 227:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG3_REFERENCE == ADC_EXT_REF_ON_P32))) ||
 228:Generated_Source\PSoC5/ADC.c ****             ((config == 4u) &&
 229:Generated_Source\PSoC5/ADC.c ****             ((ADC_CFG4_REFERENCE == ADC_EXT_REF_ON_P03) ||
 230:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG4_REFERENCE == ADC_EXT_REF_ON_P32))))
 231:Generated_Source\PSoC5/ADC.c ****         {
 232:Generated_Source\PSoC5/ADC.c ****             /* Disable the REFBUF0 */
 233:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR17_REG &= (uint8)~ADC_DSM_EN_BUF_VREF;
 234:Generated_Source\PSoC5/ADC.c ****         }
 235:Generated_Source\PSoC5/ADC.c ****     #endif /* External ref */
 236:Generated_Source\PSoC5/ADC.c **** 
 237:Generated_Source\PSoC5/ADC.c ****     #if (((ADC_CFG1_INPUT_RANGE == ADC_IR_VSSA_TO_2VREF) || \
 238:Generated_Source\PSoC5/ADC.c ****          ((ADC_DEFAULT_NUM_CONFIGS > 1) && \
 239:Generated_Source\PSoC5/ADC.c ****           (ADC_CFG2_INPUT_RANGE == ADC_IR_VSSA_TO_2VREF)) || \
 240:Generated_Source\PSoC5/ADC.c ****          ((ADC_DEFAULT_NUM_CONFIGS > 2) && \
 241:Generated_Source\PSoC5/ADC.c ****           (ADC_CFG3_INPUT_RANGE == ADC_IR_VSSA_TO_2VREF)) || \
 242:Generated_Source\PSoC5/ADC.c ****          ((ADC_DEFAULT_NUM_CONFIGS > 3) && \
 243:Generated_Source\PSoC5/ADC.c ****           (ADC_CFG4_INPUT_RANGE == ADC_IR_VSSA_TO_2VREF))))
 244:Generated_Source\PSoC5/ADC.c ****         if(((config == 1u) &&
 245:Generated_Source\PSoC5/ADC.c ****             (ADC_CFG1_INPUT_RANGE == ADC_IR_VSSA_TO_2VREF) &&
 246:Generated_Source\PSoC5/ADC.c ****             ((ADC_CFG1_REFERENCE != ADC_EXT_REF_ON_P03) &&
 247:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG1_REFERENCE != ADC_EXT_REF_ON_P32))) ||
 248:Generated_Source\PSoC5/ADC.c ****              ((config == 2u) &&
 249:Generated_Source\PSoC5/ADC.c ****               (ADC_CFG2_INPUT_RANGE == ADC_IR_VSSA_TO_2VREF) &&
 250:Generated_Source\PSoC5/ADC.c ****              ((ADC_CFG2_REFERENCE != ADC_EXT_REF_ON_P03) &&
 251:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG2_REFERENCE != ADC_EXT_REF_ON_P32))) ||
 252:Generated_Source\PSoC5/ADC.c ****              ((config == 3u) &&
 253:Generated_Source\PSoC5/ADC.c ****               (ADC_CFG3_INPUT_RANGE == ADC_IR_VSSA_TO_2VREF) &&
 254:Generated_Source\PSoC5/ADC.c ****              ((ADC_CFG3_REFERENCE != ADC_EXT_REF_ON_P03) &&
 255:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG3_REFERENCE != ADC_EXT_REF_ON_P32))) ||
 256:Generated_Source\PSoC5/ADC.c ****              ((config == 4u) &&
 257:Generated_Source\PSoC5/ADC.c ****               (ADC_CFG4_INPUT_RANGE == ADC_IR_VSSA_TO_2VREF) &&
 258:Generated_Source\PSoC5/ADC.c ****              ((ADC_CFG4_REFERENCE != ADC_EXT_REF_ON_P03) &&
 259:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG4_REFERENCE != ADC_EXT_REF_ON_P32))))
 260:Generated_Source\PSoC5/ADC.c ****         {
 261:Generated_Source\PSoC5/ADC.c ****             /* Enable the REFBUF1 */
 262:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_REF0_REG |= ADC_DSM_EN_BUF_VREF_INN;
 263:Generated_Source\PSoC5/ADC.c ****         }
 264:Generated_Source\PSoC5/ADC.c ****     #endif /* VSSA_TO_2VREF */
 265:Generated_Source\PSoC5/ADC.c ****     if(config != 0u)
 266:Generated_Source\PSoC5/ADC.c ****     {
 267:Generated_Source\PSoC5/ADC.c ****         /* Suppress compiler warning */
 268:Generated_Source\PSoC5/ADC.c ****     }
 269:Generated_Source\PSoC5/ADC.c **** 
 270:Generated_Source\PSoC5/ADC.c ****     /* Wait for 3 microseconds */
 271:Generated_Source\PSoC5/ADC.c ****     CyDelayUs(ADC_PRES_DELAY_TIME);
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cccSVp0l.s 			page 11


 300              		.loc 1 271 0
 301 0084 0320     		movs	r0, #3
 302 0086 FFF7FEFF 		bl	CyDelayUs
 272:Generated_Source\PSoC5/ADC.c **** 
 273:Generated_Source\PSoC5/ADC.c ****     /* Enable the press circuit */
 274:Generated_Source\PSoC5/ADC.c ****     ADC_RESET_CR4_REG &= (uint8)~ADC_IGNORE_PRESA1;
 303              		.loc 1 274 0
 304 008a 284A     		ldr	r2, .L5+12
 305 008c 274B     		ldr	r3, .L5+12
 306 008e 1B78     		ldrb	r3, [r3]
 307 0090 DBB2     		uxtb	r3, r3
 308 0092 23F00203 		bic	r3, r3, #2
 309 0096 DBB2     		uxtb	r3, r3
 310 0098 1370     		strb	r3, [r2]
 275:Generated_Source\PSoC5/ADC.c ****     ADC_RESET_CR5_REG &= (uint8)~ADC_IGNORE_PRESA2;
 311              		.loc 1 275 0
 312 009a 254A     		ldr	r2, .L5+16
 313 009c 244B     		ldr	r3, .L5+16
 314 009e 1B78     		ldrb	r3, [r3]
 315 00a0 DBB2     		uxtb	r3, r3
 316 00a2 23F00203 		bic	r3, r3, #2
 317 00a6 DBB2     		uxtb	r3, r3
 318 00a8 1370     		strb	r3, [r2]
 276:Generated_Source\PSoC5/ADC.c **** 
 277:Generated_Source\PSoC5/ADC.c ****     /* Enable negative pumps for DSM  */
 278:Generated_Source\PSoC5/ADC.c ****     ADC_PUMP_CR1_REG  |= ( ADC_PUMP_CR1_CLKSEL | ADC_PUMP_CR1_FORCE );
 319              		.loc 1 278 0
 320 00aa 234A     		ldr	r2, .L5+24
 321 00ac 224B     		ldr	r3, .L5+24
 322 00ae 1B78     		ldrb	r3, [r3]
 323 00b0 DBB2     		uxtb	r3, r3
 324 00b2 43F00603 		orr	r3, r3, #6
 325 00b6 DBB2     		uxtb	r3, r3
 326 00b8 1370     		strb	r3, [r2]
 279:Generated_Source\PSoC5/ADC.c **** 
 280:Generated_Source\PSoC5/ADC.c ****     /* Enable Modulator Chopping if required */
 281:Generated_Source\PSoC5/ADC.c ****     ADC_DSM_CR2_REG = ADC_CFG1_DSM_CR2;
 327              		.loc 1 281 0
 328 00ba 204B     		ldr	r3, .L5+28
 329 00bc 7A22     		movs	r2, #122
 330 00be 1A70     		strb	r2, [r3]
 282:Generated_Source\PSoC5/ADC.c **** 
 283:Generated_Source\PSoC5/ADC.c ****     /* This is only valid if there is an internal clock */
 284:Generated_Source\PSoC5/ADC.c ****     #if(ADC_DEFAULT_INTERNAL_CLK)
 285:Generated_Source\PSoC5/ADC.c ****         ADC_PWRMGR_CLK_REG |= ADC_ACT_PWR_CLK_EN;
 331              		.loc 1 285 0
 332 00c0 1F4A     		ldr	r2, .L5+32
 333 00c2 1F4B     		ldr	r3, .L5+32
 334 00c4 1B78     		ldrb	r3, [r3]
 335 00c6 DBB2     		uxtb	r3, r3
 336 00c8 43F00103 		orr	r3, r3, #1
 337 00cc DBB2     		uxtb	r3, r3
 338 00ce 1370     		strb	r3, [r2]
 286:Generated_Source\PSoC5/ADC.c ****         ADC_STBY_PWRMGR_CLK_REG |= ADC_STBY_PWR_CLK_EN;
 339              		.loc 1 286 0
 340 00d0 1C4A     		ldr	r2, .L5+36
 341 00d2 1C4B     		ldr	r3, .L5+36
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cccSVp0l.s 			page 12


 342 00d4 1B78     		ldrb	r3, [r3]
 343 00d6 DBB2     		uxtb	r3, r3
 344 00d8 43F00103 		orr	r3, r3, #1
 345 00dc DBB2     		uxtb	r3, r3
 346 00de 1370     		strb	r3, [r2]
 287:Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_DEFAULT_INTERNAL_CLK */
 288:Generated_Source\PSoC5/ADC.c **** 
 289:Generated_Source\PSoC5/ADC.c ****     /* Enable the active and alternate active power for charge pump clock */
 290:Generated_Source\PSoC5/ADC.c ****     ADC_PWRMGR_CHARGE_PUMP_CLK_REG |= ADC_ACT_PWR_CHARGE_PUMP_CLK_EN;
 347              		.loc 1 290 0
 348 00e0 194A     		ldr	r2, .L5+40
 349 00e2 194B     		ldr	r3, .L5+40
 350 00e4 1B78     		ldrb	r3, [r3]
 351 00e6 DBB2     		uxtb	r3, r3
 352 00e8 43F00403 		orr	r3, r3, #4
 353 00ec DBB2     		uxtb	r3, r3
 354 00ee 1370     		strb	r3, [r2]
 291:Generated_Source\PSoC5/ADC.c ****     ADC_STBY_PWRMGR_CHARGE_PUMP_CLK_REG |= ADC_STBY_PWR_CHARGE_PUMP_CLK_EN;
 355              		.loc 1 291 0
 356 00f0 164A     		ldr	r2, .L5+44
 357 00f2 164B     		ldr	r3, .L5+44
 358 00f4 1B78     		ldrb	r3, [r3]
 359 00f6 DBB2     		uxtb	r3, r3
 360 00f8 43F00403 		orr	r3, r3, #4
 361 00fc DBB2     		uxtb	r3, r3
 362 00fe 1370     		strb	r3, [r2]
 292:Generated_Source\PSoC5/ADC.c **** 
 293:Generated_Source\PSoC5/ADC.c ****     #if(ADC_IRQ_REMOVE == 0u)
 294:Generated_Source\PSoC5/ADC.c ****         /* Clear a pending interrupt */
 295:Generated_Source\PSoC5/ADC.c ****         CyIntClearPending(ADC_INTC_NUMBER);
 363              		.loc 1 295 0
 364 0100 134B     		ldr	r3, .L5+48
 365 0102 4FF00052 		mov	r2, #536870912
 366 0106 1A60     		str	r2, [r3]
 296:Generated_Source\PSoC5/ADC.c ****         /* Enable interrupt */
 297:Generated_Source\PSoC5/ADC.c ****         CyIntEnable(ADC_INTC_NUMBER);
 367              		.loc 1 297 0
 368 0108 124B     		ldr	r3, .L5+52
 369 010a 4FF00052 		mov	r2, #536870912
 370 010e 1A60     		str	r2, [r3]
 298:Generated_Source\PSoC5/ADC.c ****     #endif   /* End ADC_IRQ_REMOVE */
 299:Generated_Source\PSoC5/ADC.c **** 
 300:Generated_Source\PSoC5/ADC.c ****     CyExitCriticalSection(enableInterrupts);
 371              		.loc 1 300 0
 372 0110 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 373 0112 1846     		mov	r0, r3
 374 0114 FFF7FEFF 		bl	CyExitCriticalSection
 301:Generated_Source\PSoC5/ADC.c **** 
 302:Generated_Source\PSoC5/ADC.c **** }
 375              		.loc 1 302 0
 376 0118 00BF     		nop
 377 011a 0837     		adds	r7, r7, #8
 378              		.cfi_def_cfa_offset 8
 379 011c BD46     		mov	sp, r7
 380              		.cfi_def_cfa_register 13
 381              		@ sp needed
 382 011e 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cccSVp0l.s 			page 13


 383              	.L6:
 384              		.align	2
 385              	.L5:
 386 0120 00000000 		.word	ADC_Config
 387 0124 AA430040 		.word	1073759146
 388 0128 BA430040 		.word	1073759162
 389 012c F8460040 		.word	1073759992
 390 0130 F9460040 		.word	1073759993
 391 0134 91580040 		.word	1073764497
 392 0138 77580040 		.word	1073764471
 393 013c 82580040 		.word	1073764482
 394 0140 A1430040 		.word	1073759137
 395 0144 B1430040 		.word	1073759153
 396 0148 A2430040 		.word	1073759138
 397 014c B2430040 		.word	1073759154
 398 0150 80E200E0 		.word	-536812928
 399 0154 00E100E0 		.word	-536813312
 400              		.cfi_endproc
 401              	.LFE1:
 402              		.size	ADC_Enable, .-ADC_Enable
 403              		.section	.text.ADC_Start,"ax",%progbits
 404              		.align	2
 405              		.global	ADC_Start
 406              		.thumb
 407              		.thumb_func
 408              		.type	ADC_Start, %function
 409              	ADC_Start:
 410              	.LFB2:
 303:Generated_Source\PSoC5/ADC.c **** 
 304:Generated_Source\PSoC5/ADC.c **** 
 305:Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
 306:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_Start
 307:Generated_Source\PSoC5/ADC.c **** ********************************************************************************
 308:Generated_Source\PSoC5/ADC.c **** *
 309:Generated_Source\PSoC5/ADC.c **** * Summary:
 310:Generated_Source\PSoC5/ADC.c **** *  Performs all required initialization for this component and enables
 311:Generated_Source\PSoC5/ADC.c **** *  the power. It configure all the register the first time it is called.
 312:Generated_Source\PSoC5/ADC.c **** *  Subsequent calls of the Start function only enable the ADC and turn
 313:Generated_Source\PSoC5/ADC.c **** *  on the power. If multiple configurations are selected, it will
 314:Generated_Source\PSoC5/ADC.c **** *  configure the ADC for configuration 1 by default, unless the
 315:Generated_Source\PSoC5/ADC.c **** *  ADC_SelectConfiguration( ) function has been called to change
 316:Generated_Source\PSoC5/ADC.c **** *  the default setting.
 317:Generated_Source\PSoC5/ADC.c **** *
 318:Generated_Source\PSoC5/ADC.c **** * Parameters:
 319:Generated_Source\PSoC5/ADC.c **** *  None
 320:Generated_Source\PSoC5/ADC.c **** *
 321:Generated_Source\PSoC5/ADC.c **** * Return:
 322:Generated_Source\PSoC5/ADC.c **** *  None
 323:Generated_Source\PSoC5/ADC.c **** *
 324:Generated_Source\PSoC5/ADC.c **** * Global variables:
 325:Generated_Source\PSoC5/ADC.c **** *  ADC_initVar:  Used to check the initial configuration,
 326:Generated_Source\PSoC5/ADC.c **** *  modified when this function is called for the first time.
 327:Generated_Source\PSoC5/ADC.c **** *
 328:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 329:Generated_Source\PSoC5/ADC.c **** void ADC_Start(void) 
 330:Generated_Source\PSoC5/ADC.c **** {
 411              		.loc 1 330 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cccSVp0l.s 			page 14


 412              		.cfi_startproc
 413              		@ args = 0, pretend = 0, frame = 0
 414              		@ frame_needed = 1, uses_anonymous_args = 0
 415 0000 80B5     		push	{r7, lr}
 416              		.cfi_def_cfa_offset 8
 417              		.cfi_offset 7, -8
 418              		.cfi_offset 14, -4
 419 0002 00AF     		add	r7, sp, #0
 420              		.cfi_def_cfa_register 7
 331:Generated_Source\PSoC5/ADC.c ****     if(ADC_initVar == 0u)
 421              		.loc 1 331 0
 422 0004 084B     		ldr	r3, .L10
 423 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 424 0008 002B     		cmp	r3, #0
 425 000a 09D1     		bne	.L8
 332:Generated_Source\PSoC5/ADC.c ****     {
 333:Generated_Source\PSoC5/ADC.c ****         if(ADC_started == 0u)
 426              		.loc 1 333 0
 427 000c 074B     		ldr	r3, .L10+4
 428 000e 1B78     		ldrb	r3, [r3]
 429 0010 DBB2     		uxtb	r3, r3
 430 0012 002B     		cmp	r3, #0
 431 0014 01D1     		bne	.L9
 334:Generated_Source\PSoC5/ADC.c ****         {
 335:Generated_Source\PSoC5/ADC.c ****             ADC_Init();
 432              		.loc 1 335 0
 433 0016 FFF7FEFF 		bl	ADC_Init
 434              	.L9:
 336:Generated_Source\PSoC5/ADC.c ****         }
 337:Generated_Source\PSoC5/ADC.c ****         ADC_initVar = 1u;
 435              		.loc 1 337 0
 436 001a 034B     		ldr	r3, .L10
 437 001c 0122     		movs	r2, #1
 438 001e 1A70     		strb	r2, [r3]
 439              	.L8:
 338:Generated_Source\PSoC5/ADC.c ****     }
 339:Generated_Source\PSoC5/ADC.c **** 
 340:Generated_Source\PSoC5/ADC.c ****     /* Enable the ADC */
 341:Generated_Source\PSoC5/ADC.c ****     ADC_Enable();
 440              		.loc 1 341 0
 441 0020 FFF7FEFF 		bl	ADC_Enable
 342:Generated_Source\PSoC5/ADC.c **** }
 442              		.loc 1 342 0
 443 0024 00BF     		nop
 444 0026 80BD     		pop	{r7, pc}
 445              	.L11:
 446              		.align	2
 447              	.L10:
 448 0028 00000000 		.word	ADC_initVar
 449 002c 00000000 		.word	ADC_started
 450              		.cfi_endproc
 451              	.LFE2:
 452              		.size	ADC_Start, .-ADC_Start
 453              		.section	.text.ADC_Stop,"ax",%progbits
 454              		.align	2
 455              		.global	ADC_Stop
 456              		.thumb
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cccSVp0l.s 			page 15


 457              		.thumb_func
 458              		.type	ADC_Stop, %function
 459              	ADC_Stop:
 460              	.LFB3:
 343:Generated_Source\PSoC5/ADC.c **** 
 344:Generated_Source\PSoC5/ADC.c **** 
 345:Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
 346:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_Stop
 347:Generated_Source\PSoC5/ADC.c **** ********************************************************************************
 348:Generated_Source\PSoC5/ADC.c **** *
 349:Generated_Source\PSoC5/ADC.c **** * Summary:
 350:Generated_Source\PSoC5/ADC.c **** *  This function stops and powers down the ADC component and the internal
 351:Generated_Source\PSoC5/ADC.c **** *  clock if the external clock is not selected. If an external clock is
 352:Generated_Source\PSoC5/ADC.c **** *  used, it is up to the designer to power down the external clock it
 353:Generated_Source\PSoC5/ADC.c **** *  required.
 354:Generated_Source\PSoC5/ADC.c **** *
 355:Generated_Source\PSoC5/ADC.c **** * Parameters:
 356:Generated_Source\PSoC5/ADC.c **** *  None
 357:Generated_Source\PSoC5/ADC.c **** *
 358:Generated_Source\PSoC5/ADC.c **** * Return:
 359:Generated_Source\PSoC5/ADC.c **** *  None
 360:Generated_Source\PSoC5/ADC.c **** *
 361:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 362:Generated_Source\PSoC5/ADC.c **** void ADC_Stop(void) 
 363:Generated_Source\PSoC5/ADC.c **** {
 461              		.loc 1 363 0
 462              		.cfi_startproc
 463              		@ args = 0, pretend = 0, frame = 8
 464              		@ frame_needed = 1, uses_anonymous_args = 0
 465 0000 80B5     		push	{r7, lr}
 466              		.cfi_def_cfa_offset 8
 467              		.cfi_offset 7, -8
 468              		.cfi_offset 14, -4
 469 0002 82B0     		sub	sp, sp, #8
 470              		.cfi_def_cfa_offset 16
 471 0004 00AF     		add	r7, sp, #0
 472              		.cfi_def_cfa_register 7
 364:Generated_Source\PSoC5/ADC.c ****     uint8 enableInterrupts;
 365:Generated_Source\PSoC5/ADC.c ****     enableInterrupts = CyEnterCriticalSection();
 473              		.loc 1 365 0
 474 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 475 000a 0346     		mov	r3, r0
 476 000c FB71     		strb	r3, [r7, #7]
 366:Generated_Source\PSoC5/ADC.c **** 
 367:Generated_Source\PSoC5/ADC.c ****     /* Stop conversions */
 368:Generated_Source\PSoC5/ADC.c ****     ADC_DEC_CR_REG &= (uint8)~ADC_DEC_START_CONV;
 477              		.loc 1 368 0
 478 000e 4D4A     		ldr	r2, .L13
 479 0010 4C4B     		ldr	r3, .L13
 480 0012 1B78     		ldrb	r3, [r3]
 481 0014 DBB2     		uxtb	r3, r3
 482 0016 23F00103 		bic	r3, r3, #1
 483 001a DBB2     		uxtb	r3, r3
 484 001c 1370     		strb	r3, [r2]
 369:Generated_Source\PSoC5/ADC.c ****     ADC_DEC_SR_REG |=  ADC_DEC_INTR_CLEAR;
 485              		.loc 1 369 0
 486 001e 4A4A     		ldr	r2, .L13+4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cccSVp0l.s 			page 16


 487 0020 494B     		ldr	r3, .L13+4
 488 0022 1B78     		ldrb	r3, [r3]
 489 0024 DBB2     		uxtb	r3, r3
 490 0026 43F00403 		orr	r3, r3, #4
 491 002a DBB2     		uxtb	r3, r3
 492 002c 1370     		strb	r3, [r2]
 370:Generated_Source\PSoC5/ADC.c **** 
 371:Generated_Source\PSoC5/ADC.c ****     /* Disable PRES, Disable power to VCMBUF0, REFBUF0 and REFBUF1,
 372:Generated_Source\PSoC5/ADC.c ****        enable PRES */
 373:Generated_Source\PSoC5/ADC.c ****     ADC_RESET_CR4_REG |= ADC_IGNORE_PRESA1;
 493              		.loc 1 373 0
 494 002e 474A     		ldr	r2, .L13+8
 495 0030 464B     		ldr	r3, .L13+8
 496 0032 1B78     		ldrb	r3, [r3]
 497 0034 DBB2     		uxtb	r3, r3
 498 0036 43F00203 		orr	r3, r3, #2
 499 003a DBB2     		uxtb	r3, r3
 500 003c 1370     		strb	r3, [r2]
 374:Generated_Source\PSoC5/ADC.c ****     ADC_RESET_CR5_REG |= ADC_IGNORE_PRESA2;
 501              		.loc 1 374 0
 502 003e 444A     		ldr	r2, .L13+12
 503 0040 434B     		ldr	r3, .L13+12
 504 0042 1B78     		ldrb	r3, [r3]
 505 0044 DBB2     		uxtb	r3, r3
 506 0046 43F00203 		orr	r3, r3, #2
 507 004a DBB2     		uxtb	r3, r3
 508 004c 1370     		strb	r3, [r2]
 375:Generated_Source\PSoC5/ADC.c **** 
 376:Generated_Source\PSoC5/ADC.c ****     ADC_DSM_CR17_REG &= (uint8)~(ADC_DSM_EN_BUF_VREF | ADC_DSM_EN_BUF_VCM);
 509              		.loc 1 376 0
 510 004e 414A     		ldr	r2, .L13+16
 511 0050 404B     		ldr	r3, .L13+16
 512 0052 1B78     		ldrb	r3, [r3]
 513 0054 DBB2     		uxtb	r3, r3
 514 0056 23F00303 		bic	r3, r3, #3
 515 005a DBB2     		uxtb	r3, r3
 516 005c 1370     		strb	r3, [r2]
 377:Generated_Source\PSoC5/ADC.c ****     ADC_DSM_REF0_REG &= (uint8)~ADC_DSM_EN_BUF_VREF_INN;
 517              		.loc 1 377 0
 518 005e 3E4A     		ldr	r2, .L13+20
 519 0060 3D4B     		ldr	r3, .L13+20
 520 0062 1B78     		ldrb	r3, [r3]
 521 0064 DBB2     		uxtb	r3, r3
 522 0066 23F00803 		bic	r3, r3, #8
 523 006a DBB2     		uxtb	r3, r3
 524 006c 1370     		strb	r3, [r2]
 378:Generated_Source\PSoC5/ADC.c **** 
 379:Generated_Source\PSoC5/ADC.c ****     /* Wait for 3 microseconds. */
 380:Generated_Source\PSoC5/ADC.c ****     CyDelayUs(ADC_PRES_DELAY_TIME);
 525              		.loc 1 380 0
 526 006e 0320     		movs	r0, #3
 527 0070 FFF7FEFF 		bl	CyDelayUs
 381:Generated_Source\PSoC5/ADC.c **** 
 382:Generated_Source\PSoC5/ADC.c ****     /* Enable the press circuit */
 383:Generated_Source\PSoC5/ADC.c ****     ADC_RESET_CR4_REG &= (uint8)~ADC_IGNORE_PRESA1;
 528              		.loc 1 383 0
 529 0074 354A     		ldr	r2, .L13+8
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cccSVp0l.s 			page 17


 530 0076 354B     		ldr	r3, .L13+8
 531 0078 1B78     		ldrb	r3, [r3]
 532 007a DBB2     		uxtb	r3, r3
 533 007c 23F00203 		bic	r3, r3, #2
 534 0080 DBB2     		uxtb	r3, r3
 535 0082 1370     		strb	r3, [r2]
 384:Generated_Source\PSoC5/ADC.c ****     ADC_RESET_CR5_REG &= (uint8)~ADC_IGNORE_PRESA2;
 536              		.loc 1 384 0
 537 0084 324A     		ldr	r2, .L13+12
 538 0086 324B     		ldr	r3, .L13+12
 539 0088 1B78     		ldrb	r3, [r3]
 540 008a DBB2     		uxtb	r3, r3
 541 008c 23F00203 		bic	r3, r3, #2
 542 0090 DBB2     		uxtb	r3, r3
 543 0092 1370     		strb	r3, [r2]
 385:Generated_Source\PSoC5/ADC.c **** 
 386:Generated_Source\PSoC5/ADC.c ****     /* Disable power to the ADC */
 387:Generated_Source\PSoC5/ADC.c ****     ADC_PWRMGR_DSM_REG &= (uint8)~ADC_ACT_PWR_DSM_EN;
 544              		.loc 1 387 0
 545 0094 314A     		ldr	r2, .L13+24
 546 0096 314B     		ldr	r3, .L13+24
 547 0098 1B78     		ldrb	r3, [r3]
 548 009a DBB2     		uxtb	r3, r3
 549 009c 23F01003 		bic	r3, r3, #16
 550 00a0 DBB2     		uxtb	r3, r3
 551 00a2 1370     		strb	r3, [r2]
 388:Generated_Source\PSoC5/ADC.c **** 
 389:Generated_Source\PSoC5/ADC.c ****     /* Disable power to Decimator block */
 390:Generated_Source\PSoC5/ADC.c ****     ADC_PWRMGR_DEC_REG &= (uint8)~ADC_ACT_PWR_DEC_EN;
 552              		.loc 1 390 0
 553 00a4 2D4A     		ldr	r2, .L13+24
 554 00a6 2D4B     		ldr	r3, .L13+24
 555 00a8 1B78     		ldrb	r3, [r3]
 556 00aa DBB2     		uxtb	r3, r3
 557 00ac 23F00103 		bic	r3, r3, #1
 558 00b0 DBB2     		uxtb	r3, r3
 559 00b2 1370     		strb	r3, [r2]
 391:Generated_Source\PSoC5/ADC.c **** 
 392:Generated_Source\PSoC5/ADC.c ****     /* Disable alternative active power to the ADC */
 393:Generated_Source\PSoC5/ADC.c ****     ADC_STBY_PWRMGR_DEC_REG &= (uint8)~ADC_STBY_PWR_DEC_EN;
 560              		.loc 1 393 0
 561 00b4 2A4A     		ldr	r2, .L13+28
 562 00b6 2A4B     		ldr	r3, .L13+28
 563 00b8 1B78     		ldrb	r3, [r3]
 564 00ba DBB2     		uxtb	r3, r3
 565 00bc 23F00103 		bic	r3, r3, #1
 566 00c0 DBB2     		uxtb	r3, r3
 567 00c2 1370     		strb	r3, [r2]
 394:Generated_Source\PSoC5/ADC.c ****     ADC_STBY_PWRMGR_DSM_REG &= (uint8)~ADC_STBY_PWR_DSM_EN;
 568              		.loc 1 394 0
 569 00c4 264A     		ldr	r2, .L13+28
 570 00c6 264B     		ldr	r3, .L13+28
 571 00c8 1B78     		ldrb	r3, [r3]
 572 00ca DBB2     		uxtb	r3, r3
 573 00cc 23F01003 		bic	r3, r3, #16
 574 00d0 DBB2     		uxtb	r3, r3
 575 00d2 1370     		strb	r3, [r2]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cccSVp0l.s 			page 18


 395:Generated_Source\PSoC5/ADC.c **** 
 396:Generated_Source\PSoC5/ADC.c ****    /* Disable negative pumps for DSM  */
 397:Generated_Source\PSoC5/ADC.c ****     ADC_PUMP_CR1_REG &= (uint8)~(ADC_PUMP_CR1_CLKSEL | ADC_PUMP_CR1_FORCE );
 576              		.loc 1 397 0
 577 00d4 234A     		ldr	r2, .L13+32
 578 00d6 234B     		ldr	r3, .L13+32
 579 00d8 1B78     		ldrb	r3, [r3]
 580 00da DBB2     		uxtb	r3, r3
 581 00dc 23F00603 		bic	r3, r3, #6
 582 00e0 DBB2     		uxtb	r3, r3
 583 00e2 1370     		strb	r3, [r2]
 398:Generated_Source\PSoC5/ADC.c **** 
 399:Generated_Source\PSoC5/ADC.c ****     /* This is only valid if there is an internal clock */
 400:Generated_Source\PSoC5/ADC.c ****     #if(ADC_DEFAULT_INTERNAL_CLK)
 401:Generated_Source\PSoC5/ADC.c ****         ADC_PWRMGR_CLK_REG &= (uint8)~ADC_ACT_PWR_CLK_EN;
 584              		.loc 1 401 0
 585 00e4 204A     		ldr	r2, .L13+36
 586 00e6 204B     		ldr	r3, .L13+36
 587 00e8 1B78     		ldrb	r3, [r3]
 588 00ea DBB2     		uxtb	r3, r3
 589 00ec 23F00103 		bic	r3, r3, #1
 590 00f0 DBB2     		uxtb	r3, r3
 591 00f2 1370     		strb	r3, [r2]
 402:Generated_Source\PSoC5/ADC.c ****         ADC_STBY_PWRMGR_CLK_REG &= (uint8)~ADC_STBY_PWR_CLK_EN;
 592              		.loc 1 402 0
 593 00f4 1D4A     		ldr	r2, .L13+40
 594 00f6 1D4B     		ldr	r3, .L13+40
 595 00f8 1B78     		ldrb	r3, [r3]
 596 00fa DBB2     		uxtb	r3, r3
 597 00fc 23F00103 		bic	r3, r3, #1
 598 0100 DBB2     		uxtb	r3, r3
 599 0102 1370     		strb	r3, [r2]
 403:Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_DEFAULT_INTERNAL_CLK */
 404:Generated_Source\PSoC5/ADC.c **** 
 405:Generated_Source\PSoC5/ADC.c ****     /* Disable Modulator Chopping */
 406:Generated_Source\PSoC5/ADC.c ****     ADC_DSM_CR2_REG &= (uint8)~ADC_DSM_MOD_CHOP_EN;
 600              		.loc 1 406 0
 601 0104 1A4A     		ldr	r2, .L13+44
 602 0106 1A4B     		ldr	r3, .L13+44
 603 0108 1B78     		ldrb	r3, [r3]
 604 010a DBB2     		uxtb	r3, r3
 605 010c 23F00803 		bic	r3, r3, #8
 606 0110 DBB2     		uxtb	r3, r3
 607 0112 1370     		strb	r3, [r2]
 407:Generated_Source\PSoC5/ADC.c ****     /* Disable power to charge pump clock */
 408:Generated_Source\PSoC5/ADC.c ****     ADC_PWRMGR_CHARGE_PUMP_CLK_REG &= (uint8)~ADC_ACT_PWR_CHARGE_PUMP_CLK_EN;
 608              		.loc 1 408 0
 609 0114 174A     		ldr	r2, .L13+48
 610 0116 174B     		ldr	r3, .L13+48
 611 0118 1B78     		ldrb	r3, [r3]
 612 011a DBB2     		uxtb	r3, r3
 613 011c 23F00403 		bic	r3, r3, #4
 614 0120 DBB2     		uxtb	r3, r3
 615 0122 1370     		strb	r3, [r2]
 409:Generated_Source\PSoC5/ADC.c ****     ADC_STBY_PWRMGR_CHARGE_PUMP_CLK_REG &= (uint8)~ADC_STBY_PWR_CHARGE_PUMP_CLK_EN;
 616              		.loc 1 409 0
 617 0124 144A     		ldr	r2, .L13+52
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cccSVp0l.s 			page 19


 618 0126 144B     		ldr	r3, .L13+52
 619 0128 1B78     		ldrb	r3, [r3]
 620 012a DBB2     		uxtb	r3, r3
 621 012c 23F00403 		bic	r3, r3, #4
 622 0130 DBB2     		uxtb	r3, r3
 623 0132 1370     		strb	r3, [r2]
 410:Generated_Source\PSoC5/ADC.c ****     
 411:Generated_Source\PSoC5/ADC.c ****     CyExitCriticalSection(enableInterrupts);
 624              		.loc 1 411 0
 625 0134 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 626 0136 1846     		mov	r0, r3
 627 0138 FFF7FEFF 		bl	CyExitCriticalSection
 412:Generated_Source\PSoC5/ADC.c **** }
 628              		.loc 1 412 0
 629 013c 00BF     		nop
 630 013e 0837     		adds	r7, r7, #8
 631              		.cfi_def_cfa_offset 8
 632 0140 BD46     		mov	sp, r7
 633              		.cfi_def_cfa_register 13
 634              		@ sp needed
 635 0142 80BD     		pop	{r7, pc}
 636              	.L14:
 637              		.align	2
 638              	.L13:
 639 0144 004E0040 		.word	1073761792
 640 0148 014E0040 		.word	1073761793
 641 014c F8460040 		.word	1073759992
 642 0150 F9460040 		.word	1073759993
 643 0154 91580040 		.word	1073764497
 644 0158 92580040 		.word	1073764498
 645 015c AA430040 		.word	1073759146
 646 0160 BA430040 		.word	1073759162
 647 0164 77580040 		.word	1073764471
 648 0168 A1430040 		.word	1073759137
 649 016c B1430040 		.word	1073759153
 650 0170 82580040 		.word	1073764482
 651 0174 A2430040 		.word	1073759138
 652 0178 B2430040 		.word	1073759154
 653              		.cfi_endproc
 654              	.LFE3:
 655              		.size	ADC_Stop, .-ADC_Stop
 656              		.section	.text.ADC_SetBufferGain,"ax",%progbits
 657              		.align	2
 658              		.global	ADC_SetBufferGain
 659              		.thumb
 660              		.thumb_func
 661              		.type	ADC_SetBufferGain, %function
 662              	ADC_SetBufferGain:
 663              	.LFB4:
 413:Generated_Source\PSoC5/ADC.c **** 
 414:Generated_Source\PSoC5/ADC.c **** 
 415:Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
 416:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_SetBufferGain
 417:Generated_Source\PSoC5/ADC.c **** ********************************************************************************
 418:Generated_Source\PSoC5/ADC.c **** *
 419:Generated_Source\PSoC5/ADC.c **** * Summary:
 420:Generated_Source\PSoC5/ADC.c **** *  Sets input buffer gain.
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cccSVp0l.s 			page 20


 421:Generated_Source\PSoC5/ADC.c **** *
 422:Generated_Source\PSoC5/ADC.c **** * Parameters:
 423:Generated_Source\PSoC5/ADC.c **** *  gain:  Two bit value to select a gain of 1, 2, 4, or 8.
 424:Generated_Source\PSoC5/ADC.c **** *
 425:Generated_Source\PSoC5/ADC.c **** * Return:
 426:Generated_Source\PSoC5/ADC.c **** *  None
 427:Generated_Source\PSoC5/ADC.c **** *
 428:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 429:Generated_Source\PSoC5/ADC.c **** void ADC_SetBufferGain(uint8 gain) 
 430:Generated_Source\PSoC5/ADC.c **** {
 664              		.loc 1 430 0
 665              		.cfi_startproc
 666              		@ args = 0, pretend = 0, frame = 16
 667              		@ frame_needed = 1, uses_anonymous_args = 0
 668              		@ link register save eliminated.
 669 0000 80B4     		push	{r7}
 670              		.cfi_def_cfa_offset 4
 671              		.cfi_offset 7, -4
 672 0002 85B0     		sub	sp, sp, #20
 673              		.cfi_def_cfa_offset 24
 674 0004 00AF     		add	r7, sp, #0
 675              		.cfi_def_cfa_register 7
 676 0006 0346     		mov	r3, r0
 677 0008 FB71     		strb	r3, [r7, #7]
 431:Generated_Source\PSoC5/ADC.c ****     uint8 tmpReg;
 432:Generated_Source\PSoC5/ADC.c ****     tmpReg = ADC_DSM_BUF1_REG & (uint8)~ADC_DSM_GAIN_MASK;
 678              		.loc 1 432 0
 679 000a 0B4B     		ldr	r3, .L16
 680 000c 1B78     		ldrb	r3, [r3]
 681 000e DBB2     		uxtb	r3, r3
 682 0010 23F00C03 		bic	r3, r3, #12
 683 0014 FB73     		strb	r3, [r7, #15]
 433:Generated_Source\PSoC5/ADC.c ****     tmpReg |= (uint8)(gain << ADC_DSM_GAIN_SHIFT) & ADC_DSM_GAIN_MASK;
 684              		.loc 1 433 0
 685 0016 FB79     		ldrb	r3, [r7, #7]
 686 0018 9B00     		lsls	r3, r3, #2
 687 001a DBB2     		uxtb	r3, r3
 688 001c 03F00C03 		and	r3, r3, #12
 689 0020 DAB2     		uxtb	r2, r3
 690 0022 FB7B     		ldrb	r3, [r7, #15]
 691 0024 1343     		orrs	r3, r3, r2
 692 0026 FB73     		strb	r3, [r7, #15]
 434:Generated_Source\PSoC5/ADC.c ****     ADC_DSM_BUF1_REG = tmpReg;
 693              		.loc 1 434 0
 694 0028 034A     		ldr	r2, .L16
 695 002a FB7B     		ldrb	r3, [r7, #15]
 696 002c 1370     		strb	r3, [r2]
 435:Generated_Source\PSoC5/ADC.c **** }
 697              		.loc 1 435 0
 698 002e 00BF     		nop
 699 0030 1437     		adds	r7, r7, #20
 700              		.cfi_def_cfa_offset 4
 701 0032 BD46     		mov	sp, r7
 702              		.cfi_def_cfa_register 13
 703              		@ sp needed
 704 0034 80BC     		pop	{r7}
 705              		.cfi_restore 7
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cccSVp0l.s 			page 21


 706              		.cfi_def_cfa_offset 0
 707 0036 7047     		bx	lr
 708              	.L17:
 709              		.align	2
 710              	.L16:
 711 0038 9B580040 		.word	1073764507
 712              		.cfi_endproc
 713              	.LFE4:
 714              		.size	ADC_SetBufferGain, .-ADC_SetBufferGain
 715              		.section	.text.ADC_SetCoherency,"ax",%progbits
 716              		.align	2
 717              		.global	ADC_SetCoherency
 718              		.thumb
 719              		.thumb_func
 720              		.type	ADC_SetCoherency, %function
 721              	ADC_SetCoherency:
 722              	.LFB5:
 436:Generated_Source\PSoC5/ADC.c **** 
 437:Generated_Source\PSoC5/ADC.c **** 
 438:Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
 439:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_SetCoherency
 440:Generated_Source\PSoC5/ADC.c **** ********************************************************************************
 441:Generated_Source\PSoC5/ADC.c **** *
 442:Generated_Source\PSoC5/ADC.c **** * Summary:
 443:Generated_Source\PSoC5/ADC.c **** *  This function allows the user to change which of the ADC's 3 word
 444:Generated_Source\PSoC5/ADC.c **** *  result will trigger a coherency unlock. The ADC's result will not be
 445:Generated_Source\PSoC5/ADC.c **** *  updated until the set byte is read either by the ADC or DMA. 
 446:Generated_Source\PSoC5/ADC.c **** *  By default the LSB is the coherency byte for right alignment data format. 
 447:Generated_Source\PSoC5/ADC.c **** *  The middle or high byte is set automatically depend on left alignment 
 448:Generated_Source\PSoC5/ADC.c **** *  configuration for DMA data transfer.
 449:Generated_Source\PSoC5/ADC.c **** *  If DMA or if a custom API requires different byte to be read the last,
 450:Generated_Source\PSoC5/ADC.c **** *  this API should be used to set the last byte of the ADC result that is read. 
 451:Generated_Source\PSoC5/ADC.c **** *  If a multibyte read is performed either by DMA or the ARM processor, the
 452:Generated_Source\PSoC5/ADC.c **** *  coherency can be set to any byte in the last word read.
 453:Generated_Source\PSoC5/ADC.c **** *
 454:Generated_Source\PSoC5/ADC.c **** * Parameters:
 455:Generated_Source\PSoC5/ADC.c **** *  coherency:  Two bit value to set the coherency bit.
 456:Generated_Source\PSoC5/ADC.c **** *           00-Coherency checking off
 457:Generated_Source\PSoC5/ADC.c **** *           01-low byte is key byte
 458:Generated_Source\PSoC5/ADC.c **** *           02-middle byte is the key byte
 459:Generated_Source\PSoC5/ADC.c **** *           03-high byte is the key byte
 460:Generated_Source\PSoC5/ADC.c **** *
 461:Generated_Source\PSoC5/ADC.c **** * Return:
 462:Generated_Source\PSoC5/ADC.c **** *  None
 463:Generated_Source\PSoC5/ADC.c **** *
 464:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 465:Generated_Source\PSoC5/ADC.c **** void ADC_SetCoherency(uint8 coherency) 
 466:Generated_Source\PSoC5/ADC.c **** {
 723              		.loc 1 466 0
 724              		.cfi_startproc
 725              		@ args = 0, pretend = 0, frame = 16
 726              		@ frame_needed = 1, uses_anonymous_args = 0
 727              		@ link register save eliminated.
 728 0000 80B4     		push	{r7}
 729              		.cfi_def_cfa_offset 4
 730              		.cfi_offset 7, -4
 731 0002 85B0     		sub	sp, sp, #20
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cccSVp0l.s 			page 22


 732              		.cfi_def_cfa_offset 24
 733 0004 00AF     		add	r7, sp, #0
 734              		.cfi_def_cfa_register 7
 735 0006 0346     		mov	r3, r0
 736 0008 FB71     		strb	r3, [r7, #7]
 467:Generated_Source\PSoC5/ADC.c ****     uint8 tmpReg;
 468:Generated_Source\PSoC5/ADC.c **** 
 469:Generated_Source\PSoC5/ADC.c ****     tmpReg = ADC_DEC_COHER_REG & (uint8)~ADC_DEC_SAMP_KEY_MASK;
 737              		.loc 1 469 0
 738 000a 0A4B     		ldr	r3, .L19
 739 000c 1B78     		ldrb	r3, [r3]
 740 000e DBB2     		uxtb	r3, r3
 741 0010 23F00303 		bic	r3, r3, #3
 742 0014 FB73     		strb	r3, [r7, #15]
 470:Generated_Source\PSoC5/ADC.c ****     tmpReg |= coherency & ADC_DEC_SAMP_KEY_MASK;
 743              		.loc 1 470 0
 744 0016 FB79     		ldrb	r3, [r7, #7]
 745 0018 03F00303 		and	r3, r3, #3
 746 001c DAB2     		uxtb	r2, r3
 747 001e FB7B     		ldrb	r3, [r7, #15]
 748 0020 1343     		orrs	r3, r3, r2
 749 0022 FB73     		strb	r3, [r7, #15]
 471:Generated_Source\PSoC5/ADC.c ****     ADC_DEC_COHER_REG = tmpReg;
 750              		.loc 1 471 0
 751 0024 034A     		ldr	r2, .L19
 752 0026 FB7B     		ldrb	r3, [r7, #15]
 753 0028 1370     		strb	r3, [r2]
 472:Generated_Source\PSoC5/ADC.c **** }
 754              		.loc 1 472 0
 755 002a 00BF     		nop
 756 002c 1437     		adds	r7, r7, #20
 757              		.cfi_def_cfa_offset 4
 758 002e BD46     		mov	sp, r7
 759              		.cfi_def_cfa_register 13
 760              		@ sp needed
 761 0030 80BC     		pop	{r7}
 762              		.cfi_restore 7
 763              		.cfi_def_cfa_offset 0
 764 0032 7047     		bx	lr
 765              	.L20:
 766              		.align	2
 767              	.L19:
 768 0034 144E0040 		.word	1073761812
 769              		.cfi_endproc
 770              	.LFE5:
 771              		.size	ADC_SetCoherency, .-ADC_SetCoherency
 772              		.global	__aeabi_ui2f
 773              		.global	__aeabi_fdiv
 774              		.global	__aeabi_fmul
 775              		.global	__aeabi_f2d
 776              		.global	__aeabi_dcmpgt
 777              		.global	__aeabi_f2uiz
 778              		.section	.text.ADC_SetGCOR,"ax",%progbits
 779              		.align	2
 780              		.global	ADC_SetGCOR
 781              		.thumb
 782              		.thumb_func
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cccSVp0l.s 			page 23


 783              		.type	ADC_SetGCOR, %function
 784              	ADC_SetGCOR:
 785              	.LFB6:
 473:Generated_Source\PSoC5/ADC.c **** 
 474:Generated_Source\PSoC5/ADC.c **** 
 475:Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
 476:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_SetGCOR
 477:Generated_Source\PSoC5/ADC.c **** ********************************************************************************
 478:Generated_Source\PSoC5/ADC.c **** *
 479:Generated_Source\PSoC5/ADC.c **** * Summary:
 480:Generated_Source\PSoC5/ADC.c **** *  Calculates a new GCOR value and writes it into the GCOR register. 
 481:Generated_Source\PSoC5/ADC.c **** *  The GCOR value is a 16-bit value that represents a gain of 0 to 2. 
 482:Generated_Source\PSoC5/ADC.c **** *  The ADC result is multiplied by this value before it is placed in the ADC 
 483:Generated_Source\PSoC5/ADC.c **** *  output registers. The numerical format for the GCOR value is:
 484:Generated_Source\PSoC5/ADC.c **** *  0x0000 -> 0.000
 485:Generated_Source\PSoC5/ADC.c **** *  0x8000 -> 1.000
 486:Generated_Source\PSoC5/ADC.c **** *  0xFFFF -> 1.99997
 487:Generated_Source\PSoC5/ADC.c **** *  When executing the function, the old GCOR value is multiplied by
 488:Generated_Source\PSoC5/ADC.c **** *  gainAdjust and reloaded into the GCOR register.
 489:Generated_Source\PSoC5/ADC.c **** *
 490:Generated_Source\PSoC5/ADC.c **** * Parameters:
 491:Generated_Source\PSoC5/ADC.c **** *  gainAdjust:  floating point value to set GCOR registers.
 492:Generated_Source\PSoC5/ADC.c **** *
 493:Generated_Source\PSoC5/ADC.c **** * Return:
 494:Generated_Source\PSoC5/ADC.c **** *  uint8: 0 - if GCOR value is within the expected range.
 495:Generated_Source\PSoC5/ADC.c **** *         1 - the correction value is outside GCOR value range of
 496:Generated_Source\PSoC5/ADC.c **** *             0.00 to 1.9999.
 497:Generated_Source\PSoC5/ADC.c **** *
 498:Generated_Source\PSoC5/ADC.c **** * Side Effects:  The GVAL register is set to the amount of valid bits in the
 499:Generated_Source\PSoC5/ADC.c **** *                GCOR  register minus one. If GVAL is 15 (0x0F), all 16 bits
 500:Generated_Source\PSoC5/ADC.c **** *                of the GCOR registers will be valid. If for example GVAL is
 501:Generated_Source\PSoC5/ADC.c **** *                11 (0x0B) only 12 bits will be valid. The least 4 bits will
 502:Generated_Source\PSoC5/ADC.c **** *                be lost when the GCOR value is shifted 4 places to the right.
 503:Generated_Source\PSoC5/ADC.c **** *
 504:Generated_Source\PSoC5/ADC.c **** ******************************************************************************/
 505:Generated_Source\PSoC5/ADC.c **** uint8 ADC_SetGCOR(float32 gainAdjust) 
 506:Generated_Source\PSoC5/ADC.c **** {
 786              		.loc 1 506 0
 787              		.cfi_startproc
 788              		@ args = 0, pretend = 0, frame = 16
 789              		@ frame_needed = 1, uses_anonymous_args = 0
 790 0000 80B5     		push	{r7, lr}
 791              		.cfi_def_cfa_offset 8
 792              		.cfi_offset 7, -8
 793              		.cfi_offset 14, -4
 794 0002 84B0     		sub	sp, sp, #16
 795              		.cfi_def_cfa_offset 24
 796 0004 00AF     		add	r7, sp, #0
 797              		.cfi_def_cfa_register 7
 798 0006 7860     		str	r0, [r7, #4]	@ float
 507:Generated_Source\PSoC5/ADC.c ****     uint16 tmpReg;
 508:Generated_Source\PSoC5/ADC.c ****     uint8 status;
 509:Generated_Source\PSoC5/ADC.c ****     float32 tmpValue;
 510:Generated_Source\PSoC5/ADC.c **** 
 511:Generated_Source\PSoC5/ADC.c ****     tmpReg = ADC_gcor[ADC_Config - 1u].gcor;
 799              		.loc 1 511 0
 800 0008 254B     		ldr	r3, .L28+8
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cccSVp0l.s 			page 24


 801 000a 1B78     		ldrb	r3, [r3]
 802 000c DBB2     		uxtb	r3, r3
 803 000e 013B     		subs	r3, r3, #1
 804 0010 244A     		ldr	r2, .L28+12
 805 0012 32F82330 		ldrh	r3, [r2, r3, lsl #2]	@ movhi
 806 0016 BB81     		strh	r3, [r7, #12]	@ movhi
 512:Generated_Source\PSoC5/ADC.c ****     tmpValue = ((float32)tmpReg / (float32)ADC_IDEAL_GAIN_CONST);
 807              		.loc 1 512 0
 808 0018 BB89     		ldrh	r3, [r7, #12]
 809 001a 1846     		mov	r0, r3
 810 001c FFF7FEFF 		bl	__aeabi_ui2f
 811 0020 0346     		mov	r3, r0
 812 0022 4FF08E41 		mov	r1, #1191182336
 813 0026 1846     		mov	r0, r3
 814 0028 FFF7FEFF 		bl	__aeabi_fdiv
 815 002c 0346     		mov	r3, r0
 816 002e BB60     		str	r3, [r7, #8]	@ float
 513:Generated_Source\PSoC5/ADC.c ****     tmpValue = tmpValue * gainAdjust;
 817              		.loc 1 513 0
 818 0030 7968     		ldr	r1, [r7, #4]	@ float
 819 0032 B868     		ldr	r0, [r7, #8]	@ float
 820 0034 FFF7FEFF 		bl	__aeabi_fmul
 821 0038 0346     		mov	r3, r0
 822 003a BB60     		str	r3, [r7, #8]	@ float
 514:Generated_Source\PSoC5/ADC.c **** 
 515:Generated_Source\PSoC5/ADC.c ****     if (tmpValue > 1.9999)
 823              		.loc 1 515 0
 824 003c B868     		ldr	r0, [r7, #8]	@ float
 825 003e FFF7FEFF 		bl	__aeabi_f2d
 826 0042 15A3     		adr	r3, .L28
 827 0044 D3E90023 		ldrd	r2, [r3]
 828 0048 FFF7FEFF 		bl	__aeabi_dcmpgt
 829 004c 0346     		mov	r3, r0
 830 004e 002B     		cmp	r3, #0
 831 0050 02D0     		beq	.L27
 516:Generated_Source\PSoC5/ADC.c ****     {
 517:Generated_Source\PSoC5/ADC.c ****         status = 1u;
 832              		.loc 1 517 0
 833 0052 0123     		movs	r3, #1
 834 0054 FB73     		strb	r3, [r7, #15]
 835 0056 18E0     		b	.L24
 836              	.L27:
 518:Generated_Source\PSoC5/ADC.c ****     }
 519:Generated_Source\PSoC5/ADC.c ****     else
 520:Generated_Source\PSoC5/ADC.c ****     {
 521:Generated_Source\PSoC5/ADC.c ****         tmpValue *= (float32)ADC_IDEAL_GAIN_CONST;
 837              		.loc 1 521 0
 838 0058 4FF08E41 		mov	r1, #1191182336
 839 005c B868     		ldr	r0, [r7, #8]	@ float
 840 005e FFF7FEFF 		bl	__aeabi_fmul
 841 0062 0346     		mov	r3, r0
 842 0064 BB60     		str	r3, [r7, #8]	@ float
 522:Generated_Source\PSoC5/ADC.c **** 		tmpReg = (uint16)tmpValue;
 843              		.loc 1 522 0
 844 0066 B868     		ldr	r0, [r7, #8]	@ float
 845 0068 FFF7FEFF 		bl	__aeabi_f2uiz
 846 006c 0346     		mov	r3, r0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cccSVp0l.s 			page 25


 847 006e BB81     		strh	r3, [r7, #12]	@ movhi
 523:Generated_Source\PSoC5/ADC.c ****         CY_SET_REG16(ADC_DEC_GCOR_16B_PTR, tmpReg);
 848              		.loc 1 523 0
 849 0070 0D4A     		ldr	r2, .L28+16
 850 0072 BB89     		ldrh	r3, [r7, #12]	@ movhi
 851 0074 1380     		strh	r3, [r2]	@ movhi
 524:Generated_Source\PSoC5/ADC.c ****         /* Update gain array to be used by SelectConfiguration() API */
 525:Generated_Source\PSoC5/ADC.c ****        ADC_gcor[ADC_Config - 1u].gcor = tmpReg;
 852              		.loc 1 525 0
 853 0076 0A4B     		ldr	r3, .L28+8
 854 0078 1B78     		ldrb	r3, [r3]
 855 007a DBB2     		uxtb	r3, r3
 856 007c 013B     		subs	r3, r3, #1
 857 007e 0949     		ldr	r1, .L28+12
 858 0080 BA89     		ldrh	r2, [r7, #12]	@ movhi
 859 0082 21F82320 		strh	r2, [r1, r3, lsl #2]	@ movhi
 526:Generated_Source\PSoC5/ADC.c **** 
 527:Generated_Source\PSoC5/ADC.c ****         status = 0u;
 860              		.loc 1 527 0
 861 0086 0023     		movs	r3, #0
 862 0088 FB73     		strb	r3, [r7, #15]
 863              	.L24:
 528:Generated_Source\PSoC5/ADC.c **** 
 529:Generated_Source\PSoC5/ADC.c ****     }
 530:Generated_Source\PSoC5/ADC.c ****     return(status);
 864              		.loc 1 530 0
 865 008a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 531:Generated_Source\PSoC5/ADC.c **** }
 866              		.loc 1 531 0
 867 008c 1846     		mov	r0, r3
 868 008e 1037     		adds	r7, r7, #16
 869              		.cfi_def_cfa_offset 8
 870 0090 BD46     		mov	sp, r7
 871              		.cfi_def_cfa_register 13
 872              		@ sp needed
 873 0092 80BD     		pop	{r7, pc}
 874              	.L29:
 875 0094 AFF30080 		.align	3
 876              	.L28:
 877 0098 8F537424 		.word	611603343
 878 009c 97FFFF3F 		.word	1073741719
 879 00a0 00000000 		.word	ADC_Config
 880 00a4 04000000 		.word	ADC_gcor
 881 00a8 0C4E0040 		.word	1073761804
 882              		.cfi_endproc
 883              	.LFE6:
 884              		.size	ADC_SetGCOR, .-ADC_SetGCOR
 885              		.section	.text.ADC_ReadGCOR,"ax",%progbits
 886              		.align	2
 887              		.global	ADC_ReadGCOR
 888              		.thumb
 889              		.thumb_func
 890              		.type	ADC_ReadGCOR, %function
 891              	ADC_ReadGCOR:
 892              	.LFB7:
 532:Generated_Source\PSoC5/ADC.c **** 
 533:Generated_Source\PSoC5/ADC.c **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cccSVp0l.s 			page 26


 534:Generated_Source\PSoC5/ADC.c **** /******************************************************************************
 535:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_ReadGCOR
 536:Generated_Source\PSoC5/ADC.c **** *******************************************************************************
 537:Generated_Source\PSoC5/ADC.c **** *
 538:Generated_Source\PSoC5/ADC.c **** * Summary:
 539:Generated_Source\PSoC5/ADC.c **** *  This API returns the current GCOR register value, normalized based on the
 540:Generated_Source\PSoC5/ADC.c **** *  GVAL register settings.
 541:Generated_Source\PSoC5/ADC.c **** *  For example, if the GCOR value is 0x0812 and the GVAL register is set to 
 542:Generated_Source\PSoC5/ADC.c **** *  11 (0x0B) then the returned value will be shifted by for bits to the left.
 543:Generated_Source\PSoC5/ADC.c **** *  (Actual GCOR value = 0x0812, returned value = 0x8120)
 544:Generated_Source\PSoC5/ADC.c **** *
 545:Generated_Source\PSoC5/ADC.c **** * Parameters:
 546:Generated_Source\PSoC5/ADC.c **** *  None
 547:Generated_Source\PSoC5/ADC.c **** *
 548:Generated_Source\PSoC5/ADC.c **** * Return:
 549:Generated_Source\PSoC5/ADC.c **** *  uint16:  Normalized GCOR value.
 550:Generated_Source\PSoC5/ADC.c **** *
 551:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 552:Generated_Source\PSoC5/ADC.c **** uint16 ADC_ReadGCOR(void) 
 553:Generated_Source\PSoC5/ADC.c **** {
 893              		.loc 1 553 0
 894              		.cfi_startproc
 895              		@ args = 0, pretend = 0, frame = 8
 896              		@ frame_needed = 1, uses_anonymous_args = 0
 897              		@ link register save eliminated.
 898 0000 80B4     		push	{r7}
 899              		.cfi_def_cfa_offset 4
 900              		.cfi_offset 7, -4
 901 0002 83B0     		sub	sp, sp, #12
 902              		.cfi_def_cfa_offset 16
 903 0004 00AF     		add	r7, sp, #0
 904              		.cfi_def_cfa_register 7
 554:Generated_Source\PSoC5/ADC.c ****     uint8 gValue;
 555:Generated_Source\PSoC5/ADC.c ****     uint16 gcorValue;
 556:Generated_Source\PSoC5/ADC.c **** 
 557:Generated_Source\PSoC5/ADC.c ****     gValue = ADC_DEC_GVAL_REG;
 905              		.loc 1 557 0
 906 0006 0B4B     		ldr	r3, .L33
 907 0008 1B78     		ldrb	r3, [r3]
 908 000a 7B71     		strb	r3, [r7, #5]
 558:Generated_Source\PSoC5/ADC.c ****     gcorValue = CY_GET_REG16(ADC_DEC_GCOR_16B_PTR);
 909              		.loc 1 558 0
 910 000c 0A4B     		ldr	r3, .L33+4
 911 000e 1B88     		ldrh	r3, [r3]	@ movhi
 912 0010 FB80     		strh	r3, [r7, #6]	@ movhi
 559:Generated_Source\PSoC5/ADC.c **** 
 560:Generated_Source\PSoC5/ADC.c ****     if (gValue < ADC_MAX_GVAL)
 913              		.loc 1 560 0
 914 0012 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 915 0014 0E2B     		cmp	r3, #14
 916 0016 06D8     		bhi	.L31
 561:Generated_Source\PSoC5/ADC.c ****     {
 562:Generated_Source\PSoC5/ADC.c ****         gcorValue <<= ADC_MAX_GVAL - gValue;
 917              		.loc 1 562 0
 918 0018 FA88     		ldrh	r2, [r7, #6]
 919 001a 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 920 001c C3F10F03 		rsb	r3, r3, #15
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cccSVp0l.s 			page 27


 921 0020 02FA03F3 		lsl	r3, r2, r3
 922 0024 FB80     		strh	r3, [r7, #6]	@ movhi
 923              	.L31:
 563:Generated_Source\PSoC5/ADC.c ****     }
 564:Generated_Source\PSoC5/ADC.c **** 
 565:Generated_Source\PSoC5/ADC.c ****     return gcorValue;
 924              		.loc 1 565 0
 925 0026 FB88     		ldrh	r3, [r7, #6]
 566:Generated_Source\PSoC5/ADC.c **** }
 926              		.loc 1 566 0
 927 0028 1846     		mov	r0, r3
 928 002a 0C37     		adds	r7, r7, #12
 929              		.cfi_def_cfa_offset 4
 930 002c BD46     		mov	sp, r7
 931              		.cfi_def_cfa_register 13
 932              		@ sp needed
 933 002e 80BC     		pop	{r7}
 934              		.cfi_restore 7
 935              		.cfi_def_cfa_offset 0
 936 0030 7047     		bx	lr
 937              	.L34:
 938 0032 00BF     		.align	2
 939              	.L33:
 940 0034 0E4E0040 		.word	1073761806
 941 0038 0C4E0040 		.word	1073761804
 942              		.cfi_endproc
 943              	.LFE7:
 944              		.size	ADC_ReadGCOR, .-ADC_ReadGCOR
 945              		.section	.text.ADC_StartConvert,"ax",%progbits
 946              		.align	2
 947              		.global	ADC_StartConvert
 948              		.thumb
 949              		.thumb_func
 950              		.type	ADC_StartConvert, %function
 951              	ADC_StartConvert:
 952              	.LFB8:
 567:Generated_Source\PSoC5/ADC.c **** 
 568:Generated_Source\PSoC5/ADC.c **** 
 569:Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
 570:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_StartConvert
 571:Generated_Source\PSoC5/ADC.c **** ********************************************************************************
 572:Generated_Source\PSoC5/ADC.c **** *
 573:Generated_Source\PSoC5/ADC.c **** * Summary:
 574:Generated_Source\PSoC5/ADC.c **** *  Forces the ADC to initiate a conversion. If in the "Single Sample"
 575:Generated_Source\PSoC5/ADC.c **** *  mode, one conversion will be performed then the ADC will halt. If in
 576:Generated_Source\PSoC5/ADC.c **** *  one of the other three conversion modes, the ADC will run
 577:Generated_Source\PSoC5/ADC.c **** *  continuously until the ADC_Stop() or ADC_StopConvert() is called.
 578:Generated_Source\PSoC5/ADC.c **** *
 579:Generated_Source\PSoC5/ADC.c **** * Parameters:
 580:Generated_Source\PSoC5/ADC.c **** *  None
 581:Generated_Source\PSoC5/ADC.c **** *
 582:Generated_Source\PSoC5/ADC.c **** * Return:
 583:Generated_Source\PSoC5/ADC.c **** *  None
 584:Generated_Source\PSoC5/ADC.c **** *
 585:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 586:Generated_Source\PSoC5/ADC.c **** void ADC_StartConvert(void) 
 587:Generated_Source\PSoC5/ADC.c **** {
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cccSVp0l.s 			page 28


 953              		.loc 1 587 0
 954              		.cfi_startproc
 955              		@ args = 0, pretend = 0, frame = 0
 956              		@ frame_needed = 1, uses_anonymous_args = 0
 957              		@ link register save eliminated.
 958 0000 80B4     		push	{r7}
 959              		.cfi_def_cfa_offset 4
 960              		.cfi_offset 7, -4
 961 0002 00AF     		add	r7, sp, #0
 962              		.cfi_def_cfa_register 7
 588:Generated_Source\PSoC5/ADC.c ****     /* Start the conversion */
 589:Generated_Source\PSoC5/ADC.c ****     ADC_DEC_CR_REG |= ADC_DEC_START_CONV;
 963              		.loc 1 589 0
 964 0004 054A     		ldr	r2, .L36
 965 0006 054B     		ldr	r3, .L36
 966 0008 1B78     		ldrb	r3, [r3]
 967 000a DBB2     		uxtb	r3, r3
 968 000c 43F00103 		orr	r3, r3, #1
 969 0010 DBB2     		uxtb	r3, r3
 970 0012 1370     		strb	r3, [r2]
 590:Generated_Source\PSoC5/ADC.c **** }
 971              		.loc 1 590 0
 972 0014 00BF     		nop
 973 0016 BD46     		mov	sp, r7
 974              		.cfi_def_cfa_register 13
 975              		@ sp needed
 976 0018 80BC     		pop	{r7}
 977              		.cfi_restore 7
 978              		.cfi_def_cfa_offset 0
 979 001a 7047     		bx	lr
 980              	.L37:
 981              		.align	2
 982              	.L36:
 983 001c 004E0040 		.word	1073761792
 984              		.cfi_endproc
 985              	.LFE8:
 986              		.size	ADC_StartConvert, .-ADC_StartConvert
 987              		.section	.text.ADC_StopConvert,"ax",%progbits
 988              		.align	2
 989              		.global	ADC_StopConvert
 990              		.thumb
 991              		.thumb_func
 992              		.type	ADC_StopConvert, %function
 993              	ADC_StopConvert:
 994              	.LFB9:
 591:Generated_Source\PSoC5/ADC.c **** 
 592:Generated_Source\PSoC5/ADC.c **** 
 593:Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
 594:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_StopConvert
 595:Generated_Source\PSoC5/ADC.c **** ********************************************************************************
 596:Generated_Source\PSoC5/ADC.c **** *
 597:Generated_Source\PSoC5/ADC.c **** * Summary:
 598:Generated_Source\PSoC5/ADC.c **** *  Forces the ADC to stop all conversions. If the ADC is in the middle of a
 599:Generated_Source\PSoC5/ADC.c **** *  conversion, the ADC will be reset and not provide a result for that partial
 600:Generated_Source\PSoC5/ADC.c **** *  conversion.
 601:Generated_Source\PSoC5/ADC.c **** *
 602:Generated_Source\PSoC5/ADC.c **** * Parameters:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cccSVp0l.s 			page 29


 603:Generated_Source\PSoC5/ADC.c **** *  None
 604:Generated_Source\PSoC5/ADC.c **** *
 605:Generated_Source\PSoC5/ADC.c **** * Return:
 606:Generated_Source\PSoC5/ADC.c **** *  None
 607:Generated_Source\PSoC5/ADC.c **** *
 608:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 609:Generated_Source\PSoC5/ADC.c **** void ADC_StopConvert(void) 
 610:Generated_Source\PSoC5/ADC.c **** {
 995              		.loc 1 610 0
 996              		.cfi_startproc
 997              		@ args = 0, pretend = 0, frame = 0
 998              		@ frame_needed = 1, uses_anonymous_args = 0
 999              		@ link register save eliminated.
 1000 0000 80B4     		push	{r7}
 1001              		.cfi_def_cfa_offset 4
 1002              		.cfi_offset 7, -4
 1003 0002 00AF     		add	r7, sp, #0
 1004              		.cfi_def_cfa_register 7
 611:Generated_Source\PSoC5/ADC.c ****     /* Stop all conversions */
 612:Generated_Source\PSoC5/ADC.c ****     ADC_DEC_CR_REG &= (uint8)~ADC_DEC_START_CONV;
 1005              		.loc 1 612 0
 1006 0004 054A     		ldr	r2, .L39
 1007 0006 054B     		ldr	r3, .L39
 1008 0008 1B78     		ldrb	r3, [r3]
 1009 000a DBB2     		uxtb	r3, r3
 1010 000c 23F00103 		bic	r3, r3, #1
 1011 0010 DBB2     		uxtb	r3, r3
 1012 0012 1370     		strb	r3, [r2]
 613:Generated_Source\PSoC5/ADC.c **** }
 1013              		.loc 1 613 0
 1014 0014 00BF     		nop
 1015 0016 BD46     		mov	sp, r7
 1016              		.cfi_def_cfa_register 13
 1017              		@ sp needed
 1018 0018 80BC     		pop	{r7}
 1019              		.cfi_restore 7
 1020              		.cfi_def_cfa_offset 0
 1021 001a 7047     		bx	lr
 1022              	.L40:
 1023              		.align	2
 1024              	.L39:
 1025 001c 004E0040 		.word	1073761792
 1026              		.cfi_endproc
 1027              	.LFE9:
 1028              		.size	ADC_StopConvert, .-ADC_StopConvert
 1029              		.section	.text.ADC_IsEndConversion,"ax",%progbits
 1030              		.align	2
 1031              		.global	ADC_IsEndConversion
 1032              		.thumb
 1033              		.thumb_func
 1034              		.type	ADC_IsEndConversion, %function
 1035              	ADC_IsEndConversion:
 1036              	.LFB10:
 614:Generated_Source\PSoC5/ADC.c **** 
 615:Generated_Source\PSoC5/ADC.c **** 
 616:Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
 617:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_IsEndConversion
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cccSVp0l.s 			page 30


 618:Generated_Source\PSoC5/ADC.c **** ********************************************************************************
 619:Generated_Source\PSoC5/ADC.c **** *
 620:Generated_Source\PSoC5/ADC.c **** * Summary:
 621:Generated_Source\PSoC5/ADC.c **** *  Checks the status that the most recently started conversion has completed.
 622:Generated_Source\PSoC5/ADC.c **** *  The status is cleared by any of ADC_GetResult8(), ADC_GetResult16() or 
 623:Generated_Source\PSoC5/ADC.c **** *  ADC_GetResult32() API.
 624:Generated_Source\PSoC5/ADC.c **** *  This function provides the programmer with two options. In one mode this 
 625:Generated_Source\PSoC5/ADC.c **** *  function immediately returns with the conversion status. In the other mode,
 626:Generated_Source\PSoC5/ADC.c **** *  the function does not return (blocking) until the conversion has completed.
 627:Generated_Source\PSoC5/ADC.c **** *
 628:Generated_Source\PSoC5/ADC.c **** * Parameters:
 629:Generated_Source\PSoC5/ADC.c **** *  retMode: Check conversion return mode. See the following table for options.
 630:Generated_Source\PSoC5/ADC.c **** *   ADC_RETURN_STATUS -   Immediately returns conversion result
 631:Generated_Source\PSoC5/ADC.c **** *                                      status.
 632:Generated_Source\PSoC5/ADC.c **** *   ADC_WAIT_FOR_RESULT - Does not return until ADC conversion
 633:Generated_Source\PSoC5/ADC.c **** *                                      is complete.
 634:Generated_Source\PSoC5/ADC.c **** *
 635:Generated_Source\PSoC5/ADC.c **** * Return:
 636:Generated_Source\PSoC5/ADC.c **** *  If a nonzero value is returned, the last conversion has completed.
 637:Generated_Source\PSoC5/ADC.c **** *  If the returned value is zero, the ADC is still calculating the last result.
 638:Generated_Source\PSoC5/ADC.c **** *
 639:Generated_Source\PSoC5/ADC.c **** * Global variables:
 640:Generated_Source\PSoC5/ADC.c **** *  ADC_convDone:  Used to check whether conversion is complete
 641:Generated_Source\PSoC5/ADC.c **** *  or not for single sample mode with resolution is above 16
 642:Generated_Source\PSoC5/ADC.c **** *
 643:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 644:Generated_Source\PSoC5/ADC.c **** uint8 ADC_IsEndConversion(uint8 retMode) 
 645:Generated_Source\PSoC5/ADC.c **** {
 1037              		.loc 1 645 0
 1038              		.cfi_startproc
 1039              		@ args = 0, pretend = 0, frame = 16
 1040              		@ frame_needed = 1, uses_anonymous_args = 0
 1041              		@ link register save eliminated.
 1042 0000 80B4     		push	{r7}
 1043              		.cfi_def_cfa_offset 4
 1044              		.cfi_offset 7, -4
 1045 0002 85B0     		sub	sp, sp, #20
 1046              		.cfi_def_cfa_offset 24
 1047 0004 00AF     		add	r7, sp, #0
 1048              		.cfi_def_cfa_register 7
 1049 0006 0346     		mov	r3, r0
 1050 0008 FB71     		strb	r3, [r7, #7]
 1051              	.L45:
 646:Generated_Source\PSoC5/ADC.c ****     uint8 status;
 647:Generated_Source\PSoC5/ADC.c **** 
 648:Generated_Source\PSoC5/ADC.c ****     do
 649:Generated_Source\PSoC5/ADC.c ****     {
 650:Generated_Source\PSoC5/ADC.c ****         /* Check for stop convert if conversion mode is Single Sample with
 651:Generated_Source\PSoC5/ADC.c ****         *   resolution above 16 bit
 652:Generated_Source\PSoC5/ADC.c ****         */
 653:Generated_Source\PSoC5/ADC.c ****         if(ADC_stopConversion != 0u)
 1052              		.loc 1 653 0
 1053 000a 0D4B     		ldr	r3, .L47
 1054 000c 1B78     		ldrb	r3, [r3]
 1055 000e DBB2     		uxtb	r3, r3
 1056 0010 002B     		cmp	r3, #0
 1057 0012 03D0     		beq	.L42
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cccSVp0l.s 			page 31


 654:Generated_Source\PSoC5/ADC.c ****         {
 655:Generated_Source\PSoC5/ADC.c ****             status = ADC_convDone;
 1058              		.loc 1 655 0
 1059 0014 0B4B     		ldr	r3, .L47+4
 1060 0016 1B78     		ldrb	r3, [r3]
 1061 0018 FB73     		strb	r3, [r7, #15]
 1062 001a 05E0     		b	.L43
 1063              	.L42:
 656:Generated_Source\PSoC5/ADC.c ****         }
 657:Generated_Source\PSoC5/ADC.c ****         else
 658:Generated_Source\PSoC5/ADC.c ****         {
 659:Generated_Source\PSoC5/ADC.c ****             status = ADC_DEC_SR_REG & ADC_DEC_CONV_DONE;
 1064              		.loc 1 659 0
 1065 001c 0A4B     		ldr	r3, .L47+8
 1066 001e 1B78     		ldrb	r3, [r3]
 1067 0020 DBB2     		uxtb	r3, r3
 1068 0022 03F00103 		and	r3, r3, #1
 1069 0026 FB73     		strb	r3, [r7, #15]
 1070              	.L43:
 660:Generated_Source\PSoC5/ADC.c ****         }
 661:Generated_Source\PSoC5/ADC.c ****     }while((status != ADC_DEC_CONV_DONE) && (retMode == ADC_WAIT_FOR_RESULT));
 1071              		.loc 1 661 0
 1072 0028 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1073 002a 012B     		cmp	r3, #1
 1074 002c 02D0     		beq	.L44
 1075              		.loc 1 661 0 is_stmt 0 discriminator 1
 1076 002e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1077 0030 002B     		cmp	r3, #0
 1078 0032 EAD0     		beq	.L45
 1079              	.L44:
 662:Generated_Source\PSoC5/ADC.c **** 
 663:Generated_Source\PSoC5/ADC.c ****     return(status);
 1080              		.loc 1 663 0 is_stmt 1
 1081 0034 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 664:Generated_Source\PSoC5/ADC.c **** }
 1082              		.loc 1 664 0
 1083 0036 1846     		mov	r0, r3
 1084 0038 1437     		adds	r7, r7, #20
 1085              		.cfi_def_cfa_offset 4
 1086 003a BD46     		mov	sp, r7
 1087              		.cfi_def_cfa_register 13
 1088              		@ sp needed
 1089 003c 80BC     		pop	{r7}
 1090              		.cfi_restore 7
 1091              		.cfi_def_cfa_offset 0
 1092 003e 7047     		bx	lr
 1093              	.L48:
 1094              		.align	2
 1095              	.L47:
 1096 0040 00000000 		.word	ADC_stopConversion
 1097 0044 00000000 		.word	ADC_convDone
 1098 0048 014E0040 		.word	1073761793
 1099              		.cfi_endproc
 1100              	.LFE10:
 1101              		.size	ADC_IsEndConversion, .-ADC_IsEndConversion
 1102              		.section	.text.ADC_GetResult8,"ax",%progbits
 1103              		.align	2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cccSVp0l.s 			page 32


 1104              		.global	ADC_GetResult8
 1105              		.thumb
 1106              		.thumb_func
 1107              		.type	ADC_GetResult8, %function
 1108              	ADC_GetResult8:
 1109              	.LFB11:
 665:Generated_Source\PSoC5/ADC.c **** 
 666:Generated_Source\PSoC5/ADC.c **** 
 667:Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
 668:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_GetResult8
 669:Generated_Source\PSoC5/ADC.c **** ********************************************************************************
 670:Generated_Source\PSoC5/ADC.c **** *
 671:Generated_Source\PSoC5/ADC.c **** * Summary:
 672:Generated_Source\PSoC5/ADC.c **** *  This function returns the result of an 8-bit conversion. If the
 673:Generated_Source\PSoC5/ADC.c **** *  resolution is set greater than 8-bits, the LSB of the result will be
 674:Generated_Source\PSoC5/ADC.c **** *  returned. When the ADC is configured for 8-bit single ended mode,
 675:Generated_Source\PSoC5/ADC.c **** *  the ADC_GetResult16() function should be used instead. This
 676:Generated_Source\PSoC5/ADC.c **** *  function returns only signed 8-bit values. The maximum positive
 677:Generated_Source\PSoC5/ADC.c **** *  signed 8-bit value is 127, but in singled ended 8-bit mode, the
 678:Generated_Source\PSoC5/ADC.c **** *  maximum positive value is 255.
 679:Generated_Source\PSoC5/ADC.c **** *
 680:Generated_Source\PSoC5/ADC.c **** * Parameters:
 681:Generated_Source\PSoC5/ADC.c **** *  None
 682:Generated_Source\PSoC5/ADC.c **** *
 683:Generated_Source\PSoC5/ADC.c **** * Return:
 684:Generated_Source\PSoC5/ADC.c **** *  int8: The LSB of the last ADC conversion.
 685:Generated_Source\PSoC5/ADC.c **** *
 686:Generated_Source\PSoC5/ADC.c **** * Global variables:
 687:Generated_Source\PSoC5/ADC.c **** *  ADC_convDone:  Cleared in single sample mode with resolution
 688:Generated_Source\PSoC5/ADC.c **** *                              above 16 bits
 689:Generated_Source\PSoC5/ADC.c **** *
 690:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 691:Generated_Source\PSoC5/ADC.c **** int8 ADC_GetResult8( void ) 
 692:Generated_Source\PSoC5/ADC.c **** {
 1110              		.loc 1 692 0
 1111              		.cfi_startproc
 1112              		@ args = 0, pretend = 0, frame = 8
 1113              		@ frame_needed = 1, uses_anonymous_args = 0
 1114              		@ link register save eliminated.
 1115 0000 80B4     		push	{r7}
 1116              		.cfi_def_cfa_offset 4
 1117              		.cfi_offset 7, -4
 1118 0002 83B0     		sub	sp, sp, #12
 1119              		.cfi_def_cfa_offset 16
 1120 0004 00AF     		add	r7, sp, #0
 1121              		.cfi_def_cfa_register 7
 693:Generated_Source\PSoC5/ADC.c ****     int8 result;
 694:Generated_Source\PSoC5/ADC.c ****     uint8 coherency;
 695:Generated_Source\PSoC5/ADC.c **** 
 696:Generated_Source\PSoC5/ADC.c ****     /* Read active coherency configuration */
 697:Generated_Source\PSoC5/ADC.c ****     coherency = ADC_DEC_COHER_REG & ADC_DEC_SAMP_KEY_MASK;
 1122              		.loc 1 697 0
 1123 0006 124B     		ldr	r3, .L54
 1124 0008 1B78     		ldrb	r3, [r3]
 1125 000a DBB2     		uxtb	r3, r3
 1126 000c 03F00303 		and	r3, r3, #3
 1127 0010 FB71     		strb	r3, [r7, #7]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cccSVp0l.s 			page 33


 698:Generated_Source\PSoC5/ADC.c **** 
 699:Generated_Source\PSoC5/ADC.c ****     result = (int8)ADC_DEC_SAMP_REG;
 1128              		.loc 1 699 0
 1129 0012 104B     		ldr	r3, .L54+4
 1130 0014 1B78     		ldrb	r3, [r3]
 1131 0016 DBB2     		uxtb	r3, r3
 1132 0018 BB71     		strb	r3, [r7, #6]
 700:Generated_Source\PSoC5/ADC.c **** 
 701:Generated_Source\PSoC5/ADC.c ****     if(coherency == ADC_DEC_SAMP_KEY_MID)
 1133              		.loc 1 701 0
 1134 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1135 001c 022B     		cmp	r3, #2
 1136 001e 02D1     		bne	.L50
 702:Generated_Source\PSoC5/ADC.c ****     {   /* Dummy read of the middle byte to unlock the coherency */
 703:Generated_Source\PSoC5/ADC.c ****         (void)ADC_DEC_SAMPM_REG;
 1137              		.loc 1 703 0
 1138 0020 0D4B     		ldr	r3, .L54+8
 1139 0022 1B78     		ldrb	r3, [r3]
 1140 0024 04E0     		b	.L51
 1141              	.L50:
 704:Generated_Source\PSoC5/ADC.c ****     }
 705:Generated_Source\PSoC5/ADC.c ****     else  if(coherency == ADC_DEC_SAMP_KEY_HIGH)
 1142              		.loc 1 705 0
 1143 0026 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1144 0028 032B     		cmp	r3, #3
 1145 002a 01D1     		bne	.L51
 706:Generated_Source\PSoC5/ADC.c ****     {   /* Dummy read of the MSB byte to unlock the coherency */
 707:Generated_Source\PSoC5/ADC.c ****         (void)ADC_DEC_SAMPH_REG;
 1146              		.loc 1 707 0
 1147 002c 0B4B     		ldr	r3, .L54+12
 1148 002e 1B78     		ldrb	r3, [r3]
 1149              	.L51:
 708:Generated_Source\PSoC5/ADC.c ****     }
 709:Generated_Source\PSoC5/ADC.c ****     else /*No action required for other coherency */
 710:Generated_Source\PSoC5/ADC.c ****     {
 711:Generated_Source\PSoC5/ADC.c ****     }
 712:Generated_Source\PSoC5/ADC.c ****     /* Clear conversion complete status in Single Sample mode with resolution above 16 bit */
 713:Generated_Source\PSoC5/ADC.c ****     if(ADC_stopConversion != 0u)
 1150              		.loc 1 713 0
 1151 0030 0B4B     		ldr	r3, .L54+16
 1152 0032 1B78     		ldrb	r3, [r3]
 1153 0034 DBB2     		uxtb	r3, r3
 1154 0036 002B     		cmp	r3, #0
 1155 0038 02D0     		beq	.L52
 714:Generated_Source\PSoC5/ADC.c ****     {
 715:Generated_Source\PSoC5/ADC.c ****         ADC_convDone = 0u;
 1156              		.loc 1 715 0
 1157 003a 0A4B     		ldr	r3, .L54+20
 1158 003c 0022     		movs	r2, #0
 1159 003e 1A70     		strb	r2, [r3]
 1160              	.L52:
 716:Generated_Source\PSoC5/ADC.c ****     }
 717:Generated_Source\PSoC5/ADC.c ****     return (result);
 1161              		.loc 1 717 0
 1162 0040 97F90630 		ldrsb	r3, [r7, #6]
 718:Generated_Source\PSoC5/ADC.c **** }
 1163              		.loc 1 718 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cccSVp0l.s 			page 34


 1164 0044 1846     		mov	r0, r3
 1165 0046 0C37     		adds	r7, r7, #12
 1166              		.cfi_def_cfa_offset 4
 1167 0048 BD46     		mov	sp, r7
 1168              		.cfi_def_cfa_register 13
 1169              		@ sp needed
 1170 004a 80BC     		pop	{r7}
 1171              		.cfi_restore 7
 1172              		.cfi_def_cfa_offset 0
 1173 004c 7047     		bx	lr
 1174              	.L55:
 1175 004e 00BF     		.align	2
 1176              	.L54:
 1177 0050 144E0040 		.word	1073761812
 1178 0054 104E0040 		.word	1073761808
 1179 0058 114E0040 		.word	1073761809
 1180 005c 124E0040 		.word	1073761810
 1181 0060 00000000 		.word	ADC_stopConversion
 1182 0064 00000000 		.word	ADC_convDone
 1183              		.cfi_endproc
 1184              	.LFE11:
 1185              		.size	ADC_GetResult8, .-ADC_GetResult8
 1186              		.section	.text.ADC_GetResult16,"ax",%progbits
 1187              		.align	2
 1188              		.global	ADC_GetResult16
 1189              		.thumb
 1190              		.thumb_func
 1191              		.type	ADC_GetResult16, %function
 1192              	ADC_GetResult16:
 1193              	.LFB12:
 719:Generated_Source\PSoC5/ADC.c **** 
 720:Generated_Source\PSoC5/ADC.c **** 
 721:Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
 722:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_GetResult16
 723:Generated_Source\PSoC5/ADC.c **** ********************************************************************************
 724:Generated_Source\PSoC5/ADC.c **** *
 725:Generated_Source\PSoC5/ADC.c **** * Summary:
 726:Generated_Source\PSoC5/ADC.c **** *  Returns a 16-bit result for a conversion with a result that has a
 727:Generated_Source\PSoC5/ADC.c **** *  resolution of 8 to 16 bits. If the resolution is set greater than 16-bits,
 728:Generated_Source\PSoC5/ADC.c **** *  it will return the 16 least significant bits of the result. When the ADC
 729:Generated_Source\PSoC5/ADC.c **** *  is configured for 16-bit single ended mode, the ADC_GetResult32()
 730:Generated_Source\PSoC5/ADC.c **** *  function should be used instead. This function returns only signed
 731:Generated_Source\PSoC5/ADC.c **** *  16-bit result, which allows a maximum positive value of 32767, not 65535.
 732:Generated_Source\PSoC5/ADC.c **** *  This function supports different coherency settings.
 733:Generated_Source\PSoC5/ADC.c **** *
 734:Generated_Source\PSoC5/ADC.c **** * Parameters:
 735:Generated_Source\PSoC5/ADC.c **** *   void
 736:Generated_Source\PSoC5/ADC.c **** *
 737:Generated_Source\PSoC5/ADC.c **** * Return:
 738:Generated_Source\PSoC5/ADC.c **** *  int16:  ADC result.
 739:Generated_Source\PSoC5/ADC.c **** *
 740:Generated_Source\PSoC5/ADC.c **** * Global variables:
 741:Generated_Source\PSoC5/ADC.c **** *  ADC_convDone:  Cleared in single sample mode with resolution
 742:Generated_Source\PSoC5/ADC.c **** *                              above 16 bits
 743:Generated_Source\PSoC5/ADC.c **** *
 744:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 745:Generated_Source\PSoC5/ADC.c **** int16 ADC_GetResult16(void) 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cccSVp0l.s 			page 35


 746:Generated_Source\PSoC5/ADC.c **** {
 1194              		.loc 1 746 0
 1195              		.cfi_startproc
 1196              		@ args = 0, pretend = 0, frame = 8
 1197              		@ frame_needed = 1, uses_anonymous_args = 0
 1198              		@ link register save eliminated.
 1199 0000 80B4     		push	{r7}
 1200              		.cfi_def_cfa_offset 4
 1201              		.cfi_offset 7, -4
 1202 0002 83B0     		sub	sp, sp, #12
 1203              		.cfi_def_cfa_offset 16
 1204 0004 00AF     		add	r7, sp, #0
 1205              		.cfi_def_cfa_register 7
 747:Generated_Source\PSoC5/ADC.c ****     uint16 result;
 748:Generated_Source\PSoC5/ADC.c ****     uint8 coherency;
 749:Generated_Source\PSoC5/ADC.c **** 
 750:Generated_Source\PSoC5/ADC.c ****     /* Read active coherency configuration */
 751:Generated_Source\PSoC5/ADC.c ****     coherency = ADC_DEC_COHER_REG & ADC_DEC_SAMP_KEY_MASK;
 1206              		.loc 1 751 0
 1207 0006 174B     		ldr	r3, .L61
 1208 0008 1B78     		ldrb	r3, [r3]
 1209 000a DBB2     		uxtb	r3, r3
 1210 000c 03F00303 		and	r3, r3, #3
 1211 0010 7B71     		strb	r3, [r7, #5]
 752:Generated_Source\PSoC5/ADC.c **** 
 753:Generated_Source\PSoC5/ADC.c ****     if(coherency <= ADC_DEC_SAMP_KEY_LOW)
 1212              		.loc 1 753 0
 1213 0012 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1214 0014 012B     		cmp	r3, #1
 1215 0016 03D8     		bhi	.L57
 754:Generated_Source\PSoC5/ADC.c ****     {   /*  Use default method to read result registers i.e. LSB byte read at the end*/
 755:Generated_Source\PSoC5/ADC.c ****         #if (CY_PSOC3)
 756:Generated_Source\PSoC5/ADC.c ****             result = ADC_DEC_SAMPM_REG;
 757:Generated_Source\PSoC5/ADC.c ****             result = (result << 8u) | ADC_DEC_SAMP_REG;
 758:Generated_Source\PSoC5/ADC.c ****         #else
 759:Generated_Source\PSoC5/ADC.c ****             result = (CY_GET_REG16(ADC_DEC_SAMP_16B_PTR));
 1216              		.loc 1 759 0
 1217 0018 134B     		ldr	r3, .L61+4
 1218 001a 1B88     		ldrh	r3, [r3]	@ movhi
 1219 001c FB80     		strh	r3, [r7, #6]	@ movhi
 1220 001e 11E0     		b	.L58
 1221              	.L57:
 760:Generated_Source\PSoC5/ADC.c ****         #endif /* CY_PSOC3 */
 761:Generated_Source\PSoC5/ADC.c ****     }
 762:Generated_Source\PSoC5/ADC.c ****     else /* MID or HIGH */
 763:Generated_Source\PSoC5/ADC.c ****     {   /* Read middle byte at the end */
 764:Generated_Source\PSoC5/ADC.c ****         #if (CY_PSOC3)
 765:Generated_Source\PSoC5/ADC.c ****             result = (CY_GET_REG16(ADC_DEC_SAMP_16B_PTR));
 766:Generated_Source\PSoC5/ADC.c ****         #else
 767:Generated_Source\PSoC5/ADC.c ****             result = ADC_DEC_SAMP_REG;
 1222              		.loc 1 767 0
 1223 0020 114B     		ldr	r3, .L61+4
 1224 0022 1B78     		ldrb	r3, [r3]
 1225 0024 DBB2     		uxtb	r3, r3
 1226 0026 FB80     		strh	r3, [r7, #6]	@ movhi
 768:Generated_Source\PSoC5/ADC.c ****             result |=  (uint16)((uint16)ADC_DEC_SAMPM_REG << 8u);
 1227              		.loc 1 768 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cccSVp0l.s 			page 36


 1228 0028 104B     		ldr	r3, .L61+8
 1229 002a 1B78     		ldrb	r3, [r3]
 1230 002c DBB2     		uxtb	r3, r3
 1231 002e 9BB2     		uxth	r3, r3
 1232 0030 1B02     		lsls	r3, r3, #8
 1233 0032 9AB2     		uxth	r2, r3
 1234 0034 FB88     		ldrh	r3, [r7, #6]	@ movhi
 1235 0036 1343     		orrs	r3, r3, r2
 1236 0038 FB80     		strh	r3, [r7, #6]	@ movhi
 769:Generated_Source\PSoC5/ADC.c ****         #endif /* CY_PSOC3 */
 770:Generated_Source\PSoC5/ADC.c ****         if(coherency == ADC_DEC_SAMP_KEY_HIGH)
 1237              		.loc 1 770 0
 1238 003a 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1239 003c 032B     		cmp	r3, #3
 1240 003e 01D1     		bne	.L58
 771:Generated_Source\PSoC5/ADC.c ****         {   /* Dummy read of the MSB byte to unlock the coherency */
 772:Generated_Source\PSoC5/ADC.c ****             (void)ADC_DEC_SAMPH_REG;
 1241              		.loc 1 772 0
 1242 0040 0B4B     		ldr	r3, .L61+12
 1243 0042 1B78     		ldrb	r3, [r3]
 1244              	.L58:
 773:Generated_Source\PSoC5/ADC.c ****         }
 774:Generated_Source\PSoC5/ADC.c ****     }
 775:Generated_Source\PSoC5/ADC.c ****     /* Clear conversion complete status in Single Sample mode with resolution above 16 bit */
 776:Generated_Source\PSoC5/ADC.c ****     if(ADC_stopConversion != 0u)
 1245              		.loc 1 776 0
 1246 0044 0B4B     		ldr	r3, .L61+16
 1247 0046 1B78     		ldrb	r3, [r3]
 1248 0048 DBB2     		uxtb	r3, r3
 1249 004a 002B     		cmp	r3, #0
 1250 004c 02D0     		beq	.L59
 777:Generated_Source\PSoC5/ADC.c ****     {
 778:Generated_Source\PSoC5/ADC.c ****         ADC_convDone = 0u;
 1251              		.loc 1 778 0
 1252 004e 0A4B     		ldr	r3, .L61+20
 1253 0050 0022     		movs	r2, #0
 1254 0052 1A70     		strb	r2, [r3]
 1255              	.L59:
 779:Generated_Source\PSoC5/ADC.c ****     }
 780:Generated_Source\PSoC5/ADC.c **** 
 781:Generated_Source\PSoC5/ADC.c ****     return ((int16)result);
 1256              		.loc 1 781 0
 1257 0054 B7F90630 		ldrsh	r3, [r7, #6]
 782:Generated_Source\PSoC5/ADC.c **** }
 1258              		.loc 1 782 0
 1259 0058 1846     		mov	r0, r3
 1260 005a 0C37     		adds	r7, r7, #12
 1261              		.cfi_def_cfa_offset 4
 1262 005c BD46     		mov	sp, r7
 1263              		.cfi_def_cfa_register 13
 1264              		@ sp needed
 1265 005e 80BC     		pop	{r7}
 1266              		.cfi_restore 7
 1267              		.cfi_def_cfa_offset 0
 1268 0060 7047     		bx	lr
 1269              	.L62:
 1270 0062 00BF     		.align	2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cccSVp0l.s 			page 37


 1271              	.L61:
 1272 0064 144E0040 		.word	1073761812
 1273 0068 104E0040 		.word	1073761808
 1274 006c 114E0040 		.word	1073761809
 1275 0070 124E0040 		.word	1073761810
 1276 0074 00000000 		.word	ADC_stopConversion
 1277 0078 00000000 		.word	ADC_convDone
 1278              		.cfi_endproc
 1279              	.LFE12:
 1280              		.size	ADC_GetResult16, .-ADC_GetResult16
 1281              		.section	.text.ADC_GetResult32,"ax",%progbits
 1282              		.align	2
 1283              		.global	ADC_GetResult32
 1284              		.thumb
 1285              		.thumb_func
 1286              		.type	ADC_GetResult32, %function
 1287              	ADC_GetResult32:
 1288              	.LFB13:
 783:Generated_Source\PSoC5/ADC.c **** 
 784:Generated_Source\PSoC5/ADC.c **** 
 785:Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
 786:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_GetResult32
 787:Generated_Source\PSoC5/ADC.c **** ********************************************************************************
 788:Generated_Source\PSoC5/ADC.c **** *
 789:Generated_Source\PSoC5/ADC.c **** * Summary:
 790:Generated_Source\PSoC5/ADC.c **** *  Returns a 32-bit result for a conversion with a result that has a
 791:Generated_Source\PSoC5/ADC.c **** *  resolution of 8 to 20 bits.
 792:Generated_Source\PSoC5/ADC.c **** *  This function supports different coherency settings.
 793:Generated_Source\PSoC5/ADC.c **** *
 794:Generated_Source\PSoC5/ADC.c **** * Parameters:
 795:Generated_Source\PSoC5/ADC.c **** *  None
 796:Generated_Source\PSoC5/ADC.c **** *
 797:Generated_Source\PSoC5/ADC.c **** * Return:
 798:Generated_Source\PSoC5/ADC.c **** *  int32: Result of the last ADC conversion.
 799:Generated_Source\PSoC5/ADC.c **** *
 800:Generated_Source\PSoC5/ADC.c **** * Global variables:
 801:Generated_Source\PSoC5/ADC.c **** *  ADC_convDone:  Cleared in single sample mode with resolution
 802:Generated_Source\PSoC5/ADC.c **** *                              above 16 bits
 803:Generated_Source\PSoC5/ADC.c **** *
 804:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 805:Generated_Source\PSoC5/ADC.c **** int32 ADC_GetResult32(void) 
 806:Generated_Source\PSoC5/ADC.c **** {
 1289              		.loc 1 806 0
 1290              		.cfi_startproc
 1291              		@ args = 0, pretend = 0, frame = 8
 1292              		@ frame_needed = 1, uses_anonymous_args = 0
 1293              		@ link register save eliminated.
 1294 0000 80B4     		push	{r7}
 1295              		.cfi_def_cfa_offset 4
 1296              		.cfi_offset 7, -4
 1297 0002 83B0     		sub	sp, sp, #12
 1298              		.cfi_def_cfa_offset 16
 1299 0004 00AF     		add	r7, sp, #0
 1300              		.cfi_def_cfa_register 7
 807:Generated_Source\PSoC5/ADC.c ****     uint32 result;
 808:Generated_Source\PSoC5/ADC.c ****     uint8 coherency;
 809:Generated_Source\PSoC5/ADC.c ****     #if (CY_PSOC3)
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cccSVp0l.s 			page 38


 810:Generated_Source\PSoC5/ADC.c **** 	    uint16 tmp;
 811:Generated_Source\PSoC5/ADC.c ****     #endif /* CY_PSOC3 */
 812:Generated_Source\PSoC5/ADC.c **** 
 813:Generated_Source\PSoC5/ADC.c ****     /* Read active coherency configuration */
 814:Generated_Source\PSoC5/ADC.c ****     coherency = ADC_DEC_COHER_REG & ADC_DEC_SAMP_KEY_MASK;
 1301              		.loc 1 814 0
 1302 0006 224B     		ldr	r3, .L69
 1303 0008 1B78     		ldrb	r3, [r3]
 1304 000a DBB2     		uxtb	r3, r3
 1305 000c 03F00303 		and	r3, r3, #3
 1306 0010 FB70     		strb	r3, [r7, #3]
 815:Generated_Source\PSoC5/ADC.c **** 
 816:Generated_Source\PSoC5/ADC.c ****     if(coherency <= ADC_DEC_SAMP_KEY_LOW)
 1307              		.loc 1 816 0
 1308 0012 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1309 0014 012B     		cmp	r3, #1
 1310 0016 0BD8     		bhi	.L64
 817:Generated_Source\PSoC5/ADC.c ****     {   /*  Use default method to read result registers i.e. LSB byte read at the end*/
 818:Generated_Source\PSoC5/ADC.c ****         #if (CY_PSOC3)
 819:Generated_Source\PSoC5/ADC.c ****             result = ADC_DEC_SAMPH_REG;
 820:Generated_Source\PSoC5/ADC.c ****             if((result & 0x80u) != 0u)
 821:Generated_Source\PSoC5/ADC.c ****             {   /* Sign extend */
 822:Generated_Source\PSoC5/ADC.c ****                 result |= 0xFF00u;
 823:Generated_Source\PSoC5/ADC.c ****             }
 824:Generated_Source\PSoC5/ADC.c ****             result = (result << 8u) | ADC_DEC_SAMPM_REG;
 825:Generated_Source\PSoC5/ADC.c ****             result = (result << 8u) | ADC_DEC_SAMP_REG;
 826:Generated_Source\PSoC5/ADC.c ****         #else
 827:Generated_Source\PSoC5/ADC.c ****             result = CY_GET_REG16(ADC_DEC_SAMPH_16B_PTR);
 1311              		.loc 1 827 0
 1312 0018 1E4B     		ldr	r3, .L69+4
 1313 001a 1B88     		ldrh	r3, [r3]	@ movhi
 1314 001c 9BB2     		uxth	r3, r3
 1315 001e 7B60     		str	r3, [r7, #4]
 828:Generated_Source\PSoC5/ADC.c ****             result = (result << 16u) | (CY_GET_REG16(ADC_DEC_SAMP_16B_PTR));
 1316              		.loc 1 828 0
 1317 0020 7B68     		ldr	r3, [r7, #4]
 1318 0022 1B04     		lsls	r3, r3, #16
 1319 0024 1C4A     		ldr	r2, .L69+8
 1320 0026 1288     		ldrh	r2, [r2]	@ movhi
 1321 0028 92B2     		uxth	r2, r2
 1322 002a 1343     		orrs	r3, r3, r2
 1323 002c 7B60     		str	r3, [r7, #4]
 1324 002e 20E0     		b	.L65
 1325              	.L64:
 829:Generated_Source\PSoC5/ADC.c ****         #endif /* CY_PSOC3 */
 830:Generated_Source\PSoC5/ADC.c ****     }
 831:Generated_Source\PSoC5/ADC.c ****     else if(coherency == ADC_DEC_SAMP_KEY_MID)
 1326              		.loc 1 831 0
 1327 0030 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1328 0032 022B     		cmp	r3, #2
 1329 0034 12D1     		bne	.L66
 832:Generated_Source\PSoC5/ADC.c ****     {   /* Read middle byte at the end */
 833:Generated_Source\PSoC5/ADC.c ****         #if (CY_PSOC3)
 834:Generated_Source\PSoC5/ADC.c ****             result = ADC_DEC_SAMPH_REG;
 835:Generated_Source\PSoC5/ADC.c ****             if((result & 0x80u) != 0u)
 836:Generated_Source\PSoC5/ADC.c ****             {   /* Sign extend */
 837:Generated_Source\PSoC5/ADC.c ****                 result |= 0xFF00u;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cccSVp0l.s 			page 39


 838:Generated_Source\PSoC5/ADC.c ****             }
 839:Generated_Source\PSoC5/ADC.c ****             result = (result << 16u) | (CY_GET_REG16(ADC_DEC_SAMP_16B_PTR));
 840:Generated_Source\PSoC5/ADC.c ****         #else
 841:Generated_Source\PSoC5/ADC.c ****             result = CY_GET_REG16(ADC_DEC_SAMPH_16B_PTR);
 1330              		.loc 1 841 0
 1331 0036 174B     		ldr	r3, .L69+4
 1332 0038 1B88     		ldrh	r3, [r3]	@ movhi
 1333 003a 9BB2     		uxth	r3, r3
 1334 003c 7B60     		str	r3, [r7, #4]
 842:Generated_Source\PSoC5/ADC.c ****             result = (result << 16u) | ADC_DEC_SAMP_REG;
 1335              		.loc 1 842 0
 1336 003e 7B68     		ldr	r3, [r7, #4]
 1337 0040 1B04     		lsls	r3, r3, #16
 1338 0042 154A     		ldr	r2, .L69+8
 1339 0044 1278     		ldrb	r2, [r2]
 1340 0046 D2B2     		uxtb	r2, r2
 1341 0048 1343     		orrs	r3, r3, r2
 1342 004a 7B60     		str	r3, [r7, #4]
 843:Generated_Source\PSoC5/ADC.c ****             result |=  (uint32)((uint32)ADC_DEC_SAMPM_REG << 8u);
 1343              		.loc 1 843 0
 1344 004c 134B     		ldr	r3, .L69+12
 1345 004e 1B78     		ldrb	r3, [r3]
 1346 0050 DBB2     		uxtb	r3, r3
 1347 0052 1B02     		lsls	r3, r3, #8
 1348 0054 7A68     		ldr	r2, [r7, #4]
 1349 0056 1343     		orrs	r3, r3, r2
 1350 0058 7B60     		str	r3, [r7, #4]
 1351 005a 0AE0     		b	.L65
 1352              	.L66:
 844:Generated_Source\PSoC5/ADC.c ****         #endif /* CY_PSOC3 */
 845:Generated_Source\PSoC5/ADC.c ****     }
 846:Generated_Source\PSoC5/ADC.c ****     else /*ADC_DEC_SAMP_KEY_HIGH */
 847:Generated_Source\PSoC5/ADC.c ****     {
 848:Generated_Source\PSoC5/ADC.c ****         /* Read MSB byte at the end */
 849:Generated_Source\PSoC5/ADC.c ****         #if (CY_PSOC3)
 850:Generated_Source\PSoC5/ADC.c ****             result = CY_GET_REG16(ADC_DEC_SAMP_16B_PTR);
 851:Generated_Source\PSoC5/ADC.c **** 			tmp = ADC_DEC_SAMPH_REG;
 852:Generated_Source\PSoC5/ADC.c ****             if((tmp & 0x80u) != 0u)
 853:Generated_Source\PSoC5/ADC.c ****             {   /* Sign extend */
 854:Generated_Source\PSoC5/ADC.c ****                 tmp |= 0xFF00u;
 855:Generated_Source\PSoC5/ADC.c ****             }
 856:Generated_Source\PSoC5/ADC.c ****             result |= (uint32)tmp << 16u;
 857:Generated_Source\PSoC5/ADC.c ****         #else
 858:Generated_Source\PSoC5/ADC.c ****             result = CY_GET_REG16(ADC_DEC_SAMP_16B_PTR);
 1353              		.loc 1 858 0
 1354 005c 0E4B     		ldr	r3, .L69+8
 1355 005e 1B88     		ldrh	r3, [r3]	@ movhi
 1356 0060 9BB2     		uxth	r3, r3
 1357 0062 7B60     		str	r3, [r7, #4]
 859:Generated_Source\PSoC5/ADC.c ****             result |= (uint32)((uint32)CY_GET_REG16(ADC_DEC_SAMPH_16B_PTR) << 16u);
 1358              		.loc 1 859 0
 1359 0064 0B4B     		ldr	r3, .L69+4
 1360 0066 1B88     		ldrh	r3, [r3]	@ movhi
 1361 0068 9BB2     		uxth	r3, r3
 1362 006a 1B04     		lsls	r3, r3, #16
 1363 006c 7A68     		ldr	r2, [r7, #4]
 1364 006e 1343     		orrs	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cccSVp0l.s 			page 40


 1365 0070 7B60     		str	r3, [r7, #4]
 1366              	.L65:
 860:Generated_Source\PSoC5/ADC.c ****         #endif /* CY_PSOC3 */
 861:Generated_Source\PSoC5/ADC.c ****     }
 862:Generated_Source\PSoC5/ADC.c ****     /* Clear conversion complete status in Single Sample mode with resolution above 16 bit */
 863:Generated_Source\PSoC5/ADC.c ****     if(ADC_stopConversion != 0u)
 1367              		.loc 1 863 0
 1368 0072 0B4B     		ldr	r3, .L69+16
 1369 0074 1B78     		ldrb	r3, [r3]
 1370 0076 DBB2     		uxtb	r3, r3
 1371 0078 002B     		cmp	r3, #0
 1372 007a 02D0     		beq	.L67
 864:Generated_Source\PSoC5/ADC.c ****     {
 865:Generated_Source\PSoC5/ADC.c ****         ADC_convDone = 0u;
 1373              		.loc 1 865 0
 1374 007c 094B     		ldr	r3, .L69+20
 1375 007e 0022     		movs	r2, #0
 1376 0080 1A70     		strb	r2, [r3]
 1377              	.L67:
 866:Generated_Source\PSoC5/ADC.c ****     }
 867:Generated_Source\PSoC5/ADC.c **** 
 868:Generated_Source\PSoC5/ADC.c ****     return ((int32)result);
 1378              		.loc 1 868 0
 1379 0082 7B68     		ldr	r3, [r7, #4]
 869:Generated_Source\PSoC5/ADC.c **** }
 1380              		.loc 1 869 0
 1381 0084 1846     		mov	r0, r3
 1382 0086 0C37     		adds	r7, r7, #12
 1383              		.cfi_def_cfa_offset 4
 1384 0088 BD46     		mov	sp, r7
 1385              		.cfi_def_cfa_register 13
 1386              		@ sp needed
 1387 008a 80BC     		pop	{r7}
 1388              		.cfi_restore 7
 1389              		.cfi_def_cfa_offset 0
 1390 008c 7047     		bx	lr
 1391              	.L70:
 1392 008e 00BF     		.align	2
 1393              	.L69:
 1394 0090 144E0040 		.word	1073761812
 1395 0094 124E0040 		.word	1073761810
 1396 0098 104E0040 		.word	1073761808
 1397 009c 114E0040 		.word	1073761809
 1398 00a0 00000000 		.word	ADC_stopConversion
 1399 00a4 00000000 		.word	ADC_convDone
 1400              		.cfi_endproc
 1401              	.LFE13:
 1402              		.size	ADC_GetResult32, .-ADC_GetResult32
 1403              		.section	.text.ADC_SetOffset,"ax",%progbits
 1404              		.align	2
 1405              		.global	ADC_SetOffset
 1406              		.thumb
 1407              		.thumb_func
 1408              		.type	ADC_SetOffset, %function
 1409              	ADC_SetOffset:
 1410              	.LFB14:
 870:Generated_Source\PSoC5/ADC.c **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cccSVp0l.s 			page 41


 871:Generated_Source\PSoC5/ADC.c **** 
 872:Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
 873:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_SetOffset
 874:Generated_Source\PSoC5/ADC.c **** ********************************************************************************
 875:Generated_Source\PSoC5/ADC.c **** *
 876:Generated_Source\PSoC5/ADC.c **** * Summary:
 877:Generated_Source\PSoC5/ADC.c **** *  Sets the ADC offset which is used by the functions ADC_CountsTo_uVolts, 
 878:Generated_Source\PSoC5/ADC.c **** *  ADC_CountsTo_mVolts, and ADC_CountsTo_Volts to subtract the offset from the 
 879:Generated_Source\PSoC5/ADC.c **** *  given reading before calculating the voltage conversion.
 880:Generated_Source\PSoC5/ADC.c **** *
 881:Generated_Source\PSoC5/ADC.c **** * Parameters:
 882:Generated_Source\PSoC5/ADC.c **** *  int32:  This value is a measured value when the inputs are shorted or 
 883:Generated_Source\PSoC5/ADC.c **** *          connected to the same input voltage.
 884:Generated_Source\PSoC5/ADC.c **** *
 885:Generated_Source\PSoC5/ADC.c **** * Return:
 886:Generated_Source\PSoC5/ADC.c **** *  None
 887:Generated_Source\PSoC5/ADC.c **** *
 888:Generated_Source\PSoC5/ADC.c **** * Global variables:
 889:Generated_Source\PSoC5/ADC.c **** *  ADC_Offset:  Modified to set the user provided offset. This
 890:Generated_Source\PSoC5/ADC.c **** *  variable is used for offset calibration purpose.
 891:Generated_Source\PSoC5/ADC.c **** *
 892:Generated_Source\PSoC5/ADC.c **** * Side Effects:
 893:Generated_Source\PSoC5/ADC.c **** *  Affects the ADC_CountsTo_Volts,
 894:Generated_Source\PSoC5/ADC.c **** *  ADC_CountsTo_mVolts, ADC_CountsTo_uVolts functions
 895:Generated_Source\PSoC5/ADC.c **** *  by subtracting the given offset.
 896:Generated_Source\PSoC5/ADC.c **** *
 897:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 898:Generated_Source\PSoC5/ADC.c **** void ADC_SetOffset(int32 offset) 
 899:Generated_Source\PSoC5/ADC.c **** {
 1411              		.loc 1 899 0
 1412              		.cfi_startproc
 1413              		@ args = 0, pretend = 0, frame = 8
 1414              		@ frame_needed = 1, uses_anonymous_args = 0
 1415              		@ link register save eliminated.
 1416 0000 80B4     		push	{r7}
 1417              		.cfi_def_cfa_offset 4
 1418              		.cfi_offset 7, -4
 1419 0002 83B0     		sub	sp, sp, #12
 1420              		.cfi_def_cfa_offset 16
 1421 0004 00AF     		add	r7, sp, #0
 1422              		.cfi_def_cfa_register 7
 1423 0006 7860     		str	r0, [r7, #4]
 900:Generated_Source\PSoC5/ADC.c **** 
 901:Generated_Source\PSoC5/ADC.c ****     ADC_Offset = offset;
 1424              		.loc 1 901 0
 1425 0008 034A     		ldr	r2, .L72
 1426 000a 7B68     		ldr	r3, [r7, #4]
 1427 000c 1360     		str	r3, [r2]
 902:Generated_Source\PSoC5/ADC.c **** }
 1428              		.loc 1 902 0
 1429 000e 00BF     		nop
 1430 0010 0C37     		adds	r7, r7, #12
 1431              		.cfi_def_cfa_offset 4
 1432 0012 BD46     		mov	sp, r7
 1433              		.cfi_def_cfa_register 13
 1434              		@ sp needed
 1435 0014 80BC     		pop	{r7}
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cccSVp0l.s 			page 42


 1436              		.cfi_restore 7
 1437              		.cfi_def_cfa_offset 0
 1438 0016 7047     		bx	lr
 1439              	.L73:
 1440              		.align	2
 1441              	.L72:
 1442 0018 00000000 		.word	ADC_Offset
 1443              		.cfi_endproc
 1444              	.LFE14:
 1445              		.size	ADC_SetOffset, .-ADC_SetOffset
 1446              		.section	.text.ADC_SetGain,"ax",%progbits
 1447              		.align	2
 1448              		.global	ADC_SetGain
 1449              		.thumb
 1450              		.thumb_func
 1451              		.type	ADC_SetGain, %function
 1452              	ADC_SetGain:
 1453              	.LFB15:
 903:Generated_Source\PSoC5/ADC.c **** 
 904:Generated_Source\PSoC5/ADC.c **** 
 905:Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
 906:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_SetGain
 907:Generated_Source\PSoC5/ADC.c **** ********************************************************************************
 908:Generated_Source\PSoC5/ADC.c **** *
 909:Generated_Source\PSoC5/ADC.c **** * Summary:
 910:Generated_Source\PSoC5/ADC.c **** *  Sets the ADC gain in counts per volt for the voltage conversion
 911:Generated_Source\PSoC5/ADC.c **** *  functions below. This value is set by default by the reference and
 912:Generated_Source\PSoC5/ADC.c **** *  input range settings. It should only be used to further calibrate the
 913:Generated_Source\PSoC5/ADC.c **** *  ADC with a known input or if an external reference is used. This
 914:Generated_Source\PSoC5/ADC.c **** *  function may also be used to calibrate an entire signal chain, not
 915:Generated_Source\PSoC5/ADC.c **** *  just the ADC.
 916:Generated_Source\PSoC5/ADC.c **** *
 917:Generated_Source\PSoC5/ADC.c **** * Parameters:
 918:Generated_Source\PSoC5/ADC.c **** *  int32: ADC gain in counts per volt.
 919:Generated_Source\PSoC5/ADC.c **** *
 920:Generated_Source\PSoC5/ADC.c **** * Return:
 921:Generated_Source\PSoC5/ADC.c **** *  None
 922:Generated_Source\PSoC5/ADC.c **** *
 923:Generated_Source\PSoC5/ADC.c **** * Global variables:
 924:Generated_Source\PSoC5/ADC.c **** *  ADC_CountsPerVolt:  modified to set the ADC gain in counts
 925:Generated_Source\PSoC5/ADC.c **** *   per volt.
 926:Generated_Source\PSoC5/ADC.c **** *
 927:Generated_Source\PSoC5/ADC.c **** * Side Effects:
 928:Generated_Source\PSoC5/ADC.c **** *  Affects the ADC_CountsTo_Volts,
 929:Generated_Source\PSoC5/ADC.c **** *  ADC_CountsTo_mVolts, ADC_CountsTo_uVolts functions
 930:Generated_Source\PSoC5/ADC.c **** *  supplying the correct conversion between ADC counts and voltage.
 931:Generated_Source\PSoC5/ADC.c **** *
 932:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 933:Generated_Source\PSoC5/ADC.c **** void ADC_SetGain(int32 adcGain) 
 934:Generated_Source\PSoC5/ADC.c **** {
 1454              		.loc 1 934 0
 1455              		.cfi_startproc
 1456              		@ args = 0, pretend = 0, frame = 8
 1457              		@ frame_needed = 1, uses_anonymous_args = 0
 1458              		@ link register save eliminated.
 1459 0000 80B4     		push	{r7}
 1460              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cccSVp0l.s 			page 43


 1461              		.cfi_offset 7, -4
 1462 0002 83B0     		sub	sp, sp, #12
 1463              		.cfi_def_cfa_offset 16
 1464 0004 00AF     		add	r7, sp, #0
 1465              		.cfi_def_cfa_register 7
 1466 0006 7860     		str	r0, [r7, #4]
 935:Generated_Source\PSoC5/ADC.c ****     ADC_CountsPerVolt = adcGain;
 1467              		.loc 1 935 0
 1468 0008 034A     		ldr	r2, .L75
 1469 000a 7B68     		ldr	r3, [r7, #4]
 1470 000c 1360     		str	r3, [r2]
 936:Generated_Source\PSoC5/ADC.c **** }
 1471              		.loc 1 936 0
 1472 000e 00BF     		nop
 1473 0010 0C37     		adds	r7, r7, #12
 1474              		.cfi_def_cfa_offset 4
 1475 0012 BD46     		mov	sp, r7
 1476              		.cfi_def_cfa_register 13
 1477              		@ sp needed
 1478 0014 80BC     		pop	{r7}
 1479              		.cfi_restore 7
 1480              		.cfi_def_cfa_offset 0
 1481 0016 7047     		bx	lr
 1482              	.L76:
 1483              		.align	2
 1484              	.L75:
 1485 0018 00000000 		.word	ADC_CountsPerVolt
 1486              		.cfi_endproc
 1487              	.LFE15:
 1488              		.size	ADC_SetGain, .-ADC_SetGain
 1489              		.section	.text.ADC_CountsTo_mVolts,"ax",%progbits
 1490              		.align	2
 1491              		.global	ADC_CountsTo_mVolts
 1492              		.thumb
 1493              		.thumb_func
 1494              		.type	ADC_CountsTo_mVolts, %function
 1495              	ADC_CountsTo_mVolts:
 1496              	.LFB16:
 937:Generated_Source\PSoC5/ADC.c **** 
 938:Generated_Source\PSoC5/ADC.c **** 
 939:Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
 940:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_CountsTo_mVolts
 941:Generated_Source\PSoC5/ADC.c **** ********************************************************************************
 942:Generated_Source\PSoC5/ADC.c **** *
 943:Generated_Source\PSoC5/ADC.c **** * Summary:
 944:Generated_Source\PSoC5/ADC.c **** *  Converts the ADC counts output to mVolts as a 16-bit integer. For
 945:Generated_Source\PSoC5/ADC.c **** *  example, if the ADC measured 0.534 volts, the return value would
 946:Generated_Source\PSoC5/ADC.c **** *  be 534 mVolts.
 947:Generated_Source\PSoC5/ADC.c **** *
 948:Generated_Source\PSoC5/ADC.c **** * Parameters:
 949:Generated_Source\PSoC5/ADC.c **** *  int32: adcCounts Result from the ADC conversion.
 950:Generated_Source\PSoC5/ADC.c **** *
 951:Generated_Source\PSoC5/ADC.c **** * Return:
 952:Generated_Source\PSoC5/ADC.c **** *  int16:  Result in mVolts
 953:Generated_Source\PSoC5/ADC.c **** *
 954:Generated_Source\PSoC5/ADC.c **** * Global variables:
 955:Generated_Source\PSoC5/ADC.c **** *  ADC_CountsPerVolt:  used to convert ADC counts to mVolts.
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cccSVp0l.s 			page 44


 956:Generated_Source\PSoC5/ADC.c **** *  ADC_Offset:  Used as the offset while converting ADC counts
 957:Generated_Source\PSoC5/ADC.c **** *   to mVolts.
 958:Generated_Source\PSoC5/ADC.c **** *
 959:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 960:Generated_Source\PSoC5/ADC.c **** int16 ADC_CountsTo_mVolts(int32 adcCounts) 
 961:Generated_Source\PSoC5/ADC.c **** {
 1497              		.loc 1 961 0
 1498              		.cfi_startproc
 1499              		@ args = 0, pretend = 0, frame = 16
 1500              		@ frame_needed = 1, uses_anonymous_args = 0
 1501              		@ link register save eliminated.
 1502 0000 80B4     		push	{r7}
 1503              		.cfi_def_cfa_offset 4
 1504              		.cfi_offset 7, -4
 1505 0002 85B0     		sub	sp, sp, #20
 1506              		.cfi_def_cfa_offset 24
 1507 0004 00AF     		add	r7, sp, #0
 1508              		.cfi_def_cfa_register 7
 1509 0006 7860     		str	r0, [r7, #4]
 962:Generated_Source\PSoC5/ADC.c **** 
 963:Generated_Source\PSoC5/ADC.c ****     int16 mVolts;
 964:Generated_Source\PSoC5/ADC.c **** 
 965:Generated_Source\PSoC5/ADC.c ****     /* Convert adcCounts to the right align if left option selected */
 966:Generated_Source\PSoC5/ADC.c ****     #if(ADC_CFG1_DEC_DIV != 0)
 967:Generated_Source\PSoC5/ADC.c ****         if(ADC_Config == ADC_CFG1)
 968:Generated_Source\PSoC5/ADC.c ****         {
 969:Generated_Source\PSoC5/ADC.c ****             adcCounts /= ADC_CFG1_DEC_DIV;
 970:Generated_Source\PSoC5/ADC.c ****         }
 971:Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_CFG1_DEC_DIV */
 972:Generated_Source\PSoC5/ADC.c ****     #if((ADC_CFG2_DEC_DIV != 0) && (ADC_DEFAULT_NUM_CONFIGS > 1))
 973:Generated_Source\PSoC5/ADC.c ****         if(ADC_Config == ADC_CFG2)
 974:Generated_Source\PSoC5/ADC.c ****         {
 975:Generated_Source\PSoC5/ADC.c ****             adcCounts /= ADC_CFG2_DEC_DIV;
 976:Generated_Source\PSoC5/ADC.c ****         }
 977:Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_CFG2_DEC_DIV */
 978:Generated_Source\PSoC5/ADC.c ****     #if((ADC_CFG3_DEC_DIV != 0) && (ADC_DEFAULT_NUM_CONFIGS > 2))
 979:Generated_Source\PSoC5/ADC.c ****         if(ADC_Config == ADC_CFG3)
 980:Generated_Source\PSoC5/ADC.c ****         {
 981:Generated_Source\PSoC5/ADC.c ****             adcCounts /= ADC_CFG3_DEC_DIV;
 982:Generated_Source\PSoC5/ADC.c ****         }
 983:Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_CFG2_DEC_DIV */
 984:Generated_Source\PSoC5/ADC.c ****     #if((ADC_CFG4_DEC_DIV != 0) && (ADC_DEFAULT_NUM_CONFIGS > 3))
 985:Generated_Source\PSoC5/ADC.c ****         if(ADC_Config == ADC_CFG4)
 986:Generated_Source\PSoC5/ADC.c ****         {
 987:Generated_Source\PSoC5/ADC.c ****             adcCounts /= ADC_CFG4_DEC_DIV;
 988:Generated_Source\PSoC5/ADC.c ****         }
 989:Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_CFG2_DEC_DIV */
 990:Generated_Source\PSoC5/ADC.c **** 
 991:Generated_Source\PSoC5/ADC.c ****     /* Subtract ADC offset */
 992:Generated_Source\PSoC5/ADC.c ****     adcCounts -= ADC_Offset;
 1510              		.loc 1 992 0
 1511 0008 0A4B     		ldr	r3, .L79
 1512 000a 1B68     		ldr	r3, [r3]
 1513 000c 7A68     		ldr	r2, [r7, #4]
 1514 000e D31A     		subs	r3, r2, r3
 1515 0010 7B60     		str	r3, [r7, #4]
 993:Generated_Source\PSoC5/ADC.c **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cccSVp0l.s 			page 45


 994:Generated_Source\PSoC5/ADC.c ****     mVolts = (int16)(( adcCounts * ADC_1MV_COUNTS ) / ADC_CountsPerVolt) ;
 1516              		.loc 1 994 0
 1517 0012 7B68     		ldr	r3, [r7, #4]
 1518 0014 4FF47A72 		mov	r2, #1000
 1519 0018 02FB03F2 		mul	r2, r2, r3
 1520 001c 064B     		ldr	r3, .L79+4
 1521 001e 1B68     		ldr	r3, [r3]
 1522 0020 92FBF3F3 		sdiv	r3, r2, r3
 1523 0024 FB81     		strh	r3, [r7, #14]	@ movhi
 995:Generated_Source\PSoC5/ADC.c **** 
 996:Generated_Source\PSoC5/ADC.c ****     return(mVolts);
 1524              		.loc 1 996 0
 1525 0026 B7F90E30 		ldrsh	r3, [r7, #14]
 997:Generated_Source\PSoC5/ADC.c **** }
 1526              		.loc 1 997 0
 1527 002a 1846     		mov	r0, r3
 1528 002c 1437     		adds	r7, r7, #20
 1529              		.cfi_def_cfa_offset 4
 1530 002e BD46     		mov	sp, r7
 1531              		.cfi_def_cfa_register 13
 1532              		@ sp needed
 1533 0030 80BC     		pop	{r7}
 1534              		.cfi_restore 7
 1535              		.cfi_def_cfa_offset 0
 1536 0032 7047     		bx	lr
 1537              	.L80:
 1538              		.align	2
 1539              	.L79:
 1540 0034 00000000 		.word	ADC_Offset
 1541 0038 00000000 		.word	ADC_CountsPerVolt
 1542              		.cfi_endproc
 1543              	.LFE16:
 1544              		.size	ADC_CountsTo_mVolts, .-ADC_CountsTo_mVolts
 1545              		.global	__aeabi_i2f
 1546              		.section	.text.ADC_CountsTo_Volts,"ax",%progbits
 1547              		.align	2
 1548              		.global	ADC_CountsTo_Volts
 1549              		.thumb
 1550              		.thumb_func
 1551              		.type	ADC_CountsTo_Volts, %function
 1552              	ADC_CountsTo_Volts:
 1553              	.LFB17:
 998:Generated_Source\PSoC5/ADC.c **** 
 999:Generated_Source\PSoC5/ADC.c **** 
1000:Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
1001:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_CountsTo_Volts
1002:Generated_Source\PSoC5/ADC.c **** ********************************************************************************
1003:Generated_Source\PSoC5/ADC.c **** *
1004:Generated_Source\PSoC5/ADC.c **** * Summary:
1005:Generated_Source\PSoC5/ADC.c **** *  Converts the ADC output to Volts as a floating point number. For
1006:Generated_Source\PSoC5/ADC.c **** *  example, if the ADC measure a voltage of 1.2345 Volts, the
1007:Generated_Source\PSoC5/ADC.c **** *  returned result would be +1.2345 Volts.
1008:Generated_Source\PSoC5/ADC.c **** *
1009:Generated_Source\PSoC5/ADC.c **** * Parameters:
1010:Generated_Source\PSoC5/ADC.c **** *  int32 adcCounts:  Result from the ADC conversion.
1011:Generated_Source\PSoC5/ADC.c **** *
1012:Generated_Source\PSoC5/ADC.c **** * Return:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cccSVp0l.s 			page 46


1013:Generated_Source\PSoC5/ADC.c **** *  float32: Result in Volts
1014:Generated_Source\PSoC5/ADC.c **** *
1015:Generated_Source\PSoC5/ADC.c **** * Global variables:
1016:Generated_Source\PSoC5/ADC.c **** *  ADC_CountsPerVolt:  used to convert to Volts.
1017:Generated_Source\PSoC5/ADC.c **** *  ADC_Offset:  Used as the offset while converting ADC counts
1018:Generated_Source\PSoC5/ADC.c **** *   to Volts.
1019:Generated_Source\PSoC5/ADC.c **** *
1020:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
1021:Generated_Source\PSoC5/ADC.c **** float32 ADC_CountsTo_Volts(int32 adcCounts) 
1022:Generated_Source\PSoC5/ADC.c **** {
 1554              		.loc 1 1022 0
 1555              		.cfi_startproc
 1556              		@ args = 0, pretend = 0, frame = 16
 1557              		@ frame_needed = 1, uses_anonymous_args = 0
 1558 0000 90B5     		push	{r4, r7, lr}
 1559              		.cfi_def_cfa_offset 12
 1560              		.cfi_offset 4, -12
 1561              		.cfi_offset 7, -8
 1562              		.cfi_offset 14, -4
 1563 0002 85B0     		sub	sp, sp, #20
 1564              		.cfi_def_cfa_offset 32
 1565 0004 00AF     		add	r7, sp, #0
 1566              		.cfi_def_cfa_register 7
 1567 0006 7860     		str	r0, [r7, #4]
1023:Generated_Source\PSoC5/ADC.c **** 
1024:Generated_Source\PSoC5/ADC.c ****     float32 Volts;
1025:Generated_Source\PSoC5/ADC.c **** 
1026:Generated_Source\PSoC5/ADC.c ****     /* Convert adcCounts to the right align if left option selected */
1027:Generated_Source\PSoC5/ADC.c ****     #if(ADC_CFG1_DEC_DIV != 0)
1028:Generated_Source\PSoC5/ADC.c ****         if(ADC_Config == ADC_CFG1)
1029:Generated_Source\PSoC5/ADC.c ****         {
1030:Generated_Source\PSoC5/ADC.c ****             adcCounts /= ADC_CFG1_DEC_DIV;
1031:Generated_Source\PSoC5/ADC.c ****         }
1032:Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_CFG1_DEC_DIV */
1033:Generated_Source\PSoC5/ADC.c ****     #if((ADC_CFG2_DEC_DIV != 0) && (ADC_DEFAULT_NUM_CONFIGS > 1))
1034:Generated_Source\PSoC5/ADC.c ****         if(ADC_Config == ADC_CFG2)
1035:Generated_Source\PSoC5/ADC.c ****         {
1036:Generated_Source\PSoC5/ADC.c ****             adcCounts /= ADC_CFG2_DEC_DIV;
1037:Generated_Source\PSoC5/ADC.c ****         }
1038:Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_CFG2_DEC_DIV */
1039:Generated_Source\PSoC5/ADC.c ****     #if((ADC_CFG3_DEC_DIV != 0) && (ADC_DEFAULT_NUM_CONFIGS > 2))
1040:Generated_Source\PSoC5/ADC.c ****         if(ADC_Config == ADC_CFG3)
1041:Generated_Source\PSoC5/ADC.c ****         {
1042:Generated_Source\PSoC5/ADC.c ****             adcCounts /= ADC_CFG3_DEC_DIV;
1043:Generated_Source\PSoC5/ADC.c ****         }
1044:Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_CFG2_DEC_DIV */
1045:Generated_Source\PSoC5/ADC.c ****     #if((ADC_CFG4_DEC_DIV != 0) && (ADC_DEFAULT_NUM_CONFIGS > 3))
1046:Generated_Source\PSoC5/ADC.c ****         if(ADC_Config == ADC_CFG4)
1047:Generated_Source\PSoC5/ADC.c ****         {
1048:Generated_Source\PSoC5/ADC.c ****             adcCounts /= ADC_CFG4_DEC_DIV;
1049:Generated_Source\PSoC5/ADC.c ****         }
1050:Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_CFG2_DEC_DIV */
1051:Generated_Source\PSoC5/ADC.c **** 
1052:Generated_Source\PSoC5/ADC.c ****     /* Subtract ADC offset */
1053:Generated_Source\PSoC5/ADC.c ****     adcCounts -= ADC_Offset;
 1568              		.loc 1 1053 0
 1569 0008 0C4B     		ldr	r3, .L83
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cccSVp0l.s 			page 47


 1570 000a 1B68     		ldr	r3, [r3]
 1571 000c 7A68     		ldr	r2, [r7, #4]
 1572 000e D31A     		subs	r3, r2, r3
 1573 0010 7B60     		str	r3, [r7, #4]
1054:Generated_Source\PSoC5/ADC.c **** 
1055:Generated_Source\PSoC5/ADC.c ****     Volts = (float32)adcCounts / (float32)ADC_CountsPerVolt;
 1574              		.loc 1 1055 0
 1575 0012 7868     		ldr	r0, [r7, #4]
 1576 0014 FFF7FEFF 		bl	__aeabi_i2f
 1577 0018 0446     		mov	r4, r0
 1578 001a 094B     		ldr	r3, .L83+4
 1579 001c 1B68     		ldr	r3, [r3]
 1580 001e 1846     		mov	r0, r3
 1581 0020 FFF7FEFF 		bl	__aeabi_i2f
 1582 0024 0346     		mov	r3, r0
 1583 0026 1946     		mov	r1, r3
 1584 0028 2046     		mov	r0, r4
 1585 002a FFF7FEFF 		bl	__aeabi_fdiv
 1586 002e 0346     		mov	r3, r0
 1587 0030 FB60     		str	r3, [r7, #12]	@ float
1056:Generated_Source\PSoC5/ADC.c **** 
1057:Generated_Source\PSoC5/ADC.c ****     return( Volts );
 1588              		.loc 1 1057 0
 1589 0032 FB68     		ldr	r3, [r7, #12]	@ float
1058:Generated_Source\PSoC5/ADC.c **** }
 1590              		.loc 1 1058 0
 1591 0034 1846     		mov	r0, r3
 1592 0036 1437     		adds	r7, r7, #20
 1593              		.cfi_def_cfa_offset 12
 1594 0038 BD46     		mov	sp, r7
 1595              		.cfi_def_cfa_register 13
 1596              		@ sp needed
 1597 003a 90BD     		pop	{r4, r7, pc}
 1598              	.L84:
 1599              		.align	2
 1600              	.L83:
 1601 003c 00000000 		.word	ADC_Offset
 1602 0040 00000000 		.word	ADC_CountsPerVolt
 1603              		.cfi_endproc
 1604              	.LFE17:
 1605              		.size	ADC_CountsTo_Volts, .-ADC_CountsTo_Volts
 1606              		.section	.text.ADC_CountsTo_uVolts,"ax",%progbits
 1607              		.align	2
 1608              		.global	ADC_CountsTo_uVolts
 1609              		.thumb
 1610              		.thumb_func
 1611              		.type	ADC_CountsTo_uVolts, %function
 1612              	ADC_CountsTo_uVolts:
 1613              	.LFB18:
1059:Generated_Source\PSoC5/ADC.c **** 
1060:Generated_Source\PSoC5/ADC.c **** 
1061:Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
1062:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_CountsTo_uVolts
1063:Generated_Source\PSoC5/ADC.c **** ********************************************************************************
1064:Generated_Source\PSoC5/ADC.c **** *
1065:Generated_Source\PSoC5/ADC.c **** * Summary:
1066:Generated_Source\PSoC5/ADC.c **** *  Converts the ADC output to uVolts as a 32-bit integer. For example,
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cccSVp0l.s 			page 48


1067:Generated_Source\PSoC5/ADC.c **** *  if the ADC measured -0.02345 Volts, the return value would be -23450 uVolts.
1068:Generated_Source\PSoC5/ADC.c **** *
1069:Generated_Source\PSoC5/ADC.c **** * Parameters:
1070:Generated_Source\PSoC5/ADC.c **** *  int32 adcCounts: Result from the ADC conversion.
1071:Generated_Source\PSoC5/ADC.c **** *
1072:Generated_Source\PSoC5/ADC.c **** * Return:
1073:Generated_Source\PSoC5/ADC.c **** *  int32:  Result in uVolts
1074:Generated_Source\PSoC5/ADC.c **** *
1075:Generated_Source\PSoC5/ADC.c **** * Global variables:
1076:Generated_Source\PSoC5/ADC.c **** *  ADC_CountsPerVolt:  used to convert ADC counts to mVolts.
1077:Generated_Source\PSoC5/ADC.c **** *  ADC_Offset:  Used as the offset while converting ADC counts
1078:Generated_Source\PSoC5/ADC.c **** *   to mVolts.
1079:Generated_Source\PSoC5/ADC.c **** *
1080:Generated_Source\PSoC5/ADC.c **** * Theory:
1081:Generated_Source\PSoC5/ADC.c **** *  Care must be taken to not exceed the maximum value for a 31 bit signed
1082:Generated_Source\PSoC5/ADC.c **** *  number in the conversion to uVolts and at the same time not lose resolution.
1083:Generated_Source\PSoC5/ADC.c **** *
1084:Generated_Source\PSoC5/ADC.c **** *  uVolts = ((A * adcCounts) / ((int32)ADC_CountsPerVolt / B));
1085:Generated_Source\PSoC5/ADC.c **** *
1086:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
1087:Generated_Source\PSoC5/ADC.c **** int32 ADC_CountsTo_uVolts(int32 adcCounts) 
1088:Generated_Source\PSoC5/ADC.c **** {
 1614              		.loc 1 1088 0
 1615              		.cfi_startproc
 1616              		@ args = 0, pretend = 0, frame = 24
 1617              		@ frame_needed = 1, uses_anonymous_args = 0
 1618              		@ link register save eliminated.
 1619 0000 80B4     		push	{r7}
 1620              		.cfi_def_cfa_offset 4
 1621              		.cfi_offset 7, -4
 1622 0002 87B0     		sub	sp, sp, #28
 1623              		.cfi_def_cfa_offset 32
 1624 0004 00AF     		add	r7, sp, #0
 1625              		.cfi_def_cfa_register 7
 1626 0006 7860     		str	r0, [r7, #4]
1089:Generated_Source\PSoC5/ADC.c **** 
1090:Generated_Source\PSoC5/ADC.c ****     int32 uVolts;
1091:Generated_Source\PSoC5/ADC.c ****     int32 coefA;
1092:Generated_Source\PSoC5/ADC.c ****     int32 coefB;
1093:Generated_Source\PSoC5/ADC.c ****     uint8 resolution;
1094:Generated_Source\PSoC5/ADC.c **** 
1095:Generated_Source\PSoC5/ADC.c ****     /* Set the resolution based on the configuration */
1096:Generated_Source\PSoC5/ADC.c ****     /* Convert adcCounts to the right align if left option selected */
1097:Generated_Source\PSoC5/ADC.c ****     if (ADC_Config == ADC_CFG1)
 1627              		.loc 1 1097 0
 1628 0008 264B     		ldr	r3, .L96
 1629 000a 1B78     		ldrb	r3, [r3]
 1630 000c DBB2     		uxtb	r3, r3
 1631 000e 012B     		cmp	r3, #1
 1632 0010 02D1     		bne	.L86
1098:Generated_Source\PSoC5/ADC.c ****     {
1099:Generated_Source\PSoC5/ADC.c ****         resolution = ADC_CFG1_RESOLUTION;
 1633              		.loc 1 1099 0
 1634 0012 0C23     		movs	r3, #12
 1635 0014 FB73     		strb	r3, [r7, #15]
 1636 0016 11E0     		b	.L87
 1637              	.L86:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cccSVp0l.s 			page 49


1100:Generated_Source\PSoC5/ADC.c ****         #if(ADC_CFG1_DEC_DIV != 0)
1101:Generated_Source\PSoC5/ADC.c ****             adcCounts /= ADC_CFG1_DEC_DIV;
1102:Generated_Source\PSoC5/ADC.c ****         #endif /* ADC_CFG1_DEC_DIV */
1103:Generated_Source\PSoC5/ADC.c ****     }
1104:Generated_Source\PSoC5/ADC.c ****     else if (ADC_Config == ADC_CFG2)
 1638              		.loc 1 1104 0
 1639 0018 224B     		ldr	r3, .L96
 1640 001a 1B78     		ldrb	r3, [r3]
 1641 001c DBB2     		uxtb	r3, r3
 1642 001e 022B     		cmp	r3, #2
 1643 0020 02D1     		bne	.L88
1105:Generated_Source\PSoC5/ADC.c ****     {
1106:Generated_Source\PSoC5/ADC.c ****         resolution = ADC_CFG2_RESOLUTION;
 1644              		.loc 1 1106 0
 1645 0022 1023     		movs	r3, #16
 1646 0024 FB73     		strb	r3, [r7, #15]
 1647 0026 09E0     		b	.L87
 1648              	.L88:
1107:Generated_Source\PSoC5/ADC.c ****         #if(ADC_CFG2_DEC_DIV != 0)
1108:Generated_Source\PSoC5/ADC.c ****             adcCounts /= ADC_CFG2_DEC_DIV;
1109:Generated_Source\PSoC5/ADC.c ****         #endif /* ADC_CFG2_DEC_DIV */
1110:Generated_Source\PSoC5/ADC.c ****     }
1111:Generated_Source\PSoC5/ADC.c ****     else if (ADC_Config == ADC_CFG3)
 1649              		.loc 1 1111 0
 1650 0028 1E4B     		ldr	r3, .L96
 1651 002a 1B78     		ldrb	r3, [r3]
 1652 002c DBB2     		uxtb	r3, r3
 1653 002e 032B     		cmp	r3, #3
 1654 0030 02D1     		bne	.L89
1112:Generated_Source\PSoC5/ADC.c ****     {
1113:Generated_Source\PSoC5/ADC.c ****         resolution = ADC_CFG3_RESOLUTION;
 1655              		.loc 1 1113 0
 1656 0032 1023     		movs	r3, #16
 1657 0034 FB73     		strb	r3, [r7, #15]
 1658 0036 01E0     		b	.L87
 1659              	.L89:
1114:Generated_Source\PSoC5/ADC.c ****         #if(ADC_CFG3_DEC_DIV != 0)
1115:Generated_Source\PSoC5/ADC.c ****             adcCounts /= ADC_CFG3_DEC_DIV;
1116:Generated_Source\PSoC5/ADC.c ****         #endif /* ADC_CFG3_DEC_DIV */
1117:Generated_Source\PSoC5/ADC.c ****     }
1118:Generated_Source\PSoC5/ADC.c ****     else
1119:Generated_Source\PSoC5/ADC.c ****     {
1120:Generated_Source\PSoC5/ADC.c ****         resolution = ADC_CFG4_RESOLUTION;
 1660              		.loc 1 1120 0
 1661 0038 1023     		movs	r3, #16
 1662 003a FB73     		strb	r3, [r7, #15]
 1663              	.L87:
1121:Generated_Source\PSoC5/ADC.c ****         #if(ADC_CFG4_DEC_DIV != 0)
1122:Generated_Source\PSoC5/ADC.c ****             adcCounts /= ADC_CFG4_DEC_DIV;
1123:Generated_Source\PSoC5/ADC.c ****         #endif /* ADC_CFG4_DEC_DIV */
1124:Generated_Source\PSoC5/ADC.c ****     }
1125:Generated_Source\PSoC5/ADC.c **** 
1126:Generated_Source\PSoC5/ADC.c ****     switch (resolution)
 1664              		.loc 1 1126 0
 1665 003c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1666 003e 0C2B     		cmp	r3, #12
 1667 0040 02D0     		beq	.L91
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cccSVp0l.s 			page 50


 1668 0042 102B     		cmp	r3, #16
 1669 0044 05D0     		beq	.L92
 1670 0046 0AE0     		b	.L95
 1671              	.L91:
1127:Generated_Source\PSoC5/ADC.c ****     {
1128:Generated_Source\PSoC5/ADC.c ****         #if( (ADC_CFG1_RESOLUTION == ADC__BITS_12) || \
1129:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG2_RESOLUTION == ADC__BITS_12) || \
1130:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG3_RESOLUTION == ADC__BITS_12) || \
1131:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG4_RESOLUTION == ADC__BITS_12) )
1132:Generated_Source\PSoC5/ADC.c ****             case (uint8)ADC__BITS_12:
1133:Generated_Source\PSoC5/ADC.c ****                 coefA = ADC_1UV_COUNTS / ADC_DIVISOR_2;
 1672              		.loc 1 1133 0
 1673 0048 174B     		ldr	r3, .L96+4
 1674 004a 7B61     		str	r3, [r7, #20]
1134:Generated_Source\PSoC5/ADC.c ****                 coefB = ADC_DIVISOR_2;
 1675              		.loc 1 1134 0
 1676 004c 0223     		movs	r3, #2
 1677 004e 3B61     		str	r3, [r7, #16]
1135:Generated_Source\PSoC5/ADC.c ****                 break;
 1678              		.loc 1 1135 0
 1679 0050 0AE0     		b	.L93
 1680              	.L92:
1136:Generated_Source\PSoC5/ADC.c ****         #endif /* ADC__BITS_12 */    
1137:Generated_Source\PSoC5/ADC.c ****         #if( (ADC_CFG1_RESOLUTION == ADC__BITS_13) || \
1138:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG2_RESOLUTION == ADC__BITS_13) || \
1139:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG3_RESOLUTION == ADC__BITS_13) || \
1140:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG4_RESOLUTION == ADC__BITS_13) )
1141:Generated_Source\PSoC5/ADC.c ****             case (uint8)ADC__BITS_13:
1142:Generated_Source\PSoC5/ADC.c ****                 coefA = ADC_1UV_COUNTS / ADC_DIVISOR_4;
1143:Generated_Source\PSoC5/ADC.c ****                 coefB = ADC_DIVISOR_4;
1144:Generated_Source\PSoC5/ADC.c ****                 break;
1145:Generated_Source\PSoC5/ADC.c ****         #endif /* ADC__BITS_13 */    
1146:Generated_Source\PSoC5/ADC.c ****         #if( (ADC_CFG1_RESOLUTION == ADC__BITS_14) || \
1147:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG2_RESOLUTION == ADC__BITS_14) || \
1148:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG3_RESOLUTION == ADC__BITS_14) || \
1149:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG4_RESOLUTION == ADC__BITS_14) )
1150:Generated_Source\PSoC5/ADC.c ****             case (uint8)ADC__BITS_14:
1151:Generated_Source\PSoC5/ADC.c ****                 coefA = ADC_1UV_COUNTS / ADC_DIVISOR_8;
1152:Generated_Source\PSoC5/ADC.c ****                 coefB = ADC_DIVISOR_8;
1153:Generated_Source\PSoC5/ADC.c ****                 break;
1154:Generated_Source\PSoC5/ADC.c ****         #endif /* ADC__BITS_14 */    
1155:Generated_Source\PSoC5/ADC.c ****         #if( (ADC_CFG1_RESOLUTION == ADC__BITS_15) || \
1156:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG2_RESOLUTION == ADC__BITS_15) || \
1157:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG3_RESOLUTION == ADC__BITS_15) || \
1158:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG4_RESOLUTION == ADC__BITS_15) )
1159:Generated_Source\PSoC5/ADC.c ****             case (uint8)ADC__BITS_15:
1160:Generated_Source\PSoC5/ADC.c ****                 coefA = ADC_1UV_COUNTS / ADC_DIVISOR_16;
1161:Generated_Source\PSoC5/ADC.c ****                 coefB = ADC_DIVISOR_16;
1162:Generated_Source\PSoC5/ADC.c ****                 break;
1163:Generated_Source\PSoC5/ADC.c ****         #endif /* ADC__BITS_15 */    
1164:Generated_Source\PSoC5/ADC.c ****         #if( (ADC_CFG1_RESOLUTION == ADC__BITS_16) || \
1165:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG2_RESOLUTION == ADC__BITS_16) || \
1166:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG3_RESOLUTION == ADC__BITS_16) || \
1167:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG4_RESOLUTION == ADC__BITS_16) )
1168:Generated_Source\PSoC5/ADC.c ****             case (uint8)ADC__BITS_16:
1169:Generated_Source\PSoC5/ADC.c ****                 coefA = ADC_1UV_COUNTS / ADC_DIVISOR_32;
 1681              		.loc 1 1169 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cccSVp0l.s 			page 51


 1682 0052 47F61223 		movw	r3, #31250
 1683 0056 7B61     		str	r3, [r7, #20]
1170:Generated_Source\PSoC5/ADC.c ****                 coefB = ADC_DIVISOR_32;
 1684              		.loc 1 1170 0
 1685 0058 2023     		movs	r3, #32
 1686 005a 3B61     		str	r3, [r7, #16]
1171:Generated_Source\PSoC5/ADC.c ****                 break;
 1687              		.loc 1 1171 0
 1688 005c 04E0     		b	.L93
 1689              	.L95:
1172:Generated_Source\PSoC5/ADC.c ****         #endif /* ADC__BITS_16 */    
1173:Generated_Source\PSoC5/ADC.c ****         #if( (ADC_CFG1_RESOLUTION == ADC__BITS_17) || \
1174:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG2_RESOLUTION == ADC__BITS_17) || \
1175:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG3_RESOLUTION == ADC__BITS_17) || \
1176:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG4_RESOLUTION == ADC__BITS_17) )
1177:Generated_Source\PSoC5/ADC.c ****             case (uint8)ADC__BITS_17:
1178:Generated_Source\PSoC5/ADC.c ****                 coefA = ADC_1UV_COUNTS / ADC_DIVISOR_64;
1179:Generated_Source\PSoC5/ADC.c ****                 coefB = ADC_DIVISOR_64;
1180:Generated_Source\PSoC5/ADC.c ****                 break;
1181:Generated_Source\PSoC5/ADC.c ****         #endif /* ADC__BITS_17 */    
1182:Generated_Source\PSoC5/ADC.c ****         #if( (ADC_CFG1_RESOLUTION == ADC__BITS_18) || \
1183:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG2_RESOLUTION == ADC__BITS_18) || \
1184:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG3_RESOLUTION == ADC__BITS_18) || \
1185:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG4_RESOLUTION == ADC__BITS_18) )
1186:Generated_Source\PSoC5/ADC.c ****             case (uint8)ADC__BITS_18:
1187:Generated_Source\PSoC5/ADC.c ****                 coefA = ADC_1UV_COUNTS / ADC_DIVISOR_125;
1188:Generated_Source\PSoC5/ADC.c ****                 coefB = ADC_DIVISOR_125;
1189:Generated_Source\PSoC5/ADC.c ****                 break;
1190:Generated_Source\PSoC5/ADC.c ****         #endif /* ADC__BITS_18 */    
1191:Generated_Source\PSoC5/ADC.c ****         #if( (ADC_CFG1_RESOLUTION == ADC__BITS_19) || \
1192:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG2_RESOLUTION == ADC__BITS_19) || \
1193:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG3_RESOLUTION == ADC__BITS_19) || \
1194:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG4_RESOLUTION == ADC__BITS_19) )
1195:Generated_Source\PSoC5/ADC.c ****             case (uint8)ADC__BITS_19:
1196:Generated_Source\PSoC5/ADC.c ****                 coefA = ADC_1UV_COUNTS / ADC_DIVISOR_250;
1197:Generated_Source\PSoC5/ADC.c ****                 coefB = ADC_DIVISOR_250;
1198:Generated_Source\PSoC5/ADC.c ****                 break;
1199:Generated_Source\PSoC5/ADC.c ****         #endif /* ADC__BITS_19 */    
1200:Generated_Source\PSoC5/ADC.c ****         #if( (ADC_CFG1_RESOLUTION == ADC__BITS_20) || \
1201:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG2_RESOLUTION == ADC__BITS_20) || \
1202:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG3_RESOLUTION == ADC__BITS_20) || \
1203:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG4_RESOLUTION == ADC__BITS_20) )
1204:Generated_Source\PSoC5/ADC.c ****             case (uint8)ADC__BITS_20:
1205:Generated_Source\PSoC5/ADC.c ****                 coefA = ADC_1UV_COUNTS / ADC_DIVISOR_500;
1206:Generated_Source\PSoC5/ADC.c ****                 coefB = ADC_DIVISOR_500;
1207:Generated_Source\PSoC5/ADC.c ****                 break;
1208:Generated_Source\PSoC5/ADC.c ****         #endif /* ADC__BITS_20 */    
1209:Generated_Source\PSoC5/ADC.c ****         default:    /* resolution < 12 */
1210:Generated_Source\PSoC5/ADC.c ****             /* 11 bits ADC + 2^20(1048576) = 31 bits */
1211:Generated_Source\PSoC5/ADC.c ****             coefA = ADC_1UV_COUNTS;
 1690              		.loc 1 1211 0
 1691 005e 134B     		ldr	r3, .L96+8
 1692 0060 7B61     		str	r3, [r7, #20]
1212:Generated_Source\PSoC5/ADC.c ****             coefB = ADC_DIVISOR_1;
 1693              		.loc 1 1212 0
 1694 0062 0123     		movs	r3, #1
 1695 0064 3B61     		str	r3, [r7, #16]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cccSVp0l.s 			page 52


1213:Generated_Source\PSoC5/ADC.c ****             break;
 1696              		.loc 1 1213 0
 1697 0066 00BF     		nop
 1698              	.L93:
1214:Generated_Source\PSoC5/ADC.c ****     }
1215:Generated_Source\PSoC5/ADC.c ****     coefB = ADC_CountsPerVolt / coefB;
 1699              		.loc 1 1215 0
 1700 0068 114B     		ldr	r3, .L96+12
 1701 006a 1A68     		ldr	r2, [r3]
 1702 006c 3B69     		ldr	r3, [r7, #16]
 1703 006e 92FBF3F3 		sdiv	r3, r2, r3
 1704 0072 3B61     		str	r3, [r7, #16]
1216:Generated_Source\PSoC5/ADC.c ****     uVolts = ((coefA * adcCounts) / coefB) - ((coefA * ADC_Offset) / coefB);
 1705              		.loc 1 1216 0
 1706 0074 7B69     		ldr	r3, [r7, #20]
 1707 0076 7A68     		ldr	r2, [r7, #4]
 1708 0078 02FB03F2 		mul	r2, r2, r3
 1709 007c 3B69     		ldr	r3, [r7, #16]
 1710 007e 92FBF3F2 		sdiv	r2, r2, r3
 1711 0082 0C4B     		ldr	r3, .L96+16
 1712 0084 1B68     		ldr	r3, [r3]
 1713 0086 7969     		ldr	r1, [r7, #20]
 1714 0088 01FB03F1 		mul	r1, r1, r3
 1715 008c 3B69     		ldr	r3, [r7, #16]
 1716 008e 91FBF3F3 		sdiv	r3, r1, r3
 1717 0092 D31A     		subs	r3, r2, r3
 1718 0094 BB60     		str	r3, [r7, #8]
1217:Generated_Source\PSoC5/ADC.c **** 
1218:Generated_Source\PSoC5/ADC.c ****     return( uVolts );
 1719              		.loc 1 1218 0
 1720 0096 BB68     		ldr	r3, [r7, #8]
1219:Generated_Source\PSoC5/ADC.c **** }
 1721              		.loc 1 1219 0
 1722 0098 1846     		mov	r0, r3
 1723 009a 1C37     		adds	r7, r7, #28
 1724              		.cfi_def_cfa_offset 4
 1725 009c BD46     		mov	sp, r7
 1726              		.cfi_def_cfa_register 13
 1727              		@ sp needed
 1728 009e 80BC     		pop	{r7}
 1729              		.cfi_restore 7
 1730              		.cfi_def_cfa_offset 0
 1731 00a0 7047     		bx	lr
 1732              	.L97:
 1733 00a2 00BF     		.align	2
 1734              	.L96:
 1735 00a4 00000000 		.word	ADC_Config
 1736 00a8 20A10700 		.word	500000
 1737 00ac 40420F00 		.word	1000000
 1738 00b0 00000000 		.word	ADC_CountsPerVolt
 1739 00b4 00000000 		.word	ADC_Offset
 1740              		.cfi_endproc
 1741              	.LFE18:
 1742              		.size	ADC_CountsTo_uVolts, .-ADC_CountsTo_uVolts
 1743              		.section	.text.ADC_InitConfig,"ax",%progbits
 1744              		.align	2
 1745              		.thumb
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cccSVp0l.s 			page 53


 1746              		.thumb_func
 1747              		.type	ADC_InitConfig, %function
 1748              	ADC_InitConfig:
 1749              	.LFB19:
1220:Generated_Source\PSoC5/ADC.c **** 
1221:Generated_Source\PSoC5/ADC.c **** 
1222:Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
1223:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_InitConfig(uint8 config)
1224:Generated_Source\PSoC5/ADC.c **** ********************************************************************************
1225:Generated_Source\PSoC5/ADC.c **** *
1226:Generated_Source\PSoC5/ADC.c **** * Summary:
1227:Generated_Source\PSoC5/ADC.c **** *  Initializes all registers based on customizer settings
1228:Generated_Source\PSoC5/ADC.c **** *
1229:Generated_Source\PSoC5/ADC.c **** * Parameters:
1230:Generated_Source\PSoC5/ADC.c **** *   void
1231:Generated_Source\PSoC5/ADC.c **** *
1232:Generated_Source\PSoC5/ADC.c **** * Return:
1233:Generated_Source\PSoC5/ADC.c **** *  None
1234:Generated_Source\PSoC5/ADC.c **** *
1235:Generated_Source\PSoC5/ADC.c **** * Global variables:
1236:Generated_Source\PSoC5/ADC.c **** *  ADC_CountsPerVolt:  Used to set the default counts per volt.
1237:Generated_Source\PSoC5/ADC.c **** *
1238:Generated_Source\PSoC5/ADC.c **** * Side Effects: Rewrites the coherency set by ADC_SetCoherency()
1239:Generated_Source\PSoC5/ADC.c **** *   API to the default value.
1240:Generated_Source\PSoC5/ADC.c **** *
1241:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
1242:Generated_Source\PSoC5/ADC.c **** static void ADC_InitConfig(uint8 config) 
1243:Generated_Source\PSoC5/ADC.c **** {
 1750              		.loc 1 1243 0
 1751              		.cfi_startproc
 1752              		@ args = 0, pretend = 0, frame = 8
 1753              		@ frame_needed = 1, uses_anonymous_args = 0
 1754 0000 80B5     		push	{r7, lr}
 1755              		.cfi_def_cfa_offset 8
 1756              		.cfi_offset 7, -8
 1757              		.cfi_offset 14, -4
 1758 0002 82B0     		sub	sp, sp, #8
 1759              		.cfi_def_cfa_offset 16
 1760 0004 00AF     		add	r7, sp, #0
 1761              		.cfi_def_cfa_register 7
 1762 0006 0346     		mov	r3, r0
 1763 0008 FB71     		strb	r3, [r7, #7]
1244:Generated_Source\PSoC5/ADC.c ****     ADC_stopConversion = 0u;
 1764              		.loc 1 1244 0
 1765 000a 384B     		ldr	r3, .L101
 1766 000c 0022     		movs	r2, #0
 1767 000e 1A70     		strb	r2, [r3]
1245:Generated_Source\PSoC5/ADC.c **** 
1246:Generated_Source\PSoC5/ADC.c ****     if (config == 1u)
 1768              		.loc 1 1246 0
 1769 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1770 0012 012B     		cmp	r3, #1
 1771 0014 66D1     		bne	.L100
1247:Generated_Source\PSoC5/ADC.c ****     {
1248:Generated_Source\PSoC5/ADC.c ****         /* Default Config */
1249:Generated_Source\PSoC5/ADC.c ****         ADC_DEC_CR_REG      = ADC_CFG1_DEC_CR;
 1772              		.loc 1 1249 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cccSVp0l.s 			page 54


 1773 0016 364B     		ldr	r3, .L101+4
 1774 0018 3222     		movs	r2, #50
 1775 001a 1A70     		strb	r2, [r3]
1250:Generated_Source\PSoC5/ADC.c ****         ADC_DEC_SHIFT1_REG  = ADC_CFG1_DEC_SHIFT1;
 1776              		.loc 1 1250 0
 1777 001c 354B     		ldr	r3, .L101+8
 1778 001e 0622     		movs	r2, #6
 1779 0020 1A70     		strb	r2, [r3]
1251:Generated_Source\PSoC5/ADC.c ****         ADC_DEC_SHIFT2_REG  = ADC_CFG1_DEC_SHIFT2;
 1780              		.loc 1 1251 0
 1781 0022 354B     		ldr	r3, .L101+12
 1782 0024 0822     		movs	r2, #8
 1783 0026 1A70     		strb	r2, [r3]
1252:Generated_Source\PSoC5/ADC.c ****         ADC_DEC_DR2_REG     = ADC_CFG1_DEC_DR2;
 1784              		.loc 1 1252 0
 1785 0028 344B     		ldr	r3, .L101+16
 1786 002a 0022     		movs	r2, #0
 1787 002c 1A70     		strb	r2, [r3]
1253:Generated_Source\PSoC5/ADC.c ****         ADC_DEC_DR2H_REG    = ADC_CFG1_DEC_DR2H;
 1788              		.loc 1 1253 0
 1789 002e 344B     		ldr	r3, .L101+20
 1790 0030 0022     		movs	r2, #0
 1791 0032 1A70     		strb	r2, [r3]
1254:Generated_Source\PSoC5/ADC.c ****         ADC_DEC_DR1_REG     = ADC_CFG1_DEC_DR1;
 1792              		.loc 1 1254 0
 1793 0034 334B     		ldr	r3, .L101+24
 1794 0036 1F22     		movs	r2, #31
 1795 0038 1A70     		strb	r2, [r3]
1255:Generated_Source\PSoC5/ADC.c ****         ADC_DEC_OCOR_REG    = ADC_CFG1_DEC_OCOR;
 1796              		.loc 1 1255 0
 1797 003a 334B     		ldr	r3, .L101+28
 1798 003c 0022     		movs	r2, #0
 1799 003e 1A70     		strb	r2, [r3]
1256:Generated_Source\PSoC5/ADC.c ****         ADC_DEC_OCORM_REG   = ADC_CFG1_DEC_OCORM;
 1800              		.loc 1 1256 0
 1801 0040 324B     		ldr	r3, .L101+32
 1802 0042 0022     		movs	r2, #0
 1803 0044 1A70     		strb	r2, [r3]
1257:Generated_Source\PSoC5/ADC.c ****         ADC_DEC_OCORH_REG   = ADC_CFG1_DEC_OCORH;
 1804              		.loc 1 1257 0
 1805 0046 324B     		ldr	r3, .L101+36
 1806 0048 0022     		movs	r2, #0
 1807 004a 1A70     		strb	r2, [r3]
1258:Generated_Source\PSoC5/ADC.c ****         ADC_DEC_COHER_REG   = ADC_CFG1_DEC_COHER;
 1808              		.loc 1 1258 0
 1809 004c 314B     		ldr	r3, .L101+40
 1810 004e 0122     		movs	r2, #1
 1811 0050 1A70     		strb	r2, [r3]
1259:Generated_Source\PSoC5/ADC.c **** 
1260:Generated_Source\PSoC5/ADC.c ****         ADC_DSM_CR4_REG     = ADC_CFG1_DSM_CR4;
 1812              		.loc 1 1260 0
 1813 0052 314B     		ldr	r3, .L101+44
 1814 0054 1422     		movs	r2, #20
 1815 0056 1A70     		strb	r2, [r3]
1261:Generated_Source\PSoC5/ADC.c ****         ADC_DSM_CR5_REG     = ADC_CFG1_DSM_CR5;
 1816              		.loc 1 1261 0
 1817 0058 304B     		ldr	r3, .L101+48
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cccSVp0l.s 			page 55


 1818 005a 0522     		movs	r2, #5
 1819 005c 1A70     		strb	r2, [r3]
1262:Generated_Source\PSoC5/ADC.c ****         ADC_DSM_CR6_REG     = ADC_CFG1_DSM_CR6;
 1820              		.loc 1 1262 0
 1821 005e 304B     		ldr	r3, .L101+52
 1822 0060 1622     		movs	r2, #22
 1823 0062 1A70     		strb	r2, [r3]
1263:Generated_Source\PSoC5/ADC.c ****         ADC_DSM_CR7_REG     = ADC_CFG1_DSM_CR7;
 1824              		.loc 1 1263 0
 1825 0064 2F4B     		ldr	r3, .L101+56
 1826 0066 0022     		movs	r2, #0
 1827 0068 1A70     		strb	r2, [r3]
1264:Generated_Source\PSoC5/ADC.c ****         ADC_DSM_CR10_REG    = ADC_CFG1_DSM_CR10;
 1828              		.loc 1 1264 0
 1829 006a 2F4B     		ldr	r3, .L101+60
 1830 006c 4422     		movs	r2, #68
 1831 006e 1A70     		strb	r2, [r3]
1265:Generated_Source\PSoC5/ADC.c ****         ADC_DSM_CR11_REG    = ADC_CFG1_DSM_CR11;
 1832              		.loc 1 1265 0
 1833 0070 2E4B     		ldr	r3, .L101+64
 1834 0072 4822     		movs	r2, #72
 1835 0074 1A70     		strb	r2, [r3]
1266:Generated_Source\PSoC5/ADC.c ****         ADC_DSM_CR12_REG    = ADC_CFG1_DSM_CR12;
 1836              		.loc 1 1266 0
 1837 0076 2E4B     		ldr	r3, .L101+68
 1838 0078 0122     		movs	r2, #1
 1839 007a 1A70     		strb	r2, [r3]
1267:Generated_Source\PSoC5/ADC.c ****         ADC_DSM_CR14_REG    = ADC_CFG1_DSM_CR14;
 1840              		.loc 1 1267 0
 1841 007c 2D4B     		ldr	r3, .L101+72
 1842 007e 0222     		movs	r2, #2
 1843 0080 1A70     		strb	r2, [r3]
1268:Generated_Source\PSoC5/ADC.c ****         ADC_DSM_CR15_REG    = ADC_CFG1_DSM_CR15;
 1844              		.loc 1 1268 0
 1845 0082 2D4B     		ldr	r3, .L101+76
 1846 0084 2222     		movs	r2, #34
 1847 0086 1A70     		strb	r2, [r3]
1269:Generated_Source\PSoC5/ADC.c ****         ADC_DSM_CR16_REG    = ADC_CFG1_DSM_CR16;
 1848              		.loc 1 1269 0
 1849 0088 2C4B     		ldr	r3, .L101+80
 1850 008a 2822     		movs	r2, #40
 1851 008c 1A70     		strb	r2, [r3]
1270:Generated_Source\PSoC5/ADC.c ****         ADC_DSM_CR17_REG    = ADC_CFG1_DSM_CR17;
 1852              		.loc 1 1270 0
 1853 008e 2C4B     		ldr	r3, .L101+84
 1854 0090 EB22     		movs	r2, #235
 1855 0092 1A70     		strb	r2, [r3]
1271:Generated_Source\PSoC5/ADC.c ****         /* Set DSM_REF0_REG by disabling and enabling the PRESS circuit */
1272:Generated_Source\PSoC5/ADC.c ****         ADC_SetDSMRef0Reg(ADC_CFG1_DSM_REF0);
 1856              		.loc 1 1272 0
 1857 0094 5220     		movs	r0, #82
 1858 0096 FFF7FEFF 		bl	ADC_SetDSMRef0Reg
1273:Generated_Source\PSoC5/ADC.c ****         ADC_DSM_REF2_REG    = ADC_CFG1_DSM_REF2;
 1859              		.loc 1 1273 0
 1860 009a 2A4B     		ldr	r3, .L101+88
 1861 009c 5822     		movs	r2, #88
 1862 009e 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cccSVp0l.s 			page 56


1274:Generated_Source\PSoC5/ADC.c ****         ADC_DSM_REF3_REG    = ADC_CFG1_DSM_REF3;
 1863              		.loc 1 1274 0
 1864 00a0 294B     		ldr	r3, .L101+92
 1865 00a2 0022     		movs	r2, #0
 1866 00a4 1A70     		strb	r2, [r3]
1275:Generated_Source\PSoC5/ADC.c **** 
1276:Generated_Source\PSoC5/ADC.c ****         ADC_DSM_BUF0_REG    = ADC_CFG1_DSM_BUF0;
 1867              		.loc 1 1276 0
 1868 00a6 294B     		ldr	r3, .L101+96
 1869 00a8 0122     		movs	r2, #1
 1870 00aa 1A70     		strb	r2, [r3]
1277:Generated_Source\PSoC5/ADC.c ****         ADC_DSM_BUF1_REG    = ADC_CFG1_DSM_BUF1;
 1871              		.loc 1 1277 0
 1872 00ac 284B     		ldr	r3, .L101+100
 1873 00ae 0122     		movs	r2, #1
 1874 00b0 1A70     		strb	r2, [r3]
1278:Generated_Source\PSoC5/ADC.c ****         ADC_DSM_BUF2_REG    = ADC_CFG1_DSM_BUF2;
 1875              		.loc 1 1278 0
 1876 00b2 284B     		ldr	r3, .L101+104
 1877 00b4 0022     		movs	r2, #0
 1878 00b6 1A70     		strb	r2, [r3]
1279:Generated_Source\PSoC5/ADC.c ****         ADC_DSM_BUF3_REG    = ADC_CFG1_DSM_BUF3;
 1879              		.loc 1 1279 0
 1880 00b8 274B     		ldr	r3, .L101+108
 1881 00ba 0A22     		movs	r2, #10
 1882 00bc 1A70     		strb	r2, [r3]
1280:Generated_Source\PSoC5/ADC.c **** 
1281:Generated_Source\PSoC5/ADC.c ****         /* To select either Vssa or Vref to -ve input of DSM depending on
1282:Generated_Source\PSoC5/ADC.c ****         *  the input  range selected.
1283:Generated_Source\PSoC5/ADC.c ****         */
1284:Generated_Source\PSoC5/ADC.c ****         #if(ADC_DEFAULT_INPUT_MODE)
1285:Generated_Source\PSoC5/ADC.c ****             #if (ADC_CFG1_INPUT_RANGE == ADC_IR_VSSA_TO_2VREF)
1286:Generated_Source\PSoC5/ADC.c ****                 ADC_AMux_Select(1u);
1287:Generated_Source\PSoC5/ADC.c ****             #else
1288:Generated_Source\PSoC5/ADC.c ****                 ADC_AMux_Select(0u);
 1883              		.loc 1 1288 0
 1884 00be 0020     		movs	r0, #0
 1885 00c0 FFF7FEFF 		bl	ADC_AMux_Select
1289:Generated_Source\PSoC5/ADC.c ****             #endif /* ADC_IR_VSSA_TO_2VREF) */
1290:Generated_Source\PSoC5/ADC.c ****         #endif /* ADC_DEFAULT_INPUT_MODE */
1291:Generated_Source\PSoC5/ADC.c **** 
1292:Generated_Source\PSoC5/ADC.c ****         /* Set the Conversion stop if resolution is above 16 bit and conversion
1293:Generated_Source\PSoC5/ADC.c ****         *   mode is Single sample
1294:Generated_Source\PSoC5/ADC.c ****         */
1295:Generated_Source\PSoC5/ADC.c ****         #if(ADC_CFG1_RESOLUTION > 16 && \
1296:Generated_Source\PSoC5/ADC.c ****             ADC_CFG1_CONV_MODE == ADC_MODE_SINGLE_SAMPLE)
1297:Generated_Source\PSoC5/ADC.c ****             ADC_stopConversion = 1u;
1298:Generated_Source\PSoC5/ADC.c ****         #endif /* Single sample with resolution above 16 bits. */
1299:Generated_Source\PSoC5/ADC.c **** 
1300:Generated_Source\PSoC5/ADC.c ****         ADC_CountsPerVolt = (int32)ADC_CFG1_COUNTS_PER_VOLT;
 1886              		.loc 1 1300 0
 1887 00c4 254B     		ldr	r3, .L101+112
 1888 00c6 40F23332 		movw	r2, #819
 1889 00ca 1A60     		str	r2, [r3]
1301:Generated_Source\PSoC5/ADC.c **** 
1302:Generated_Source\PSoC5/ADC.c ****         ADC_Ext_CP_Clk_SetDividerRegister(ADC_CFG1_CP_CLK_DIVIDER, 1u);
 1890              		.loc 1 1302 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cccSVp0l.s 			page 57


 1891 00cc 0121     		movs	r1, #1
 1892 00ce 0420     		movs	r0, #4
 1893 00d0 FFF7FEFF 		bl	ADC_Ext_CP_Clk_SetDividerRegister
1303:Generated_Source\PSoC5/ADC.c **** 
1304:Generated_Source\PSoC5/ADC.c ****         /* This is only valid if there is an internal clock */
1305:Generated_Source\PSoC5/ADC.c ****         #if(ADC_DEFAULT_INTERNAL_CLK)
1306:Generated_Source\PSoC5/ADC.c ****             ADC_theACLK_SetDividerRegister(ADC_CFG1_ADC_CLK_DIVIDER, 1u);
 1894              		.loc 1 1306 0
 1895 00d4 0121     		movs	r1, #1
 1896 00d6 1520     		movs	r0, #21
 1897 00d8 FFF7FEFF 		bl	ADC_theACLK_SetDividerRegister
1307:Generated_Source\PSoC5/ADC.c ****         #endif /* ADC_DEFAULT_INTERNAL_CLK */
1308:Generated_Source\PSoC5/ADC.c **** 
1309:Generated_Source\PSoC5/ADC.c ****         #if(ADC_IRQ_REMOVE == 0u)
1310:Generated_Source\PSoC5/ADC.c ****             /* Set interrupt vector */
1311:Generated_Source\PSoC5/ADC.c ****             (void)CyIntSetVector(ADC_INTC_NUMBER, &ADC_ISR1);
 1898              		.loc 1 1311 0
 1899 00dc 2049     		ldr	r1, .L101+116
 1900 00de 1D20     		movs	r0, #29
 1901 00e0 FFF7FEFF 		bl	CyIntSetVector
 1902              	.L100:
1312:Generated_Source\PSoC5/ADC.c ****         #endif   /* End ADC_IRQ_REMOVE */
1313:Generated_Source\PSoC5/ADC.c ****     }
1314:Generated_Source\PSoC5/ADC.c **** 
1315:Generated_Source\PSoC5/ADC.c ****     #if(ADC_DEFAULT_NUM_CONFIGS > 1)
1316:Generated_Source\PSoC5/ADC.c ****         if(config == 2u)
1317:Generated_Source\PSoC5/ADC.c ****         {
1318:Generated_Source\PSoC5/ADC.c ****             /* Second Config */
1319:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_CR_REG      = ADC_CFG2_DEC_CR;
1320:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_SHIFT1_REG  = ADC_CFG2_DEC_SHIFT1;
1321:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_SHIFT2_REG  = ADC_CFG2_DEC_SHIFT2;
1322:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_DR2_REG     = ADC_CFG2_DEC_DR2;
1323:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_DR2H_REG    = ADC_CFG2_DEC_DR2H;
1324:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_DR1_REG     = ADC_CFG2_DEC_DR1;
1325:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_OCOR_REG    = ADC_CFG2_DEC_OCOR;
1326:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_OCORM_REG   = ADC_CFG2_DEC_OCORM;
1327:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_OCORH_REG   = ADC_CFG2_DEC_OCORH;
1328:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_COHER_REG   = ADC_CFG2_DEC_COHER;
1329:Generated_Source\PSoC5/ADC.c **** 
1330:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR4_REG     = ADC_CFG2_DSM_CR4;
1331:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR5_REG     = ADC_CFG2_DSM_CR5;
1332:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR6_REG     = ADC_CFG2_DSM_CR6;
1333:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR7_REG     = ADC_CFG2_DSM_CR7;
1334:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR10_REG    = ADC_CFG2_DSM_CR10;
1335:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR11_REG    = ADC_CFG2_DSM_CR11;
1336:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR12_REG    = ADC_CFG2_DSM_CR12;
1337:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR14_REG    = ADC_CFG2_DSM_CR14;
1338:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR15_REG    = ADC_CFG2_DSM_CR15;
1339:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR16_REG    = ADC_CFG2_DSM_CR16;
1340:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR17_REG    = ADC_CFG2_DSM_CR17;
1341:Generated_Source\PSoC5/ADC.c ****             /* Set DSM_REF0_REG by disabling and enabling the PRESS cirucit */
1342:Generated_Source\PSoC5/ADC.c ****             ADC_SetDSMRef0Reg(ADC_CFG2_DSM_REF0);
1343:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_REF2_REG    = ADC_CFG2_DSM_REF2;
1344:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_REF3_REG    = ADC_CFG2_DSM_REF3;
1345:Generated_Source\PSoC5/ADC.c **** 
1346:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_BUF0_REG    = ADC_CFG2_DSM_BUF0;
1347:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_BUF1_REG    = ADC_CFG2_DSM_BUF1;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cccSVp0l.s 			page 58


1348:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_BUF2_REG    = ADC_CFG2_DSM_BUF2;
1349:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_BUF3_REG    = ADC_CFG2_DSM_BUF3;
1350:Generated_Source\PSoC5/ADC.c **** 
1351:Generated_Source\PSoC5/ADC.c ****             /* To select either Vssa or Vref to -ve input of DSM depending on
1352:Generated_Source\PSoC5/ADC.c ****             *  the input range selected.
1353:Generated_Source\PSoC5/ADC.c ****             */
1354:Generated_Source\PSoC5/ADC.c **** 
1355:Generated_Source\PSoC5/ADC.c ****             #if(ADC_DEFAULT_INPUT_MODE)
1356:Generated_Source\PSoC5/ADC.c ****                 #if (ADC_CFG2_INPUT_RANGE == ADC_IR_VSSA_TO_2VREF)
1357:Generated_Source\PSoC5/ADC.c ****                     ADC_AMux_Select(1u);
1358:Generated_Source\PSoC5/ADC.c ****                 #else
1359:Generated_Source\PSoC5/ADC.c ****                     ADC_AMux_Select(0u);
1360:Generated_Source\PSoC5/ADC.c ****                 #endif /* ADC_IR_VSSA_TO_2VREF) */
1361:Generated_Source\PSoC5/ADC.c ****             #endif /* ADC_DEFAULT_INPUT_MODE */
1362:Generated_Source\PSoC5/ADC.c **** 
1363:Generated_Source\PSoC5/ADC.c ****             /* Set the Conversion stop if resolution is above 16 bit and
1364:Generated_Source\PSoC5/ADC.c ****             *   conversion mode is Single sample
1365:Generated_Source\PSoC5/ADC.c ****             */
1366:Generated_Source\PSoC5/ADC.c ****             #if(ADC_CFG2_RESOLUTION > 16 && \
1367:Generated_Source\PSoC5/ADC.c ****                 ADC_CFG2_CONV_MODE == ADC_MODE_SINGLE_SAMPLE)
1368:Generated_Source\PSoC5/ADC.c ****                 ADC_stopConversion = 1u;
1369:Generated_Source\PSoC5/ADC.c ****             #endif /* Single sample with resolution above 16 bits. */
1370:Generated_Source\PSoC5/ADC.c **** 
1371:Generated_Source\PSoC5/ADC.c ****             ADC_CountsPerVolt = (int32)ADC_CFG2_COUNTS_PER_VOLT;
1372:Generated_Source\PSoC5/ADC.c **** 
1373:Generated_Source\PSoC5/ADC.c ****             ADC_Ext_CP_Clk_SetDividerRegister(ADC_CFG2_CP_CLK_DIVIDER, 1u);
1374:Generated_Source\PSoC5/ADC.c **** 
1375:Generated_Source\PSoC5/ADC.c ****             /* This is only valid if there is an internal clock */
1376:Generated_Source\PSoC5/ADC.c ****             #if(ADC_DEFAULT_INTERNAL_CLK)
1377:Generated_Source\PSoC5/ADC.c ****                 ADC_theACLK_SetDividerRegister(ADC_CFG2_ADC_CLK_DIVIDER, 1u);
1378:Generated_Source\PSoC5/ADC.c ****             #endif /* ADC_DEFAULT_INTERNAL_CLK */
1379:Generated_Source\PSoC5/ADC.c **** 
1380:Generated_Source\PSoC5/ADC.c ****             #if(ADC_IRQ_REMOVE == 0u)
1381:Generated_Source\PSoC5/ADC.c ****                 /* Set interrupt vector */
1382:Generated_Source\PSoC5/ADC.c ****                 (void)CyIntSetVector(ADC_INTC_NUMBER, &ADC_ISR2);
1383:Generated_Source\PSoC5/ADC.c ****             #endif   /* End ADC_IRQ_REMOVE */
1384:Generated_Source\PSoC5/ADC.c ****         }
1385:Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_DEFAULT_NUM_CONFIGS > 1 */
1386:Generated_Source\PSoC5/ADC.c **** 
1387:Generated_Source\PSoC5/ADC.c ****     #if(ADC_DEFAULT_NUM_CONFIGS > 2)
1388:Generated_Source\PSoC5/ADC.c ****         if(config == 3u)
1389:Generated_Source\PSoC5/ADC.c ****         {
1390:Generated_Source\PSoC5/ADC.c ****             /* Third Config */
1391:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_CR_REG      = ADC_CFG3_DEC_CR;
1392:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_SHIFT1_REG  = ADC_CFG3_DEC_SHIFT1;
1393:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_SHIFT2_REG  = ADC_CFG3_DEC_SHIFT2;
1394:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_DR2_REG     = ADC_CFG3_DEC_DR2;
1395:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_DR2H_REG    = ADC_CFG3_DEC_DR2H;
1396:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_DR1_REG     = ADC_CFG3_DEC_DR1;
1397:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_OCOR_REG    = ADC_CFG3_DEC_OCOR;
1398:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_OCORM_REG   = ADC_CFG3_DEC_OCORM;
1399:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_OCORH_REG   = ADC_CFG3_DEC_OCORH;
1400:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_COHER_REG   = ADC_CFG3_DEC_COHER;
1401:Generated_Source\PSoC5/ADC.c **** 
1402:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR4_REG     = ADC_CFG3_DSM_CR4;
1403:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR5_REG     = ADC_CFG3_DSM_CR5;
1404:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR6_REG     = ADC_CFG3_DSM_CR6;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cccSVp0l.s 			page 59


1405:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR7_REG     = ADC_CFG3_DSM_CR7;
1406:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR10_REG    = ADC_CFG3_DSM_CR10;
1407:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR11_REG    = ADC_CFG3_DSM_CR11;
1408:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR12_REG    = ADC_CFG3_DSM_CR12;
1409:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR14_REG    = ADC_CFG3_DSM_CR14;
1410:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR15_REG    = ADC_CFG3_DSM_CR15;
1411:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR16_REG    = ADC_CFG3_DSM_CR16;
1412:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR17_REG    = ADC_CFG3_DSM_CR17;
1413:Generated_Source\PSoC5/ADC.c ****             /* Set DSM_REF0_REG by disabling and enabling the PRESS circuit */
1414:Generated_Source\PSoC5/ADC.c ****             ADC_SetDSMRef0Reg(ADC_CFG3_DSM_REF0);
1415:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_REF2_REG    = ADC_CFG3_DSM_REF2;
1416:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_REF3_REG    = ADC_CFG3_DSM_REF3;
1417:Generated_Source\PSoC5/ADC.c **** 
1418:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_BUF0_REG    = ADC_CFG3_DSM_BUF0;
1419:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_BUF1_REG    = ADC_CFG3_DSM_BUF1;
1420:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_BUF2_REG    = ADC_CFG3_DSM_BUF2;
1421:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_BUF3_REG    = ADC_CFG3_DSM_BUF3;
1422:Generated_Source\PSoC5/ADC.c **** 
1423:Generated_Source\PSoC5/ADC.c ****             /* To select either Vssa or Vref to -ve input of DSM depending on
1424:Generated_Source\PSoC5/ADC.c ****             *  the input range selected.
1425:Generated_Source\PSoC5/ADC.c ****             */
1426:Generated_Source\PSoC5/ADC.c ****             #if(ADC_DEFAULT_INPUT_MODE)
1427:Generated_Source\PSoC5/ADC.c ****                 #if (ADC_CFG3_INPUT_RANGE == ADC_IR_VSSA_TO_2VREF)
1428:Generated_Source\PSoC5/ADC.c ****                     ADC_AMux_Select(1u);
1429:Generated_Source\PSoC5/ADC.c ****                 #else
1430:Generated_Source\PSoC5/ADC.c ****                     ADC_AMux_Select(0u);
1431:Generated_Source\PSoC5/ADC.c ****                 #endif /* ADC_IR_VSSA_TO_2VREF) */
1432:Generated_Source\PSoC5/ADC.c ****             #endif /* ADC_DEFAULT_INPUT_MODE */
1433:Generated_Source\PSoC5/ADC.c **** 
1434:Generated_Source\PSoC5/ADC.c ****             /* Set the Conversion stop if resolution is above 16 bit and
1435:Generated_Source\PSoC5/ADC.c ****                conversion  mode is Single sample */
1436:Generated_Source\PSoC5/ADC.c ****             #if(ADC_CFG3_RESOLUTION > 16 && \
1437:Generated_Source\PSoC5/ADC.c ****                 ADC_CFG3_CONV_MODE == ADC_MODE_SINGLE_SAMPLE)
1438:Generated_Source\PSoC5/ADC.c ****                 ADC_stopConversion = 1u;
1439:Generated_Source\PSoC5/ADC.c ****             #endif /* Single sample with resolution above 16 bits */
1440:Generated_Source\PSoC5/ADC.c **** 
1441:Generated_Source\PSoC5/ADC.c ****             ADC_CountsPerVolt = (int32)ADC_CFG3_COUNTS_PER_VOLT;
1442:Generated_Source\PSoC5/ADC.c **** 
1443:Generated_Source\PSoC5/ADC.c ****             ADC_Ext_CP_Clk_SetDividerRegister(ADC_CFG3_CP_CLK_DIVIDER, 1u);
1444:Generated_Source\PSoC5/ADC.c **** 
1445:Generated_Source\PSoC5/ADC.c ****             /* This is only valid if there is an internal clock */
1446:Generated_Source\PSoC5/ADC.c ****             #if(ADC_DEFAULT_INTERNAL_CLK)
1447:Generated_Source\PSoC5/ADC.c ****                 ADC_theACLK_SetDividerRegister(ADC_CFG3_ADC_CLK_DIVIDER, 1u);
1448:Generated_Source\PSoC5/ADC.c ****             #endif /* ADC_DEFAULT_INTERNAL_CLK */
1449:Generated_Source\PSoC5/ADC.c **** 
1450:Generated_Source\PSoC5/ADC.c ****             #if(ADC_IRQ_REMOVE == 0u)
1451:Generated_Source\PSoC5/ADC.c ****                 /* Set interrupt vector */
1452:Generated_Source\PSoC5/ADC.c ****                 (void)CyIntSetVector(ADC_INTC_NUMBER, &ADC_ISR3);
1453:Generated_Source\PSoC5/ADC.c ****             #endif   /* End ADC_IRQ_REMOVE */
1454:Generated_Source\PSoC5/ADC.c ****         }
1455:Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_DEFAULT_NUM_CONFIGS > 2 */
1456:Generated_Source\PSoC5/ADC.c **** 
1457:Generated_Source\PSoC5/ADC.c ****     #if(ADC_DEFAULT_NUM_CONFIGS > 3)
1458:Generated_Source\PSoC5/ADC.c ****         if (config == 4u)
1459:Generated_Source\PSoC5/ADC.c ****         {
1460:Generated_Source\PSoC5/ADC.c ****             /* Fourth Config */
1461:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_CR_REG      = ADC_CFG4_DEC_CR;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cccSVp0l.s 			page 60


1462:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_SHIFT1_REG  = ADC_CFG4_DEC_SHIFT1;
1463:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_SHIFT2_REG  = ADC_CFG4_DEC_SHIFT2;
1464:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_DR2_REG     = ADC_CFG4_DEC_DR2;
1465:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_DR2H_REG    = ADC_CFG4_DEC_DR2H;
1466:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_DR1_REG     = ADC_CFG4_DEC_DR1;
1467:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_OCOR_REG    = ADC_CFG4_DEC_OCOR;
1468:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_OCORM_REG   = ADC_CFG4_DEC_OCORM;
1469:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_OCORH_REG   = ADC_CFG4_DEC_OCORH;
1470:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_COHER_REG   = ADC_CFG4_DEC_COHER;
1471:Generated_Source\PSoC5/ADC.c **** 
1472:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR4_REG     = ADC_CFG4_DSM_CR4;
1473:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR5_REG     = ADC_CFG4_DSM_CR5;
1474:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR6_REG     = ADC_CFG4_DSM_CR6;
1475:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR7_REG     = ADC_CFG4_DSM_CR7;
1476:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR10_REG    = ADC_CFG4_DSM_CR10;
1477:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR11_REG    = ADC_CFG4_DSM_CR11;
1478:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR12_REG    = ADC_CFG4_DSM_CR12;
1479:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR14_REG    = ADC_CFG4_DSM_CR14;
1480:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR15_REG    = ADC_CFG4_DSM_CR15;
1481:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR16_REG    = ADC_CFG4_DSM_CR16;
1482:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR17_REG    = ADC_CFG4_DSM_CR17;
1483:Generated_Source\PSoC5/ADC.c ****             /* Set DSM_REF0_REG by disabling and enabling the PRESS circuit */
1484:Generated_Source\PSoC5/ADC.c ****             ADC_SetDSMRef0Reg(ADC_CFG4_DSM_REF0);
1485:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_REF2_REG    = ADC_CFG4_DSM_REF2;
1486:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_REF3_REG    = ADC_CFG4_DSM_REF3;
1487:Generated_Source\PSoC5/ADC.c **** 
1488:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_BUF0_REG    = ADC_CFG4_DSM_BUF0;
1489:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_BUF1_REG    = ADC_CFG4_DSM_BUF1;
1490:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_BUF2_REG    = ADC_CFG4_DSM_BUF2;
1491:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_BUF3_REG    = ADC_CFG4_DSM_BUF3;
1492:Generated_Source\PSoC5/ADC.c **** 
1493:Generated_Source\PSoC5/ADC.c ****             /* To select either Vssa or Vref to -ve input of DSM depending on
1494:Generated_Source\PSoC5/ADC.c ****             *  the input range selected.
1495:Generated_Source\PSoC5/ADC.c ****             */
1496:Generated_Source\PSoC5/ADC.c ****             #if(ADC_DEFAULT_INPUT_MODE)
1497:Generated_Source\PSoC5/ADC.c ****                 #if (ADC_CFG4_INPUT_RANGE == ADC_IR_VSSA_TO_2VREF)
1498:Generated_Source\PSoC5/ADC.c ****                     ADC_AMux_Select(1u);
1499:Generated_Source\PSoC5/ADC.c ****                 #else
1500:Generated_Source\PSoC5/ADC.c ****                     ADC_AMux_Select(0u);
1501:Generated_Source\PSoC5/ADC.c ****                 #endif /* ADC_IR_VSSA_TO_2VREF) */
1502:Generated_Source\PSoC5/ADC.c ****             #endif /* ADC_DEFAULT_INPUT_MODE */
1503:Generated_Source\PSoC5/ADC.c **** 
1504:Generated_Source\PSoC5/ADC.c ****             /* Set the Conversion stop if resolution is above 16 bit and
1505:Generated_Source\PSoC5/ADC.c ****                conversion mode is Single sample */
1506:Generated_Source\PSoC5/ADC.c ****             #if(ADC_CFG4_RESOLUTION > 16 && \
1507:Generated_Source\PSoC5/ADC.c ****                 ADC_CFG4_CONV_MODE == ADC_MODE_SINGLE_SAMPLE)
1508:Generated_Source\PSoC5/ADC.c ****                 ADC_stopConversion = 1u;
1509:Generated_Source\PSoC5/ADC.c ****             #endif /* Single sample with resolution above 16 bits */
1510:Generated_Source\PSoC5/ADC.c **** 
1511:Generated_Source\PSoC5/ADC.c ****             ADC_CountsPerVolt = (int32)ADC_CFG4_COUNTS_PER_VOLT;
1512:Generated_Source\PSoC5/ADC.c **** 
1513:Generated_Source\PSoC5/ADC.c ****             ADC_Ext_CP_Clk_SetDividerRegister(ADC_CFG4_CP_CLK_DIVIDER, 1u);
1514:Generated_Source\PSoC5/ADC.c **** 
1515:Generated_Source\PSoC5/ADC.c ****             /* This is only valid if there is an internal clock */
1516:Generated_Source\PSoC5/ADC.c ****             #if(ADC_DEFAULT_INTERNAL_CLK)
1517:Generated_Source\PSoC5/ADC.c ****                 ADC_theACLK_SetDividerRegister(ADC_CFG4_ADC_CLK_DIVIDER, 1u);
1518:Generated_Source\PSoC5/ADC.c ****             #endif /* ADC_DEFAULT_INTERNAL_CLK */
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cccSVp0l.s 			page 61


1519:Generated_Source\PSoC5/ADC.c **** 
1520:Generated_Source\PSoC5/ADC.c ****             #if(ADC_IRQ_REMOVE == 0u)
1521:Generated_Source\PSoC5/ADC.c ****                 /* Set interrupt vector */
1522:Generated_Source\PSoC5/ADC.c ****                 (void)CyIntSetVector(ADC_INTC_NUMBER, &ADC_ISR4);
1523:Generated_Source\PSoC5/ADC.c ****             #endif   /* End ADC_IRQ_REMOVE */
1524:Generated_Source\PSoC5/ADC.c ****         }
1525:Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_DEFAULT_NUM_CONFIGS > 3 */
1526:Generated_Source\PSoC5/ADC.c **** }
 1903              		.loc 1 1526 0
 1904 00e4 00BF     		nop
 1905 00e6 0837     		adds	r7, r7, #8
 1906              		.cfi_def_cfa_offset 8
 1907 00e8 BD46     		mov	sp, r7
 1908              		.cfi_def_cfa_register 13
 1909              		@ sp needed
 1910 00ea 80BD     		pop	{r7, pc}
 1911              	.L102:
 1912              		.align	2
 1913              	.L101:
 1914 00ec 00000000 		.word	ADC_stopConversion
 1915 00f0 004E0040 		.word	1073761792
 1916 00f4 024E0040 		.word	1073761794
 1917 00f8 034E0040 		.word	1073761795
 1918 00fc 044E0040 		.word	1073761796
 1919 0100 054E0040 		.word	1073761797
 1920 0104 064E0040 		.word	1073761798
 1921 0108 084E0040 		.word	1073761800
 1922 010c 094E0040 		.word	1073761801
 1923 0110 0A4E0040 		.word	1073761802
 1924 0114 144E0040 		.word	1073761812
 1925 0118 84580040 		.word	1073764484
 1926 011c 85580040 		.word	1073764485
 1927 0120 86580040 		.word	1073764486
 1928 0124 87580040 		.word	1073764487
 1929 0128 8A580040 		.word	1073764490
 1930 012c 8B580040 		.word	1073764491
 1931 0130 8C580040 		.word	1073764492
 1932 0134 8E580040 		.word	1073764494
 1933 0138 8F580040 		.word	1073764495
 1934 013c 90580040 		.word	1073764496
 1935 0140 91580040 		.word	1073764497
 1936 0144 94580040 		.word	1073764500
 1937 0148 95580040 		.word	1073764501
 1938 014c 9A580040 		.word	1073764506
 1939 0150 9B580040 		.word	1073764507
 1940 0154 9C580040 		.word	1073764508
 1941 0158 9D580040 		.word	1073764509
 1942 015c 00000000 		.word	ADC_CountsPerVolt
 1943 0160 00000000 		.word	ADC_ISR1
 1944              		.cfi_endproc
 1945              	.LFE19:
 1946              		.size	ADC_InitConfig, .-ADC_InitConfig
 1947              		.section	.text.ADC_SelectConfiguration,"ax",%progbits
 1948              		.align	2
 1949              		.global	ADC_SelectConfiguration
 1950              		.thumb
 1951              		.thumb_func
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cccSVp0l.s 			page 62


 1952              		.type	ADC_SelectConfiguration, %function
 1953              	ADC_SelectConfiguration:
 1954              	.LFB20:
1527:Generated_Source\PSoC5/ADC.c **** 
1528:Generated_Source\PSoC5/ADC.c **** 
1529:Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
1530:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_SelectCofiguration
1531:Generated_Source\PSoC5/ADC.c **** ********************************************************************************
1532:Generated_Source\PSoC5/ADC.c **** *
1533:Generated_Source\PSoC5/ADC.c **** * Summary:
1534:Generated_Source\PSoC5/ADC.c **** *  Sets one of up to four ADC configurations. Before setting the new
1535:Generated_Source\PSoC5/ADC.c **** *  configuration, the ADC is stopped and powered down. After setting
1536:Generated_Source\PSoC5/ADC.c **** *  the new configuration, the ADC can be powered and conversion
1537:Generated_Source\PSoC5/ADC.c **** *  can be restarted depending up on the value of second parameter
1538:Generated_Source\PSoC5/ADC.c **** *  restart. If the value of this parameter is 1, then ADC will be
1539:Generated_Source\PSoC5/ADC.c **** *  restarted. If this value is zero, then user must call ADC_Start
1540:Generated_Source\PSoC5/ADC.c **** *  and ADC_StartConvert() to restart the conversion.
1541:Generated_Source\PSoC5/ADC.c **** *
1542:Generated_Source\PSoC5/ADC.c **** * Parameters:
1543:Generated_Source\PSoC5/ADC.c **** *  config:  configuration user wants to select.
1544:Generated_Source\PSoC5/ADC.c **** *           Valid range: 1..4
1545:Generated_Source\PSoC5/ADC.c **** *  restart:  Restart option. 1 means start the ADC and restart the conversion.
1546:Generated_Source\PSoC5/ADC.c **** *                            0 means do not start the ADC and conversion.
1547:Generated_Source\PSoC5/ADC.c **** *
1548:Generated_Source\PSoC5/ADC.c **** * Return:
1549:Generated_Source\PSoC5/ADC.c **** *  None
1550:Generated_Source\PSoC5/ADC.c **** *
1551:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
1552:Generated_Source\PSoC5/ADC.c **** void ADC_SelectConfiguration(uint8 config, uint8 restart)
1553:Generated_Source\PSoC5/ADC.c ****                                               
1554:Generated_Source\PSoC5/ADC.c **** {
 1955              		.loc 1 1554 0
 1956              		.cfi_startproc
 1957              		@ args = 0, pretend = 0, frame = 8
 1958              		@ frame_needed = 1, uses_anonymous_args = 0
 1959 0000 80B5     		push	{r7, lr}
 1960              		.cfi_def_cfa_offset 8
 1961              		.cfi_offset 7, -8
 1962              		.cfi_offset 14, -4
 1963 0002 82B0     		sub	sp, sp, #8
 1964              		.cfi_def_cfa_offset 16
 1965 0004 00AF     		add	r7, sp, #0
 1966              		.cfi_def_cfa_register 7
 1967 0006 0346     		mov	r3, r0
 1968 0008 0A46     		mov	r2, r1
 1969 000a FB71     		strb	r3, [r7, #7]
 1970 000c 1346     		mov	r3, r2
 1971 000e BB71     		strb	r3, [r7, #6]
1555:Generated_Source\PSoC5/ADC.c ****     /* Check whether the configuration number is valid or not */
1556:Generated_Source\PSoC5/ADC.c ****     if((config > 0u) && (config <= ADC_DEFAULT_NUM_CONFIGS))
 1972              		.loc 1 1556 0
 1973 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1974 0012 002B     		cmp	r3, #0
 1975 0014 28D0     		beq	.L107
 1976              		.loc 1 1556 0 is_stmt 0 discriminator 1
 1977 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1978 0018 012B     		cmp	r3, #1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cccSVp0l.s 			page 63


 1979 001a 25D8     		bhi	.L107
1557:Generated_Source\PSoC5/ADC.c ****     {
1558:Generated_Source\PSoC5/ADC.c ****         /* Set the flag to ensure Start() API doesn't override the 
1559:Generated_Source\PSoC5/ADC.c **** 		*  selected configuration
1560:Generated_Source\PSoC5/ADC.c **** 		*/
1561:Generated_Source\PSoC5/ADC.c ****         if(ADC_initVar == 0u)
 1980              		.loc 1 1561 0 is_stmt 1
 1981 001c 144B     		ldr	r3, .L108
 1982 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1983 0020 002B     		cmp	r3, #0
 1984 0022 02D1     		bne	.L105
1562:Generated_Source\PSoC5/ADC.c ****         {
1563:Generated_Source\PSoC5/ADC.c ****             ADC_started = 1u;
 1985              		.loc 1 1563 0
 1986 0024 134B     		ldr	r3, .L108+4
 1987 0026 0122     		movs	r2, #1
 1988 0028 1A70     		strb	r2, [r3]
 1989              	.L105:
1564:Generated_Source\PSoC5/ADC.c ****         }
1565:Generated_Source\PSoC5/ADC.c **** 
1566:Generated_Source\PSoC5/ADC.c ****         /* Update the config flag */
1567:Generated_Source\PSoC5/ADC.c ****         ADC_Config = config;
 1990              		.loc 1 1567 0
 1991 002a 134A     		ldr	r2, .L108+8
 1992 002c FB79     		ldrb	r3, [r7, #7]
 1993 002e 1370     		strb	r3, [r2]
1568:Generated_Source\PSoC5/ADC.c **** 
1569:Generated_Source\PSoC5/ADC.c ****         /* Stop the ADC  */
1570:Generated_Source\PSoC5/ADC.c ****         ADC_Stop();
 1994              		.loc 1 1570 0
 1995 0030 FFF7FEFF 		bl	ADC_Stop
1571:Generated_Source\PSoC5/ADC.c **** 
1572:Generated_Source\PSoC5/ADC.c ****         /* Set the  ADC registers based on the configuration */
1573:Generated_Source\PSoC5/ADC.c ****         ADC_InitConfig(config);
 1996              		.loc 1 1573 0
 1997 0034 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1998 0036 1846     		mov	r0, r3
 1999 0038 FFF7FEFF 		bl	ADC_InitConfig
1574:Generated_Source\PSoC5/ADC.c **** 
1575:Generated_Source\PSoC5/ADC.c ****         /* Compensate the gain */
1576:Generated_Source\PSoC5/ADC.c ****         ADC_DEC_GVAL_REG = ADC_gcor[config - 1u].gval;
 2000              		.loc 1 1576 0
 2001 003c 0F4A     		ldr	r2, .L108+12
 2002 003e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2003 0040 013B     		subs	r3, r3, #1
 2004 0042 0F49     		ldr	r1, .L108+16
 2005 0044 9B00     		lsls	r3, r3, #2
 2006 0046 0B44     		add	r3, r3, r1
 2007 0048 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 2008 004a 1370     		strb	r3, [r2]
1577:Generated_Source\PSoC5/ADC.c ****         CY_SET_REG16(ADC_DEC_GCOR_16B_PTR, ADC_gcor[config - 1u].gcor);
 2009              		.loc 1 1577 0
 2010 004c 0D4A     		ldr	r2, .L108+20
 2011 004e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2012 0050 013B     		subs	r3, r3, #1
 2013 0052 0B49     		ldr	r1, .L108+16
 2014 0054 31F82330 		ldrh	r3, [r1, r3, lsl #2]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cccSVp0l.s 			page 64


 2015 0058 1380     		strh	r3, [r2]	@ movhi
1578:Generated_Source\PSoC5/ADC.c **** 
1579:Generated_Source\PSoC5/ADC.c ****         if(restart == 1u)
 2016              		.loc 1 1579 0
 2017 005a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2018 005c 012B     		cmp	r3, #1
 2019 005e 03D1     		bne	.L107
1580:Generated_Source\PSoC5/ADC.c ****         {
1581:Generated_Source\PSoC5/ADC.c ****             /* Restart the ADC */
1582:Generated_Source\PSoC5/ADC.c ****             ADC_Start();
 2020              		.loc 1 1582 0
 2021 0060 FFF7FEFF 		bl	ADC_Start
1583:Generated_Source\PSoC5/ADC.c **** 
1584:Generated_Source\PSoC5/ADC.c ****             /* Restart the ADC conversion */
1585:Generated_Source\PSoC5/ADC.c ****             ADC_StartConvert();
 2022              		.loc 1 1585 0
 2023 0064 FFF7FEFF 		bl	ADC_StartConvert
 2024              	.L107:
1586:Generated_Source\PSoC5/ADC.c ****         }
1587:Generated_Source\PSoC5/ADC.c ****     }
1588:Generated_Source\PSoC5/ADC.c ****     else
1589:Generated_Source\PSoC5/ADC.c ****     {
1590:Generated_Source\PSoC5/ADC.c ****         /* Halt CPU in debug mode if config is out of valid range */
1591:Generated_Source\PSoC5/ADC.c ****         CYASSERT(0u != 0u);
1592:Generated_Source\PSoC5/ADC.c ****     }
1593:Generated_Source\PSoC5/ADC.c **** }
 2025              		.loc 1 1593 0
 2026 0068 00BF     		nop
 2027 006a 0837     		adds	r7, r7, #8
 2028              		.cfi_def_cfa_offset 8
 2029 006c BD46     		mov	sp, r7
 2030              		.cfi_def_cfa_register 13
 2031              		@ sp needed
 2032 006e 80BD     		pop	{r7, pc}
 2033              	.L109:
 2034              		.align	2
 2035              	.L108:
 2036 0070 00000000 		.word	ADC_initVar
 2037 0074 00000000 		.word	ADC_started
 2038 0078 00000000 		.word	ADC_Config
 2039 007c 0E4E0040 		.word	1073761806
 2040 0080 04000000 		.word	ADC_gcor
 2041 0084 0C4E0040 		.word	1073761804
 2042              		.cfi_endproc
 2043              	.LFE20:
 2044              		.size	ADC_SelectConfiguration, .-ADC_SelectConfiguration
 2045              		.section	.text.ADC_GainCompensation,"ax",%progbits
 2046              		.align	2
 2047              		.thumb
 2048              		.thumb_func
 2049              		.type	ADC_GainCompensation, %function
 2050              	ADC_GainCompensation:
 2051              	.LFB21:
1594:Generated_Source\PSoC5/ADC.c **** 
1595:Generated_Source\PSoC5/ADC.c **** 
1596:Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
1597:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_GainCompensation
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cccSVp0l.s 			page 65


1598:Generated_Source\PSoC5/ADC.c **** ********************************************************************************
1599:Generated_Source\PSoC5/ADC.c **** *
1600:Generated_Source\PSoC5/ADC.c **** * Summary:
1601:Generated_Source\PSoC5/ADC.c **** *  This API calculates the trim value and then store this to gcor structure.
1602:Generated_Source\PSoC5/ADC.c **** *
1603:Generated_Source\PSoC5/ADC.c **** * Parameters:
1604:Generated_Source\PSoC5/ADC.c **** *  inputRange:  input range for which trim value is to be calculated.
1605:Generated_Source\PSoC5/ADC.c **** *  IdealDecGain:  Ideal Decimator gain for the selected resolution and
1606:Generated_Source\PSoC5/ADC.c **** *                 conversion  mode.
1607:Generated_Source\PSoC5/ADC.c **** *  IdealOddDecGain:  Ideal odd decimation gain for the selected resolution and
1608:Generated_Source\PSoC5/ADC.c ****                      conversion mode.
1609:Generated_Source\PSoC5/ADC.c **** *  resolution:  Resolution to select the proper flash location for trim value.
1610:Generated_Source\PSoC5/ADC.c **** *  config:      Specifies the configuration number
1611:Generated_Source\PSoC5/ADC.c **** *               Valid range: 1..4
1612:Generated_Source\PSoC5/ADC.c **** *
1613:Generated_Source\PSoC5/ADC.c **** * Return:
1614:Generated_Source\PSoC5/ADC.c **** *  None
1615:Generated_Source\PSoC5/ADC.c **** *
1616:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
1617:Generated_Source\PSoC5/ADC.c **** static void ADC_GainCompensation(uint8 inputRange, uint16 idealDecGain, uint16 idealOddDecGain,
1618:Generated_Source\PSoC5/ADC.c ****                               uint8 resolution, uint8 config) 
1619:Generated_Source\PSoC5/ADC.c **** {
 2052              		.loc 1 1619 0
 2053              		.cfi_startproc
 2054              		@ args = 4, pretend = 0, frame = 24
 2055              		@ frame_needed = 1, uses_anonymous_args = 0
 2056              		@ link register save eliminated.
 2057 0000 90B4     		push	{r4, r7}
 2058              		.cfi_def_cfa_offset 8
 2059              		.cfi_offset 4, -8
 2060              		.cfi_offset 7, -4
 2061 0002 86B0     		sub	sp, sp, #24
 2062              		.cfi_def_cfa_offset 32
 2063 0004 00AF     		add	r7, sp, #0
 2064              		.cfi_def_cfa_register 7
 2065 0006 0446     		mov	r4, r0
 2066 0008 0846     		mov	r0, r1
 2067 000a 1146     		mov	r1, r2
 2068 000c 1A46     		mov	r2, r3
 2069 000e 2346     		mov	r3, r4
 2070 0010 FB71     		strb	r3, [r7, #7]
 2071 0012 0346     		mov	r3, r0	@ movhi
 2072 0014 BB80     		strh	r3, [r7, #4]	@ movhi
 2073 0016 0B46     		mov	r3, r1	@ movhi
 2074 0018 7B80     		strh	r3, [r7, #2]	@ movhi
 2075 001a 1346     		mov	r3, r2
 2076 001c BB71     		strb	r3, [r7, #6]
1620:Generated_Source\PSoC5/ADC.c ****     int8 flash;
1621:Generated_Source\PSoC5/ADC.c **** 	int32 normalised;
1622:Generated_Source\PSoC5/ADC.c **** 	uint16 gcorValue;
1623:Generated_Source\PSoC5/ADC.c ****     uint32 gcorTmp;
1624:Generated_Source\PSoC5/ADC.c **** 
1625:Generated_Source\PSoC5/ADC.c ****     if((config > 0u) && (config <= ADC_DEFAULT_NUM_CONFIGS))
 2077              		.loc 1 1625 0
 2078 001e 97F82030 		ldrb	r3, [r7, #32]	@ zero_extendqisi2
 2079 0022 002B     		cmp	r3, #0
 2080 0024 00F08A80 		beq	.L129
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cccSVp0l.s 			page 66


 2081              		.loc 1 1625 0 is_stmt 0 discriminator 1
 2082 0028 97F82030 		ldrb	r3, [r7, #32]	@ zero_extendqisi2
 2083 002c 012B     		cmp	r3, #1
 2084 002e 00F28580 		bhi	.L129
1626:Generated_Source\PSoC5/ADC.c ****     {
1627:Generated_Source\PSoC5/ADC.c ****         switch(inputRange)
 2085              		.loc 1 1627 0 is_stmt 1
 2086 0032 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2087 0034 013B     		subs	r3, r3, #1
 2088 0036 092B     		cmp	r3, #9
 2089 0038 4AD8     		bhi	.L112
 2090 003a 01A2     		adr	r2, .L114
 2091 003c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2092              		.p2align 2
 2093              	.L114:
 2094 0040 69000000 		.word	.L113+1
 2095 0044 D1000000 		.word	.L112+1
 2096 0048 D1000000 		.word	.L112+1
 2097 004c 69000000 		.word	.L113+1
 2098 0050 D1000000 		.word	.L112+1
 2099 0054 D1000000 		.word	.L112+1
 2100 0058 83000000 		.word	.L115+1
 2101 005c 9D000000 		.word	.L116+1
 2102 0060 D1000000 		.word	.L112+1
 2103 0064 B7000000 		.word	.L117+1
 2104              		.p2align 1
 2105              	.L113:
1628:Generated_Source\PSoC5/ADC.c ****         {
1629:Generated_Source\PSoC5/ADC.c ****             case ADC_IR_VNEG_VREF_DIFF:
1630:Generated_Source\PSoC5/ADC.c ****             case ADC_IR_VSSA_TO_2VREF:
1631:Generated_Source\PSoC5/ADC.c ****                 /* Normalize the flash Value */
1632:Generated_Source\PSoC5/ADC.c ****                 if(resolution > 15u)
 2106              		.loc 1 1632 0
 2107 0068 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2108 006a 0F2B     		cmp	r3, #15
 2109 006c 04D9     		bls	.L118
1633:Generated_Source\PSoC5/ADC.c ****                 {
1634:Generated_Source\PSoC5/ADC.c ****                     flash = ADC_DEC_TRIM_VREF_DIFF_16_20;
 2110              		.loc 1 1634 0
 2111 006e 364B     		ldr	r3, .L130
 2112 0070 1B78     		ldrb	r3, [r3]
 2113 0072 DBB2     		uxtb	r3, r3
 2114 0074 FB75     		strb	r3, [r7, #23]
1635:Generated_Source\PSoC5/ADC.c ****                 }
1636:Generated_Source\PSoC5/ADC.c ****                 else
1637:Generated_Source\PSoC5/ADC.c ****                 {
1638:Generated_Source\PSoC5/ADC.c ****                     flash = ADC_DEC_TRIM_VREF_DIFF_8_15;
1639:Generated_Source\PSoC5/ADC.c ****                 }
1640:Generated_Source\PSoC5/ADC.c ****                 break;
 2115              		.loc 1 1640 0
 2116 0076 2EE0     		b	.L120
 2117              	.L118:
1638:Generated_Source\PSoC5/ADC.c ****                 }
 2118              		.loc 1 1638 0
 2119 0078 344B     		ldr	r3, .L130+4
 2120 007a 1B78     		ldrb	r3, [r3]
 2121 007c DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cccSVp0l.s 			page 67


 2122 007e FB75     		strb	r3, [r7, #23]
 2123              		.loc 1 1640 0
 2124 0080 29E0     		b	.L120
 2125              	.L115:
1641:Generated_Source\PSoC5/ADC.c **** 
1642:Generated_Source\PSoC5/ADC.c ****             case ADC_IR_VNEG_VREF_2_DIFF:
1643:Generated_Source\PSoC5/ADC.c ****                 /* Normalize the flash Value */
1644:Generated_Source\PSoC5/ADC.c ****                 if(resolution > 15u)
 2126              		.loc 1 1644 0
 2127 0082 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2128 0084 0F2B     		cmp	r3, #15
 2129 0086 04D9     		bls	.L121
1645:Generated_Source\PSoC5/ADC.c ****                 {
1646:Generated_Source\PSoC5/ADC.c ****                     flash = ADC_DEC_TRIM_VREF_2_DIFF_16_20;
 2130              		.loc 1 1646 0
 2131 0088 314B     		ldr	r3, .L130+8
 2132 008a 1B78     		ldrb	r3, [r3]
 2133 008c DBB2     		uxtb	r3, r3
 2134 008e FB75     		strb	r3, [r7, #23]
1647:Generated_Source\PSoC5/ADC.c ****                 }
1648:Generated_Source\PSoC5/ADC.c ****                 else
1649:Generated_Source\PSoC5/ADC.c ****                 {
1650:Generated_Source\PSoC5/ADC.c ****                     flash = ADC_DEC_TRIM_VREF_2_DIFF_8_15;
1651:Generated_Source\PSoC5/ADC.c ****                 }
1652:Generated_Source\PSoC5/ADC.c ****                 break;
 2135              		.loc 1 1652 0
 2136 0090 21E0     		b	.L120
 2137              	.L121:
1650:Generated_Source\PSoC5/ADC.c ****                 }
 2138              		.loc 1 1650 0
 2139 0092 304B     		ldr	r3, .L130+12
 2140 0094 1B78     		ldrb	r3, [r3]
 2141 0096 DBB2     		uxtb	r3, r3
 2142 0098 FB75     		strb	r3, [r7, #23]
 2143              		.loc 1 1652 0
 2144 009a 1CE0     		b	.L120
 2145              	.L116:
1653:Generated_Source\PSoC5/ADC.c **** 
1654:Generated_Source\PSoC5/ADC.c ****             case ADC_IR_VNEG_VREF_4_DIFF:
1655:Generated_Source\PSoC5/ADC.c ****                 /* Normalize the flash Value */
1656:Generated_Source\PSoC5/ADC.c ****                 if(resolution > 15u)
 2146              		.loc 1 1656 0
 2147 009c BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2148 009e 0F2B     		cmp	r3, #15
 2149 00a0 04D9     		bls	.L123
1657:Generated_Source\PSoC5/ADC.c ****                 {
1658:Generated_Source\PSoC5/ADC.c ****                     flash = ADC_DEC_TRIM_VREF_4_DIFF_16_20;
 2150              		.loc 1 1658 0
 2151 00a2 2D4B     		ldr	r3, .L130+16
 2152 00a4 1B78     		ldrb	r3, [r3]
 2153 00a6 DBB2     		uxtb	r3, r3
 2154 00a8 FB75     		strb	r3, [r7, #23]
1659:Generated_Source\PSoC5/ADC.c ****                 }
1660:Generated_Source\PSoC5/ADC.c ****                 else
1661:Generated_Source\PSoC5/ADC.c ****                 {
1662:Generated_Source\PSoC5/ADC.c ****                     flash = ADC_DEC_TRIM_VREF_4_DIFF_8_15;
1663:Generated_Source\PSoC5/ADC.c ****                 }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cccSVp0l.s 			page 68


1664:Generated_Source\PSoC5/ADC.c ****                 break;
 2155              		.loc 1 1664 0
 2156 00aa 14E0     		b	.L120
 2157              	.L123:
1662:Generated_Source\PSoC5/ADC.c ****                 }
 2158              		.loc 1 1662 0
 2159 00ac 2B4B     		ldr	r3, .L130+20
 2160 00ae 1B78     		ldrb	r3, [r3]
 2161 00b0 DBB2     		uxtb	r3, r3
 2162 00b2 FB75     		strb	r3, [r7, #23]
 2163              		.loc 1 1664 0
 2164 00b4 0FE0     		b	.L120
 2165              	.L117:
1665:Generated_Source\PSoC5/ADC.c **** 
1666:Generated_Source\PSoC5/ADC.c ****             case ADC_IR_VNEG_VREF_16_DIFF:
1667:Generated_Source\PSoC5/ADC.c ****                 /* Normalize the flash Value */
1668:Generated_Source\PSoC5/ADC.c ****                 if(resolution > 15u)
 2166              		.loc 1 1668 0
 2167 00b6 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2168 00b8 0F2B     		cmp	r3, #15
 2169 00ba 04D9     		bls	.L125
1669:Generated_Source\PSoC5/ADC.c ****                 {
1670:Generated_Source\PSoC5/ADC.c ****                     flash = ADC_DEC_TRIM_VREF_16_DIFF_16_20;
 2170              		.loc 1 1670 0
 2171 00bc 284B     		ldr	r3, .L130+24
 2172 00be 1B78     		ldrb	r3, [r3]
 2173 00c0 DBB2     		uxtb	r3, r3
 2174 00c2 FB75     		strb	r3, [r7, #23]
1671:Generated_Source\PSoC5/ADC.c ****                 }
1672:Generated_Source\PSoC5/ADC.c ****                 else
1673:Generated_Source\PSoC5/ADC.c ****                 {
1674:Generated_Source\PSoC5/ADC.c ****                     flash = ADC_DEC_TRIM_VREF_16_DIFF_8_15;
1675:Generated_Source\PSoC5/ADC.c ****                 }
1676:Generated_Source\PSoC5/ADC.c ****                 break;
 2175              		.loc 1 1676 0
 2176 00c4 07E0     		b	.L120
 2177              	.L125:
1674:Generated_Source\PSoC5/ADC.c ****                 }
 2178              		.loc 1 1674 0
 2179 00c6 274B     		ldr	r3, .L130+28
 2180 00c8 1B78     		ldrb	r3, [r3]
 2181 00ca DBB2     		uxtb	r3, r3
 2182 00cc FB75     		strb	r3, [r7, #23]
 2183              		.loc 1 1676 0
 2184 00ce 02E0     		b	.L120
 2185              	.L112:
1677:Generated_Source\PSoC5/ADC.c **** 
1678:Generated_Source\PSoC5/ADC.c ****             default:
1679:Generated_Source\PSoC5/ADC.c ****                 flash = 0;
 2186              		.loc 1 1679 0
 2187 00d0 0023     		movs	r3, #0
 2188 00d2 FB75     		strb	r3, [r7, #23]
1680:Generated_Source\PSoC5/ADC.c ****                 break;
 2189              		.loc 1 1680 0
 2190 00d4 00BF     		nop
 2191              	.L120:
1681:Generated_Source\PSoC5/ADC.c ****         }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cccSVp0l.s 			page 69


1682:Generated_Source\PSoC5/ADC.c **** 
1683:Generated_Source\PSoC5/ADC.c ****         /* Add two values */
1684:Generated_Source\PSoC5/ADC.c **** 		normalised = (int32)idealDecGain + ((int32)flash * 32);
 2192              		.loc 1 1684 0
 2193 00d6 BA88     		ldrh	r2, [r7, #4]
 2194 00d8 97F91730 		ldrsb	r3, [r7, #23]
 2195 00dc 5B01     		lsls	r3, r3, #5
 2196 00de 1344     		add	r3, r3, r2
 2197 00e0 3B61     		str	r3, [r7, #16]
1685:Generated_Source\PSoC5/ADC.c ****         gcorTmp = (uint32)normalised * (uint32)idealOddDecGain;
 2198              		.loc 1 1685 0
 2199 00e2 7B88     		ldrh	r3, [r7, #2]
 2200 00e4 3A69     		ldr	r2, [r7, #16]
 2201 00e6 02FB03F3 		mul	r3, r2, r3
 2202 00ea FB60     		str	r3, [r7, #12]
1686:Generated_Source\PSoC5/ADC.c ****         gcorValue = (uint16)(gcorTmp / ADC_IDEAL_GAIN_CONST);
 2203              		.loc 1 1686 0
 2204 00ec FB68     		ldr	r3, [r7, #12]
 2205 00ee DB0B     		lsrs	r3, r3, #15
 2206 00f0 BB82     		strh	r3, [r7, #20]	@ movhi
1687:Generated_Source\PSoC5/ADC.c **** 
1688:Generated_Source\PSoC5/ADC.c ****         if (resolution < (ADC_MAX_GVAL - 1u))
 2207              		.loc 1 1688 0
 2208 00f2 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2209 00f4 0D2B     		cmp	r3, #13
 2210 00f6 12D8     		bhi	.L127
1689:Generated_Source\PSoC5/ADC.c ****         {
1690:Generated_Source\PSoC5/ADC.c ****             gcorValue = (gcorValue >> (ADC_MAX_GVAL - (resolution + 1u)));
 2211              		.loc 1 1690 0
 2212 00f8 BA8A     		ldrh	r2, [r7, #20]
 2213 00fa BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2214 00fc C3F10E03 		rsb	r3, r3, #14
 2215 0100 42FA03F3 		asr	r3, r2, r3
 2216 0104 BB82     		strh	r3, [r7, #20]	@ movhi
1691:Generated_Source\PSoC5/ADC.c ****             ADC_gcor[config - 1u].gval = (resolution + 1u);
 2217              		.loc 1 1691 0
 2218 0106 97F82030 		ldrb	r3, [r7, #32]	@ zero_extendqisi2
 2219 010a 013B     		subs	r3, r3, #1
 2220 010c BA79     		ldrb	r2, [r7, #6]
 2221 010e 0132     		adds	r2, r2, #1
 2222 0110 D1B2     		uxtb	r1, r2
 2223 0112 154A     		ldr	r2, .L130+32
 2224 0114 9B00     		lsls	r3, r3, #2
 2225 0116 1344     		add	r3, r3, r2
 2226 0118 0A46     		mov	r2, r1
 2227 011a 9A70     		strb	r2, [r3, #2]
 2228 011c 07E0     		b	.L128
 2229              	.L127:
1692:Generated_Source\PSoC5/ADC.c ****         }
1693:Generated_Source\PSoC5/ADC.c ****         else
1694:Generated_Source\PSoC5/ADC.c ****         {
1695:Generated_Source\PSoC5/ADC.c ****             /* Use all 16 bits */
1696:Generated_Source\PSoC5/ADC.c ****             ADC_gcor[config - 1u].gval = ADC_MAX_GVAL;
 2230              		.loc 1 1696 0
 2231 011e 97F82030 		ldrb	r3, [r7, #32]	@ zero_extendqisi2
 2232 0122 013B     		subs	r3, r3, #1
 2233 0124 104A     		ldr	r2, .L130+32
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cccSVp0l.s 			page 70


 2234 0126 9B00     		lsls	r3, r3, #2
 2235 0128 1344     		add	r3, r3, r2
 2236 012a 0F22     		movs	r2, #15
 2237 012c 9A70     		strb	r2, [r3, #2]
 2238              	.L128:
1697:Generated_Source\PSoC5/ADC.c ****         }
1698:Generated_Source\PSoC5/ADC.c **** 
1699:Generated_Source\PSoC5/ADC.c ****         /* Save the gain correction register value */
1700:Generated_Source\PSoC5/ADC.c ****         ADC_gcor[config - 1u].gcor = gcorValue;
 2239              		.loc 1 1700 0
 2240 012e 97F82030 		ldrb	r3, [r7, #32]	@ zero_extendqisi2
 2241 0132 013B     		subs	r3, r3, #1
 2242 0134 0C49     		ldr	r1, .L130+32
 2243 0136 BA8A     		ldrh	r2, [r7, #20]	@ movhi
 2244 0138 21F82320 		strh	r2, [r1, r3, lsl #2]	@ movhi
 2245              	.L129:
1701:Generated_Source\PSoC5/ADC.c ****     }
1702:Generated_Source\PSoC5/ADC.c ****     else
1703:Generated_Source\PSoC5/ADC.c ****     {
1704:Generated_Source\PSoC5/ADC.c ****         /* Halt CPU in debug mode if config is out of valid range */
1705:Generated_Source\PSoC5/ADC.c ****         CYASSERT(0u != 0u);
1706:Generated_Source\PSoC5/ADC.c ****     }
1707:Generated_Source\PSoC5/ADC.c **** }
 2246              		.loc 1 1707 0
 2247 013c 00BF     		nop
 2248 013e 1837     		adds	r7, r7, #24
 2249              		.cfi_def_cfa_offset 8
 2250 0140 BD46     		mov	sp, r7
 2251              		.cfi_def_cfa_register 13
 2252              		@ sp needed
 2253 0142 90BC     		pop	{r4, r7}
 2254              		.cfi_restore 7
 2255              		.cfi_restore 4
 2256              		.cfi_def_cfa_offset 0
 2257 0144 7047     		bx	lr
 2258              	.L131:
 2259 0146 00BF     		.align	2
 2260              	.L130:
 2261 0148 18010049 		.word	1224737048
 2262 014c 1C010049 		.word	1224737052
 2263 0150 19010049 		.word	1224737049
 2264 0154 1D010049 		.word	1224737053
 2265 0158 1A010049 		.word	1224737050
 2266 015c 1E010049 		.word	1224737054
 2267 0160 1B010049 		.word	1224737051
 2268 0164 1F010049 		.word	1224737055
 2269 0168 04000000 		.word	ADC_gcor
 2270              		.cfi_endproc
 2271              	.LFE21:
 2272              		.size	ADC_GainCompensation, .-ADC_GainCompensation
 2273              		.section	.text.ADC_SetDSMRef0Reg,"ax",%progbits
 2274              		.align	2
 2275              		.thumb
 2276              		.thumb_func
 2277              		.type	ADC_SetDSMRef0Reg, %function
 2278              	ADC_SetDSMRef0Reg:
 2279              	.LFB22:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cccSVp0l.s 			page 71


1708:Generated_Source\PSoC5/ADC.c **** 
1709:Generated_Source\PSoC5/ADC.c **** 
1710:Generated_Source\PSoC5/ADC.c **** /******************************************************************************
1711:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_SetDSMRef0Reg(uint8)
1712:Generated_Source\PSoC5/ADC.c **** ******************************************************************************
1713:Generated_Source\PSoC5/ADC.c **** *
1714:Generated_Source\PSoC5/ADC.c **** * Summary:
1715:Generated_Source\PSoC5/ADC.c **** *  This API sets the DSM_REF0 register. This is written for internal use.
1716:Generated_Source\PSoC5/ADC.c **** *
1717:Generated_Source\PSoC5/ADC.c **** * Parameters:
1718:Generated_Source\PSoC5/ADC.c **** *  value:  Value to be written to DSM_REF0 register.
1719:Generated_Source\PSoC5/ADC.c **** *
1720:Generated_Source\PSoC5/ADC.c **** * Return:
1721:Generated_Source\PSoC5/ADC.c **** *  None
1722:Generated_Source\PSoC5/ADC.c **** *
1723:Generated_Source\PSoC5/ADC.c **** ******************************************************************************/
1724:Generated_Source\PSoC5/ADC.c **** static void ADC_SetDSMRef0Reg(uint8 value) 
1725:Generated_Source\PSoC5/ADC.c **** {
 2280              		.loc 1 1725 0
 2281              		.cfi_startproc
 2282              		@ args = 0, pretend = 0, frame = 16
 2283              		@ frame_needed = 1, uses_anonymous_args = 0
 2284 0000 80B5     		push	{r7, lr}
 2285              		.cfi_def_cfa_offset 8
 2286              		.cfi_offset 7, -8
 2287              		.cfi_offset 14, -4
 2288 0002 84B0     		sub	sp, sp, #16
 2289              		.cfi_def_cfa_offset 24
 2290 0004 00AF     		add	r7, sp, #0
 2291              		.cfi_def_cfa_register 7
 2292 0006 0346     		mov	r3, r0
 2293 0008 FB71     		strb	r3, [r7, #7]
1726:Generated_Source\PSoC5/ADC.c ****     uint8 enableInterrupts;
1727:Generated_Source\PSoC5/ADC.c ****     enableInterrupts = CyEnterCriticalSection();
 2294              		.loc 1 1727 0
 2295 000a FFF7FEFF 		bl	CyEnterCriticalSection
 2296 000e 0346     		mov	r3, r0
 2297 0010 FB73     		strb	r3, [r7, #15]
1728:Generated_Source\PSoC5/ADC.c **** 
1729:Generated_Source\PSoC5/ADC.c ****     /* Disable PRES, Enable power to VCMBUF0, REFBUF0 and REFBUF1, enable PRES */
1730:Generated_Source\PSoC5/ADC.c ****     ADC_RESET_CR4_REG |= (ADC_IGNORE_PRESA1 | ADC_IGNORE_PRESD1);
 2298              		.loc 1 1730 0
 2299 0012 174A     		ldr	r2, .L133
 2300 0014 164B     		ldr	r3, .L133
 2301 0016 1B78     		ldrb	r3, [r3]
 2302 0018 DBB2     		uxtb	r3, r3
 2303 001a 43F00303 		orr	r3, r3, #3
 2304 001e DBB2     		uxtb	r3, r3
 2305 0020 1370     		strb	r3, [r2]
1731:Generated_Source\PSoC5/ADC.c ****     ADC_RESET_CR5_REG |= (ADC_IGNORE_PRESA2 | ADC_IGNORE_PRESD2);
 2306              		.loc 1 1731 0
 2307 0022 144A     		ldr	r2, .L133+4
 2308 0024 134B     		ldr	r3, .L133+4
 2309 0026 1B78     		ldrb	r3, [r3]
 2310 0028 DBB2     		uxtb	r3, r3
 2311 002a 43F00303 		orr	r3, r3, #3
 2312 002e DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cccSVp0l.s 			page 72


 2313 0030 1370     		strb	r3, [r2]
1732:Generated_Source\PSoC5/ADC.c ****     ADC_DSM_REF0_REG = value;
 2314              		.loc 1 1732 0
 2315 0032 114A     		ldr	r2, .L133+8
 2316 0034 FB79     		ldrb	r3, [r7, #7]
 2317 0036 1370     		strb	r3, [r2]
1733:Generated_Source\PSoC5/ADC.c **** 
1734:Generated_Source\PSoC5/ADC.c ****     /* Wait for 3 microseconds */
1735:Generated_Source\PSoC5/ADC.c ****     CyDelayUs(ADC_PRES_DELAY_TIME);
 2318              		.loc 1 1735 0
 2319 0038 0320     		movs	r0, #3
 2320 003a FFF7FEFF 		bl	CyDelayUs
1736:Generated_Source\PSoC5/ADC.c ****     /* Enable the press circuit */
1737:Generated_Source\PSoC5/ADC.c ****     ADC_RESET_CR4_REG &= (uint8)~(ADC_IGNORE_PRESA1 | ADC_IGNORE_PRESD1);
 2321              		.loc 1 1737 0
 2322 003e 0C4A     		ldr	r2, .L133
 2323 0040 0B4B     		ldr	r3, .L133
 2324 0042 1B78     		ldrb	r3, [r3]
 2325 0044 DBB2     		uxtb	r3, r3
 2326 0046 23F00303 		bic	r3, r3, #3
 2327 004a DBB2     		uxtb	r3, r3
 2328 004c 1370     		strb	r3, [r2]
1738:Generated_Source\PSoC5/ADC.c ****     ADC_RESET_CR5_REG &= (uint8)~(ADC_IGNORE_PRESA2 | ADC_IGNORE_PRESD2);
 2329              		.loc 1 1738 0
 2330 004e 094A     		ldr	r2, .L133+4
 2331 0050 084B     		ldr	r3, .L133+4
 2332 0052 1B78     		ldrb	r3, [r3]
 2333 0054 DBB2     		uxtb	r3, r3
 2334 0056 23F00303 		bic	r3, r3, #3
 2335 005a DBB2     		uxtb	r3, r3
 2336 005c 1370     		strb	r3, [r2]
1739:Generated_Source\PSoC5/ADC.c **** 
1740:Generated_Source\PSoC5/ADC.c ****     CyExitCriticalSection(enableInterrupts);
 2337              		.loc 1 1740 0
 2338 005e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2339 0060 1846     		mov	r0, r3
 2340 0062 FFF7FEFF 		bl	CyExitCriticalSection
1741:Generated_Source\PSoC5/ADC.c **** }
 2341              		.loc 1 1741 0
 2342 0066 00BF     		nop
 2343 0068 1037     		adds	r7, r7, #16
 2344              		.cfi_def_cfa_offset 8
 2345 006a BD46     		mov	sp, r7
 2346              		.cfi_def_cfa_register 13
 2347              		@ sp needed
 2348 006c 80BD     		pop	{r7, pc}
 2349              	.L134:
 2350 006e 00BF     		.align	2
 2351              	.L133:
 2352 0070 F8460040 		.word	1073759992
 2353 0074 F9460040 		.word	1073759993
 2354 0078 92580040 		.word	1073764498
 2355              		.cfi_endproc
 2356              	.LFE22:
 2357              		.size	ADC_SetDSMRef0Reg, .-ADC_SetDSMRef0Reg
 2358              		.section	.text.ADC_Read8,"ax",%progbits
 2359              		.align	2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cccSVp0l.s 			page 73


 2360              		.global	ADC_Read8
 2361              		.thumb
 2362              		.thumb_func
 2363              		.type	ADC_Read8, %function
 2364              	ADC_Read8:
 2365              	.LFB23:
1742:Generated_Source\PSoC5/ADC.c **** 
1743:Generated_Source\PSoC5/ADC.c **** 
1744:Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
1745:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_Read8
1746:Generated_Source\PSoC5/ADC.c **** ********************************************************************************
1747:Generated_Source\PSoC5/ADC.c **** *
1748:Generated_Source\PSoC5/ADC.c **** * Summary:
1749:Generated_Source\PSoC5/ADC.c **** *  This function simplifies getting results from the ADC when only a
1750:Generated_Source\PSoC5/ADC.c **** *  single reading is required. When called, it will start ADC
1751:Generated_Source\PSoC5/ADC.c **** *  conversions, wait for the conversion to be complete, stop ADC
1752:Generated_Source\PSoC5/ADC.c **** *  conversion and return the result. This is a blocking function and will
1753:Generated_Source\PSoC5/ADC.c **** *  not return until the result is ready.
1754:Generated_Source\PSoC5/ADC.c **** *
1755:Generated_Source\PSoC5/ADC.c **** * Parameters:
1756:Generated_Source\PSoC5/ADC.c **** *  None
1757:Generated_Source\PSoC5/ADC.c **** *
1758:Generated_Source\PSoC5/ADC.c **** * Return:
1759:Generated_Source\PSoC5/ADC.c **** *  int8:  ADC result.
1760:Generated_Source\PSoC5/ADC.c **** *
1761:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
1762:Generated_Source\PSoC5/ADC.c **** int8 ADC_Read8(void) 
1763:Generated_Source\PSoC5/ADC.c **** {
 2366              		.loc 1 1763 0
 2367              		.cfi_startproc
 2368              		@ args = 0, pretend = 0, frame = 8
 2369              		@ frame_needed = 1, uses_anonymous_args = 0
 2370 0000 80B5     		push	{r7, lr}
 2371              		.cfi_def_cfa_offset 8
 2372              		.cfi_offset 7, -8
 2373              		.cfi_offset 14, -4
 2374 0002 82B0     		sub	sp, sp, #8
 2375              		.cfi_def_cfa_offset 16
 2376 0004 00AF     		add	r7, sp, #0
 2377              		.cfi_def_cfa_register 7
1764:Generated_Source\PSoC5/ADC.c ****     int8 result;
1765:Generated_Source\PSoC5/ADC.c **** 
1766:Generated_Source\PSoC5/ADC.c ****     /* Clear pending conversion done status */
1767:Generated_Source\PSoC5/ADC.c ****     ADC_DEC_SR_REG |= ADC_DEC_INTR_CLEAR;
 2378              		.loc 1 1767 0
 2379 0006 0C4A     		ldr	r2, .L137
 2380 0008 0B4B     		ldr	r3, .L137
 2381 000a 1B78     		ldrb	r3, [r3]
 2382 000c DBB2     		uxtb	r3, r3
 2383 000e 43F00403 		orr	r3, r3, #4
 2384 0012 DBB2     		uxtb	r3, r3
 2385 0014 1370     		strb	r3, [r2]
1768:Generated_Source\PSoC5/ADC.c ****     ADC_StartConvert();
 2386              		.loc 1 1768 0
 2387 0016 FFF7FEFF 		bl	ADC_StartConvert
1769:Generated_Source\PSoC5/ADC.c ****     (void)ADC_IsEndConversion(ADC_WAIT_FOR_RESULT);
 2388              		.loc 1 1769 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cccSVp0l.s 			page 74


 2389 001a 0020     		movs	r0, #0
 2390 001c FFF7FEFF 		bl	ADC_IsEndConversion
1770:Generated_Source\PSoC5/ADC.c ****      result = ADC_GetResult8();
 2391              		.loc 1 1770 0
 2392 0020 FFF7FEFF 		bl	ADC_GetResult8
 2393 0024 0346     		mov	r3, r0
 2394 0026 FB71     		strb	r3, [r7, #7]
1771:Generated_Source\PSoC5/ADC.c ****     ADC_StopConvert();
 2395              		.loc 1 1771 0
 2396 0028 FFF7FEFF 		bl	ADC_StopConvert
1772:Generated_Source\PSoC5/ADC.c ****     
1773:Generated_Source\PSoC5/ADC.c ****      return(result);
 2397              		.loc 1 1773 0
 2398 002c 97F90730 		ldrsb	r3, [r7, #7]
1774:Generated_Source\PSoC5/ADC.c **** }
 2399              		.loc 1 1774 0
 2400 0030 1846     		mov	r0, r3
 2401 0032 0837     		adds	r7, r7, #8
 2402              		.cfi_def_cfa_offset 8
 2403 0034 BD46     		mov	sp, r7
 2404              		.cfi_def_cfa_register 13
 2405              		@ sp needed
 2406 0036 80BD     		pop	{r7, pc}
 2407              	.L138:
 2408              		.align	2
 2409              	.L137:
 2410 0038 014E0040 		.word	1073761793
 2411              		.cfi_endproc
 2412              	.LFE23:
 2413              		.size	ADC_Read8, .-ADC_Read8
 2414              		.section	.text.ADC_Read16,"ax",%progbits
 2415              		.align	2
 2416              		.global	ADC_Read16
 2417              		.thumb
 2418              		.thumb_func
 2419              		.type	ADC_Read16, %function
 2420              	ADC_Read16:
 2421              	.LFB24:
1775:Generated_Source\PSoC5/ADC.c **** 
1776:Generated_Source\PSoC5/ADC.c **** 
1777:Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
1778:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_Read16
1779:Generated_Source\PSoC5/ADC.c **** ********************************************************************************
1780:Generated_Source\PSoC5/ADC.c **** *
1781:Generated_Source\PSoC5/ADC.c **** * Summary:
1782:Generated_Source\PSoC5/ADC.c **** *  This function simplifies getting results from the ADC when only a
1783:Generated_Source\PSoC5/ADC.c **** *  single reading is required. When called, it will start ADC
1784:Generated_Source\PSoC5/ADC.c **** *  conversions, wait for the conversion to be complete, stop ADC
1785:Generated_Source\PSoC5/ADC.c **** *  conversion and return the result. This is a blocking function and will
1786:Generated_Source\PSoC5/ADC.c **** *  not return until the result is ready.
1787:Generated_Source\PSoC5/ADC.c **** *
1788:Generated_Source\PSoC5/ADC.c **** * Parameters:
1789:Generated_Source\PSoC5/ADC.c **** *   void
1790:Generated_Source\PSoC5/ADC.c **** *
1791:Generated_Source\PSoC5/ADC.c **** * Return:
1792:Generated_Source\PSoC5/ADC.c **** *  int16:  ADC result.
1793:Generated_Source\PSoC5/ADC.c **** *
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cccSVp0l.s 			page 75


1794:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
1795:Generated_Source\PSoC5/ADC.c **** int16 ADC_Read16(void) 
1796:Generated_Source\PSoC5/ADC.c **** {
 2422              		.loc 1 1796 0
 2423              		.cfi_startproc
 2424              		@ args = 0, pretend = 0, frame = 8
 2425              		@ frame_needed = 1, uses_anonymous_args = 0
 2426 0000 80B5     		push	{r7, lr}
 2427              		.cfi_def_cfa_offset 8
 2428              		.cfi_offset 7, -8
 2429              		.cfi_offset 14, -4
 2430 0002 82B0     		sub	sp, sp, #8
 2431              		.cfi_def_cfa_offset 16
 2432 0004 00AF     		add	r7, sp, #0
 2433              		.cfi_def_cfa_register 7
1797:Generated_Source\PSoC5/ADC.c ****     int16 result;
1798:Generated_Source\PSoC5/ADC.c **** 
1799:Generated_Source\PSoC5/ADC.c ****     /* Clear pending conversion done status */
1800:Generated_Source\PSoC5/ADC.c ****     ADC_DEC_SR_REG |= ADC_DEC_INTR_CLEAR;
 2434              		.loc 1 1800 0
 2435 0006 0C4A     		ldr	r2, .L141
 2436 0008 0B4B     		ldr	r3, .L141
 2437 000a 1B78     		ldrb	r3, [r3]
 2438 000c DBB2     		uxtb	r3, r3
 2439 000e 43F00403 		orr	r3, r3, #4
 2440 0012 DBB2     		uxtb	r3, r3
 2441 0014 1370     		strb	r3, [r2]
1801:Generated_Source\PSoC5/ADC.c ****     ADC_StartConvert();
 2442              		.loc 1 1801 0
 2443 0016 FFF7FEFF 		bl	ADC_StartConvert
1802:Generated_Source\PSoC5/ADC.c ****     (void)ADC_IsEndConversion(ADC_WAIT_FOR_RESULT);
 2444              		.loc 1 1802 0
 2445 001a 0020     		movs	r0, #0
 2446 001c FFF7FEFF 		bl	ADC_IsEndConversion
1803:Generated_Source\PSoC5/ADC.c ****      result = ADC_GetResult16();
 2447              		.loc 1 1803 0
 2448 0020 FFF7FEFF 		bl	ADC_GetResult16
 2449 0024 0346     		mov	r3, r0
 2450 0026 FB80     		strh	r3, [r7, #6]	@ movhi
1804:Generated_Source\PSoC5/ADC.c ****     ADC_StopConvert();
 2451              		.loc 1 1804 0
 2452 0028 FFF7FEFF 		bl	ADC_StopConvert
1805:Generated_Source\PSoC5/ADC.c ****     
1806:Generated_Source\PSoC5/ADC.c ****      return(result);
 2453              		.loc 1 1806 0
 2454 002c B7F90630 		ldrsh	r3, [r7, #6]
1807:Generated_Source\PSoC5/ADC.c **** }
 2455              		.loc 1 1807 0
 2456 0030 1846     		mov	r0, r3
 2457 0032 0837     		adds	r7, r7, #8
 2458              		.cfi_def_cfa_offset 8
 2459 0034 BD46     		mov	sp, r7
 2460              		.cfi_def_cfa_register 13
 2461              		@ sp needed
 2462 0036 80BD     		pop	{r7, pc}
 2463              	.L142:
 2464              		.align	2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cccSVp0l.s 			page 76


 2465              	.L141:
 2466 0038 014E0040 		.word	1073761793
 2467              		.cfi_endproc
 2468              	.LFE24:
 2469              		.size	ADC_Read16, .-ADC_Read16
 2470              		.section	.text.ADC_Read32,"ax",%progbits
 2471              		.align	2
 2472              		.global	ADC_Read32
 2473              		.thumb
 2474              		.thumb_func
 2475              		.type	ADC_Read32, %function
 2476              	ADC_Read32:
 2477              	.LFB25:
1808:Generated_Source\PSoC5/ADC.c **** 
1809:Generated_Source\PSoC5/ADC.c **** 
1810:Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
1811:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_Read32
1812:Generated_Source\PSoC5/ADC.c **** ********************************************************************************
1813:Generated_Source\PSoC5/ADC.c **** *
1814:Generated_Source\PSoC5/ADC.c **** * Summary:
1815:Generated_Source\PSoC5/ADC.c **** *  This function simplifies getting results from the ADC when only a
1816:Generated_Source\PSoC5/ADC.c **** *  single reading is required. When called, it will start ADC
1817:Generated_Source\PSoC5/ADC.c **** *  conversions, wait for the conversion to be complete, stop ADC
1818:Generated_Source\PSoC5/ADC.c **** *  conversion and return the result. This is a blocking function and will
1819:Generated_Source\PSoC5/ADC.c **** *  not return until the result is ready.
1820:Generated_Source\PSoC5/ADC.c **** *
1821:Generated_Source\PSoC5/ADC.c **** * Parameters:
1822:Generated_Source\PSoC5/ADC.c **** *  None
1823:Generated_Source\PSoC5/ADC.c **** *
1824:Generated_Source\PSoC5/ADC.c **** * Return:
1825:Generated_Source\PSoC5/ADC.c **** *  int32: ADC result.
1826:Generated_Source\PSoC5/ADC.c **** *
1827:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
1828:Generated_Source\PSoC5/ADC.c **** int32 ADC_Read32(void) 
1829:Generated_Source\PSoC5/ADC.c **** {
 2478              		.loc 1 1829 0
 2479              		.cfi_startproc
 2480              		@ args = 0, pretend = 0, frame = 8
 2481              		@ frame_needed = 1, uses_anonymous_args = 0
 2482 0000 80B5     		push	{r7, lr}
 2483              		.cfi_def_cfa_offset 8
 2484              		.cfi_offset 7, -8
 2485              		.cfi_offset 14, -4
 2486 0002 82B0     		sub	sp, sp, #8
 2487              		.cfi_def_cfa_offset 16
 2488 0004 00AF     		add	r7, sp, #0
 2489              		.cfi_def_cfa_register 7
1830:Generated_Source\PSoC5/ADC.c ****     int32 result;
1831:Generated_Source\PSoC5/ADC.c ****     
1832:Generated_Source\PSoC5/ADC.c ****     /* Clear pending conversion done status */
1833:Generated_Source\PSoC5/ADC.c ****     ADC_DEC_SR_REG |= ADC_DEC_INTR_CLEAR;
 2490              		.loc 1 1833 0
 2491 0006 0B4A     		ldr	r2, .L145
 2492 0008 0A4B     		ldr	r3, .L145
 2493 000a 1B78     		ldrb	r3, [r3]
 2494 000c DBB2     		uxtb	r3, r3
 2495 000e 43F00403 		orr	r3, r3, #4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cccSVp0l.s 			page 77


 2496 0012 DBB2     		uxtb	r3, r3
 2497 0014 1370     		strb	r3, [r2]
1834:Generated_Source\PSoC5/ADC.c ****     ADC_StartConvert();
 2498              		.loc 1 1834 0
 2499 0016 FFF7FEFF 		bl	ADC_StartConvert
1835:Generated_Source\PSoC5/ADC.c ****     (void)ADC_IsEndConversion(ADC_WAIT_FOR_RESULT);
 2500              		.loc 1 1835 0
 2501 001a 0020     		movs	r0, #0
 2502 001c FFF7FEFF 		bl	ADC_IsEndConversion
1836:Generated_Source\PSoC5/ADC.c ****      result = ADC_GetResult32();
 2503              		.loc 1 1836 0
 2504 0020 FFF7FEFF 		bl	ADC_GetResult32
 2505 0024 7860     		str	r0, [r7, #4]
1837:Generated_Source\PSoC5/ADC.c ****     ADC_StopConvert();
 2506              		.loc 1 1837 0
 2507 0026 FFF7FEFF 		bl	ADC_StopConvert
1838:Generated_Source\PSoC5/ADC.c ****     
1839:Generated_Source\PSoC5/ADC.c ****      return(result);
 2508              		.loc 1 1839 0
 2509 002a 7B68     		ldr	r3, [r7, #4]
1840:Generated_Source\PSoC5/ADC.c **** }
 2510              		.loc 1 1840 0
 2511 002c 1846     		mov	r0, r3
 2512 002e 0837     		adds	r7, r7, #8
 2513              		.cfi_def_cfa_offset 8
 2514 0030 BD46     		mov	sp, r7
 2515              		.cfi_def_cfa_register 13
 2516              		@ sp needed
 2517 0032 80BD     		pop	{r7, pc}
 2518              	.L146:
 2519              		.align	2
 2520              	.L145:
 2521 0034 014E0040 		.word	1073761793
 2522              		.cfi_endproc
 2523              	.LFE25:
 2524              		.size	ADC_Read32, .-ADC_Read32
 2525              		.text
 2526              	.Letext0:
 2527              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 2528              		.file 3 "Generated_Source\\PSoC5\\ADC.h"
 2529              		.section	.debug_info,"",%progbits
 2530              	.Ldebug_info0:
 2531 0000 28070000 		.4byte	0x728
 2532 0004 0400     		.2byte	0x4
 2533 0006 00000000 		.4byte	.Ldebug_abbrev0
 2534 000a 04       		.byte	0x4
 2535 000b 01       		.uleb128 0x1
 2536 000c 5C000000 		.4byte	.LASF90
 2537 0010 0C       		.byte	0xc
 2538 0011 0A010000 		.4byte	.LASF91
 2539 0015 10030000 		.4byte	.LASF92
 2540 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2541 001d 00000000 		.4byte	0
 2542 0021 00000000 		.4byte	.Ldebug_line0
 2543 0025 02       		.uleb128 0x2
 2544 0026 01       		.byte	0x1
 2545 0027 06       		.byte	0x6
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cccSVp0l.s 			page 78


 2546 0028 61010000 		.4byte	.LASF0
 2547 002c 02       		.uleb128 0x2
 2548 002d 01       		.byte	0x1
 2549 002e 08       		.byte	0x8
 2550 002f EC030000 		.4byte	.LASF1
 2551 0033 02       		.uleb128 0x2
 2552 0034 02       		.byte	0x2
 2553 0035 05       		.byte	0x5
 2554 0036 12040000 		.4byte	.LASF2
 2555 003a 02       		.uleb128 0x2
 2556 003b 02       		.byte	0x2
 2557 003c 07       		.byte	0x7
 2558 003d 52020000 		.4byte	.LASF3
 2559 0041 02       		.uleb128 0x2
 2560 0042 04       		.byte	0x4
 2561 0043 05       		.byte	0x5
 2562 0044 A3010000 		.4byte	.LASF4
 2563 0048 02       		.uleb128 0x2
 2564 0049 04       		.byte	0x4
 2565 004a 07       		.byte	0x7
 2566 004b 30020000 		.4byte	.LASF5
 2567 004f 02       		.uleb128 0x2
 2568 0050 08       		.byte	0x8
 2569 0051 05       		.byte	0x5
 2570 0052 53010000 		.4byte	.LASF6
 2571 0056 02       		.uleb128 0x2
 2572 0057 08       		.byte	0x8
 2573 0058 07       		.byte	0x7
 2574 0059 F3000000 		.4byte	.LASF7
 2575 005d 03       		.uleb128 0x3
 2576 005e 04       		.byte	0x4
 2577 005f 05       		.byte	0x5
 2578 0060 696E7400 		.ascii	"int\000"
 2579 0064 02       		.uleb128 0x2
 2580 0065 04       		.byte	0x4
 2581 0066 07       		.byte	0x7
 2582 0067 1C020000 		.4byte	.LASF8
 2583 006b 04       		.uleb128 0x4
 2584 006c C6010000 		.4byte	.LASF9
 2585 0070 02       		.byte	0x2
 2586 0071 E401     		.2byte	0x1e4
 2587 0073 2C000000 		.4byte	0x2c
 2588 0077 04       		.uleb128 0x4
 2589 0078 00000000 		.4byte	.LASF10
 2590 007c 02       		.byte	0x2
 2591 007d E501     		.2byte	0x1e5
 2592 007f 3A000000 		.4byte	0x3a
 2593 0083 04       		.uleb128 0x4
 2594 0084 E9010000 		.4byte	.LASF11
 2595 0088 02       		.byte	0x2
 2596 0089 E601     		.2byte	0x1e6
 2597 008b 48000000 		.4byte	0x48
 2598 008f 04       		.uleb128 0x4
 2599 0090 65020000 		.4byte	.LASF12
 2600 0094 02       		.byte	0x2
 2601 0095 E701     		.2byte	0x1e7
 2602 0097 25000000 		.4byte	0x25
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cccSVp0l.s 			page 79


 2603 009b 04       		.uleb128 0x4
 2604 009c E3040000 		.4byte	.LASF13
 2605 00a0 02       		.byte	0x2
 2606 00a1 E801     		.2byte	0x1e8
 2607 00a3 33000000 		.4byte	0x33
 2608 00a7 04       		.uleb128 0x4
 2609 00a8 86010000 		.4byte	.LASF14
 2610 00ac 02       		.byte	0x2
 2611 00ad E901     		.2byte	0x1e9
 2612 00af 41000000 		.4byte	0x41
 2613 00b3 04       		.uleb128 0x4
 2614 00b4 AC020000 		.4byte	.LASF15
 2615 00b8 02       		.byte	0x2
 2616 00b9 EA01     		.2byte	0x1ea
 2617 00bb BF000000 		.4byte	0xbf
 2618 00bf 02       		.uleb128 0x2
 2619 00c0 04       		.byte	0x4
 2620 00c1 04       		.byte	0x4
 2621 00c2 B5030000 		.4byte	.LASF16
 2622 00c6 02       		.uleb128 0x2
 2623 00c7 08       		.byte	0x8
 2624 00c8 04       		.byte	0x4
 2625 00c9 CC010000 		.4byte	.LASF17
 2626 00cd 02       		.uleb128 0x2
 2627 00ce 01       		.byte	0x1
 2628 00cf 08       		.byte	0x8
 2629 00d0 4F040000 		.4byte	.LASF18
 2630 00d4 04       		.uleb128 0x4
 2631 00d5 CF030000 		.4byte	.LASF19
 2632 00d9 02       		.byte	0x2
 2633 00da 8E02     		.2byte	0x28e
 2634 00dc E0000000 		.4byte	0xe0
 2635 00e0 05       		.uleb128 0x5
 2636 00e1 6B000000 		.4byte	0x6b
 2637 00e5 04       		.uleb128 0x4
 2638 00e6 C0010000 		.4byte	.LASF20
 2639 00ea 02       		.byte	0x2
 2640 00eb 8F02     		.2byte	0x28f
 2641 00ed F1000000 		.4byte	0xf1
 2642 00f1 05       		.uleb128 0x5
 2643 00f2 77000000 		.4byte	0x77
 2644 00f6 04       		.uleb128 0x4
 2645 00f7 91020000 		.4byte	.LASF21
 2646 00fb 02       		.byte	0x2
 2647 00fc 9002     		.2byte	0x290
 2648 00fe 02010000 		.4byte	0x102
 2649 0102 05       		.uleb128 0x5
 2650 0103 83000000 		.4byte	0x83
 2651 0107 02       		.uleb128 0x2
 2652 0108 08       		.byte	0x8
 2653 0109 04       		.byte	0x4
 2654 010a BD020000 		.4byte	.LASF22
 2655 010e 02       		.uleb128 0x2
 2656 010f 04       		.byte	0x4
 2657 0110 07       		.byte	0x7
 2658 0111 B4020000 		.4byte	.LASF23
 2659 0115 06       		.uleb128 0x6
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cccSVp0l.s 			page 80


 2660 0116 04       		.byte	0x4
 2661 0117 03       		.byte	0x3
 2662 0118 2F       		.byte	0x2f
 2663 0119 36010000 		.4byte	0x136
 2664 011d 07       		.uleb128 0x7
 2665 011e 57000000 		.4byte	.LASF24
 2666 0122 03       		.byte	0x3
 2667 0123 31       		.byte	0x31
 2668 0124 77000000 		.4byte	0x77
 2669 0128 00       		.byte	0
 2670 0129 07       		.uleb128 0x7
 2671 012a 62040000 		.4byte	.LASF25
 2672 012e 03       		.byte	0x3
 2673 012f 32       		.byte	0x32
 2674 0130 6B000000 		.4byte	0x6b
 2675 0134 02       		.byte	0x2
 2676 0135 00       		.byte	0
 2677 0136 08       		.uleb128 0x8
 2678 0137 42020000 		.4byte	.LASF26
 2679 013b 03       		.byte	0x3
 2680 013c 33       		.byte	0x33
 2681 013d 15010000 		.4byte	0x115
 2682 0141 09       		.uleb128 0x9
 2683 0142 EA000000 		.4byte	.LASF29
 2684 0146 01       		.byte	0x1
 2685 0147 5B       		.byte	0x5b
 2686 0148 00000000 		.4byte	.LFB0
 2687 014c 1C010000 		.4byte	.LFE0-.LFB0
 2688 0150 01       		.uleb128 0x1
 2689 0151 9C       		.byte	0x9c
 2690 0152 0A       		.uleb128 0xa
 2691 0153 C0040000 		.4byte	.LASF31
 2692 0157 01       		.byte	0x1
 2693 0158 B8       		.byte	0xb8
 2694 0159 00000000 		.4byte	.LFB1
 2695 015d 58010000 		.4byte	.LFE1-.LFB1
 2696 0161 01       		.uleb128 0x1
 2697 0162 9C       		.byte	0x9c
 2698 0163 84010000 		.4byte	0x184
 2699 0167 0B       		.uleb128 0xb
 2700 0168 5B040000 		.4byte	.LASF27
 2701 016c 01       		.byte	0x1
 2702 016d BA       		.byte	0xba
 2703 016e 6B000000 		.4byte	0x6b
 2704 0172 02       		.uleb128 0x2
 2705 0173 91       		.byte	0x91
 2706 0174 76       		.sleb128 -10
 2707 0175 0B       		.uleb128 0xb
 2708 0176 AF040000 		.4byte	.LASF28
 2709 017a 01       		.byte	0x1
 2710 017b BB       		.byte	0xbb
 2711 017c 6B000000 		.4byte	0x6b
 2712 0180 02       		.uleb128 0x2
 2713 0181 91       		.byte	0x91
 2714 0182 77       		.sleb128 -9
 2715 0183 00       		.byte	0
 2716 0184 0C       		.uleb128 0xc
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cccSVp0l.s 			page 81


 2717 0185 8C010000 		.4byte	.LASF30
 2718 0189 01       		.byte	0x1
 2719 018a 4901     		.2byte	0x149
 2720 018c 00000000 		.4byte	.LFB2
 2721 0190 30000000 		.4byte	.LFE2-.LFB2
 2722 0194 01       		.uleb128 0x1
 2723 0195 9C       		.byte	0x9c
 2724 0196 0D       		.uleb128 0xd
 2725 0197 1C040000 		.4byte	.LASF32
 2726 019b 01       		.byte	0x1
 2727 019c 6A01     		.2byte	0x16a
 2728 019e 00000000 		.4byte	.LFB3
 2729 01a2 7C010000 		.4byte	.LFE3-.LFB3
 2730 01a6 01       		.uleb128 0x1
 2731 01a7 9C       		.byte	0x9c
 2732 01a8 BC010000 		.4byte	0x1bc
 2733 01ac 0E       		.uleb128 0xe
 2734 01ad AF040000 		.4byte	.LASF28
 2735 01b1 01       		.byte	0x1
 2736 01b2 6C01     		.2byte	0x16c
 2737 01b4 6B000000 		.4byte	0x6b
 2738 01b8 02       		.uleb128 0x2
 2739 01b9 91       		.byte	0x91
 2740 01ba 77       		.sleb128 -9
 2741 01bb 00       		.byte	0
 2742 01bc 0F       		.uleb128 0xf
 2743 01bd 74010000 		.4byte	.LASF33
 2744 01c1 01       		.byte	0x1
 2745 01c2 AD01     		.2byte	0x1ad
 2746 01c4 00000000 		.4byte	.LFB4
 2747 01c8 3C000000 		.4byte	.LFE4-.LFB4
 2748 01cc 01       		.uleb128 0x1
 2749 01cd 9C       		.byte	0x9c
 2750 01ce F1010000 		.4byte	0x1f1
 2751 01d2 10       		.uleb128 0x10
 2752 01d3 A4030000 		.4byte	.LASF36
 2753 01d7 01       		.byte	0x1
 2754 01d8 AD01     		.2byte	0x1ad
 2755 01da 6B000000 		.4byte	0x6b
 2756 01de 02       		.uleb128 0x2
 2757 01df 91       		.byte	0x91
 2758 01e0 6F       		.sleb128 -17
 2759 01e1 0E       		.uleb128 0xe
 2760 01e2 09050000 		.4byte	.LASF34
 2761 01e6 01       		.byte	0x1
 2762 01e7 AF01     		.2byte	0x1af
 2763 01e9 6B000000 		.4byte	0x6b
 2764 01ed 02       		.uleb128 0x2
 2765 01ee 91       		.byte	0x91
 2766 01ef 77       		.sleb128 -9
 2767 01f0 00       		.byte	0
 2768 01f1 0F       		.uleb128 0xf
 2769 01f2 7F040000 		.4byte	.LASF35
 2770 01f6 01       		.byte	0x1
 2771 01f7 D101     		.2byte	0x1d1
 2772 01f9 00000000 		.4byte	.LFB5
 2773 01fd 38000000 		.4byte	.LFE5-.LFB5
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cccSVp0l.s 			page 82


 2774 0201 01       		.uleb128 0x1
 2775 0202 9C       		.byte	0x9c
 2776 0203 26020000 		.4byte	0x226
 2777 0207 10       		.uleb128 0x10
 2778 0208 9A030000 		.4byte	.LASF37
 2779 020c 01       		.byte	0x1
 2780 020d D101     		.2byte	0x1d1
 2781 020f 6B000000 		.4byte	0x6b
 2782 0213 02       		.uleb128 0x2
 2783 0214 91       		.byte	0x91
 2784 0215 6F       		.sleb128 -17
 2785 0216 0E       		.uleb128 0xe
 2786 0217 09050000 		.4byte	.LASF34
 2787 021b 01       		.byte	0x1
 2788 021c D301     		.2byte	0x1d3
 2789 021e 6B000000 		.4byte	0x6b
 2790 0222 02       		.uleb128 0x2
 2791 0223 91       		.byte	0x91
 2792 0224 77       		.sleb128 -9
 2793 0225 00       		.byte	0
 2794 0226 11       		.uleb128 0x11
 2795 0227 C9020000 		.4byte	.LASF41
 2796 022b 01       		.byte	0x1
 2797 022c F901     		.2byte	0x1f9
 2798 022e 6B000000 		.4byte	0x6b
 2799 0232 00000000 		.4byte	.LFB6
 2800 0236 AC000000 		.4byte	.LFE6-.LFB6
 2801 023a 01       		.uleb128 0x1
 2802 023b 9C       		.byte	0x9c
 2803 023c 7D020000 		.4byte	0x27d
 2804 0240 10       		.uleb128 0x10
 2805 0241 D8040000 		.4byte	.LASF38
 2806 0245 01       		.byte	0x1
 2807 0246 F901     		.2byte	0x1f9
 2808 0248 B3000000 		.4byte	0xb3
 2809 024c 02       		.uleb128 0x2
 2810 024d 91       		.byte	0x91
 2811 024e 6C       		.sleb128 -20
 2812 024f 0E       		.uleb128 0xe
 2813 0250 09050000 		.4byte	.LASF34
 2814 0254 01       		.byte	0x1
 2815 0255 FB01     		.2byte	0x1fb
 2816 0257 77000000 		.4byte	0x77
 2817 025b 02       		.uleb128 0x2
 2818 025c 91       		.byte	0x91
 2819 025d 74       		.sleb128 -12
 2820 025e 0E       		.uleb128 0xe
 2821 025f 6D010000 		.4byte	.LASF39
 2822 0263 01       		.byte	0x1
 2823 0264 FC01     		.2byte	0x1fc
 2824 0266 6B000000 		.4byte	0x6b
 2825 026a 02       		.uleb128 0x2
 2826 026b 91       		.byte	0x91
 2827 026c 77       		.sleb128 -9
 2828 026d 0E       		.uleb128 0xe
 2829 026e 6F040000 		.4byte	.LASF40
 2830 0272 01       		.byte	0x1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cccSVp0l.s 			page 83


 2831 0273 FD01     		.2byte	0x1fd
 2832 0275 B3000000 		.4byte	0xb3
 2833 0279 02       		.uleb128 0x2
 2834 027a 91       		.byte	0x91
 2835 027b 70       		.sleb128 -16
 2836 027c 00       		.byte	0
 2837 027d 12       		.uleb128 0x12
 2838 027e CB040000 		.4byte	.LASF42
 2839 0282 01       		.byte	0x1
 2840 0283 2802     		.2byte	0x228
 2841 0285 77000000 		.4byte	0x77
 2842 0289 00000000 		.4byte	.LFB7
 2843 028d 3C000000 		.4byte	.LFE7-.LFB7
 2844 0291 01       		.uleb128 0x1
 2845 0292 9C       		.byte	0x9c
 2846 0293 B6020000 		.4byte	0x2b6
 2847 0297 0E       		.uleb128 0xe
 2848 0298 54040000 		.4byte	.LASF43
 2849 029c 01       		.byte	0x1
 2850 029d 2A02     		.2byte	0x22a
 2851 029f 6B000000 		.4byte	0x6b
 2852 02a3 02       		.uleb128 0x2
 2853 02a4 91       		.byte	0x91
 2854 02a5 75       		.sleb128 -11
 2855 02a6 0E       		.uleb128 0xe
 2856 02a7 7A020000 		.4byte	.LASF44
 2857 02ab 01       		.byte	0x1
 2858 02ac 2B02     		.2byte	0x22b
 2859 02ae 77000000 		.4byte	0x77
 2860 02b2 02       		.uleb128 0x2
 2861 02b3 91       		.byte	0x91
 2862 02b4 76       		.sleb128 -10
 2863 02b5 00       		.byte	0
 2864 02b6 13       		.uleb128 0x13
 2865 02b7 32010000 		.4byte	.LASF45
 2866 02bb 01       		.byte	0x1
 2867 02bc 4A02     		.2byte	0x24a
 2868 02be 00000000 		.4byte	.LFB8
 2869 02c2 20000000 		.4byte	.LFE8-.LFB8
 2870 02c6 01       		.uleb128 0x1
 2871 02c7 9C       		.byte	0x9c
 2872 02c8 13       		.uleb128 0x13
 2873 02c9 6A020000 		.4byte	.LASF46
 2874 02cd 01       		.byte	0x1
 2875 02ce 6102     		.2byte	0x261
 2876 02d0 00000000 		.4byte	.LFB9
 2877 02d4 20000000 		.4byte	.LFE9-.LFB9
 2878 02d8 01       		.uleb128 0x1
 2879 02d9 9C       		.byte	0x9c
 2880 02da 12       		.uleb128 0x12
 2881 02db D5020000 		.4byte	.LASF47
 2882 02df 01       		.byte	0x1
 2883 02e0 8402     		.2byte	0x284
 2884 02e2 6B000000 		.4byte	0x6b
 2885 02e6 00000000 		.4byte	.LFB10
 2886 02ea 4C000000 		.4byte	.LFE10-.LFB10
 2887 02ee 01       		.uleb128 0x1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cccSVp0l.s 			page 84


 2888 02ef 9C       		.byte	0x9c
 2889 02f0 13030000 		.4byte	0x313
 2890 02f4 10       		.uleb128 0x10
 2891 02f5 14020000 		.4byte	.LASF48
 2892 02f9 01       		.byte	0x1
 2893 02fa 8402     		.2byte	0x284
 2894 02fc 6B000000 		.4byte	0x6b
 2895 0300 02       		.uleb128 0x2
 2896 0301 91       		.byte	0x91
 2897 0302 6F       		.sleb128 -17
 2898 0303 0E       		.uleb128 0xe
 2899 0304 6D010000 		.4byte	.LASF39
 2900 0308 01       		.byte	0x1
 2901 0309 8602     		.2byte	0x286
 2902 030b 6B000000 		.4byte	0x6b
 2903 030f 02       		.uleb128 0x2
 2904 0310 91       		.byte	0x91
 2905 0311 77       		.sleb128 -9
 2906 0312 00       		.byte	0
 2907 0313 12       		.uleb128 0x12
 2908 0314 01030000 		.4byte	.LASF49
 2909 0318 01       		.byte	0x1
 2910 0319 B302     		.2byte	0x2b3
 2911 031b 8F000000 		.4byte	0x8f
 2912 031f 00000000 		.4byte	.LFB11
 2913 0323 68000000 		.4byte	.LFE11-.LFB11
 2914 0327 01       		.uleb128 0x1
 2915 0328 9C       		.byte	0x9c
 2916 0329 4C030000 		.4byte	0x34c
 2917 032d 0E       		.uleb128 0xe
 2918 032e 10050000 		.4byte	.LASF50
 2919 0332 01       		.byte	0x1
 2920 0333 B502     		.2byte	0x2b5
 2921 0335 8F000000 		.4byte	0x8f
 2922 0339 02       		.uleb128 0x2
 2923 033a 91       		.byte	0x91
 2924 033b 76       		.sleb128 -10
 2925 033c 0E       		.uleb128 0xe
 2926 033d 9A030000 		.4byte	.LASF37
 2927 0341 01       		.byte	0x1
 2928 0342 B602     		.2byte	0x2b6
 2929 0344 6B000000 		.4byte	0x6b
 2930 0348 02       		.uleb128 0x2
 2931 0349 91       		.byte	0x91
 2932 034a 77       		.sleb128 -9
 2933 034b 00       		.byte	0
 2934 034c 12       		.uleb128 0x12
 2935 034d 17050000 		.4byte	.LASF51
 2936 0351 01       		.byte	0x1
 2937 0352 E902     		.2byte	0x2e9
 2938 0354 9B000000 		.4byte	0x9b
 2939 0358 00000000 		.4byte	.LFB12
 2940 035c 7C000000 		.4byte	.LFE12-.LFB12
 2941 0360 01       		.uleb128 0x1
 2942 0361 9C       		.byte	0x9c
 2943 0362 85030000 		.4byte	0x385
 2944 0366 0E       		.uleb128 0xe
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cccSVp0l.s 			page 85


 2945 0367 10050000 		.4byte	.LASF50
 2946 036b 01       		.byte	0x1
 2947 036c EB02     		.2byte	0x2eb
 2948 036e 77000000 		.4byte	0x77
 2949 0372 02       		.uleb128 0x2
 2950 0373 91       		.byte	0x91
 2951 0374 76       		.sleb128 -10
 2952 0375 0E       		.uleb128 0xe
 2953 0376 9A030000 		.4byte	.LASF37
 2954 037a 01       		.byte	0x1
 2955 037b EC02     		.2byte	0x2ec
 2956 037d 6B000000 		.4byte	0x6b
 2957 0381 02       		.uleb128 0x2
 2958 0382 91       		.byte	0x91
 2959 0383 75       		.sleb128 -11
 2960 0384 00       		.byte	0
 2961 0385 12       		.uleb128 0x12
 2962 0386 D3010000 		.4byte	.LASF52
 2963 038a 01       		.byte	0x1
 2964 038b 2503     		.2byte	0x325
 2965 038d A7000000 		.4byte	0xa7
 2966 0391 00000000 		.4byte	.LFB13
 2967 0395 A8000000 		.4byte	.LFE13-.LFB13
 2968 0399 01       		.uleb128 0x1
 2969 039a 9C       		.byte	0x9c
 2970 039b BE030000 		.4byte	0x3be
 2971 039f 0E       		.uleb128 0xe
 2972 03a0 10050000 		.4byte	.LASF50
 2973 03a4 01       		.byte	0x1
 2974 03a5 2703     		.2byte	0x327
 2975 03a7 83000000 		.4byte	0x83
 2976 03ab 02       		.uleb128 0x2
 2977 03ac 91       		.byte	0x91
 2978 03ad 74       		.sleb128 -12
 2979 03ae 0E       		.uleb128 0xe
 2980 03af 9A030000 		.4byte	.LASF37
 2981 03b3 01       		.byte	0x1
 2982 03b4 2803     		.2byte	0x328
 2983 03b6 6B000000 		.4byte	0x6b
 2984 03ba 02       		.uleb128 0x2
 2985 03bb 91       		.byte	0x91
 2986 03bc 73       		.sleb128 -13
 2987 03bd 00       		.byte	0
 2988 03be 0F       		.uleb128 0xf
 2989 03bf E9040000 		.4byte	.LASF53
 2990 03c3 01       		.byte	0x1
 2991 03c4 8203     		.2byte	0x382
 2992 03c6 00000000 		.4byte	.LFB14
 2993 03ca 1C000000 		.4byte	.LFE14-.LFB14
 2994 03ce 01       		.uleb128 0x1
 2995 03cf 9C       		.byte	0x9c
 2996 03d0 E4030000 		.4byte	0x3e4
 2997 03d4 10       		.uleb128 0x10
 2998 03d5 78040000 		.4byte	.LASF54
 2999 03d9 01       		.byte	0x1
 3000 03da 8203     		.2byte	0x382
 3001 03dc A7000000 		.4byte	0xa7
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cccSVp0l.s 			page 86


 3002 03e0 02       		.uleb128 0x2
 3003 03e1 91       		.byte	0x91
 3004 03e2 74       		.sleb128 -12
 3005 03e3 00       		.byte	0
 3006 03e4 0F       		.uleb128 0xf
 3007 03e5 A9030000 		.4byte	.LASF55
 3008 03e9 01       		.byte	0x1
 3009 03ea A503     		.2byte	0x3a5
 3010 03ec 00000000 		.4byte	.LFB15
 3011 03f0 1C000000 		.4byte	.LFE15-.LFB15
 3012 03f4 01       		.uleb128 0x1
 3013 03f5 9C       		.byte	0x9c
 3014 03f6 0A040000 		.4byte	0x40a
 3015 03fa 10       		.uleb128 0x10
 3016 03fb 07000000 		.4byte	.LASF56
 3017 03ff 01       		.byte	0x1
 3018 0400 A503     		.2byte	0x3a5
 3019 0402 A7000000 		.4byte	0xa7
 3020 0406 02       		.uleb128 0x2
 3021 0407 91       		.byte	0x91
 3022 0408 74       		.sleb128 -12
 3023 0409 00       		.byte	0
 3024 040a 12       		.uleb128 0x12
 3025 040b BB030000 		.4byte	.LASF57
 3026 040f 01       		.byte	0x1
 3027 0410 C003     		.2byte	0x3c0
 3028 0412 9B000000 		.4byte	0x9b
 3029 0416 00000000 		.4byte	.LFB16
 3030 041a 3C000000 		.4byte	.LFE16-.LFB16
 3031 041e 01       		.uleb128 0x1
 3032 041f 9C       		.byte	0x9c
 3033 0420 43040000 		.4byte	0x443
 3034 0424 10       		.uleb128 0x10
 3035 0425 9A040000 		.4byte	.LASF58
 3036 0429 01       		.byte	0x1
 3037 042a C003     		.2byte	0x3c0
 3038 042c A7000000 		.4byte	0xa7
 3039 0430 02       		.uleb128 0x2
 3040 0431 91       		.byte	0x91
 3041 0432 6C       		.sleb128 -20
 3042 0433 0E       		.uleb128 0xe
 3043 0434 84020000 		.4byte	.LASF59
 3044 0438 01       		.byte	0x1
 3045 0439 C303     		.2byte	0x3c3
 3046 043b 9B000000 		.4byte	0x9b
 3047 043f 02       		.uleb128 0x2
 3048 0440 91       		.byte	0x91
 3049 0441 76       		.sleb128 -10
 3050 0442 00       		.byte	0
 3051 0443 11       		.uleb128 0x11
 3052 0444 1A000000 		.4byte	.LASF60
 3053 0448 01       		.byte	0x1
 3054 0449 FD03     		.2byte	0x3fd
 3055 044b B3000000 		.4byte	0xb3
 3056 044f 00000000 		.4byte	.LFB17
 3057 0453 44000000 		.4byte	.LFE17-.LFB17
 3058 0457 01       		.uleb128 0x1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cccSVp0l.s 			page 87


 3059 0458 9C       		.byte	0x9c
 3060 0459 7C040000 		.4byte	0x47c
 3061 045d 10       		.uleb128 0x10
 3062 045e 9A040000 		.4byte	.LASF58
 3063 0462 01       		.byte	0x1
 3064 0463 FD03     		.2byte	0x3fd
 3065 0465 A7000000 		.4byte	0xa7
 3066 0469 02       		.uleb128 0x2
 3067 046a 91       		.byte	0x91
 3068 046b 64       		.sleb128 -28
 3069 046c 0E       		.uleb128 0xe
 3070 046d E3010000 		.4byte	.LASF61
 3071 0471 01       		.byte	0x1
 3072 0472 0004     		.2byte	0x400
 3073 0474 B3000000 		.4byte	0xb3
 3074 0478 02       		.uleb128 0x2
 3075 0479 91       		.byte	0x91
 3076 047a 6C       		.sleb128 -20
 3077 047b 00       		.byte	0
 3078 047c 12       		.uleb128 0x12
 3079 047d AC010000 		.4byte	.LASF62
 3080 0481 01       		.byte	0x1
 3081 0482 3F04     		.2byte	0x43f
 3082 0484 A7000000 		.4byte	0xa7
 3083 0488 00000000 		.4byte	.LFB18
 3084 048c B8000000 		.4byte	.LFE18-.LFB18
 3085 0490 01       		.uleb128 0x1
 3086 0491 9C       		.byte	0x9c
 3087 0492 E2040000 		.4byte	0x4e2
 3088 0496 10       		.uleb128 0x10
 3089 0497 9A040000 		.4byte	.LASF58
 3090 049b 01       		.byte	0x1
 3091 049c 3F04     		.2byte	0x43f
 3092 049e A7000000 		.4byte	0xa7
 3093 04a2 02       		.uleb128 0x2
 3094 04a3 91       		.byte	0x91
 3095 04a4 64       		.sleb128 -28
 3096 04a5 0E       		.uleb128 0xe
 3097 04a6 29020000 		.4byte	.LASF63
 3098 04aa 01       		.byte	0x1
 3099 04ab 4204     		.2byte	0x442
 3100 04ad A7000000 		.4byte	0xa7
 3101 04b1 02       		.uleb128 0x2
 3102 04b2 91       		.byte	0x91
 3103 04b3 68       		.sleb128 -24
 3104 04b4 0E       		.uleb128 0xe
 3105 04b5 43040000 		.4byte	.LASF64
 3106 04b9 01       		.byte	0x1
 3107 04ba 4304     		.2byte	0x443
 3108 04bc A7000000 		.4byte	0xa7
 3109 04c0 02       		.uleb128 0x2
 3110 04c1 91       		.byte	0x91
 3111 04c2 74       		.sleb128 -12
 3112 04c3 0E       		.uleb128 0xe
 3113 04c4 49040000 		.4byte	.LASF65
 3114 04c8 01       		.byte	0x1
 3115 04c9 4404     		.2byte	0x444
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cccSVp0l.s 			page 88


 3116 04cb A7000000 		.4byte	0xa7
 3117 04cf 02       		.uleb128 0x2
 3118 04d0 91       		.byte	0x91
 3119 04d1 70       		.sleb128 -16
 3120 04d2 0E       		.uleb128 0xe
 3121 04d3 2D040000 		.4byte	.LASF66
 3122 04d7 01       		.byte	0x1
 3123 04d8 4504     		.2byte	0x445
 3124 04da 6B000000 		.4byte	0x6b
 3125 04de 02       		.uleb128 0x2
 3126 04df 91       		.byte	0x91
 3127 04e0 6F       		.sleb128 -17
 3128 04e1 00       		.byte	0
 3129 04e2 14       		.uleb128 0x14
 3130 04e3 F2020000 		.4byte	.LASF69
 3131 04e7 01       		.byte	0x1
 3132 04e8 DA04     		.2byte	0x4da
 3133 04ea 00000000 		.4byte	.LFB19
 3134 04ee 64010000 		.4byte	.LFE19-.LFB19
 3135 04f2 01       		.uleb128 0x1
 3136 04f3 9C       		.byte	0x9c
 3137 04f4 08050000 		.4byte	0x508
 3138 04f8 10       		.uleb128 0x10
 3139 04f9 5B040000 		.4byte	.LASF27
 3140 04fd 01       		.byte	0x1
 3141 04fe DA04     		.2byte	0x4da
 3142 0500 6B000000 		.4byte	0x6b
 3143 0504 02       		.uleb128 0x2
 3144 0505 91       		.byte	0x91
 3145 0506 77       		.sleb128 -9
 3146 0507 00       		.byte	0
 3147 0508 0D       		.uleb128 0xd
 3148 0509 FA030000 		.4byte	.LASF67
 3149 050d 01       		.byte	0x1
 3150 050e 1006     		.2byte	0x610
 3151 0510 00000000 		.4byte	.LFB20
 3152 0514 88000000 		.4byte	.LFE20-.LFB20
 3153 0518 01       		.uleb128 0x1
 3154 0519 9C       		.byte	0x9c
 3155 051a 3D050000 		.4byte	0x53d
 3156 051e 10       		.uleb128 0x10
 3157 051f 5B040000 		.4byte	.LASF27
 3158 0523 01       		.byte	0x1
 3159 0524 1006     		.2byte	0x610
 3160 0526 6B000000 		.4byte	0x6b
 3161 052a 02       		.uleb128 0x2
 3162 052b 91       		.byte	0x91
 3163 052c 77       		.sleb128 -9
 3164 052d 10       		.uleb128 0x10
 3165 052e 67040000 		.4byte	.LASF68
 3166 0532 01       		.byte	0x1
 3167 0533 1006     		.2byte	0x610
 3168 0535 6B000000 		.4byte	0x6b
 3169 0539 02       		.uleb128 0x2
 3170 053a 91       		.byte	0x91
 3171 053b 76       		.sleb128 -10
 3172 053c 00       		.byte	0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cccSVp0l.s 			page 89


 3173 053d 15       		.uleb128 0x15
 3174 053e 97020000 		.4byte	.LASF70
 3175 0542 01       		.byte	0x1
 3176 0543 5106     		.2byte	0x651
 3177 0545 00000000 		.4byte	.LFB21
 3178 0549 6C010000 		.4byte	.LFE21-.LFB21
 3179 054d 01       		.uleb128 0x1
 3180 054e 9C       		.byte	0x9c
 3181 054f DB050000 		.4byte	0x5db
 3182 0553 10       		.uleb128 0x10
 3183 0554 0F000000 		.4byte	.LASF71
 3184 0558 01       		.byte	0x1
 3185 0559 5106     		.2byte	0x651
 3186 055b 6B000000 		.4byte	0x6b
 3187 055f 02       		.uleb128 0x2
 3188 0560 91       		.byte	0x91
 3189 0561 67       		.sleb128 -25
 3190 0562 10       		.uleb128 0x10
 3191 0563 D4030000 		.4byte	.LASF72
 3192 0567 01       		.byte	0x1
 3193 0568 5106     		.2byte	0x651
 3194 056a 77000000 		.4byte	0x77
 3195 056e 02       		.uleb128 0x2
 3196 056f 91       		.byte	0x91
 3197 0570 64       		.sleb128 -28
 3198 0571 10       		.uleb128 0x10
 3199 0572 43010000 		.4byte	.LASF73
 3200 0576 01       		.byte	0x1
 3201 0577 5106     		.2byte	0x651
 3202 0579 77000000 		.4byte	0x77
 3203 057d 02       		.uleb128 0x2
 3204 057e 91       		.byte	0x91
 3205 057f 62       		.sleb128 -30
 3206 0580 10       		.uleb128 0x10
 3207 0581 2D040000 		.4byte	.LASF66
 3208 0585 01       		.byte	0x1
 3209 0586 5206     		.2byte	0x652
 3210 0588 6B000000 		.4byte	0x6b
 3211 058c 02       		.uleb128 0x2
 3212 058d 91       		.byte	0x91
 3213 058e 66       		.sleb128 -26
 3214 058f 10       		.uleb128 0x10
 3215 0590 5B040000 		.4byte	.LASF27
 3216 0594 01       		.byte	0x1
 3217 0595 5206     		.2byte	0x652
 3218 0597 6B000000 		.4byte	0x6b
 3219 059b 02       		.uleb128 0x2
 3220 059c 91       		.byte	0x91
 3221 059d 00       		.sleb128 0
 3222 059e 0E       		.uleb128 0xe
 3223 059f 8B020000 		.4byte	.LASF74
 3224 05a3 01       		.byte	0x1
 3225 05a4 5406     		.2byte	0x654
 3226 05a6 8F000000 		.4byte	0x8f
 3227 05aa 02       		.uleb128 0x2
 3228 05ab 91       		.byte	0x91
 3229 05ac 77       		.sleb128 -9
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cccSVp0l.s 			page 90


 3230 05ad 0E       		.uleb128 0xe
 3231 05ae E1030000 		.4byte	.LASF75
 3232 05b2 01       		.byte	0x1
 3233 05b3 5506     		.2byte	0x655
 3234 05b5 A7000000 		.4byte	0xa7
 3235 05b9 02       		.uleb128 0x2
 3236 05ba 91       		.byte	0x91
 3237 05bb 70       		.sleb128 -16
 3238 05bc 0E       		.uleb128 0xe
 3239 05bd 7A020000 		.4byte	.LASF44
 3240 05c1 01       		.byte	0x1
 3241 05c2 5606     		.2byte	0x656
 3242 05c4 77000000 		.4byte	0x77
 3243 05c8 02       		.uleb128 0x2
 3244 05c9 91       		.byte	0x91
 3245 05ca 74       		.sleb128 -12
 3246 05cb 0E       		.uleb128 0xe
 3247 05cc 25040000 		.4byte	.LASF76
 3248 05d0 01       		.byte	0x1
 3249 05d1 5706     		.2byte	0x657
 3250 05d3 83000000 		.4byte	0x83
 3251 05d7 02       		.uleb128 0x2
 3252 05d8 91       		.byte	0x91
 3253 05d9 6C       		.sleb128 -20
 3254 05da 00       		.byte	0
 3255 05db 14       		.uleb128 0x14
 3256 05dc FC010000 		.4byte	.LASF77
 3257 05e0 01       		.byte	0x1
 3258 05e1 BC06     		.2byte	0x6bc
 3259 05e3 00000000 		.4byte	.LFB22
 3260 05e7 7C000000 		.4byte	.LFE22-.LFB22
 3261 05eb 01       		.uleb128 0x1
 3262 05ec 9C       		.byte	0x9c
 3263 05ed 10060000 		.4byte	0x610
 3264 05f1 10       		.uleb128 0x10
 3265 05f2 0E020000 		.4byte	.LASF78
 3266 05f6 01       		.byte	0x1
 3267 05f7 BC06     		.2byte	0x6bc
 3268 05f9 6B000000 		.4byte	0x6b
 3269 05fd 02       		.uleb128 0x2
 3270 05fe 91       		.byte	0x91
 3271 05ff 6F       		.sleb128 -17
 3272 0600 0E       		.uleb128 0xe
 3273 0601 AF040000 		.4byte	.LASF28
 3274 0605 01       		.byte	0x1
 3275 0606 BE06     		.2byte	0x6be
 3276 0608 6B000000 		.4byte	0x6b
 3277 060c 02       		.uleb128 0x2
 3278 060d 91       		.byte	0x91
 3279 060e 77       		.sleb128 -9
 3280 060f 00       		.byte	0
 3281 0610 11       		.uleb128 0x11
 3282 0611 90040000 		.4byte	.LASF79
 3283 0615 01       		.byte	0x1
 3284 0616 E206     		.2byte	0x6e2
 3285 0618 8F000000 		.4byte	0x8f
 3286 061c 00000000 		.4byte	.LFB23
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cccSVp0l.s 			page 91


 3287 0620 3C000000 		.4byte	.LFE23-.LFB23
 3288 0624 01       		.uleb128 0x1
 3289 0625 9C       		.byte	0x9c
 3290 0626 3A060000 		.4byte	0x63a
 3291 062a 0E       		.uleb128 0xe
 3292 062b 10050000 		.4byte	.LASF50
 3293 062f 01       		.byte	0x1
 3294 0630 E406     		.2byte	0x6e4
 3295 0632 8F000000 		.4byte	0x8f
 3296 0636 02       		.uleb128 0x2
 3297 0637 91       		.byte	0x91
 3298 0638 77       		.sleb128 -9
 3299 0639 00       		.byte	0
 3300 063a 11       		.uleb128 0x11
 3301 063b 4C000000 		.4byte	.LASF80
 3302 063f 01       		.byte	0x1
 3303 0640 0307     		.2byte	0x703
 3304 0642 9B000000 		.4byte	0x9b
 3305 0646 00000000 		.4byte	.LFB24
 3306 064a 3C000000 		.4byte	.LFE24-.LFB24
 3307 064e 01       		.uleb128 0x1
 3308 064f 9C       		.byte	0x9c
 3309 0650 64060000 		.4byte	0x664
 3310 0654 0E       		.uleb128 0xe
 3311 0655 10050000 		.4byte	.LASF50
 3312 0659 01       		.byte	0x1
 3313 065a 0507     		.2byte	0x705
 3314 065c 9B000000 		.4byte	0x9b
 3315 0660 02       		.uleb128 0x2
 3316 0661 91       		.byte	0x91
 3317 0662 76       		.sleb128 -10
 3318 0663 00       		.byte	0
 3319 0664 11       		.uleb128 0x11
 3320 0665 A4040000 		.4byte	.LASF81
 3321 0669 01       		.byte	0x1
 3322 066a 2407     		.2byte	0x724
 3323 066c A7000000 		.4byte	0xa7
 3324 0670 00000000 		.4byte	.LFB25
 3325 0674 38000000 		.4byte	.LFE25-.LFB25
 3326 0678 01       		.uleb128 0x1
 3327 0679 9C       		.byte	0x9c
 3328 067a 8E060000 		.4byte	0x68e
 3329 067e 0E       		.uleb128 0xe
 3330 067f 10050000 		.4byte	.LASF50
 3331 0683 01       		.byte	0x1
 3332 0684 2607     		.2byte	0x726
 3333 0686 A7000000 		.4byte	0xa7
 3334 068a 02       		.uleb128 0x2
 3335 068b 91       		.byte	0x91
 3336 068c 74       		.sleb128 -12
 3337 068d 00       		.byte	0
 3338 068e 16       		.uleb128 0x16
 3339 068f 36010000 		.4byte	0x136
 3340 0693 9E060000 		.4byte	0x69e
 3341 0697 17       		.uleb128 0x17
 3342 0698 0E010000 		.4byte	0x10e
 3343 069c 00       		.byte	0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cccSVp0l.s 			page 92


 3344 069d 00       		.byte	0
 3345 069e 0B       		.uleb128 0xb
 3346 069f E9020000 		.4byte	.LASF82
 3347 06a3 01       		.byte	0x1
 3348 06a4 3D       		.byte	0x3d
 3349 06a5 8E060000 		.4byte	0x68e
 3350 06a9 05       		.uleb128 0x5
 3351 06aa 03       		.byte	0x3
 3352 06ab 04000000 		.4byte	ADC_gcor
 3353 06af 18       		.uleb128 0x18
 3354 06b0 F0010000 		.4byte	.LASF83
 3355 06b4 01       		.byte	0x1
 3356 06b5 2C       		.byte	0x2c
 3357 06b6 6B000000 		.4byte	0x6b
 3358 06ba 05       		.uleb128 0x5
 3359 06bb 03       		.byte	0x3
 3360 06bc 00000000 		.4byte	ADC_initVar
 3361 06c0 18       		.uleb128 0x18
 3362 06c1 96010000 		.4byte	.LASF84
 3363 06c5 01       		.byte	0x1
 3364 06c6 24       		.byte	0x24
 3365 06c7 E0000000 		.4byte	0xe0
 3366 06cb 05       		.uleb128 0x5
 3367 06cc 03       		.byte	0x3
 3368 06cd 00000000 		.4byte	ADC_convDone
 3369 06d1 18       		.uleb128 0x18
 3370 06d2 2D000000 		.4byte	.LASF85
 3371 06d6 01       		.byte	0x1
 3372 06d7 29       		.byte	0x29
 3373 06d8 E0000000 		.4byte	0xe0
 3374 06dc 05       		.uleb128 0x5
 3375 06dd 03       		.byte	0x3
 3376 06de 00000000 		.4byte	ADC_stopConversion
 3377 06e2 18       		.uleb128 0x18
 3378 06e3 40000000 		.4byte	.LASF86
 3379 06e7 01       		.byte	0x1
 3380 06e8 2F       		.byte	0x2f
 3381 06e9 E0000000 		.4byte	0xe0
 3382 06ed 05       		.uleb128 0x5
 3383 06ee 03       		.byte	0x3
 3384 06ef 00000000 		.4byte	ADC_started
 3385 06f3 18       		.uleb128 0x18
 3386 06f4 27010000 		.4byte	.LASF87
 3387 06f8 01       		.byte	0x1
 3388 06f9 32       		.byte	0x32
 3389 06fa E0000000 		.4byte	0xe0
 3390 06fe 05       		.uleb128 0x5
 3391 06ff 03       		.byte	0x3
 3392 0700 00000000 		.4byte	ADC_Config
 3393 0704 18       		.uleb128 0x18
 3394 0705 38040000 		.4byte	.LASF88
 3395 0709 01       		.byte	0x1
 3396 070a 34       		.byte	0x34
 3397 070b 15070000 		.4byte	0x715
 3398 070f 05       		.uleb128 0x5
 3399 0710 03       		.byte	0x3
 3400 0711 00000000 		.4byte	ADC_Offset
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cccSVp0l.s 			page 93


 3401 0715 05       		.uleb128 0x5
 3402 0716 A7000000 		.4byte	0xa7
 3403 071a 18       		.uleb128 0x18
 3404 071b F7040000 		.4byte	.LASF89
 3405 071f 01       		.byte	0x1
 3406 0720 35       		.byte	0x35
 3407 0721 15070000 		.4byte	0x715
 3408 0725 05       		.uleb128 0x5
 3409 0726 03       		.byte	0x3
 3410 0727 00000000 		.4byte	ADC_CountsPerVolt
 3411 072b 00       		.byte	0
 3412              		.section	.debug_abbrev,"",%progbits
 3413              	.Ldebug_abbrev0:
 3414 0000 01       		.uleb128 0x1
 3415 0001 11       		.uleb128 0x11
 3416 0002 01       		.byte	0x1
 3417 0003 25       		.uleb128 0x25
 3418 0004 0E       		.uleb128 0xe
 3419 0005 13       		.uleb128 0x13
 3420 0006 0B       		.uleb128 0xb
 3421 0007 03       		.uleb128 0x3
 3422 0008 0E       		.uleb128 0xe
 3423 0009 1B       		.uleb128 0x1b
 3424 000a 0E       		.uleb128 0xe
 3425 000b 55       		.uleb128 0x55
 3426 000c 17       		.uleb128 0x17
 3427 000d 11       		.uleb128 0x11
 3428 000e 01       		.uleb128 0x1
 3429 000f 10       		.uleb128 0x10
 3430 0010 17       		.uleb128 0x17
 3431 0011 00       		.byte	0
 3432 0012 00       		.byte	0
 3433 0013 02       		.uleb128 0x2
 3434 0014 24       		.uleb128 0x24
 3435 0015 00       		.byte	0
 3436 0016 0B       		.uleb128 0xb
 3437 0017 0B       		.uleb128 0xb
 3438 0018 3E       		.uleb128 0x3e
 3439 0019 0B       		.uleb128 0xb
 3440 001a 03       		.uleb128 0x3
 3441 001b 0E       		.uleb128 0xe
 3442 001c 00       		.byte	0
 3443 001d 00       		.byte	0
 3444 001e 03       		.uleb128 0x3
 3445 001f 24       		.uleb128 0x24
 3446 0020 00       		.byte	0
 3447 0021 0B       		.uleb128 0xb
 3448 0022 0B       		.uleb128 0xb
 3449 0023 3E       		.uleb128 0x3e
 3450 0024 0B       		.uleb128 0xb
 3451 0025 03       		.uleb128 0x3
 3452 0026 08       		.uleb128 0x8
 3453 0027 00       		.byte	0
 3454 0028 00       		.byte	0
 3455 0029 04       		.uleb128 0x4
 3456 002a 16       		.uleb128 0x16
 3457 002b 00       		.byte	0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cccSVp0l.s 			page 94


 3458 002c 03       		.uleb128 0x3
 3459 002d 0E       		.uleb128 0xe
 3460 002e 3A       		.uleb128 0x3a
 3461 002f 0B       		.uleb128 0xb
 3462 0030 3B       		.uleb128 0x3b
 3463 0031 05       		.uleb128 0x5
 3464 0032 49       		.uleb128 0x49
 3465 0033 13       		.uleb128 0x13
 3466 0034 00       		.byte	0
 3467 0035 00       		.byte	0
 3468 0036 05       		.uleb128 0x5
 3469 0037 35       		.uleb128 0x35
 3470 0038 00       		.byte	0
 3471 0039 49       		.uleb128 0x49
 3472 003a 13       		.uleb128 0x13
 3473 003b 00       		.byte	0
 3474 003c 00       		.byte	0
 3475 003d 06       		.uleb128 0x6
 3476 003e 13       		.uleb128 0x13
 3477 003f 01       		.byte	0x1
 3478 0040 0B       		.uleb128 0xb
 3479 0041 0B       		.uleb128 0xb
 3480 0042 3A       		.uleb128 0x3a
 3481 0043 0B       		.uleb128 0xb
 3482 0044 3B       		.uleb128 0x3b
 3483 0045 0B       		.uleb128 0xb
 3484 0046 01       		.uleb128 0x1
 3485 0047 13       		.uleb128 0x13
 3486 0048 00       		.byte	0
 3487 0049 00       		.byte	0
 3488 004a 07       		.uleb128 0x7
 3489 004b 0D       		.uleb128 0xd
 3490 004c 00       		.byte	0
 3491 004d 03       		.uleb128 0x3
 3492 004e 0E       		.uleb128 0xe
 3493 004f 3A       		.uleb128 0x3a
 3494 0050 0B       		.uleb128 0xb
 3495 0051 3B       		.uleb128 0x3b
 3496 0052 0B       		.uleb128 0xb
 3497 0053 49       		.uleb128 0x49
 3498 0054 13       		.uleb128 0x13
 3499 0055 38       		.uleb128 0x38
 3500 0056 0B       		.uleb128 0xb
 3501 0057 00       		.byte	0
 3502 0058 00       		.byte	0
 3503 0059 08       		.uleb128 0x8
 3504 005a 16       		.uleb128 0x16
 3505 005b 00       		.byte	0
 3506 005c 03       		.uleb128 0x3
 3507 005d 0E       		.uleb128 0xe
 3508 005e 3A       		.uleb128 0x3a
 3509 005f 0B       		.uleb128 0xb
 3510 0060 3B       		.uleb128 0x3b
 3511 0061 0B       		.uleb128 0xb
 3512 0062 49       		.uleb128 0x49
 3513 0063 13       		.uleb128 0x13
 3514 0064 00       		.byte	0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cccSVp0l.s 			page 95


 3515 0065 00       		.byte	0
 3516 0066 09       		.uleb128 0x9
 3517 0067 2E       		.uleb128 0x2e
 3518 0068 00       		.byte	0
 3519 0069 3F       		.uleb128 0x3f
 3520 006a 19       		.uleb128 0x19
 3521 006b 03       		.uleb128 0x3
 3522 006c 0E       		.uleb128 0xe
 3523 006d 3A       		.uleb128 0x3a
 3524 006e 0B       		.uleb128 0xb
 3525 006f 3B       		.uleb128 0x3b
 3526 0070 0B       		.uleb128 0xb
 3527 0071 27       		.uleb128 0x27
 3528 0072 19       		.uleb128 0x19
 3529 0073 11       		.uleb128 0x11
 3530 0074 01       		.uleb128 0x1
 3531 0075 12       		.uleb128 0x12
 3532 0076 06       		.uleb128 0x6
 3533 0077 40       		.uleb128 0x40
 3534 0078 18       		.uleb128 0x18
 3535 0079 9642     		.uleb128 0x2116
 3536 007b 19       		.uleb128 0x19
 3537 007c 00       		.byte	0
 3538 007d 00       		.byte	0
 3539 007e 0A       		.uleb128 0xa
 3540 007f 2E       		.uleb128 0x2e
 3541 0080 01       		.byte	0x1
 3542 0081 3F       		.uleb128 0x3f
 3543 0082 19       		.uleb128 0x19
 3544 0083 03       		.uleb128 0x3
 3545 0084 0E       		.uleb128 0xe
 3546 0085 3A       		.uleb128 0x3a
 3547 0086 0B       		.uleb128 0xb
 3548 0087 3B       		.uleb128 0x3b
 3549 0088 0B       		.uleb128 0xb
 3550 0089 27       		.uleb128 0x27
 3551 008a 19       		.uleb128 0x19
 3552 008b 11       		.uleb128 0x11
 3553 008c 01       		.uleb128 0x1
 3554 008d 12       		.uleb128 0x12
 3555 008e 06       		.uleb128 0x6
 3556 008f 40       		.uleb128 0x40
 3557 0090 18       		.uleb128 0x18
 3558 0091 9642     		.uleb128 0x2116
 3559 0093 19       		.uleb128 0x19
 3560 0094 01       		.uleb128 0x1
 3561 0095 13       		.uleb128 0x13
 3562 0096 00       		.byte	0
 3563 0097 00       		.byte	0
 3564 0098 0B       		.uleb128 0xb
 3565 0099 34       		.uleb128 0x34
 3566 009a 00       		.byte	0
 3567 009b 03       		.uleb128 0x3
 3568 009c 0E       		.uleb128 0xe
 3569 009d 3A       		.uleb128 0x3a
 3570 009e 0B       		.uleb128 0xb
 3571 009f 3B       		.uleb128 0x3b
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cccSVp0l.s 			page 96


 3572 00a0 0B       		.uleb128 0xb
 3573 00a1 49       		.uleb128 0x49
 3574 00a2 13       		.uleb128 0x13
 3575 00a3 02       		.uleb128 0x2
 3576 00a4 18       		.uleb128 0x18
 3577 00a5 00       		.byte	0
 3578 00a6 00       		.byte	0
 3579 00a7 0C       		.uleb128 0xc
 3580 00a8 2E       		.uleb128 0x2e
 3581 00a9 00       		.byte	0
 3582 00aa 3F       		.uleb128 0x3f
 3583 00ab 19       		.uleb128 0x19
 3584 00ac 03       		.uleb128 0x3
 3585 00ad 0E       		.uleb128 0xe
 3586 00ae 3A       		.uleb128 0x3a
 3587 00af 0B       		.uleb128 0xb
 3588 00b0 3B       		.uleb128 0x3b
 3589 00b1 05       		.uleb128 0x5
 3590 00b2 27       		.uleb128 0x27
 3591 00b3 19       		.uleb128 0x19
 3592 00b4 11       		.uleb128 0x11
 3593 00b5 01       		.uleb128 0x1
 3594 00b6 12       		.uleb128 0x12
 3595 00b7 06       		.uleb128 0x6
 3596 00b8 40       		.uleb128 0x40
 3597 00b9 18       		.uleb128 0x18
 3598 00ba 9642     		.uleb128 0x2116
 3599 00bc 19       		.uleb128 0x19
 3600 00bd 00       		.byte	0
 3601 00be 00       		.byte	0
 3602 00bf 0D       		.uleb128 0xd
 3603 00c0 2E       		.uleb128 0x2e
 3604 00c1 01       		.byte	0x1
 3605 00c2 3F       		.uleb128 0x3f
 3606 00c3 19       		.uleb128 0x19
 3607 00c4 03       		.uleb128 0x3
 3608 00c5 0E       		.uleb128 0xe
 3609 00c6 3A       		.uleb128 0x3a
 3610 00c7 0B       		.uleb128 0xb
 3611 00c8 3B       		.uleb128 0x3b
 3612 00c9 05       		.uleb128 0x5
 3613 00ca 27       		.uleb128 0x27
 3614 00cb 19       		.uleb128 0x19
 3615 00cc 11       		.uleb128 0x11
 3616 00cd 01       		.uleb128 0x1
 3617 00ce 12       		.uleb128 0x12
 3618 00cf 06       		.uleb128 0x6
 3619 00d0 40       		.uleb128 0x40
 3620 00d1 18       		.uleb128 0x18
 3621 00d2 9642     		.uleb128 0x2116
 3622 00d4 19       		.uleb128 0x19
 3623 00d5 01       		.uleb128 0x1
 3624 00d6 13       		.uleb128 0x13
 3625 00d7 00       		.byte	0
 3626 00d8 00       		.byte	0
 3627 00d9 0E       		.uleb128 0xe
 3628 00da 34       		.uleb128 0x34
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cccSVp0l.s 			page 97


 3629 00db 00       		.byte	0
 3630 00dc 03       		.uleb128 0x3
 3631 00dd 0E       		.uleb128 0xe
 3632 00de 3A       		.uleb128 0x3a
 3633 00df 0B       		.uleb128 0xb
 3634 00e0 3B       		.uleb128 0x3b
 3635 00e1 05       		.uleb128 0x5
 3636 00e2 49       		.uleb128 0x49
 3637 00e3 13       		.uleb128 0x13
 3638 00e4 02       		.uleb128 0x2
 3639 00e5 18       		.uleb128 0x18
 3640 00e6 00       		.byte	0
 3641 00e7 00       		.byte	0
 3642 00e8 0F       		.uleb128 0xf
 3643 00e9 2E       		.uleb128 0x2e
 3644 00ea 01       		.byte	0x1
 3645 00eb 3F       		.uleb128 0x3f
 3646 00ec 19       		.uleb128 0x19
 3647 00ed 03       		.uleb128 0x3
 3648 00ee 0E       		.uleb128 0xe
 3649 00ef 3A       		.uleb128 0x3a
 3650 00f0 0B       		.uleb128 0xb
 3651 00f1 3B       		.uleb128 0x3b
 3652 00f2 05       		.uleb128 0x5
 3653 00f3 27       		.uleb128 0x27
 3654 00f4 19       		.uleb128 0x19
 3655 00f5 11       		.uleb128 0x11
 3656 00f6 01       		.uleb128 0x1
 3657 00f7 12       		.uleb128 0x12
 3658 00f8 06       		.uleb128 0x6
 3659 00f9 40       		.uleb128 0x40
 3660 00fa 18       		.uleb128 0x18
 3661 00fb 9742     		.uleb128 0x2117
 3662 00fd 19       		.uleb128 0x19
 3663 00fe 01       		.uleb128 0x1
 3664 00ff 13       		.uleb128 0x13
 3665 0100 00       		.byte	0
 3666 0101 00       		.byte	0
 3667 0102 10       		.uleb128 0x10
 3668 0103 05       		.uleb128 0x5
 3669 0104 00       		.byte	0
 3670 0105 03       		.uleb128 0x3
 3671 0106 0E       		.uleb128 0xe
 3672 0107 3A       		.uleb128 0x3a
 3673 0108 0B       		.uleb128 0xb
 3674 0109 3B       		.uleb128 0x3b
 3675 010a 05       		.uleb128 0x5
 3676 010b 49       		.uleb128 0x49
 3677 010c 13       		.uleb128 0x13
 3678 010d 02       		.uleb128 0x2
 3679 010e 18       		.uleb128 0x18
 3680 010f 00       		.byte	0
 3681 0110 00       		.byte	0
 3682 0111 11       		.uleb128 0x11
 3683 0112 2E       		.uleb128 0x2e
 3684 0113 01       		.byte	0x1
 3685 0114 3F       		.uleb128 0x3f
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cccSVp0l.s 			page 98


 3686 0115 19       		.uleb128 0x19
 3687 0116 03       		.uleb128 0x3
 3688 0117 0E       		.uleb128 0xe
 3689 0118 3A       		.uleb128 0x3a
 3690 0119 0B       		.uleb128 0xb
 3691 011a 3B       		.uleb128 0x3b
 3692 011b 05       		.uleb128 0x5
 3693 011c 27       		.uleb128 0x27
 3694 011d 19       		.uleb128 0x19
 3695 011e 49       		.uleb128 0x49
 3696 011f 13       		.uleb128 0x13
 3697 0120 11       		.uleb128 0x11
 3698 0121 01       		.uleb128 0x1
 3699 0122 12       		.uleb128 0x12
 3700 0123 06       		.uleb128 0x6
 3701 0124 40       		.uleb128 0x40
 3702 0125 18       		.uleb128 0x18
 3703 0126 9642     		.uleb128 0x2116
 3704 0128 19       		.uleb128 0x19
 3705 0129 01       		.uleb128 0x1
 3706 012a 13       		.uleb128 0x13
 3707 012b 00       		.byte	0
 3708 012c 00       		.byte	0
 3709 012d 12       		.uleb128 0x12
 3710 012e 2E       		.uleb128 0x2e
 3711 012f 01       		.byte	0x1
 3712 0130 3F       		.uleb128 0x3f
 3713 0131 19       		.uleb128 0x19
 3714 0132 03       		.uleb128 0x3
 3715 0133 0E       		.uleb128 0xe
 3716 0134 3A       		.uleb128 0x3a
 3717 0135 0B       		.uleb128 0xb
 3718 0136 3B       		.uleb128 0x3b
 3719 0137 05       		.uleb128 0x5
 3720 0138 27       		.uleb128 0x27
 3721 0139 19       		.uleb128 0x19
 3722 013a 49       		.uleb128 0x49
 3723 013b 13       		.uleb128 0x13
 3724 013c 11       		.uleb128 0x11
 3725 013d 01       		.uleb128 0x1
 3726 013e 12       		.uleb128 0x12
 3727 013f 06       		.uleb128 0x6
 3728 0140 40       		.uleb128 0x40
 3729 0141 18       		.uleb128 0x18
 3730 0142 9742     		.uleb128 0x2117
 3731 0144 19       		.uleb128 0x19
 3732 0145 01       		.uleb128 0x1
 3733 0146 13       		.uleb128 0x13
 3734 0147 00       		.byte	0
 3735 0148 00       		.byte	0
 3736 0149 13       		.uleb128 0x13
 3737 014a 2E       		.uleb128 0x2e
 3738 014b 00       		.byte	0
 3739 014c 3F       		.uleb128 0x3f
 3740 014d 19       		.uleb128 0x19
 3741 014e 03       		.uleb128 0x3
 3742 014f 0E       		.uleb128 0xe
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cccSVp0l.s 			page 99


 3743 0150 3A       		.uleb128 0x3a
 3744 0151 0B       		.uleb128 0xb
 3745 0152 3B       		.uleb128 0x3b
 3746 0153 05       		.uleb128 0x5
 3747 0154 27       		.uleb128 0x27
 3748 0155 19       		.uleb128 0x19
 3749 0156 11       		.uleb128 0x11
 3750 0157 01       		.uleb128 0x1
 3751 0158 12       		.uleb128 0x12
 3752 0159 06       		.uleb128 0x6
 3753 015a 40       		.uleb128 0x40
 3754 015b 18       		.uleb128 0x18
 3755 015c 9742     		.uleb128 0x2117
 3756 015e 19       		.uleb128 0x19
 3757 015f 00       		.byte	0
 3758 0160 00       		.byte	0
 3759 0161 14       		.uleb128 0x14
 3760 0162 2E       		.uleb128 0x2e
 3761 0163 01       		.byte	0x1
 3762 0164 03       		.uleb128 0x3
 3763 0165 0E       		.uleb128 0xe
 3764 0166 3A       		.uleb128 0x3a
 3765 0167 0B       		.uleb128 0xb
 3766 0168 3B       		.uleb128 0x3b
 3767 0169 05       		.uleb128 0x5
 3768 016a 27       		.uleb128 0x27
 3769 016b 19       		.uleb128 0x19
 3770 016c 11       		.uleb128 0x11
 3771 016d 01       		.uleb128 0x1
 3772 016e 12       		.uleb128 0x12
 3773 016f 06       		.uleb128 0x6
 3774 0170 40       		.uleb128 0x40
 3775 0171 18       		.uleb128 0x18
 3776 0172 9642     		.uleb128 0x2116
 3777 0174 19       		.uleb128 0x19
 3778 0175 01       		.uleb128 0x1
 3779 0176 13       		.uleb128 0x13
 3780 0177 00       		.byte	0
 3781 0178 00       		.byte	0
 3782 0179 15       		.uleb128 0x15
 3783 017a 2E       		.uleb128 0x2e
 3784 017b 01       		.byte	0x1
 3785 017c 03       		.uleb128 0x3
 3786 017d 0E       		.uleb128 0xe
 3787 017e 3A       		.uleb128 0x3a
 3788 017f 0B       		.uleb128 0xb
 3789 0180 3B       		.uleb128 0x3b
 3790 0181 05       		.uleb128 0x5
 3791 0182 27       		.uleb128 0x27
 3792 0183 19       		.uleb128 0x19
 3793 0184 11       		.uleb128 0x11
 3794 0185 01       		.uleb128 0x1
 3795 0186 12       		.uleb128 0x12
 3796 0187 06       		.uleb128 0x6
 3797 0188 40       		.uleb128 0x40
 3798 0189 18       		.uleb128 0x18
 3799 018a 9742     		.uleb128 0x2117
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cccSVp0l.s 			page 100


 3800 018c 19       		.uleb128 0x19
 3801 018d 01       		.uleb128 0x1
 3802 018e 13       		.uleb128 0x13
 3803 018f 00       		.byte	0
 3804 0190 00       		.byte	0
 3805 0191 16       		.uleb128 0x16
 3806 0192 01       		.uleb128 0x1
 3807 0193 01       		.byte	0x1
 3808 0194 49       		.uleb128 0x49
 3809 0195 13       		.uleb128 0x13
 3810 0196 01       		.uleb128 0x1
 3811 0197 13       		.uleb128 0x13
 3812 0198 00       		.byte	0
 3813 0199 00       		.byte	0
 3814 019a 17       		.uleb128 0x17
 3815 019b 21       		.uleb128 0x21
 3816 019c 00       		.byte	0
 3817 019d 49       		.uleb128 0x49
 3818 019e 13       		.uleb128 0x13
 3819 019f 2F       		.uleb128 0x2f
 3820 01a0 0B       		.uleb128 0xb
 3821 01a1 00       		.byte	0
 3822 01a2 00       		.byte	0
 3823 01a3 18       		.uleb128 0x18
 3824 01a4 34       		.uleb128 0x34
 3825 01a5 00       		.byte	0
 3826 01a6 03       		.uleb128 0x3
 3827 01a7 0E       		.uleb128 0xe
 3828 01a8 3A       		.uleb128 0x3a
 3829 01a9 0B       		.uleb128 0xb
 3830 01aa 3B       		.uleb128 0x3b
 3831 01ab 0B       		.uleb128 0xb
 3832 01ac 49       		.uleb128 0x49
 3833 01ad 13       		.uleb128 0x13
 3834 01ae 3F       		.uleb128 0x3f
 3835 01af 19       		.uleb128 0x19
 3836 01b0 02       		.uleb128 0x2
 3837 01b1 18       		.uleb128 0x18
 3838 01b2 00       		.byte	0
 3839 01b3 00       		.byte	0
 3840 01b4 00       		.byte	0
 3841              		.section	.debug_aranges,"",%progbits
 3842 0000 E4000000 		.4byte	0xe4
 3843 0004 0200     		.2byte	0x2
 3844 0006 00000000 		.4byte	.Ldebug_info0
 3845 000a 04       		.byte	0x4
 3846 000b 00       		.byte	0
 3847 000c 0000     		.2byte	0
 3848 000e 0000     		.2byte	0
 3849 0010 00000000 		.4byte	.LFB0
 3850 0014 1C010000 		.4byte	.LFE0-.LFB0
 3851 0018 00000000 		.4byte	.LFB1
 3852 001c 58010000 		.4byte	.LFE1-.LFB1
 3853 0020 00000000 		.4byte	.LFB2
 3854 0024 30000000 		.4byte	.LFE2-.LFB2
 3855 0028 00000000 		.4byte	.LFB3
 3856 002c 7C010000 		.4byte	.LFE3-.LFB3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cccSVp0l.s 			page 101


 3857 0030 00000000 		.4byte	.LFB4
 3858 0034 3C000000 		.4byte	.LFE4-.LFB4
 3859 0038 00000000 		.4byte	.LFB5
 3860 003c 38000000 		.4byte	.LFE5-.LFB5
 3861 0040 00000000 		.4byte	.LFB6
 3862 0044 AC000000 		.4byte	.LFE6-.LFB6
 3863 0048 00000000 		.4byte	.LFB7
 3864 004c 3C000000 		.4byte	.LFE7-.LFB7
 3865 0050 00000000 		.4byte	.LFB8
 3866 0054 20000000 		.4byte	.LFE8-.LFB8
 3867 0058 00000000 		.4byte	.LFB9
 3868 005c 20000000 		.4byte	.LFE9-.LFB9
 3869 0060 00000000 		.4byte	.LFB10
 3870 0064 4C000000 		.4byte	.LFE10-.LFB10
 3871 0068 00000000 		.4byte	.LFB11
 3872 006c 68000000 		.4byte	.LFE11-.LFB11
 3873 0070 00000000 		.4byte	.LFB12
 3874 0074 7C000000 		.4byte	.LFE12-.LFB12
 3875 0078 00000000 		.4byte	.LFB13
 3876 007c A8000000 		.4byte	.LFE13-.LFB13
 3877 0080 00000000 		.4byte	.LFB14
 3878 0084 1C000000 		.4byte	.LFE14-.LFB14
 3879 0088 00000000 		.4byte	.LFB15
 3880 008c 1C000000 		.4byte	.LFE15-.LFB15
 3881 0090 00000000 		.4byte	.LFB16
 3882 0094 3C000000 		.4byte	.LFE16-.LFB16
 3883 0098 00000000 		.4byte	.LFB17
 3884 009c 44000000 		.4byte	.LFE17-.LFB17
 3885 00a0 00000000 		.4byte	.LFB18
 3886 00a4 B8000000 		.4byte	.LFE18-.LFB18
 3887 00a8 00000000 		.4byte	.LFB19
 3888 00ac 64010000 		.4byte	.LFE19-.LFB19
 3889 00b0 00000000 		.4byte	.LFB20
 3890 00b4 88000000 		.4byte	.LFE20-.LFB20
 3891 00b8 00000000 		.4byte	.LFB21
 3892 00bc 6C010000 		.4byte	.LFE21-.LFB21
 3893 00c0 00000000 		.4byte	.LFB22
 3894 00c4 7C000000 		.4byte	.LFE22-.LFB22
 3895 00c8 00000000 		.4byte	.LFB23
 3896 00cc 3C000000 		.4byte	.LFE23-.LFB23
 3897 00d0 00000000 		.4byte	.LFB24
 3898 00d4 3C000000 		.4byte	.LFE24-.LFB24
 3899 00d8 00000000 		.4byte	.LFB25
 3900 00dc 38000000 		.4byte	.LFE25-.LFB25
 3901 00e0 00000000 		.4byte	0
 3902 00e4 00000000 		.4byte	0
 3903              		.section	.debug_ranges,"",%progbits
 3904              	.Ldebug_ranges0:
 3905 0000 00000000 		.4byte	.LFB0
 3906 0004 1C010000 		.4byte	.LFE0
 3907 0008 00000000 		.4byte	.LFB1
 3908 000c 58010000 		.4byte	.LFE1
 3909 0010 00000000 		.4byte	.LFB2
 3910 0014 30000000 		.4byte	.LFE2
 3911 0018 00000000 		.4byte	.LFB3
 3912 001c 7C010000 		.4byte	.LFE3
 3913 0020 00000000 		.4byte	.LFB4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cccSVp0l.s 			page 102


 3914 0024 3C000000 		.4byte	.LFE4
 3915 0028 00000000 		.4byte	.LFB5
 3916 002c 38000000 		.4byte	.LFE5
 3917 0030 00000000 		.4byte	.LFB6
 3918 0034 AC000000 		.4byte	.LFE6
 3919 0038 00000000 		.4byte	.LFB7
 3920 003c 3C000000 		.4byte	.LFE7
 3921 0040 00000000 		.4byte	.LFB8
 3922 0044 20000000 		.4byte	.LFE8
 3923 0048 00000000 		.4byte	.LFB9
 3924 004c 20000000 		.4byte	.LFE9
 3925 0050 00000000 		.4byte	.LFB10
 3926 0054 4C000000 		.4byte	.LFE10
 3927 0058 00000000 		.4byte	.LFB11
 3928 005c 68000000 		.4byte	.LFE11
 3929 0060 00000000 		.4byte	.LFB12
 3930 0064 7C000000 		.4byte	.LFE12
 3931 0068 00000000 		.4byte	.LFB13
 3932 006c A8000000 		.4byte	.LFE13
 3933 0070 00000000 		.4byte	.LFB14
 3934 0074 1C000000 		.4byte	.LFE14
 3935 0078 00000000 		.4byte	.LFB15
 3936 007c 1C000000 		.4byte	.LFE15
 3937 0080 00000000 		.4byte	.LFB16
 3938 0084 3C000000 		.4byte	.LFE16
 3939 0088 00000000 		.4byte	.LFB17
 3940 008c 44000000 		.4byte	.LFE17
 3941 0090 00000000 		.4byte	.LFB18
 3942 0094 B8000000 		.4byte	.LFE18
 3943 0098 00000000 		.4byte	.LFB19
 3944 009c 64010000 		.4byte	.LFE19
 3945 00a0 00000000 		.4byte	.LFB20
 3946 00a4 88000000 		.4byte	.LFE20
 3947 00a8 00000000 		.4byte	.LFB21
 3948 00ac 6C010000 		.4byte	.LFE21
 3949 00b0 00000000 		.4byte	.LFB22
 3950 00b4 7C000000 		.4byte	.LFE22
 3951 00b8 00000000 		.4byte	.LFB23
 3952 00bc 3C000000 		.4byte	.LFE23
 3953 00c0 00000000 		.4byte	.LFB24
 3954 00c4 3C000000 		.4byte	.LFE24
 3955 00c8 00000000 		.4byte	.LFB25
 3956 00cc 38000000 		.4byte	.LFE25
 3957 00d0 00000000 		.4byte	0
 3958 00d4 00000000 		.4byte	0
 3959              		.section	.debug_line,"",%progbits
 3960              	.Ldebug_line0:
 3961 0000 43030000 		.section	.debug_str,"MS",%progbits,1
 3961      02004900 
 3961      00000201 
 3961      FB0E0D00 
 3961      01010101 
 3962              	.LASF10:
 3963 0000 75696E74 		.ascii	"uint16\000"
 3963      313600
 3964              	.LASF56:
 3965 0007 61646347 		.ascii	"adcGain\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cccSVp0l.s 			page 103


 3965      61696E00 
 3966              	.LASF71:
 3967 000f 696E7075 		.ascii	"inputRange\000"
 3967      7452616E 
 3967      676500
 3968              	.LASF60:
 3969 001a 4144435F 		.ascii	"ADC_CountsTo_Volts\000"
 3969      436F756E 
 3969      7473546F 
 3969      5F566F6C 
 3969      747300
 3970              	.LASF85:
 3971 002d 4144435F 		.ascii	"ADC_stopConversion\000"
 3971      73746F70 
 3971      436F6E76 
 3971      65727369 
 3971      6F6E00
 3972              	.LASF86:
 3973 0040 4144435F 		.ascii	"ADC_started\000"
 3973      73746172 
 3973      74656400 
 3974              	.LASF80:
 3975 004c 4144435F 		.ascii	"ADC_Read16\000"
 3975      52656164 
 3975      313600
 3976              	.LASF24:
 3977 0057 67636F72 		.ascii	"gcor\000"
 3977      00
 3978              	.LASF90:
 3979 005c 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3979      43313120 
 3979      352E342E 
 3979      31203230 
 3979      31363036 
 3980 008f 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 3980      20726576 
 3980      6973696F 
 3980      6E203233 
 3980      37373135 
 3981 00c2 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 3981      66756E63 
 3981      74696F6E 
 3981      2D736563 
 3981      74696F6E 
 3982              	.LASF29:
 3983 00ea 4144435F 		.ascii	"ADC_Init\000"
 3983      496E6974 
 3983      00
 3984              	.LASF7:
 3985 00f3 6C6F6E67 		.ascii	"long long unsigned int\000"
 3985      206C6F6E 
 3985      6720756E 
 3985      7369676E 
 3985      65642069 
 3986              	.LASF91:
 3987 010a 47656E65 		.ascii	"Generated_Source\\PSoC5\\ADC.c\000"
 3987      72617465 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cccSVp0l.s 			page 104


 3987      645F536F 
 3987      75726365 
 3987      5C50536F 
 3988              	.LASF87:
 3989 0127 4144435F 		.ascii	"ADC_Config\000"
 3989      436F6E66 
 3989      696700
 3990              	.LASF45:
 3991 0132 4144435F 		.ascii	"ADC_StartConvert\000"
 3991      53746172 
 3991      74436F6E 
 3991      76657274 
 3991      00
 3992              	.LASF73:
 3993 0143 69646561 		.ascii	"idealOddDecGain\000"
 3993      6C4F6464 
 3993      44656347 
 3993      61696E00 
 3994              	.LASF6:
 3995 0153 6C6F6E67 		.ascii	"long long int\000"
 3995      206C6F6E 
 3995      6720696E 
 3995      7400
 3996              	.LASF0:
 3997 0161 7369676E 		.ascii	"signed char\000"
 3997      65642063 
 3997      68617200 
 3998              	.LASF39:
 3999 016d 73746174 		.ascii	"status\000"
 3999      757300
 4000              	.LASF33:
 4001 0174 4144435F 		.ascii	"ADC_SetBufferGain\000"
 4001      53657442 
 4001      75666665 
 4001      72476169 
 4001      6E00
 4002              	.LASF14:
 4003 0186 696E7433 		.ascii	"int32\000"
 4003      3200
 4004              	.LASF30:
 4005 018c 4144435F 		.ascii	"ADC_Start\000"
 4005      53746172 
 4005      7400
 4006              	.LASF84:
 4007 0196 4144435F 		.ascii	"ADC_convDone\000"
 4007      636F6E76 
 4007      446F6E65 
 4007      00
 4008              	.LASF4:
 4009 01a3 6C6F6E67 		.ascii	"long int\000"
 4009      20696E74 
 4009      00
 4010              	.LASF62:
 4011 01ac 4144435F 		.ascii	"ADC_CountsTo_uVolts\000"
 4011      436F756E 
 4011      7473546F 
 4011      5F75566F 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cccSVp0l.s 			page 105


 4011      6C747300 
 4012              	.LASF20:
 4013 01c0 72656731 		.ascii	"reg16\000"
 4013      3600
 4014              	.LASF9:
 4015 01c6 75696E74 		.ascii	"uint8\000"
 4015      3800
 4016              	.LASF17:
 4017 01cc 646F7562 		.ascii	"double\000"
 4017      6C6500
 4018              	.LASF52:
 4019 01d3 4144435F 		.ascii	"ADC_GetResult32\000"
 4019      47657452 
 4019      6573756C 
 4019      74333200 
 4020              	.LASF61:
 4021 01e3 566F6C74 		.ascii	"Volts\000"
 4021      7300
 4022              	.LASF11:
 4023 01e9 75696E74 		.ascii	"uint32\000"
 4023      333200
 4024              	.LASF83:
 4025 01f0 4144435F 		.ascii	"ADC_initVar\000"
 4025      696E6974 
 4025      56617200 
 4026              	.LASF77:
 4027 01fc 4144435F 		.ascii	"ADC_SetDSMRef0Reg\000"
 4027      53657444 
 4027      534D5265 
 4027      66305265 
 4027      6700
 4028              	.LASF78:
 4029 020e 76616C75 		.ascii	"value\000"
 4029      6500
 4030              	.LASF48:
 4031 0214 7265744D 		.ascii	"retMode\000"
 4031      6F646500 
 4032              	.LASF8:
 4033 021c 756E7369 		.ascii	"unsigned int\000"
 4033      676E6564 
 4033      20696E74 
 4033      00
 4034              	.LASF63:
 4035 0229 75566F6C 		.ascii	"uVolts\000"
 4035      747300
 4036              	.LASF5:
 4037 0230 6C6F6E67 		.ascii	"long unsigned int\000"
 4037      20756E73 
 4037      69676E65 
 4037      6420696E 
 4037      7400
 4038              	.LASF26:
 4039 0242 4144435F 		.ascii	"ADC_GCOR_STRUCT\000"
 4039      47434F52 
 4039      5F535452 
 4039      55435400 
 4040              	.LASF3:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cccSVp0l.s 			page 106


 4041 0252 73686F72 		.ascii	"short unsigned int\000"
 4041      7420756E 
 4041      7369676E 
 4041      65642069 
 4041      6E7400
 4042              	.LASF12:
 4043 0265 696E7438 		.ascii	"int8\000"
 4043      00
 4044              	.LASF46:
 4045 026a 4144435F 		.ascii	"ADC_StopConvert\000"
 4045      53746F70 
 4045      436F6E76 
 4045      65727400 
 4046              	.LASF44:
 4047 027a 67636F72 		.ascii	"gcorValue\000"
 4047      56616C75 
 4047      6500
 4048              	.LASF59:
 4049 0284 6D566F6C 		.ascii	"mVolts\000"
 4049      747300
 4050              	.LASF74:
 4051 028b 666C6173 		.ascii	"flash\000"
 4051      6800
 4052              	.LASF21:
 4053 0291 72656733 		.ascii	"reg32\000"
 4053      3200
 4054              	.LASF70:
 4055 0297 4144435F 		.ascii	"ADC_GainCompensation\000"
 4055      4761696E 
 4055      436F6D70 
 4055      656E7361 
 4055      74696F6E 
 4056              	.LASF15:
 4057 02ac 666C6F61 		.ascii	"float32\000"
 4057      74333200 
 4058              	.LASF23:
 4059 02b4 73697A65 		.ascii	"sizetype\000"
 4059      74797065 
 4059      00
 4060              	.LASF22:
 4061 02bd 6C6F6E67 		.ascii	"long double\000"
 4061      20646F75 
 4061      626C6500 
 4062              	.LASF41:
 4063 02c9 4144435F 		.ascii	"ADC_SetGCOR\000"
 4063      53657447 
 4063      434F5200 
 4064              	.LASF47:
 4065 02d5 4144435F 		.ascii	"ADC_IsEndConversion\000"
 4065      4973456E 
 4065      64436F6E 
 4065      76657273 
 4065      696F6E00 
 4066              	.LASF82:
 4067 02e9 4144435F 		.ascii	"ADC_gcor\000"
 4067      67636F72 
 4067      00
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cccSVp0l.s 			page 107


 4068              	.LASF69:
 4069 02f2 4144435F 		.ascii	"ADC_InitConfig\000"
 4069      496E6974 
 4069      436F6E66 
 4069      696700
 4070              	.LASF49:
 4071 0301 4144435F 		.ascii	"ADC_GetResult8\000"
 4071      47657452 
 4071      6573756C 
 4071      743800
 4072              	.LASF92:
 4073 0310 433A5C55 		.ascii	"C:\\Users\\mgnocco\\OneDrive - Fondazione Istituto "
 4073      73657273 
 4073      5C6D676E 
 4073      6F63636F 
 4073      5C4F6E65 
 4074 0340 4974616C 		.ascii	"Italiano Tecnologia\\Firmware\\TestSPI\\SoftHandPRO"
 4074      69616E6F 
 4074      20546563 
 4074      6E6F6C6F 
 4074      6769615C 
 4075 0370 2D616E64 		.ascii	"-and-Generic-FW-PSoC5 - IMU\\Generic.cydsn\000"
 4075      2D47656E 
 4075      65726963 
 4075      2D46572D 
 4075      50536F43 
 4076              	.LASF37:
 4077 039a 636F6865 		.ascii	"coherency\000"
 4077      72656E63 
 4077      7900
 4078              	.LASF36:
 4079 03a4 6761696E 		.ascii	"gain\000"
 4079      00
 4080              	.LASF55:
 4081 03a9 4144435F 		.ascii	"ADC_SetGain\000"
 4081      53657447 
 4081      61696E00 
 4082              	.LASF16:
 4083 03b5 666C6F61 		.ascii	"float\000"
 4083      7400
 4084              	.LASF57:
 4085 03bb 4144435F 		.ascii	"ADC_CountsTo_mVolts\000"
 4085      436F756E 
 4085      7473546F 
 4085      5F6D566F 
 4085      6C747300 
 4086              	.LASF19:
 4087 03cf 72656738 		.ascii	"reg8\000"
 4087      00
 4088              	.LASF72:
 4089 03d4 69646561 		.ascii	"idealDecGain\000"
 4089      6C446563 
 4089      4761696E 
 4089      00
 4090              	.LASF75:
 4091 03e1 6E6F726D 		.ascii	"normalised\000"
 4091      616C6973 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cccSVp0l.s 			page 108


 4091      656400
 4092              	.LASF1:
 4093 03ec 756E7369 		.ascii	"unsigned char\000"
 4093      676E6564 
 4093      20636861 
 4093      7200
 4094              	.LASF67:
 4095 03fa 4144435F 		.ascii	"ADC_SelectConfiguration\000"
 4095      53656C65 
 4095      6374436F 
 4095      6E666967 
 4095      75726174 
 4096              	.LASF2:
 4097 0412 73686F72 		.ascii	"short int\000"
 4097      7420696E 
 4097      7400
 4098              	.LASF32:
 4099 041c 4144435F 		.ascii	"ADC_Stop\000"
 4099      53746F70 
 4099      00
 4100              	.LASF76:
 4101 0425 67636F72 		.ascii	"gcorTmp\000"
 4101      546D7000 
 4102              	.LASF66:
 4103 042d 7265736F 		.ascii	"resolution\000"
 4103      6C757469 
 4103      6F6E00
 4104              	.LASF88:
 4105 0438 4144435F 		.ascii	"ADC_Offset\000"
 4105      4F666673 
 4105      657400
 4106              	.LASF64:
 4107 0443 636F6566 		.ascii	"coefA\000"
 4107      4100
 4108              	.LASF65:
 4109 0449 636F6566 		.ascii	"coefB\000"
 4109      4200
 4110              	.LASF18:
 4111 044f 63686172 		.ascii	"char\000"
 4111      00
 4112              	.LASF43:
 4113 0454 6756616C 		.ascii	"gValue\000"
 4113      756500
 4114              	.LASF27:
 4115 045b 636F6E66 		.ascii	"config\000"
 4115      696700
 4116              	.LASF25:
 4117 0462 6776616C 		.ascii	"gval\000"
 4117      00
 4118              	.LASF68:
 4119 0467 72657374 		.ascii	"restart\000"
 4119      61727400 
 4120              	.LASF40:
 4121 046f 746D7056 		.ascii	"tmpValue\000"
 4121      616C7565 
 4121      00
 4122              	.LASF54:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cccSVp0l.s 			page 109


 4123 0478 6F666673 		.ascii	"offset\000"
 4123      657400
 4124              	.LASF35:
 4125 047f 4144435F 		.ascii	"ADC_SetCoherency\000"
 4125      53657443 
 4125      6F686572 
 4125      656E6379 
 4125      00
 4126              	.LASF79:
 4127 0490 4144435F 		.ascii	"ADC_Read8\000"
 4127      52656164 
 4127      3800
 4128              	.LASF58:
 4129 049a 61646343 		.ascii	"adcCounts\000"
 4129      6F756E74 
 4129      7300
 4130              	.LASF81:
 4131 04a4 4144435F 		.ascii	"ADC_Read32\000"
 4131      52656164 
 4131      333200
 4132              	.LASF28:
 4133 04af 656E6162 		.ascii	"enableInterrupts\000"
 4133      6C65496E 
 4133      74657272 
 4133      75707473 
 4133      00
 4134              	.LASF31:
 4135 04c0 4144435F 		.ascii	"ADC_Enable\000"
 4135      456E6162 
 4135      6C6500
 4136              	.LASF42:
 4137 04cb 4144435F 		.ascii	"ADC_ReadGCOR\000"
 4137      52656164 
 4137      47434F52 
 4137      00
 4138              	.LASF38:
 4139 04d8 6761696E 		.ascii	"gainAdjust\000"
 4139      41646A75 
 4139      737400
 4140              	.LASF13:
 4141 04e3 696E7431 		.ascii	"int16\000"
 4141      3600
 4142              	.LASF53:
 4143 04e9 4144435F 		.ascii	"ADC_SetOffset\000"
 4143      5365744F 
 4143      66667365 
 4143      7400
 4144              	.LASF89:
 4145 04f7 4144435F 		.ascii	"ADC_CountsPerVolt\000"
 4145      436F756E 
 4145      74735065 
 4145      72566F6C 
 4145      7400
 4146              	.LASF34:
 4147 0509 746D7052 		.ascii	"tmpReg\000"
 4147      656700
 4148              	.LASF50:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cccSVp0l.s 			page 110


 4149 0510 72657375 		.ascii	"result\000"
 4149      6C7400
 4150              	.LASF51:
 4151 0517 4144435F 		.ascii	"ADC_GetResult16\000"
 4151      47657452 
 4151      6573756C 
 4151      74313600 
 4152              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
